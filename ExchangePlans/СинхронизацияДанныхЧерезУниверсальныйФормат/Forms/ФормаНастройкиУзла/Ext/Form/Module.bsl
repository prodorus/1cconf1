////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, "СинхронизацияДанныхЧерезУниверсальныйФормат");
	ЗаполнитьСписокОграниченийДляПользователей();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма);
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоОрганизациямПриИзменении(Элемент)
	УстановитьДоступностьЭлементамФормы(Элементы.Организации);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоСкладамПриИзменении(Элемент)
	УстановитьДоступностьЭлементамФормы(Элементы.Склады);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементамФормы(ТекущаяСтраница = Неопределено)
	ЗначенияФлаговИСтраниц = Новый Соответствие();
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Организации, ИспользоватьОтборПоОрганизациям);
	ЗначенияФлаговИСтраниц.Вставить(Элементы.Склады, ИспользоватьОтборПоСкладам);
	
	СтраницыОтбора = Новый Массив();
	Если ИспользоватьОтборПоОрганизациям Тогда
		СтраницыОтбора.Добавить(Элементы.Организации);
	КонецЕсли;
	Если ИспользоватьОтборПоСкладам Тогда
		СтраницыОтбора.Добавить(Элементы.Склады);
	КонецЕсли;
	Элементы.Страницы.ТекущаяСтраница = Элементы.РазделыУчета;

	Элементы.Организации.Доступность = ИспользоватьОтборПоОрганизациям;
	Элементы.Склады.Доступность = ИспользоватьОтборПоСкладам;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьЭлементамФормы();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПодготовитьДанныеДляЗакрытияФормы();
	
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
&НаСервере
Процедура ЗаполнитьСписокОграниченийДляПользователей()
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяОрганизации.Организация,
	|	ВременнаяОрганизации.Выбран
	// 0
	|ПОМЕСТИТЬ ВременнаяОрганизации
	|ИЗ
	|	&Организации КАК ВременнаяОрганизации
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяСклады.Склад,
	|	ВременнаяСклады.Выбран
	// 1
	|ПОМЕСТИТЬ ВременнаяСклады
	|ИЗ
	|	&Склады КАК ВременнаяСклады
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ВЫБОР	КОГДА ВременнаяОрганизации.Организация ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ              КАК Выбран
	// 2
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяОрганизации
	|ПО
	|	ВременнаяОрганизации.Организация = Организации.Ссылка
	|ГДЕ
	|	(НЕ Организации.ПометкаУдаления)
	|;
	/////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Склады.Ссылка КАК Склад,
	|	ВЫБОР	КОГДА ВременнаяСклады.Склад ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ              КАК Выбран
	// 3
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ВременнаяСклады
	|ПО
	|	ВременнаяСклады.Склад = Склады.Ссылка
	|ГДЕ
	|	(НЕ Склады.ЭтоГруппа)
	|	И (НЕ Склады.ПометкаУдаления)
	|;
	|";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организации", Организации.Выгрузить());
	Запрос.УстановитьПараметр("Склады", Склады.Выгрузить());
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Организации.Загрузить(РезультатЗапроса[2].Выгрузить());
	Склады.Загрузить(РезультатЗапроса[3].Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДанныеДляЗакрытияФормы()
	УдалитьСтрокиИзТЧ("Организации");
	УдалитьСтрокиИзТЧ("Склады");
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиИзТЧ(ИмяТЧ)
	
	МассивСтрок = ЭтаФорма[ИмяТЧ].НайтиСтроки(Новый Структура("Выбран", Ложь));
	Для каждого СтрокаТЧ Из МассивСтрок Цикл
		ЭтаФорма[ИмяТЧ].Удалить(СтрокаТЧ);
	КонецЦикла;
	
КонецПроцедуры

// ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ЗаполнитьСоглашениеОбОбменеЭД(ПараметрКоманды, ПараметрыВыполненияКоманды);
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСоглашениеОбОбменеЭД(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ИмяМакета = "СоглашениеОбОбменеЭлектроннымиДокументами_doc";
	
	МакетИДанныеОбъекта = ПодготовитьДанныеПечатиСоглашенияПолучитьМакет(ПараметрКоманды, ИмяМакета);
	НапечататьСогласиеНаОбработкуПерсональныхДанныхСубъекта(ПараметрКоманды, МакетИДанныеОбъекта, ИмяМакета,
		МакетИДанныеОбъекта.ЛокальныйКаталогФайловПечати, ПараметрыВыполненияКоманды.Источник.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеПечатиСоглашенияПолучитьМакет(НастройкаЭДО, ИмяМакета)
	
	РеквизитыНастройки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НастройкаЭДО, "Организация, Контрагент");
	
	Субъект = Новый Структура;
	Субъект.Вставить("НастройкаЭДО", НастройкаЭДО);
	Субъект.Вставить("Город",        "г. Москва");
	Субъект.Вставить("Дата",         Формат(ТекущаяДатаСеанса(), "ДЛФ=DD"));
	Субъект.Вставить("Сторона1",     РеквизитыНастройки.Организация);
	Субъект.Вставить("Сторона2",     РеквизитыНастройки.Контрагент);
	
	Субъекты = Новый Массив;
	Субъекты.Добавить(Субъект);
	
	ИмяМенеджераПечати = "Справочник.СоглашенияОбИспользованииЭД";
	МакетИДанныеОбъекта = Справочники.СоглашенияОбИспользованииЭД.МакетыИДанныеОбъектовДляПечати(ИмяМенеджераПечати, ИмяМакета, Субъекты);
	
	Возврат МакетИДанныеОбъекта;
	
КонецФункции

&НаКлиенте
Процедура НапечататьСогласиеНаОбработкуПерсональныхДанныхСубъекта(СубъектКлюч, МакетИДанныеОбъекта, ИмяМакета, ЛокальныйКаталогФайловПечати, УникальныйИдентификатор)
	
	ТипМакета				= МакетИДанныеОбъекта.Макеты.ТипыМакетов[ИмяМакета];
	Области					= МакетИДанныеОбъекта.Макеты.ОписаниеОбластей;
	ДвоичныеДанныеМакетов	= МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	ДанныеОбъекта = МакетИДанныеОбъекта.Данные[СубъектКлюч][ИмяМакета];
	
	Макет = ИнициализироватьМакетОфисногоДокумента(ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета, ИмяМакета);
	Если Макет = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытьОкноПечатнойФормы = Ложь;
	Попытка
		ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета, Макет.НастройкиСтраницыМакета);
		Если ПечатнаяФорма = Неопределено Тогда
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			Возврат;
		КонецЕсли;
		
		// Вывод обычных областей с параметрами.
		Область = ОбластьМакета(Макет, Области[ИмяМакета]["Шапка"]);
		УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
		
#Если НЕ ВебКлиент Тогда
		ВременныйФайл = ПолучитьИмяВременногоФайла(ТипМакета);
		ПечатнаяФорма.COMСоединение.ActiveDocument.SaveAs(ВременныйФайл);
		УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, Истина);
		ПоместитьДанныеСоглашенияВоВременноеХранилище(СубъектКлюч, Новый ДвоичныеДанные(ВременныйФайл), УникальныйИдентификатор);
		ОткрытьФорму("Документ.ЭлектронныйДокументИсходящий.Форма.ФормаПросмотраЭД", Новый Структура("ДокументОснование", СубъектКлюч));
		УдалитьФайлы(ВременныйФайл);
#КонецЕсли
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗакрытьОкноПечатнойФормы = Истина;
	КонецПопытки;
	
	УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, ЗакрытьОкноПечатнойФормы);
	УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьДанныеСоглашенияВоВременноеХранилище(НастройкаЭДО, ДвоичныеДанныеФайла, Знач УникальныйИдентификатор)
	
	СтруктураФайла  = Новый Структура;
	СтруктураФайла.Вставить("ИмяФайла",                           "Соглашение об обмене электронными документами.doc");
	СтруктураФайла.Вставить("Наименование",                       "Соглашение об обмене электронными документами");
	СтруктураФайла.Вставить("Расширение",                         "doc");
	СтруктураФайла.Вставить("Размер",                             ДвоичныеДанныеФайла.Размер());
	СтруктураФайла.Вставить("Редактирует",                        Неопределено);
	СтруктураФайла.Вставить("ПодписанЭЦП",                        Ложь);
	СтруктураФайла.Вставить("Зашифрован",                         Ложь);
	СтруктураФайла.Вставить("ФайлРедактируется",                  Ложь);
	СтруктураФайла.Вставить("СсылкаНаДвоичныеДанныеФайла",        ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, Новый УникальныйИдентификатор));
	СтруктураФайла.Вставить("ДатаМодификацииУниверсальная",       ТекущаяУниверсальнаяДата());
	СтруктураФайла.Вставить("ФайлРедактируетТекущийПользователь", Ложь);
	СтруктураФайла.Вставить("ОтносительныйПуть",                  ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Строка(УникальныйИдентификатор)));
	АдресХранилища = ПоместитьВоВременноеХранилище(СтруктураФайла, Новый УникальныйИдентификатор);
	ЭлектронныеДокументыСлужебный.ПоместитьПараметрВПараметрыКлиентаНаСервере(НастройкаЭДО, АдресХранилища);
	
КонецПроцедуры


// Создает COM-соединение с макетом. В дальнейшем это соединение используется при получении из него областей (тегов и
// таблиц).
// Функция не работает в любых других браузерах кроме IE.
// Перед выполнением функции в веб-клиенте необходимо подключить расширение работы с файлами.
//
// Параметры:
//  ДвоичныеДанныеМакета - ДвоичныеДанные - двоичные данные макета;
//  ТипМакета            - Строка - тип макета печатной формы "DOC" или "ODT";
//  ИмяМакета            - Строка - имя, которое будет использовано при создании временного файла макета.
// Возвращаемое значение:
//  Структура.
//
&НаКлиенте
Функция ИнициализироватьМакетОфисногоДокумента(Знач ДвоичныеДанныеМакета, Знач ТипМакета, Знач ИмяМакета = "") Экспорт
	
	Макет = Неопределено;
	ИмяВременногоФайла = "";
	
	#Если ВебКлиент Тогда
		Если ПустаяСтрока(ИмяМакета) Тогда
			ИмяВременногоФайла = Строка(Новый УникальныйИдентификатор) + "." + НРег(ТипМакета);
		Иначе
			ИмяВременногоФайла = ИмяМакета + "." + НРег(ТипМакета);
		КонецЕсли;
	#КонецЕсли
	
	Если ВРег(ТипМакета) = "DOC" Тогда
		Макет = УправлениеПечатьюMSWordКлиент.ПолучитьМакетMSWord(ДвоичныеДанныеМакета, ИмяВременногоФайла);
		Макет.Вставить("Тип", "DOC");
	ИначеЕсли ВРег(ТипМакета) = "ODT" Тогда
		Макет = УправлениеПечатьюOOWriterКлиент.ПолучитьМакетOOWriter(ДвоичныеДанныеМакета, ИмяВременногоФайла);
		Макет.Вставить("Тип", "ODT");
		Макет.Вставить("НастройкиСтраницыМакета", Неопределено);
	КонецЕсли;
	
	Возврат Макет;
	
КонецФункции

// Получает область из макета печатной формы.
//
// Параметры:
//   СсылкаНаМакет   - Структура - ссылка на макет печатной формы.
//   ОписаниеОбласти - Структура - описание области.
//
// Возвращаемое значение
//   Структура - область из макета.
//
&НаКлиенте
Функция ОбластьМакета(Знач СсылкаНаМакет, Знач ОписаниеОбласти) Экспорт
	
	Область = Неопределено;
	Если СсылкаНаМакет.Тип = "DOC" Тогда
		
		Если		ОписаниеОбласти.ТипОбласти = "ВерхнийКолонтитул" Тогда
			Область = УправлениеПечатьюMSWordКлиент.ПолучитьОбластьВерхнегоКолонтитула(СсылкаНаМакет);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "НижнийКолонтитул" Тогда
			Область = УправлениеПечатьюMSWordКлиент.ПолучитьОбластьНижнегоКолонтитула(СсылкаНаМакет);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "Общая" Тогда
			Область = УправлениеПечатьюMSWordКлиент.ПолучитьОбластьМакетаMSWord(СсылкаНаМакет, ОписаниеОбласти.ИмяОбласти, 1, 0);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "СтрокаТаблицы" Тогда
			Область = УправлениеПечатьюMSWordКлиент.ПолучитьОбластьМакетаMSWord(СсылкаНаМакет, ОписаниеОбласти.ИмяОбласти);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "Список" Тогда
			Область = УправлениеПечатьюMSWordКлиент.ПолучитьОбластьМакетаMSWord(СсылкаНаМакет, ОписаниеОбласти.ИмяОбласти, 1, 0);
		Иначе
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Тип области не указан или указан некорректно: %1.'"), ОписаниеОбласти.ТипОбласти);
		КонецЕсли;
		
		Если Область <> Неопределено Тогда
			Область.Вставить("ОписаниеОбласти", ОписаниеОбласти);
		КонецЕсли;
	ИначеЕсли СсылкаНаМакет.Тип = "ODT" Тогда
		
		Если		ОписаниеОбласти.ТипОбласти = "ВерхнийКолонтитул" Тогда
			Область = УправлениеПечатьюOOWriterКлиент.ПолучитьОбластьВерхнегоКолонтитула(СсылкаНаМакет);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "НижнийКолонтитул" Тогда
			Область = УправлениеПечатьюOOWriterКлиент.ПолучитьОбластьНижнегоКолонтитула(СсылкаНаМакет);
		ИначеЕсли	ОписаниеОбласти.ТипОбласти = "Общая"
				ИЛИ ОписаниеОбласти.ТипОбласти = "СтрокаТаблицы"
				ИЛИ ОписаниеОбласти.ТипОбласти = "Список" Тогда
			Область = УправлениеПечатьюOOWriterКлиент.ПолучитьОбластьМакета(СсылкаНаМакет, ОписаниеОбласти.ИмяОбласти);
		Иначе
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Тип области не указан или указан некорректно: %1.'"), ОписаниеОбласти.ИмяОбласти);
		КонецЕсли;
		
		Если Область <> Неопределено Тогда
			Область.Вставить("ОписаниеОбласти", ОписаниеОбласти);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Область;
	
КонецФункции

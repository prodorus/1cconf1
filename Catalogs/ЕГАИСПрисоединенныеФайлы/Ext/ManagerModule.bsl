#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
//	Возврат ПрисоединенныеФайлы.РеквизитыРедактируемыеВГрупповойОбработке();
	
КонецФункции

//#КонецОбласти

//#Область ОбновлениеИнформационнойБазы

Функция ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕГАИСПрисоединенныеФайлы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЕГАИСПрисоединенныеФайлы КАК ЕГАИСПрисоединенныеФайлы
	|ГДЕ
	|	ЕГАИСПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовЕГАИС.Входящий)
	|	И ЕГАИСПрисоединенныеФайлы.Операция В (ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.КвитанцияПроведенЕГАИС), ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.КвитанцияПолученЕГАИС))";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(МассивСсылок) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.ЕГАИСПрисоединенныеФайлы";
	МетаданныеОбъекта = Метаданные.Справочники.ЕГАИСПрисоединенныеФайлы;
	
	ТаблицаСоответствияДокументовТипамЕГАИС = Перечисления.ВидыДокументовЕГАИС.ТаблицаСоответствияДокументовТипамЕГАИС();
	АбстрактныеОперации = Перечисления.ВидыДокументовЕГАИС.АбстрактныеОперации();
	
	Для Каждого Выборка Из МассивСсылок Цикл
		
		ВходящееСообщениеТекстСообщенияXML = ИнтеграцияЕГАИС.ТекстСообщенияXMLИзПротокола(Выборка);
		ОбъектXDTO = Неопределено;
		Если ЗначениеЗаполнено(ВходящееСообщениеТекстСообщенияXML) Тогда
			
			ТекстОшибки = "";
			
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.УстановитьСтроку(ВходящееСообщениеТекстСообщенияXML);
			
			Попытка
				
				ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ИнтеграцияЕГАИС.ОбъектXDTOПоИмениСвойства(ИнтеграцияЕГАИС.КорневоеПространствоИмен(), "Documents").Тип());
				
			Исключение
				
				ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				
				Попытка
					
					ОбъектXDTO = ИнтеграцияЕГАИС.ПреобразоватьПроизвольныйОбъектXDTOВОбъектXDTO(
						ИнтеграцияЕГАИС.ПроизвольныйОбъектXDTOПоТекстуСообщенияXML(ВходящееСообщениеТекстСообщенияXML),
						ИнтеграцияЕГАИС.ОбъектXDTOПоИмениСвойства(ИнтеграцияЕГАИС.КорневоеПространствоИмен(), "Documents", Неопределено));
					
				Исключение
					
					ТекстОшибки = ПодробноеПредставлениеОшибки;
					
				КонецПопытки;
				
			КонецПопытки;
			
			Если ЗначениеЗаполнено(ТекстОшибки) Тогда
				
				// Не удалось прочитать текст сообщения XML.
				ВходящееСообщениеТекстСообщенияXML = "";
				
			КонецЕсли;
			
		Иначе
			
			// Текст сообщения XML отсутствует.
			ВходящееСообщениеТекстСообщенияXML = "";
			
		КонецЕсли;
		
		ТипЕГАИС          = Неопределено;
		ЗагруженныйОбъект = Неопределено;
		Операция          = Неопределено;
		
		Если ОбъектXDTO <> Неопределено Тогда
			Попытка
				ДокументыПоТипамЕГАИС = ИнтеграцияЕГАИС.ОбъектXDTOВСтруктуру(ОбъектXDTO.Document);
				Для Каждого КлючИЗначение Из ДокументыПоТипамЕГАИС Цикл
					Если КлючИЗначение.Значение <> Неопределено Тогда
						ТипЕГАИС                  = КлючИЗначение.Ключ;
						ЗагруженныйОбъект         = ДокументыПоТипамЕГАИС[ТипЕГАИС];
						ВидДокументаИФорматОбмена = Перечисления.ВидыДокументовЕГАИС.ДанныеДокументаПоТипуЕГАИС(
							ТипЕГАИС, ТаблицаСоответствияДокументовТипамЕГАИС);
						Операция                  = ВидДокументаИФорматОбмена.ВидДокументаЕГАИС;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			Исключение
				ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			КонецПопытки;
		КонецЕсли;
		
		ЗаписьПротокола = Выборка.ПолучитьОбъект();
		
		Если ЗаписьПротокола = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗагруженныйОбъект <> Неопределено 
			И (Операция = Перечисления.ВидыДокументовЕГАИС.КвитанцияПроведенЕГАИС 
				ИЛИ Операция = Перечисления.ВидыДокументовЕГАИС.КвитанцияПолученЕГАИС) Тогда
				Если ИнтеграцияЕГАИСКлиентСервер.ЕстьРеквизитОбъекта(ЗагруженныйОбъект, "OperationResult")
					И ЗагруженныйОбъект.OperationResult <> Неопределено Тогда
				Операция = Перечисления.ВидыДокументовЕГАИС.КвитанцияПроведенЕГАИС;
			ИначеЕсли ИнтеграцияЕГАИСКлиентСервер.ЕстьРеквизитОбъекта(ЗагруженныйОбъект, "Result")
				И ЗагруженныйОбъект.Result <> Неопределено Тогда
				Операция = Перечисления.ВидыДокументовЕГАИС.КвитанцияПолученЕГАИС;
			КонецЕсли;
		КонецЕсли;
		
		СтатусОбработки = Неопределено;
		
		Если ЗагруженныйОбъект <> Неопределено Тогда
			
			Если Операция = Перечисления.ВидыДокументовЕГАИС.КвитанцияПроведенЕГАИС Тогда
			
				ОперацияВыполнена = (ВРег(ЗагруженныйОбъект.OperationResult.OperationResult) <> ВРег("Rejected"));
				
				Если ВРег(ЗагруженныйОбъект.OperationResult.OperationName) = ВРег("Confirm")
					И ОперацияВыполнена Тогда
					
					СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ДокументПроведен;
					
				ИначеЕсли ВРег(ЗагруженныйОбъект.OperationResult.OperationName) = ВРег("UnConfirm")
					И ОперацияВыполнена Тогда
					
					СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ДокументРаспроведен;
					
				Иначе
					
					СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка;
					
				КонецЕсли;
			КонецЕсли;
			
			Если Операция = Перечисления.ВидыДокументовЕГАИС.КвитанцияПолученЕГАИС Тогда
			
				Если ВРег(ЗагруженныйОбъект.Result.Conclusion) = ВРег("Rejected") Тогда
					
					СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.Ошибка;
					
				Иначе
					
					СтатусОбработки = Перечисления.СтатусыОбработкиСообщенийЕГАИС.ОбрабатываетсяЕГАИС;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтатусОбработки <> Неопределено ИЛИ Операция <> Неопределено И АбстрактныеОперации.Найти(Операция) = Неопределено Тогда
			Если СтатусОбработки <> Неопределено Тогда
				ЗаписьПротокола.СтатусОбработки = СтатусОбработки;
			КонецЕсли;
			
			Если Операция <> Неопределено И АбстрактныеОперации.Найти(Операция) = Неопределено Тогда
				ЗаписьПротокола.Операция = Операция;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЗаписьПротокола);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//#КонецОбласти

#КонецЕсли

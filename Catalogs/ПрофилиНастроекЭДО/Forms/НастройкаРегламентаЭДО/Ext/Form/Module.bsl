
////////////////////////////////////////////////////////////
// ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИсходящийДокумент = Параметры.ИсходящийДокумент;
	
	ИспользоватьЭЦП = Параметры.ИспользоватьЭЦП;
	ТребуетсяИзвещениеОПолучении = Параметры.ТребуетсяИзвещениеОПолучении;
	ТребуетсяОтветнаяПодпись = Параметры.ТребуетсяОтветнаяПодпись;
	ИспользоватьУПД = Параметры.ИспользоватьУПД;
	
	ИспользоватьЭЦПВидимость = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции(
			"ИспользоватьЭлектронныеЦифровыеПодписи");

	УстановитьВидимость(ИспользоватьЭЦПВидимость);
	ЗаполнитьТекстПоясняющейНадписи(ИспользоватьЭЦПВидимость И ИспользоватьЭЦП);
	УстановитьДоступность(Параметры.НастройкиРегламентаЭДО);
	
КонецПроцедуры


////////////////////////////////////////////////////////////
// ОбработчикиСобытийПолейФормы

&НаКлиенте
Процедура ИспользоватьЭЦППриИзменении(Элемент)
	
	Если Не ИсходящийДокумент = ПредопределенноеЗначение("Перечисление.ВидыЭД.СчетНаОплату") Тогда
		ТребуетсяОтветнаяПодпись = ИспользоватьЭЦП;
		Элементы.ОжидатьОтветнуюПодпись.Доступность = ИспользоватьЭЦП;
	КонецЕсли;
	
	ЗаполнитьТекстПоясняющейНадписи();
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьИзвещениеОПолученииПриИзменении(Элемент)
	
	ЗаполнитьТекстПоясняющейНадписи();
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьОтветнуюПодписьПриИзменении(Элемент)
	
	Если Не ТребуетсяОтветнаяПодпись Тогда
		ТекстВопроса = НСтр("ru = 'Отказ от ответной подписи разрешается, если:
			|- документ выписан на оказание услуг, по которым ГК РФ не требует актирования;
			|- в соглашении об обмене электронными документами предусмотрено отсутствие ответной подписи для данного вида документа.
			|Если документ не соответствует перечисленным критериям, отказ от ожидания ответной подписи может привести к тому, что документ будет признан недействительным.
			|
			|Вы действительно хотите отказаться от ожидания ответной подписи?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет,"");
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ТребуетсяОтветнаяПодпись = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТекстПоясняющейНадписи();
	
КонецПроцедуры


////////////////////////////////////////////////////////////
// ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ПараметрыЗакрытия = ЭлектронныеДокументыСлужебныйКлиент.СвойстваДокументооборотаЭД();
	
	ПараметрыЗакрытия.ИсходящийДокумент = ИсходящийДокумент;
	ПараметрыЗакрытия.ИспользоватьЭЦП = ИспользоватьЭЦП;
	
	ПараметрыЗакрытия.ТребуетсяИзвещениеОПолучении = ТребуетсяИзвещениеОПолучении;
	ПараметрыЗакрытия.ТребуетсяОтветнаяПодпись = ТребуетсяОтветнаяПодпись;
	
	// Дополнительные служебные свойства
	ПараметрыЗакрытия.Вставить("Модифицированность", Модифицированность);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////
// СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТекстПоясняющейНадписи(ИспользоватьЭЦППризнак = Неопределено)
	
	Если ИспользоватьЭЦППризнак = Неопределено Тогда
		ФОИспользоватьЭЦП = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции(
			"ИспользоватьЭлектронныеЦифровыеПодписи");
		ИспользоватьЭЦППризнак = ИспользоватьЭЦП И ФОИспользоватьЭЦП;
	КонецЕсли;
	
	ТекстНадписи = "";
	
	Если ИспользоватьЭЦППризнак Тогда
		ТекстНадписи = НСтр("ru = 'Документ будет подписываться электронной подписью;'");
	Иначе
		ТекстНадписи = НСтр("ru = 'Документ не будет подписываться электронной подписью;'");
	КонецЕсли;
	
	Если ТребуетсяИзвещениеОПолучении Тогда
		ТекстНадписи = ТекстНадписи + Символы.ПС + НСтр("ru = 'ожидается извещение о получении документа;'");
	Иначе
		ТекстНадписи = ТекстНадписи + Символы.ПС + НСтр("ru = 'извещение о получении документа не требуется;'");
	КонецЕсли;
	
	Если ТребуетсяОтветнаяПодпись И ИспользоватьЭЦППризнак Тогда
		ТекстНадписи = ТекстНадписи + Символы.ПС + НСтр("ru = 'ожидается ответная подпись документа.'");
	Иначе
		Если ИспользоватьУПД И ИсходящийДокумент = Перечисления.ВидыЭД.СчетФактура Тогда
			ТекстНадписи = ТекстНадписи + Символы.ПС + НСтр("ru = '* ответная подпись не требуется для документов оказания услуг.'");
		Иначе
			ТекстНадписи = ТекстНадписи + Символы.ПС + НСтр("ru = 'ответная подпись документа не требуется.'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ДекорацияПоясняющийТекст.Заголовок = ТекстНадписи;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность(НастройкиРегламента)
	
	Элементы.ИспользоватьЭЦП.Доступность = НастройкиРегламента.РедактироватьПодпись;
	Элементы.ОжидатьИзвещениеОПолучении.Доступность = НастройкиРегламента.РедактироватьИзвещение;
	Элементы.ОжидатьОтветнуюПодпись.Доступность = НастройкиРегламента.РедактироватьОтветнуюПодпись И ИспользоватьЭЦП;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость(ИспользоватьЭЦПВидимость = Неопределено)
	
	Если ИспользоватьЭЦПВидимость = Неопределено Тогда
		ИспользоватьЭЦПВидимость = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции(
			"ИспользоватьЭлектронныеЦифровыеПодписи");
	КонецЕсли;
	
	Элементы.ИспользоватьЭЦП.Видимость = ИспользоватьЭЦПВидимость;
	Элементы.ОжидатьОтветнуюПодпись.Видимость = ИспользоватьЭЦПВидимость;
	
КонецПроцедуры










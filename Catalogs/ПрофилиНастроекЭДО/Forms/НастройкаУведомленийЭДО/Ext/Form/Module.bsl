////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	
	// Получение текущего состояния настроек.
	АдресУведомлений = Параметры.ЭлектроннаяПочта;
		
	УведомлятьОСобытиях = Параметры.ВключитьПодписку;
	УведомлятьОНовыхПриглашениях = Параметры.Приглашения;
	УведомлятьОбОтветахКонтрагентов= Параметры.Ответы;
	УведомлятьОНовыхДокументах = Параметры.НовыеЭД;
	УведомлятьОНеОбработанныхДокументах = Параметры.СтарыеЭД;
	УведомлятьОбОкончанииСрокаДействияСертификата = Параметры.Сертификаты;
	
	ПрофильНастроек = Параметры.ПрофильНастроек;
	ИдентификаторОрганизации = Параметры.ИдентификаторОрганизации;
	
	УстановитьДоступность(ЭтаФорма);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура УведомлятьОСобытияхПриИзменении(Элемент)
	
	УстановитьДоступность(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ОчиститьСообщения();
	
	ИзменитьПараметрыПодписки();
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("УведомлятьОСобытиях", УведомлятьОСобытиях);
	ПараметрыЗакрытия.Вставить("ЭлектроннаяПочта", АдресУведомлений);
	
	Закрыть(ПараметрыЗакрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ИзменитьПараметрыПодписки();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ


&НаКлиенте
Процедура ИзменитьПараметрыПодписки()
	
	
	Если УведомлятьОСобытиях Тогда
		
		ОшибкаЗаполнения = Ложь;
		
		Если Не ЕстьВключенныеСобытия() Тогда
			ОшибкаЗаполнения = Истина;
		КонецЕсли;

		Если Не ПроверитьЗаполнение() Тогда
			ОшибкаЗаполнения = Истина;
		КонецЕсли;
		
		Если ОшибкаЗаполнения Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	 
	СвойстваПрофиля = Новый Структура;
	СвойстваПрофиля.Вставить("Профиль", ПрофильНастроек);
	СвойстваПрофиля.Вставить("ИдентификаторОрганизации", ИдентификаторОрганизации);
	СвойстваПрофиля.Вставить("СпособОбменаЭД", ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО"));
	
	ПараметрыУведомления = ПараметрыПодписок();
	АдресРесурса = "SetSubscriptions?"+СформироватьАдресСтроки(ПараметрыУведомления);
	СвойстваПрофиля.Вставить("АдресРесурса", АдресРесурса);
	
	ЭлектронныеДокументыСлужебныйКлиент.ЗаписатьСвойстваУведомленийЭДО(АдресРесурса, СвойстваПрофиля);
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьВключенныеСобытия()
	
	Результат = Ложь;
	Если УведомлятьОбОкончанииСрокаДействияСертификата
		Или УведомлятьОбОтветахКонтрагентов
		Или УведомлятьОНеОбработанныхДокументах
		Или УведомлятьОНовыхДокументах
		Или УведомлятьОНовыхПриглашениях Тогда
		Результат = Истина;
	КонецЕсли;
	
	Если Не Результат Тогда
		
		ТекстСообщения = НСтр("ru = 'Нет событий для уведомления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"УведомлятьОНовыхДокументах");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПараметрыПодписок()
	
	ПараметрыУведомления = Новый Структура();
	ПараметрыУведомления.Вставить("Total", ЗначениеСтатуса(УведомлятьОСобытиях));
	ПараметрыУведомления.Вставить("NewInvitations", ЗначениеСтатуса(УведомлятьОНовыхПриглашениях));
	ПараметрыУведомления.Вставить("NewInvitationResults", ЗначениеСтатуса(УведомлятьОбОтветахКонтрагентов));
	ПараметрыУведомления.Вставить("NewMessages", ЗначениеСтатуса(УведомлятьОНовыхДокументах));
	ПараметрыУведомления.Вставить("UnfinishedMessages", ЗначениеСтатуса(УведомлятьОНеОбработанныхДокументах));
	ПараметрыУведомления.Вставить("CertExpiration", ЗначениеСтатуса(УведомлятьОбОкончанииСрокаДействияСертификата));
	ПараметрыУведомления.Вставить("Mail", АдресУведомлений);
	
	Возврат ПараметрыУведомления;
	
КонецФункции

&НаКлиенте
Функция ЗначениеСтатуса(ЗначениеНаФорме)
	
	Если ЗначениеНаФорме = Истина Тогда
		Результат = "true";
	Иначе
		Результат = "false";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


&НаСервере
Функция СформироватьАдресСтроки(ПараметрыУведомления)
	
	Адрес = "";
	
	Для Каждого КлючЗначение Из ПараметрыУведомления Цикл
		
		Если ВРег(КлючЗначение.Ключ) = ВРег("Mail") Тогда
			Продолжить;
		КонецЕсли;
		
		Адрес = Адрес + ""+КлючЗначение.Ключ + "="+КлючЗначение.Значение + "&";
		
	КонецЦикла;
	
	Адрес = Адрес + "mail=" + ПараметрыУведомления.Mail;
	
	Возврат Адрес;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступность(Форма)
	
	Форма.Элементы.ГруппаСобытия.Доступность = Форма.УведомлятьОСобытиях;
	
КонецПроцедуры


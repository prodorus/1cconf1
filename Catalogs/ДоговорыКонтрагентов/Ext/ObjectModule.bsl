////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция проверяет, существуют ли ссылки на договор в движениях регистров накопления.
// Если есть - нельзя менять:
//  - Валюту взаиморасчетов
//  - Ведение взаиморасчетов.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Истина - если есть движения, Ложь - если нет.
//
Функция СуществуютСсылки() Экспорт

	Возврат ПолныеПрава.ПроверитьНаличиеСсылокНаДоговорКонтрагента(Ссылка);

КонецФункции //  СуществуютСсылки()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура вызывается перед записью элемента справочника.
//
Процедура ПередЗаписью(Отказ)

	// Проверим можно ли изменять реквизиты договора.
	// Проверка осуществляется только если записывается уже существующий договор
	Если НЕ ОбменДанными.Загрузка И НЕ ЭтоНовый() Тогда

		Если ЭтоГруппа Тогда

			// Для группы владельца менять нельзя
			Если Владелец <> Ссылка.Владелец Тогда

				Сообщить("Нельзя изменять контрагента для группы договоров.", СтатусСообщения.Важное);
				Отказ = Истина;

			КонецЕсли; 

		Иначе

			// Проверим возможность смены владельца для договора
			Если Владелец <> Ссылка.Владелец Тогда

				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				|	ДокументыПоДоговоруКонтрагента.Ссылка
				|ИЗ
				|	КритерийОтбора.ДокументыПоДоговоруКонтрагента(&Договор) КАК ДокументыПоДоговоруКонтрагента";
				
				Запрос.УстановитьПараметр("Договор", Ссылка);
				
				Результат = Запрос.Выполнить();
				ЕстьДокументыПоДоговору = НЕ Результат.Пустой();
				
				Если ЕстьДокументыПоДоговору Тогда
					Сообщить("Существуют документы, оформленные по договору """ + Наименование + """.
							 |Контрагент договора не может быть изменен, элемент не записан.", 
							 СтатусСообщения.Важное);
					Отказ = Истина;
				КонецЕсли; 

			КонецЕсли; 

			// Проверим возможность смены способа ведения взаиморасчетов и валюты взаиморасчетов
			Если ВедениеВзаиморасчетов <> Ссылка.ВедениеВзаиморасчетов
			 ИЛИ ВалютаВзаиморасчетов <> Ссылка.ВалютаВзаиморасчетов 
			 ИЛИ ВидДоговора <> Ссылка.ВидДоговора
			 ИЛИ Организация <> Ссылка.Организация
			 ИЛИ РасчетыВУсловныхЕдиницах <> Ссылка.РасчетыВУсловныхЕдиницах
			 ИЛИ ВидУсловийДоговора <> Ссылка.ВидУсловийДоговора 
			 ИЛИ ВестиПоДокументамРасчетовСКонтрагентом <> Ссылка.ВестиПоДокументамРасчетовСКонтрагентом Тогда

				Если ЭтотОбъект.СуществуютСсылки() Тогда

					Сообщить("Существуют документы, проведенные по договору """ + Наименование + """.
							 |Реквизиты ""Организация"", ""Ведение взаиморасчетов"", ""Валюта взаиморасчетов"", ""Вид договора"", 
							 |""По документам расчетов с контрагентом"", ""Расчеты в условных единицах"" и ""Условия выполнения договора"" не могут быть изменены, элемент не записан.", 
							 СтатусСообщения.Важное);
					Отказ = Истина;

				КонецЕсли;

			КонецЕсли;
			Если  ОбособленныйУчетТоваровПоЗаказамПокупателей<>Ссылка.ОбособленныйУчетТоваровПоЗаказамПокупателей Тогда
				Если ПолныеПрава.ПроверитьНаличиеСсылокНаДоговорКонтрагентаВЗаказахПокупателей(Ссылка) Тогда
					Сообщить("Существуют заказы покупателей, проведенные по договору """ + Наименование + """.
					|Реквизит ""Обособленный учет товаров по заказам покупателей"" не может быть изменен, элемент не записан.", 
					СтатусСообщения.Важное);
					Отказ = Истина;

				КонецЕсли;
				
			КонецЕсли;
			
			Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ИспользуетсяВГосКонтрактах") Тогда
				Отказ = Истина;
				ЭтотОбъект.ДополнительныеСвойства.Удалить("ИспользуетсяВГосКонтрактах");
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	// Проверим заполнение и очистим неиспользуемые реквизиты элемента договора.
	Если Не ЭтоГруппа Тогда

		// Проверим, заполнена ли валюта.
		Если НЕ ОбменДанными.Загрузка И НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
			Сообщить("Не указана валюта договора.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;

		// Проверим, заполнена ли организация.
		Если НЕ ОбменДанными.Загрузка И НЕ ЗначениеЗаполнено(Организация) Тогда
			Сообщить("Не указана организация, от которой заключен договор.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;

		// Проверим, заполнен ли способ ведения взаиморасчетов.
		Если НЕ ОбменДанными.Загрузка И НЕ ЗначениеЗаполнено(ВедениеВзаиморасчетов) Тогда
			Сообщить("Не указан способ ведения взаиморасчетов по договору.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;

		// Проверим, заполнен ли вид договора.
		Если НЕ ОбменДанными.Загрузка Тогда
		
			Если НЕ ЗначениеЗаполнено(ВидДоговора) Тогда
				Сообщить("Не указан вид договора.", СтатусСообщения.Важное);
				Отказ = Истина;
			Иначе
				// Проверим, правильно ли заполнен вид договора
				Если (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером)
					И НЕ Владелец.Покупатель Тогда
					Сообщить("Вид договора ""С покупателем"" может устанавливаться только когда у контрагента указано что он является покупателем.", СтатусСообщения.Важное);
					Отказ = Истина;
				ИначеЕсли (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком ИЛИ ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом)
					И НЕ Владелец.Поставщик Тогда
					Сообщить("Вид договора ""С поставщиком"" может устанавливаться только когда у контрагента указано что он является поставщиком.", СтатусСообщения.Важное);
					Отказ = Истина;
				ИначеЕсли ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее
					И ВестиПоДокументамРасчетовСКонтрагентом Тогда
					Сообщить("Флажок ""По документам расчетов с контрагентами"" не может устанавливаться у договоров с видом ""Прочее"".", СтатусСообщения.Важное);
					Отказ = Истина;
				КонецЕсли; 
			КонецЕсли;
		
		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Перем Контрагент;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	Контрагент = Владелец;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Владелец") Тогда
		Контрагент = ДанныеЗаполнения.Владелец;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидДоговора) Тогда
		Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
			ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
		Иначе
			Если Контрагент.Покупатель Тогда
				ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
			ИначеЕсли Контрагент.Поставщик Тогда
				ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
			Иначе
				ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее Тогда
		ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
	Иначе
		Если НЕ ЗначениеЗаполнено(ВедениеВзаиморасчетов) Тогда
			ВедениеВзаиморасчетов = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеВедениеВзаиморасчетовПоДоговорам");
			Если НЕ ЗначениеЗаполнено(ВедениеВзаиморасчетов) Тогда
				ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Контрагент.НеЯвляетсяРезидентом И ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
		РеализацияНаЭкспорт = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		ВалютаВзаиморасчетов = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяВалютаВзаиморасчетов");
		Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
			ВалютаВзаиморасчетов = Константы.ВалютаУправленческогоУчета.Получить();
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Если НЕ (ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Организация")) Тогда
			Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидУсловийДоговора) Тогда
		ВидУсловийДоговора = Перечисления.ВидыУсловийДоговоровВзаиморасчетов.БезДополнительныхУсловий;
	КонецЕсли;

	Если ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.Прочее Тогда
		ВестиПоДокументамРасчетовСКонтрагентом = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновныеРасчетыПоДокументамСКонтрагентами");
	КонецЕсли;

	Если (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком
	 ИЛИ  ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем)
	   И ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		РасчетыВУсловныхЕдиницах = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновныеРасчетыПоДоговоруВУсловныхЕдиницах");
	КонецЕсли;

	Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
		ПроцентПредоплаты = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойРазмерПредоплатыПоЗаказуПокупателя");
	КонецЕсли;

	Если ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом
	 ИЛИ ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам Тогда
		ОбособленныйУчетТоваровПоЗаказамПокупателей = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОбособленныйУчетТоваровПоЗаказамПокупателей");
	КонецЕсли;
КонецПроцедуры


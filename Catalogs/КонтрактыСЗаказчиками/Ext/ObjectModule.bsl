
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ДатаНачала >= ДатаОкончания Тогда
		ОбщегоНазначения.СообщитьОбОшибке(
			НСтр("ru = 'Дата окончания должна быть больше даты начала контракта'"), Отказ);
	КонецЕсли;

	Если КонтрактСУчастникомГОЗ Тогда
		ПроверяемыеРеквизиты.Добавить("ГосударственныйКонтракт");
	КонецЕсли;
	
	Для Каждого СтрокаКалькуляции Из КалькуляцияЗатрат Цикл
	
		Если СтрокаКалькуляции.Израсходовано > СтрокаКалькуляции.Сумма Тогда
			
			ТекстОшибки = СтрШаблон(НСтр("ru = 'В строке %1. Израсходовано может быть не больше суммы'"), СтрокаКалькуляции.НомерСтроки - 1);
			ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ);
		
		КонецЕсли; 
	
		Если СтрокаКалькуляции.СуммаКВозмещению > СтрокаКалькуляции.Сумма Тогда
			
			ТекстОшибки = СтрШаблон(НСтр("ru = 'В строке %1. Сумма к возмещению не может быть больше суммы'"), СтрокаКалькуляции.НомерСтроки - 1);
			ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ);
		
		КонецЕсли;
		
	КонецЦикла;
	
	Если СуммаКонтракта < ПланДоходов.Итог("Сумма") Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru = 'Сумма графика поступлений превышает сумму контракта.'"), Отказ);
			
	КонецЕсли;
	
	Если КонтрактСУчастникомГОЗ И СуммаПрибыли > 0.2 * СуммаКонтракта Тогда
		
		ТекстОшибки = НСтр("ru = 'Сумма прибыли превышает 20% от суммы контракта - %1.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Формат(0.2 * СуммаКонтракта, "ЧЦ=15; ЧДЦ=2"));
		ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если Не КонтрактСУчастникомГОЗ Тогда
		КалькуляцияЗатрат.Очистить();
		ГосударственныйКонтракт = Неопределено;
	КонецЕсли;
	
	ОбщегоНазначения275КлиентСервер.ПроверитьДоговор(Ссылка, Договор, Перечисления.ВидыДоговоровКонтрагентов.СПокупателем, "заказчиком", Отказ);
	
	Если Не ЭтотОбъект.ДополнительныеСвойства.Свойство("НеПроверятьОбщиеРеквизиты") Тогда
		Если ЗначениеЗаполнено(Договор) Тогда
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "Владелец,Организация");
			
			// Контракт с заказчиком (договор с покупателем)
			Если Реквизиты.Владелец <> Контрагент Тогда
				ТекстОшибки = СтрШаблон("%1 в договоре не совпадает с %2 в контракте", "Контрагент", "заказчиком");
				ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ);
			КонецЕсли;
			Если Реквизиты.Организация <> Владелец Тогда
				ТекстОшибки = СтрШаблон("%1 в договоре не совпадает с %2 в контракте", "Организация", "исполнителем");
				ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьСправочник();
	
	ДанныеЗаполненияТип = ТипЗнч(ДанныеЗаполнения);
	
	Если ДанныеЗаполненияТип = Тип("СправочникСсылка.ГосударственныеКонтракты") Тогда
		
		ОбработкаЗаполненияГосударственныеКонтракты(ДанныеЗаполнения);
		
	ИначеЕсли ДанныеЗаполненияТип = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		ОбработкаЗаполненияДоговорыКонтрагентов(ДанныеЗаполнения);
		
	ИначеЕсли ДанныеЗаполненияТип = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияГосударственныеКонтракты(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеЗаполнения.Ссылка КАК ГосударственныйКонтракт,
	|	ИСТИНА КАК КонтрактСУчастникомГОЗ
	|ИЗ
	|	Справочник.ГосударственныеКонтракты КАК ДанныеЗаполнения
	|ГДЕ
	|	ДанныеЗаполнения.Ссылка = &ДанныеЗаполнения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияДоговорыКонтрагентов(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеЗаполнения.Ссылка КАК Договор,
	|	ИСТИНА КАК КонтрактСУчастникомГОЗ,
	|	ДанныеЗаполнения.Владелец КАК Контрагент,
	|	ДанныеЗаполнения.Организация КАК Владелец,
	|	ДанныеЗаполнения.Дата,
	|	ДанныеЗаполнения.Номер
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДанныеЗаполнения
	|ГДЕ
	|	ДанныеЗаполнения.Ссылка = &ДанныеЗаполнения";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, , "Дата,Номер");
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ЭтотОбъект.Дата = Выборка.Дата;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Номер) Тогда
		ЭтотОбъект.Номер = Выборка.Номер;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьСправочник()
	
	КонтрактСУчастникомГОЗ = Истина;
	Ответственный = Пользователи.ТекущийПользователь();
	Состояние = Перечисления.СостоянияКонтрактов.Готовится;
	
	Контрагент = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Ответственный, "ОсновнойПокупатель");
	Владелец = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Ответственный, "ОсновнаяОрганизация");
	
КонецПроцедуры

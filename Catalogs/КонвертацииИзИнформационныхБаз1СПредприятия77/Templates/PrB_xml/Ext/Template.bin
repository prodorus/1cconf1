<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="РежимСовместимостиСБСП21">2.01</ВерсияФормата>
	<Ид>aa513a8c-9c5f-40a3-bac8-72782c602139    </Ид>
	<Наименование>ЗиК 355 --&gt; ЗУП 2.5.100.1</Наименование>
	<ДатаВремяСоздания>2016-03-28T17:29:49</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="7.7" ВерсияКонфигурации="7.70.355" СинонимКонфигурации="Зарплата+Кадры. Редакция 2.3">Зарплата+Кадры. Редакция 2.3</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.3.74.2" СинонимКонфигурации="Управление производственным предприятием, редакция 1.3">УправлениеПроизводственнымПредприятием</Приемник>
	<ПослеЗагрузкиПравилОбмена>// Кадровые данные всегда выгружаются все, а расчетные данные невозможно перенести
// ранее чем за 2006 год
Если ПустоеЗначение(ДатаНачала) = 1 Тогда
	ДатаНачала = Дата(2006, 1, 1);
КонецЕсли;

ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
ДатаНачалаУчета = ЖрнЗарплата.НачалоТекущегоПериода();

Если ДатаОкончания &lt; ДатаНачала Тогда
	ДатаОкончания = ДатаНачалаУчета-1;
КонецЕсли;
Если ДатаОкончания &lt; ДатаНачала Тогда
	ДатаОкончания = КонМесяца(ТекущаяДата());
КонецЕсли;

НомерСтроки = 0;
Если ТаблицаНастройкиПараметров.НайтиЗначение("ДатаНачалаУчета", НомерСтроки, "Имя") = 1 Тогда
	ТаблицаНастройкиПараметров.ПолучитьСтрокуПоНомеру(НомерСтроки);
	ТаблицаНастройкиПараметров.Значение = ?(КонМесяца(ДатаОкончания)+1 &lt; ДатаНачалаУчета, ДатаНачалаУчета, КонМесяца(ДатаОкончания)+1);
КонецЕсли;

// Временно, пока не будет доработан помощник переноса
НомерСтроки = 0;
Если ТаблицаНастройкиПараметров.НайтиЗначение("ПереноситьНДФЛПоДатуНачалаУчета", НомерСтроки, "Имя") = 1 Тогда
	ТаблицаНастройкиПараметров.ПолучитьСтрокуПоНомеру(НомерСтроки);
	ТаблицаНастройкиПараметров.Значение = 1;
КонецЕсли;</ПослеЗагрузкиПравилОбмена>
	<ПередВыгрузкойДанных>// Для ЗУП = 0, так как не требуется распределение по источникам финансирования
// Алгоритмы выгрузки будут работать быстрее
Параметры.РаспределятьПоИсточникамФинансирования = 0;

// Список выгруженных видов расчета
// Что бы не переносить в качестве базовых те начисления, которые не используются
// в программе
Параметры.ВыгруженныеВидыРасчета = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВыгруженныеВидыРасчета.НоваяКолонка("Наименование");
Параметры.ВыгруженныеВидыРасчета.НоваяКолонка("ВР");
Параметры.ВыгруженныеВидыРасчета.НоваяКолонка("ВидПВР");
Параметры.ВыгруженныеВидыРасчета.НоваяКолонка("НужнаБаза");

// Список выгруженных основных видов расчета, которые необходимо указывать
// в качестве базы, если указана оплата по окладу, тарифу или табелю
Параметры.ВыгруженныеНачисленияПоФормеТруда = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВыгруженныеНачисленияПоФормеТруда.НоваяКолонка("Наименование");
Параметры.ВыгруженныеНачисленияПоФормеТруда.НоваяКолонка("ВР");

// Список выгруженных видов расчета по простою, которые необходимо указывать
// в качестве базы, если указан ВР Простой
Параметры.ВыгруженныеНачисленияПоПростою = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВыгруженныеНачисленияПоПростою.НоваяКолонка("Наименование");
Параметры.ВыгруженныеНачисленияПоПростою.НоваяКолонка("ВР");

// Таблица шаблонов для настройки способа отражения в учете
Параметры.ТаблицаШаблонов = СоздатьОбъект("ТаблицаЗначений");
Параметры.ТаблицаШаблонов.НоваяКолонка("КодШаблона");
Параметры.ТаблицаШаблонов.НоваяКолонка("СпособОтражения");

// Заполним список ВР, которые переносить не нужно
ЗаполнитьСписокНепереносимыхВР();

// Добавляем сведени о конфигурации и ИБ
ВыгрузитьСведенияОбИБ();

// Выгрузить параметры выполнения алгоритмов загрузки
ВыгрузитьПараметрыВыполненияАлгоритмовЗагрузки();</ПередВыгрузкойДанных>
	<ПослеВыгрузкиДанных>Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	НомерПВД = ПравилаВыгрузкиСписок.НайтиЗначение("ПлановыеНачисленияИУдержания");
	Пометка = ПравилаВыгрузкиСписок.Пометка(НомерПВД);
	
	// Необходимо обязательно создать виды расчета
	Если (Пометка = 1) И (Константа.ЕстьВоенные = 1) Тогда
		ТЗВидаРасчета = ВернутьТЗВидаРасчета(ВидРасчета.ОкладПоЗваниюНадбавкаЗаРазряд);
		ВыгрузитьПоПравилу(ТЗВидаРасчета, , , , "ОсновныеНачисленияОрганизаций");
	КонецЕсли;
КонецЕсли;</ПослеВыгрузкиДанных>
	<ПослеЗагрузкиДанных>Если Параметры.ЗаполнитьГрафикиРаботы Тогда
	Выполнить(Алгоритмы.ЗаполнитьГрафикиРаботы);
КонецЕсли;

Если Параметры.ЗарегистрироватьРасчетыНалоговогоАгента Тогда
	Выполнить(Алгоритмы.ЗарегистрироватьРасчетыНалоговогоАгента);
КонецЕсли;

Если Параметры.ЗаполнитьКатегорииРасчета Тогда
	Выполнить(Алгоритмы.ЗаполнитьКатегорииРасчета);
КонецЕсли;</ПослеЗагрузкиДанных>
	<Параметры>
		<Параметр Имя="ВыгруженныеВидыРасчета                            " Наименование="Выгруженные виды расчета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгруженныеНачисленияПоПростою                    " Наименование="Выгруженные начисления по простою" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ВыгруженныеНачисленияПоФормеТруда                 " Наименование="Выгруженные начисления по форме труда" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ДатаНачалаУчета                                   " Наименование="Дата начала учета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Дата" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ЗаполнениеБазовыхНачислений                       " Наименование="Заполнение базовых начислений" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ЗаполнитьКатегорииРасчета                         " Наименование="Заполнить категории расчета" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ЗаполнитьПроизводственныйКалендарь                " Наименование="Заполнить производственный календарь" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ЗарегистрироватьРасчетыНалоговогоАгента           " Наименование="Зарегистрировать расчеты налогового агента" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ОбнулятьСальдо                                    " Наименование="Обнулить перенесенную задолженность по зарплате" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="Организация                                       " Наименование="Организация" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ПереноситьНДФЛПоДатуНачалаУчета                   " Наименование="Переносить НДФЛ по дату начала учета" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="РаспределятьПоИсточникамФинансирования            " Наименование="Распределять по источникам финансирования" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СписокНепереносимыхВР                             " Наименование="Список непереносимых ВР" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаКодовОКАТО                                 " Наименование="Таблица кодов ОКАТО" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаКодовОКТМО                                 " Наименование="Таблица кодов ОКТМО" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ТаблицаШаблонов                                   " Наименование="Таблица шаблонов" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="УстановитьЗначенияКонстант                        " Наименование="Установить значения констант" ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="УчетЗадолженностиПоМесяцам                        " Наименование="Взаиморасчеты по зарплате ведутся в разрезе месяцев ее начисления" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="Число" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="ФизическоеЛицоДляОтладкиВыгрузки                  " Наименование="Физическое лицо для отладки выгрузки" ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="true" ТипЗначения="СправочникСсылка.Сотрудники" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Правило>
			<Код>Константы</Код>
			<Наименование>Набор констант</Наименование>
			<Порядок>50</Порядок>
			<ПослеЗагрузки>СтрокаКонстант = "ИспользуетсяТрудЧленовЛетныхЭкипажей,ПрограммаБухгалтерскогоУчета,ИспользуетсяТрудФармацевтов,ИспользуетсяТрудЧленовЭкипажейМорскихСудов,ИспользуютсяРаботыСДосрочнойПенсией";
НаборКонстант = Константы.СоздатьНабор(СтрокаКонстант);
НаборКонстант.Прочитать();
ЗаполнитьЗначенияСвойств(НаборКонстант, Объект, СтрокаКонстант);
НаборКонстант.Записать();

Отказ = Истина;</ПослеЗагрузки>
			<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
			<Источник>КонстантыНабор</Источник>
			<Приемник>КонстантыНабор</Приемник>
			<Свойства>
				<Свойство>
					<Код>4</Код>
					<Наименование>ЕстьЛетчики --&gt; ИспользуетсяТрудЧленовЛетныхЭкипажей</Наименование>
					<Порядок>200</Порядок>
					<Источник Имя="ЕстьЛетчики" Вид="Свойство" Тип="Число"/>
					<Приемник Имя="ИспользуетсяТрудЧленовЛетныхЭкипажей" Вид="Реквизит" Тип="Булево"/>
				</Свойство>
				<Свойство Отключить="true">
					<Код>5</Код>
					<Наименование>ПрограммаБухучета --&gt; ПрограммаБухгалтерскогоУчета</Наименование>
					<Порядок>250</Порядок>
					<Источник Имя="ПрограммаБухучета" Вид="Свойство" Тип="ПеречислениеСсылка.БухгалтерскиеПрограммы"/>
					<Приемник Имя="ПрограммаБухгалтерскогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.ПрограммыБухгалтерскогоУчета"/>
					<КодПравилаКонвертации>ПрограммыБухгалтерскогоУчета                      </КодПравилаКонвертации>
				</Свойство>
				<Свойство>
					<Код>6</Код>
					<Наименование>ИспользуетсяТрудФармацевтов --&gt; ИспользуетсяТрудФармацевтов</Наименование>
					<Порядок>300</Порядок>
					<Источник Имя="ИспользуетсяТрудФармацевтов" Вид="Свойство" Тип="Число"/>
					<Приемник Имя="ИспользуетсяТрудФармацевтов" Вид="Реквизит" Тип="Булево"/>
				</Свойство>
				<Свойство>
					<Код>7</Код>
					<Наименование>ИспользуетсяТрудЧленовЭкипажейМорскихСудов --&gt; ИспользуетсяТрудЧленовЭкипажейМорскихСудов</Наименование>
					<Порядок>350</Порядок>
					<Источник Имя="ИспользуетсяТрудЧленовЭкипажейМорскихСудов" Вид="Свойство" Тип="Число"/>
					<Приемник Имя="ИспользуетсяТрудЧленовЭкипажейМорскихСудов" Вид="Реквизит" Тип="Булево"/>
				</Свойство>
				<Свойство>
					<Код>8</Код>
					<Наименование>ИспользуютсяРаботыСДосрочнойПенсией --&gt; ИспользуютсяРаботыСДосрочнойПенсией</Наименование>
					<Порядок>400</Порядок>
					<Источник Имя="ИспользуютсяРаботыСДосрочнойПенсией" Вид="Свойство" Тип="Число"/>
					<Приемник Имя="ИспользуютсяРаботыСДосрочнойПенсией" Вид="Реквизит" Тип="Булево"/>
				</Свойство>
			</Свойства>
			<Значения/>
		</Правило>
		<Группа>
			<Код>Перечисления</Код>
			<Наименование>Перечисления</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>ВидыДоговоровСФизЛицами</Код>
				<Наименование>ПеречислениеСсылка.ТипДоговора --&gt; ПеречислениеСсылка.ВидыДоговоровСФизЛицами</Наименование>
				<Порядок>50</Порядок>
				<Источник>ПеречислениеСсылка.ТипДоговора</Источник>
				<Приемник>ПеречислениеСсылка.ВидыДоговоровСФизЛицами</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>АвторскийДоговор --&gt; Авторский</Наименование>
						<Порядок>50</Порядок>
						<Источник>АвторскийДоговор</Источник>
						<Приемник>Авторский</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДоговорПодряда --&gt; Подряда</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДоговорПодряда</Источник>
						<Приемник>Подряда</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ЛицензионныйДоговор --&gt; Авторский</Наименование>
						<Порядок>150</Порядок>
						<Источник>ЛицензионныйДоговор</Источник>
						<Приемник>Авторский</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ОбОтчужденииИсключительныхПрав --&gt; Авторский</Наименование>
						<Порядок>200</Порядок>
						<Источник>ОбОтчужденииИсключительныхПрав</Источник>
						<Приемник>Авторский</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыДополнительныхСтатейЗатрат</Код>
				<Наименование>Строка: Строка</Наименование>
				<Порядок>100</Порядок>
				<Источник>Строка</Источник>
				<Приемник>ПеречислениеСсылка.ВидыДополнительныхСтатейЗатрат</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование> --&gt; ЕСН</Наименование>
						<Порядок>50</Порядок>
						<Источник>ЕСН</Источник>
						<Приемник>ЕСН</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование> --&gt; ПФР</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПФР</Источник>
						<Приемник>ПФР</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование> --&gt; ФСС_БЛ</Наименование>
						<Порядок>150</Порядок>
						<Источник>ФСС_БЛ</Источник>
						<Приемник>ФСС_БЛ</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование> --&gt; ФСС_НС</Наименование>
						<Порядок>200</Порядок>
						<Источник>ФСС_НС</Источник>
						<Приемник>ФСС_НС</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыЗастрахованныхЛицОбязательногоСтрахования</Код>
				<Наименование>Перечисление: Виды застрахованных лиц обязательного страхования</Наименование>
				<Порядок>150</Порядок>
				<Источник>ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования</Источник>
				<Приемник>ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВременноПребывающиеИностранцы --&gt; ВременноПребываю</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВременноПребывающиеИностранцы</Источник>
						<Приемник>ВременноПребывающиеИностранцы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ВременноПроживающиеИностранцы --&gt; ВременноПроживаю</Наименование>
						<Порядок>100</Порядок>
						<Источник>ВременноПроживающиеИностранцы</Источник>
						<Приемник>ВременноПроживающиеИностранцы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ГражданеРФ --&gt; ГражданеРФ</Наименование>
						<Порядок>150</Порядок>
						<Источник>ГражданеРФ</Источник>
						<Приемник>ГражданеРФ</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПостоянноПроживающиеИностранцы --&gt; ПостоянноПрожив</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПостоянноПроживающиеИностранцы</Источник>
						<Приемник>ПостоянноПроживающиеИностранцы</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ВременноПребывающиеИностранцыНестрахуемые --&gt; Врем</Наименование>
						<Порядок>250</Порядок>
						<Источник>ВременноПребывающиеИностранцыНестрахуемые</Источник>
						<Приемник>ВременноПребывающиеИностранцыНестрахуемые</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ВременноПребывающиеИностранцыПризнанныеБеженцами -</Наименование>
						<Порядок>300</Порядок>
						<Источник>ВременноПребывающиеИностранцыПризнанныеБеженцами</Источник>
						<Приемник>ВременноПребывающиеИностранцыПризнанныеБеженцами</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыНачисленийОплатыТрудаПоСт255НК</Код>
				<Наименование>Перечисление: Виды начислений по оплате труда</Наименование>
				<Порядок>200</Порядок>
				<Источник>ПеречислениеСсылка.ВидыНачисленийПоОплатеТруда</Источник>
				<Приемник>ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>11</Код>
						<Наименование>пп1ст255 --&gt; пп1ст255</Наименование>
						<Порядок>50</Порядок>
						<Источник>пп1ст255</Источник>
						<Приемник>пп1ст255</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>пп2ст255 --&gt; пп2ст255</Наименование>
						<Порядок>100</Порядок>
						<Источник>пп2ст255</Источник>
						<Приемник>пп2ст255</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>пп3ст255 --&gt; пп3ст255</Наименование>
						<Порядок>150</Порядок>
						<Источник>пп3ст255</Источник>
						<Приемник>пп3ст255</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>пп4ст255 --&gt; пп4ст255</Наименование>
						<Порядок>200</Порядок>
						<Источник>пп4ст255</Источник>
						<Приемник>пп4ст255</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>пп5ст255 --&gt; пп5ст255</Наименование>
						<Порядок>250</Порядок>
						<Источник>пп5ст255</Источник>
						<Приемник>пп5ст255</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>пп6ст255 --&gt; пп6ст255</Наименование>
						<Порядок>300</Порядок>
						<Источник>пп6ст255</Источник>
						<Приемник>пп6ст255</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>пп7ст255 --&gt; пп7ст255</Наименование>
						<Порядок>350</Порядок>
						<Источник>пп7ст255</Источник>
						<Приемник>пп7ст255</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>пп8ст255 --&gt; пп8ст255</Наименование>
						<Порядок>400</Порядок>
						<Источник>пп8ст255</Источник>
						<Приемник>пп8ст255</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>пп9ст255 --&gt; пп9ст255</Наименование>
						<Порядок>450</Порядок>
						<Источник>пп9ст255</Источник>
						<Приемник>пп9ст255</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>пп10ст255 --&gt; пп10ст255</Наименование>
						<Порядок>500</Порядок>
						<Источник>пп10ст255</Источник>
						<Приемник>пп10ст255</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>пп11ст255 --&gt; пп11ст255</Наименование>
						<Порядок>550</Порядок>
						<Источник>пп11ст255</Источник>
						<Приемник>пп11ст255</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>пп12ст255 --&gt; пп12ст255</Наименование>
						<Порядок>600</Порядок>
						<Источник>пп12ст255</Источник>
						<Приемник>пп12ст255</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>пп12_1ст255 --&gt; пп12_1ст255</Наименование>
						<Порядок>650</Порядок>
						<Источник>пп12_1ст255</Источник>
						<Приемник>пп12_1ст255</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>пп13ст255 --&gt; пп13ст255</Наименование>
						<Порядок>700</Порядок>
						<Источник>пп13ст255</Источник>
						<Приемник>пп13ст255</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>пп14ст255 --&gt; пп14ст255</Наименование>
						<Порядок>750</Порядок>
						<Источник>пп14ст255</Источник>
						<Приемник>пп14ст255</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>пп15ст255 --&gt; пп15ст255</Наименование>
						<Порядок>800</Порядок>
						<Источник>пп15ст255</Источник>
						<Приемник>пп15ст255</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>пп17ст255 --&gt; пп17ст255</Наименование>
						<Порядок>850</Порядок>
						<Источник>пп17ст255</Источник>
						<Приемник>пп17ст255</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>пп18ст255 --&gt; пп18ст255</Наименование>
						<Порядок>900</Порядок>
						<Источник>пп18ст255</Источник>
						<Приемник>пп18ст255</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>пп19ст255 --&gt; пп19ст255</Наименование>
						<Порядок>950</Порядок>
						<Источник>пп19ст255</Источник>
						<Приемник>пп19ст255</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>пп20ст255 --&gt; пп20ст255</Наименование>
						<Порядок>1000</Порядок>
						<Источник>пп20ст255</Источник>
						<Приемник>пп20ст255</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>пп21ст255 --&gt; пп21ст255</Наименование>
						<Порядок>1050</Порядок>
						<Источник>пп21ст255</Источник>
						<Приемник>пп21ст255</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>пп22ст255 --&gt; пп22ст255</Наименование>
						<Порядок>1100</Порядок>
						<Источник>пп22ст255</Источник>
						<Приемник>пп22ст255</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>пп23ст255 --&gt; пп23ст255</Наименование>
						<Порядок>1150</Порядок>
						<Источник>пп23ст255</Источник>
						<Приемник>пп23ст255</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>пп25ст255 --&gt; пп25ст255</Наименование>
						<Порядок>1200</Порядок>
						<Источник>пп25ст255</Источник>
						<Приемник>пп25ст255</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>пп481ст264 --&gt;</Наименование>
						<Порядок>1250</Порядок>
						<Источник>пп481ст264</Источник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыПлатежейВГосБюджет</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>250</Порядок>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПлатежейВГосБюджет</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование> --&gt; Налог</Наименование>
						<Порядок>50</Порядок>
						<Источник>Налог (взносы): начислено / уплачено</Источник>
						<Приемник>Налог</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование> --&gt; НалогАкт</Наименование>
						<Порядок>100</Порядок>
						<Источник>Налог (взносы): доначислено / уплачено (по акту проверки)</Источник>
						<Приемник>НалогАкт</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование> --&gt; НалогСам</Наименование>
						<Порядок>150</Порядок>
						<Источник>Налог (взносы): доначислено / уплачено (самостоятельно)</Источник>
						<Приемник>НалогСам</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование> --&gt; РасходыПоСтрахованию</Наименование>
						<Порядок>200</Порядок>
						<Источник>Расходы по страхованию</Источник>
						<Приемник>РасходыПоСтрахованию</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование> --&gt; Штраф</Наименование>
						<Порядок>250</Порядок>
						<Источник>Штраф: начислено / уплачено</Источник>
						<Приемник>Штраф</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Не принято к зачету --&gt; НеПринято</Наименование>
						<Порядок>300</Порядок>
						<Источник>Не принято к зачету</Источник>
						<Приемник>НеПринято</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыРасчетовПоСредствамФСС</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>300</Порядок>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>ПеречислениеСсылка.ВидыРасчетовПоСредствамФСС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование> --&gt; НеПринято</Наименование>
						<Порядок>50</Порядок>
						<Источник>Не принято к зачету</Источник>
						<Приемник>НеПринято</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование> --&gt; ПеречисленоСтрахователем</Наименование>
						<Порядок>100</Порядок>
						<Источник>Перечислено страхователем</Источник>
						<Приемник>ПеречисленоСтрахователем</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование> --&gt; РасходыПоСтрахованию</Наименование>
						<Порядок>150</Порядок>
						<Источник>Расходы по страхованию</Источник>
						<Приемник>РасходыПоСтрахованию</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыПособийСоциальногоСтрахования</Код>
				<Наименование>ПеречислениеСсылка.ТипыПособий --&gt; ПеречислениеСсылка.ВидыПособийСоциальногоСтрахования</Наименование>
				<Порядок>350</Порядок>
				<Источник>ПеречислениеСсылка.ТипыПособий</Источник>
				<Приемник>ПеречислениеСсылка.ВидыПособийСоциальногоСтрахования</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Беременным --&gt; ПриПостановкеНаУчетВРанниеСрокиБере</Наименование>
						<Порядок>50</Порядок>
						<Источник>Беременным</Источник>
						<Приемник>ПриПостановкеНаУчетВРанниеСрокиБеременности</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НаПогребение --&gt; ВСвязиСоСмертью</Наименование>
						<Порядок>100</Порядок>
						<Источник>НаПогребение</Источник>
						<Приемник>ВСвязиСоСмертью</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПриРожденииРебенка --&gt; ПриРожденииРебенка</Наименование>
						<Порядок>150</Порядок>
						<Источник>ПриРожденииРебенка</Источник>
						<Приемник>ПриРожденииРебенка</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПриУсыновленииРебенка --&gt; ПриУсыновленииРебенка</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПриУсыновленииРебенка</Источник>
						<Приемник>ПриУсыновленииРебенка</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыРабочихГрафиков</Код>
				<Наименование>ПеречислениеСсылка.ГрафикРаботы --&gt; ПеречислениеСсылка.ВидыРабочихГрафиков</Наименование>
				<Порядок>400</Порядок>
				<Источник>ПеречислениеСсылка.ГрафикРаботы</Источник>
				<Приемник>ПеречислениеСсылка.ВидыРабочихГрафиков</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Пятидневка --&gt; Пятидневка</Наименование>
						<Порядок>50</Порядок>
						<Источник>Пятидневка</Источник>
						<Приемник>Пятидневка</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>СуммированноеВремя --&gt; Сменный</Наименование>
						<Порядок>100</Порядок>
						<Источник>СуммированноеВремя</Источник>
						<Приемник>Пятидневка</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Шестидневка --&gt; Шестидневка</Наименование>
						<Порядок>150</Порядок>
						<Источник>Шестидневка</Источник>
						<Приемник>Шестидневка</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование> --&gt; Сменный</Наименование>
						<Порядок>200</Порядок>
						<Источник>Сменный</Источник>
						<Приемник>Сменный</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>КалендарныеДни --&gt; Сменный</Наименование>
						<Порядок>250</Порядок>
						<Источник>КалендарныеДни</Источник>
						<Приемник>Сменный</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДниНедели</Код>
				<Наименование>:</Наименование>
				<Порядок>450</Порядок>
				<Источник>Число</Источник>
				<Приемник>ПеречислениеСсылка.ДниНедели</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>3</Код>
						<Наименование> --&gt; Понедельник</Наименование>
						<Порядок>50</Порядок>
						<Источник>1</Источник>
						<Приемник>Понедельник</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование> --&gt; Вторник</Наименование>
						<Порядок>100</Порядок>
						<Источник>2</Источник>
						<Приемник>Вторник</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование> --&gt; Среда</Наименование>
						<Порядок>150</Порядок>
						<Источник>3</Источник>
						<Приемник>Среда</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование> --&gt; Четверг</Наименование>
						<Порядок>200</Порядок>
						<Источник>4</Источник>
						<Приемник>Четверг</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование> --&gt; Пятница</Наименование>
						<Порядок>250</Порядок>
						<Источник>5</Источник>
						<Приемник>Пятница</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование> --&gt; Суббота</Наименование>
						<Порядок>300</Порядок>
						<Источник>6</Источник>
						<Приемник>Суббота</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование> --&gt; Воскресенье</Наименование>
						<Порядок>350</Порядок>
						<Источник>7</Источник>
						<Приемник>Воскресенье</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>КатегорииДолжностейДляСтатистическогоУчета</Код>
				<Наименование>Перечисление: Категории сотрудников</Наименование>
				<Порядок>500</Порядок>
				<Источник>ПеречислениеСсылка.КатегорииСотрудников</Источник>
				<Приемник>ПеречислениеСсылка.КатегорииДолжностейДляСтатистическогоУчета</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Рабочие --&gt; Рабочие</Наименование>
						<Порядок>50</Порядок>
						<Источник>Рабочие</Источник>
						<Приемник>Рабочие</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Руководители --&gt; Руководители</Наименование>
						<Порядок>100</Порядок>
						<Источник>Руководители</Источник>
						<Приемник>Руководители</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Специалисты --&gt; Специалисты</Наименование>
						<Порядок>150</Порядок>
						<Источник>Специалисты</Источник>
						<Приемник>Специалисты</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НаучныеИПедагогическиеРаботники --&gt; ДругиеСлужащие</Наименование>
						<Порядок>200</Порядок>
						<Источник>НаучныеИПедагогическиеРаботники</Источник>
						<Приемник>ДругиеСлужащие</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПрочиеСлужащие --&gt; ДругиеСлужащие</Наименование>
						<Порядок>250</Порядок>
						<Источник>ПрочиеСлужащие</Источник>
						<Приемник>ДругиеСлужащие</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>НДФЛСтавки</Код>
				<Наименование>Число: Число</Наименование>
				<Порядок>550</Порядок>
				<Источник>Число</Источник>
				<Приемник>ПеречислениеСсылка.НДФЛСтавки</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование> --&gt; Ставка09</Наименование>
						<Порядок>50</Порядок>
						<Источник>9</Источник>
						<Приемник>Ставка09</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование> --&gt; Ставка13</Наименование>
						<Порядок>100</Порядок>
						<Источник>13</Источник>
						<Приемник>Ставка13</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование> --&gt; Ставка15</Наименование>
						<Порядок>150</Порядок>
						<Источник>15</Источник>
						<Приемник>Ставка15</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование> --&gt; Ставка30</Наименование>
						<Порядок>200</Порядок>
						<Источник>30</Источник>
						<Приемник>Ставка30</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование> --&gt; Ставка35</Наименование>
						<Порядок>250</Порядок>
						<Источник>35</Источник>
						<Приемник>Ставка35</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ОсобенностиИсчисленияНДФЛ</Код>
				<Наименование>Перечисление: Особенности исчисления НДФЛ</Наименование>
				<Порядок>600</Порядок>
				<Источник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Источник>
				<Приемник>ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>СтандартныеВычетыВПределахМесячногоДохода --&gt; Стан</Наименование>
						<Порядок>50</Порядок>
						<Источник>СтандартныеВычетыВПределахМесячногоДохода</Источник>
						<Приемник>СтандартныеВычетыВПределахМесячногоДохода</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>СтандартныеВычетыНарастающимИтогом --&gt; Стандартные</Наименование>
						<Порядок>100</Порядок>
						<Источник>СтандартныеВычетыНарастающимИтогом</Источник>
						<Приемник>СтандартныеВычетыНарастающимИтогом</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПорядокРасчетаОтпуска</Код>
				<Наименование>ПеречислениеСсылка.ТипРасчетаОтпуска --&gt; ПеречислениеСсылка.ПорядокРасчетаОтпуска</Наименование>
				<Порядок>650</Порядок>
				<Источник>ПеречислениеСсылка.ТипРасчетаОтпуска</Источник>
				<Приемник>ПеречислениеСсылка.ПорядокРасчетаОтпуска</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПоКалендарнымДням --&gt; ПоКалендарнымДням</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПоКалендарнымДням</Источник>
						<Приемник>ПоКалендарнымДням</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПоШестидневке --&gt; ПоШестидневке</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПоШестидневке</Источник>
						<Приемник>ПоШестидневке</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПричиныНетрудоспособности</Код>
				<Наименование>ПеречислениеСсылка.ТипБолезни --&gt; ПеречислениеСсылка.ПричиныНетрудоспособности</Наименование>
				<Порядок>700</Порядок>
				<Источник>ПеречислениеСсылка.ТипБолезни</Источник>
				<Приемник>ПеречислениеСсылка.ПричиныНетрудоспособности</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Карантин --&gt; Карантин</Наименование>
						<Порядок>50</Порядок>
						<Источник>Карантин</Источник>
						<Приемник>Карантин</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ОбщееЗаболевание --&gt; ОбщееЗаболевание</Наименование>
						<Порядок>100</Порядок>
						<Источник>ОбщееЗаболевание</Источник>
						<Приемник>ОбщееЗаболевание</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоБеременностиИРодам --&gt; ПоБеременностиИРодам</Наименование>
						<Порядок>150</Порядок>
						<Источник>ПоБеременностиИРодам</Источник>
						<Приемник>ПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПособиеБезЗаболевания --&gt; ПособиеБезЗаболевания</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПособиеБезЗаболевания</Источник>
						<Приемник>ПособиеБезЗаболевания</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПособиеПриДолечивании --&gt; ПособиеПриДолечивании</Наименование>
						<Порядок>250</Порядок>
						<Источник>ПособиеПриДолечивании</Источник>
						<Приемник>ПособиеПриДолечивании</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПоУходуДо15тиЛетДляНеСостоящихВБраке --&gt; ПоУходуДо</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоУходуДо15тиЛетДляНеСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо15тиЛетДляНеСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПоУходуДо15тиЛетДляСостоящихВБраке --&gt; ПоУходуДо15</Наименование>
						<Порядок>350</Порядок>
						<Источник>ПоУходуДо15тиЛетДляСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо15тиЛетДляСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ПоУходуДо3хЛет --&gt; ПоУходуДо3хЛет</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПоУходуДо3хЛет</Источник>
						<Приемник>ПоУходуДо3хЛет</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПоУходуДо7миЛетДляНеСостоящихВБраке --&gt; ПоУходуДо7</Наименование>
						<Порядок>450</Порядок>
						<Источник>ПоУходуДо7миЛетДляНеСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо7миЛетДляНеСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПоУходуДо7миЛетДляСостоящихВБраке --&gt; ПоУходуДо7ми</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоУходуДо7миЛетДляСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо7миЛетДляСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПоУходуЗаВзрослым --&gt; ПоУходуЗаВзрослым</Наименование>
						<Порядок>550</Порядок>
						<Источник>ПоУходуЗаВзрослым</Источник>
						<Приемник>ПоУходуЗаВзрослым</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ПоУходуЗаРебенком --&gt; ПоУходуЗаРебенком</Наименование>
						<Порядок>600</Порядок>
						<Источник>ПоУходуЗаРебенком</Источник>
						<Приемник>ПоУходуЗаРебенком</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>Протезирование --&gt; Протезирование</Наименование>
						<Порядок>650</Порядок>
						<Источник>Протезирование</Источник>
						<Приемник>Протезирование</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ТравмаВБыту --&gt; ТравмаВБыту</Наименование>
						<Порядок>700</Порядок>
						<Источник>ТравмаВБыту</Источник>
						<Приемник>ТравмаВБыту</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ТравмаНаПроизв --&gt; ТравмаНаПроизводстве</Наименование>
						<Порядок>750</Порядок>
						<Источник>ТравмаНаПроизв</Источник>
						<Приемник>ТравмаНаПроизводстве</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ПрограммыБухгалтерскогоУчета</Код>
				<Наименование>Перечисление: Бухгалтерские программы</Наименование>
				<Порядок>750</Порядок>
				<Источник>ПеречислениеСсылка.БухгалтерскиеПрограммы</Источник>
				<Приемник>ПеречислениеСсылка.ПрограммыБухгалтерскогоУчета</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>Бухгалтерия16 --&gt; БухгалтерияПредприятия16</Наименование>
						<Порядок>50</Порядок>
						<Источник>Бухгалтерия16</Источник>
						<Приемник>БухгалтерияПредприятия16</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Бухгалтерия80 --&gt; БухгалтерияПредприятия16</Наименование>
						<Порядок>100</Порядок>
						<Источник>Бухгалтерия80</Источник>
						<Приемник>БухгалтерияПредприятия16</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Бюджетная40 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>150</Порядок>
						<Источник>Бюджетная40</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>Бюджетная5 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>200</Порядок>
						<Источник>Бюджетная5</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Бюджетная6 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>250</Порядок>
						<Источник>Бюджетная6</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>Бюджетная61 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>300</Порядок>
						<Источник>Бюджетная61</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ВоинскаяЧасть5 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>350</Порядок>
						<Источник>ВоинскаяЧасть5</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ДругаяБюджетная --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>400</Порядок>
						<Источник>ДругаяБюджетная</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ДругаяБюджетнаяС2005 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>450</Порядок>
						<Источник>ДругаяБюджетнаяС2005</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ДругаяБюджетнаяС2006 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>500</Порядок>
						<Источник>ДругаяБюджетнаяС2006</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ДругаяХозрасчетная --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>550</Порядок>
						<Источник>ДругаяХозрасчетная</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>Комплексная40 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>600</Порядок>
						<Источник>Комплексная40</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ПБОЮЛ --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>650</Порядок>
						<Источник>ПБОЮЛ</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>Производство20 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>700</Порядок>
						<Источник>Производство20</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>Производство20сАналитикой --&gt; ДругаяПрограммаБухуч</Наименование>
						<Порядок>750</Порядок>
						<Источник>Производство20сАналитикой</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>УСН --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>800</Порядок>
						<Источник>УСН</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>Хозрасчетная40 --&gt; Бухгалтерия77</Наименование>
						<Порядок>850</Порядок>
						<Источник>Хозрасчетная40</Источник>
						<Приемник>Бухгалтерия77</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>БПКОРП --&gt; БухгалтерияПредприятия20</Наименование>
						<Порядок>900</Порядок>
						<Источник>БПКОРП</Источник>
						<Приемник>БухгалтерияПредприятия20</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>Бюджетная62 --&gt; ДругаяПрограммаБухучета</Наименование>
						<Порядок>950</Порядок>
						<Источник>Бюджетная62</Источник>
						<Приемник>ДругаяПрограммаБухучета</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>БП_3 --&gt; БухгалтерияПредприятияКОРП30</Наименование>
						<Порядок>1000</Порядок>
						<Источник>БП_3</Источник>
						<Приемник>БухгалтерияПредприятияКОРП30</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ТарифыСтраховыхВзносов</Код>
				<Наименование>Перечисление: Тарифы страховых взносов</Наименование>
				<Порядок>800</Порядок>
				<Источник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Источник>
				<Приемник>ПеречислениеСсылка.ТарифыСтраховыхВзносов</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ЕНВД --&gt; ЕНВД</Наименование>
						<Порядок>50</Порядок>
						<Источник>ЕНВД</Источник>
						<Приемник>ЕНВД</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ЕСХН --&gt; ЕСХН</Наименование>
						<Порядок>100</Порядок>
						<Источник>ЕСХН</Источник>
						<Приемник>ЕСХН</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ОбщийНалоговыйРежим --&gt; ОбщийНалоговыйРежим</Наименование>
						<Порядок>150</Порядок>
						<Источник>ОбщийНалоговыйРежим</Источник>
						<Приемник>ОбщийНалоговыйРежим</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ОрганизацияИнвалидов --&gt; ОрганизацияИнвалидов</Наименование>
						<Порядок>200</Порядок>
						<Источник>ОрганизацияИнвалидов</Источник>
						<Приемник>ОрганизацияИнвалидов</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>РезидентТехникоВнедренческойЗоны --&gt; РезидентТехни</Наименование>
						<Порядок>250</Порядок>
						<Источник>РезидентТехникоВнедренческойЗоны</Источник>
						<Приемник>РезидентТехникоВнедренческойЗоны</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СельХозПроизводители --&gt; СельХозПроизводители</Наименование>
						<Порядок>300</Порядок>
						<Источник>СельХозПроизводители</Источник>
						<Приемник>СельХозПроизводители</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>УпрощенныйНалоговыйРежим --&gt; УпрощенныйНалоговыйРе</Наименование>
						<Порядок>350</Порядок>
						<Источник>УпрощенныйНалоговыйРежим</Источник>
						<Приемник>УпрощенныйНалоговыйРежим</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ITОрганизации --&gt; ITОрганизации</Наименование>
						<Порядок>400</Порядок>
						<Источник>ITОрганизации</Источник>
						<Приемник>ITОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>БлаготворительныеОрганизации --&gt; Благотворительные</Наименование>
						<Порядок>450</Порядок>
						<Источник>БлаготворительныеОрганизации</Источник>
						<Приемник>БлаготворительныеОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ДляФармацевтовАптек --&gt; ДляФармацевтовАптек</Наименование>
						<Порядок>500</Порядок>
						<Источник>ДляФармацевтовАптек</Источник>
						<Приемник>ДляФармацевтовАптек</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ДляЧленовЭкипажейМорскихСудовПодФлагомРФ --&gt; ДляЧл</Наименование>
						<Порядок>550</Порядок>
						<Источник>ДляЧленовЭкипажейМорскихСудовПодФлагомРФ</Источник>
						<Приемник>ДляЧленовЭкипажейМорскихСудовПодФлагомРФ</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>НародныеХудожественныеПромыслы --&gt; НародныеХудожес</Наименование>
						<Порядок>600</Порядок>
						<Источник>НародныеХудожественныеПромыслы</Источник>
						<Приемник>НародныеХудожественныеПромыслы</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>НекоммерческиеОрганизации --&gt; НекоммерческиеОргани</Наименование>
						<Порядок>650</Порядок>
						<Источник>НекоммерческиеОрганизации</Источник>
						<Приемник>НекоммерческиеОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ОрганизацииОказывающиеИнжиниринговыеУслуги --&gt; Орг</Наименование>
						<Порядок>700</Порядок>
						<Источник>ОрганизацииОказывающиеИнжиниринговыеУслуги</Источник>
						<Приемник>ОрганизацииОказывающиеИнжиниринговыеУслуги</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>СМИ --&gt; СМИ</Наименование>
						<Порядок>750</Порядок>
						<Источник>СМИ</Источник>
						<Приемник>СМИ</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>УпрощенныйНалоговыйРежимПроизводство --&gt; Упрощенны</Наименование>
						<Порядок>800</Порядок>
						<Источник>УпрощенныйНалоговыйРежимПроизводство</Источник>
						<Приемник>УпрощенныйНалоговыйРежимПроизводство</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ХозОбществаБюджетныхВУЗов --&gt; ХозОбществаБюджетных</Наименование>
						<Порядок>850</Порядок>
						<Источник>ХозОбществаБюджетныхВУЗов</Источник>
						<Приемник>ХозОбществаБюджетныхВУЗов</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СлучаиУходаЗаБольнымиДетьми</Код>
				<Наименование>ПеречислениеСсылка.СлучаиУходаЗаБольнымиДетьми --&gt; ПеречислениеСсылка.СлучаиУходаЗаБольнымиДетьми</Наименование>
				<Порядок>850</Порядок>
				<Источник>ПеречислениеСсылка.СлучаиУходаЗаБольнымиДетьми</Источник>
				<Приемник>ПеречислениеСсылка.СлучаиУходаЗаБольнымиДетьми</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПоУходуДо15тиЛетАмбулаторно --&gt; ПоУходуДо15тиЛетАм</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПоУходуДо15тиЛетАмбулаторно</Источник>
						<Приемник>ПоУходуДо15тиЛетАмбулаторно</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПоУходуДо15тиЛетВСтационаре --&gt; ПоУходуДо15тиЛетВС</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПоУходуДо15тиЛетВСтационаре</Источник>
						<Приемник>ПоУходуДо15тиЛетВСтационаре</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ПоУходуДо15тиЛетДляНеСостоящихВБраке --&gt; ПоУходуДо</Наименование>
						<Порядок>150</Порядок>
						<Источник>ПоУходуДо15тиЛетДляНеСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо15тиЛетДляНеСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ПоУходуДо15тиЛетДляСостоящихВБраке --&gt; ПоУходуДо15</Наименование>
						<Порядок>200</Порядок>
						<Источник>ПоУходуДо15тиЛетДляСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо15тиЛетДляСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ПоУходуДо15тиЛетПриВИЧ --&gt; ПоУходуДо15тиЛетПриВИЧ</Наименование>
						<Порядок>250</Порядок>
						<Источник>ПоУходуДо15тиЛетПриВИЧ</Источник>
						<Приемник>ПоУходуДо15тиЛетПриВИЧ</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбул</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно</Источник>
						<Приемник>ПоУходуДо15тиЛетПриПоствакцинальномОсложненииАмбулаторно</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтац</Наименование>
						<Порядок>350</Порядок>
						<Источник>ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтационаре</Источник>
						<Приемник>ПоУходуДо15тиЛетПриПоствакцинальномОсложненииВСтационаре</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ПоУходуДо3хЛет --&gt; ПоУходуДо3хЛет</Наименование>
						<Порядок>400</Порядок>
						<Источник>ПоУходуДо3хЛет</Источник>
						<Приемник>ПоУходуДо3хЛет</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ПоУходуДо7миЛетАмбулаторно --&gt; ПоУходуДо7миЛетАмбу</Наименование>
						<Порядок>450</Порядок>
						<Источник>ПоУходуДо7миЛетАмбулаторно</Источник>
						<Приемник>ПоУходуДо7миЛетАмбулаторно</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПоУходуДо7миЛетВСтационаре --&gt; ПоУходуДо7миЛетВСта</Наименование>
						<Порядок>500</Порядок>
						<Источник>ПоУходуДо7миЛетВСтационаре</Источник>
						<Приемник>ПоУходуДо7миЛетВСтационаре</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПоУходуДо7миЛетДляНеСостоящихВБраке --&gt; ПоУходуДо7</Наименование>
						<Порядок>550</Порядок>
						<Источник>ПоУходуДо7миЛетДляНеСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо7миЛетДляНеСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ПоУходуДо7миЛетДляСостоящихВБраке --&gt; ПоУходуДо7ми</Наименование>
						<Порядок>600</Порядок>
						<Источник>ПоУходуДо7миЛетДляСостоящихВБраке</Источник>
						<Приемник>ПоУходуДо7миЛетДляСостоящихВБраке</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно --&gt;</Наименование>
						<Порядок>650</Порядок>
						<Источник>ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно</Источник>
						<Приемник>ПоУходуДо7миЛетПриОсобомЗаболеванииАмбулаторно</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре --&gt;</Наименование>
						<Порядок>700</Порядок>
						<Источник>ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре</Источник>
						<Приемник>ПоУходуДо7миЛетПриОсобомЗаболеванииВСтационаре</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ПоУходуЗаРебенкомИнвалидомАмбулаторно --&gt; ПоУходуЗ</Наименование>
						<Порядок>750</Порядок>
						<Источник>ПоУходуЗаРебенкомИнвалидомАмбулаторно</Источник>
						<Приемник>ПоУходуЗаРебенкомИнвалидомАмбулаторно</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ПоУходуЗаРебенкомИнвалидомВСтационаре --&gt; ПоУходуЗ</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПоУходуЗаРебенкомИнвалидомВСтационаре</Источник>
						<Приемник>ПоУходуЗаРебенкомИнвалидомВСтационаре</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СостоянияРаботникаОрганизации</Код>
				<Наименование>ПеречислениеСсылка.ПричинаОтсутствия --&gt; ПеречислениеСсылка.СостоянияРаботникаОрганизации</Наименование>
				<Порядок>900</Порядок>
				<Источник>ПеречислениеСсылка.ПричинаОтсутствия</Источник>
				<Приемник>ПеречислениеСсылка.СостоянияРаботникаОрганизации</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ВынужденныйПростой --&gt; Простой</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВынужденныйПростой</Источник>
						<Приемник>Простой</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>Гособязанности --&gt; ГосударственныеОбязанности</Наименование>
						<Порядок>100</Порядок>
						<Источник>Гособязанности</Источник>
						<Приемник>ГосударственныеОбязанности</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Забастовка --&gt; НеРаботает</Наименование>
						<Порядок>150</Порядок>
						<Источник>Забастовка</Источник>
						<Приемник>НеРаботает</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НеВыяснено --&gt; ОтсутствуетПоНевыясненнойПричине</Наименование>
						<Порядок>200</Порядок>
						<Источник>НеВыяснено</Источник>
						<Приемник>ОтсутствуетПоНевыясненнойПричине</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Прогул --&gt; Прогулы</Наименование>
						<Порядок>250</Порядок>
						<Источник>Прогул</Источник>
						<Приемник>Прогулы</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ПростойПоВинеРаботника --&gt; Простой</Наименование>
						<Порядок>300</Порядок>
						<Источник>ПростойПоВинеРаботника</Источник>
						<Приемник>Простой</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ПростойПоММОТ --&gt; Простой</Наименование>
						<Порядок>350</Порядок>
						<Источник>ПростойПоММОТ</Источник>
						<Приемник>Простой</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование> --&gt; Работает</Наименование>
						<Порядок>400</Порядок>
						<Приемник>Работает</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СостоянияРаботникаОрганизацииОтТабеля</Код>
				<Наименование>:</Наименование>
				<Порядок>950</Порядок>
				<Источник>Строка</Источник>
				<Приемник>ПеречислениеСсылка.СостоянияРаботникаОрганизации</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>23</Код>
						<Наименование>НП --&gt; ВынужденныйПрогул</Наименование>
						<Порядок>50</Порядок>
						<Источник>НП</Источник>
						<Приемник>ВынужденныйПрогул</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование> --&gt; ВынужденныйПрогул</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПВ</Источник>
						<Приемник>ВынужденныйПрогул</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>РП --&gt; ВынужденныйПрогул</Наименование>
						<Порядок>150</Порядок>
						<Источник>РП</Источник>
						<Приемник>ВынужденныйПрогул</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование> --&gt; ГосударственныеОбязанности</Наименование>
						<Порядок>200</Порядок>
						<Источник>Г</Источник>
						<Приемник>ГосударственныеОбязанности</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование> --&gt; ДополнительныеВыходныеДниОплачиваемые</Наименование>
						<Порядок>250</Порядок>
						<Источник>ОВ</Источник>
						<Приемник>ДополнительныеВыходныеДниОплачиваемые</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование> --&gt; Заболевание</Наименование>
						<Порядок>300</Порядок>
						<Источник>Б</Источник>
						<Приемник>Заболевание</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование> --&gt; Командировка</Наименование>
						<Порядок>350</Порядок>
						<Источник>К</Источник>
						<Приемник>Командировка</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование> --&gt; ОтпускБезСохраненияЗарплаты</Наименование>
						<Порядок>400</Порядок>
						<Источник>ДО</Источник>
						<Приемник>ОтпускБезСохраненияЗарплаты</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование> --&gt; ОтпускЕжегодный</Наименование>
						<Порядок>450</Порядок>
						<Источник>ОТ</Источник>
						<Приемник>ОтпускЕжегодный</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование> --&gt; ОтпускПоБеременностиИРодам</Наименование>
						<Порядок>500</Порядок>
						<Источник>Р</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование> --&gt; ОтпускПоУходуЗаРебенком</Наименование>
						<Порядок>550</Порядок>
						<Источник>ОЖ</Источник>
						<Приемник>ОтпускПоУходуЗаРебенком</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование> --&gt; ОтпускУчебный</Наименование>
						<Порядок>600</Порядок>
						<Источник>У</Источник>
						<Приемник>ОтпускУчебный</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование> --&gt; ОтпускУчебныйНеоплачиваемый</Наименование>
						<Порядок>650</Порядок>
						<Источник>УД</Источник>
						<Приемник>ОтпускУчебныйНеоплачиваемый</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ЗБ --&gt; ОтсутствуетПоНевыясненнойПричине</Наименование>
						<Порядок>700</Порядок>
						<Источник>ЗБ</Источник>
						<Приемник>ОтсутствуетПоНевыясненнойПричине</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование> --&gt; ОтсутствуетПоНевыясненнойПричине</Наименование>
						<Порядок>750</Порядок>
						<Источник>НН</Источник>
						<Приемник>ОтсутствуетПоНевыясненнойПричине</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование> --&gt; Прогулы</Наименование>
						<Порядок>800</Порядок>
						<Источник>ПР</Источник>
						<Приемник>Прогулы</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование> --&gt; Простой</Наименование>
						<Порядок>850</Порядок>
						<Источник>ВП</Источник>
						<Приемник>Простой</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование> --&gt; Работает</Наименование>
						<Порядок>900</Порядок>
						<Источник>Я</Источник>
						<Приемник>Работает</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СпособыПеречисленийПоИсполнительномуЛисту</Код>
				<Наименование>Перечисление: Способы перечислений по исполнительному листу</Наименование>
				<Порядок>1000</Порядок>
				<Источник>ПеречислениеСсылка.СпособыПеречисленийПоИспЛисту</Источник>
				<Приемник>ПеречислениеСсылка.СпособыПеречисленийПоИсполнительномуЛисту</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПеречислениеНаСчет --&gt; БанковскийПеревод</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПеречислениеНаСчет</Источник>
						<Приемник>БанковскийПеревод</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПочтовыйПеревод --&gt; ПочтовыйПеревод</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПочтовыйПеревод</Источник>
						<Приемник>ПочтовыйПеревод</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ЧерезКассу --&gt; ЧерезКассуПлатежнымПоручением</Наименование>
						<Порядок>150</Порядок>
						<Источник>ЧерезКассу</Источник>
						<Приемник>ЧерезКассуПлатежнымПоручением</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ХарактерВыплатыПоДоговору</Код>
				<Наименование>ПеречислениеСсылка.ПорядокОплатыДоговоров --&gt; ПеречислениеСсылка.ХарактерВыплатыПоДоговору</Наименование>
				<Порядок>1050</Порядок>
				<Источник>ПеречислениеСсылка.ПорядокОплатыДоговоров</Источник>
				<Приемник>ПеречислениеСсылка.ХарактерВыплатыПоДоговору</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПомесячнаяОплата --&gt; Ежемесячно</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПомесячнаяОплата</Источник>
						<Приемник>Ежемесячно</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>РазоваяОплата --&gt; ОднократноВКонцеСрока</Наименование>
						<Порядок>100</Порядок>
						<Источник>РазоваяОплата</Источник>
						<Приемник>ОднократноВКонцеСрока</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыРаботСДосрочнойПенсией</Код>
				<Наименование>Перечисление: Виды работ с досрочной пенсией</Наименование>
				<Порядок>1100</Порядок>
				<Источник>ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией</Источник>
				<Приемник>ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПодземныеИВредныеРаботы --&gt; ПодземныеИВредныеРабот</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПодземныеИВредныеРаботы</Источник>
						<Приемник>ПодземныеИВредныеРаботы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ТяжелыеИПрочиеРаботы --&gt; ТяжелыеИПрочиеРаботы</Наименование>
						<Порядок>100</Порядок>
						<Источник>ТяжелыеИПрочиеРаботы</Источник>
						<Приемник>ТяжелыеИПрочиеРаботы</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>Валюты</Код>
				<Наименование>СправочникСсылка.Валюты --&gt; СправочникСсылка.Валюты</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Если Источник = "Рубль" Тогда
	ВходящиеДанные.Установить("Код",				"643");
	ВходящиеДанные.Установить("Наименование",		"RUR");
	ВходящиеДанные.Установить("НаименованиеПолное",	"Российский рубль");
	
	КлючВыгружаемыхДанных = "643";
Иначе
	Если Источник.Код = "810" Тогда
		ВходящиеДанные.Установить("Код",			"643");
	Иначе
		ВходящиеДанные.Установить("Код",			Источник.Код);
	КонецЕсли;

	ВходящиеДанные.Установить("Наименование",		Источник.Наименование);
	ВходящиеДанные.Установить("НаименованиеПолное",	Источник.ПолнНаименование);
	
	КлючВыгружаемыхДанных = Источник.Код;
	Если КлючВыгружаемыхДанных = "810" Тогда
		КлючВыгружаемыхДанных = "643";
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
				<Источник>СправочникСсылка.Валюты</Источник>
				<Приемник>СправочникСсылка.Валюты</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыКонтактнойИнформации</Код>
				<Наименование>Строка: Строка</Наименование>
				<Порядок>100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>Строка</Источник>
				<Приемник>СправочникСсылка.ВидыКонтактнойИнформации</Приемник>
				<Свойства>
					<Свойство Отключить="true" Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ИнострАдресФизЛица --&gt; ИнострАдресФизЛица</Наименование>
						<Порядок>50</Порядок>
						<Источник>ИнострАдресФизЛица</Источник>
						<Приемник>ИнострАдресФизЛица</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ИнформАдресФизЛица --&gt; ИнформАдресФизЛица</Наименование>
						<Порядок>100</Порядок>
						<Источник>ИнформАдресФизЛица</Источник>
						<Приемник>ИнформАдресФизЛица</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ТелефонОрганизации --&gt; ТелефонОрганизации</Наименование>
						<Порядок>150</Порядок>
						<Источник>ТелефонОрганизации</Источник>
						<Приемник>ТелефонОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>78</Код>
						<Наименование> --&gt; ТелефонСлужебный</Наименование>
						<Порядок>200</Порядок>
						<Источник>ТелефонСлужебный</Источник>
						<Приемник>ТелефонСлужебный</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ТелефонФизЛица --&gt; ТелефонФизЛица</Наименование>
						<Порядок>250</Порядок>
						<Источник>ТелефонФизЛица</Источник>
						<Приемник>ТелефонФизЛица</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ФактАдресФизЛица --&gt; ФактАдресФизЛица</Наименование>
						<Порядок>300</Порядок>
						<Источник>ФактАдресФизЛица</Источник>
						<Приемник>ФактАдресФизЛица</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ЮрАдресОрганизации --&gt; ЮрАдресОрганизации</Наименование>
						<Порядок>350</Порядок>
						<Источник>ЮрАдресОрганизации</Источник>
						<Приемник>ЮрАдресОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ЮрАдресФизЛица --&gt; ЮрАдресФизЛица</Наименование>
						<Порядок>400</Порядок>
						<Источник>ЮрАдресФизЛица</Источник>
						<Приемник>ЮрАдресФизЛица</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ВидыЕжегодныхОтпусков</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование",					Источник);
ВходящиеДанные.Установить("СпособРасчетаОстаткаОтпуска",	"ПоКалендарнымДням");</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>СправочникСсылка.ВидыЕжегодныхОтпусков</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; СпособРасчетаОстаткаОтпуска</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчетаОстаткаОтпуска" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаОстаткаОтпуска"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Военкоматы</Код>
				<Наименование> --&gt; СправочникСсылка.Военкоматы</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
				<Приемник>СправочникСсылка.Военкоматы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНДФЛСтрока</Код>
				<Наименование>СправочникСсылка.ВидыВычетов --&gt; СправочникСсылка.ВычетыНДФЛ</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",			Источник);</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ВидыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГрафикиРаботы</Код>
				<Наименование>СправочникСсылка.ГрафикиРаботы --&gt; СправочникСсылка.ГрафикиРаботы</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Наименование = Источник;
Иначе
	Наименование = Источник.Наименование;
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Наименование);

КлючВыгружаемыхДанных = Наименование;</ПередВыгрузкой>
				<Источник>СправочникСсылка.ГрафикиРаботы</Источник>
				<Приемник>СправочникСсылка.ГрафикиРаботы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГрафикиРаботыВсеДанные</Код>
				<Наименование>СправочникСсылка.ГрафикиРаботы --&gt; СправочникСсылка.ГрафикиРаботы</Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Наименование = Источник;
Иначе
	Наименование = Источник.Наименование;
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Наименование);

КлючВыгружаемыхДанных = Наименование;</ПередВыгрузкой>
				<ПриВыгрузке>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Возврат 0;
КонецЕсли;

Если Источник.ПродолжительностьНедели = Перечисление.ПродолжительностьРабочейНедели.Ч40 Тогда
	ДлительностьРабочейНедели = 40
ИначеЕсли Источник.ПродолжительностьНедели = Перечисление.ПродолжительностьРабочейНедели.Ч36 Тогда
	ДлительностьРабочейНедели = 36
ИначеЕсли Источник.ПродолжительностьНедели = Перечисление.ПродолжительностьРабочейНедели.Ч30 Тогда
	ДлительностьРабочейНедели = 30
ИначеЕсли Источник.ПродолжительностьНедели = Перечисление.ПродолжительностьРабочейНедели.Ч24 Тогда
	ДлительностьРабочейНедели = 24
Иначе
	ДлительностьРабочейНедели = 40
КонецЕсли;

Если Источник.ТипГрафика = Перечисление.ГрафикРаботы.СуммированноеВремя Тогда
	СуммированныйУчетРабочегоВремени = 1
Иначе
	СуммированныйУчетРабочегоВремени = 0
КонецЕсли;

Если Источник.НомерДняСубботы = 1 Тогда
	ПервыйВыходной = "Понедельник"
ИначеЕсли Источник.НомерДняСубботы = 2 Тогда
	ПервыйВыходной = "Вторник"
ИначеЕсли Источник.НомерДняСубботы = 3 Тогда
	ПервыйВыходной = "Среда"
ИначеЕсли Источник.НомерДняСубботы = 4 Тогда
	ПервыйВыходной = "Четверг"
ИначеЕсли Источник.НомерДняСубботы = 5 Тогда
	ПервыйВыходной = "Пятница"
ИначеЕсли Источник.НомерДняСубботы = 6 Тогда
	ПервыйВыходной = "Суббота"
ИначеЕсли Источник.НомерДняСубботы = 7 Тогда
	ПервыйВыходной = "Воскресенье"
КонецЕсли;

Если Источник.НомерДняВоскресения = 1 Тогда
	ВторойВыходной = "Понедельник"
ИначеЕсли Источник.НомерДняВоскресения = 2 Тогда
	ВторойВыходной = "Вторник"
ИначеЕсли Источник.НомерДняВоскресения = 3 Тогда
	ВторойВыходной = "Среда"
ИначеЕсли Источник.НомерДняВоскресения = 4 Тогда
	ВторойВыходной = "Четверг"
ИначеЕсли Источник.НомерДняВоскресения = 5 Тогда
	ВторойВыходной = "Пятница"
ИначеЕсли Источник.НомерДняВоскресения = 6 Тогда
	ВторойВыходной = "Суббота"
ИначеЕсли Источник.НомерДняВоскресения = 7 Тогда
	ВторойВыходной = "Воскресенье"
КонецЕсли;

Если ПустоеЗначение(Источник.ВечерниеЧасы) = 0 Тогда
	УчитыватьВечерниеЧасы = 1
Иначе
	УчитыватьВечерниеЧасы = 0
КонецЕсли;

Если ПустоеЗначение(Источник.НочныеЧасы) = 0 Тогда
	УчитыватьНочныеЧасы = 1
Иначе
	УчитыватьНочныеЧасы = 0
КонецЕсли;

Если (Параметры.РаспределятьПоИсточникамФинансирования = 1) И (Источник.ОсновныеЧасы = Календари.Военнослужащий) Тогда
	ВидГрафика					= "КалендарныеДни";
	ГрафикВоеннослужащих		= 1;
	ДлительностьРабочейНедели	= 56;
	ПервыйВыходной				= "";
	ВторойВыходной				= "";
Иначе
	ГрафикВоеннослужащих		= 0;
	
	Если (СуммированныйУчетРабочегоВремени = 1) И (Найти(Источник.ОсновныеЧасы, "Сменный") = 1) Тогда
		ВидГрафика				= "Сменный";
	Иначе
		ВидГрафика				= Источник.ТипГрафика;
	КонецЕсли;
КонецЕсли;

ВходящиеДанные.Установить("ВидГрафика",							ВидГрафика);
ВходящиеДанные.Установить("ДлительностьРабочейНедели",			ДлительностьРабочейНедели);
ВходящиеДанные.Установить("СуммированныйУчетРабочегоВремени",	СуммированныйУчетРабочегоВремени);
ВходящиеДанные.Установить("ПервыйВыходной",						ПервыйВыходной);
ВходящиеДанные.Установить("ВторойВыходной",						ВторойВыходной);
ВходящиеДанные.Установить("ДатаОтсчета",						ДатаНачала);
ВходящиеДанные.Установить("НачалоДневныхЧасов",					ПолучитьДатуV8(Дата(1,1,1), "08:00:00"));
ВходящиеДанные.Установить("НачалоВечернихЧасов",				ПолучитьДатуV8(Дата(1,1,1), "20:00:00"));
ВходящиеДанные.Установить("НачалоНочныхЧасов",					ПолучитьДатуV8(Дата(1,1,1), "22:00:00"));
ВходящиеДанные.Установить("УчитыватьВечерниеЧасы",				УчитыватьВечерниеЧасы);
ВходящиеДанные.Установить("УчитыватьНочныеЧасы",				УчитыватьНочныеЧасы);
ВходящиеДанные.Установить("ГрафикВоеннослужащих",				ГрафикВоеннослужащих);</ПриВыгрузке>
				<ПослеВыгрузкиВФайл>ВыгрузитьГрафикРаботыЗаПериод(Источник, Источник.ОсновныеЧасы,	"ПоЧасам", 1);
ВыгрузитьГрафикРаботыЗаПериод(Источник, Источник.ВечерниеЧасы,	"ПоВечернимЧасам");
ВыгрузитьГрафикРаботыЗаПериод(Источник, Источник.НочныеЧасы,	"ПоНочнымЧасам");</ПослеВыгрузкиВФайл>
				<ПослеЗагрузки>Если Объект.ПериодыСмены.Количество() &gt; 0 Тогда
	Объект.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГрафикРаботы",	Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ГрафикиРаботыПоВидамВремени.Месяц КАК Месяц
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы = &amp;ГрафикРаботы
	|	И ГрафикиРаботыПоВидамВремени.План
	|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Месяц УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		ДатаМесяца = ДобавитьМесяц(Выборка.Месяц, 1);
	Иначе
		ДатаМесяца = ДатаНачала;
	КонецЕсли;

	Если ДатаМесяца &lt;= НачалоМесяца(ТекущаяДата()) Тогда
		КонецПоследнегоГода	= КонецГода(ТекущаяДата());

		Объект.СоответствиеИнтервалыРедактирования = Новый Соответствие;
		Пока ДатаМесяца &lt;= КонецПоследнегоГода Цикл
			Объект.СоответствиеИнтервалыРедактирования.Вставить(ДатаМесяца, Истина);
			ДатаМесяца = ДобавитьМесяц(ДатаМесяца, 1);
		КонецЦикла;

		Объект.АвтозаполнениеКалендаря(ДатаНачала, КонецПоследнегоГода, Ложь);
		Объект.ОбменДанными.Загрузка = Ложь;
		Объект.Записать();
	КонецЕсли;
КонецЕсли;</ПослеЗагрузки>
				<Источник>СправочникСсылка.ГрафикиРаботы</Источник>
				<Приемник>СправочникСсылка.ГрафикиРаботы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ВидГрафика</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидГрафика" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРабочихГрафиков"/>
						<КодПравилаКонвертации>ВидыРабочихГрафиков                               </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ДлительностьРабочейНедели</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДлительностьРабочейНедели" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; СуммированныйУчетРабочегоВремени</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммированныйУчетРабочегоВремени" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ПервыйВыходной</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПервыйВыходной" Вид="Реквизит" Тип="ПеречислениеСсылка.ДниНедели"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ВторойВыходной</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВторойВыходной" Вид="Реквизит" Тип="ПеречислениеСсылка.ДниНедели"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ДатаОтсчета</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОтсчета" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; НачалоДневныхЧасов</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачалоДневныхЧасов" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; НачалоВечернихЧасов</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачалоВечернихЧасов" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; НачалоНочныхЧасов</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачалоНочныхЧасов" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; ПериодыСмены</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодыСмены" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>СуммированныйУчетРабочегоВремени = ВходящиеДанные.Получить("СуммированныйУчетРабочегоВремени");

Если (СуммированныйУчетРабочегоВремени = 1) И (Найти(Источник.ОсновныеЧасы, "Сменный") = 1) Тогда
	Возврат 1;
КонецЕсли;

КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВремяНачала");
КоллекцияОбъектов.НоваяКолонка("ВремяОкончания");
КоллекцияОбъектов.НоваяКолонка("ДеньНедели");

ДлительностьРабочейНедели = ВходящиеДанные.Получить("ДлительностьРабочейНедели");

Если ДлительностьРабочейНедели = 40 Тогда
	ВремяНачала							= "08:00:00";
	
	ВремяОкончания						= "16:00:00";
	ВремяОкончанияПятница				= "16:00:00";
	
	ВремяОкончанияШестидневка			= "15:00:00";
	ВремяОкончанияШестидневкаСуббота	= "13:00:00";
	
ИначеЕсли ДлительностьРабочейНедели = 36 Тогда
	ВремяНачала							= "08:00:00";
	
	ВремяОкончания						= "15:00:00";
	ВремяОкончанияПятница				= "16:00:00";
	
	ВремяОкончанияШестидневка			= "14:00:00";
	ВремяОкончанияШестидневкаСуббота	= "14:00:00";
	
ИначеЕсли ДлительностьРабочейНедели = 30 Тогда
	ВремяНачала							= "08:00:00";
	
	ВремяОкончания						= "14:00:00";
	ВремяОкончанияПятница				= "14:00:00";
	
	ВремяОкончанияШестидневка			= "13:00:00";
	ВремяОкончанияШестидневкаСуббота	= "13:00:00";
	
ИначеЕсли ДлительностьРабочейНедели = 24 Тогда
	ВремяНачала							= "08:00:00";
	
	ВремяОкончания						= "13:00:00";
	ВремяОкончанияПятница				= "12:00:00";
	
	ВремяОкончанияШестидневка			= "12:00:00";
	ВремяОкончанияШестидневкаСуббота	= "12:00:00";
	
Иначе
	ВремяНачала							= "08:00:00";
	ВремяОкончания						= "16:00:00";
	
КонецЕсли;

Если Источник.ОсновныеЧасы = Календари.Военнослужащий Тогда
	Для ИндексДня = 1 По 7 Цикл
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ВремяНачала			= ПолучитьДатуV8(Дата(1,1,1), ВремяНачала);
		КоллекцияОбъектов.ВремяОкончания		= ПолучитьДатуV8(Дата(1,1,1), ВремяОкончания);
		КоллекцияОбъектов.ДеньНедели			= ИндексДня;
	КонецЦикла;
	
Иначе	
	Если Источник.ТипГрафика = Перечисление.ГрафикРаботы.Пятидневка Тогда
		Для ИндексДня = 1 По 5 Цикл
			КоллекцияОбъектов.НоваяСтрока();
			КоллекцияОбъектов.ВремяНачала			= ПолучитьДатуV8(Дата(1,1,1), ВремяНачала);
			КоллекцияОбъектов.ВремяОкончания		= ПолучитьДатуV8(Дата(1,1,1), ВремяОкончания);
			КоллекцияОбъектов.ДеньНедели			= ИндексДня;
		КонецЦикла;
		
	ИначеЕсли Источник.ТипГрафика = Перечисление.ГрафикРаботы.Шестидневка Тогда
		Для ИндексДня = 1 По 6 Цикл
			КоллекцияОбъектов.НоваяСтрока();
			КоллекцияОбъектов.ВремяНачала			= ПолучитьДатуV8(Дата(1,1,1), ВремяНачала);
			Если ИндексДня = 6 Тогда
				КоллекцияОбъектов.ВремяОкончания	= ПолучитьДатуV8(Дата(1,1,1), ВремяОкончанияШестидневкаСуббота);
			Иначе
				КоллекцияОбъектов.ВремяОкончания	= ПолучитьДатуV8(Дата(1,1,1), ВремяОкончанияШестидневка);
			КонецЕсли;
			КоллекцияОбъектов.ДеньНедели			= ИндексДня;
		КонецЦикла;

	КонецЕсли;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ВремяНачала</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВремяНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ВремяОкончания</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВремяОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ДеньНедели</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДеньНедели" Вид="Реквизит" Тип="ПеречислениеСсылка.ДниНедели"/>
							<КодПравилаКонвертации>ДниНедели                                         </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДокументыУдостоверяющиеЛичность</Код>
				<Наименование>СправочникСсылка.ДокументыУдостоверяющиеЛичность --&gt; СправочникСсылка.ДокументыУдостоверяющиеЛичност</Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>Если Найти(Источник.Наименование, "РФ") &gt; 0 Тогда
	Наименование = СтрЗаменить(Источник.Наименование, "РФ", "Российской Федерации")
	
ИначеЕсли Источник.Наименование = "Паспорт гражданина России" Тогда
	Наименование = "Паспорт гражданина Российской Федерации"
	
ИначеЕсли Источник.Наименование = "Иностранный паспорт" Тогда
	Наименование = "Паспорт иностранного гражданина"
	
ИначеЕсли Источник.Наименование = "Свидетельство о регистрации ходатайства о признании иммигранта беженцем" Тогда
	Наименование = "Свидетельство о рассмотрении ходатайства о признании беженцем на территории Российской Федерации по"
	
Иначе
	Наименование = Источник.Наименование;
	
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование",	Наименование);
ВходящиеДанные.Установить("КодПФР",			ВРЕГ(Источник.КодСЗВ));</ПередВыгрузкой>
				<Источник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Источник>
				<Приемник>СправочникСсылка.ДокументыУдостоверяющиеЛичность</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>КодНДФЛ --&gt; КодИМНС</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="КодНДФЛ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; КодПФР</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПФР" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДолжностиОрганизаций</Код>
				<Наименование>СправочникСсылка.Должности --&gt; СправочникСсылка.ДолжностиОрганизаций</Наименование>
				<Порядок>450</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.УстановитьАктуальность);</ПослеЗагрузки>
				<Источник>СправочникСсылка.Должности</Источник>
				<Приемник>СправочникСсылка.ДолжностиОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>КодПозицииИзСписка --&gt; КодПозицииСписка</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="КодПозицииИзСписка" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПозицииСписка" Вид="Реквизит" Тип="СправочникСсылка.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения"/>
						<КодПравилаКонвертации>СпискиПрофессийДолжностейЛьготногоПенсОбеспечения </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПенсияЗаВыслугуЛет --&gt; ОснованиеВыслугиЛет</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПенсияЗаВыслугуЛет" Вид="Реквизит"/>
						<Приемник Имя="ОснованиеВыслугиЛет" Вид="Реквизит" Тип="СправочникСсылка.ОснованияВыслугиЛет"/>
						<КодПравилаКонвертации>ОснованияВыслугиЛет                               </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>Категория --&gt; КатегорияСтатистическогоУчета</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Категория" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииСотрудников"/>
						<Приемник Имя="КатегорияСтатистическогоУчета" Вид="Реквизит" Тип="ПеречислениеСсылка.КатегорииДолжностейДляСтатистическогоУчета"/>
						<КодПравилаКонвертации>КатегорииДолжностейДляСтатистическогоУчета        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>ЛетныйЭкипаж --&gt; ЯвляетсяДолжностьюЛетногоЭкипажа</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ЛетныйЭкипаж" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ЯвляетсяДолжностьюЛетногоЭкипажа" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>ЯвляетсяФармацевтическойДолжностью --&gt; ЯвляетсяФармацевтическойДолжностью</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ЯвляетсяФармацевтическойДолжностью" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ЯвляетсяФармацевтическойДолжностью" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией --&gt; ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПе</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией"/>
						<Приемник Имя="ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией"/>
						<КодПравилаКонвертации>ВидыРаботСДосрочнойПенсией                        </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоходыЕСН</Код>
				<Наименование> --&gt; СправочникСсылка.ДоходыЕСН</Наименование>
				<Порядок>500</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование",	Строка(Источник));</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ПеречислениеСсылка.ТипыДоходовДляЕСН</Источник>
				<Приемник>СправочникСсылка.ДоходыЕСН</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>8</Код>
						<Наименование>ЗаСчетПрибыли --&gt; ВыплатыЗаСчетПрибыли</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВыплатыЗаСчетПрибыли</Источник>
						<Приемник>ВыплатыЗаСчетПрибыли</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>ДенежноеДовольствиеВоеннослужащих --&gt; ДенежноеДово</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДенежноеДовольствиеВоеннослужащих</Источник>
						<Приемник>ДенежноеДовольствиеВоеннослужащих</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ДенежноеСодержаниеПрокуроров --&gt; ДенежноеСодержани</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДенежноеСодержаниеПрокуроров</Источник>
						<Приемник>ДенежноеСодержаниеПрокуроров</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование> --&gt; ДоговораАвторские</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДоговораАвторские</Источник>
						<Приемник>ДоговораАвторские</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование> --&gt; ДоговораГПХ</Наименование>
						<Порядок>250</Порядок>
						<Источник>ДоговораГПХ</Источник>
						<Приемник>ДоговораГПХ</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>ДоговораЛицензионные --&gt; НеЯвляетсяОбъектом</Наименование>
						<Порядок>300</Порядок>
						<Источник>ДоговораЛицензионные</Источник>
						<Приемник>ДоговораАвторские</Приемник>
					</Значение>
					<Значение>
						<Код>1</Код>
						<Наименование>ЗаСчетПрибыли --&gt; ВыплатыЗаСчетПрибыли</Наименование>
						<Порядок>350</Порядок>
						<Источник>ЗаСчетПрибыли</Источник>
						<Приемник>ВыплатыЗаСчетПрибыли</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование> --&gt; Матпомощь</Наименование>
						<Порядок>400</Порядок>
						<Источник>Матпомощь</Источник>
						<Приемник>Матпомощь</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование> --&gt; МатпомощьПриРожденииРебенка</Наименование>
						<Порядок>450</Порядок>
						<Источник>МатпомощьПриРожденииРебенка</Источник>
						<Приемник>МатпомощьПриРожденииРебенка</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование> --&gt; НеОблагаетсяЦеликом</Наименование>
						<Порядок>500</Порядок>
						<Источник>НеОблагаетсяЦеликом</Источник>
						<Приемник>НеОблагаетсяЦеликом</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НеЯвляетсяОбъектомЕСН --&gt; НеЯвляетсяОбъектом</Наименование>
						<Порядок>550</Порядок>
						<Источник>НеЯвляетсяОбъектомЕСН</Источник>
						<Приемник>НеЯвляетсяОбъектом</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>НеЯвляетсяОбъектомЕСН --&gt; НеЯвляетсяОбъектом</Наименование>
						<Порядок>600</Порядок>
						<Источник>НеЯвляетсяОбъектом</Источник>
						<Приемник>НеЯвляетсяОбъектом</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ст236п1 --&gt; ОблагаетсяЦеликом</Наименование>
						<Порядок>650</Порядок>
						<Источник>ОблагаетсяЦеликом</Источник>
						<Приемник>ОблагаетсяЦеликом</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование> --&gt; ПособияЗаСчетФСС</Наименование>
						<Порядок>700</Порядок>
						<Источник>ПособияЗаСчетФСС</Источник>
						<Приемник>ПособияЗаСчетФСС</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование> --&gt; РаспределятьПоБазовымНачислениям</Наименование>
						<Порядок>750</Порядок>
						<Источник>РаспределятьПоБазовымНачислениям</Источник>
						<Приемник>РаспределятьПоБазовымНачислениям</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ст236п1 --&gt; ОблагаетсяЦеликом</Наименование>
						<Порядок>800</Порядок>
						<Источник>ст236п1</Источник>
						<Приемник>НеЯвляетсяОбъектом</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ст238п1пп13 --&gt; ОблагаетсяЦеликом</Наименование>
						<Порядок>850</Порядок>
						<Источник>ст238п1пп13</Источник>
						<Приемник>МатпомощьПриРожденииРебенка</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ст238п2а2 --&gt; ОблагаетсяЦеликом</Наименование>
						<Порядок>900</Порядок>
						<Источник>ст238п2а2</Источник>
						<Приемник>Матпомощь</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ст238п2а3 --&gt; НеЯвляетсяОбъектом</Наименование>
						<Порядок>950</Порядок>
						<Источник>ст238п2а3</Источник>
						<Приемник>НеЯвляетсяОбъектом</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ЦеликомОблагаемый --&gt; ОблагаетсяЦеликом</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ЦеликомОблагаемый</Источник>
						<Приемник>ОблагаетсяЦеликом</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДоходыНДФЛ</Код>
				<Наименование> --&gt; СправочникСсылка.ДоходыНДФЛ</Наименование>
				<Порядок>550</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	ВходящиеДанные.Установить("Код",			Источник);
	ВходящиеДанные.Установить("Наименование",	Источник);
Иначе
	ВходящиеДанные.Установить("Код",			Источник.Код);
	ВходящиеДанные.Установить("Наименование",	Источник.Наименование);
КонецЕсли;</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.ВидыДоходов</Источник>
				<Приемник>СправочникСсылка.ДоходыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ДоходыПоСтраховымВзносам</Код>
				<Наименование> --&gt; СправочникСсылка.ДоходыЕСН</Наименование>
				<Порядок>600</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование",	Строка(Источник));</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ПеречислениеСсылка.ТипыДоходовДляСтраховыхВзносов</Источник>
				<Приемник>СправочникСсылка.ДоходыПоСтраховымВзносам</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>13</Код>
						<Наименование> --&gt; Матпомощь</Наименование>
						<Порядок>350</Порядок>
						<Источник>Матпомощь</Источник>
						<Приемник>Матпомощь</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование> --&gt; МатпомощьПриРожденииРебенка</Наименование>
						<Порядок>400</Порядок>
						<Источник>МатпомощьПриРожденииРебенка</Источник>
						<Приемник>МатпомощьПриРожденииРебенка</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование> --&gt; НеОблагаетсяЦеликом</Наименование>
						<Порядок>450</Порядок>
						<Источник>НеОблагаетсяЦеликом</Источник>
						<Приемник>НеОблагаетсяЦеликом</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>НеЯвляетсяОбъектомЕСН --&gt; НеЯвляетсяОбъектом</Наименование>
						<Порядок>550</Порядок>
						<Источник>НеЯвляетсяОбъектом</Источник>
						<Приемник>НеЯвляетсяОбъектом</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ст236п1 --&gt; ОблагаетсяЦеликом</Наименование>
						<Порядок>600</Порядок>
						<Источник>ОблагаетсяЦеликом</Источник>
						<Приемник>ОблагаетсяЦеликом</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование> --&gt; АвторскиеАудиовизуальныеПроизведения</Наименование>
						<Порядок>650</Порядок>
						<Источник>АвторскиеАудиовизуальныеПроизведения</Источник>
						<Приемник>АвторскиеАудиовизуальныеПроизведения</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование> --&gt; АвторскиеГрафическиеПроизведения</Наименование>
						<Порядок>700</Порядок>
						<Источник>АвторскиеГрафическиеПроизведения</Источник>
						<Приемник>АвторскиеГрафическиеПроизведения</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование> --&gt; АвторскиеДругиеМузыкальныеПроизведения</Наименование>
						<Порядок>750</Порядок>
						<Источник>АвторскиеДругиеМузыкальныеПроизведения</Источник>
						<Приемник>АвторскиеДругиеМузыкальныеПроизведения</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование> --&gt; АвторскиеИсполнениеПроизведений</Наименование>
						<Порядок>800</Порядок>
						<Источник>АвторскиеИсполнениеПроизведений</Источник>
						<Приемник>АвторскиеИсполнениеПроизведений</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование> --&gt; АвторскиеЛитературныеПроизведения</Наименование>
						<Порядок>850</Порядок>
						<Источник>АвторскиеЛитературныеПроизведения</Источник>
						<Приемник>АвторскиеЛитературныеПроизведения</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование> --&gt; АвторскиеМузыкальноСценическиеПроизведение</Наименование>
						<Порядок>900</Порядок>
						<Источник>АвторскиеМузыкальноСценическиеПроизведение</Источник>
						<Приемник>АвторскиеМузыкальноСценическиеПроизведение</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование> --&gt; АвторскиеНаучныеТруды</Наименование>
						<Порядок>950</Порядок>
						<Источник>АвторскиеНаучныеТруды</Источник>
						<Приемник>АвторскиеНаучныеТруды</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование> --&gt; АвторскиеОткрытия</Наименование>
						<Порядок>1000</Порядок>
						<Источник>АвторскиеОткрытия</Источник>
						<Приемник>АвторскиеОткрытия</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование> --&gt; АвторскиеСкульптуры</Наименование>
						<Порядок>1050</Порядок>
						<Источник>АвторскиеСкульптуры</Источник>
						<Приемник>АвторскиеСкульптуры</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование> --&gt; ДенежноеДовольствиеВоеннослужащих</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ДенежноеДовольствиеВоеннослужащих</Источник>
						<Приемник>ДенежноеДовольствиеВоеннослужащих</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование> --&gt; ДенежноеСодержаниеПрокуроров</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ДенежноеСодержаниеПрокуроров</Источник>
						<Приемник>ДенежноеСодержаниеПрокуроров</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование> --&gt; ДоговорыГПХ</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ДоговорыГПХ</Источник>
						<Приемник>ДоговорыГПХ</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование> --&gt; ПособияЗаСчетФСС</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ПособияЗаСчетФСС</Источник>
						<Приемник>ПособияЗаСчетФСС</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование> --&gt; РаспределятьПоБазовымНачислениям</Наименование>
						<Порядок>1300</Порядок>
						<Источник>РаспределятьПоБазовымНачислениям</Источник>
						<Приемник>РаспределятьПоБазовымНачислениям</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ЗванияГражданскогоВоинскогоУчета</Код>
				<Наименование> --&gt; СправочникСсылка.ВоинскиеЗвания</Наименование>
				<Порядок>650</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
				<Приемник>СправочникСсылка.ЗваниеГражданскогоВоинскогоУчета</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторИспользованияРабочегоВремени</Код>
				<Наименование> --&gt; СправочникСсылка.КлассификаторИспользованияРабочегоВремени</Наименование>
				<Порядок>700</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.КлассификаторИспользованияРабочегоВремени</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Контрагенты</Код>
				<Наименование>СправочникСсылка.Контрагенты --&gt; СправочникСсылка.Контрагенты</Наименование>
				<Порядок>750</Порядок>
				<ПриВыгрузке>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",	ПривестиНомерКДлине(Источник.Код, 5));</ПриВыгрузке>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Контрагенты</Источник>
				<Приемник>СправочникСсылка.Контрагенты</Приемник>
				<Свойства>
					<Свойство Поиск="true" Обязательное="true">
						<Код>4</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>ИНН --&gt; ИНН</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПолнНаименование --&gt; НаименованиеПолное</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="ПолнНаименование" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КоэффициентыСтажа</Код>
				<Наименование>Справочник: Процентные надбавки по стажу</Наименование>
				<Порядок>800</Порядок>
				<ПослеВыгрузкиВФайл>СпрШкала = СоздатьОбъект("Справочник.ПроцентныеНадбавкиПоСтажуШкала");
СпрШкала.ИспользоватьВладельца(Источник);
СпрШкала.ПорядокРеквизита("Стаж");

НомерСтрокиШкалы = 1;
СтажС = 0;
СпрШкала.ВыбратьЭлементы();
Пока СпрШкала.ПолучитьЭлемент() = 1 Цикл
	Лет = Число(Лев(СпрШкала.Стаж, 2));	Месяцев = Число(Сред(СпрШкала.Стаж, 3, 2));	Дней = Число(Прав(СпрШкала.Стаж, 2));
	
	СтажПо = Лет * 12 + Месяцев;
	
	ПараметрыШкалы = СоздатьОбъект("СписокЗначений");
	ПараметрыШкалы.Установить("КоэффициентСтажа",	Источник);
	ПараметрыШкалы.Установить("НомерСтрокиШкалы",	НомерСтрокиШкалы);
	ПараметрыШкалы.Установить("СтажС",				СтажС);
	ПараметрыШкалы.Установить("СтажПо",				СтажПо);
	ПараметрыШкалы.Установить("Величина",			СпрШкала.Процент);
	
	ВыгрузитьПоПравилу(ПараметрыШкалы, , , , "ШкалаКоэффициентовСтажа");
	
	НомерСтрокиШкалы	= НомерСтрокиШкалы + 1;
	СтажС				= СтажПо;
КонецЦикла;</ПослеВыгрузкиВФайл>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.ПроцентныеНадбавкиПоСтажу</Источник>
				<Приемник>СправочникСсылка.КоэффициентыСтажа</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НазначениеЦелевыхСредств</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>850</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",	Прав(СокрЛП(Источник.Код), 9));</ПередВыгрузкой>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>СправочникСсылка.НазначениеЦелевыхСредств</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НематериальныеАктивы</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>900</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",	Прав(СокрЛП(Источник.Код), 9));</ПередВыгрузкой>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>СправочникСсылка.НематериальныеАктивы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НоменклатурныеГруппы</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>950</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",	Прав(СокрЛП(Источник.Код), 9));</ПередВыгрузкой>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>СправочникСсылка.НоменклатурныеГруппы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Группа>
				<Код>Образование</Код>
				<Наименование>Образование</Наименование>
				<Порядок>1000</Порядок>
				<Правило>
					<Код>КлассификаторСпециальностейПоОбразованию</Код>
					<Наименование>СправочникСсылка.ОКСО --&gt; СправочникСсылка.КлассификаторСпециальностейПоОбразованию</Наименование>
					<Порядок>50</Порядок>
					<ПриЗагрузке>Макет		= Справочники.КлассификаторСпециальностейПоОбразованию.ПолучитьМакет("КлассификаторСпециальностейПоОбразованию");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Источник>СправочникСсылка.ОКСО</Источник>
					<Приемник>СправочникСсылка.КлассификаторСпециальностейПоОбразованию</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КлассификаторСпециальностейПоОбразованиюСтрокой</Код>
					<Наименование>СправочникСсылка.ОКСО --&gt; СправочникСсылка.КлассификаторСпециальностейПоОбразованию</Наименование>
					<Порядок>100</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
					<ПриЗагрузке>Макет		= Справочники.КлассификаторСпециальностейПоОбразованию.ПолучитьМакет("КлассификаторСпециальностейПоОбразованию");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Приемник>СправочникСсылка.КлассификаторСпециальностейПоОбразованию</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>--&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>Награды</Код>
					<Наименование>Строка: Строка</Наименование>
					<Порядок>150</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Приемник>СправочникСсылка.Награды</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>--&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>УчебныеЗаведения</Код>
					<Наименование>СправочникСсылка.ОбразовательныеУчреждения --&gt; СправочникСсылка.УчебныеЗаведения</Наименование>
					<Порядок>200</Порядок>
					<Источник>СправочникСсылка.ОбразовательныеУчреждения</Источник>
					<Приемник>СправочникСсылка.УчебныеЗаведения</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
			<Правило>
				<Код>ОбъектыСтроительства</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>1050</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",	Прав(СокрЛП(Источник.Код), 9));</ПередВыгрузкой>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>СправочникСсылка.ОбъектыСтроительства</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Группа>
				<Код>ОКИН</Код>
				<Наименование>ОКИН</Наименование>
				<Порядок>1100</Порядок>
				<Правило>
					<Код>ВидыОбразованияФизЛиц</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.ВидыОбразованияФизЛиц</Наименование>
					<Порядок>50</Порядок>
					<ПриЗагрузке>Макет		= Справочники.ВидыОбразованияФизЛиц.ПолучитьМакет("КлассификаторВидовОбразования");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.ОКИН</Источник>
					<Приемник>СправочникСсылка.ВидыОбразованияФизЛиц</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОснованияУвольненияИзОрганизации</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.ОснованияУвольненияИзОрганизации</Наименование>
					<Порядок>100</Порядок>
					<ПередВыгрузкой>Если Источник.Наименование = "Соглашение сторон" Тогда
	Наименование = "п. 1 ст. 77 ТК"
	
ИначеЕсли Источник.Наименование = "Истечение срока трудового договора, кроме случаев, когда трудовые отношения фактически продолжаются" Тогда
	Наименование = "п. 2 ст. 77 ТК"
	
ИначеЕсли Источник.Наименование = "Призыв или поступление работника на военную службу" Тогда
	Наименование = "п. 1 ст.83 ТК"
	
ИначеЕсли Источник.Наименование = "Расторжение трудового договора (контракта) по инициативе работника, по инициативе администрации" Тогда
	Наименование = "п. 3 ст. 77 ТК"
	
ИначеЕсли Источник.Наименование = "Перевод работника, с его согласия, на другое предприятие или переход на выборную должность" Тогда
	Наименование = "п. 5 ст. 77 ТК"
	
ИначеЕсли Источник.Наименование = "Отказ работника от перевода на работу в другую местность вместе с предприятием, учреждением" Тогда
	Наименование = "п. 9 ст. 77 ТК"
	
ИначеЕсли Источник.Наименование = "Вступление в законную силу приговора суда, которым работник осужден к лишению свободы" Тогда
	Наименование = "п. 4 ст.83 ТК"
	
Иначе
	Наименование = Источник.Наименование;
	
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Наименование);</ПередВыгрузкой>
					<Источник>СправочникСсылка.ОКИН</Источник>
					<Приемник>СправочникСсылка.ОснованияУвольненияИзОрганизации</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>--&gt; Наименование</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Наименование --&gt; ТекстОснования</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="ТекстОснования" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КлассификаторСтранМира</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.КлассификаторСтранМира</Наименование>
					<Порядок>150</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	ВходящиеДанные.Установить("Наименование",	ВРег(Источник));
Иначе
	ВходящиеДанные.Установить("Наименование",	ВРег(Источник.Наименование));
КонецЕсли;</ПередВыгрузкой>
					<ПриЗагрузке>Макет		= Справочники.КлассификаторСтранМира.ПолучитьМакет("КлассификаторСтранМира");
Область		= Макет.НайтиТекст(ВРег(Объект.Наименование),,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код					= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
	Объект.НаименованиеПолное	= СокрЛП(Макет.Область(Область.Верх, Область.Лево + 3, Область.Низ, Область.Право + 3).Текст);
КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.ОКИН</Источник>
					<Приемник>СправочникСсылка.КлассификаторСтранМира</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>--&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СемейноеПоложениеФизЛиц</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.СемейноеПоложениеФизЛиц</Наименование>
					<Порядок>200</Порядок>
					<ПриЗагрузке>Макет		= Справочники.СемейноеПоложениеФизЛиц.ПолучитьМакет("КлассификаторСемейногоПоложения");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.ОКИН</Источник>
					<Приемник>СправочникСсылка.СемейноеПоложениеФизЛиц</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтепениРодстваФизЛиц</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.СтепениРодстваФизЛиц</Наименование>
					<Порядок>250</Порядок>
					<ПриЗагрузке>Макет		= Справочники.СтепениРодстваФизЛиц.ПолучитьМакет("КлассификаторРодства");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.ОКИН</Источник>
					<Приемник>СправочникСсылка.СтепениРодстваФизЛиц</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>СтепениЗнанияЯзыка</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.СтепениЗнанияЯзыка</Наименование>
					<Порядок>300</Порядок>
					<ПриЗагрузке>Макет		= Справочники.СтепениЗнанияЯзыка.ПолучитьМакет("КлассификаторСтепеньЗнанияЯзыка");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.ОКИН</Источник>
					<Приемник>СправочникСсылка.СтепениЗнанияЯзыка</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>УченыеСтепени</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.ЯзыкиНародовМира</Наименование>
					<Порядок>350</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
					<ПриЗагрузке>Макет		= Справочники.УченыеСтепени.ПолучитьМакет("КлассификаторУченыеСтепени");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Приемник>СправочникСсылка.УченыеСтепени</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>--&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЯзыкиНародовМира</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.ЯзыкиНародовМира</Наименование>
					<Порядок>350</Порядок>
					<ПриЗагрузке>Макет		= Справочники.ЯзыкиНародовМира.ПолучитьМакет("КлассификаторЯзыковНародовМира");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<Источник>СправочникСсылка.ОКИН</Источник>
					<Приемник>СправочникСсылка.ЯзыкиНародовМира</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>Наименование --&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>УченыеЗвания</Код>
					<Наименование>СправочникСсылка.ОКИН --&gt; СправочникСсылка.ЯзыкиНародовМира</Наименование>
					<Порядок>350</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
					<ПриЗагрузке>Макет		= Справочники.УченыеЗвания.ПолучитьМакет("КлассификаторУченыеЗвания");
Область		= Макет.НайтиТекст(Объект.Наименование,,,,,,);
// Код Получим из соответствующего макета
Если ТипЗнч(Область) &lt;&gt; Тип("Неопределено") Тогда
	Объект.Код	= СокрЛП(Макет.Область(Область.Верх, Область.Лево - 1, Область.Низ, Область.Право - 1).Текст);
КонецЕсли;</ПриЗагрузке>
					<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
					<Приемник>СправочникСсылка.УченыеЗвания</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>--&gt; Наименование</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
			<Правило>
				<Код>Организации</Код>
				<Наименование> --&gt; СправочникСсылка.Организации</Наименование>
				<Порядок>1150</Порядок>
				<ПередВыгрузкой>Если глТипВидЗначения(Источник) = "Справочник.Подразделения" Тогда
	Если Источник.Обособленное = 0 Тогда
		Если Источник.Родитель.Обособленное = 1 Тогда
			Источник = Источник.Родитель;
		Иначе
			Источник = "Наша организация";
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

КлючВыгружаемыхДанных = Источник;

ИНН_КПП	= СокрЛП(Константа.ИНН);
ИНН = "";
КПП = "";
ЮрФизЛицо = "";

ОдинадцатыйСимвол = Сред(ИНН_КПП,11,1);
Если (Строка(Число(ОдинадцатыйСимвол)) = ОдинадцатыйСимвол) И (ПустаяСтрока(ОдинадцатыйСимвол) = 0) Тогда // оказалось физическое лицо
	ИНН			= Лев(ИНН_КПП,12);
	КПП			= "";
	ЮрФизЛицо	= "ФизЛицо";
Иначе // оказалась организация	
	ИНН			= Лев(ИНН_КПП,10);
	КПП			= Прав(ИНН_КПП,9);
	ЮрФизЛицо	= "ЮрЛицо";
КонецЕсли;

Если Источник &lt;&gt; "Наша организация" Тогда
	КПП = СокрЛП(Источник.КПП);
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("ИНН",		ИНН);
ВходящиеДанные.Установить("КПП",		КПП);
ВходящиеДанные.Установить("ЮрФизЛицо",	ЮрФизЛицо);</ПередВыгрузкой>
				<ПриВыгрузке>СправочникСтавкиЕСН = СоздатьОбъект("Справочник.СтавкиЕСН");
СправочникСтавкиЕСН.ИспользоватьДату('01.01.2005');
ВидСтавокЕСНиПФР = "ДляНеСельскохозяйственныхПроизводителей";
Если СправочникСтавкиЕСН.НайтиПоКоду("ПФР_1") = 1 Тогда
	ВидСтавокЕСНиПФР = ?(СправочникСтавкиЕСН.Процент &lt;&gt; 20, "ДляСельскохозяйственныхПроизводителей", ВидСтавокЕСНиПФР)
КонецЕсли;

Если Источник = "Наша организация" Тогда
	ГоловнаяОрганизация			= "";
	НаименованиеПолное			= СокрЛП(Константа.НазваниеОрганизации);
	Наименование				= СокрЛП(Константа.СокращенноеНаименованиеОрганизации);
	Если ПустаяСтрока(Наименование) = 1 Тогда
		Наименование			= НаименованиеПолное;
	КонецЕсли;
	РайонныйКоэффициент			= Константа.РайонныйКоэффициент;
	РайонныйКоэффициентРФ		= Константа.РайонныйКоэффициентРФ;
	РегистрационныйНомерПФР		= Константа.РегистрационныйНомерПФР;
	ТерриториальныеУсловияПФР	= Константа.ТерриториальныеУсловия;
	КодПоОКАТО					= СокрЛП(Константа.КодПоОКАТО.ОКАТО);
	КодПоОКТМО					= СокрЛП(Константа.КодПоОКАТО.ОКТМО);

	Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
		ШаблонПроводки			= ШаблонПроводкиПоУмолчанию();
		СтатьяФинансирования	= ПолучитьОтражениеИзШаблона(ШаблонПроводки);
		СтатьяРасходов			= ШаблонПроводки;
	КонецЕсли;

Иначе
	ГоловнаяОрганизация			= "Наша организация";
	Наименование				= СокрЛП(Источник.Наименование);
	НаименованиеПолное			= СокрЛП(Источник.Наименование);
	РайонныйКоэффициент			= Источник.РайонныйКоэффициент;
	РайонныйКоэффициентРФ		= Источник.РайонныйКоэффициентРФ;
	РегистрационныйНомерПФР		= Источник.РегистрационныйНомерПФР;
	ТерриториальныеУсловияПФР	= Источник.ТерриториальныеУсловия;
	КодПоОКАТО					= СокрЛП(Источник.КодПоОКАТО.ОКАТО);
	КодПоОКТМО					= СокрЛП(Источник.КодПоОКАТО.ОКТМО);
	
	Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
		ШаблонПроводки			= ?(ПустоеЗначение(Источник.ШаблонПроводки) = 0, Источник.ШаблонПроводки, Константа.ПроводкаПоУмолчанию);
		СтатьяФинансирования	= ПолучитьОтражениеИзШаблона(ШаблонПроводки);
		СтатьяРасходов			= ?(ПустоеЗначение(ШаблонПроводки) = 0, ШаблонПроводки, ШаблонПроводкиПоУмолчанию());
	КонецЕсли;
	
КонецЕсли;

ВходящиеДанные.Установить("ГоловнаяОрганизация",		ГоловнаяОрганизация);
ВходящиеДанные.Установить("Наименование",				Наименование);
ВходящиеДанные.Установить("НаименованиеПолное",			НаименованиеПолное);
ВходящиеДанные.Установить("ВидСтавокЕСНиПФР",			ВидСтавокЕСНиПФР);
ВходящиеДанные.Установить("РайонныйКоэффициент",		РайонныйКоэффициент);
ВходящиеДанные.Установить("РайонныйКоэффициентРФ",		РайонныйКоэффициентРФ);
ВходящиеДанные.Установить("РегистрационныйНомерПФР",	РегистрационныйНомерПФР);
ВходящиеДанные.Установить("ТерриториальныеУсловияПФР",	ТерриториальныеУсловияПФР);
ВходящиеДанные.Установить("КодИМНС",					Константа.КодИМНС);
ВходящиеДанные.Установить("КодПоОКАТО",					КодПоОКАТО);
ВходящиеДанные.Установить("КодПоОКТМО",					КодПоОКТМО);
ВходящиеДанные.Установить("КодПоОКПО",					Константа.КодОКПО);
ВходящиеДанные.Установить("ОГРН",						Константа.ОГРН);
ВходящиеДанные.Установить("НаименованиеОКОПФ",			Константа.ОргПравФорма);
Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	ВходящиеДанные.Установить("СтатьяФинансирования",	СтатьяФинансирования);
	ВходящиеДанные.Установить("СтатьяРасходов",			СтатьяРасходов);
КонецЕсли;</ПриВыгрузке>
				<ПослеВыгрузкиВФайл>Если Источник &lt;&gt; "Наша организация" Тогда
	// Контактная информация организации
	// Адрес
	Стр = Источник.Адрес;

	Если ПустаяСтрока(Стр) = 0 Тогда
		СпРазбора = глРазложить(Стр);
		РазмерСписка = СпРазбора.РазмерСписка();
				
		Представление = "";
		Для Индекс = 2 По СпРазбора.РазмерСписка() Цикл
			Если ПустоеЗначение(СпРазбора.ПолучитьЗначение(Индекс)) = 0 Тогда
				Представление = Представление + ?(ПустоеЗначение(Представление) = 1, "", ", ")
				+?(Индекс = 8, "дом № ",
				?(Индекс = 9, "корпус ",
				?(Индекс = 10,"кв.", "")))
				+ СпРазбора.ПолучитьЗначение(Индекс);
			КонецЕсли;
		КонецЦикла;
		
		КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
		КонтактнаяИнформация.Установить("Объект",			Источник);
		КонтактнаяИнформация.Установить("Тип",				"Адрес");
		КонтактнаяИнформация.Установить("Вид",				"ЮрАдресОрганизации");
		КонтактнаяИнформация.Установить("Поле1",			?(РазмерСписка &gt; 6,  СпРазбора.ПолучитьЗначение(2), ""));
		КонтактнаяИнформация.Установить("Поле2",			?(РазмерСписка &gt; 7,  СпРазбора.ПолучитьЗначение(3), ""));
		КонтактнаяИнформация.Установить("Поле3",			?(РазмерСписка &gt; 8,  СпРазбора.ПолучитьЗначение(4), ""));
		КонтактнаяИнформация.Установить("Поле4",			?(РазмерСписка &gt; 9,  СпРазбора.ПолучитьЗначение(5), ""));
		КонтактнаяИнформация.Установить("Поле5",			?(РазмерСписка &gt; 10, СпРазбора.ПолучитьЗначение(6), ""));
		КонтактнаяИнформация.Установить("Поле6",			СпРазбора.ПолучитьЗначение(РазмерСписка-3));
		КонтактнаяИнформация.Установить("Поле7",			СпРазбора.ПолучитьЗначение(РазмерСписка-2));
		КонтактнаяИнформация.Установить("Поле8",			СпРазбора.ПолучитьЗначение(РазмерСписка-1));
		КонтактнаяИнформация.Установить("Поле9",			СпРазбора.ПолучитьЗначение(РазмерСписка));
		КонтактнаяИнформация.Установить("Представление",	Представление);
		КонтактнаяИнформация.Установить("ТипОбъекта",		"Орг");
			
		ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
	КонецЕсли;

	// Ответственные лица организации.
	ПерРеквизит = СоздатьОбъект("Периодический");

	ПерРеквизит.ИспользоватьОбъект("Руководитель", Источник);
	ПерРеквизит.ВыбратьЗначения();
	Пока ПерРеквизит.ПолучитьЗначение() &gt; 0 Цикл
		Если (ПустоеЗначение(ПерРеквизит.Значение) = 1) Тогда
			Продолжить;
		КонецЕсли;
		
		ОтветственноеЛицо = СоздатьОбъект("СписокЗначений");
		ОтветственноеЛицо.Установить("Период",				ПерРеквизит.ДатаЗнач);
		ОтветственноеЛицо.Установить("СтруктурнаяЕдиница",	Источник);
		ОтветственноеЛицо.Установить("ОтветственноеЛицо",	"Руководитель");
		ОтветственноеЛицо.Установить("ФизическоеЛицо",		ПерРеквизит.Значение);
		ОтветственноеЛицо.Установить("Должность",			ЗначениеПериодическогоРеквизитаНаНачало("Должность", ПерРеквизит.Значение, ПерРеквизит.ДатаЗнач));
		
		ВыгрузитьПоПравилу(ОтветственноеЛицо, , , , "ОтветственныеЛицаОрганизаций");
	КонецЦикла;

	ПерРеквизит.ИспользоватьОбъект("Бухгалтер", Источник);
	ПерРеквизит.ВыбратьЗначения();
	Пока ПерРеквизит.ПолучитьЗначение() &gt; 0 Цикл
		Если (ПустоеЗначение(ПерРеквизит.Значение) = 1) Тогда
			Продолжить;
		КонецЕсли;
		
		ОтветственноеЛицо = СоздатьОбъект("СписокЗначений");
		ОтветственноеЛицо.Установить("Период",				ПерРеквизит.ДатаЗнач);
		ОтветственноеЛицо.Установить("СтруктурнаяЕдиница",	Источник);
		ОтветственноеЛицо.Установить("ОтветственноеЛицо",	"ГлавныйБухгалтер");
		ОтветственноеЛицо.Установить("ФизическоеЛицо",		ПерРеквизит.Значение);
		ОтветственноеЛицо.Установить("Должность",			ЗначениеПериодическогоРеквизитаНаНачало("Должность", ПерРеквизит.Значение, ПерРеквизит.ДатаЗнач));
		
		ВыгрузитьПоПравилу(ОтветственноеЛицо, , , , "ОтветственныеЛицаОрганизаций");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<ПослеЗагрузки>Объект.УстановитьНовыйКод();

Если Объект.ГоловнаяОрганизация.Пустая() Тогда
	Если Объект.ЭтоНовый() Тогда
		Объект.УстановитьСсылкуНового(Справочники.Организации.ПолучитьСсылку());

		Параметры.Вставить("Организация",	Объект.ПолучитьСсылкуНового());
	Иначе
		Параметры.Вставить("Организация",	Объект.Ссылка);
		
	КонецЕсли;
КонецЕсли;</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.Подразделения</Источник>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство>
						<Код>15</Код>
						<Наименование>--&gt; ГоловнаяОрганизация</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГоловнаяОрганизация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; ИНН</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; КПП</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; ЮрФизЛицо</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЮрФизЛицо" Вид="Реквизит" Тип="ПеречислениеСсылка.ЮрФизЛицо"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ВидСтавокЕСНиПФР</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтавокЕСНиПФР" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтавокЕСНиПФР"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; КодИМНС</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>--&gt; КодПоОКТМО</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; КодПоОКАТО</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; КодПоОКПО</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКПО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; ОГРН</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОГРН" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; РайонныйКоэффициент</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РайонныйКоэффициент" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; РайонныйКоэффициентРФ</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РайонныйКоэффициентРФ" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; РегистрационныйНомерПФР</Наименование>
						<Порядок>750</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РегистрационныйНомерПФР" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ТерриториальныеУсловияПФР</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТерриториальныеУсловияПФР" Вид="Реквизит" Тип="СправочникСсылка.ТерриториальныеУсловия"/>
						<КодПравилаКонвертации>ТерриториальныеУсловия                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; НаименованиеОКОПФ</Наименование>
						<Порядок>850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеОКОПФ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПодразделенияОрганизаций</Код>
				<Наименование>СправочникСсылка.Подразделения --&gt; СправочникСсылка.ПодразделенияОрганизаций</Наименование>
				<Порядок>1200</Порядок>
				<ПередВыгрузкой>Владелец = "Наша организация";

Если глТипВидЗначения(Источник) = "Справочник.Подразделения" Тогда
	Если Источник.Обособленное = 1 Тогда
		Владелец = Источник;
	Иначе
		Если Источник.Родитель.Обособленное = 1 Тогда
			Владелец = Источник.Родитель;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",						ПривестиНомерКДлине(Источник.Код, 9));
ВходящиеДанные.Установить("Владелец",					Владелец);

Если Владелец = "Наша организация" Тогда
	ВходящиеДанные.Установить("Родитель",	Источник.Родитель);
	ВходящиеДанные.Установить("КодПоОКАТО",	СокрЛП(Источник.КодПоОКАТО.ОКАТО));
	ВходящиеДанные.Установить("КодПоОКТМО",	СокрЛП(Источник.КодПоОКАТО.ОКТМО));
	ВходящиеДанные.Установить("КПП",		Источник.КПП);
КонецЕсли;

Если ПустоеЗначение(Источник.КодПоОКАТО.Код) = 0 Тогда
	ВходящиеДанные.Установить("РайонныйКоэффициент",		Константа.РайонныйКоэффициент);
	ВходящиеДанные.Установить("РайонныйКоэффициентРФ",		Константа.РайонныйКоэффициентРФ);
	ВходящиеДанные.Установить("ТерриториальныеУсловияПФР",	Константа.ТерриториальныеУсловия);
Иначе
	ВходящиеДанные.Установить("РайонныйКоэффициент",		1);
	ВходящиеДанные.Установить("РайонныйКоэффициентРФ",		1);
	ВходящиеДанные.Установить("ТерриториальныеУсловияПФР",	);
КонецЕсли;</ПередВыгрузкой>
				<ПослеЗагрузки>Выполнить(Алгоритмы.УстановитьАктуальность);</ПослеЗагрузки>
				<Источник>СправочникСсылка.Подразделения</Источник>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>--&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; КодПоОКАТО</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; КодПоОКТМО</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; КПП</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; РайонныйКоэффициент</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РайонныйКоэффициент" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; РайонныйКоэффициентРФ</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РайонныйКоэффициентРФ" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ТерриториальныеУсловияПФР</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТерриториальныеУсловияПФР" Вид="Реквизит" Тип="СправочникСсылка.ТерриториальныеУсловия"/>
						<КодПравилаКонвертации>ТерриториальныеУсловия                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>СоответствуетСудамПодФлагомРФ --&gt; СоответствуетСудамПодФлагомРФ</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="СоответствуетСудамПодФлагомРФ" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="СоответствуетСудамПодФлагомРФ" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПоказателиСхемМотивации</Код>
				<Наименование> --&gt; СправочникСсылка.ПоказателиСхемМотивации</Наименование>
				<Порядок>1250</Порядок>
				<ПередВыгрузкой>Наименование = Источник.Получить("Наименование");

КлючВыгружаемыхДанных	= Наименование;

Разделители	=  " .,+,-,/,*,?,=,&lt;,&gt;,(,)%!@#$%&amp;*""№:;{}[]?()\|/`~'^_";

Идентификатор = "";
БылСпецСимвол = 0;
Для НомСимвола = 1 По СтрДлина(Наименование) Цикл
	Символ = Сред(Наименование,НомСимвола,1);
	Если Найти(Разделители, Символ) &lt;&gt; 0 Тогда
		БылСпецСимвол = 1;
	ИначеЕсли БылСпецСимвол = 1 Тогда
		БылСпецСимвол = 0;
		Идентификатор = Идентификатор + ВРег(Символ);
	Иначе
		Идентификатор = Идентификатор + Символ;		
	КонецЕсли;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Идентификатор", Идентификатор);</ПередВыгрузкой>
				<ПриЗагрузке>Если Объект.Предопределенный Тогда
	НеЗамещатьОбъект = Истина;
КонецЕсли</ПриЗагрузке>
				<Приемник>СправочникСсылка.ПоказателиСхемМотивации</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>--&gt; Идентификатор</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Идентификатор" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ВозможностьИзменения</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВозможностьИзменения" Вид="Реквизит" Тип="ПеречислениеСсылка.ИзменениеПоказателейСхемМотивации"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ТипПоказателя</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТипПоказателя" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипыПоказателейСхемМотивации"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ВидПоказателя</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПоказателя" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПоказателейСхемМотивации"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПрофессииРабочих</Код>
				<Наименование>СправочникСсылка.ОКПДТР --&gt; СправочникСсылка.ПрофессииРабочих</Наименование>
				<Порядок>1300</Порядок>
				<Источник>СправочникСсылка.ОКПДТР</Источник>
				<Приемник>СправочникСсылка.ПрофессииРабочих</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПрочиеДоходыИРасходы</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>1350</Порядок>
				<ПриВыгрузке>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",	Прав(СокрЛП(Источник.Код), 9));</ПриВыгрузке>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>СправочникСсылка.ПрочиеДоходыИРасходы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасходыБудущихПериодов</Код>
				<Наименование>Справочник: Значения субконто</Наименование>
				<Порядок>1400</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",	Прав(СокрЛП(Источник.Код), 9));</ПередВыгрузкой>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>СправочникСсылка.РасходыБудущихПериодов</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Группа>
				<Код>СЗВ</Код>
				<Наименование>СЗВ</Наименование>
				<Порядок>1450</Порядок>
				<Правило>
					<Код>ОснованияВыслугиЛет</Код>
					<Наименование>ПеречислениеСсылка.СЗВОснованияВыслугиЛет --&gt; СправочникСсылка.ОснованияВыслугиЛет</Наименование>
					<Порядок>50</Порядок>
					<НеЗамещать>true</НеЗамещать>
					<Источник>ПеречислениеСсылка.СЗВОснованияВыслугиЛет2002</Источник>
					<Приемник>СправочникСсылка.ОснованияВыслугиЛет</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения>
						<Значение>
							<Код>32</Код>
							<Наименование>ВЫСШПИЛ --&gt; ВЫСШПИЛ</Наименование>
							<Порядок>50</Порядок>
							<Источник>ВЫСШПИЛ</Источник>
							<Приемник>ВЫСШПИЛ</Приемник>
						</Значение>
						<Значение>
							<Код>33</Код>
							<Наименование>ИНСПЕКТ --&gt; ИНСПЕКТ</Наименование>
							<Порядок>100</Порядок>
							<Источник>ИНСПЕКТ</Источник>
							<Приемник>ИНСПЕКТ</Приемник>
						</Значение>
						<Значение>
							<Код>34</Код>
							<Наименование>ИСПКЛС1 --&gt; ИСПКЛС1</Наименование>
							<Порядок>150</Порядок>
							<Источник>ИСПКЛС1</Источник>
							<Приемник>ИСПКЛС1</Приемник>
						</Значение>
						<Значение>
							<Код>35</Код>
							<Наименование>ИТСИСП --&gt; ИТСИСП</Наименование>
							<Порядок>200</Порядок>
							<Источник>ИТСИСП</Источник>
							<Приемник>ИТСИСП</Приемник>
						</Значение>
						<Значение>
							<Код>36</Код>
							<Наименование>ИТСМАВ --&gt; ИТСМАВ</Наименование>
							<Порядок>250</Порядок>
							<Источник>ИТСМАВ</Источник>
							<Приемник>ИТСМАВ</Приемник>
						</Значение>
						<Значение>
							<Код>37</Код>
							<Наименование>ЛЕТИСП --&gt; ЛЕТИСП</Наименование>
							<Порядок>300</Порядок>
							<Источник>ЛЕТИСП</Источник>
							<Приемник>ЛЕТИСП</Приемник>
						</Значение>
						<Значение>
							<Код>38</Код>
							<Наименование>ЛЕТРАБ --&gt; ЛЕТРАБ</Наименование>
							<Порядок>350</Порядок>
							<Источник>ЛЕТРАБ</Источник>
							<Приемник>ЛЕТРАБ</Приемник>
						</Значение>
						<Значение>
							<Код>39</Код>
							<Наименование>НОРМАПР --&gt; НОРМАПР</Наименование>
							<Порядок>400</Порядок>
							<Источник>НОРМАПР</Источник>
							<Приемник>НОРМАПР</Приемник>
						</Значение>
						<Значение>
							<Код>40</Код>
							<Наименование>НОРМСП --&gt; НОРМСП</Наименование>
							<Порядок>450</Порядок>
							<Источник>НОРМСП</Источник>
							<Приемник>НОРМСП</Приемник>
						</Значение>
						<Значение>
							<Код>41</Код>
							<Наименование>ОПЫТИСП --&gt; ОПЫТИСП</Наименование>
							<Порядок>500</Порядок>
							<Источник>ОПЫТИСП</Источник>
							<Приемник>ОПЫТИСП</Приемник>
						</Значение>
						<Значение>
							<Код>42</Код>
							<Наименование>РЕАКТИВН --&gt; РЕАКТИВН</Наименование>
							<Порядок>550</Порядок>
							<Источник>РЕАКТИВН</Источник>
							<Приемник>РЕАКТИВН</Приемник>
						</Значение>
						<Значение>
							<Код>43</Код>
							<Наименование>САМОЛЕТ --&gt; САМОЛЕТ</Наименование>
							<Порядок>600</Порядок>
							<Источник>САМОЛЕТ</Источник>
							<Приемник>САМОЛЕТ</Приемник>
						</Значение>
						<Значение>
							<Код>44</Код>
							<Наименование>СПАСАВ --&gt; СПАСАВ</Наименование>
							<Порядок>650</Порядок>
							<Источник>СПАСАВ</Источник>
							<Приемник>СПАСАВ</Приемник>
						</Значение>
						<Значение>
							<Код>45</Код>
							<Наименование>СПЕЦАВ --&gt; СПЕЦАВ</Наименование>
							<Порядок>700</Порядок>
							<Источник>СПЕЦАВ</Источник>
							<Приемник>СПЕЦАВ</Приемник>
						</Значение>
						<Значение>
							<Код>46</Код>
							<Наименование>ТВОРЧ15 --&gt; ТВОРЧ15</Наименование>
							<Порядок>750</Порядок>
							<Источник>ТВОРЧ15</Источник>
							<Приемник>ТВОРЧ15</Приемник>
						</Значение>
						<Значение>
							<Код>47</Код>
							<Наименование>ТВОРЧ20 --&gt; ТВОРЧ20</Наименование>
							<Порядок>800</Порядок>
							<Источник>ТВОРЧ20</Источник>
							<Приемник>ТВОРЧ20</Приемник>
						</Значение>
						<Значение>
							<Код>48</Код>
							<Наименование>ТВОРЧ25 --&gt; ТВОРЧ25</Наименование>
							<Порядок>850</Порядок>
							<Источник>ТВОРЧ25</Источник>
							<Приемник>ТВОРЧ25</Приемник>
						</Значение>
						<Значение>
							<Код>49</Код>
							<Наименование>ТВОРЧ30 --&gt; ТВОРЧ30</Наименование>
							<Порядок>900</Порядок>
							<Источник>ТВОРЧ30</Источник>
							<Приемник>ТВОРЧ30</Приемник>
						</Значение>
						<Значение>
							<Код>50</Код>
							<Наименование>УЧЛЕТ --&gt; УЧЛЕТ</Наименование>
							<Порядок>950</Порядок>
							<Источник>УЧЛЕТ</Источник>
							<Приемник>УЧЛЕТ</Приемник>
						</Значение>
						<Значение>
							<Код>51</Код>
							<Наименование>ст27п11ВП --&gt; Ст27_11ВП</Наименование>
							<Порядок>1000</Порядок>
							<Источник>ст27п11ВП</Источник>
							<Приемник>Ст27_11ВП</Приемник>
						</Значение>
						<Значение>
							<Код>52</Код>
							<Наименование>ст27п11ГР --&gt; Ст27_11ГР</Наименование>
							<Порядок>1050</Порядок>
							<Источник>ст27п11ГР</Источник>
							<Приемник>Ст27_11ГР</Приемник>
						</Значение>
						<Значение>
							<Код>53</Код>
							<Наименование>ст27п12 --&gt; Ст27_12</Наименование>
							<Порядок>1100</Порядок>
							<Источник>ст27п12</Источник>
							<Приемник>Ст27_12</Приемник>
						</Значение>
						<Значение>
							<Код>54</Код>
							<Наименование>ст27п14 --&gt; Ст27_14</Наименование>
							<Порядок>1150</Порядок>
							<Источник>ст27п14</Источник>
							<Приемник>Ст27_14</Приемник>
						</Значение>
						<Значение>
							<Код>55</Код>
							<Наименование>ст27п15 --&gt; Ст27_15</Наименование>
							<Порядок>1200</Порядок>
							<Источник>ст27п15</Источник>
							<Приемник>Ст27_15</Приемник>
						</Значение>
						<Значение>
							<Код>56</Код>
							<Наименование>ст28пГД --&gt; Ст28_ГД</Наименование>
							<Порядок>1250</Порядок>
							<Источник>ст28пГД</Источник>
							<Приемник>Ст28_ГД</Приемник>
						</Значение>
						<Значение>
							<Код>57</Код>
							<Наименование>ст28пГДХР --&gt; Ст28_ГДХР</Наименование>
							<Порядок>1300</Порядок>
							<Источник>ст28пГДХР</Источник>
							<Приемник>Ст28_ГДХР</Приемник>
						</Значение>
						<Значение>
							<Код>58</Код>
							<Наименование>ст28пПД --&gt; Ст28_ПД</Наименование>
							<Порядок>1350</Порядок>
							<Источник>ст28пПД</Источник>
							<Приемник>Ст28_ПД</Приемник>
						</Значение>
						<Значение>
							<Код>59</Код>
							<Наименование>ст28пПДРК --&gt; Ст28_ПДРК</Наименование>
							<Порядок>1400</Порядок>
							<Источник>ст28пПДРК</Источник>
							<Приемник>Ст28_ПДРК</Приемник>
						</Значение>
						<Значение>
							<Код>60</Код>
							<Наименование>ст28пСМ --&gt; Ст28_СМ</Наименование>
							<Порядок>1450</Порядок>
							<Источник>ст28пСМ</Источник>
							<Приемник>Ст28_СМ</Приемник>
						</Значение>
						<Значение>
							<Код>61</Код>
							<Наименование>ст28пСМХР --&gt; Ст28_СМХР</Наименование>
							<Порядок>1500</Порядок>
							<Источник>ст28пСМХР</Источник>
							<Приемник>Ст28_СМХР</Приемник>
						</Значение>
						<Значение>
							<Код>62</Код>
							<Наименование>ст28пСП --&gt; Ст28_СП</Наименование>
							<Порядок>1550</Порядок>
							<Источник>ст28пСП</Источник>
							<Приемник>Ст28_СП</Приемник>
						</Значение>
					</Значения>
				</Правило>
				<Правило>
					<Код>СпискиПрофессийДолжностейЛьготногоПенсОбеспечения</Код>
					<Наименование> --&gt; СправочникСсылка.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения</Наименование>
					<Порядок>200</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код", Источник);</ПередВыгрузкой>
					<НеЗамещать>true</НеЗамещать>
					<Приемник>СправочникСсылка.СпискиПрофессийДолжностейЛьготногоПенсионногоОбеспечения</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>--&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ТерриториальныеУсловия</Код>
					<Наименование>ПеречислениеСсылка.ТерриториальныеУсловия --&gt; СправочникСсылка.ТерриториальныеУсловия</Наименование>
					<Порядок>250</Порядок>
					<НеЗамещать>true</НеЗамещать>
					<Источник>ПеречислениеСсылка.ТерриториальныеУсловия</Источник>
					<Приемник>СправочникСсылка.ТерриториальныеУсловия</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование> --&gt; Код</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения>
						<Значение>
							<Код>8</Код>
							<Наименование>МКС --&gt; МКС</Наименование>
							<Порядок>50</Порядок>
							<Источник>МКС</Источник>
							<Приемник>МКС</Приемник>
						</Значение>
						<Значение>
							<Код>9</Код>
							<Наименование>РКС --&gt; РКС</Наименование>
							<Порядок>100</Порядок>
							<Источник>РКС</Источник>
							<Приемник>РКС</Приемник>
						</Значение>
						<Значение>
							<Код>10</Код>
							<Наименование>Ч31 --&gt; Ч31</Наименование>
							<Порядок>150</Порядок>
							<Источник>Ч31</Источник>
							<Приемник>Ч31</Приемник>
						</Значение>
						<Значение>
							<Код>11</Код>
							<Наименование>Ч33 --&gt; Ч33</Наименование>
							<Порядок>200</Порядок>
							<Источник>Ч33</Источник>
							<Приемник>Ч33</Приемник>
						</Значение>
						<Значение>
							<Код>12</Код>
							<Наименование>Ч34 --&gt; Ч34</Наименование>
							<Порядок>250</Порядок>
							<Источник>Ч34</Источник>
							<Приемник>Ч34</Приемник>
						</Значение>
						<Значение>
							<Код>13</Код>
							<Наименование>Ч35 --&gt; Ч35</Наименование>
							<Порядок>300</Порядок>
							<Источник>Ч35</Источник>
							<Приемник>Ч35</Приемник>
						</Значение>
						<Значение>
							<Код>14</Код>
							<Наименование>Ч36 --&gt; Ч36</Наименование>
							<Порядок>350</Порядок>
							<Источник>Ч36</Источник>
							<Приемник>Ч36</Приемник>
						</Значение>
						<Значение>
							<Код>15</Код>
							<Наименование> --&gt; МКСР</Наименование>
							<Порядок>400</Порядок>
							<Источник>МКСР</Источник>
							<Приемник>МКСР</Приемник>
						</Значение>
						<Значение>
							<Код>16</Код>
							<Наименование> --&gt; РКСМ</Наименование>
							<Порядок>450</Порядок>
							<Источник>РКСМ</Источник>
							<Приемник>РКСМ</Приемник>
						</Значение>
					</Значения>
				</Правило>
			</Группа>
			<Правило>
				<Код>СоставыВоеннослужащих</Код>
				<Наименование>:</Наименование>
				<Порядок>1500</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", Источник);</ПередВыгрузкой>
				<Приемник>СправочникСсылка.СоставыВоеннослужащих</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СотрудникиОрганизаций</Код>
				<Наименование> --&gt; СправочникСсылка.СотрудникиОрганизаций</Наименование>
				<Порядок>1550</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= 
	Строка(Источник.Получить("Физлицо")) + 
	Строка(Источник.Получить("ВидДоговора")) + 
	Строка(Источник.Получить("ВидЗанятости")) + 
	Источник.Получить("НомерДоговора") + 
	Строка(Источник.Получить("ДатаДоговора"));</ПередВыгрузкой>
				<ПриВыгрузке>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Родитель", Источник.Получить("Физлицо").Родитель);</ПриВыгрузке>
				<Приемник>СправочникСсылка.СотрудникиОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("Код"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("Наименование"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
						<КодПравилаКонвертации>СотрудникиОрганизацийГруппа                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Физлицо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ВидДоговора</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровСФизЛицами"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; ВидЗанятости</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятостиВОрганизации"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование> --&gt; ДатаДоговора</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаДоговора" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>13</Код>
						<Наименование> --&gt; НомерДоговора</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерДоговора" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СотрудникиОрганизацийВсеДанные</Код>
				<Наименование> --&gt; СправочникСсылка.СотрудникиОрганизаций</Наименование>
				<Порядок>1600</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных	= 
	Строка(Источник.Получить("Физлицо")) + 
	Строка(Источник.Получить("ВидДоговора")) + 
	Строка(Источник.Получить("ВидЗанятости")) + 
	Источник.Получить("НомерДоговора") + 
	Строка(Источник.Получить("ДатаДоговора"));</ПередВыгрузкой>
				<ПриВыгрузке>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Родитель", Источник.Получить("Физлицо").Родитель);</ПриВыгрузке>
				<Приемник>СправочникСсылка.СотрудникиОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("Код"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("Наименование"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>--&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
						<КодПравилаКонвертации>СотрудникиОрганизацийГруппа                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Актуальность</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Актуальность" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>--&gt; Физлицо</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ОбособленноеПодразделение"));</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование> --&gt; ВидДоговора</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровСФизЛицами"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; ВидЗанятости</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЗанятости" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыЗанятостиВОрганизации"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ПодразделениеОрганизации"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("Должность"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; ГрафикРаботы</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
						<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ГрафикРаботы"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ЗанимаемыхСтавок</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗанимаемыхСтавок" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ЗанимаемыхСтавок"));</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование>--&gt; ДатаДоговора</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаДоговора" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование>--&gt; НомерДоговора</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерДоговора" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; ДатаНачала</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ДатаНачала"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; ДатаОкончания</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ДатаОкончания"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>--&gt; ВидРасчета</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
						<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ВидРасчета"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; ТарифнаяСтавка</Наименование>
						<Порядок>950</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТарифнаяСтавка" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ТарифнаяСтавка"));</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ВалютаТарифнойСтавки</Наименование>
						<Порядок>1000</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаТарифнойСтавки" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Получить("ВалютаТарифнойСтавки"));</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СотрудникиОрганизацийГруппа</Код>
				<Наименование> --&gt; СправочникСсылка.СотрудникиОрганизаций</Наименование>
				<Порядок>1650</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>СправочникСсылка.СотрудникиОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true" Обязательное="true">
						<Код>3</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
						<КодПравилаКонвертации>СотрудникиОрганизацийГруппа                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СпособыОтраженияЗарплатыВРеглУчете</Код>
				<Наименование>:</Наименование>
				<Порядок>1700</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Наименование = Источник;
Иначе
	Наименование = Источник.Получить("Наименование");
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование",	Наименование);

КлючВыгружаемыхДанных = Наименование;</ПередВыгрузкой>
				<ПослеЗагрузки>Если Объект.СчетДт &lt;&gt; ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
	Объект.СчетДтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Объект.СчетДт));
	Объект.СубконтоДтНУ1 = Объект.СубконтоДт1;
	Объект.СубконтоДтНУ2 = Объект.СубконтоДт2;
	Объект.СубконтоДтНУ3 = Объект.СубконтоДт3;
	
	Объект.СчетКтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Объект.СчетКт));
	Объект.СубконтоКтНУ1 = Объект.СубконтоКт1;
	Если Объект.СчетКтНУ = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда 
		И ЗначениеЗаполнено(Объект.СубконтоКтНУ1) Тогда
		Объект.СубконтоКтНУ2 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп1ст255;
	Иначе
		Объект.СубконтоКтНУ2 = Объект.СубконтоКт2;
	КонецЕсли;
	Объект.СубконтоКтНУ3 = Объект.СубконтоКт3;
КонецЕсли;</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Попытка
	НаименованиеЭлемента = СвойстваПоиска.Получить("Наименование");
	Если Найти(НаименованиеЭлемента, " ") = 0 Тогда
		СсылкаНаОбъект = Справочники.СпособыОтраженияЗарплатыВРеглУчете[НаименованиеЭлемента];
		ПрекратитьПоиск							= Истина;
		УстанавливатьУОбъектаВсеСвойстваПоиска	= Ложь;
	КонецЕсли;
Исключение КонецПопытки</ПоследовательностьПолейПоиска>
				<Приемник>СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>10</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; СчетДт</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетДт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<КодПравилаКонвертации>ПС                                                </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; СубконтоДт1</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
						<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(Источник.Получить("СубконтоДт1"), Отказ);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СубконтоДт2</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
						<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(Источник.Получить("СубконтоДт2"), Отказ);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; СубконтоДт3</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
						<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(Источник.Получить("СубконтоДт3"), Отказ);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; СчетКт</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СчетКт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						<КодПравилаКонвертации>ПС                                                </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СубконтоКт1</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
						<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(Источник.Получить("СубконтоКт1"), Отказ);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; СубконтоКт2</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
						<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(Источник.Получить("СубконтоКт2"), Отказ);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; СубконтоКт3</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СубконтоКт3" Вид="Реквизит"/>
						<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(Источник.Получить("СубконтоКт3"), Отказ);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ОтражениеВУСН</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатьиЗатрат</Код>
				<Наименование>Справочник: Виды субконто</Наименование>
				<Порядок>1750</Порядок>
				<ПриВыгрузке>ВидРасходовНУ = ВходящиеДанные;
Если ПустоеЗначение(ВидРасходовНУ) = 1 Тогда
	ВидРасходовНУ = "ОплатаТруда";
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код",			Прав(СокрЛП(Источник.Код), 9));
ВходящиеДанные.Установить("ВидРасходовНУ",	ВидРасходовНУ);</ПриВыгрузке>
				<Источник>СправочникСсылка.ЗначенияСубконто</Источник>
				<Приемник>СправочникСсылка.СтатьиЗатрат</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; ВидРасходовНУ</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидРасходовНУ" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыРасходовНУ"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЕТС</Код>
				<Наименование>Справочник: ЕТС</Наименование>
				<Порядок>1800</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Владелец", "Единая тарифная сетка (ЗиК)");
ВходящиеДанные.Установить("Код", "ЕТС" + Источник.Код);</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если Источник.ЭтоГруппа() = 0 Тогда
	ПерРеквизит = СоздатьОбъект("Периодический");
	ПерРеквизит.ИспользоватьОбъект("Оклад", Источник);
	ПерРеквизит.ВыбратьЗначения(, ДатаОкончания);
	Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
		Если ПустоеЗначение(ПерРеквизит.ДатаЗнач) = 1 Тогда
			Продолжить;
		КонецЕсли;

		ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
		ИсходящиеДанные.Установить("ТарифныйРазряд",	Источник);
		ИсходящиеДанные.Установить("Период",			ПерРеквизит.ДатаЗнач);
		ИсходящиеДанные.Установить("Размер",			ПерРеквизит.Значение);
		ИсходящиеДанные.Установить("Валюта",			"Рубль");

		ВыгрузитьПоПравилу(Источник, , ИсходящиеДанные, , "РазмерТарифныхСтавок");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.ЕТС</Источник>
				<Приемник>СправочникСсылка.ТарифныеРазряды</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Код --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифыБанковНаДенежныеПереводы</Код>
				<Наименование>:</Наименование>
				<Порядок>1850</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Наименование", "Тариф банка " + Источник + "%");
ВходящиеДанные.Установить("Процент", Источник);
ВходящиеДанные.Установить("МинимальныйТариф", 0);
ВходящиеДанные.Установить("МаксимальныйТариф", 0);</ПередВыгрузкой>
				<Приемник>СправочникСсылка.ТарифыБанковНаДенежныеПереводы</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Процент</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Процент" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; МинимальныйТариф</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МинимальныйТариф" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; МаксимальныйТариф</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МаксимальныйТариф" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифныеРазряды</Код>
				<Наименование>Справочник: Тарифные разряды</Наименование>
				<Порядок>1900</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Владелец", "Оплата по часовому тарифу (ЗиК)");</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если Источник.ЭтоГруппа() = 0 Тогда
	ПерРеквизит = СоздатьОбъект("Периодический");
	ПерРеквизит.ИспользоватьОбъект("Тариф", Источник);
	ПерРеквизит.ВыбратьЗначения(, ДатаОкончания);
	Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
		Если ПустоеЗначение(ПерРеквизит.ДатаЗнач) = 1 Тогда
			Продолжить;
		КонецЕсли;

		ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
		ИсходящиеДанные.Установить("ТарифныйРазряд",	Источник);
		ИсходящиеДанные.Установить("Период",			ПерРеквизит.ДатаЗнач);
		ИсходящиеДанные.Установить("Размер",			ПерРеквизит.Значение);
		ИсходящиеДанные.Установить("Валюта",			"Рубль");

		ВыгрузитьПоПравилу(Источник, , ИсходящиеДанные, , "РазмерТарифныхСтавок");
	КонецЦикла;
КонецЕсли;</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.ТарифныеРазряды</Источник>
				<Приемник>СправочникСсылка.ТарифныеРазряды</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ТарифныеРазряды"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ТарифныеРазряды"/>
						<КодПравилаКонвертации>ТарифныеРазрядыГруппа                             </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ТарифныеРазрядыГруппа</Код>
				<Наименование>Справочник: Тарифные разряды</Наименование>
				<Порядок>1950</Порядок>
				<Источник>СправочникСсылка.ТарифныеРазряды</Источник>
				<Приемник>СправочникСсылка.ТарифныеРазряды</Приемник>
				<Свойства>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ТарифныеРазряды"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ТарифныеРазряды"/>
						<КодПравилаКонвертации>ТарифныеРазрядыГруппа                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФизическиеЛица</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
				<Порядок>2000</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = Источник.Наименование + Строка(Источник.ДатаРождения);</ПередВыгрузкой>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаГруппа                              </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФизическиеЛицаВсеДанные</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
				<Порядок>2050</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = Источник.Наименование + Строка(Источник.ДатаРождения);

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Пол",	?(СокрЛП(Источник.Пол) = "Мужской", "Мужской","Женский"));</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>ПослеВыгрузкиФизическихЛицВФайл();</ПослеВыгрузкиВФайл>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ДатаРождения --&gt; ДатаРождения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Пол</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Пол" Вид="Реквизит" Тип="ПеречислениеСсылка.ПолФизическихЛиц"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ИНН --&gt; ИНН</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>КодИМНС --&gt; КодИМНС</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодИМНС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>СтраховойНомерПФР --&gt; СтраховойНомерПФР</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="СтраховойНомерПФР" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>МестоРождения --&gt; МестоРождения</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="МестоРождения" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>12</Код>
						<Наименование> --&gt; СоставСемьи</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СоставСемьи" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Возврат 1;
КонецЕсли;
	
КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("СтепеньРодства");
КоллекцияОбъектов.НоваяКолонка("Имя");
КоллекцияОбъектов.НоваяКолонка("ДатаРождения");

СоставСемьи = Источник.СоставСемьи;

Если ПустаяСтрока(СоставСемьи) = 0 Тогда
	
	Для Сч = 1 По СтрКоличествоСтрок(СоставСемьи) Цикл;
		
		КоллекцияОбъектов.НоваяСтрока();
		СтрокаСоставСемьи = СтрПолучитьСтроку(СоставСемьи, Сч);

		СпРазбора = глРазложить(СтрокаСоставСемьи, Симв(9));
		РазмерСписка = СпРазбора.РазмерСписка();
		
		Если РазмерСписка &gt; 0 Тогда 
			
			СтепеньРодства   = СпРазбора.ПолучитьЗначение(1);
			СправочникОКИН = СоздатьОбъект("Справочник.ОКИН");
			Если СправочникОКИН.НайтиПоНаименованию(СтепеньРодства) = 1 Тогда
				КоллекцияОбъектов.СтепеньРодства = СправочникОКИН.ТекущийЭлемент();
			КонецЕсли;
			
		КонецЕсли;
		
		Если РазмерСписка &gt; 1 Тогда
			КоллекцияОбъектов.Имя = СпРазбора.ПолучитьЗначение(2);
		КонецЕсли;
		
		Если РазмерСписка &gt; 2 Тогда
			ПроверяемоеЗначение = СпРазбора.ПолучитьЗначение(3);
			ВозможноПреобразоватьВЧисло = ПроверкаНаПреобразованиеВЧисло(ПроверяемоеЗначение);
			КоллекцияОбъектов.ДатаРождения = ?(ВозможноПреобразоватьВЧисло = 1, Дата(Число(ПроверяемоеЗначение), 1, 1), 0);
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Имя</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Имя" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СтепеньРодства</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтепеньРодства" Вид="Реквизит" Тип="СправочникСсылка.СтепениРодстваФизЛиц"/>
							<КодПравилаКонвертации>СтепениРодстваФизЛиц                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ДатаРождения</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаРождения" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>16</Код>
						<Наименование> --&gt; Образование</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Образование" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Возврат 1;
КонецЕсли;
	
КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВидОбразования");
КоллекцияОбъектов.НоваяКолонка("ГодОкончания");
КоллекцияОбъектов.НоваяКолонка("Диплом");
КоллекцияОбъектов.НоваяКолонка("Квалификация");
КоллекцияОбъектов.НоваяКолонка("Специальность");
КоллекцияОбъектов.НоваяКолонка("УчебноеЗаведение");

Образование = Источник.Образование;

Если ПустаяСтрока(Образование) = 1 Тогда
	Возврат 1;
КонецЕсли;

// Всего строк может быть 4
// 1 - два вида образования
// 2 - первое образовательное учреждение первого вида образования
// 3 - второе образовательное учреждение первого вида образования
// 4 - образовательные учреждения второго вида образования

КоличествоОбразований = 0;
Если СтрКоличествоСтрок(Образование) = 2 Тогда
	КоличествоОбразований = 1;
ИначеЕсли СтрКоличествоСтрок(Образование) &gt; 2 Тогда
	КоличествоОбразований = 2;
КонецЕсли;

СтрокаВидовОбразования = СтрПолучитьСтроку(Образование, 1);
СпВидыОбразования	= глРазложить(СтрокаВидовОбразования, Симв(9));

// Есть первый вид образования, можно добавлять образовательные учреждения
Если СпВидыОбразования.РазмерСписка() &gt;= 2 Тогда
	ВидОбразования = СпВидыОбразования.ПолучитьЗначение(1);
	
	Для Номер = 1 По КоличествоОбразований Цикл
		ОбразовательноеУчреждение = СтрПолучитьСтроку(Образование, 1 + Номер);
		
		Если ПустаяСтрока(ОбразовательноеУчреждение) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		СпОбразовательноеУчреждение = глРазложить(ОбразовательноеУчреждение, Симв(9));
		РазмерСписка = СпОбразовательноеУчреждение.РазмерСписка();
		
		КоллекцияОбъектов.НоваяСтрока();
		
		// Вид образования
		СправочникОКИН = СоздатьОбъект("Справочник.ОКИН");
		Если ПустаяСтрока(ВидОбразования) = 0 Тогда
			Если СправочникОКИН.НайтиПоНаименованию(ВидОбразования) = 1 Тогда
				КоллекцияОбъектов.ВидОбразования = СправочникОКИН.ТекущийЭлемент();
			КонецЕсли;
		КонецЕсли;
			
		// ВУЗ
		Если РазмерСписка &gt; 0 Тогда 
			СправочникВУЗ = СоздатьОбъект("Справочник.ОбразовательныеУчреждения");
			СправочникВУЗ.НайтиПоНаименованию(СпОбразовательноеУчреждение.ПолучитьЗначение(1));
			КоллекцияОбъектов.УчебноеЗаведение	= СправочникВУЗ.ТекущийЭлемент();
		КонецЕсли;
		
		// Год окончания
		Если РазмерСписка &gt; 2 Тогда
			ПроверяемоеЗначение = СпОбразовательноеУчреждение.ПолучитьЗначение(3);
			
			Если ПустаяСтрока(ПроверяемоеЗначение) = 1 Тогда
				КоллекцияОбъектов.ГодОкончания  = 0
			Иначе
				ВозможноПреобразоватьВЧисло = ПроверкаНаПреобразованиеВЧисло(ПроверяемоеЗначение);
				КоллекцияОбъектов.ГодОкончания = ?(ВозможноПреобразоватьВЧисло = 1, Число(ПроверяемоеЗначение), 0);
			КонецЕсли;
		КонецЕсли;
		
		// Квалификация
		Если РазмерСписка &gt; 3 Тогда
			КоллекцияОбъектов.Квалификация  = СпОбразовательноеУчреждение.ПолучитьЗначение(4);
		КонецЕсли;
		
		// Специальность
		Если РазмерСписка &gt; 4 Тогда
			СправочникСпециальность =  СоздатьОбъект("Справочник.ОКСО");
			СправочникСпециальность.НайтиПоНаименованию(СпОбразовательноеУчреждение.ПолучитьЗначение(5),0);
			КоллекцияОбъектов.Специальность	= СправочникСпециальность.ТекущийЭлемент();
		КонецЕсли;
		
		// Диплом
		Если РазмерСписка &gt; 1 Тогда
			СтрокаДиплома = "";
			
			Если РазмерСписка &gt; 6 Тогда
				СтрокаДиплома = СпОбразовательноеУчреждение.ПолучитьЗначение(7) + ?(ПустаяСтрока(СпОбразовательноеУчреждение.ПолучитьЗначение(7)) = 1,"",", ")
			КонецЕсли;
			
			СтрокаДиплома  = СтрокаДиплома + СпОбразовательноеУчреждение.ПолучитьЗначение(2) + ?(ПустаяСтрока(СпОбразовательноеУчреждение.ПолучитьЗначение(2)) = 1,"",", ");
			
			Если РазмерСписка &gt; 7 Тогда
				СтрокаДиплома = СтрокаДиплома + СпОбразовательноеУчреждение.ПолучитьЗначение(8)
			КонецЕсли;
			
			КоллекцияОбъектов.Диплом  = СтрокаДиплома;
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;

// Есть второй вид образования, можно добавить последнее образовательное учреждение
Если СпВидыОбразования.РазмерСписка() &gt;= 3 Тогда
	ВидОбразования = СпВидыОбразования.ПолучитьЗначение(3);
	
	ДополнительныеОбразования = СтрПолучитьСтроку(Образование, 4);
	
	СпОбразовательноеУчреждение = глРазложить(ДополнительныеОбразования, Симв(9));
	РазмерСписка = СпОбразовательноеУчреждение.РазмерСписка();
	
	Если РазмерСписка = 0 Тогда
		КоличествоОбразований = 0;
	ИначеЕсли РазмерСписка &gt; 6 Тогда
		КоличествоОбразований = 2;
	Иначе
		КоличествоОбразований = 1;
	КонецЕсли;
	
	Для Номер = 1 По КоличествоОбразований Цикл
		ПозицияОбразования = 0;
		Если Номер = 2 Тогда
			ПозицияОбразования = 7;
		КонецЕсли;
	
		КоллекцияОбъектов.НоваяСтрока();
		
		// Вид образования
		СправочникОКИН = СоздатьОбъект("Справочник.ОКИН");
		Если ПустаяСтрока(ВидОбразования) = 0 Тогда
			Если СправочникОКИН.НайтиПоНаименованию(ВидОбразования) = 1 Тогда
				КоллекцияОбъектов.ВидОбразования = СправочникОКИН.ТекущийЭлемент();
			КонецЕсли;
		КонецЕсли;
				
		// ВУЗ
		Если РазмерСписка &gt; ПозицияОбразования Тогда
			СправочникВУЗ = СоздатьОбъект("Справочник.ОбразовательныеУчреждения");
			СправочникВУЗ.НайтиПоНаименованию(СпОбразовательноеУчреждение.ПолучитьЗначение(ПозицияОбразования + 1));
			КоллекцияОбъектов.УчебноеЗаведение	= СправочникВУЗ.ТекущийЭлемент();
		КонецЕсли;
		
		// Документ, номер, дата выдачи
		Если РазмерСписка &gt; ПозицияОбразования + 1 Тогда
			КоллекцияОбъектов.Диплом  = СпОбразовательноеУчреждение.ПолучитьЗначение(ПозицияОбразования + 2);
		КонецЕсли;
		
		// Год окончания
		Если РазмерСписка &gt; ПозицияОбразования + 2 Тогда
			ПроверяемоеЗначение = СпОбразовательноеУчреждение.ПолучитьЗначение(ПозицияОбразования + 3);
			
			Если ПустаяСтрока(ПроверяемоеЗначение) = 1 Тогда
				КоллекцияОбъектов.ГодОкончания  = 0
			Иначе
				ВозможноПреобразоватьВЧисло = ПроверкаНаПреобразованиеВЧисло(ПроверяемоеЗначение);
				КоллекцияОбъектов.ГодОкончания = ?(ВозможноПреобразоватьВЧисло = 1, Число(ПроверяемоеЗначение), 0);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ВидОбразования</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОбразования" Вид="Реквизит" Тип="СправочникСсылка.ВидыОбразованияФизЛиц"/>
							<КодПравилаКонвертации>ВидыОбразованияФизЛиц                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ГодОкончания</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГодОкончания" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; Диплом</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Диплом" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Квалификация</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Квалификация" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Специальность</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Специальность" Вид="Реквизит"/>
							<КодПравилаКонвертации>КлассификаторСпециальностейПоОбразованию          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; УчебноеЗаведение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УчебноеЗаведение" Вид="Реквизит" Тип="СправочникСсылка.УчебныеЗаведения"/>
							<КодПравилаКонвертации>УчебныеЗаведения                                  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>23</Код>
						<Наименование> --&gt; ЗнаниеЯзыков</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗнаниеЯзыков" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Возврат 1;
КонецЕсли;
	
КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("СтепеньЗнанияЯзыка");
КоллекцияОбъектов.НоваяКолонка("Язык");

ИнЯзык = Источник.Языки;

Если ПустаяСтрока(ИнЯзык) = 0 Тогда
	
	Для Сч = 1 По СтрКоличествоСтрок(ИнЯзык) Цикл;
		
		КоллекцияОбъектов.НоваяСтрока();
		СтрокаИнЯзык = СтрПолучитьСтроку(ИнЯзык, Сч);
		
		СпРазбора = глРазложить(СтрокаИнЯзык, Симв(9));
		РазмерСписка = СпРазбора.РазмерСписка();
		
		Если РазмерСписка &gt; 0 Тогда
			
			Язык   = СпРазбора.ПолучитьЗначение(1);
			СправочникОКИН = СоздатьОбъект("Справочник.ОКИН");
			СправочникОКИН.НайтиПоНаименованию(Язык);
			КоллекцияОбъектов.Язык = СправочникОКИН.ТекущийЭлемент();
			
		КонецЕсли;
		
		Если РазмерСписка &gt; 2 Тогда
			
			СтепеньЗнанияЯзыка 		 	   = СпРазбора.ПолучитьЗначение(3);
			СправочникОКИН = СоздатьОбъект("Справочник.ОКИН");
			СправочникОКИН.НайтиПоНаименованию(СтепеньЗнанияЯзыка);
			КоллекцияОбъектов.СтепеньЗнанияЯзыка = СправочникОКИН.ТекущийЭлемент();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; СтепеньЗнанияЯзыка</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтепеньЗнанияЯзыка" Вид="Реквизит" Тип="СправочникСсылка.СтепениЗнанияЯзыка"/>
							<КодПравилаКонвертации>СтепениЗнанияЯзыка                                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Язык</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Язык" Вид="Реквизит" Тип="СправочникСсылка.ЯзыкиНародовМира"/>
							<КодПравилаКонвертации>ЯзыкиНародовМира                                  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>26</Код>
						<Наименование> --&gt; Стажи</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Стажи" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Возврат 1;
КонецЕсли;
	
КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("ВидСтажа");
КоллекцияОбъектов.НоваяКолонка("ДатаОтсчета");

СтажОбщий = Источник.СтажОбщий;

Если ПустаяСтрока(СтажОбщий) = 0 Тогда
	Год		= Число(Прав(СтажОбщий, 4));
	Месяц	= Число(Сред(СтажОбщий,4,2));
	День	= Число(Лев(СтажОбщий, 2));
	ДатаОтсчета = Дата(Год, Месяц, День);
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ВидСтажа		= "ОбщийСтаж";
	КоллекцияОбъектов.ДатаОтсчета	= ДатаОтсчета;
КонецЕсли;


СтажНепрерывный = Источник.СтажНепрерывный;

Если ПустаяСтрока(СтажНепрерывный) = 0 Тогда
	Год		= Число(Прав(СтажНепрерывный, 4));
	Месяц	= Число(Сред(СтажНепрерывный,4,2));
	День	= Число(Лев(СтажНепрерывный, 2));
	ДатаОтсчета = Дата(Год, Месяц, День);
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ВидСтажа		= "НепрерывныйСтаж";
	КоллекцияОбъектов.ДатаОтсчета	= ДатаОтсчета;
КонецЕсли;

СтажСтраховой = Источник.СтажСтраховой;

Если ПустаяСтрока(СтажСтраховой) = 0 Тогда
	Год		= Число(Прав(СтажСтраховой, 4));
	Месяц	= Число(Сред(СтажСтраховой,4,2));
	День	= Число(Лев(СтажСтраховой, 2));
	ДатаОтсчета = Дата(Год, Месяц, День);
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.ВидСтажа		= "СтраховойСтажДляБЛ";
	КоллекцияОбъектов.ДатаОтсчета	= ДатаОтсчета;
КонецЕсли;

ДатаНачалаУчета = Параметры.ДатаНачалаУчета;

ТЗРасчетов = глПолучитьВсеРасчетыДействующиеПоСотруднику(Источник, ДатаНачалаУчета);
ТЗРасчетов.ВыбратьСтроки();
Пока ТЗРасчетов.ПолучитьСтроку() = 1 Цикл
	Если (ТЗРасчетов.Расчет &lt;&gt; ВидРасчета.ПНВЛ) И (ТЗРасчетов.Расчет &lt;&gt; ВидРасчета.НадбавкаЗаВыслугуЛет) Тогда
		Продолжить;
	КонецЕсли;
		
	Документ = ТЗРасчетов.Документ;
	
	Если Документ.Вид() = "НачисленияУдержанияСотрудника" Тогда
		Стаж = Документ.Стаж;
		
	ИначеЕсли Документ.Вид() = "НачисленияУдержанияСписком" Тогда                                                                                                                 
		Если Документ.ПолучитьСтрокуПоНомеру(ТЗРасчетов.Строка) &gt; 0 Тогда
			Стаж = Документ.Стаж;
		КонецЕсли;
	КонецЕсли;				
	
	ДатаОтсчета = Дата(Стаж);
	
	Если ПустоеЗначение(ДатаОтсчета) = 0 Тогда
		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.ВидСтажа		= "СтажНаНадбавкуЗаВыслугуЛет";
		КоллекцияОбъектов.ДатаОтсчета	= ДатаОтсчета;
	Иначе
		ДокументПриказОПриеме = глПриказПоСотруднику(Источник, ДатаНачалаУчета, "ПриказОПриемеНаРаботу, ПриказОЗачисленииВСпискиЧасти");
		// Если не нашли прием на работу на дату события, возьмем ближайший после даты события
		Если ДокументПриказОПриеме.Выбран() = 0 Тогда
			ДокументПриказОПриеме = глПриказПоСотруднику(Источник, ДатаНачалаУчета, "ПриказОПриемеНаРаботу, ПриказОЗачисленииВСпискиЧасти", 0);
		КонецЕсли;
		
		Если ДокументПриказОПриеме.Выбран() = 1 Тогда
			КоллекцияОбъектов.НоваяСтрока();
			КоллекцияОбъектов.ВидСтажа		= "СтажНаНадбавкуЗаВыслугуЛет";
			КоллекцияОбъектов.ДатаОтсчета	= ДокументПриказОПриеме.ДатаПриема;
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; ВидСтажа</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСтажа" Вид="Реквизит" Тип="СправочникСсылка.ВидыСтажа"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ДатаОтсчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОтсчета" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>29</Код>
						<Наименование> --&gt; Профессии</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Профессии" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Возврат 1;
КонецЕсли;
	
КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Профессия");

Профессии = Источник.Профессии;

Если ПустаяСтрока(Профессии) = 0 Тогда
	
	Для Сч = 1 По СтрКоличествоСтрок(Профессии) Цикл;
		
		СтрокаПрофессии = СтрПолучитьСтроку(Профессии, Сч);

		СпРазбора = глРазложить(СтрокаПрофессии, Симв(9));
		РазмерСписка = СпРазбора.РазмерСписка();
		
		// Всего можно ввести 2 профессии в строке: "Профессия1 Код1 Профессия2 Код2"
		Если РазмерСписка &gt; 0 Тогда
			
			КоллекцияОбъектов.НоваяСтрока();
			СправочникОКПДТР = СоздатьОбъект("Справочник.ОКПДТР");
			СправочникОКПДТР.НайтиПоНаименованию(СпРазбора.ПолучитьЗначение(1));
			КоллекцияОбъектов.Профессия = СправочникОКПДТР.ТекущийЭлемент();
			
		КонецЕсли;
		
		Если РазмерСписка &gt; 2 Тогда
			
			КоллекцияОбъектов.НоваяСтрока();
			СправочникОКПДТР.НайтиПоНаименованию(СпРазбора.ПолучитьЗначение(3));
			КоллекцияОбъектов.Профессия = СправочникОКПДТР.ТекущийЭлемент();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; Профессия</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Профессия" Вид="Реквизит" Тип="СправочникСсылка.ПрофессииРабочих"/>
							<КодПравилаКонвертации>ПрофессииРабочих                                  </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>31</Код>
						<Наименование> --&gt; Награды</Наименование>
						<Порядок>700</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Награды" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если Источник.ЭтоГруппа() = 1 Тогда
	Возврат 1;
КонецЕсли;
	
КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Награда");
КоллекцияОбъектов.НоваяКолонка("ЧейПриказ");
КоллекцияОбъектов.НоваяКолонка("НомерПриказа");
КоллекцияОбъектов.НоваяКолонка("ДатаПриказа");

Награды = Источник.Награды;

Если ПустаяСтрока(Награды) = 0 Тогда
	
	Для Сч = 1 По СтрКоличествоСтрок(Награды) Цикл;
		
		СтрокаНаграды = СтрПолучитьСтроку(Награды, Сч);
		
		Если ПустаяСтрока(СтрокаНаграды) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		СпРазбора = глРазложить(СтрокаНаграды, Симв(9));

		КоллекцияОбъектов.НоваяСтрока();
		КоллекцияОбъектов.Награда		= СпРазбора.ПолучитьЗначение(1);
		Если СпРазбора.РазмерСписка() &gt;= 2 Тогда
			КоллекцияОбъектов.ЧейПриказ		= СпРазбора.ПолучитьЗначение(2);
		КонецЕсли;
		Если СпРазбора.РазмерСписка() &gt;= 3 Тогда
			КоллекцияОбъектов.НомерПриказа	= СпРазбора.ПолучитьЗначение(3);
		КонецЕсли;
		Если СпРазбора.РазмерСписка() &gt;= 4 Тогда
			ДатаПриказаСтрокой				= СпРазбора.ПолучитьЗначение(4);
			
			Год		= Число(Прав(ДатаПриказаСтрокой, 4));
			Месяц	= Число(Сред(ДатаПриказаСтрокой,4,2));
			День	= Число(Лев(ДатаПриказаСтрокой, 2));
			ДатаПриказа = Дата(Год, Месяц, День);
			
			КоллекцияОбъектов.ДатаПриказа	= ДатаПриказа;
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; Награда</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Награда" Вид="Реквизит" Тип="СправочникСсылка.Награды"/>
							<КодПравилаКонвертации>Награды                                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ЧейПриказ</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЧейПриказ" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; НомерПриказа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерПриказа" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ДатаПриказа</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПриказа" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>36</Код>
						<Наименование> --&gt; УченыеЗвания</Наименование>
						<Порядок>750</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УченыеЗвания" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("УченоеЗвание");
КоллекцияОбъектов.НоваяКолонка("ДатаПрисвоенияУченогоЗвания");
КоллекцияОбъектов.НоваяКолонка("АттестатСерия");
КоллекцияОбъектов.НоваяКолонка("АттестатНомер");
КоллекцияОбъектов.НоваяКолонка("АттестатВыданОрганизация");
КоллекцияОбъектов.НоваяКолонка("НаучнаяСпециальность");

СтрокаУченоеЗвание = Источник.УченоеЗвание;

Если ПустаяСтрока(СтрокаУченоеЗвание) = 0 Тогда
	
	СпРазбора = СоздатьОбъект("СписокЗначений");
	глЗначенияИзСтроки(СтрокаУченоеЗвание, СпРазбора, "УЧЗВН");
	
	ДатаПрисвоенияУченогоЗванияСтрокой				= СпРазбора.Получить("УЧЗВН_2_3");
	Если ПустаяСтрока(ДатаПрисвоенияУченогоЗванияСтрокой) = 0 Тогда
		Год		= Число(Прав(ДатаПрисвоенияУченогоЗванияСтрокой, 4));
		Месяц	= Число(Сред(ДатаПрисвоенияУченогоЗванияСтрокой,4,2));
		День	= Число(Лев(ДатаПрисвоенияУченогоЗванияСтрокой, 2));
		ДатаПрисвоенияУченогоЗвания = Дата(Год, Месяц, День);
	Иначе
		ДатаПрисвоенияУченогоЗвания = Дата(1, 1, 1);
	КонецЕсли;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.УченоеЗвание					= СпРазбора.Получить("УЧЗВН_1_1");
	КоллекцияОбъектов.АттестатСерия					= СпРазбора.Получить("УЧЗВН_2_1");
	КоллекцияОбъектов.АттестатНомер					= СпРазбора.Получить("УЧЗВН_2_2");
	КоллекцияОбъектов.ДатаПрисвоенияУченогоЗвания	= ДатаПрисвоенияУченогоЗвания;
	КоллекцияОбъектов.АттестатВыданОрганизация		= СпРазбора.Получить("УЧЗВН_2_4");
	КоллекцияОбъектов.НаучнаяСпециальность			= СпРазбора.Получить("УЧЗВН_3_1");
		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; УченоеЗвание</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УченоеЗвание" Вид="Реквизит" Тип="СправочникСсылка.УченыеЗвания"/>
							<КодПравилаКонвертации>УченыеЗвания                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ДатаПрисвоенияУченогоЗвания</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПрисвоенияУченогоЗвания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; АттестатСерия</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="АттестатСерия" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; АттестатНомер</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="АттестатНомер" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; АттестатВыданОрганизация</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="АттестатВыданОрганизация" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; НаучнаяСпециальность</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НаучнаяСпециальность" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторСпециальностейПоОбразованию"/>
							<КодПравилаКонвертации>КлассификаторСпециальностейПоОбразованиюСтрокой   </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>43</Код>
						<Наименование> --&gt; УченыеСтепени</Наименование>
						<Порядок>800</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УченыеСтепени" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("УченаяСтепень");
КоллекцияОбъектов.НоваяКолонка("ДатаПрисужденияУченойСтепени");
КоллекцияОбъектов.НоваяКолонка("ОтрасльНауки");
КоллекцияОбъектов.НоваяКолонка("ДиссертационныйСовет");
КоллекцияОбъектов.НоваяКолонка("ДипломСерияНомер");
КоллекцияОбъектов.НоваяКолонка("ДипломВыданОрганизация");

СтрокаУченаяСтепень = Источник.УченаяСтепень;

Если ПустаяСтрока(СтрокаУченаяСтепень) = 0 Тогда
	
	СпРазбора = СоздатьОбъект("СписокЗначений");
	глЗначенияИзСтроки(СтрокаУченаяСтепень, СпРазбора, "УЧСТП");

	ДатаПрисвоенияУченойСтепениСтрокой				= СпРазбора.Получить("УЧСТП_1_4");
	Если ПустаяСтрока(ДатаПрисвоенияУченойСтепениСтрокой) = 0 Тогда
		Год		= Число(Прав(ДатаПрисвоенияУченойСтепениСтрокой, 4));
		Месяц	= Число(Сред(ДатаПрисвоенияУченойСтепениСтрокой,4,2));
		День	= Число(Лев(ДатаПрисвоенияУченойСтепениСтрокой, 2));
		ДатаПрисужденияУченойСтепени = Дата(Год, Месяц, День);
	Иначе
		ДатаПрисужденияУченойСтепени = Дата(1, 1, 1);
	КонецЕсли;

	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.УченаяСтепень					= СпРазбора.Получить("УЧСТП_1_1");
	КоллекцияОбъектов.ОтрасльНауки					= СпРазбора.Получить("УЧСТП_1_3");
	КоллекцияОбъектов.ДатаПрисужденияУченойСтепени	= ДатаПрисужденияУченойСтепени;
	КоллекцияОбъектов.ДиссертационныйСовет			= СпРазбора.Получить("УЧСТП_2_1");
	КоллекцияОбъектов.ДипломСерияНомер				= СпРазбора.Получить("УЧСТП_3_1");
	КоллекцияОбъектов.ДипломВыданОрганизация		= СпРазбора.Получить("УЧСТП_3_2");
		
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; УченаяСтепень</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УченаяСтепень" Вид="Реквизит" Тип="СправочникСсылка.УченыеСтепени"/>
							<КодПравилаКонвертации>УченыеСтепени                                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; ДатаПрисужденияУченойСтепени</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПрисужденияУченойСтепени" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; ОтрасльНауки</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтрасльНауки" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ДиссертационныйСовет</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДиссертационныйСовет" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; ДипломСерияНомер</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДипломСерияНомер" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; ДипломВыданОрганизация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДипломВыданОрганизация" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>9</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>850</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаГруппа                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>900</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФизическиеЛицаГруппа</Код>
				<Наименование>СправочникСсылка.Сотрудники --&gt; СправочникСсылка.ФизическиеЛица</Наименование>
				<Порядок>2100</Порядок>
				<Источник>СправочникСсылка.Сотрудники</Источник>
				<Приемник>СправочникСсылка.ФизическиеЛица</Приемник>
				<Свойства>
					<Свойство Поиск="true" Обязательное="true">
						<Код>7</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>5</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛицаГруппа                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВычетыНДФЛСправочник</Код>
				<Наименование>Справочник: Виды вычетов</Наименование>
				<Порядок>2150</Порядок>
				<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
Код = СтрЗаменить(Источник.Код,"\","/");
Код = СтрЗаменить(Источник.Код,"("," (");
ВходящиеДанные.Установить("Код",Код);</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ВидыВычетов</Источник>
				<Приемник>СправочникСсылка.ВычетыНДФЛ</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>ПВР</Код>
			<Наименование>ПВР</Наименование>
			<Порядок>200</Порядок>
			<Правило>
				<Код>ОсновныеНачисленияОрганизаций</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0
КонецЕсли;

ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Возврат 0;
КонецЕсли;

Если Параметры.ЗаполнениеБазовыхНачислений = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыгруженныеВидыРасчета = Параметры.ВыгруженныеВидыРасчета;

Если ВыгруженныеВидыРасчета.НайтиЗначение(ВходящиеДанные.Наименование, 0, "Наименование") = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыгруженныеВидыРасчета.НоваяСтрока();
ВыгруженныеВидыРасчета.Наименование = ВходящиеДанные.Наименование;
ВыгруженныеВидыРасчета.ВР			= ВходящиеДанные.ВР;
ВыгруженныеВидыРасчета.ВидПВР		= "ОсновныеНачисления";
ВыгруженныеВидыРасчета.НужнаБаза	= ВходящиеДанные.НужнаБаза;

ЭлементСпрВР = ПолучитьВРизСправочника(ВходящиеДанные.ВР);
Если (ВходящиеДанные.ВР.ВходитВГруппу(ГруппаРасчетов.БольничныеЛисты) &lt;&gt; 1) И (ЭлементСпрВР.РасходыЗаСчетФСС &lt;&gt; 1) Тогда
	ТЗВидаРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗВидаРасчета.Загрузить(ВходящиеДанные);
	ВыгрузитьПоПравилу(ТЗВидаРасчета, , , , "ОсновныеНачисленияОрганизацийОтражениеВУчете");
КонецЕсли;


ВходитВСреднийЗаработокКак			= "";
ВходитВСреднийЗаработокБЛКак		= "";
ВходитВСреднийЗаработокБЛ2010Как	= "";
ПолучитьВхождениеВБазуСреднего(Источник, ВходитВСреднийЗаработокКак, ВходитВСреднийЗаработокБЛКак, ВходитВСреднийЗаработокБЛ2010Как);

Если ПустаяСтрока(ВходитВСреднийЗаработокКак) = 0 Тогда
	ТЗСреднийЗаработок = СоздатьТЗПВРСреднийЗаработок();
	ТЗСреднийЗаработок.НоваяСтрока();
	ТЗСреднийЗаработок.Наименование			= ВходитВСреднийЗаработокКак;
	
	ТЗСписокВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокВидовРасчета.НоваяКолонка("ВидРасчета");
	ТЗСписокВидовРасчета.НоваяСтрока();
	ТЗСписокВидовРасчета.ВидРасчета			= ВходящиеДанные;
	
	ТЗСреднийЗаработок.БазовыеВидыРасчета	= ТЗСписокВидовРасчета;
	ТЗСреднийЗаработок.ВедущиеВидыРасчета	= ТЗСписокВидовРасчета;
	
	ВыгрузитьПоПравилу(ТЗСреднийЗаработок , , , , "СреднийЗаработок");
КонецЕсли;

Если ПустаяСтрока(ВходитВСреднийЗаработокБЛКак) = 0 Тогда
	ТЗСреднийЗаработок = СоздатьТЗПВРСреднийЗаработок();
	ТЗСреднийЗаработок.НоваяСтрока();
	ТЗСреднийЗаработок.Наименование			= ВходитВСреднийЗаработокБЛКак;
	
	ТЗСписокВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокВидовРасчета.НоваяКолонка("ВидРасчета");
	ТЗСписокВидовРасчета.НоваяСтрока();
	ТЗСписокВидовРасчета.ВидРасчета			= ВходящиеДанные;
	
	ТЗСреднийЗаработок.БазовыеВидыРасчета	= ТЗСписокВидовРасчета;
	ТЗСреднийЗаработок.ВедущиеВидыРасчета	= ТЗСписокВидовРасчета;
	
	ВыгрузитьПоПравилу(ТЗСреднийЗаработок , , , , "СреднийЗаработок");
КонецЕсли;

Если ПустаяСтрока(ВходитВСреднийЗаработокБЛ2010Как) = 0 Тогда
	ТЗСреднийЗаработок = СоздатьТЗПВРСреднийЗаработок();
	ТЗСреднийЗаработок.НоваяСтрока();
	ТЗСреднийЗаработок.Наименование			= ВходитВСреднийЗаработокБЛ2010Как;
	
	ТЗСписокВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокВидовРасчета.НоваяКолонка("ВидРасчета");
	ТЗСписокВидовРасчета.НоваяСтрока();
	ТЗСписокВидовРасчета.ВидРасчета			= ВходящиеДанные;
	
	ТЗСреднийЗаработок.БазовыеВидыРасчета	= ТЗСписокВидовРасчета;
	ТЗСреднийЗаработок.ВедущиеВидыРасчета	= ТЗСписокВидовРасчета;
	
	ВыгрузитьПоПравилу(ТЗСреднийЗаработок , , , , "СреднийЗаработок");
КонецЕсли;</ПослеВыгрузкиВФайл>
				<ПриЗагрузке>Если Объект.Предопределенный Или Не ПустаяСтрока(Объект.ИдентификаторЭлемента) Тогда
	НеЗамещатьОбъект = Истина;
КонецЕсли</ПриЗагрузке>
				<ПослеЗагрузки>Если Объект.ВидВремени = Перечисления.ВидыВремени.ОтработанноеВПределахНормы Тогда
	Объект.ЗачетОтработанногоВремени 	= Истина;
	Объект.ЗачетНормыВремени 			= Истина;
	
ИначеЕсли Объект.ВидВремени = Перечисления.ВидыВремени.ОтработанноеСверхНормы Тогда
	Объект.ЗачетОтработанногоВремени 	= Истина;
	Объект.ЗачетНормыВремени 			= Ложь;
	
ИначеЕсли Объект.ВидВремени = Перечисления.ВидыВремени.ЦелодневноеНеотработанное Тогда
	Объект.ЗачетОтработанногоВремени 	= Ложь;
	Объект.ЗачетНормыВремени 			= Истина;
	
ИначеЕсли Объект.ВидВремени = Перечисления.ВидыВремени.ЧасовоеНеотработанное Тогда
	Объект.ЗачетОтработанногоВремени 	= Ложь;
	Объект.ЗачетНормыВремени 			= Истина;
	
ИначеЕсли Объект.ВидВремени = Перечисления.ВидыВремени.ЧасовоеОтработанноеВПределахНормы Тогда
	Объект.ЗачетОтработанногоВремени 	= Истина;
	Объект.ЗачетНормыВремени			= Истина;
	
Иначе
	Объект.ЗачетОтработанногоВремени 	= Ложь;
	Объект.ЗачетНормыВремени 			= Ложь;
	
КонецЕсли;

Объект.ФормулаРасчетаПредставление = Объект.ФормулаРасчета;</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ОсновныеНачисленияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; КатегорияРасчета</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияРасчета" Вид="Реквизит" Тип="СправочникСсылка.КатегорииРасчетов"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КатегорияРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; СпособРасчета</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаОплатыТруда"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.СпособРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование>--&gt; ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ПроизвольнаяФормулаРасчета</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроизвольнаяФормулаРасчета" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ПроизвольнаяФормулаРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ФормулаРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; ВидСтажа</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтажа" Вид="Реквизит" Тип="СправочникСсылка.ВидыСтажа"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ВидСтажа) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>23</Код>
						<Наименование>--&gt; КоэффициентСтажа</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоэффициентСтажа" Вид="Реквизит" Тип="СправочникСсылка.КоэффициентыСтажа"/>
						<КодПравилаКонвертации>КоэффициентыСтажа                                 </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КоэффициентСтажа) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>13</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.Показатели) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Показатель</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиСхемМотивации"/>
							<КодПравилаКонвертации>ПоказателиСхемМотивации                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ЗапрашиватьПриКадровыхПеремещениях</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриКадровыхПеремещениях" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ЗапрашиватьПриКадровыхПеремещениях) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>29</Код>
						<Наименование>--&gt; ТребуетВводаТарифногоРазряда</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТребуетВводаТарифногоРазряда" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.ТребуетВводаТарифногоРазряда);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидВремени</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыВремени"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ВидВремени) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ОбозначениеВТабелеУчетаРабочегоВремени</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбозначениеВТабелеУчетаРабочегоВремени" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторИспользованияРабочегоВремени"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ОбозначениеВТабелеУчетаРабочегоВремени) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>30</Код>
						<Наименование>--&gt; ВидЕжегодногоОтпуска</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Реквизит" Тип="СправочникСсылка.ВидыЕжегодныхОтпусков"/>
						<КодПравилаКонвертации>ВидыЕжегодныхОтпусков                             </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.ВидЕжегодногоОтпуска);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>--&gt; ВидСтажаСЗВ4</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтажаСЗВ4" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыСтажаСЗВ4"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ВидСтажаСЗВ4) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ЯвляетсяДоходомВНатуральнойФорме</Наименование>
						<Порядок>750</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЯвляетсяДоходомВНатуральнойФорме" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.ЯвляетсяДоходомВНатуральнойФорме);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование>--&gt; СтратегияОтраженияВУчете</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтратегияОтраженияВУчете" Вид="Реквизит" Тип="ПеречислениеСсылка.СтратегииОтраженияВРеглУчетеНачислений"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СтратегияОтраженияВУчете);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>25</Код>
						<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СпособОтраженияВБухучете);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>--&gt; ОтнесениеРасходовКДеятельностиЕНВД</Наименование>
						<Порядок>900</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтнесениеРасходовКДеятельностиЕНВД" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтнесениеРасходовКДеятельностиЕНВД"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ОтнесениеРасходовКДеятельностиЕНВД) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; КодДоходаНДФЛ</Наименование>
						<Порядок>950</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ДоходыНДФЛ"/>
						<КодПравилаКонвертации>ДоходыНДФЛ                                        </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КодДоходаНДФЛ) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>28</Код>
						<Наименование>--&gt; КодДоходаСтраховыеВзносы</Наименование>
						<Порядок>1000</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаСтраховыеВзносы" Вид="Реквизит" Тип="СправочникСсылка.ДоходыПоСтраховымВзносам"/>
						<КодПравилаКонвертации>ДоходыПоСтраховымВзносам                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; КодДоходаЕСН</Наименование>
						<Порядок>1050</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаЕСН" Вид="Реквизит" Тип="СправочникСсылка.ДоходыЕСН"/>
						<КодПравилаКонвертации>ДоходыЕСН                                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; КодДоходаФСС_НС</Наименование>
						<Порядок>1100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаФСС_НС" Вид="Реквизит" Тип="ПеречислениеСсылка.ДоходыФСС_НС"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КодДоходаФСС_НС) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>--&gt; ПериодДействияБазовый</Наименование>
						<Порядок>1150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодДействияБазовый" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ПериодДействияБазовый) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование>--&gt; ВидНачисленияПоСт255НК</Наименование>
						<Порядок>1200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидНачисленияПоСт255НК" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК"/>
						<КодПравилаКонвертации>ВидыНачисленийОплатыТрудаПоСт255НК                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.ВидНачисленияПоСт255НК);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДоплатаЗаВечерниеЧасы --&gt; ДоплатаЗаВечерниеЧасы</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДоплатаЗаВечерниеЧасы</Источник>
						<Приемник>ДоплатаЗаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДоплатаЗаВечерниеЧасыПоТабелю --&gt; ДоплатаЗаВечерни</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДоплатаЗаВечерниеЧасыПоТабелю</Источник>
						<Приемник>ДоплатаЗаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ДоплатаЗаНочныеЧасы --&gt; ДоплатаЗаНочныеЧасы</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДоплатаЗаНочныеЧасы</Источник>
						<Приемник>ДоплатаЗаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ДоплатаЗаНочныеЧасы --&gt; ДоплатаЗаНочныеЧасы</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДоплатаЗаНочныеЧасыПоТабелю</Источник>
						<Приемник>ДоплатаЗаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДоплатаЗаПраздничные --&gt; ДоплатаЗаПраздничныеИВыхо</Наименование>
						<Порядок>250</Порядок>
						<Источник>ДоплатаЗаПраздничные</Источник>
						<Приемник>ДоплатаЗаПраздничныеИВыходные</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>Невыход --&gt; Невыход</Наименование>
						<Порядок>300</Порядок>
						<Источник>Невыход</Источник>
						<Приемник>Невыход</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>350</Порядок>
						<Источник>ОплатаБЛ</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>400</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВД</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>450</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>500</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>550</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>56</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>600</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>650</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателя</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>700</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>750</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>57</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>800</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>850</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>900</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>950</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>58</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1050</Порядок>
						<Источник>ОплатаБЛпоТекущемуМесяцу</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ОплатаБЛПоТекущемуМесяцуВозмещаемаяФССприЕНВД</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ОплатаБЛПоТекущемуМесяцуЗаСчетРаботодателя</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ОплатаБЛпоТравме</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ОплатаБЛпоТравмеПоТекущемуМесяцу</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОплатаБЛпоТравмес2004</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1350</Порядок>
						<Источник>ОплатаБЛпоТравмес2005</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ОплатаБЛпоТравмес2007</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>59</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1450</Порядок>
						<Источник>ОплатаБЛпоТравмес2010</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>ОплатаБЛпоТравмес2011 --&gt; ОплатаБЛПоТравмеНаПроизв</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ОплатаБЛпоТравмес2011</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1550</Порядок>
						<Источник>ОплатаБЛс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ОплатаБЛс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>47</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1650</Порядок>
						<Источник>ОплатаБЛс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>60</Код>
						<Наименование>ОплатаБЛс2010 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ОплатаБЛс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>64</Код>
						<Наименование>ОплатаБЛс2011 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1750</Порядок>
						<Источник>ОплатаБЛс2011</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>48</Код>
						<Наименование>ОплатаЛьготныхДнейРодителей --&gt; ОплатаВыходныхДней</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ОплатаЛьготныхДнейРодителей</Источник>
						<Приемник>ОплатаВыходныхДнейПоУходуЗаДетьмиИнвалидами</Приемник>
					</Значение>
					<Значение>
						<Код>49</Код>
						<Наименование>ОплатаПоСреднемуЗаработку --&gt; ОплатаПоСреднему</Наименование>
						<Порядок>1850</Порядок>
						<Источник>ОплатаПоСреднемуЗаработку</Источник>
						<Приемник>ОплатаПоСреднему</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ОплатаПраздничных --&gt; ОплатаПраздничныхИВыходных</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ОплатаПраздничных</Источник>
						<Приемник>ОплатаПраздничныхИВыходных</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ОплатаСверхурочныхЧасов --&gt; ОплатаСверхурочных</Наименование>
						<Порядок>1950</Порядок>
						<Источник>ОплатаСверхурочныхЧасов</Источник>
						<Приемник>ОплатаСверхурочных</Приемник>
					</Значение>
					<Значение>
						<Код>50</Код>
						<Наименование>ОтпускЗаСвойСчетДолгосрочный --&gt; ОтпускЗаСвойСчет</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ОтпускЗаСвойСчетДолгосрочный</Источник>
						<Приемник>ОтпускЗаСвойСчет</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>ОтпускЗаСвойСчетДолгосрочный --&gt; ОтпускЗаСвойСчет</Наименование>
						<Порядок>2050</Порядок>
						<Источник>ОтпускЗаСвойСчетКраткосрочный</Источник>
						<Приемник>ОтпускЗаСвойСчет</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ОтпускПоБеременности</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2150</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВД</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2004</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2250</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2300</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>61</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2350</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2010</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ОтпускПоБеременностиПоТекущемуМесяцу</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2450</Порядок>
						<Источник>ОтпускПоБеременностиПоТекущемуМесяцуВозмещаемыйФССприЕНВД</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ОтпускПоБеременностис2004</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2550</Порядок>
						<Источник>ОтпускПоБеременностис2005</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ОтпускПоБеременностис2007</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>62</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2650</Порядок>
						<Источник>ОтпускПоБеременностис2010</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>65</Код>
						<Наименование>ОтпускПоБеременностис2011 --&gt; ОтпускПоБеременности</Наименование>
						<Порядок>2700</Порядок>
						<Источник>ОтпускПоБеременностис2011</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>52</Код>
						<Наименование>ОтсутствиеПоБолезни --&gt; ОтсутствиеПоБолезни</Наименование>
						<Порядок>2750</Порядок>
						<Источник>ОтсутствиеПоБолезни</Источник>
						<Приемник>ОтсутствиеПоБолезни</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2800</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФЗП</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо3Лет</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2850</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФСС</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2900</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФССс2007</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>55</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2950</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФССс2007Военные</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>53</Код>
						<Наименование>Прогул --&gt; Прогул</Наименование>
						<Порядок>3000</Порядок>
						<Источник>Прогул</Источник>
						<Приемник>Прогул</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>РайонныйКоэффициент --&gt; РайонныйКоэффициент</Наименование>
						<Порядок>3050</Порядок>
						<Источник>РайонныйКоэффициент</Источник>
						<Приемник>РайонныйКоэффициент</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>СевернаяНадбавка --&gt; СевернаяНадбавка</Наименование>
						<Порядок>3100</Порядок>
						<Источник>СевернаяНадбавка</Источник>
						<Приемник>СевернаяНадбавка</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ОсновныеНачисленияОрганизацийБаза</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0
КонецЕсли;

ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПослеЗагрузки>БазовыеВидыРасчета = Объект.БазовыеВидыРасчета.Выгрузить();
БазовыеВидыРасчета.Свернуть("ВидРасчета");
Объект.БазовыеВидыРасчета.Загрузить(БазовыеВидыРасчета);

ВедущиеВидыРасчета = Объект.ВедущиеВидыРасчета.Выгрузить();
ВедущиеВидыРасчета.Свернуть("ВидРасчета");
Объект.ВедущиеВидыРасчета.Загрузить(ВедущиеВидыРасчета);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ОсновныеНачисленияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>2</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.БазовыеВидыРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОдляПВР(ОбъектКоллекции.ВидРасчета, Отказ);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ВедущиеВидыРасчета</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВедущиеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.ВедущиеВидыРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОдляПВР(ОбъектКоллекции.ВидРасчета, Отказ);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>6</Код>
						<Наименование>--&gt; ВытесняющиеВидыРасчета</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВытесняющиеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.ВытесняющиеВидыРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДоплатаЗаВечерниеЧасы --&gt; ДоплатаЗаВечерниеЧасы</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДоплатаЗаВечерниеЧасы</Источник>
						<Приемник>ДоплатаЗаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ДоплатаЗаВечерниеЧасыПоТабелю --&gt; ДоплатаЗаВечерни</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДоплатаЗаВечерниеЧасыПоТабелю</Источник>
						<Приемник>ДоплатаЗаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДоплатаЗаНочныеЧасы --&gt; ДоплатаЗаНочныеЧасы</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДоплатаЗаНочныеЧасы</Источник>
						<Приемник>ДоплатаЗаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ДоплатаЗаНочныеЧасыПоТабелю --&gt; ДоплатаЗаНочныеЧас</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДоплатаЗаНочныеЧасыПоТабелю</Источник>
						<Приемник>ДоплатаЗаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ДоплатаЗаПраздничные --&gt; ДоплатаЗаПраздничныеИВыхо</Наименование>
						<Порядок>250</Порядок>
						<Источник>ДоплатаЗаПраздничные</Источник>
						<Приемник>ДоплатаЗаПраздничныеИВыходные</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>Невыход --&gt; Невыход</Наименование>
						<Порядок>300</Порядок>
						<Источник>Невыход</Источник>
						<Приемник>Невыход</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>350</Порядок>
						<Источник>ОплатаБЛ</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ОплатаБЛВозмещаемаяФССприЕНВД --&gt; ОплатаПоСреднему</Наименование>
						<Порядок>400</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВД</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>ОплатаБЛВозмещаемаяФССприЕНВДс2004 --&gt; ОплатаПоСре</Наименование>
						<Порядок>450</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ОплатаБЛВозмещаемаяФССприЕНВДс2005 --&gt; ОплатаПоСре</Наименование>
						<Порядок>500</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>ОплатаБЛВозмещаемаяФССприЕНВДс2007 --&gt; ОплатаПоСре</Наименование>
						<Порядок>550</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>56</Код>
						<Наименование>ОплатаБЛВозмещаемаяФССприЕНВДс2007 --&gt; ОплатаПоСре</Наименование>
						<Порядок>600</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателя --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>650</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателя</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателяЕНВДс2005 --&gt; ОплатаПоСр</Наименование>
						<Порядок>700</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателяЕНВДс2007 --&gt; ОплатаПоСр</Наименование>
						<Порядок>750</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>57</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателяЕНВДс2007 --&gt; ОплатаПоСр</Наименование>
						<Порядок>800</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателяс2004 --&gt; ОплатаПоСредне</Наименование>
						<Порядок>850</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателяс2005 --&gt; ОплатаПоСредне</Наименование>
						<Порядок>900</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателяс2007 --&gt; ОплатаПоСредне</Наименование>
						<Порядок>950</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>58</Код>
						<Наименование>ОплатаБЛЗаСчетРаботодателяс2007 --&gt; ОплатаПоСредне</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>ОплатаБЛпоТекущемуМесяцу --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1050</Порядок>
						<Источник>ОплатаБЛпоТекущемуМесяцу</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>ОплатаБЛПоТекущемуМесяцуВозмещаемаяФССприЕНВД --&gt;</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ОплатаБЛПоТекущемуМесяцуВозмещаемаяФССприЕНВД</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>ОплатаБЛПоТекущемуМесяцуЗаСчетРаботодателя --&gt; Опл</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ОплатаБЛПоТекущемуМесяцуЗаСчетРаботодателя</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ОплатаБЛпоТравме</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>ОплатаБЛпоТравмеПоТекущемуМесяцу --&gt; ОплатаБЛПоТра</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ОплатаБЛпоТравмеПоТекущемуМесяцу</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>ОплатаБЛпоТравмес2004 --&gt; ОплатаБЛПоТравмеНаПроизв</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОплатаБЛпоТравмес2004</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ОплатаБЛпоТравмес2005 --&gt; ОплатаБЛПоТравмеНаПроизв</Наименование>
						<Порядок>1350</Порядок>
						<Источник>ОплатаБЛпоТравмес2005</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ОплатаБЛпоТравмес2007 --&gt; ОплатаБЛПоТравмеНаПроизв</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ОплатаБЛпоТравмес2007</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>59</Код>
						<Наименование>ОплатаБЛпоТравмес2007 --&gt; ОплатаБЛПоТравмеНаПроизв</Наименование>
						<Порядок>1450</Порядок>
						<Источник>ОплатаБЛпоТравмес2010</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>ОплатаБЛпоТравмес2011 --&gt; ОплатаБЛПоТравмеНаПроизв</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ОплатаБЛпоТравмес2011</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>ОплатаБЛс2004 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1550</Порядок>
						<Источник>ОплатаБЛс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ОплатаБЛс2005 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ОплатаБЛс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>ОплатаБЛс2007 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1650</Порядок>
						<Источник>ОплатаБЛс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>60</Код>
						<Наименование>ОплатаБЛс2007 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ОплатаБЛс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>64</Код>
						<Наименование>ОплатаБЛс2011 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1750</Порядок>
						<Источник>ОплатаБЛс2011</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ОплатаЛьготныхДнейРодителей --&gt; ОплатаВыходныхДней</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ОплатаЛьготныхДнейРодителей</Источник>
						<Приемник>ОплатаВыходныхДнейПоУходуЗаДетьмиИнвалидами</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ОплатаПоСреднемуЗаработку --&gt; ОплатаПоСреднему</Наименование>
						<Порядок>1850</Порядок>
						<Источник>ОплатаПоСреднемуЗаработку</Источник>
						<Приемник>ОплатаПоСреднему</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>ОплатаПраздничных --&gt; ОплатаПраздничныхИВыходных</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ОплатаПраздничных</Источник>
						<Приемник>ОплатаПраздничныхИВыходных</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ОплатаСверхурочныхЧасов --&gt; ОплатаСверхурочных</Наименование>
						<Порядок>1950</Порядок>
						<Источник>ОплатаСверхурочныхЧасов</Источник>
						<Приемник>ОплатаСверхурочных</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ОтпускЗаСвойСчетДолгосрочный --&gt; ОтпускЗаСвойСчет</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ОтпускЗаСвойСчетДолгосрочный</Источник>
						<Приемник>ОтпускЗаСвойСчет</Приемник>
					</Значение>
					<Значение>
						<Код>55</Код>
						<Наименование>ОтпускЗаСвойСчетКраткосрочный --&gt; ОтпускЗаСвойСчет</Наименование>
						<Порядок>2050</Порядок>
						<Источник>ОтпускЗаСвойСчетКраткосрочный</Источник>
						<Приемник>ОтпускЗаСвойСчет</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ОтпускПоБеременности</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>ОтпускПоБеременностиВозмещаемыйФССприЕНВД --&gt; Отпу</Наименование>
						<Порядок>2150</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВД</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2004 --&gt;</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2004</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005 --&gt;</Наименование>
						<Порядок>2250</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>47</Код>
						<Наименование>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007 --&gt;</Наименование>
						<Порядок>2300</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>61</Код>
						<Наименование>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007 --&gt;</Наименование>
						<Порядок>2350</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2010</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>48</Код>
						<Наименование>ОтпускПоБеременностиПоТекущемуМесяцу --&gt; ОтпускПоБ</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ОтпускПоБеременностиПоТекущемуМесяцу</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>49</Код>
						<Наименование>ОтпускПоБеременностиПоТекущемуМесяцуВозмещаемыйФСС</Наименование>
						<Порядок>2450</Порядок>
						<Источник>ОтпускПоБеременностиПоТекущемуМесяцуВозмещаемыйФССприЕНВД</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>50</Код>
						<Наименование>ОтпускПоБеременностис2004 --&gt; ОтпускПоБеременности</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ОтпускПоБеременностис2004</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>ОтпускПоБеременностис2005 --&gt; ОтпускПоБеременности</Наименование>
						<Порядок>2550</Порядок>
						<Источник>ОтпускПоБеременностис2005</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>52</Код>
						<Наименование>ОтпускПоБеременностис2007 --&gt; ОтпускПоБеременности</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ОтпускПоБеременностис2007</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>62</Код>
						<Наименование>ОтпускПоБеременностис2007 --&gt; ОтпускПоБеременности</Наименование>
						<Порядок>2650</Порядок>
						<Источник>ОтпускПоБеременностис2010</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>65</Код>
						<Наименование>ОтпускПоБеременностис2011 --&gt; ОтпускПоБеременности</Наименование>
						<Порядок>2700</Порядок>
						<Источник>ОтпускПоБеременностис2011</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ОтсутствиеПоБолезни --&gt; ОтсутствиеПоБолезни</Наименование>
						<Порядок>2750</Порядок>
						<Источник>ОтсутствиеПоБолезни</Источник>
						<Приемник>ОтсутствиеПоБолезни</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФЗП --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2800</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФЗП</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо3Лет</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2850</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФСС</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>53</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФССс2007 --&gt; ПособиеПоУход</Наименование>
						<Порядок>2900</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФССс2007</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>54</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФССс2007Военные --&gt; Пособи</Наименование>
						<Порядок>2950</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФССс2007Военные</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>Прогул --&gt; Прогул</Наименование>
						<Порядок>3000</Порядок>
						<Источник>Прогул</Источник>
						<Приемник>Прогул</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>РайонныйКоэффициент --&gt; РайонныйКоэффициент</Наименование>
						<Порядок>3050</Порядок>
						<Источник>РайонныйКоэффициент</Источник>
						<Приемник>РайонныйКоэффициент</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>СевернаяНадбавка --&gt; СевернаяНадбавка</Наименование>
						<Порядок>3100</Порядок>
						<Источник>СевернаяНадбавка</Источник>
						<Приемник>СевернаяНадбавка</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ОсновныеНачисленияОрганизацийОтражениеВУчете</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Наименование>
				<Порядок>150</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0
КонецЕсли;

ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПриЗагрузке>Если НЕ Объект.Предопределенный ИЛИ Не Объект.ВидПособияСоциальногоСтрахования.Пустая() Тогда
	НеЗамещатьОбъект = Истина;
КонецЕсли;</ПриЗагрузке>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ОсновныеНачисленияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>12</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; СтратегияОтраженияВУчете</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтратегияОтраженияВУчете" Вид="Реквизит" Тип="ПеречислениеСсылка.СтратегииОтраженияВРеглУчетеНачислений"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СтратегияОтраженияВУчете);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>750</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СпособОтраженияВБухучете);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ДоплатаЗаВечерниеЧасы --&gt; ДоплатаЗаВечерниеЧасы</Наименование>
						<Порядок>50</Порядок>
						<Источник>ДоплатаЗаВечерниеЧасы</Источник>
						<Приемник>ДоплатаЗаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ДоплатаЗаВечерниеЧасыПоТабелю --&gt; ДоплатаЗаВечерни</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДоплатаЗаВечерниеЧасыПоТабелю</Источник>
						<Приемник>ДоплатаЗаВечерниеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>ДоплатаЗаНочныеЧасы --&gt; ДоплатаЗаНочныеЧасы</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДоплатаЗаНочныеЧасы</Источник>
						<Приемник>ДоплатаЗаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ДоплатаЗаНочныеЧасы --&gt; ДоплатаЗаНочныеЧасы</Наименование>
						<Порядок>200</Порядок>
						<Источник>ДоплатаЗаНочныеЧасыПоТабелю</Источник>
						<Приемник>ДоплатаЗаНочныеЧасы</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ДоплатаЗаПраздничные --&gt; ДоплатаЗаПраздничныеИВыхо</Наименование>
						<Порядок>250</Порядок>
						<Источник>ДоплатаЗаПраздничные</Источник>
						<Приемник>ДоплатаЗаПраздничныеИВыходные</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>Невыход --&gt; Невыход</Наименование>
						<Порядок>300</Порядок>
						<Источник>Невыход</Источник>
						<Приемник>Невыход</Приемник>
					</Значение>
					<Значение>
						<Код>30</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>350</Порядок>
						<Источник>ОплатаБЛ</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>31</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>400</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВД</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>32</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>450</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>33</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>500</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>34</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>550</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>55</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>600</Порядок>
						<Источник>ОплатаБЛВозмещаемаяФССприЕНВДс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>35</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>650</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателя</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>36</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>700</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>37</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>750</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>56</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>800</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяЕНВДс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>38</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>850</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>39</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>900</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>40</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>950</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>57</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1000</Порядок>
						<Источник>ОплатаБЛЗаСчетРаботодателяс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>41</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1050</Порядок>
						<Источник>ОплатаБЛпоТекущемуМесяцу</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>42</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1100</Порядок>
						<Источник>ОплатаБЛПоТекущемуМесяцуВозмещаемаяФССприЕНВД</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>43</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1150</Порядок>
						<Источник>ОплатаБЛПоТекущемуМесяцуЗаСчетРаботодателя</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>15</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1200</Порядок>
						<Источник>ОплатаБЛпоТравме</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>16</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1250</Порядок>
						<Источник>ОплатаБЛпоТравмеПоТекущемуМесяцу</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>17</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1300</Порядок>
						<Источник>ОплатаБЛпоТравмес2004</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>18</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1350</Порядок>
						<Источник>ОплатаБЛпоТравмес2005</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>19</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1400</Порядок>
						<Источник>ОплатаБЛпоТравмес2007</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>58</Код>
						<Наименование>ОплатаБЛпоТравме --&gt; ОплатаБЛПоТравмеНаПроизводств</Наименование>
						<Порядок>1450</Порядок>
						<Источник>ОплатаБЛпоТравмес2010</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>62</Код>
						<Наименование>ОплатаБЛпоТравмес2011 --&gt; ОплатаБЛПоТравмеНаПроизв</Наименование>
						<Порядок>1500</Порядок>
						<Источник>ОплатаБЛпоТравмес2011</Источник>
						<Приемник>ОплатаБЛПоТравмеНаПроизводстве</Приемник>
					</Значение>
					<Значение>
						<Код>44</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1550</Порядок>
						<Источник>ОплатаБЛс2004</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>45</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1600</Порядок>
						<Источник>ОплатаБЛс2005</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>46</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1650</Порядок>
						<Источник>ОплатаБЛс2007</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>59</Код>
						<Наименование>ОплатаБЛ --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1700</Порядок>
						<Источник>ОплатаБЛс2010</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>63</Код>
						<Наименование>ОплатаБЛс2011 --&gt; ОплатаПоСреднемуБЛ</Наименование>
						<Порядок>1750</Порядок>
						<Источник>ОплатаБЛс2011</Источник>
						<Приемник>ОплатаПоСреднемуБЛ</Приемник>
					</Значение>
					<Значение>
						<Код>47</Код>
						<Наименование>ОплатаЛьготныхДнейРодителей --&gt; ОплатаВыходныхДней</Наименование>
						<Порядок>1800</Порядок>
						<Источник>ОплатаЛьготныхДнейРодителей</Источник>
						<Приемник>ОплатаВыходныхДнейПоУходуЗаДетьмиИнвалидами</Приемник>
					</Значение>
					<Значение>
						<Код>48</Код>
						<Наименование>ОплатаПоСреднемуЗаработку --&gt; ОплатаПоСреднему</Наименование>
						<Порядок>1850</Порядок>
						<Источник>ОплатаПоСреднемуЗаработку</Источник>
						<Приемник>ОплатаПоСреднему</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ОплатаПраздничных --&gt; ОплатаПраздничныхИВыходных</Наименование>
						<Порядок>1900</Порядок>
						<Источник>ОплатаПраздничных</Источник>
						<Приемник>ОплатаПраздничныхИВыходных</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ОплатаСверхурочныхЧасов --&gt; ОплатаСверхурочных</Наименование>
						<Порядок>1950</Порядок>
						<Источник>ОплатаСверхурочныхЧасов</Источник>
						<Приемник>ОплатаСверхурочных</Приемник>
					</Значение>
					<Значение>
						<Код>49</Код>
						<Наименование>ОтпускЗаСвойСчетДолгосрочный --&gt; ОтпускЗаСвойСчет</Наименование>
						<Порядок>2000</Порядок>
						<Источник>ОтпускЗаСвойСчетДолгосрочный</Источник>
						<Приемник>ОтпускЗаСвойСчет</Приемник>
					</Значение>
					<Значение>
						<Код>50</Код>
						<Наименование>ОтпускЗаСвойСчетДолгосрочный --&gt; ОтпускЗаСвойСчет</Наименование>
						<Порядок>2050</Порядок>
						<Источник>ОтпускЗаСвойСчетКраткосрочный</Источник>
						<Приемник>ОтпускЗаСвойСчет</Приемник>
					</Значение>
					<Значение>
						<Код>20</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2100</Порядок>
						<Источник>ОтпускПоБеременности</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>21</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2150</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВД</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>22</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2200</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2004</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>23</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2250</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>24</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2300</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>60</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2350</Порядок>
						<Источник>ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2010</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>25</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2400</Порядок>
						<Источник>ОтпускПоБеременностиПоТекущемуМесяцу</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>26</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2450</Порядок>
						<Источник>ОтпускПоБеременностиПоТекущемуМесяцуВозмещаемыйФССприЕНВД</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>27</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2500</Порядок>
						<Источник>ОтпускПоБеременностис2004</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>28</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2550</Порядок>
						<Источник>ОтпускПоБеременностис2005</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>29</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2600</Порядок>
						<Источник>ОтпускПоБеременностис2007</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>61</Код>
						<Наименование>ОтпускПоБеременности --&gt; ОтпускПоБеременностиИРода</Наименование>
						<Порядок>2650</Порядок>
						<Источник>ОтпускПоБеременностис2010</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>64</Код>
						<Наименование>ОтпускПоБеременностис2011 --&gt; ОтпускПоБеременности</Наименование>
						<Порядок>2700</Порядок>
						<Источник>ОтпускПоБеременностис2011</Источник>
						<Приемник>ОтпускПоБеременностиИРодам</Приемник>
					</Значение>
					<Значение>
						<Код>51</Код>
						<Наименование>ОтсутствиеПоБолезни --&gt; ОтсутствиеПоБолезни</Наименование>
						<Порядок>2750</Порядок>
						<Источник>ОтсутствиеПоБолезни</Источник>
						<Приемник>ОтсутствиеПоБолезни</Приемник>
					</Значение>
					<Значение>
						<Код>12</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2800</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФЗП</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо3Лет</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2850</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФСС</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2900</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФССс2007</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>54</Код>
						<Наименование>ПособиеПоУходуЗаРебенкомФСС --&gt; ПособиеПоУходуЗаРе</Наименование>
						<Порядок>2950</Порядок>
						<Источник>ПособиеПоУходуЗаРебенкомФССс2007Военные</Источник>
						<Приемник>ПособиеПоУходуЗаРебенкомДо1_5Лет</Приемник>
					</Значение>
					<Значение>
						<Код>52</Код>
						<Наименование>Прогул --&gt; Прогул</Наименование>
						<Порядок>3000</Порядок>
						<Источник>Прогул</Источник>
						<Приемник>Прогул</Приемник>
					</Значение>
					<Значение>
						<Код>13</Код>
						<Наименование>РайонныйКоэффициент --&gt; РайонныйКоэффициент</Наименование>
						<Порядок>3050</Порядок>
						<Источник>РайонныйКоэффициент</Источник>
						<Приемник>РайонныйКоэффициент</Приемник>
					</Значение>
					<Значение>
						<Код>14</Код>
						<Наименование>СевернаяНадбавка --&gt; СевернаяНадбавка</Наименование>
						<Порядок>3100</Порядок>
						<Источник>СевернаяНадбавка</Источник>
						<Приемник>СевернаяНадбавка</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДополнительныеНачисленияОрганизаций</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций</Наименование>
				<Порядок>200</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0;
КонецЕсли;
	
ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Возврат 0;
КонецЕсли;

Если Параметры.ЗаполнениеБазовыхНачислений = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыгруженныеВидыРасчета = Параметры.ВыгруженныеВидыРасчета;

Если ВыгруженныеВидыРасчета.НайтиЗначение(ВходящиеДанные.Наименование, 0, "Наименование") = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыгруженныеВидыРасчета.НоваяСтрока();
ВыгруженныеВидыРасчета.Наименование = ВходящиеДанные.Наименование;
ВыгруженныеВидыРасчета.ВР			= ВходящиеДанные.ВР;
ВыгруженныеВидыРасчета.ВидПВР		= "ДополнительныеНачисления";
ВыгруженныеВидыРасчета.НужнаБаза	= ВходящиеДанные.НужнаБаза;

ТЗВидаРасчета = СоздатьОбъект("ТаблицаЗначений");
ТЗВидаРасчета.Загрузить(ВходящиеДанные);
ВыгрузитьПоПравилу(ТЗВидаРасчета, , , , "ДополнительныеНачисленияОрганизацийОтражениеВУчете");


ВходитВСреднийЗаработокКак			= "";
ВходитВСреднийЗаработокБЛКак		= "";
ВходитВСреднийЗаработокБЛ2010Как	= "";
ПолучитьВхождениеВБазуСреднего(Источник, ВходитВСреднийЗаработокКак, ВходитВСреднийЗаработокБЛКак, ВходитВСреднийЗаработокБЛ2010Как);

Если ПустаяСтрока(ВходитВСреднийЗаработокКак) = 0 Тогда
	ТЗСреднийЗаработок = СоздатьТЗПВРСреднийЗаработок();
	ТЗСреднийЗаработок.НоваяСтрока();
	ТЗСреднийЗаработок.Наименование			= ВходитВСреднийЗаработокКак;
	
	ТЗСписокВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокВидовРасчета.НоваяКолонка("ВидРасчета");
	ТЗСписокВидовРасчета.НоваяСтрока();
	ТЗСписокВидовРасчета.ВидРасчета			= ВходящиеДанные;
	
	ТЗСреднийЗаработок.БазовыеВидыРасчета	= ТЗСписокВидовРасчета;
	ТЗСреднийЗаработок.ВедущиеВидыРасчета	= ТЗСписокВидовРасчета;
	
	ВыгрузитьПоПравилу(ТЗСреднийЗаработок, , , , "СреднийЗаработок");
КонецЕсли;

Если ПустаяСтрока(ВходитВСреднийЗаработокБЛКак) = 0 Тогда
	ТЗСреднийЗаработок = СоздатьТЗПВРСреднийЗаработок();
	ТЗСреднийЗаработок.НоваяСтрока();
	ТЗСреднийЗаработок.Наименование			= ВходитВСреднийЗаработокБЛКак;
	
	ТЗСписокВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокВидовРасчета.НоваяКолонка("ВидРасчета");
	ТЗСписокВидовРасчета.НоваяСтрока();
	ТЗСписокВидовРасчета.ВидРасчета			= ВходящиеДанные;
	
	ТЗСреднийЗаработок.БазовыеВидыРасчета	= ТЗСписокВидовРасчета;
	ТЗСреднийЗаработок.ВедущиеВидыРасчета	= ТЗСписокВидовРасчета;
	
	ВыгрузитьПоПравилу(ТЗСреднийЗаработок, , , , "СреднийЗаработок");
КонецЕсли;

Если ПустаяСтрока(ВходитВСреднийЗаработокБЛ2010Как) = 0 Тогда
	ТЗСреднийЗаработок = СоздатьТЗПВРСреднийЗаработок();
	ТЗСреднийЗаработок.НоваяСтрока();
	ТЗСреднийЗаработок.Наименование			= ВходитВСреднийЗаработокБЛ2010Как;
	
	ТЗСписокВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокВидовРасчета.НоваяКолонка("ВидРасчета");
	ТЗСписокВидовРасчета.НоваяСтрока();
	ТЗСписокВидовРасчета.ВидРасчета			= ВходящиеДанные;
	
	ТЗСреднийЗаработок.БазовыеВидыРасчета	= ТЗСписокВидовРасчета;
	ТЗСреднийЗаработок.ВедущиеВидыРасчета	= ТЗСписокВидовРасчета;
	
	ВыгрузитьПоПравилу(ТЗСреднийЗаработок , , , , "СреднийЗаработок");
КонецЕсли;</ПослеВыгрузкиВФайл>
				<ПриЗагрузке>Если Объект.Предопределенный Или Не ПустаяСтрока(Объект.ИдентификаторЭлемента) Тогда
	НеЗамещатьОбъект = Истина;
КонецЕсли;</ПриЗагрузке>
				<ПослеЗагрузки>Объект.ФормулаРасчетаПредставление	= Объект.ФормулаРасчета;
Объект.ПериодичностьНачисления		= Перечисления.ПериодичностьНачисления.НеОпределена;</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ДополнительныеНачисленияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>8</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; КатегорияРасчета</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияРасчета" Вид="Реквизит" Тип="СправочникСсылка.КатегорииРасчетов"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КатегорияРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; СпособРасчета</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаОплатыТруда"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.СпособРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>--&gt; ПроизвольнаяФормулаРасчета</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроизвольнаяФормулаРасчета" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ПроизвольнаяФормулаРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ФормулаРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>15</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.Показатели) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиСхемМотивации"/>
							<КодПравилаКонвертации>ПоказателиСхемМотивации                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ЗапрашиватьПриКадровыхПеремещениях</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриКадровыхПеремещениях" Вид="Реквизит" Тип="Булево"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ЗапрашиватьПриКадровыхПеремещениях) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ВидПремии</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидПремии" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыПремии"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ВидПремии) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ЧислоМесяцев</Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЧислоМесяцев" Вид="Реквизит" Тип="Число"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ЧислоМесяцев) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ЯвляетсяДоходомВНатуральнойФорме</Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЯвляетсяДоходомВНатуральнойФорме" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ЯвляетсяДоходомВНатуральнойФорме) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование>--&gt; СтратегияОтраженияВУчете</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтратегияОтраженияВУчете" Вид="Реквизит" Тип="ПеречислениеСсылка.СтратегииОтраженияВРеглУчетеНачислений"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СтратегияОтраженияВУчете);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>19</Код>
						<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СпособОтраженияВБухучете);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование>--&gt; ОтнесениеРасходовКДеятельностиЕНВД</Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтнесениеРасходовКДеятельностиЕНВД" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтнесениеРасходовКДеятельностиЕНВД"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ОтнесениеРасходовКДеятельностиЕНВД) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; КодДоходаНДФЛ</Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаНДФЛ" Вид="Реквизит" Тип="СправочникСсылка.ДоходыНДФЛ"/>
						<КодПравилаКонвертации>ДоходыНДФЛ                                        </КодПравилаКонвертации>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КодДоходаНДФЛ) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>22</Код>
						<Наименование>--&gt; КодДоходаСтраховыеВзносы</Наименование>
						<Порядок>700</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаСтраховыеВзносы" Вид="Реквизит" Тип="СправочникСсылка.ДоходыПоСтраховымВзносам"/>
						<КодПравилаКонвертации>ДоходыПоСтраховымВзносам                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; КодДоходаЕСН</Наименование>
						<Порядок>750</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаЕСН" Вид="Реквизит" Тип="СправочникСсылка.ДоходыЕСН"/>
						<КодПравилаКонвертации>ДоходыЕСН                                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; КодДоходаФСС_НС</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодДоходаФСС_НС" Вид="Реквизит" Тип="ПеречислениеСсылка.ДоходыФСС_НС"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КодДоходаФСС_НС) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование>--&gt; ВидНачисленияПоСт255НК</Наименование>
						<Порядок>850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидНачисленияПоСт255НК" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыНачисленийОплатыТрудаПоСт255НК"/>
						<КодПравилаКонвертации>ВидыНачисленийОплатыТрудаПоСт255НК                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.ВидНачисленияПоСт255НК);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>4</Код>
						<Наименование>ВыходноеПособие --&gt; ВыходноеПособие</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВыходноеПособие</Источник>
						<Приемник>ВыходноеПособие</Приемник>
					</Значение>
					<Значение>
						<Код>10</Код>
						<Наименование>ДивидендыСотрудников --&gt; ДивидендыРаботников</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДивидендыСотрудников</Источник>
						<Приемник>ДивидендыРаботников</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ДивидендыУчредителей --&gt; ДивидендыАкционеров</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДивидендыУчредителей</Источник>
						<Приемник>ДивидендыАкционеров</Приемник>
					</Значение>
					<Значение>
						<Код>11</Код>
						<Наименование>ЛицензионныеВыплаты --&gt; ЛицензионныйДоговор</Наименование>
						<Порядок>200</Порядок>
						<Источник>ЛицензионныеВыплаты</Источник>
						<Приемник>ЛицензионныйДоговор</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ОплатаПоДоговору --&gt; ДоговорПодряда</Наименование>
						<Порядок>250</Порядок>
						<Источник>ОплатаПоДоговору</Источник>
						<Приемник>ДоговорПодряда</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СохраняемыйЗаработокНаВремяТрудоустройства --&gt; Сох</Наименование>
						<Порядок>350</Порядок>
						<Источник>СохраняемыйЗаработокНаВремяТрудоустройства</Источник>
						<Приемник>СохраняемыйЗаработокНаВремяТрудоустройства</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДополнительныеНачисленияОрганизацийБаза</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций</Наименование>
				<Порядок>250</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0;
КонецЕсли;
	
ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;;</ПередВыгрузкой>
				<ПослеЗагрузки>БазовыеВидыРасчета = Объект.БазовыеВидыРасчета.Выгрузить();
БазовыеВидыРасчета.Свернуть("ВидРасчета");
Объект.БазовыеВидыРасчета.Загрузить(БазовыеВидыРасчета);

ВедущиеВидыРасчета = Объект.ВедущиеВидыРасчета.Выгрузить();
ВедущиеВидыРасчета.Свернуть("ВидРасчета");
Объект.ВедущиеВидыРасчета.Загрузить(ВедущиеВидыРасчета);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ДополнительныеНачисленияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>2</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>800</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.БазовыеВидыРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОдляПВР(ОбъектКоллекции.ВидРасчета, Отказ);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>4</Код>
						<Наименование>--&gt; ВедущиеВидыРасчета</Наименование>
						<Порядок>850</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВедущиеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.ВедущиеВидыРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОдляПВР(ОбъектКоллекции.ВидРасчета, Отказ);</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения>
					<Значение>
						<Код>4</Код>
						<Наименование>ВыходноеПособие --&gt; ВыходноеПособие</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВыходноеПособие</Источник>
						<Приемник>ВыходноеПособие</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>ДивидендыСотрудников --&gt; ДивидендыРаботников</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДивидендыСотрудников</Источник>
						<Приемник>ДивидендыРаботников</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ДивидендыУчредителей --&gt; ДивидендыАкционеров</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДивидендыУчредителей</Источник>
						<Приемник>ДивидендыАкционеров</Приемник>
					</Значение>
					<Значение>
						<Код>9</Код>
						<Наименование>ЛицензионныеВыплаты --&gt; ЛицензионныйДоговор</Наименование>
						<Порядок>200</Порядок>
						<Источник>ЛицензионныеВыплаты</Источник>
						<Приемник>ЛицензионныйДоговор</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ОплатаПоДоговору --&gt; ДоговорПодряда</Наименование>
						<Порядок>250</Порядок>
						<Источник>ОплатаПоДоговору</Источник>
						<Приемник>ДоговорПодряда</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>СохраняемыйЗаработокНаВремяТрудоустройства --&gt; Сох</Наименование>
						<Порядок>350</Порядок>
						<Источник>СохраняемыйЗаработокНаВремяТрудоустройства</Источник>
						<Приемник>СохраняемыйЗаработокНаВремяТрудоустройства</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>ДополнительныеНачисленияОрганизацийОтражениеВУчете</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций</Наименование>
				<Порядок>300</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0;
КонецЕсли;
	
ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПриЗагрузке>Если НЕ Объект.Предопределенный ИЛИ Не Объект.ВидПособияСоциальногоСтрахования.Пустая() Тогда
	НеЗамещатьОбъект = Истина;
КонецЕсли;</ПриЗагрузке>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.ДополнительныеНачисленияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>8</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; СтратегияОтраженияВУчете</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтратегияОтраженияВУчете" Вид="Реквизит" Тип="ПеречислениеСсылка.СтратегииОтраженияВРеглУчетеНачислений"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СтратегияОтраженияВУчете);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СпособОтраженияВБухучете);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>2</Код>
						<Наименование>ВыходноеПособие --&gt; ВыходноеПособие</Наименование>
						<Порядок>50</Порядок>
						<Источник>ВыходноеПособие</Источник>
						<Приемник>ВыходноеПособие</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>ДивидендыСотрудников --&gt; ДивидендыРаботников</Наименование>
						<Порядок>100</Порядок>
						<Источник>ДивидендыСотрудников</Источник>
						<Приемник>ДивидендыРаботников</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>ДивидендыУчредителей --&gt; ДивидендыАкционеров</Наименование>
						<Порядок>150</Порядок>
						<Источник>ДивидендыУчредителей</Источник>
						<Приемник>ДивидендыАкционеров</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>ЛицензионныеВыплаты --&gt; ЛицензионныйДоговор</Наименование>
						<Порядок>200</Порядок>
						<Источник>ЛицензионныеВыплаты</Источник>
						<Приемник>ЛицензионныйДоговор</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>ОплатаПоДоговору --&gt; ДоговорПодряда</Наименование>
						<Порядок>250</Порядок>
						<Источник>ОплатаПоДоговору</Источник>
						<Приемник>ДоговорПодряда</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>СохраняемыйЗаработокНаВремяТрудоустройства --&gt; Сох</Наименование>
						<Порядок>350</Порядок>
						<Источник>СохраняемыйЗаработокНаВремяТрудоустройства</Источник>
						<Приемник>СохраняемыйЗаработокНаВремяТрудоустройства</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>УдержанияОрганизаций</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.УдержанияОрганизаций</Наименование>
				<Порядок>350</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0;
КонецЕсли;

ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПослеВыгрузкиВФайл>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Возврат 0;
КонецЕсли;

Если Параметры.ЗаполнениеБазовыхНачислений = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыгруженныеВидыРасчета = Параметры.ВыгруженныеВидыРасчета;

Если ВыгруженныеВидыРасчета.НайтиЗначение(ВходящиеДанные.Наименование, 0, "Наименование") = 1 Тогда
	Возврат 0;
КонецЕсли;

ВыгруженныеВидыРасчета.НоваяСтрока();
ВыгруженныеВидыРасчета.Наименование = ВходящиеДанные.Наименование;
ВыгруженныеВидыРасчета.ВР			= ВходящиеДанные.ВР;
ВыгруженныеВидыРасчета.ВидПВР		= "Удержания";
ВыгруженныеВидыРасчета.НужнаБаза	= ВходящиеДанные.НужнаБаза;

ТЗВидаРасчета = СоздатьОбъект("ТаблицаЗначений");
ТЗВидаРасчета.Загрузить(ВходящиеДанные);
ВыгрузитьПоПравилу(ТЗВидаРасчета, , , , "УдержанияОрганизацийОтражениеВУчете");</ПослеВыгрузкиВФайл>
				<ПриЗагрузке>Если Объект.Предопределенный Или Не ПустаяСтрока(Объект.ИдентификаторЭлемента) Тогда
	НеЗамещатьОбъект = Истина;
КонецЕсли</ПриЗагрузке>
				<ПослеЗагрузки>Объект.ФормулаРасчетаПредставление = Объект.ФормулаРасчета;</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.УдержанияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.УдержанияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; КатегорияРасчета</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияРасчета" Вид="Реквизит" Тип="СправочникСсылка.КатегорииРасчетов"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.КатегорияРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; СпособРасчета</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособРасчета" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаОплатыТруда"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.СпособРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; ПроизвольнаяФормулаРасчета</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроизвольнаяФормулаРасчета" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.ПроизвольнаяФормулаРасчета);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ФормулаРасчета</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФормулаРасчета" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Если ПустоеЗначение(ВходящиеДанные.ФормулаРасчета) = 1 Тогда
	Отказ = 1;
КонецЕсли</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>8</Код>
						<Наименование>--&gt; Показатели</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатели" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.Показатели) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Показатель</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель" Вид="Реквизит" Тип="СправочникСсылка.ПоказателиСхемМотивации"/>
							<КодПравилаКонвертации>ПоказателиСхемМотивации                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ЗапрашиватьПриКадровыхПеремещениях</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗапрашиватьПриКадровыхПеремещениях" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СпособОтраженияВБухучете);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПочтовыйСбор --&gt; ПочтовыйСборПоИЛ</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПочтовыйСбор</Источник>
						<Приемник>ПочтовыйСборПоИЛ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>УдержанияОрганизацийБаза</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.УдержанияОрганизаций</Наименование>
				<Порядок>400</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0;
КонецЕсли;

ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПослеЗагрузки>БазовыеВидыРасчета = Объект.БазовыеВидыРасчета.Выгрузить();
БазовыеВидыРасчета.Свернуть("ВидРасчета");
Объект.БазовыеВидыРасчета.Загрузить(БазовыеВидыРасчета);

ВедущиеВидыРасчета = Объект.ВедущиеВидыРасчета.Выгрузить();
ВедущиеВидыРасчета.Свернуть("ВидРасчета");
Объект.ВедущиеВидыРасчета.Загрузить(ВедущиеВидыРасчета);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.УдержанияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.УдержанияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Группа>
						<Код>2</Код>
						<Наименование>--&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.БазовыеВидыРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОдляПВР(ОбъектКоллекции.ВидРасчета, Отказ);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа Отключить="true">
						<Код>4</Код>
						<Наименование>--&gt; ВедущиеВидыРасчета</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВедущиеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(ВходящиеДанные.ВедущиеВидыРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОдляПВР(ОбъектКоллекции.ВидРасчета, Отказ);</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПочтовыйСбор --&gt; ПочтовыйСборПоИЛ</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПочтовыйСбор</Источник>
						<Приемник>ПочтовыйСборПоИЛ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>УдержанияОрганизацийОтражениеВУчете</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.УдержанияОрганизаций</Наименование>
				<Порядок>450</Порядок>
				<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КлючВыгружаемыхДанных = Источник;
	ВсеОбъектыВыгружены = 1;
	Возврат 0;
КонецЕсли;

ВходящиеДанные	= Источник;
Источник		= ВходящиеДанные.ВР;

КлючВыгружаемыхДанных = ВходящиеДанные.Наименование;</ПередВыгрузкой>
				<ПриЗагрузке>Если НЕ Объект.Предопределенный Тогда
	НеЗамещатьОбъект = Истина;
КонецЕсли;</ПриЗагрузке>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.УдержанияОрганизацийПоляПоиска);</ПоследовательностьПолейПоиска>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>ВидРасчета</Источник>
				<Приемник>ПланВидовРасчетаСсылка.УдержанияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>3</Код>
						<Наименование>--&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	Значение = Источник;
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(ВходящиеДанные.СпособОтраженияВБухучете);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>ПочтовыйСбор --&gt; ПочтовыйСборПоИЛ</Наименование>
						<Порядок>50</Порядок>
						<Источник>ПочтовыйСбор</Источник>
						<Приемник>ПочтовыйСборПоИЛ</Приемник>
					</Значение>
				</Значения>
			</Правило>
			<Правило>
				<Код>СреднийЗаработок</Код>
				<Наименование> --&gt; ПланВидовРасчетаСсылка.СреднийЗаработок</Наименование>
				<Порядок>500</Порядок>
				<ПослеЗагрузки>БазовыеВидыРасчета = Объект.БазовыеВидыРасчета.Выгрузить();
БазовыеВидыРасчета.Свернуть("ВидРасчета");
Объект.БазовыеВидыРасчета.Загрузить(БазовыеВидыРасчета);

ВедущиеВидыРасчета = Объект.ВедущиеВидыРасчета.Выгрузить();
ВедущиеВидыРасчета.Свернуть("ВидРасчета");
Объект.ВедущиеВидыРасчета.Загрузить(ВедущиеВидыРасчета);</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Выполнить(Алгоритмы.СреднийЗаработокПоляПоиска);</ПоследовательностьПолейПоиска>
				<Приемник>ПланВидовРасчетаСсылка.СреднийЗаработок</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>2</Код>
						<Наименование> --&gt; БазовыеВидыРасчета</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БазовыеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>НеОчищать = 1</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ПланВидовРасчета = ОпределитьВидПВР(ОбъектКоллекции.ВидРасчета.ВР);

Если ПланВидовРасчета = "ОсновныеНачисления" Тогда
	ИмяПКО = "ОсновныеНачисленияОрганизаций";
	
ИначеЕсли ПланВидовРасчета = "ДополнительныеНачисления" Тогда
	ИмяПКО = "ДополнительныеНачисленияОрганизаций";
	
Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; ВедущиеВидыРасчета</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВедущиеВидыРасчета" Вид="ТабличнаяЧасть"/>
						<ПередОбработкойВыгрузки>НеОчищать = 1</ПередОбработкойВыгрузки>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>ПланВидовРасчета = ОпределитьВидПВР(ОбъектКоллекции.ВидРасчета.ВР);

Если ПланВидовРасчета = "ОсновныеНачисления" Тогда
	ИмяПКО = "ОсновныеНачисленияОрганизаций";
	
ИначеЕсли ПланВидовРасчета = "ДополнительныеНачисления" Тогда
	ИмяПКО = "ДополнительныеНачисленияОрганизаций";
	
Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>250</Порядок>
			<Группа>
				<Код>ПервичныеДокументы</Код>
				<Наименование>Первичные документы</Наименование>
				<Порядок>50</Порядок>
				<Правило>
					<Код>ДоговорЗаймаСРаботником</Код>
					<Наименование>Документ: Погашение ссуды, займа, кредита</Наименование>
					<Порядок>50</Порядок>
					<ПередВыгрузкой>Если Источник.Дополнительный &lt;&gt; 0 Тогда
	Возврат 1;
КонецЕсли;

Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Источник.Сотрудник, Источник.Начало);

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Организация",	?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация"));</ПередВыгрузкой>
					<ПриВыгрузке>Лет = 0; Месяцев = 0;
глРазобратьРазностьДат(НачМесяца(Источник.Окончание), НачМесяца(Источник.Начало), Лет, Месяцев);

ВходящиеДанные.Установить("ДанныеПрошлойВерсии",				1);
ВходящиеДанные.Установить("ОтражатьВБухгалтерскомУчете",		1);
ВходящиеДанные.Установить("ПорядокПогашенияЗайма",				?(Источник.ПогашатьЕжемесячно = 0, "ПоОкончанииСрока", "Ежемесячно"));
ВходящиеДанные.Установить("СрокПогашения",						Лет * 12 + Месяцев + 1);
ВходящиеДанные.Установить("ВалютаДокумента",					?(ПустоеЗначение(Источник.Валюта) = 0, Источник.Валюта, "Рубль"));

Если Источник.ИсчислятьМатВыгоду = 1 Тогда
	ВходящиеДанные.Установить("СтавкаНалогообложенияРезидента",	?(Источник.ИсточникСредств = 1, "Ставка35", "Ставка13"));
Иначе
	ВходящиеДанные.Установить("СтавкаНалогообложенияРезидента",	"");
КонецЕсли;

ВходящиеДанные.Установить("СчетУчетаПроцентовПоЗайму",			"ПрочиеДоходы");</ПриВыгрузке>
					<ПослеЗагрузки>ПолученныйКурс = РегистрыСведений.КурсыВалют.СрезПоследних(Объект.НачалоПогашения, Новый Структура("Валюта", Объект.ВалютаДокумента));

Если ПолученныйКурс.Количество() &gt; 0 Тогда
	ТекКурс = ПолученныйКурс[0];
	Объект.КурсДокумента		= ТекКурс.Курс;
	Объект.КратностьДокумента	= ТекКурс.Кратность;
Иначе
	Объект.КурсДокумента		= 1;
	Объект.КратностьДокумента	= 1;
КонецЕсли;</ПослеЗагрузки>
					<Источник>ДокументСсылка.СсудаПредприятия</Источник>
					<Приемник>ДокументСсылка.ДоговорЗаймаСРаботником</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; ОтражатьВБухгалтерскомУчете</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>Сотрудник --&gt; ФизЛицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Размер --&gt; СуммаЗайма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Размер" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаЗайма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Процент --&gt; ПроцентЗаПользованиеЗаймом</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Процент" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ПроцентЗаПользованиеЗаймом" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Начало --&gt; НачалоПогашения</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Начало" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="НачалоПогашения" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>--&gt; ПорядокПогашенияЗайма</Наименование>
							<Порядок>500</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокПогашенияЗайма" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокПогашенияЗаймаПроцентов"/>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование>--&gt; СрокПогашения</Наименование>
							<Порядок>550</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПогашения" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>ИсчислятьМатВыгоду --&gt; НачислятьМатериальнуюВыгоду</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ИсчислятьМатВыгоду" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="НачислятьМатериальнуюВыгоду" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование>--&gt; СтавкаНалогообложенияРезидента</Наименование>
							<Порядок>650</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложенияРезидента" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>--&gt; СчетУчетаПроцентовПоЗайму</Наименование>
							<Порядок>700</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаПроцентовПоЗайму" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ВалютаДокумента</Наименование>
							<Порядок>750</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорНаВыполнениеРаботСФизЛицом</Код>
					<Наименование>Документ: Договор гражданско-правового характера</Наименование>
					<Порядок>150</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Организация",	?(ПустоеЗначение(Источник.Подразделение) = 0, Источник.Подразделение, "Наша организация"));</ПередВыгрузкой>
					<ПриВыгрузке>ВР = ПолучитьВидРасчетаПоТипуДоговора(Источник.ТипДоговора);

АвторскийДоговор	= ЯвляетсяАвторскимДоговором(ВР);
ДоговорПодряда		= ?(ВР = ВидРасчета.ОплатаПоДоговору, 1, 0);
Сотрудник = ЗаполнитьТЗСотрудникаОрганизации(Источник.Сотрудник, , АвторскийДоговор, ДоговорПодряда);

ТЗВидаРасчета = ВернутьТЗВидаРасчета(ВР, Источник, Источник.Начало, Источник.Сотрудник);

ВходящиеДанные.Установить("Сотрудник",					Сотрудник);
ВходящиеДанные.Установить("ВидРасчета",					ТЗВидаРасчета);
ВходящиеДанные.Установить("ВидАвторскогоДоговора",		ПолучитьВидАвторскогоДоговора(ВР));

Если ПустоеЗначение(Источник.ШаблонПроводки) = 0 Тогда
	Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
		ВходящиеДанные.Установить("СпособОтраженияВБухучете",			ПолучитьСпособОтраженияПоШаблону(Источник.ШаблонПроводки));
		ВходящиеДанные.Установить("ОтнесениеРасходовКДеятельностиЕНВД",	"РасходыРаспределяются");
		
	Иначе
		СтатьяФинансирования = ПолучитьОтражениеИзШаблона(Источник.ШаблонПроводки, , ВР);
		
		ВходящиеДанные.Установить("СтатьяФинансирования",	СтатьяФинансирования);
		ВходящиеДанные.Установить("КОСГУ",					СтатьяФинансирования.КОСГУ);
		
	КонецЕсли;
КонецЕсли;</ПриВыгрузке>
					<Источник>ДокументСсылка.ДоговорГраждПравХаракт</Источник>
					<Приемник>ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Подразделение --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.Подразделения"/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизацийВсеДанные                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Сотрудник --&gt; ФизЛицо</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>Начало --&gt; ДатаНачала</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Начало" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование>Окончание --&gt; ДатаОкончания</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Окончание" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>ПорядокОплаты --&gt; ХарактерОплаты</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПорядокОплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокОплатыДоговоров"/>
							<Приемник Имя="ХарактерОплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерВыплатыПоДоговору"/>
							<КодПравилаКонвертации>ХарактерВыплатыПоДоговору                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>Сумма --&gt; СуммаЗаРаботу</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СуммаЗаРаботу" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>Валюта --&gt; ВалютаДокумента</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Валюта" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>ТипДоговора --&gt; ВидДоговора</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ТипДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ТипДоговора"/>
							<Приемник Имя="ВидДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДоговоровСФизЛицами"/>
							<КодПравилаКонвертации>ВидыДоговоровСФизЛицами                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВидРасчета</Наименование>
							<Порядок>700</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ДополнительныеНачисленияОрганизаций               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>ВидВычета --&gt; КодВычета</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="ВидВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетов"/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
							<КодПравилаКонвертации>ВычетыНДФЛСправочник                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; ВидАвторскогоДоговора</Наименование>
							<Порядок>800</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидАвторскогоДоговора" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыАвторскогоДоговора"/>
						</Свойство>
						<Группа>
							<Код>21</Код>
							<Наименование> --&gt; ПлановыеНачисленияРаботниковОрганизаций</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПлановыеНачисленияРаботниковОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
							<ПередОбработкойВыгрузки>Если Источник.Проведен() = 0 Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;

ТЗВидаРасчета = ВернутьТЗВидаРасчета(ПолучитьВидРасчетаПоТипуДоговора(Источник.ТипДоговора), Источник, Источник.Начало, Источник.Сотрудник);

КоллекцияОбъектов = СоздатьТЗПлановыеНачисления();

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Период				= Источник.Начало;

Если (Источник.ПорядокОплаты = Перечисление.ПорядокОплатыДоговоров.РазоваяОплата) И (ПустоеЗначение(Источник.Окончание) = 0) Тогда
	КоллекцияОбъектов.Период			= НачМесяца(Источник.Окончание);
КонецЕсли;

КоллекцияОбъектов.Организация			= "Наша организация";
КоллекцияОбъектов.Сотрудник				= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.Действие				= "Начать";
КоллекцияОбъектов.ВидРасчетаИзмерение	= ТЗВидаРасчета;
КоллекцияОбъектов.ВидРасчета			= ТЗВидаРасчета;
КоллекцияОбъектов.Показатель1			= Источник.Сумма;
КоллекцияОбъектов.Валюта1				= "Рубль";
Если ПустоеЗначение(Источник.Окончание) = 0 Тогда
	КоллекцияОбъектов.ПериодЗавершения		= Источник.Окончание+1;
	КоллекцияОбъектов.ДействиеЗавершения	= "Прекратить";
КонецЕсли;
КоллекцияОбъектов.ДокументОснование		= Источник;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; Период</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизацийВсеДанные                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; Действие</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Действие" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; ВидРасчетаИзмерение</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидРасчетаИзмерение" Вид="Измерение"/>
								<КодПравилаКонвертации>ДополнительныеНачисленияОрганизаций               </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; ВидРасчета</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидРасчета" Вид="Ресурс"/>
								<КодПравилаКонвертации>ДополнительныеНачисленияОрганизаций               </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; Показатель1</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель1" Вид="Ресурс" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; Валюта1</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Валюта1" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; ПериодЗавершения</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>29</Код>
								<Наименование> --&gt; ДействиеЗавершения</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДействиеЗавершения" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование>--&gt; ДокументОснование</Наименование>
								<Порядок>600</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументОснование" Вид="Измерение" Тип="ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом"/>
								<КодПравилаКонвертации>ДоговорНаВыполнениеРаботСФизЛицомРегистратор      </КодПравилаКонвертации>
							</Свойство>
						</Группа>
						<Группа>
							<Код>35</Код>
							<Наименование> --&gt; РеглУчетПлановыхНачисленийРаботниковОрганизаций</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РеглУчетПлановыхНачисленийРаботниковОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
							<ПередОбработкойВыгрузки>Если (Источник.Проведен() = 0) ИЛИ (ПустоеЗначение(Источник.ШаблонПроводки) = 1) Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;

ВР				= ПолучитьВидРасчетаПоТипуДоговора(Источник.ТипДоговора);
Если ВР = ВидРасчета.ОплатаПоДоговору Тогда
	КодДоходаЕСН	= "ДоговораГПХ";
Иначе
	КодДоходаЕСН	= "ДоговораАвторские";
КонецЕсли;
ТЗВидаРасчета	= ВернутьТЗВидаРасчета(ВР, Источник, Источник.Начало, Источник.Сотрудник);

КоллекцияОбъектов = СоздатьТЗУчетПлановыхНачислений();

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Период									= Источник.Начало;

Если (Источник.ПорядокОплаты = Перечисление.ПорядокОплатыДоговоров.РазоваяОплата) И (ПустоеЗначение(Источник.Окончание) = 0) Тогда
	КоллекцияОбъектов.Период								= НачМесяца(Источник.Окончание);
КонецЕсли;

КоллекцияОбъектов.Организация								= "Наша организация";
КоллекцияОбъектов.Сотрудник									= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ВидРасчета								= ТЗВидаРасчета;
КоллекцияОбъектов.КодДоходаЕСН								= КодДоходаЕСН;
КоллекцияОбъектов.ДокументОснование							= Источник;

Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	КоллекцияОбъектов.СпособОтраженияВБухучете				= ВходящиеДанные.Получить("СпособОтраженияВБухучете");
	КоллекцияОбъектов.ОтнесениеРасходовКДеятельностиЕНВД	= ВходящиеДанные.Получить("ОтнесениеРасходовКДеятельностиЕНВД");

Иначе
	КоллекцияОбъектов.СтатьяФинансирования					= ВходящиеДанные.Получить("СтатьяФинансирования");
	КоллекцияОбъектов.СтатьяРасходов						= Источник.ШаблонПроводки;
	КоллекцияОбъектов.КОСГУ									= ВходящиеДанные.Получить("КОСГУ");

КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>43</Код>
								<Наименование> --&gt; Период</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; Организация</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
								<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>39</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; ВидРасчета</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидРасчета" Вид="Измерение"/>
								<КодПравилаКонвертации>ДополнительныеНачисленияОрганизаций               </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>40</Код>
								<Наименование> --&gt; КодДоходаЕСН</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КодДоходаЕСН" Вид="Ресурс" Тип="СправочникСсылка.ДоходыЕСН"/>
								<КодПравилаКонвертации>ДоходыЕСН                                         </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование>--&gt; ДокументОснование</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДокументОснование" Вид="Измерение" Тип="ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом"/>
								<КодПравилаКонвертации>ДоговорНаВыполнениеРаботСФизЛицомРегистратор      </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>42</Код>
								<Наименование> --&gt; СпособОтраженияВБухучете</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СпособОтраженияВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
								<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>41</Код>
								<Наименование> --&gt; ОтнесениеРасходовКДеятельностиЕНВД</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ОтнесениеРасходовКДеятельностиЕНВД" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтнесениеРасходовКДеятельностиЕНВД"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>20</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияВБухучете" Вид="Реквизит" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
							<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование>--&gt; ОтнесениеРасходовКДеятельностиЕНВД</Наименование>
							<Порядок>1100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтнесениеРасходовКДеятельностиЕНВД" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтнесениеРасходовКДеятельностиЕНВД"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ДоговорНаВыполнениеРаботСФизЛицомРегистратор</Код>
					<Наименование>Документ: Договор гражданско-правового характера</Наименование>
					<Порядок>200</Порядок>
					<ПередВыгрузкой>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Организация",	?(ПустоеЗначение(Источник.Подразделение) = 0, Источник.Подразделение, "Наша организация"));</ПередВыгрузкой>
					<Источник>ДокументСсылка.ДоговорГраждПравХаракт</Источник>
					<Приемник>ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>4</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>9</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ЗарплатаКВыплатеОрганизаций</Код>
					<Наименование>Документ: Выплата заработной платы</Наименование>
					<Порядок>250</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",	?(ПустоеЗначение(Источник.Подразделение) = 0, Источник.Подразделение, "Наша организация"));</ПередВыгрузкой>
					<ПриВыгрузке>Физлица = СоздатьОбъект("ТаблицаЗначений");
ВходящиеДанные.Получить("Взаиморасчеты").Выгрузить(Физлица,,, "Физлицо");
Физлица.Свернуть("Физлицо", "");

ВходящиеДанные.Установить("ДанныеПрошлойВерсии",		1);
ВходящиеДанные.Установить("ХарактерВыплаты",			"Зарплата");
ВходящиеДанные.Установить("СпособВыплаты",				"ЧерезКассу");
ВходящиеДанные.Установить("ПроцентВыплаты",				100);
ВходящиеДанные.Установить("Проведен",					0);
ВходящиеДанные.Установить("Физлица",					Физлица);

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	СтатьяФинансирования = СоздатьТЗСтатьяФинансирования();
	СтатьяФинансирования.НоваяСтрока();

	СтатьяФинансирования.Наименование		= СОКРЛП(Источник.ФКР.Наименование);
	СтатьяФинансирования.КВД				= Источник.ИсточникФинансирования.Код;
	СтатьяФинансирования.ПодпадаетПодЕНВД	= 0;
	СтатьяФинансирования.Баланс				= Источник.Балансодержатель;	

	Если ПустоеЗначение(СтатьяФинансирования.Наименование) = 1 Тогда
		СтатьяФинансирования.Наименование		= "Бюджетное финансирование";
	КонецЕсли;
	Если ПустоеЗначение(СтатьяФинансирования.КВД) = 1 Тогда
		СтатьяФинансирования.КВД				= 1; 
	КонецЕсли;
	Если ПустоеЗначение(СтатьяФинансирования.ПодпадаетПодЕНВД) = 1 Тогда
		СтатьяФинансирования.ПодпадаетПодЕНВД	= 0;
	КонецЕсли;
	Если ПустоеЗначение(СтатьяФинансирования.Баланс) = 1 Тогда
		СтатьяФинансирования.Баланс				= ПолучитьПустоеЗначение("Справочник.Балансодержатели");
	КонецЕсли;

	ВходящиеДанные.Установить("СтатьяФинансирования",	СтатьяФинансирования);
	ВходящиеДанные.Установить("КОСГУ",					"211");
КонецЕсли;</ПриВыгрузке>
					<ПослеЗагрузки>МассивТЧ = Новый Массив();
МассивТЧ.Добавить(Объект.Зарплата);

Объект.КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");</ПослеЗагрузки>
					<Источник>ДокументСсылка.ВыплатаЗаработнойПлаты</Источник>
					<Приемник>ДокументСсылка.ЗарплатаКВыплатеОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>11</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ДатаПериода --&gt; ПериодРегистрации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ДатаПериода" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>Подразделение --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.Подразделения"/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ХарактерВыплаты</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерВыплатыЗарплаты"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; ПроцентВыплаты</Наименование>
							<Порядок>400</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПроцентВыплаты" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>ДнейЗадержано --&gt; ДнейНеВыплаты</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="ДнейЗадержано" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ДнейНеВыплаты" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Группа>
							<Код>5</Код>
							<Наименование>ТабличнаяЧасть --&gt; Зарплата</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ТабличнаяЧасть" Вид="ТабличнаяЧасть"/>
							<Приемник Имя="Зарплата" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Физлицо");
КоллекцияОбъектов.НоваяКолонка("Сумма");
КоллекцияОбъектов.НоваяКолонка("КомпенсацияЗаЗадержкуЗарплаты");
КоллекцияОбъектов.НоваяКолонка("ВыплаченностьЗарплаты");

Физлица					= ВходящиеДанные.Получить("Физлица");
ВыплаченностьЗарплаты	= ВходящиеДанные.Получить("ВыплаченностьЗарплаты");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку() = 1 Цикл
	НомерСтроки = 0;
	Если Физлица.НайтиЗначение(Источник.Сотрудник, НомерСтроки, "Физлицо") = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Физлицо						= Источник.Сотрудник;
	КоллекцияОбъектов.Сумма							= Источник.Сумма;
	КоллекцияОбъектов.КомпенсацияЗаЗадержкуЗарплаты	= Источник.Компенсация;
	КоллекцияОбъектов.ВыплаченностьЗарплаты			= ВыплаченностьЗарплаты;
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>7</Код>
								<Наименование> --&gt; Физлицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>8</Код>
								<Наименование> --&gt; Сумма</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>6</Код>
								<Наименование> --&gt; КомпенсацияЗаЗадержкуЗарплаты</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КомпенсацияЗаЗадержкуЗарплаты" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; ВыплаченностьЗарплаты</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВыплаченностьЗарплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ВыплаченностьЗарплаты"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; СпособВыплаты</Наименование>
							<Порядок>700</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыплатыЗарплаты"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком</Код>
					<Наименование>Документ: Отпуск по уходу за ребенком</Наименование>
					<Порядок>300</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",	"Наша организация");</ПередВыгрузкой>
					<ПриВыгрузке>ВходящиеДанные.Установить("ДанныеПрошлойВерсии",			1);
ВходящиеДанные.Установить("Физлицо",						Источник.Сотрудник.ОсновнойЭлемент);
ВходящиеДанные.Установить("ВыплачиватьПособиеДоТрехЛет",	?(ПустоеЗначение(Источник.ОкончаниеПособияДоТрехЛет) = 0, 1, 0));</ПриВыгрузке>
					<Источник>ДокументСсылка.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком</Источник>
					<Приемник>ДокументСсылка.ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>17</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>ДокументОснование --&gt; ДокументОснование</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.ОтпускПоУходуЗаРебенком"/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.ОтпускПоУходуЗаРебенком"/>
							<КодПравилаКонвертации>ОтпускПоУходуЗаРебенком                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Физлицо</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>ДатаИзменения --&gt; ДатаИзменения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ДатаИзменения" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаИзменения" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>21</Код>
							<Наименование>--&gt; Действие</Наименование>
							<Порядок>450</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>ВыплачиватьПособиеДоПолутораЛет --&gt; ВыплачиватьПособиеДоПолутораЛет</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ВыплачиватьПособиеДоПолутораЛет" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ВыплачиватьПособиеДоПолутораЛет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ОкончаниеПособийЗаСчетФСС --&gt; ДатаОкончанияПособияДоПолутораЛет</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="ОкончаниеПособийЗаСчетФСС" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончанияПособияДоПолутораЛет" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>КоличествоДетей --&gt; КоличествоДетей</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="КоличествоДетей" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоличествоДетей" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>ЕстьПервыйРебенок --&gt; КоличествоПервыхДетей</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="ЕстьПервыйРебенок" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоличествоПервыхДетей" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВыплачиватьПособиеДоТрехЛет</Наименование>
							<Порядок>850</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВыплачиватьПособиеДоТрехЛет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>ОкончаниеПособияДоТрехЛет --&gt; ДатаОкончанияПособияДоТрехЛет</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ОкончаниеПособияДоТрехЛет" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончанияПособияДоТрехЛет" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИсполнительныйЛист</Код>
					<Наименование>Документ: Исполнительный лист</Наименование>
					<Порядок>350</Порядок>
					<ПередВыгрузкой>Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Источник.Сотрудник, Источник.Начало);

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Номер",							ПривестиНомерКДлине(Источник.НомерДок, 11));
ВходящиеДанные.Установить("Организация",					?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация"));</ПередВыгрузкой>
					<ПриВыгрузке>Если Источник.СпособПеречисленияПоИЛ = Перечисление.СпособыПеречисленийПоИспЛисту.ПеречислениеНаСчет Тогда
	ПроцентИздержекБанка = Источник.Получатель.ПроцентИздержекБанка;
Иначе
	ПроцентИздержекБанка = 0;
КонецЕсли;

Если Источник.СпособРасчетаПоИЛ = 1 Тогда
	Если Источник.ОблагатьБольничныеЛисты = 1 Тогда
		СпособРасчетаУдержания = "ПроцентомОтЗаработкаСУчетомБольничныхЛистов";
	Иначе
		СпособРасчетаУдержания = "ПроцентомОтЗаработка";
	КонецЕсли;
Иначе
	СпособРасчетаУдержания = "ФиксированнойСуммой";
КонецЕсли;

ВходящиеДанные.Установить("ВидИсполнительногоДокумента",		?(Источник.ВидИсполнительногоДокумента = 1, "Исполнительный лист", "Соглашение об уплате алиментов"));
ВходящиеДанные.Установить("СпособРасчетаУдержания",				СпособРасчетаУдержания);
ВходящиеДанные.Установить("ТарифБанкаНаДенежныеПереводы",		ПроцентИздержекБанка);
ВходящиеДанные.Установить("ПочтовыйСборРассчитыватьПроцентом",	?(Источник.ПроцентПочтовогоСбора &gt; 0, 1, 0));
ВходящиеДанные.Установить("ДанныеПрошлойВерсии",				1);</ПриВыгрузке>
					<Источник>ДокументСсылка.ИсполнительныйЛист</Источник>
					<Приемник>ДокументСсылка.ИсполнительныйЛист</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>--&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>15</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>Сотрудник --&gt; Физлицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.Сотрудники"/>
							<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Получатель --&gt; Получатель</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<Приемник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>Величина --&gt; Размер</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Величина" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Размер" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>Сумма --&gt; Предел</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="Предел" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Начало --&gt; ДатаНачала</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="Начало" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Окончание --&gt; ДатаОкончания</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Окончание" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>ДатаДок --&gt; ДатаДействия</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="ДатаДействия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>--&gt; ВидИсполнительногоДокумента</Наименование>
							<Порядок>650</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидИсполнительногоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; ПочтовыйСборРассчитыватьПроцентом</Наименование>
							<Порядок>700</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПочтовыйСборРассчитыватьПроцентом" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПроцентПочтовогоСбора --&gt; ПроцентПочтовогоСбора</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="ПроцентПочтовогоСбора" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ПроцентПочтовогоСбора" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>РеквизитыИсполнительногоДокумента --&gt; РеквизитыИсполнительногоДокумента</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="РеквизитыИсполнительногоДокумента" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="РеквизитыИсполнительногоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование>--&gt; СпособРасчетаУдержания</Наименование>
							<Порядок>950</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособРасчетаУдержания" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыРасчетаУдержанийПоИЛ"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>СпособПеречисленияПоИЛ --&gt; СпособПеречисленияПоИсполнительномуЛисту</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="СпособПеречисленияПоИЛ" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПеречисленийПоИспЛисту"/>
							<Приемник Имя="СпособПеречисленияПоИсполнительномуЛисту" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыПеречисленийПоИсполнительномуЛисту"/>
							<КодПравилаКонвертации>СпособыПеречисленийПоИсполнительномуЛисту         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; ТарифБанкаНаДенежныеПереводы</Наименование>
							<Порядок>1050</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТарифБанкаНаДенежныеПереводы" Вид="Реквизит" Тип="СправочникСсылка.ТарифыБанковНаДенежныеПереводы"/>
							<КодПравилаКонвертации>ТарифыБанковНаДенежныеПереводы                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ИсполнительныйЛистРегистратор</Код>
					<Наименование>Документ: Исполнительный лист</Наименование>
					<Порядок>400</Порядок>
					<ПередВыгрузкой>Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Источник.Сотрудник, Источник.Начало);

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Номер",			ПривестиНомерКДлине(Источник.НомерДок, 11));
ВходящиеДанные.Установить("Организация",	?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация"));</ПередВыгрузкой>
					<НеЗамещать>true</НеЗамещать>
					<Источник>ДокументСсылка.ИсполнительныйЛист</Источник>
					<Приемник>ДокументСсылка.ИсполнительныйЛист</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>1</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>--&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КадровоеПеремещениеОрганизаций</Код>
					<Наименование>Документ: Кадровое перемещение</Наименование>
					<Порядок>450</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",			"Наша организация");</ПередВыгрузкой>
					<ПриВыгрузке>ПодразделениеОткуда = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Источник.Сотрудник, Источник.Начало-1);

ВходящиеДанные.Установить("ДанныеПрошлойВерсии",				1);
ВходящиеДанные.Установить("ОбособленноеПодразделениеОткуда",	?(ПустоеЗначение(ПодразделениеОткуда) = 1, "Наша организация", ПодразделениеОткуда));</ПриВыгрузке>
					<ПослеЗагрузки>МассивТЧ = Новый Массив();
МассивТЧ.Добавить(Объект.РаботникиОрганизации);

Объект.КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");

Выполнить(Алгоритмы.ЗаполнитьФизЛицоВТабличнойЧасти);</ПослеЗагрузки>
					<Источник>ДокументСсылка.КадровоеПеремещение</Источник>
					<Приемник>ДокументСсылка.КадровоеПеремещениеОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование>--&gt; ОбособленноеПодразделениеОткуда</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделениеОткуда" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование>Подразделение --&gt; ОбособленноеПодразделениеКуда</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Подразделение" Вид="Реквизит" Тип="СправочникСсылка.Подразделения"/>
							<Приемник Имя="ОбособленноеПодразделениеКуда" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Группа>
							<Код>18</Код>
							<Наименование> --&gt; РаботникиОрганизации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ПодразделениеОрганизации");
КоллекцияОбъектов.НоваяКолонка("Должность");
КоллекцияОбъектов.НоваяКолонка("ГрафикРаботы");
КоллекцияОбъектов.НоваяКолонка("ДатаНачала");
КоллекцияОбъектов.НоваяКолонка("ДатаОкончания");
КоллекцияОбъектов.НоваяКолонка("ЗанимаемыхСтавок");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Сотрудник					= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ФизЛицо					= Источник.Сотрудник.ОсновнойЭлемент;
КоллекцияОбъектов.ПодразделениеОрганизации	= Источник.Подразделение;
КоллекцияОбъектов.Должность					= Источник.Должность;
КоллекцияОбъектов.ГрафикРаботы				= ?(ПустоеЗначение(Источник.ГрафикРаботы) = 0, Источник.ГрафикРаботы, Константа.ОсновнойГрафик);
КоллекцияОбъектов.ДатаНачала				= Источник.Начало;
КоллекцияОбъектов.ДатаОкончания				= Источник.Окончание;
КоллекцияОбъектов.ЗанимаемыхСтавок			= Источник.Ставка;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Должность</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
								<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; ГрафикРаботы</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
								<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>20</Код>
								<Наименование> --&gt; ДатаНачала</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; ДатаОкончания</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; ЗанимаемыхСтавок</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЗанимаемыхСтавок" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt; ОсновныеНачисления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновныеНачисления" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ВидРасчета");
КоллекцияОбъектов.НоваяКолонка("Действие");
КоллекцияОбъектов.НоваяКолонка("Показатель1");
КоллекцияОбъектов.НоваяКолонка("Валюта1");
КоллекцияОбъектов.НоваяКолонка("ТарифныйРазряд1");
КоллекцияОбъектов.НоваяКолонка("Показатель2");
КоллекцияОбъектов.НоваяКолонка("Валюта2");
КоллекцияОбъектов.НоваяКолонка("Показатель3");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Сотрудник		= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ФизЛицо		= Источник.Сотрудник.ОсновнойЭлемент;
КоллекцияОбъектов.ВидРасчета	= ВернутьТЗВидаРасчета(ВидРасчета.ОплатаПоОкладу, Источник, Источник.Начало, Источник.Сотрудник);
КоллекцияОбъектов.Действие		= "Изменить";

ЗаполнитьПоказателиРасчета(
	КоллекцияОбъектов,
	КоллекцияОбъектов.ВидРасчета,
	Источник,
	,
	ВидРасчета.ОплатаПоОкладу,
	Источник.Сотрудник,
	Источник.Начало,
	1);</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; ВидРасчета</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
								<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; Действие</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Показатель1</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель1" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Валюта1</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Валюта1" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; ТарифныйРазряд1</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ТарифныйРазряд1" Вид="Реквизит" Тип="СправочникСсылка.ТарифныеРазряды"/>
								<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ТарифныйРазряд1);
Если Отказ = 1 Тогда
	Возврат Отказ;
КонецЕсли;

ТипВидТарифа = глТипВидЗначения(ОбъектКоллекции.ТарифныйРазряд1);

Если ТипВидТарифа = "Справочник.ТарифныеРазряды" Тогда
	ИмяПКО = "ТарифныеРазряды";
	
ИначеЕсли ТипВидТарифа = "Справочник.ЕТС" Тогда
	ИмяПКО = "ЕТС";
	
Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Показатель2</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель2" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Валюта2</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Валюта2" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; Показатель3</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель3" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>КадровоеПеремещениеОрганизацийИндексация</Код>
					<Наименование>Документ: Кадровое перемещение</Наименование>
					<Порядок>500</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",			"Наша организация");</ПередВыгрузкой>
					<ПриВыгрузке>ВходящиеДанные.Установить("ДанныеПрошлойВерсии",				1);
ВходящиеДанные.Установить("ИндексацияЗаработка",				1);
ВходящиеДанные.Установить("ОбособленноеПодразделениеОткуда",	"Наша организация");
ВходящиеДанные.Установить("ОбособленноеПодразделениеКуда",		"Наша организация");

Физлица	= СоздатьОбъект("СписокЗначений");
ТЧ		= СоздатьОбъект("ТаблицаЗначений");
ВходящиеДанные.Получить("ТЧ").Выгрузить(ТЧ);
ТЧ.ВыбратьСтроки();
Пока ТЧ.ПолучитьСтроку() = 1 Цикл
	Физлицо = ТЧ.Сотрудник.Получить("Физлицо");
	
	Если Физлица.НайтиЗначение(Физлицо) = 0 Тогда
		Физлица.ДобавитьЗначение(Физлицо);
	КонецЕсли;
КонецЦикла;
ВходящиеДанные.Установить("Физлица",							Физлица);</ПриВыгрузке>
					<ПослеЗагрузки>МассивТЧ = Новый Массив();
МассивТЧ.Добавить(Объект.РаботникиОрганизации);

Объект.КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");

Выполнить(Алгоритмы.ЗаполнитьФизЛицоВТабличнойЧасти);</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПерерасчетОкладовПоПредприятию</Источник>
					<Приемник>ДокументСсылка.КадровоеПеремещениеОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование>--&gt; ОбособленноеПодразделениеОткуда</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделениеОткуда" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование>--&gt; ОбособленноеПодразделениеКуда</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделениеКуда" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование>--&gt; ИндексацияЗаработка</Наименование>
							<Порядок>350</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИндексацияЗаработка" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование>КоэффициентПовышения --&gt; КоэффициентИндексацииЗаработка</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="КоэффициентПовышения" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоэффициентИндексацииЗаработка" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Группа>
							<Код>18</Код>
							<Наименование> --&gt; РаботникиОрганизации</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ПодразделениеОрганизации");
КоллекцияОбъектов.НоваяКолонка("Должность");
КоллекцияОбъектов.НоваяКолонка("ГрафикРаботы");
КоллекцияОбъектов.НоваяКолонка("ДатаНачала");
КоллекцияОбъектов.НоваяКолонка("ДатаОкончания");
КоллекцияОбъектов.НоваяКолонка("ЗанимаемыхСтавок");

Физлица	= ВходящиеДанные.Получить("Физлица");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку() = 1 Цикл
	Если Физлица.НайтиЗначение(Источник.Элемент) = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Сотрудник					= ЗаполнитьТЗСотрудникаОрганизации(Источник.Элемент, Источник.ДатаДок);
	КоллекцияОбъектов.Физлицо					= Источник.Элемент.ОсновнойЭлемент;
	КоллекцияОбъектов.ПодразделениеОрганизации	= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Источник.Элемент, Источник.ДатаДок);
	КоллекцияОбъектов.Должность					= ЗначениеПериодическогоРеквизитаНаНачало("Должность", Источник.Элемент, Источник.ДатаДок);
	КоллекцияОбъектов.ГрафикРаботы				= ЗначениеПериодическогоРеквизитаНаНачало("ГрафикРаботы", Источник.Элемент, Источник.ДатаДок);
	КоллекцияОбъектов.ГрафикРаботы				= ?(ПустоеЗначение(КоллекцияОбъектов.ГрафикРаботы) = 0, КоллекцияОбъектов.ГрафикРаботы, Константа.ОсновнойГрафик);
	КоллекцияОбъектов.ДатаНачала				= Источник.ДатаДок;
	КоллекцияОбъектов.ЗанимаемыхСтавок			= ЗначениеПериодическогоРеквизитаНаНачало("Ставка", Источник.Элемент, Источник.ДатаДок);
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Должность</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
								<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>27</Код>
								<Наименование> --&gt; ГрафикРаботы</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
								<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование> --&gt; ДатаНачала</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование> --&gt; ЗанимаемыхСтавок</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЗанимаемыхСтавок" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt; ОсновныеНачисления</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновныеНачисления" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ВидРасчета");
КоллекцияОбъектов.НоваяКолонка("Действие");
КоллекцияОбъектов.НоваяКолонка("Показатель1");
КоллекцияОбъектов.НоваяКолонка("Валюта1");
КоллекцияОбъектов.НоваяКолонка("ТарифныйРазряд1");
КоллекцияОбъектов.НоваяКолонка("Показатель2");
КоллекцияОбъектов.НоваяКолонка("Валюта2");
КоллекцияОбъектов.НоваяКолонка("Показатель3");

Физлица	= ВходящиеДанные.Получить("Физлица");

Источник.ВыбратьСтроки();
Пока Источник.ПолучитьСтроку() = 1 Цикл
	Если Физлица.НайтиЗначение(Источник.Элемент) = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	КоллекцияОбъектов.НоваяСтрока();
	КоллекцияОбъектов.Сотрудник		= ЗаполнитьТЗСотрудникаОрганизации(Источник.Элемент, Источник.ДатаДок);
	КоллекцияОбъектов.Физлицо		= Источник.Элемент.ОсновнойЭлемент;
	КоллекцияОбъектов.ВидРасчета	= ВернутьТЗВидаРасчета(ВидРасчета.ОплатаПоОкладу, Источник, Источник.ДатаДок, Источник.Элемент);
	КоллекцияОбъектов.Действие		= "Изменить";

	ЗаполнитьПоказателиРасчета(
		КоллекцияОбъектов,
		КоллекцияОбъектов.ВидРасчета,
		Источник,
		,
		ВидРасчета.ОплатаПоОкладу,
		Источник.Элемент,
		Источник.ДатаДок,
		1);
КонецЦикла;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; ВидРасчета</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
								<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; Действие</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Действие" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; Показатель1</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель1" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; Валюта1</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Валюта1" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; ТарифныйРазряд1</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ТарифныйРазряд1" Вид="Реквизит" Тип="СправочникСсылка.ТарифныеРазряды"/>
								<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ТарифныйРазряд1);
Если Отказ = 1 Тогда
	Возврат Отказ;
КонецЕсли;

ТипВидТарифа = глТипВидЗначения(ОбъектКоллекции.ТарифныйРазряд1);

Если ТипВидТарифа = "Справочник.ТарифныеРазряды" Тогда
	ИмяПКО = "ТарифныеРазряды";
	
ИначеЕсли ТипВидТарифа = "Справочник.ЕТС" Тогда
	ИмяПКО = "ЕТС";
	
Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; Показатель2</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель2" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; Валюта2</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Валюта2" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; Показатель3</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель3" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОтпускаОрганизаций</Код>
					<Наименование>Документ: Приказ по отпуску</Наименование>
					<Порядок>550</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",			"Наша организация");
ВходящиеДанные.Установить("ДанныеПрошлойВерсии",	1);</ПередВыгрузкой>
					<ПослеЗагрузки>МассивТЧ = Новый Массив();
МассивТЧ.Добавить(Объект.РаботникиОрганизации);

Объект.КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПриказПоОтпуску</Источник>
					<Приемник>ДокументСсылка.ОтпускаОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование>--&gt; РаботникиОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ДатаНачала");
КоллекцияОбъектов.НоваяКолонка("ДатаОкончания");
КоллекцияОбъектов.НоваяКолонка("РабочийГодС");
КоллекцияОбъектов.НоваяКолонка("РабочийГодПо");
КоллекцияОбъектов.НоваяКолонка("ПричинаОтсутствия");
КоллекцияОбъектов.НоваяКолонка("ДатаНачалаДоп");
КоллекцияОбъектов.НоваяКолонка("ВидДополнительногоОтпуска");
КоллекцияОбъектов.НоваяКолонка("КоличествоДней");
КоллекцияОбъектов.НоваяКолонка("КоличествоДнейДоп");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Сотрудник						= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ФизЛицо						= Источник.Сотрудник.ОсновнойЭлемент;
КоллекцияОбъектов.ДатаНачала					= Источник.Начало;
КоллекцияОбъектов.ДатаОкончания					= Источник.Окончание;
КоллекцияОбъектов.РабочийГодС					= Источник.НачалоПериода;
КоллекцияОбъектов.РабочийГодПо					= Источник.ОкончаниеПериода;
КоллекцияОбъектов.КоличествоДней				= Источник.КоличествоДнейОтпуска;
КоллекцияОбъектов.КоличествоДнейДоп				= Источник.КоличествоДнейДополнительногоОтпуска;

Если Источник.ВидОтпуска = ВидРасчета.ОтпускОчередной Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускЕжегодный";
	
ИначеЕсли Источник.ВидОтпуска = ВидРасчета.ОтпускУчебный Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускУчебный";
	
ИначеЕсли Источник.ВидОтпуска = ВидРасчета.ПособиеПоУходуЗаРебенкомФЗП Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускПоУходуЗаРебенком";
	
ИначеЕсли (Источник.ВидОтпуска = ВидРасчета.ОтпускЗаСвойСчетДолгосрочный)
	ИЛИ (Источник.ВидОтпуска = ВидРасчета.ОтпускЗаСвойСчетКраткосрочный) Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускБезСохраненияЗарплаты";
	
КонецЕсли;

Если (Источник.ВидОтпуска = ВидРасчета.ОтпускОчередной) И (Источник.КоличествоДнейДополнительногоОтпуска &gt; 0) Тогда
	Если Источник.ТипРасчетаДополнительногоОтпуска = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
		НужныйКалендарь = СоздатьОбъект("Календарь.Шестидневка");
	Иначе
		НужныйКалендарь = СоздатьОбъект("Календарь.ДляРасчетаОтпускаПоКалендДням");
	КонецЕсли;
	ДатаНачалаДополнительного = НужныйКалендарь.ПолучитьДату(Источник.Окончание, - Источник.КоличествоДнейДополнительногоОтпуска);
	ДатаНачалаДополнительного = Макс(ДатаНачалаДополнительного,Источник.Начало);
	
	КоллекцияОбъектов.ДатаНачалаДоп				= ДатаНачалаДополнительного;
	КоллекцияОбъектов.ВидДополнительногоОтпуска	= ВернутьТЗВидаРасчета(ВидРасчета.ОтпускДополнительный, Источник, КоллекцияОбъектов.ДатаНачалаДоп, КоллекцияОбъектов.Физлицо, , КоллекцияОбъектов.Сотрудник.Получить("ВидДоговора"));
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>19</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>22</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>10</Код>
								<Наименование>--&gt; ДатаНачала</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование>--&gt; ДатаОкончания</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>--&gt; РабочийГодС</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="РабочийГодС" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование>--&gt; РабочийГодПо</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="РабочийГодПо" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование>--&gt; ПричинаОтсутствия</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПричинаОтсутствия" Вид="Реквизит" Тип="ПеречислениеСсылка.ПричиныОтсутствияНаРаботеВОрганизации"/>
							</Свойство>
							<Свойство>
								<Код>24</Код>
								<Наименование>--&gt; ДатаНачалаДоп</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНачалаДоп" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>23</Код>
								<Наименование> --&gt; ВидДополнительногоОтпуска</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДополнительногоОтпуска" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
								<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>25</Код>
								<Наименование>--&gt; КоличествоДней</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КоличествоДней" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>26</Код>
								<Наименование>--&gt; КоличествоДнейДоп</Наименование>
								<Порядок>550</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КоличествоДнейДоп" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОтпускаОрганизацийПоНачислению</Код>
					<Наименование>Документ: Приказ по отпуску</Наименование>
					<Порядок>600</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",			"Наша организация");
ВходящиеДанные.Установить("ДанныеПрошлойВерсии",	1);</ПередВыгрузкой>
					<ПослеЗагрузки>МассивТЧ = Новый Массив();
МассивТЧ.Добавить(Объект.РаботникиОрганизации);

Объект.КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");</ПослеЗагрузки>
					<Источник>ДокументСсылка.НачислениеОтпуска</Источник>
					<Приемник>ДокументСсылка.ОтпускаОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование>--&gt; РаботникиОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ДатаНачала");
КоллекцияОбъектов.НоваяКолонка("ДатаОкончания");
КоллекцияОбъектов.НоваяКолонка("ПричинаОтсутствия");
КоллекцияОбъектов.НоваяКолонка("ДатаНачалаДоп");
КоллекцияОбъектов.НоваяКолонка("ВидДополнительногоОтпуска");
КоллекцияОбъектов.НоваяКолонка("КоличествоДней");
КоллекцияОбъектов.НоваяКолонка("КоличествоДнейДоп");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Сотрудник						= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ФизЛицо						= Источник.Сотрудник.ОсновнойЭлемент;
КоллекцияОбъектов.ДатаНачала					= Источник.Начало;
КоллекцияОбъектов.ДатаОкончания					= Источник.Окончание;
КоллекцияОбъектов.КоличествоДней				= Источник.КоличествоДнейОтпуска;
КоллекцияОбъектов.КоличествоДнейДоп				= Источник.КоличествоДнейДополнительногоОтпуска;

Если Источник.ВидОтпуска = ВидРасчета.ОтпускОчередной Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускЕжегодный";
	
ИначеЕсли Источник.ВидОтпуска = ВидРасчета.ОтпускУчебный Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускУчебный";
	
ИначеЕсли Источник.ВидОтпуска = ВидРасчета.ПособиеПоУходуЗаРебенкомФЗП Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускПоУходуЗаРебенком";
	
ИначеЕсли (Источник.ВидОтпуска = ВидРасчета.ОтпускЗаСвойСчетДолгосрочный)
	ИЛИ (Источник.ВидОтпуска = ВидРасчета.ОтпускЗаСвойСчетКраткосрочный) Тогда
	КоллекцияОбъектов.ПричинаОтсутствия			= "ОтпускБезСохраненияЗарплаты";
	
КонецЕсли;

Если (Источник.ВидОтпуска = ВидРасчета.ОтпускОчередной) И (Источник.КоличествоДнейДополнительногоОтпуска &gt; 0) Тогда
	Если Источник.ТипРасчетаДополнительногоОтпуска = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
		НужныйКалендарь = СоздатьОбъект("Календарь.Шестидневка");
	Иначе
		НужныйКалендарь = СоздатьОбъект("Календарь.ДляРасчетаОтпускаПоКалендДням");
	КонецЕсли;
	ДатаНачалаДополнительного = НужныйКалендарь.ПолучитьДату(Источник.Окончание, - Источник.КоличествоДнейДополнительногоОтпуска);
	ДатаНачалаДополнительного = Макс(ДатаНачалаДополнительного,Источник.Начало);
	
	КоллекцияОбъектов.ДатаНачалаДоп				= ДатаНачалаДополнительного;
	КоллекцияОбъектов.ВидДополнительногоОтпуска	= ВернутьТЗВидаРасчета(ВидРасчета.ОтпускДополнительный, Источник, КоллекцияОбъектов.ДатаНачалаДоп, КоллекцияОбъектов.Физлицо, , КоллекцияОбъектов.Сотрудник.Получить("ВидДоговора"));
КонецЕсли;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование>--&gt; ДатаНачала</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование>--&gt; ДатаОкончания</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование>--&gt; ПричинаОтсутствия</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПричинаОтсутствия" Вид="Реквизит" Тип="ПеречислениеСсылка.ПричиныОтсутствияНаРаботеВОрганизации"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование>--&gt; ДатаНачалаДоп</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаНачалаДоп" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование>--&gt; ВидДополнительногоОтпуска</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидДополнительногоОтпуска" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
								<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование>--&gt; КоличествоДней</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КоличествоДней" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>19</Код>
								<Наименование>--&gt; КоличествоДнейДоп</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="КоличествоДнейДоп" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ОтпускПоУходуЗаРебенком</Код>
					<Наименование>Документ: Отпуск по уходу за ребенком</Наименование>
					<Порядок>650</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",	"Наша организация");</ПередВыгрузкой>
					<ПриВыгрузке>ВходящиеДанные.Установить("ДанныеПрошлойВерсии",			1);
ВходящиеДанные.Установить("Физлицо",						Источник.Сотрудник.ОсновнойЭлемент);
ВходящиеДанные.Установить("ВыплачиватьПособиеДоТрехЛет",	?(ПустоеЗначение(Источник.ОкончаниеПособияДоТрехЛет) = 0, 1, 0));</ПриВыгрузке>
					<Источник>ДокументСсылка.ОтпускПоУходуЗаРебенком</Источник>
					<Приемник>ДокументСсылка.ОтпускПоУходуЗаРебенком</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>18</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>--&gt; Сотрудник</Наименование>
							<Порядок>250</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование>--&gt; Физлицо</Наименование>
							<Порядок>300</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование>Начало --&gt; ДатаНачала</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Начало" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование>Окончание --&gt; ДатаОкончания</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Окончание" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>ВыплачиватьПособиеДоПолутораЛет --&gt; ВыплачиватьПособиеДоПолутораЛет</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="ВыплачиватьПособиеДоПолутораЛет" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="ВыплачиватьПособиеДоПолутораЛет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование>ОкончаниеПособийЗаСчетФСС --&gt; ДатаОкончанияПособияДоПолутораЛет</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="ОкончаниеПособийЗаСчетФСС" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончанияПособияДоПолутораЛет" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование>СреднедневнойЗаработок --&gt; СреднедневнойЗаработок</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="СреднедневнойЗаработок" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СреднедневнойЗаработок" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование>КоличествоДетей --&gt; КоличествоДетей</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="КоличествоДетей" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоличествоДетей" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>ЕстьПервыйРебенок --&gt; КоличествоПервыхДетей</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="ЕстьПервыйРебенок" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="КоличествоПервыхДетей" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование>--&gt; ВыплачиватьПособиеДоТрехЛет</Наименование>
							<Порядок>750</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВыплачиватьПособиеДоТрехЛет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование>ОкончаниеПособияДоТрехЛет --&gt; ДатаОкончанияПособияДоТрехЛет</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="ОкончаниеПособияДоТрехЛет" Вид="Реквизит" Тип="Дата"/>
							<Приемник Имя="ДатаОкончанияПособияДоТрехЛет" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование>РасчетПоПравилам2010Года --&gt; РасчетПоПравилам2010Года</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="РасчетПоПравилам2010Года" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="РасчетПоПравилам2010Года" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование>СреднедневнойЗаработокПереходногоПериода2010 --&gt; СреднедневнойЗаработокПереходногоПериода2010</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="СреднедневнойЗаработокПереходногоПериода2010" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="СреднедневнойЗаработокПереходногоПериода2010" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование>УчитыватьЗаработокПредыдущихСтрахователей --&gt; УчитыватьЗаработокПредыдущихСтрахователей</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="УчитыватьЗаработокПредыдущихСтрахователей" Вид="Реквизит" Тип="Число"/>
							<Приемник Имя="УчитыватьЗаработокПредыдущихСтрахователей" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>ПриемНаРаботуВОрганизацию</Код>
					<Наименование>Документ: Прием на работу</Наименование>
					<Порядок>700</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",			"Наша организация");
ВходящиеДанные.Установить("ДанныеПрошлойВерсии",	1);</ПередВыгрузкой>
					<ПослеЗагрузки>МассивТЧ = Новый Массив();
МассивТЧ.Добавить(Объект.РаботникиОрганизации);

Объект.КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");

Выполнить(Алгоритмы.ЗаполнитьФизЛицоВТабличнойЧасти);</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПриказОПриемеНаРаботу</Источник>
					<Приемник>ДокументСсылка.ПриемНаРаботуВОрганизацию</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>6</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>29</Код>
							<Наименование> --&gt; РаботникиОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ПодразделениеОрганизации");
КоллекцияОбъектов.НоваяКолонка("Должность");
КоллекцияОбъектов.НоваяКолонка("ГрафикРаботы");
КоллекцияОбъектов.НоваяКолонка("ДатаПриема");
КоллекцияОбъектов.НоваяКолонка("ДатаУвольнения");
КоллекцияОбъектов.НоваяКолонка("НапомнитьПоЗавершении");
КоллекцияОбъектов.НоваяКолонка("ЗанимаемыхСтавок");
КоллекцияОбъектов.НоваяКолонка("УсловияПриемаНаРаботу");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Сотрудник					= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ФизЛицо					= Источник.Сотрудник.ОсновнойЭлемент;
КоллекцияОбъектов.ПодразделениеОрганизации	= Источник.Подразделение;
КоллекцияОбъектов.Должность					= Источник.Должность;
КоллекцияОбъектов.ГрафикРаботы				= ?(ПустоеЗначение(Источник.ГрафикРаботы) = 0, Источник.ГрафикРаботы, Константа.ОсновнойГрафик);
КоллекцияОбъектов.ДатаПриема				= Источник.ДатаПриема;
КоллекцияОбъектов.ДатаУвольнения			= Источник.Окончание;
КоллекцияОбъектов.НапомнитьПоЗавершении		= 1;
КоллекцияОбъектов.ЗанимаемыхСтавок			= Источник.Ставка;
КоллекцияОбъектов.УсловияПриемаНаРаботу		= Источник.ВидЗанятости.Наименование;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>38</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>44</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>37</Код>
								<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
								<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>33</Код>
								<Наименование> --&gt; Должность</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Должность" Вид="Реквизит" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
								<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>30</Код>
								<Наименование> --&gt; ГрафикРаботы</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
								<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>31</Код>
								<Наименование> --&gt; ДатаПриема</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаПриема" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>32</Код>
								<Наименование> --&gt; ДатаУвольнения</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>36</Код>
								<Наименование> --&gt; НапомнитьПоЗавершении</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="НапомнитьПоЗавершении" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>34</Код>
								<Наименование> --&gt; ЗанимаемыхСтавок</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ЗанимаемыхСтавок" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>52</Код>
								<Наименование> --&gt; УсловияПриемаНаРаботу</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="УсловияПриемаНаРаботу" Вид="Реквизит" Тип="Строка"/>
							</Свойство>
						</Группа>
						<Группа>
							<Код>7</Код>
							<Наименование> --&gt; ОсновныеНачисления</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновныеНачисления" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ВидРасчета");
КоллекцияОбъектов.НоваяКолонка("Показатель1");
КоллекцияОбъектов.НоваяКолонка("Валюта1");
КоллекцияОбъектов.НоваяКолонка("ТарифныйРазряд1");
КоллекцияОбъектов.НоваяКолонка("Показатель2");
КоллекцияОбъектов.НоваяКолонка("Валюта2");
КоллекцияОбъектов.НоваяКолонка("Показатель3");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Сотрудник		= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ФизЛицо		= Источник.Сотрудник.ОсновнойЭлемент;
КоллекцияОбъектов.ВидРасчета	= ВернутьТЗВидаРасчета(ВидРасчета.ОплатаПоОкладу, Источник, Источник.ДатаПриема, Источник.Сотрудник);

ЗаполнитьПоказателиРасчета(
	КоллекцияОбъектов, 
	КоллекцияОбъектов.ВидРасчета, 
	Источник, 
	, 
	ВидРасчета.ОплатаПоОкладу, 
	Источник.Сотрудник, 
	Источник.ДатаПриема, 
	1);</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>21</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>28</Код>
								<Наименование> --&gt; ФизЛицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>14</Код>
								<Наименование> --&gt; ВидРасчета</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ВидРасчета" Вид="Реквизит" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
								<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>48</Код>
								<Наименование> --&gt; Показатель1</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель1" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>46</Код>
								<Наименование> --&gt; Валюта1</Наименование>
								<Порядок>250</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Валюта1" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>51</Код>
								<Наименование> --&gt; ТарифныйРазряд1</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ТарифныйРазряд1" Вид="Реквизит" Тип="СправочникСсылка.ТарифныеРазряды"/>
								<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ТарифныйРазряд1);
Если Отказ = 1 Тогда
	Возврат Отказ;
КонецЕсли;

ТипВидТарифа = глТипВидЗначения(ОбъектКоллекции.ТарифныйРазряд1);

Если ТипВидТарифа = "Справочник.ТарифныеРазряды" Тогда
	ИмяПКО = "ТарифныеРазряды";
	
ИначеЕсли ТипВидТарифа = "Справочник.ЕТС" Тогда
	ИмяПКО = "ЕТС";
	
Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
							</Свойство>
							<Свойство>
								<Код>49</Код>
								<Наименование> --&gt; Показатель2</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель2" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>47</Код>
								<Наименование> --&gt; Валюта2</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Валюта2" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
								<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>50</Код>
								<Наименование> --&gt; Показатель3</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Показатель3" Вид="Реквизит" Тип="Число"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
				<Правило>
					<Код>УвольнениеИзОрганизаций</Код>
					<Наименование>Документ: Приказ об увольнении</Наименование>
					<Порядок>750</Порядок>
					<ПередВыгрузкой>ВходящиеДанные.Установить("Организация",			"Наша организация");
ВходящиеДанные.Установить("ДанныеПрошлойВерсии",	1);</ПередВыгрузкой>
					<ПослеЗагрузки>МассивТЧ = Новый Массив();
МассивТЧ.Добавить(Объект.РаботникиОрганизации);

Объект.КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");</ПослеЗагрузки>
					<Источник>ДокументСсылка.ПриказОбУвольнении</Источник>
					<Приемник>ДокументСсылка.УвольнениеИзОрганизаций</Приемник>
					<Свойства>
						<Свойство Поиск="true">
							<Код>2</Код>
							<Наименование>ДатаДок --&gt; Дата</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="ДатаДок" Вид="Свойство" Тип="Дата"/>
							<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>3</Код>
							<Наименование>НомерДок --&gt; Номер</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="НомерДок" Вид="Свойство" Тип="Строка"/>
							<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
						</Свойство>
						<Свойство Поиск="true">
							<Код>7</Код>
							<Наименование>--&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование>--&gt; ДанныеПрошлойВерсии</Наименование>
							<Порядок>200</Порядок>
							<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДанныеПрошлойВерсии" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Группа>
							<Код>8</Код>
							<Наименование> --&gt; РаботникиОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
							<ПередОбработкойВыгрузки>КоллекцияОбъектов = СоздатьОбъект("ТаблицаЗначений");
КоллекцияОбъектов.НоваяКолонка("Сотрудник");
КоллекцияОбъектов.НоваяКолонка("ФизЛицо");
КоллекцияОбъектов.НоваяКолонка("ДатаУвольнения");
КоллекцияОбъектов.НоваяКолонка("СтатьяТКРФ");
КоллекцияОбъектов.НоваяКолонка("ПризнакКомпенсацииОтпуска");
КоллекцияОбъектов.НоваяКолонка("ПорядокРасчетаОтпуска");
КоллекцияОбъектов.НоваяКолонка("ДнейЧасовКомпенсацииУдержанияОтпуска");
КоллекцияОбъектов.НоваяКолонка("РабочийГодС");
КоллекцияОбъектов.НоваяКолонка("РабочийГодПо");

КоллекцияОбъектов.НоваяСтрока();
КоллекцияОбъектов.Сотрудник								= ВходящиеДанные.Получить("Сотрудник");
КоллекцияОбъектов.ФизЛицо								= Источник.Сотрудник.ОсновнойЭлемент;
КоллекцияОбъектов.ДатаУвольнения						= Источник.ДатаУвольнения;
КоллекцияОбъектов.СтатьяТКРФ							= Источник.ОснованиеУвольнения;
КоллекцияОбъектов.ПризнакКомпенсацииОтпуска				= ?(Источник.ДнейКомпенсацииОтпуска &lt; 0, 0, 1);
КоллекцияОбъектов.ПорядокРасчетаОтпуска					= ?(Источник.ТипРасчетаСреднейДляКомпенсации = 0, "ПоШестидневке", "ПоКалендарнымДням");
КоллекцияОбъектов.ДнейЧасовКомпенсацииУдержанияОтпуска	= Источник.ДнейКомпенсацииОтпуска * ?(Источник.ДнейКомпенсацииОтпуска &lt; 0, -1, 1);
КоллекцияОбъектов.РабочийГодС							= Источник.НачалоПериода;
КоллекцияОбъектов.РабочийГодПо							= Источник.ОкончаниеПериода;</ПередОбработкойВыгрузки>
							<Свойство>
								<Код>10</Код>
								<Наименование> --&gt; Сотрудник</Наименование>
								<Порядок>50</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
								<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>11</Код>
								<Наименование> --&gt; Физлицо</Наименование>
								<Порядок>100</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="Физлицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
								<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>9</Код>
								<Наименование> --&gt; ДатаУвольнения</Наименование>
								<Порядок>150</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДатаУвольнения" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>12</Код>
								<Наименование> --&gt; СтатьяТКРФ</Наименование>
								<Порядок>200</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="СтатьяТКРФ" Вид="Реквизит" Тип="СправочникСсылка.ОснованияУвольненияИзОрганизации"/>
								<КодПравилаКонвертации>ОснованияУвольненияИзОрганизации                  </КодПравилаКонвертации>
							</Свойство>
							<Свойство>
								<Код>16</Код>
								<Наименование> --&gt; ПризнакКомпенсацииОтпуска</Наименование>
								<Порядок>300</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПризнакКомпенсацииОтпуска" Вид="Реквизит" Тип="Булево"/>
							</Свойство>
							<Свойство>
								<Код>15</Код>
								<Наименование> --&gt; ПорядокРасчетаОтпуска</Наименование>
								<Порядок>350</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ПорядокРасчетаОтпуска" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокРасчетаОтпуска"/>
							</Свойство>
							<Свойство>
								<Код>13</Код>
								<Наименование> --&gt; ДнейЧасовКомпенсацииУдержанияОтпуска</Наименование>
								<Порядок>400</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="ДнейЧасовКомпенсацииУдержанияОтпуска" Вид="Реквизит" Тип="Число"/>
							</Свойство>
							<Свойство>
								<Код>18</Код>
								<Наименование> --&gt; РабочийГодС</Наименование>
								<Порядок>450</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="РабочийГодС" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
							<Свойство>
								<Код>17</Код>
								<Наименование> --&gt; РабочийГодПо</Наименование>
								<Порядок>500</Порядок>
								<Источник Имя="" Вид=""/>
								<Приемник Имя="РабочийГодПо" Вид="Реквизит" Тип="Дата"/>
							</Свойство>
						</Группа>
						<Свойство>
							<Код>5</Код>
							<Наименование>Проведен --&gt; Проведен</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="Проведен" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="Проведен" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Число"/>
							<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>1</Код>
							<Наименование>Комментарий --&gt; Комментарий</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
							<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Свойства>
					<Значения/>
				</Правило>
			</Группа>
			<Правило>
				<Код>Взаиморасчеты</Код>
				<Наименование>:</Наименование>
				<Порядок>100</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ВзаиморасчетыСРаботникамиОрганизаций";
Строка.Представление	= "Взаиморасчеты с работниками";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ЗарплатаЗаМесяцОрганизаций";
Строка.Представление	= "Зарплата за месяц";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>15</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ВзаиморасчетыСРаботникамиОрганизаций</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВзаиморасчетыСРаботникамиОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	Если (ПустоеЗначение(ОбъектКоллекции.СтатьяФинансирования) = 1)
		И (ПустоеЗначение(ОбъектКоллекции.СФ_Наименование) = 0) Тогда
		ОбъектКоллекции.СтатьяФинансирования = СоздатьТЗСтатьяФинансирования();
		ОбъектКоллекции.СтатьяФинансирования.НоваяСтрока();
		ОбъектКоллекции.СтатьяФинансирования.Наименование		= ОбъектКоллекции.СФ_Наименование;
		ОбъектКоллекции.СтатьяФинансирования.КВД				= ОбъектКоллекции.СФ_КВД;
		ОбъектКоллекции.СтатьяФинансирования.ПодпадаетПодЕНВД	= ОбъектКоллекции.СФ_ПодпадаетПодЕНВД;
		ОбъектКоллекции.СтатьяФинансирования.Баланс				= ОбъектКоллекции.СФ_Баланс;
		ОбъектКоллекции.СтатьяФинансирования.КБК				= ОбъектКоллекции.СФ_КБК;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Физлицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВзаиморасчетов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Ведомость</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ведомость" Вид="Реквизит" Тип="ДокументСсылка.ЗарплатаКВыплатеОрганизаций"/>
							<КодПравилаКонвертации>ЗарплатаКВыплатеОрганизаций                       </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Взаиморасчеты",			Источник.Получить("ВзаиморасчетыСРаботникамиОрганизаций"));
ИсходящиеДанные.Установить("ВыплаченностьЗарплаты",	"Выплачено");</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ХарактерВыплаты</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ХарактерВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.ХарактерВыплатыЗарплаты"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; СпособВыплаты</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособВыплаты" Вид="Реквизит" Тип="ПеречислениеСсылка.СпособыВыплатыЗарплаты"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЕСН_Начисления</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровРасчета.Очистить();

Если Год(Объект.ПериодРегистрации) &lt; 2010 Тогда
	Строка = Объект.ТаблицаРегистровРасчета.Добавить();
	Строка.Имя				= "ЕСНОсновныеНачисления";
	Строка.Представление	= "ЕСН: Основные начисления";

	Строка = Объект.ТаблицаРегистровРасчета.Добавить();
	Строка.Имя				= "ЕСНДополнительныеНачисления";
	Строка.Представление	= "ЕСН: Дополнительные начисления";
	
Иначе
	Строка = Объект.ТаблицаРегистровРасчета.Добавить();
	Строка.Имя				= "ЕСНОсновныеНачисления";
	Строка.Представление	= "Страховые взносы: Основные начисления";

	Строка = Объект.ТаблицаРегистровРасчета.Добавить();
	Строка.Имя				= "ЕСНДополнительныеНачисления";
	Строка.Представление	= "Страховые взносы: Дополнительные начисления";
	
КонецЕсли;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>30</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>29</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>31</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>28</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>67</Код>
						<Наименование> --&gt; ЕСНОсновныеНачисления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСНОсновныеНачисления" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("ЕСНОсновныеНачисления")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ВидПВР = ОпределитьВидПВР(ОбъектКоллекции.ВидРасчета);

Если ВидПВР &lt;&gt; "ОсновныеНачисления" Тогда
	Возврат 1;
КонецЕсли;
	
АвторскийДоговор	= ЯвляетсяАвторскимДоговором(ОбъектКоллекции.ВидРасчета);
ДоговорПодряда		= ?(ОбъектКоллекции.ВидРасчета = ВидРасчета.ОплатаПоДоговору, 1, 0);
ТекущийСотрудник	= ЗаполнитьТЗСотрудникаОрганизации(ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.ПериодРегистрации), АвторскийДоговор, ДоговорПодряда);

Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Физлицо, КонМесяца(ОбъектКоллекции.ПериодРегистрации));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;
ОбъектКоллекции.Сотрудник					= ТекущийСотрудник;
ОбъектКоллекции.ВидРасчета					= ВернутьТЗВидаРасчета(ОбъектКоллекции.ВидРасчета, ОбъектКоллекции.ДокументОснование, КонМесяца(ОбъектКоллекции.ПериодРегистрации), ОбъектКоллекции.Физлицо, ОбъектКоллекции.НомерСтрокиДокумента, ТекущийСотрудник.Получить("ВидДоговора"));

ОбъектКоллекции.ДокументОснование	= СоздатьОбъект("СписокЗначений");
ОбъектКоллекции.ДокументОснование.Установить("ПериодРегистрации",	ОбъектКоллекции.ПериодРегистрации);
ОбъектКоллекции.ДокументОснование.Установить("Номер",				"НЗР-" + Прав(ДатаГод(ОбъектКоллекции.ПериодРегистрации), 2) + Прав("0" + ДатаМесяц(ОбъектКоллекции.ПериодРегистрации), 2));
ОбъектКоллекции.ДокументОснование.Установить("Организация",			"Наша организация");</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ЕСНОсновныеНачисления",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; ПериодДействияНачало</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияНачало" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; ПериодДействияКонец</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияКонец" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; КодДоходаЕСН</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДоходаЕСН" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ДатаГод(ОбъектКоллекции.ПериодРегистрации) &lt; 2010 Тогда
	ИмяПКО = "ДоходыЕСН";
Иначе
	ИмяПКО = "ДоходыПоСтраховымВзносам";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование> --&gt; ГрафикРаботы</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
							<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ГрафикРаботы);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; ВидУчетаВремени</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыУчетаВремени"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ВидУчетаВремени);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДокументОснование);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование> --&gt; Сторно</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>51</Код>
						<Наименование> --&gt; ЕСНДополнительныеНачисления</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСНДополнительныеНачисления" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("ЕСНДополнительныеНачисления")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ВидПВР = ОпределитьВидПВР(ОбъектКоллекции.ВидРасчета);

Если ВидПВР &lt;&gt; "ДополнительныеНачисления" Тогда
	Возврат 1;
КонецЕсли;
	
АвторскийДоговор	= ЯвляетсяАвторскимДоговором(ОбъектКоллекции.ВидРасчета);
ДоговорПодряда		= ?(ОбъектКоллекции.ВидРасчета = ВидРасчета.ОплатаПоДоговору, 1, 0);
ТекущийСотрудник	= ЗаполнитьТЗСотрудникаОрганизации(ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.ПериодРегистрации), АвторскийДоговор, ДоговорПодряда);

Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Физлицо, КонМесяца(ОбъектКоллекции.ПериодРегистрации));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;
ОбъектКоллекции.Сотрудник					= ТекущийСотрудник;
ОбъектКоллекции.ВидРасчета					= ВернутьТЗВидаРасчета(ОбъектКоллекции.ВидРасчета, ОбъектКоллекции.ДокументОснование, КонМесяца(ОбъектКоллекции.ПериодРегистрации), ОбъектКоллекции.Физлицо, ОбъектКоллекции.НомерСтрокиДокумента, ТекущийСотрудник.Получить("ВидДоговора"));

ОбъектКоллекции.ДокументОснование	= СоздатьОбъект("СписокЗначений");
ОбъектКоллекции.ДокументОснование.Установить("ПериодРегистрации",	ОбъектКоллекции.ПериодРегистрации);
ОбъектКоллекции.ДокументОснование.Установить("Номер",				"НЗР-" + Прав(ДатаГод(ОбъектКоллекции.ПериодРегистрации), 2) + Прав("0" + ДатаМесяц(ОбъектКоллекции.ПериодРегистрации), 2));
ОбъектКоллекции.ДокументОснование.Установить("Организация",			"Наша организация");</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ЕСНДополнительныеНачисления",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; Скидка</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Скидка" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Скидка);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; КодДоходаЕСН</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДоходаЕСН" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ДатаГод(ОбъектКоллекции.ПериодРегистрации) &lt; 2010 Тогда
	ИмяПКО = "ДоходыЕСН";
Иначе
	ИмяПКО = "ДоходыПоСтраховымВзносам";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ДополнительныеНачисленияОрганизаций               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДокументОснование);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; Сторно</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЕСН_ПФР_ЕНВД</Код>
				<Наименование>:</Наименование>
				<Порядок>200</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ЕСНИсчисленный";
Строка.Представление	= "ЕСН: Исчисленный";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ЕСНСведенияОДоходах";
Строка.Представление	= "ЕСН: Сведения о доходах";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>29</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>28</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>30</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>27</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ЕСНИсчисленный</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСНИсчисленный" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("ЕСНИсчисленный")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если НачМесяца(ОбъектКоллекции.Период) &gt; НачМесяца(ДатаОкончания) Тогда
	Возврат 1;
КонецЕсли;

Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Физлицо, КонМесяца(ОбъектКоллекции.Период));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ЕСНИсчисленный",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ФедеральныйБюджет</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФедеральныйБюджет" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФедеральныйБюджет);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФБ</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФБ" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПримененнаяЛьготаФБ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФСС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФСС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФСС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПримененнаяЛьготаФСС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ТФОМС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФФОМС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ПримененнаяЛьготаФОМС</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененнаяЛьготаФОМС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПримененнаяЛьготаФОМС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРНакопительная);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРНакопительнаяЕНВД);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРСтраховая);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРСтраховаяЕНВД);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>17</Код>
						<Наименование> --&gt; ЕСНСведенияОДоходах</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЕСНСведенияОДоходах" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("ЕСНСведенияОДоходах")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если НачМесяца(ОбъектКоллекции.Период) &gt; НачМесяца(ДатаОкончания) Тогда
	Возврат 1;
КонецЕсли;

Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Физлицо, КонМесяца(ОбъектКоллекции.Период));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ЕСНСведенияОДоходах",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Скидка</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Скидка" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Скидка);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; КодДоходаЕСН</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДоходаЕСН" Вид="Реквизит" Тип="СправочникСсылка.ДоходыЕСН"/>
							<КодПравилаКонвертации>ДоходыЕСН                                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КадровыеДанные</Код>
				<Наименование>:</Наименование>
				<Порядок>250</Порядок>
				<ПриЗагрузке>Объект.ОбменДанными.Загрузка = Ложь; // необходимо записать текущее подразделение и организацию сотрудника</ПриЗагрузке>
				<ПослеЗагрузки>Объект.ТаблицаРегистровСведений.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "РаботникиОрганизаций";
Строка.Представление	= "Работники";

Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ЗанятыеШтатныеЕдиницыОрганизаций";
Строка.Представление	= "Занятые штатные единицы";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>17</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; РаботникиОрганизаций</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<ПослеОбработкиВыгрузки>Источник.Установить("РаботникиОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Ресурс" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Ресурс" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизацийВсеДанные                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Должность</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Ресурс" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
							<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ГрафикРаботы</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Ресурс" Тип="СправочникСсылка.ГрафикиРаботы"/>
							<КодПравилаКонвертации>ГрафикиРаботыВсеДанные                            </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ЗанимаемыхСтавок</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЗанимаемыхСтавок" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ПричинаИзмененияСостояния</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПричинаИзмененияСостояния" Вид="Ресурс" Тип="ПеречислениеСсылка.ПричиныИзмененияСостояния"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ПервичныйДокумент</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервичныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляПервичногоДокумента(ОбъектКоллекции.ПервичныйДокумент, Отказ);

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Сотрудник", ОбъектКоллекции.Сотрудник);
ИсходящиеДанные.Установить("ТЧ",		Источник.Получить("РаботникиОрганизаций"));</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование> --&gt; ЗанятыеШтатныеЕдиницыОрганизаций</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗанятыеШтатныеЕдиницыОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<ПослеОбработкиВыгрузки>Источник.Установить("ЗанятыеШтатныеЕдиницыОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Должность</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Должность" Вид="Измерение" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
							<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; КоличествоСтавок</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоСтавок" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Отклонения</Код>
				<Наименование>:</Наименование>
				<Порядок>300</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровСведений.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "СостояниеРаботниковОрганизаций";
Строка.Представление	= "Состояние работников";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>37</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>22</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>21</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>45</Код>
						<Наименование> --&gt; СостояниеРаботниковОрганизаций</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СостояниеРаботниковОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; Состояние</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Состояние" Вид="Ресурс" Тип="ПеречислениеСсылка.СостоянияРаботникаОрганизации"/>
							<КодПравилаКонвертации>СостоянияРаботникаОрганизацииОтТабеля             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; ПериодЗавершения</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; СостояниеЗавершения</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СостояниеЗавершения" Вид="Ресурс" Тип="ПеречислениеСсылка.СостоянияРаботникаОрганизации"/>
							<КодПравилаКонвертации>СостоянияРаботникаОрганизацииОтТабеля             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; ПервичныйДокумент</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервичныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляПервичногоДокумента(ОбъектКоллекции.ПервичныйДокумент, Отказ, ОбъектКоллекции.Сотрудник);

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Сотрудник", ОбъектКоллекции.Сотрудник);</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФактическиеОтпуска</Код>
				<Наименование>:</Наименование>
				<Порядок>350</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ФактическиеОтпускаОрганизаций";
Строка.Представление	= "Фактические отпуска";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; ФактическиеОтпускаОрганизаций</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФактическиеОтпускаОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередВыгрузкой>Если ОбъектКоллекции.Количество = 0 Тогда
	Возврат 1;
КонецЕсли;

ОбъектКоллекции.Сотрудник = ЗаполнитьТЗСотрудникаОрганизации(ОбъектКоллекции.Сотрудник, ОбъектКоллекции.ДатаОкончания);

ОбъектКоллекции.Регистратор	= СоздатьОбъект("СписокЗначений");
ОбъектКоллекции.Регистратор.Установить("ПериодРегистрации",		Источник.Получить("ПериодРегистрации"));
ОбъектКоллекции.Регистратор.Установить("Номер",					Источник.Получить("Номер"));
ОбъектКоллекции.Регистратор.Установить("Организация",			"Наша организация");
ОбъектКоллекции.Регистратор.Установить("СоздаватьЕслиНеНайден",	1);</ПередВыгрузкой>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ВидЕжегодногоОтпуска</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЕжегодногоОтпуска" Вид="Измерение" Тип="СправочникСсылка.ВидыЕжегодныхОтпусков"/>
							<КодПравилаКонвертации>ВидыЕжегодныхОтпусков                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ДатаОкончания</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаОкончания" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Компенсация</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Компенсация" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ДатаРегистрации</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаРегистрации" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; Регистратор</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Регистратор" Вид="Свойство"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КоэффициентИндексацииЗаработка</Код>
				<Наименование>:</Наименование>
				<Порядок>400</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровСведений.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "КоэффициентИндексацииЗаработка";
Строка.Представление	= "Коэффициент индексации заработка";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>9</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; КоэффициентИндексацииЗаработка</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоэффициентИндексацииЗаработка" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Коэффициент</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Коэффициент" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НачисленияИУдержания</Код>
				<Наименование>:</Наименование>
				<Порядок>450</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ВзаиморасчетыСРаботникамиОрганизаций";
Строка.Представление	= "Взаиморасчеты с работниками";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ЗарплатаЗаМесяцОрганизаций";
Строка.Представление	= "Зарплата за месяц";


Объект.ТаблицаРегистровРасчета.Очистить();

Строка = Объект.ТаблицаРегистровРасчета.Добавить();
Строка.Имя				= "ОсновныеНачисленияРаботниковОрганизаций";
Строка.Представление	= "Основные начисления работников";

Строка = Объект.ТаблицаРегистровРасчета.Добавить();
Строка.Имя				= "ДополнительныеНачисленияРаботниковОрганизаций";
Строка.Представление	= "Дополнительные начисления работников";

Строка = Объект.ТаблицаРегистровРасчета.Добавить();
Строка.Имя				= "УдержанияРаботниковОрганизаций";
Строка.Представление	= "Удержания работников";

Строка = Объект.ТаблицаРегистровРасчета.Добавить();
Строка.Имя				= "БУОсновныеНачисления";
Строка.Представление	= "БУ Основные начисления работников";

Строка = Объект.ТаблицаРегистровРасчета.Добавить();
Строка.Имя				= "БУДополнительныеНачисления";
Строка.Представление	= "БУ Дополнительные начисления работников";

Если Объект.Движения.Найти("БУУдержания") &lt;&gt; Неопределено Тогда
	Строка = Объект.ТаблицаРегистровРасчета.Добавить();
	Строка.Имя				= "БУУдержания";
	Строка.Представление	= "БУ Удержания работников";
КонецЕсли;

Выполнить(Алгоритмы.СформироватьПроводкиПоНалоговомуУчету);

Выполнить(Алгоритмы.РассчитатьДниЧасыПоПятидневке);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>125</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>8</Код>
						<Наименование> --&gt; ОсновныеНачисленияРаботниковОрганизаций</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновныеНачисленияРаботниковОрганизаций" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПослеОбработкиВыгрузки>Источник.Установить("ОсновныеНачисленияРаботниковОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Если СотрудникБезДоговора(ОбъектКоллекции.Сотрудник) = 1 Тогда
	ИмяПКО = "СотрудникиОрганизацийВсеДанные";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Если СотрудникБезДоговора(ОбъектКоллекции.Сотрудник) = 1 Тогда
	ИмяПКО = "ФизическиеЛицаВсеДанные";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Показатель1</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель1" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Показатель2</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель2" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель2);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Показатель3</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель3" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель3);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Сторно</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Сторно);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; ДатаНачалаСобытия</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаСобытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; Авторасчет</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Авторасчет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ПериодДействияНачало</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияНачало" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ПериодДействияКонец</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияКонец" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ОтработаноДней</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноДней" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ОтработаноДней);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; ОтработаноЧасов</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтработаноЧасов" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ОтработаноЧасов);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; НормаДней</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НормаДней" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.НормаДней);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; НормаЧасов</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НормаЧасов" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.НормаЧасов);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ОплаченоДнейЧасов</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоДнейЧасов" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ОплаченоДнейЧасов);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ГрафикРаботы</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит"/>
							<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ВидУчетаВремени</Наименование>
							<Порядок>1150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыУчетаВремени"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; БазовыйПериодНачало</Наименование>
							<Порядок>1200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодНачало" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.БазовыйПериодНачало);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; БазовыйПериодКонец</Наименование>
							<Порядок>1250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодКонец" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.БазовыйПериодКонец);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>158</Код>
							<Наименование> --&gt; ПериодРасчетаСреднегоЗаработкаНачало</Наименование>
							<Порядок>1300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРасчетаСреднегоЗаработкаНачало" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПериодРасчетаСреднегоЗаработкаНачало);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>159</Код>
							<Наименование> --&gt; ПериодРасчетаСреднегоЗаработкаОкончание</Наименование>
							<Порядок>1350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРасчетаСреднегоЗаработкаОкончание" Вид="Реквизит" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПериодРасчетаСреднегоЗаработкаОкончание);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; ДополнительныеДанные</Наименование>
							<Порядок>1400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДополнительныеДанные" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДополнительныеДанные);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>128</Код>
							<Наименование>--&gt; СторнируемыйДокумент</Наименование>
							<Порядок>1450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СторнируемыйДокумент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СторнируемыйДокумент);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>39</Код>
						<Наименование> --&gt; ДополнительныеНачисленияРаботниковОрганизаций</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДополнительныеНачисленияРаботниковОрганизаций" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПослеОбработкиВыгрузки>Источник.Установить("ДополнительныеНачисленияРаботниковОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Если СотрудникБезДоговора(ОбъектКоллекции.Сотрудник) = 1 Тогда
	ИмяПКО = "СотрудникиОрганизацийВсеДанные";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Если СотрудникБезДоговора(ОбъектКоллекции.Сотрудник) = 1 Тогда
	ИмяПКО = "ФизическиеЛицаВсеДанные";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ДополнительныеНачисленияОрганизаций               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; Показатель1</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель1" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Показатель2</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель2" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель2);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>160</Код>
							<Наименование> --&gt; Показатель3</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель3" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель3);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; ДатаНачалаСобытия</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаСобытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; Сторно</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Сторно);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; Авторасчет</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Авторасчет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; БазовыйПериодНачало</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодНачало" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.БазовыйПериодНачало);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; БазовыйПериодКонец</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодКонец" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.БазовыйПериодКонец);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; ГрафикРаботы</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
							<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ГрафикРаботы);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; ВидУчетаВремени</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыУчетаВремени"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ОплаченоДнейЧасов</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченоДнейЧасов" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ОплаченоДнейЧасов);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ДокументОснование</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом"/>
							<КодПравилаКонвертации>ДоговорНаВыполнениеРаботСФизЛицом                 </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДокументОснование);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>127</Код>
							<Наименование>--&gt; СторнируемыйДокумент</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СторнируемыйДокумент" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СторнируемыйДокумент);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ЧислоМесяцев</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЧислоМесяцев" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ЧислоМесяцев);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>61</Код>
						<Наименование> --&gt; УдержанияРаботниковОрганизаций</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УдержанияРаботниковОрганизаций" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПослеОбработкиВыгрузки>Источник.Установить("УдержанияРаботниковОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>73</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
							<ПередВыгрузкой>Если СотрудникБезДоговора(ОбъектКоллекции.Сотрудник) = 1 Тогда
	ИмяПКО = "СотрудникиОрганизацийВсеДанные";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
							<ПередВыгрузкой>Если СотрудникБезДоговора(ОбъектКоллекции.Сотрудник) = 1 Тогда
	ИмяПКО = "ФизическиеЛицаВсеДанные";
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.УдержанияОрганизаций"/>
							<КодПравилаКонвертации>УдержанияОрганизаций                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; Показатель1</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель1" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; Показатель2</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель2" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель2);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>126</Код>
							<Наименование> --&gt; Показатель3</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель3" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель3);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; Сторно</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Сторно);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; ДатаНачалаСобытия</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаСобытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; Авторасчет</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Авторасчет" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; БазовыйПериодНачало</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодНачало" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.БазовыйПериодНачало);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; БазовыйПериодКонец</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="БазовыйПериодКонец" Вид="Свойство" Тип="Дата"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.БазовыйПериодКонец);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; ГрафикРаботы</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
							<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ГрафикРаботы);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; ВидУчетаВремени</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыУчетаВремени"/>
						</Свойство>
						<Свойство>
							<Код>66</Код>
							<Наименование> --&gt; ДокументОснование</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит" Тип="ДокументСсылка.ИсполнительныйЛист"/>
							<КодПравилаКонвертации>ИсполнительныйЛист                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДокументОснование);

Если Отказ = 0 Тогда
	Если ОбъектКоллекции.ДокументОснование.Вид() &lt;&gt; "ИсполнительныйЛист" Тогда
		Отказ = 1;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>161</Код>
							<Наименование> --&gt; Получатель</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Получатель);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>94</Код>
						<Наименование> --&gt; БУОсновныеНачисления</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БУОсновныеНачисления" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПослеОбработкиВыгрузки>Источник.Установить("БУОсновныеНачисления",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>99</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>110</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>107</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>109</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>108</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>102</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>103</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>98</Код>
							<Наименование> --&gt; Сторно</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Сторно);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>100</Код>
							<Наименование> --&gt; ПериодДействияНачало</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияНачало" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>101</Код>
							<Наименование> --&gt; ПериодДействияКонец</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодДействияКонец" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>96</Код>
							<Наименование> --&gt; ГрафикРаботы</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ГрафикРаботы" Вид="Реквизит" Тип="СправочникСсылка.ГрафикиРаботы"/>
							<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>97</Код>
							<Наименование> --&gt; ВидУчетаВремени</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидУчетаВремени" Вид="Реквизит" Тип="ПеречислениеСсылка.ВидыУчетаВремени"/>
						</Свойство>
						<Свойство>
							<Код>129</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДокументОснование);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>146</Код>
							<Наименование>--&gt; СчетДт</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>ПС                                                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>140</Код>
							<Наименование> --&gt; СубконтоДт1</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоДт1, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>141</Код>
							<Наименование> --&gt; СубконтоДт2</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоДт2, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>142</Код>
							<Наименование> --&gt; СубконтоДт3</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоДт3, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>147</Код>
							<Наименование>--&gt; СчетКт</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>ПС                                                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>143</Код>
							<Наименование> --&gt; СубконтоКт1</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоКт1, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>144</Код>
							<Наименование> --&gt; СубконтоКт2</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоКт2, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>145</Код>
							<Наименование> --&gt; СубконтоКт3</Наименование>
							<Порядок>1050</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт3" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоКт3, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>139</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>1100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>79</Код>
						<Наименование> --&gt; БУДополнительныеНачисления</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="БУДополнительныеНачисления" Вид="НаборДвиженийРегистраРасчета"/>
						<ПередОбработкойВыгрузки>НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПослеОбработкиВыгрузки>Источник.Установить("БУДополнительныеНачисления",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>92</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>88</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>91</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>90</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Свойство" Тип="ПланВидовРасчетаСсылка.ДополнительныеНачисленияОрганизаций"/>
							<КодПравилаКонвертации>ДополнительныеНачисленияОрганизаций               </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; Сторно</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сторно" Вид="Свойство" Тип="Булево"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Сторно);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>89</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДокументОснование);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>137</Код>
							<Наименование>--&gt; СчетДт</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетДт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>ПС                                                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>131</Код>
							<Наименование> --&gt; СубконтоДт1</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт1" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоДт1, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>132</Код>
							<Наименование> --&gt; СубконтоДт2</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт2" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоДт2, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>133</Код>
							<Наименование> --&gt; СубконтоДт3</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоДт3" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоДт3, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>138</Код>
							<Наименование>--&gt; СчетКт</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетКт" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
							<КодПравилаКонвертации>ПС                                                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>134</Код>
							<Наименование> --&gt; СубконтоКт1</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт1" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоКт1, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>135</Код>
							<Наименование> --&gt; СубконтоКт2</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт2" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоКт2, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>136</Код>
							<Наименование> --&gt; СубконтоКт3</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СубконтоКт3" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляЗначенияСубконто(ОбъектКоллекции.СубконтоКт3, Отказ);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>130</Код>
							<Наименование> --&gt; ОтражениеВУСН</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражениеВУСН" Вид="Реквизит" Тип="ПеречислениеСсылка.ОтражениеВУСН"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>148</Код>
						<Наименование> --&gt; ВзаиморасчетыСРаботникамиОрганизаций</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВзаиморасчетыСРаботникамиОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	Если (ПустоеЗначение(ОбъектКоллекции.СтатьяФинансирования) = 1)
		И (ПустоеЗначение(ОбъектКоллекции.СФ_Наименование) = 0) Тогда
		ОбъектКоллекции.СтатьяФинансирования = СоздатьТЗСтатьяФинансирования();
		ОбъектКоллекции.СтатьяФинансирования.НоваяСтрока();
		ОбъектКоллекции.СтатьяФинансирования.Наименование		= ОбъектКоллекции.СФ_Наименование;
		ОбъектКоллекции.СтатьяФинансирования.КВД				= ОбъектКоллекции.СФ_КВД;
		ОбъектКоллекции.СтатьяФинансирования.ПодпадаетПодЕНВД	= ОбъектКоллекции.СФ_ПодпадаетПодЕНВД;
		ОбъектКоллекции.СтатьяФинансирования.Баланс				= ОбъектКоллекции.СФ_Баланс;
		ОбъектКоллекции.СтатьяФинансирования.КБК				= ОбъектКоллекции.СФ_КБК;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ВзаиморасчетыСРаботникамиОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>157</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>150</Код>
							<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>149</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>151</Код>
							<Наименование> --&gt; Физлицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>156</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>155</Код>
							<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВзаиморасчетов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛ</Код>
				<Наименование>:</Наименование>
				<Порядок>500</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "НДФЛСведенияОДоходах";
Строка.Представление	= "Сведения о доходах";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "НДФЛПредоставленныеСтандартныеВычетыФизЛиц";
Строка.Представление	= "Предоставленные стандартные вычеты физических лиц";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "НДФЛРасчетыСБюджетом";
Строка.Представление	= "Расчеты с бюджетом";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "НДФЛИмущественныеВычетыФизлиц";
Строка.Представление	= "Имущественные вычеты физических лиц";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "НДФЛКЗачету";
Строка.Представление	= "К зачету";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "РасчетыНалоговыхАгентовСБюджетомПоНДФЛ";
Строка.Представление	= "Расчеты налоговых агентов с бюджетом по НДФЛ";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>25</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>21</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>19</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>18</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; НДФЛСведенияОДоходах</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛСведенияОДоходах" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("НДФЛСведенияОДоходах")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если (НачМесяца(ОбъектКоллекции.ПериодРегистрации) &lt; НачМесяца(ДатаНачала))
	И (НачМесяца(ОбъектКоллекции.ПериодРегистрации) &gt; ?(Параметры.ПереноситьНДФЛПоДатуНачалаУчета = 1, НачМесяца(Параметры.ДатаНачалаУчета-1), НачМесяца(ДатаОкончания))) Тогда
	Возврат 1;
КонецЕсли;

Если ПустоеЗначение(ОбъектКоллекции.КодДохода) = 1 Тогда
	ТекстОшибки		= "У сотрудника " + ОбъектКоллекции.Физлицо + " за " + ОбъектКоллекции.Период + " есть введенный вручную в 1-НДФЛ доход без кода дохода.";
	ТекстДействия	= "Из карточки сотрудника откройте форму 1-НДФЛ и укажите код дохода НДФЛ.";
	
	Сообщить(ТекстОшибки + " " + ТекстДействия, "!");
	ЗафиксироватьОшибку(ТекстОшибки + "|" + ТекстДействия);
	Возврат 1;
КонецЕсли;

ОбособленноеПодразделение = ?(ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0, ОбъектКоллекции.ПодразделениеОрганизации, "Наша организация");

ОбъектКоллекции.Организация									= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение					= ОбособленноеПодразделение;

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	ОбъектКоллекции.СтатьяФинансирования					= СоздатьТЗСтатьяФинансирования();
	ОбъектКоллекции.СтатьяФинансирования.НоваяСтрока();
	ОбъектКоллекции.СтатьяФинансирования.Наименование		= ОбъектКоллекции.СФ_Наименование;
	ОбъектКоллекции.СтатьяФинансирования.КВД				= ОбъектКоллекции.СФ_КВД;
	ОбъектКоллекции.СтатьяФинансирования.ПодпадаетПодЕНВД	= ОбъектКоллекции.СФ_ПодпадаетПодЕНВД;
	ОбъектКоллекции.СтатьяФинансирования.Баланс				= ОбъектКоллекции.СФ_Баланс;
	ОбъектКоллекции.СтатьяФинансирования.КБК				= ОбъектКоллекции.СФ_КБК;
КонецЕсли;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("НДФЛСведенияОДоходах",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Измерение" Тип="СправочникСсылка.ДоходыНДФЛ"/>
							<КодПравилаКонвертации>ДоходыНДФЛ                                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; СуммаДохода</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаДохода" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Реквизит" Тип="СправочникСсылка.ВычетыНДФЛ"/>
							<КодПравилаКонвертации>ВычетыНДФЛСтрока                                  </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.КодВычета);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; СуммаВычета</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВычета" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.СуммаВычета);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ИсчисленоИзЗарплаты</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИсчисленоИзЗарплаты" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; КПП</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КПП) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КодПоОКАТО</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КодПоОКАТО) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; КоличествоДетей</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КоличествоДетей" Вид="Реквизит" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.КоличествоДетей);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>82</Код>
							<Наименование> --&gt; ДатаПолученияДохода</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаПолученияДохода" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>86</Код>
							<Наименование>--&gt; КодПоОКТМО</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>26</Код>
						<Наименование> --&gt; НДФЛПредоставленныеСтандартныеВычетыФизЛиц</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛПредоставленныеСтандартныеВычетыФизЛиц" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("НДФЛПредоставленныеСтандартныеВычетыФизЛиц")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если (НачМесяца(ОбъектКоллекции.Период) &lt; НачМесяца(ДатаНачала))
	И (НачМесяца(ОбъектКоллекции.Период) &gt; ?(Параметры.ПереноситьНДФЛПоДатуНачалаУчета = 1, НачМесяца(Параметры.ДатаНачалаУчета-1), НачМесяца(ДатаОкончания))) Тогда
	Возврат 1;
КонецЕсли;

ОбособленноеПодразделение = ?(ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0, ОбъектКоллекции.ПодразделениеОрганизации, "Наша организация");

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("НДФЛПредоставленныеСтандартныеВычетыФизЛиц",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; КодВычета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
							<КодПравилаКонвертации>ВычетыНДФЛСтрока                                  </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ПримененныйВычет</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПримененныйВычет" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПримененныйВычет);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; КПП</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КПП) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; КодПоОКАТО</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КодПоОКАТО) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>84</Код>
							<Наименование>--&gt; КодПоОКТМО</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>37</Код>
						<Наименование> --&gt; НДФЛРасчетыСБюджетом</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛРасчетыСБюджетом" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("НДФЛРасчетыСБюджетом")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если (НачМесяца(ОбъектКоллекции.Период) &lt; НачМесяца(ДатаНачала))
	И (НачМесяца(ОбъектКоллекции.Период) &gt; ?(Параметры.ПереноситьНДФЛПоДатуНачалаУчета = 1, НачМесяца(Параметры.ДатаНачалаУчета-1), НачМесяца(ДатаОкончания))) Тогда
	Возврат 1;
КонецЕсли;

ОбособленноеПодразделение = ?(ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0, ОбъектКоллекции.ПодразделениеОрганизации, "Наша организация");

ОбъектКоллекции.Организация									= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение					= ОбособленноеПодразделение;
Если ОбъектКоллекции.ВидСтроки = "Начисление" Тогда
	ОбъектКоллекции.ВидДвижения								= "Приход";
Иначе
	ОбъектКоллекции.ВидДвижения								= "Расход";
КонецЕсли;

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	Если ПустоеЗначение(ОбъектКоллекции.СФ_Наименование) = 0 Тогда
		ОбъектКоллекции.СтатьяФинансирования					= СоздатьТЗСтатьяФинансирования();
		ОбъектКоллекции.СтатьяФинансирования.НоваяСтрока();
		ОбъектКоллекции.СтатьяФинансирования.Наименование		= ОбъектКоллекции.СФ_Наименование;
		ОбъектКоллекции.СтатьяФинансирования.КВД				= ОбъектКоллекции.СФ_КВД;
		ОбъектКоллекции.СтатьяФинансирования.ПодпадаетПодЕНВД	= ОбъектКоллекции.СФ_ПодпадаетПодЕНВД;
		ОбъектКоллекции.СтатьяФинансирования.Баланс				= ОбъектКоллекции.СФ_Баланс;
		ОбъектКоллекции.СтатьяФинансирования.КБК				= ОбъектКоллекции.СФ_КБК;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("НДФЛРасчетыСБюджетом",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>53</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>50</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; ВидСтроки</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидСтроки" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛРасчетыСБюджетомВидСтроки"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; СтавкаНалогообложенияРезидента</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложенияРезидента" Вид="Измерение" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; КодДохода</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодДохода" Вид="Реквизит" Тип="СправочникСсылка.ДоходыНДФЛ"/>
							<КодПравилаКонвертации>ДоходыНДФЛ                                        </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.КодДохода);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; Налог</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Налог" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; ИсчисленоИзЗарплаты</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ИсчисленоИзЗарплаты" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; КПП</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КПП) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; КодПоОКАТО</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КодПоОКАТО) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>52</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>85</Код>
							<Наименование>--&gt; КодПоОКТМО</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>54</Код>
						<Наименование> --&gt; НДФЛИмущественныеВычетыФизлиц</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛИмущественныеВычетыФизлиц" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("НДФЛИмущественныеВычетыФизлиц")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>ОбособленноеПодразделение = ?(ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0, ОбъектКоллекции.ПодразделениеОрганизации, "Наша организация");

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;
ОбъектКоллекции.ВидДвижения					= "Расход";</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("НДФЛИмущественныеВычетыФизлиц",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>65</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; Год</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Год" Вид="Измерение" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>61</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; КодВычетаИмущественный</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодВычетаИмущественный" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
							<КодПравилаКонвертации>ВычетыНДФЛСтрока                                  </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.КодВычетаИмущественный);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>63</Код>
							<Наименование> --&gt; Размер</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>62</Код>
							<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
							<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>60</Код>
							<Наименование> --&gt; КПП</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КПП) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; КодПоОКАТО</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
							<ПередВыгрузкой>Если (ПустоеЗначение(ОбъектКоллекции.КодПоОКАТО) = 1) Или (ПустоеЗначение(ОбъектКоллекции.ПодразделениеОрганизации) = 0) Тогда
	Отказ = 1;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>64</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>83</Код>
							<Наименование>--&gt; КодПоОКТМО</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>66</Код>
						<Наименование> --&gt; НДФЛКЗачету</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НДФЛКЗачету" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("НДФЛКЗачету")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Физлицо, ОбъектКоллекции.Период);

ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация						= ОбособленноеПодразделение;
ОбъектКоллекции.ВидДвижения						= "Приход";</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("НДФЛКЗачету",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>67</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>69</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>72</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>70</Код>
							<Наименование> --&gt; СуммаНДФЛКЗачету</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаНДФЛКЗачету" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>68</Код>
							<Наименование> --&gt; СтавкаНалогообложенияРезидента</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложенияРезидента" Вид="Измерение" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>71</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>73</Код>
						<Наименование> --&gt; РасчетыНалоговыхАгентовСБюджетомПоНДФЛ</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыНалоговыхАгентовСБюджетомПоНДФЛ" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПослеОбработкиВыгрузки>Источник.Установить("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>76</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>78</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>81</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>74</Код>
							<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцНалоговогоПериода" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>79</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>77</Код>
							<Наименование> --&gt; Ставка</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ставка" Вид="Измерение" Тип="ПеречислениеСсылка.НДФЛСтавки"/>
							<КодПравилаКонвертации>НДФЛСтавки                                        </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>75</Код>
							<Наименование> --&gt; ОКАТО_КПП</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОКАТО_КПП" Вид="Измерение" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>80</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>87</Код>
							<Наименование>--&gt; ОКТМО_КПП</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОКТМО_КПП" Вид="Измерение" Тип="Строка"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛПодтверждениеПраваНаИмущественныйВычет</Код>
				<Наименование>Справочник: Вычеты сотрудников по НДФЛ</Наименование>
				<Порядок>550</Порядок>
				<ПередВыгрузкой>РежимЗаписи = "Проведение"</ПередВыгрузкой>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.НДФЛПодтверждениеПраваНаИмущественныйВычет</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; НалоговыйПериод</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НалоговыйПериод" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>6</Код>
						<Наименование>--&gt; РаботникиОрганизации</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаботникиОрганизации" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Реквизит" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ДатаСобытия</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСобытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Расходы</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Расходы" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ПроцентыПоКредитам</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПроцентыПоКредитам" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; КодНалоговогоОргана</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="КодНалоговогоОргана" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; НомерВходящегоДокумента</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерВходящегоДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; ДатаУведомления</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаУведомления" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ПроцентыПриПерекредитовании</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПроцентыПриПерекредитовании" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование>--&gt; РасходыНаДорогостоящееЛечение</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасходыНаДорогостоящееЛечение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование>--&gt; РасходыНаЛечение</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасходыНаЛечение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование>--&gt; РасходыНаОбучениеДетей</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасходыНаОбучениеДетей" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование>--&gt; РасходыНаСвоеОбучение</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РасходыНаСвоеОбучение" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование>--&gt; СтраховыеВзносыНаМедУслуги</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтраховыеВзносыНаМедУслуги" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОстаткиВзаиморасчетов</Код>
				<Наименование>:</Наименование>
				<Порядок>600</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ВзаиморасчетыСРаботникамиОрганизаций";
Строка.Представление	= "Взаиморасчеты с работниками";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ВзаиморасчетыСДепонентамиОрганизаций";
Строка.Представление	= "Взаиморасчеты с депонентами";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ЗарплатаЗаМесяцОрганизаций";
Строка.Представление	= "Зарплата за месяц";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>13</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ВзаиморасчетыСРаботникамиОрганизаций</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВзаиморасчетыСРаботникамиОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<ПослеОбработкиВыгрузки>Источник.Установить("ВзаиморасчетыСРаботникамиОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ПериодВзаиморасчетов</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодВзаиморасчетов" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Физлицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; СуммаВзаиморасчетов</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВзаиморасчетов" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>18</Код>
						<Наименование> --&gt; ВзаиморасчетыСДепонентамиОрганизаций</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВзаиморасчетыСДепонентамиОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<ПослеОбработкиВыгрузки>Источник.Установить("ВзаиморасчетыСДепонентамиОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; Физлицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Ведомость</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Ведомость" Вид="Измерение" Тип="ДокументСсылка.ЗарплатаКВыплатеОрганизаций"/>
							<КодПравилаКонвертации>ЗарплатаКВыплатеОрганизаций                       </КодПравилаКонвертации>
							<ПередВыгрузкой>ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Взаиморасчеты",			Источник.Получить("ВзаиморасчетыСДепонентамиОрганизаций"));
ИсходящиеДанные.Установить("ВыплаченностьЗарплаты",	"Задепонировано");</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОбнулениеСальдоВзаиморасчетов</Код>
				<Наименование>:</Наименование>
				<Порядок>650</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ВзаиморасчетыСРаботникамиОрганизаций";
Строка.Представление	= "Взаиморасчеты с работниками";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ЗарплатаЗаМесяцОрганизаций";
Строка.Представление	= "Зарплата за месяц";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "НДФЛКЗачету";
Строка.Представление	= "НДФЛ к зачету";

Выполнить(Алгоритмы.ОбнулитьСальдоВзаиморасчетов);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>15</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтражениеЗарплатыВРеглУчете</Код>
				<Наименование>:</Наименование>
				<Порядок>700</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.ОтражениеЗарплатыВРеглУчетеПослеЗагрузки);</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Приемник>ДокументСсылка.ОтражениеЗарплатыВРеглУчете</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>105</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПлановыеНачисленияИУдержания</Код>
				<Наименование>:</Наименование>
				<Порядок>750</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровСведений.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "ПлановыеНачисленияРаботниковОрганизаций";
Строка.Представление	= "Плановые начисления работников";

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "ПлановыеУдержанияРаботниковОрганизаций";
Строка.Представление	= "Плановые удержания работников";

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "РеглУчетПлановыхНачисленийРаботниковОрганизаций";
Строка.Представление	= "Учет плановых начислений работников";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>33</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>21</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>20</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>6</Код>
						<Наименование> --&gt; ПлановыеНачисленияРаботниковОрганизаций</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеНачисленияРаботниковОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<ПослеОбработкиВыгрузки>Источник.Установить("ПлановыеНачисленияРаботниковОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ДатаНачалаСобытия</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаНачалаСобытия" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; Действие</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ВидРасчетаИзмерение</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчетаИзмерение" Вид="Измерение"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ВидРасчетаИзмерение);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Ресурс"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; Показатель1</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель1" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; Валюта1</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта1" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Валюта1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; ТарифныйРазряд1</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТарифныйРазряд1" Вид="Ресурс" Тип="СправочникСсылка.ТарифныеРазряды"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ТарифныйРазряд1);
Если Отказ = 1 Тогда
	Возврат Отказ;
КонецЕсли;

ТипВидТарифа = глТипВидЗначения(ОбъектКоллекции.ТарифныйРазряд1);

Если ТипВидТарифа = "Справочник.ТарифныеРазряды" Тогда
	ИмяПКО = "ТарифныеРазряды";
	
ИначеЕсли ТипВидТарифа = "Справочник.ЕТС" Тогда
	ИмяПКО = "ЕТС";
	
Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Показатель2</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель2" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель2);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; Валюта2</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта2" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Валюта2);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Показатель3</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель3" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель3);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ПериодЗавершения</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ДействиеЗавершения</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействиеЗавершения" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ПервичныйДокумент</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПервичныйДокумент" Вид="Реквизит"/>
							<ПередВыгрузкой>ИмяПКО = ВернутьИмяПКОДляПервичногоДокумента(ОбъектКоллекции.ПервичныйДокумент, Отказ);

ИсходящиеДанные = СоздатьОбъект("СписокЗначений");
ИсходящиеДанные.Установить("Сотрудник", ОбъектКоллекции.Сотрудник);
ИсходящиеДанные.Установить("ТЧ",		Источник.Получить("ПлановыеНачисленияРаботниковОрганизаций"));</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>22</Код>
						<Наименование> --&gt; ПлановыеУдержанияРаботниковОрганизаций</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПлановыеУдержанияРаботниковОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<ПослеОбработкиВыгрузки>Источник.Установить("ПлановыеУдержанияРаботниковОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; Действие</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Действие" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.УдержанияОрганизаций"/>
							<КодПравилаКонвертации>УдержанияОрганизаций                              </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; Показатель1</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель1" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; Валюта1</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта1" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Валюта1);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; Показатель2</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель2" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель2);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; Валюта2</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Валюта2" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Валюта2);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; Показатель3</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Показатель3" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Показатель3);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; ПериодЗавершения</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; ДействиеЗавершения</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДействиеЗавершения" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыДействияСНачислением"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ДокументОснование</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ИсполнительныйЛист                                </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ДокументОснование);

Если Отказ = 0 Тогда
	Если ОбъектКоллекции.ДокументОснование.Вид() &lt;&gt; "ИсполнительныйЛист" Тогда
		Отказ = 1;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; Получатель</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Получатель" Вид="Реквизит" Тип="СправочникСсылка.Контрагенты"/>
							<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Получатель);</ПередВыгрузкой>
						</Свойство>
					</Группа>
					<Группа>
						<Код>39</Код>
						<Наименование> --&gt; РеглУчетПлановыхНачисленийРаботниковОрганизаций</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РеглУчетПлановыхНачисленийРаботниковОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<ПослеОбработкиВыгрузки>Источник.Установить("РеглУчетПлановыхНачисленийРаботниковОрганизаций",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Измерение"/>
							<КодПравилаКонвертации>ОсновныеНачисленияОрганизаций                     </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; СпособОтраженияВБухучете</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
							<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование> --&gt; ОтнесениеРасходовКДеятельностиЕНВД</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтнесениеРасходовКДеятельностиЕНВД" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтнесениеРасходовКДеятельностиЕНВД"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЗаймыРаботников</Код>
				<Наименование>:</Наименование>
				<Порядок>800</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровСведений.Очистить();

Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "СведенияОЗаймах";
Строка.Представление	= "Сведения о займах";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ПогашениеЗаймовРаботникамиОрганизаций";
Строка.Представление	= "Погашение займов работниками";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>15</Код>
						<Наименование> --&gt; СведенияОЗаймах</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СведенияОЗаймах" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; ДатаДокумента</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаДокумента" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; НомерДокумента</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НомерДокумента" Вид="Реквизит" Тип="Строка"/>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>26</Код>
							<Наименование> --&gt; ОтражатьВБухгалтерскомУчете</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОтражатьВБухгалтерскомУчете" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ДоговорЗайма</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорЗайма" Вид="Измерение" Тип="ДокументСсылка.ДоговорЗаймаСРаботником"/>
							<КодПравилаКонвертации>ДоговорЗаймаСРаботником                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; СуммаЗайма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаЗайма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>28</Код>
							<Наименование> --&gt; ПроцентЗаПользованиеЗаймом</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПроцентЗаПользованиеЗаймом" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>23</Код>
							<Наименование> --&gt; НачалоПогашения</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачалоПогашения" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>27</Код>
							<Наименование> --&gt; ПорядокПогашенияЗайма</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПорядокПогашенияЗайма" Вид="Реквизит" Тип="ПеречислениеСсылка.ПорядокПогашенияЗаймаПроцентов"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; СрокПогашения</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СрокПогашения" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; НачислятьМатериальнуюВыгоду</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="НачислятьМатериальнуюВыгоду" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; СтавкаНалогообложенияРезидента</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНалогообложенияРезидента" Вид="Реквизит" Тип="ПеречислениеСсылка.НДФЛСтавкиНалогообложенияРезидента"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; СчетУчетаПроцентовПоЗайму</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СчетУчетаПроцентовПоЗайму" Вид="Реквизит" Тип="ПланСчетовСсылка.Хозрасчетный"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; ВалютаДокумента</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВалютаДокумента" Вид="Реквизит" Тип="СправочникСсылка.Валюты"/>
							<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
						</Свойство>
					</Группа>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ПогашениеЗаймовРаботникамиОрганизаций</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПогашениеЗаймовРаботникамиОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ОсновнойДолг</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновнойДолг" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ДоговорЗайма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорЗайма" Вид="Измерение" Тип="ДокументСсылка.ДоговорЗаймаСРаботником"/>
							<КодПравилаКонвертации>ДоговорЗаймаСРаботником                           </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПогашениеЗаймовРаботниками</Код>
				<Наименование>:</Наименование>
				<Порядок>800</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ПогашениеЗаймовРаботникамиОрганизаций";
Строка.Представление	= "Погашение займов работниками";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>14</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; ПогашениеЗаймовРаботникамиОрганизаций</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПогашениеЗаймовРаботникамиОрганизаций" Вид="НаборДвиженийРегистраНакопления"/>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ОсновнойДолг</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОсновнойДолг" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Проценты</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Проценты" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; УдержаноИзЗарплаты</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УдержаноИзЗарплаты" Вид="Реквизит" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ДоговорЗайма</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоговорЗайма" Вид="Измерение" Тип="ДокументСсылка.ДоговорЗаймаСРаботником"/>
							<КодПравилаКонвертации>ДоговорЗаймаСРаботником                           </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РаспределениеОсновногоЗаработкаРаботников</Код>
				<Наименование>:</Наименование>
				<Порядок>850</Порядок>
				<ПослеЗагрузки>Выполнить(Алгоритмы.РаспрОсновногоЗаработкаРаботниковПослеЗагрузки);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; РаспределениеОсновногоЗаработкаРаботниковОрганизаций</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РаспределениеОсновногоЗаработкаРаботниковОрганизаций" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ПериодРегистрации</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПериодРегистрации" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>11</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ДоляСпособаОтражения</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДоляСпособаОтражения" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; СпособОтраженияВБухучете</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияВБухучете" Вид="Измерение" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
							<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>17</Код>
							<Наименование> --&gt; ПодпадаетПодЕНВД</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодпадаетПодЕНВД" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтраховыеВзносы</Код>
				<Наименование>:</Наименование>
				<Порядок>900</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "РасчетыПоСтраховымВзносам";
Строка.Представление	= "Расчеты по страховым взносам";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "СтраховыеВзносыИсчисленные";
Строка.Представление	= "Страховые взносы: Исчисленные";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "СтраховыеВзносыСведенияОДоходах";
Строка.Представление	= "Страховые взносы: Сведения о доходах";

Выполнить(Алгоритмы.ЗаполнитьРасчетыПоСтраховымВзносам);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>29</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>28</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>30</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>27</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>1</Код>
						<Наименование> --&gt; СтраховыеВзносыИсчисленные</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносыИсчисленные" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("СтраховыеВзносыИсчисленные")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если НачМесяца(ОбъектКоллекции.Период) &gt; НачМесяца(ДатаОкончания) Тогда
	Возврат 1;
КонецЕсли;

Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Физлицо, КонМесяца(ОбъектКоллекции.Период));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("СтраховыеВзносыИсчисленные",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>4</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФСС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; ФССЕНВД</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФССЕНВД" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФССЕНВД);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ФССНесчастныеСлучаи</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФССНесчастныеСлучаи" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФССНесчастныеСлучаи);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФФОМС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ФФОМСЕНВД</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМСЕНВД" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ФФОМСЕНВД);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>2</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ТФОМС);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ТФОМСЕНВД</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМСЕНВД" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ТФОМСЕНВД);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРНакопительная);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>3</Код>
							<Наименование> --&gt; ПФРНакопительнаяЕНВД</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительнаяЕНВД" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРНакопительнаяЕНВД);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>700</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРСтраховая);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; ПФРСтраховаяЕНВД</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховаяЕНВД" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРСтраховаяЕНВД);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; ПФРПоДополнительномуТарифу</Наименование>
							<Порядок>800</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРПоДополнительномуТарифу" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРПоДополнительномуТарифу);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ПФРЗаЗанятыхНаПодземныхИВредныхРаботах</Наименование>
							<Порядок>850</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРЗаЗанятыхНаПодземныхИВредныхРаботах" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах</Наименование>
							<Порядок>900</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; ПФРПоСуммарномуТарифу</Наименование>
							<Порядок>950</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРПоСуммарномуТарифу" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование>--&gt; ПФРПоСуммарномуТарифуЕНВД</Наименование>
							<Порядок>1000</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРПоСуммарномуТарифуЕНВД" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>17</Код>
						<Наименование> --&gt; СтраховыеВзносыСведенияОДоходах</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтраховыеВзносыСведенияОДоходах" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("СтраховыеВзносыСведенияОДоходах")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если НачМесяца(ОбъектКоллекции.Период) &gt; НачМесяца(ДатаОкончания) Тогда
	Возврат 1;
КонецЕсли;

Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Физлицо, КонМесяца(ОбъектКоллекции.Период));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

АвторскийДоговор	= ЯвляетсяАвторскимДоговором(ОбъектКоллекции.ВидРасчета);
ДоговорПодряда		= ?(ОбъектКоллекции.ВидРасчета = ВидРасчета.ОплатаПоДоговору, 1, 0);
ТекущийСотрудник	= ЗаполнитьТЗСотрудникаОрганизации(ОбъектКоллекции.Физлицо, КонМесяца(ОбъектКоллекции.Период), АвторскийДоговор, ДоговорПодряда);

ОбъектКоллекции.Организация					= "Наша организация";
ОбъектКоллекции.ОбособленноеПодразделение	= ОбособленноеПодразделение;
ОбъектКоллекции.ВидРасчета					= ВернутьТЗВидаРасчета(ОбъектКоллекции.ВидРасчета, ОбъектКоллекции.ДокументОснование, КонМесяца(ОбъектКоллекции.Период), ОбъектКоллекции.Физлицо, , ТекущийСотрудник.Получить("ВидДоговора"));</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("СтраховыеВзносыСведенияОДоходах",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>18</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>21</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>25</Код>
							<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОбособленноеПодразделение" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>22</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>20</Код>
							<Наименование> --&gt; Результат</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Результат" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>19</Код>
							<Наименование> --&gt; Скидка</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Скидка" Вид="Ресурс" Тип="Число"/>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.Скидка);</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; ВидДохода</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДохода" Вид="Измерение" Тип="СправочникСсылка.ДоходыПоСтраховымВзносам"/>
							<КодПравилаКонвертации>ДоходыПоСтраховымВзносам                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>24</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; ВидРасчета</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидРасчета" Вид="Реквизит"/>
							<ПередВыгрузкой>Если ПустоеЗначение(ОбъектКоллекции.ВидРасчета) = 0 Тогда
	ВидПВР = ОпределитьВидПВР(ОбъектКоллекции.ВидРасчета.ВР);
	
	ИмяПКО = ВидПВР + "Организаций";

Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ОблагаетсяПоДополнительномуТарифу</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяПоДополнительномуТарифу" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; ЯвляетсяДоходомФармацевта</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЯвляетсяДоходомФармацевта" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией"/>
							<КодПравилаКонвертации>ВидыРаботСДосрочнойПенсией                        </КодПравилаКонвертации>
							<ПередВыгрузкой>Отказ = ПустоеЗначение(ОбъектКоллекции.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией);</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РасчетыПоСтраховымВзносам</Код>
				<Наименование>:</Наименование>
				<Порядок>950</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "РасчетыПоСтраховымВзносам";
Строка.Представление	= "Расчеты по страховым взносам";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>29</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>28</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>30</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>27</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>26</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>31</Код>
						<Наименование> --&gt; РасчетыПоСтраховымВзносам</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="РасчетыПоСтраховымВзносам" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("РасчетыПоСтраховымВзносам")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;

НеОчищать = ВходящиеДанные;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Если НачМесяца(ОбъектКоллекции.Период) &gt; НачМесяца(ДатаОкончания) Тогда
	Возврат 1;
КонецЕсли;</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("РасчетыПоСтраховымВзносам",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>39</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; ВидПлатежа</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПлатежа" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыПлатежейВГосБюджет"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; МесяцРасчетногоПериода</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="МесяцРасчетногоПериода" Вид="Измерение" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ПФРСтраховая</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРСтраховая" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ПФРНакопительная</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРНакопительная" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; ФСС</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФСС" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ФФОМС</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФФОМС" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>37</Код>
							<Наименование> --&gt; ТФОМС</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ТФОМС" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; ВидДвижения</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидДвижения" Вид="Свойство"/>
						</Свойство>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; ПФРЗаЗанятыхНаПодземныхИВредныхРаботах</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРЗаЗанятыхНаПодземныхИВредныхРаботах" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах</Наименование>
							<Порядок>650</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование>--&gt; ПФРПоСуммарномуТарифу</Наименование>
							<Порядок>750</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПФРПоСуммарномуТарифу" Вид="Ресурс" Тип="Число"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетОсновногоЗаработкаРаботников</Код>
				<Наименование>:</Наименование>
				<Порядок>1000</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровСведений.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете";
Строка.Представление	= "Учет основного заработка работников";</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете" Вид="НаборДвиженийРегистраСведений"/>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>13</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>14</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>15</Код>
							<Наименование> --&gt; СпособОтраженияВБухучете</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СпособОтраженияВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
							<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>16</Код>
							<Наименование> --&gt; ПодпадаетПодЕНВД</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ПодпадаетПодЕНВД" Вид="Ресурс" Тип="Булево"/>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФСС</Код>
				<Наименование>:</Наименование>
				<Порядок>1050</Порядок>
				<ПослеЗагрузки>Объект.ТаблицаРегистровСведений.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет";
Строка.Представление	= "Заработки получателей пособия по уходу за ребенком до 1.5 лет";


Объект.ТаблицаРегистровНакопления.Очистить();

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "РасчетыПоСтраховымВзносам";
Строка.Представление	= "Расчеты по страховым взносам";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ПособияПоУходуЗаРебенкомДоПолутораЛет";
Строка.Представление	= "Пособия по уходу за ребенком до 1.5 лет";

Строка = Объект.ТаблицаРегистровНакопления.Добавить();
Строка.Имя				= "ПособияСоциальномуСтрахованию";
Строка.Представление	= "Пособия социальному страхованию";

Выполнить(Алгоритмы.ЗаполнитьРасчетыПоСтраховымВзносам);</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>27</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>17</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Группа>
						<Код>28</Код>
						<Наименование> --&gt; ПособияПоУходуЗаРебенкомДоПолутораЛет</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПособияПоУходуЗаРебенкомДоПолутораЛет" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("ПособияПоУходуЗаРебенкомДоПолутораЛет")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.Период));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация	= ОбособленноеПодразделение;
ОбъектКоллекции.Сотрудник	= ЗаполнитьТЗСотрудникаОрганизации(ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.Период));</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ПособияПоУходуЗаРебенкомДоПолутораЛет",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>30</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>34</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>32</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>38</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>33</Код>
							<Наименование> --&gt; ДатаСтраховогоСлучая</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСтраховогоСлучая" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>35</Код>
							<Наименование> --&gt; СтраховыеСлучаи</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтраховыеСлучаи" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>36</Код>
							<Наименование> --&gt; СуммаВсего</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВсего" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>37</Код>
							<Наименование> --&gt; СуммаСверхНорм</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаСверхНорм" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>31</Код>
							<Наименование> --&gt; УходЗаПервымРебенком</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="УходЗаПервымРебенком" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>29</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Измерение" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>39</Код>
						<Наименование> --&gt; ПособияСоциальномуСтрахованию</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПособияСоциальномуСтрахованию" Вид="НаборДвиженийРегистраНакопления"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("ПособияСоциальномуСтрахованию")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.Период));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация	= ОбособленноеПодразделение;
ОбъектКоллекции.Сотрудник	= ЗаполнитьТЗСотрудникаОрганизации(ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.Период));

ПериодРегистрации = Источник.Получить("ПериодРегистрации");

ОбъектКоллекции.ДокументОснование	= СоздатьОбъект("СписокЗначений");
ОбъектКоллекции.ДокументОснование.Установить("ПериодРегистрации",		ПериодРегистрации);
ОбъектКоллекции.ДокументОснование.Установить("Номер",					"ФСС-" + Прав(ДатаГод(ПериодРегистрации), 2));
ОбъектКоллекции.ДокументОснование.Установить("Организация",				"Наша организация");
ОбъектКоллекции.ДокументОснование.Установить("СоздаватьЕслиНеНайден",	1);</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ПособияСоциальномуСтрахованию",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>43</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>46</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>40</Код>
							<Наименование> --&gt; ВидЗанятости</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидЗанятости" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыЗанятостиВОрганизации"/>
						</Свойство>
						<Свойство>
							<Код>51</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>41</Код>
							<Наименование> --&gt; ВидПособияСоциальногоСтрахования</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидПособияСоциальногоСтрахования" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыПособийСоциальногоСтрахования"/>
						</Свойство>
						<Свойство>
							<Код>44</Код>
							<Наименование> --&gt; ДатаСтраховогоСлучая</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДатаСтраховогоСлучая" Вид="Реквизит" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>47</Код>
							<Наименование> --&gt; ОплаченныеДни</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОплаченныеДни" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>48</Код>
							<Наименование> --&gt; СтраховыеСлучаи</Наименование>
							<Порядок>400</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтраховыеСлучаи" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>49</Код>
							<Наименование> --&gt; СуммаВсего</Наименование>
							<Порядок>450</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаВсего" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство Отключить="true">
							<Код>50</Код>
							<Наименование> --&gt; СуммаСверхНорм</Наименование>
							<Порядок>500</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаСверхНорм" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>45</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>550</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Реквизит"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>42</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>600</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Измерение" Тип="Булево"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>52</Код>
						<Наименование> --&gt; ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет" Вид="НаборДвиженийРегистраСведений"/>
						<ПередОбработкойВыгрузки>Если ТипЗначенияСтр(Источник.Получить("ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет")) &lt;&gt; "ТаблицаЗначений" Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойВыгрузки>
						<ПередВыгрузкой>Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.Период));
ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");

ОбъектКоллекции.Организация	= ОбособленноеПодразделение;
ОбъектКоллекции.Сотрудник	= ЗаполнитьТЗСотрудникаОрганизации(ОбъектКоллекции.Сотрудник, КонМесяца(ОбъектКоллекции.Период));

ПериодРегистрации = Источник.Получить("ПериодРегистрации");

ОбъектКоллекции.ДокументОснование	= СоздатьОбъект("СписокЗначений");
ОбъектКоллекции.ДокументОснование.Установить("ПериодРегистрации",	ПериодРегистрации);
ОбъектКоллекции.ДокументОснование.Установить("Номер",				"ЕНЧ-" + Прав(ДатаГод(ПериодРегистрации), 2));
ОбъектКоллекции.ДокументОснование.Установить("Организация",			"Наша организация");</ПередВыгрузкой>
						<ПослеОбработкиВыгрузки>Источник.Установить("ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет",	"");</ПослеОбработкиВыгрузки>
						<Свойство>
							<Код>55</Код>
							<Наименование> --&gt; Организация</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
							<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>57</Код>
							<Наименование> --&gt; Сотрудник</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сотрудник" Вид="Реквизит" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
							<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>56</Код>
							<Наименование> --&gt; ФизЛицо</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
							<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>59</Код>
							<Наименование> --&gt; Период</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
						</Свойство>
						<Свойство>
							<Код>58</Код>
							<Наименование> --&gt; РазмерСреднегоЗаработка</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="РазмерСреднегоЗаработка" Вид="Ресурс" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>54</Код>
							<Наименование> --&gt; ОблагаетсяЕНВД</Наименование>
							<Порядок>300</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ОблагаетсяЕНВД" Вид="Измерение" Тип="Булево"/>
						</Свойство>
						<Свойство>
							<Код>53</Код>
							<Наименование>--&gt; ДокументОснование</Наименование>
							<Порядок>350</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ДокументОснование" Вид="Измерение"/>
							<КодПравилаКонвертации>ПереносДанныхРегистратор                          </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПереносДанныхРегистратор</Код>
				<Наименование>:</Наименование>
				<Порядок>1100</Порядок>
				<ПередВыгрузкой>Если Источник.Получить("СоздаватьЕслиНеНайден") = 1 Тогда
	НеСоздаватьЕслиНеНайден = 0;
КонецЕсли;</ПередВыгрузкой>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Приемник>ДокументСсылка.ПереносДанных</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>105</Код>
						<Наименование> --&gt; ПериодРегистрации</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодРегистрации" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Номер</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Номер" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>7</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Регистры сведений</Код>
			<Наименование>Регистры сведений</Наименование>
			<Порядок>300</Порядок>
			<Правило>
				<Код>АвансыРаботникамОрганизаций</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.АвансыРаботникамОрганизаций</Наименование>
				<Порядок>50</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.АвансыРаботникамОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СуммаАванса</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаАванса" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВоинскийУчет</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ВоинскийУчет</Наименование>
				<Порядок>100</Порядок>
				<ПриВыгрузке>Годность = Источник.Получить("Годность");
Если Годность = "А" Тогда
    ПередаваемоеЗначение = "Годен"
ИначеЕсли Годность = "Б" Тогда
    ПередаваемоеЗначение = "ГоденСОграничениями"
ИначеЕсли Годность = "В" Тогда
    ПередаваемоеЗначение = "ОграниченноГоден"
ИначеЕсли Годность = "Г" Тогда
    ПередаваемоеЗначение = "ВременноНеГоден"
ИначеЕсли Годность = "Д" Тогда
    ПередаваемоеЗначение = "НеГоден"
Иначе
	ПередаваемоеЗначение = "";
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Годность", ПередаваемоеЗначение);</ПриВыгрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ВоинскийУчет</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Военкомат</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Военкомат" Вид="Ресурс" Тип="СправочникСсылка.Военкоматы"/>
						<КодПравилаКонвертации>Военкоматы                                        </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ВУС</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВУС" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; Годность</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Годность" Вид="Ресурс" Тип="ПеречислениеСсылка.ГодностьКВоеннойСлужбе"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Звание</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Звание" Вид="Ресурс" Тип="СправочникСсылка.ЗваниеГражданскогоВоинскогоУчета"/>
						<КодПравилаКонвертации>ЗванияГражданскогоВоинскогоУчета                  </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; КатегорияЗапаса</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КатегорияЗапаса" Вид="Ресурс" Тип="ПеречислениеСсылка.КатегорииЗапасаВоеннообязанных"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; НаличиеМобпредписания</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаличиеМобпредписания" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; НомерКомандыПартии</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерКомандыПартии" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; ОтношениеКВоинскойОбязанности</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтношениеКВоинскойОбязанности" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтношениеКВоинскойОбязанности"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; ОтношениеКВоинскомуУчету</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтношениеКВоинскомуУчету" Вид="Ресурс" Тип="ПеречислениеСсылка.ОтношениеКВоинскомуУчету"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Состав</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Состав" Вид="Ресурс" Тип="СправочникСсылка.СоставыВоеннослужащих"/>
						<КодПравилаКонвертации>СоставыВоеннослужащих                             </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам</Код>
				<Наименование>:</Наименование>
				<Порядок>150</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ПринятПоДолгосрочномуДоговору</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПринятПоДолгосрочномуДоговору" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГражданствоФизЛиц</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ГражданствоФизЛиц</Наименование>
				<Порядок>200</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ГражданствоФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Страна</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Страна" Вид="Ресурс" Тип="СправочникСсылка.КлассификаторСтранМира"/>
						<КодПравилаКонвертации>КлассификаторСтранМира                            </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; НеИмеетПравоНаПенсию</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НеИмеетПравоНаПенсию" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ВидЗастрахованногоЛица</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидЗастрахованногоЛица" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования"/>
						<КодПравилаКонвертации>ВидыЗастрахованныхЛицОбязательногоСтрахования     </КодПравилаКонвертации>
						<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.ВидЗастрахованногоЛица);</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ГрафикиРаботыПоВидамВремени</Код>
				<Наименование>:</Наименование>
				<Порядок>250</Порядок>
				<ПриВыгрузке>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("План",			1);</ПриВыгрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ГрафикиРаботыПоВидамВремени</Приемник>
				<Свойства>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ГрафикРаботы</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГрафикРаботы" Вид="Измерение"/>
						<КодПравилаКонвертации>ГрафикиРаботы                                     </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Месяц</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Месяц" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>--&gt; План</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="План" Вид="Измерение" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ВидУчетаВремени</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидУчетаВремени" Вид="Измерение" Тип="ПеречислениеСсылка.ВидыУчетаВремени"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ОсновноеЗначение</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновноеЗначение" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ДополнительноеЗначение</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДополнительноеЗначение" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; ОсновноеЗначениеНорма</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсновноеЗначениеНорма" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ДополнительноеЗначениеНорма</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДополнительноеЗначениеНорма" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КомиссионнаяВыручка</Код>
				<Наименование>Документ: Комиссионная выручка</Наименование>
				<Порядок>300</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ЗначенияПоказателейСхемМотивации</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Сотрудник</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Сотрудник" Вид="Измерение" Тип="СправочникСсылка.СотрудникиОрганизаций"/>
						<КодПравилаКонвертации>СотрудникиОрганизаций                             </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ПериодДействия</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодДействия" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Показатель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатель" Вид="Измерение" Тип="СправочникСсылка.ПоказателиСхемМотивации"/>
						<КодПравилаКонвертации>ПоказателиСхемМотивации                           </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Значение</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Значение" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Валюта</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КонтактнаяИнформация</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.КонтактнаяИнформация</Наименование>
				<Порядок>350</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.КонтактнаяИнформация</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Объект</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Объект" Вид="Измерение"/>
						<ПередВыгрузкой>Если Источник.Получить("ТипОбъекта") = "ФЛ" Тогда
	ИмяПКО = "ФизическиеЛица"
Иначе
	ИмяПКО = "Организации";
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Тип</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Тип" Вид="Измерение" Тип="ПеречислениеСсылка.ТипыКонтактнойИнформации"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Вид</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Вид" Вид="Измерение"/>
						<КодПравилаКонвертации>ВидыКонтактнойИнформации                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Поле1</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле1" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Поле2</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле2" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Поле3</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле3" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Поле4</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле4" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Поле5</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле5" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; Поле6</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле6" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование> --&gt; Поле7</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле7" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; Поле8</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле8" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; Поле9</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Поле9" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Представление</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Представление" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НадбавкиПоШтатномуРасписаниюОрганизаций</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.НадбавкиПоШтатномуРасписаниюОрганизаций</Наименование>
				<Порядок>400</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НадбавкиПоШтатномуРасписаниюОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Измерение" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ВидНадбавки</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидНадбавки" Вид="Измерение" Тип="ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"/>
						<ПередВыгрузкой>ВидНадбавки = Источник.ВидНадбавки;

Если ТипЗначенияСтр(ВидНадбавки) = "Строка" Тогда
	ИмяПКО = "ОсновныеНачисленияОрганизаций";
	
Иначе
	ПланВидовРасчета = ОпределитьВидПВР(ВидНадбавки.ВР);

	Если ПланВидовРасчета = "ОсновныеНачисления" Тогда
		ИмяПКО = "ОсновныеНачисленияОрганизаций";
		
	ИначеЕсли ПланВидовРасчета = "ДополнительныеНачисления" Тогда
		ИмяПКО = "ДополнительныеНачисленияОрганизаций";
		
	Иначе
		Отказ = 1;
		
	КонецЕсли;
	
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Показатель1</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Показатель1" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Валюта1</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта1" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛДоходыПредыдущегоМестаРаботы</Код>
				<Наименование>Справочник: Налоговая карточка, итоги в целом за год</Наименование>
				<Порядок>450</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НДФЛДоходыПредыдущегоМестаРаботы</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; МесяцНалоговогоПериода</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МесяцНалоговогоПериода" Вид="Измерение" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Размер</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛПрименениеВычетов</Код>
				<Наименование>:</Наименование>
				<Порядок>500</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НДФЛПрименениеВычетов</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Ресурс" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыНаДетей</Код>
				<Наименование>Справочник: Вычеты сотрудников по НДФЛ</Наименование>
				<Порядок>550</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыНаДетей</Приемник>
				<Свойства>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПериодЗавершения</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПериодЗавершения" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; КодВычета</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодВычета" Вид="Измерение" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНДФЛСправочник                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; КоличествоДетей</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетей" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; КоличествоДетейЗавершения</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоДетейЗавершения" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НДФЛСтандартныеВычетыФизлиц</Код>
				<Наименование>Справочник: Вычеты сотрудников по НДФЛ</Наименование>
				<Порядок>600</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.ВычетыСотрудниковПоНДФЛ</Источник>
				<Приемник>РегистрСведенийЗапись.НДФЛСтандартныеВычетыФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование>Владелец --&gt; Физлицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Сотрудники"/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>ДатаНачала --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаНачала" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>ВидВычета --&gt; КодВычетаЛичный</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ВидВычета" Вид="Реквизит" Тип="СправочникСсылка.ВидыВычетов"/>
						<Приемник Имя="КодВычетаЛичный" Вид="Ресурс" Тип="СправочникСсылка.ВычетыНДФЛ"/>
						<КодПравилаКонвертации>ВычетыНДФЛСправочник                              </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЛицевыеСчетаРаботниковОрганизации</Код>
				<Наименование>:</Наименование>
				<Порядок>650</Порядок>
				<ПриВыгрузке>ОсновнойБанк = СоздатьОбъект("ТаблицаЗначений");

ОсновнойБанк.НоваяКолонка("ЭтоГруппа");
ОсновнойБанк.НоваяКолонка("Код");
ОсновнойБанк.НоваяКолонка("Наименование");
ОсновнойБанк.НоваяКолонка("ИНН");
ОсновнойБанк.НоваяКолонка("ПолнНаименование");

ОсновнойБанк.НоваяСтрока();
ОсновнойБанк.ЭтоГруппа			= 0;
ОсновнойБанк.Код				= "";
ОсновнойБанк.Наименование		= "Банк для перечисления зарплаты на карточки";
ОсновнойБанк.ИНН				= "";
ОсновнойБанк.ПолнНаименование	= "Банк для перечисления зарплаты на карточки";

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Банк", ОсновнойБанк);</ПриВыгрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ЛицевыеСчетаРаботниковОрганизации</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Банк</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Банк" Вид="Измерение" Тип="СправочникСсылка.Контрагенты"/>
						<КодПравилаКонвертации>Контрагенты                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НомерЛицевогоСчета</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерЛицевогоСчета" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ОтветственныеЛицаОрганизаций</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ОтветственныеЛицаОрганизаций</Наименование>
				<Порядок>700</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ОтветственныеЛицаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; СтруктурнаяЕдиница</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтруктурнаяЕдиница" Вид="Измерение"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ОтветственноеЛицо</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОтветственноеЛицо" Вид="Измерение" Тип="ПеречислениеСсылка.ОтветственныеЛицаОрганизаций"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Ресурс" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ФизическоеЛицо</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизическоеЛицо" Вид="Ресурс" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПаспортныеДанныеФизЛиц</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Наименование>
				<Порядок>750</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ПаспортныеДанныеФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ДокументВид</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументВид" Вид="Ресурс" Тип="СправочникСсылка.ДокументыУдостоверяющиеЛичность"/>
						<КодПравилаКонвертации>ДокументыУдостоверяющиеЛичность                   </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ДокументДатаВыдачи</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументДатаВыдачи" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ДокументКемВыдан</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументКемВыдан" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ДокументНомер</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументНомер" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ДокументСерия</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДокументСерия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ДатаРегистрацииПоМестуЖительства</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаРегистрацииПоМестуЖительства" Вид="Ресурс" Тип="Дата"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПравоПримененияЛьготПоЕСН</Код>
				<Наименование>:</Наименование>
				<Порядок>800</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "Наша организация";

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Организация",	"Наша организация");</ПередВыгрузкой>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ПравоПримененияЛьготПоЕСН</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ПравоНаЛьготы</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПравоНаЛьготы" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РазмерТарифныхСтавок</Код>
				<Наименование>Справочник: Тарифные разряды</Наименование>
				<Порядок>850</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.РазмерТарифныхСтавок</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; ТарифныйРазряд</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТарифныйРазряд" Вид="Измерение" Тип="СправочникСсылка.ТарифныеРазряды"/>
						<ПередВыгрузкой>ТипВидТарифа = глТипВидЗначения(ВходящиеДанные.Получить("ТарифныйРазряд"));

Если ТипВидТарифа = "Справочник.ТарифныеРазряды" Тогда
	ИмяПКО = "ТарифныеРазряды";
	
ИначеЕсли ТипВидТарифа = "Справочник.ЕТС" Тогда
	ИмяПКО = "ЕТС";
	
Иначе
	Отказ = 1;
	
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Размер</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Размер" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; Валюта</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Валюта" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОбИнвалидностиФизлиц</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Наименование>
				<Порядок>900</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>ДокументСсылка.СправкаМСЭК</Источник>
				<Приемник>РегистрСведенийЗапись.СведенияОбИнвалидностиФизлиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Физлицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Физлицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; Инвалидность</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Инвалидность" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СерияСправки</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СерияСправки" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НомерСправки</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерСправки" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ДатаВыдачи</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ДатаВыдачи" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; СрокДействияСправки</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СрокДействияСправки" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ГруппаИнвалидности</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ГруппаИнвалидности" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СведенияОСтажеРаботыНаСевере</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.СведенияОСтажеРаботыНаСевере</Наименование>
				<Порядок>950</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СведенияОСтажеРаботыНаСевере</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НачальныйПроцентСевернойНадбавки</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НачальныйПроцентСевернойНадбавки" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПорядокНачисленияСеверныхНадбавок</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПорядокНачисленияСеверныхНадбавок" Вид="Ресурс" Тип="ПеречислениеСсылка.ПорядокНачисленияСеверныхНадбавок"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СемейноеПоложениеФизЛиц_Регистр</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.СемейноеПоложениеФизЛиц</Наименование>
				<Порядок>1000</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СемейноеПоложениеФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; СемейноеПоложение</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СемейноеПоложение" Вид="Ресурс" Тип="СправочникСсылка.СемейноеПоложениеФизЛиц"/>
						<КодПравилаКонвертации>СемейноеПоложениеФизЛиц                           </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СоответствиеСтатейЗатратОтраженияЗарплатыВУчете</Код>
				<Наименование>Справочник: Шаблоны проводок</Наименование>
				<Порядок>1050</Порядок>
				<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.Субконто4Дебета);

Если Отказ = 0 Тогда
	Если глТипВидЗначения(Источник.Субконто4Дебета) &lt;&gt; "Справочник.ЗначенияСубконто" Тогда
		Отказ = 1;
	КонецЕсли;
	Идентификатор = СокрЛП(Источник.Субконто4Дебета.Владелец.Идентификатор);
	Если Идентификатор &lt;&gt; "СтатьиЗатрат" Тогда
		Отказ = 1;
	КонецЕсли;
КонецЕсли;</ПередВыгрузкой>
				<ПриВыгрузке>ВидСтатьиЗатрат = ВходящиеДанные;

СтатьяЗатратНачисления = "";
ШаблонПроводки = Константа.ПроводкаПоУмолчанию;
Для НомерСубконто = 1 По 3 Цикл
	ЗначениеСубконто = ШаблонПроводки.ПолучитьАтрибут("Субконто"+НомерСубконто+"Дебета");
	Если (ПустоеЗначение(ЗначениеСубконто) = 1) ИЛИ (глТипВидЗначения(ЗначениеСубконто) &lt;&gt; "Справочник.ЗначенияСубконто") Тогда
		Продолжить;
	КонецЕсли;
	Идентификатор = СокрЛП(ЗначениеСубконто.Владелец.Идентификатор);
	Если Идентификатор = "СтатьиЗатрат" Тогда
		СтатьяЗатратНачисления = ЗначениеСубконто;
		Прервать;
	КонецЕсли;
КонецЦикла;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("ВидСтатьиЗатрат",		ВидСтатьиЗатрат);
ВходящиеДанные.Установить("СтатьяЗатратНачисления",	СтатьяЗатратНачисления);</ПриВыгрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.ШаблоныПроводок</Источник>
				<Приемник>РегистрСведенийЗапись.СоответствиеСтатейЗатратОтраженияЗарплатыВРеглУчете</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; ВидСтатьиЗатрат</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидСтатьиЗатрат" Вид="Измерение"/>
						<КодПравилаКонвертации>ВидыДополнительныхСтатейЗатрат                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; СтатьяЗатратНачисления</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтатьяЗатратНачисления" Вид="Измерение"/>
						<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Субконто4Дебета --&gt; СтатьяЗатрат</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Субконто4Дебета" Вид="Реквизит"/>
						<Приемник Имя="СтатьяЗатрат" Вид="Ресурс"/>
						<КодПравилаКонвертации>СтатьиЗатрат                                      </КодПравилаКонвертации>
						<ПередВыгрузкой>ИсходящиеДанные = "НалогиИСборы";</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев</Код>
				<Наименование>:</Наименование>
				<Порядок>1100</Порядок>
				<ПередВыгрузкой>КлючВыгружаемыхДанных = "Наша организация"</ПередВыгрузкой>
				<ПриВыгрузке>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Период",			ДатаНачала);
ВходящиеДанные.Установить("Организация",	"Наша организация");</ПриВыгрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Ставка</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Ставка" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>СтатусФизЛицКакНалогоплательщиковНДФЛ</Код>
				<Наименование>:</Наименование>
				<Порядок>1150</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.СтатусФизЛицКакНалогоплательщиковНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Статус</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Статус" Вид="Ресурс" Тип="ПеречислениеСсылка.СтатусыНалогоплательщиковПоНДФЛ"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаНалоговыйУчет</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.УчетнаяПолитикаНалоговыйУчет</Наименование>
				<Порядок>1200</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; СистемаНалогообложения</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СистемаНалогообложения" Вид="Ресурс" Тип="ПеречислениеСсылка.СистемыНалогообложения"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; ОбъектНалогообложенияУСН</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбъектНалогообложенияУСН" Вид="Ресурс" Тип="ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ОрганизацияЯвляетсяПлательщикомЕНВД</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОрганизацияЯвляетсяПлательщикомЕНВД" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете" Вид="Ресурс" Тип="ПеречислениеСсылка.ВариантыУчетаРасходовПоНалогамСФОТВНалоговомУчете"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ВидТарифаСтраховыхВзносов</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидТарифаСтраховыхВзносов" Вид="Ресурс" Тип="ПеречислениеСсылка.ТарифыСтраховыхВзносов"/>
						<КодПравилаКонвертации>ТарифыСтраховыхВзносов                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоНДФЛ</Код>
				<Наименование>:</Наименование>
				<Порядок>1250</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаПоНДФЛ</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ОсобенностиИсчисленияНДФЛ</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОсобенностиИсчисленияНДФЛ" Вид="Ресурс" Тип="ПеречислениеСсылка.ОсобенностиИсчисленияНДФЛ"/>
						<КодПравилаКонвертации>ОсобенностиИсчисленияНДФЛ                         </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоПерсоналуОрганизаций</Код>
				<Наименование>:</Наименование>
				<Порядок>1300</Порядок>
				<ПослеЗагрузки>ВсяУчетнаяПолитика = ОбщегоНазначенияЗК.ЗаполнениеУчетнойПолитикиПоПерсоналуОрганизации();
УчетнаяПолитика = ВсяУчетнаяПолитика[Справочники.Организации.ПустаяСсылка()];
ЗаполнитьЗначенияСвойств(Объект, УчетнаяПолитика, , "КонтрольКоличестваСтавокШтатногоРасписания, КонтрольРазмераСтавокШтатногоРасписания");</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаПоПерсоналуОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КонтрольКоличестваСтавокШтатногоРасписания</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтрольКоличестваСтавокШтатногоРасписания" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; КонтрольРазмераСтавокШтатногоРасписания</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КонтрольРазмераСтавокШтатногоРасписания" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций</Код>
				<Наименование>:</Наименование>
				<Порядок>1350</Порядок>
				<ПослеЗагрузки>ВсяУчетнаяПолитика = ОбщегоНазначенияЗК.ЗаполнениеУчетнойПолитикиПоПерсоналуОрганизации();
УчетнаяПолитика = ВсяУчетнаяПолитика[Справочники.Организации.ПустаяСсылка()];
ЗаполнитьЗначенияСвойств(Объект, УчетнаяПолитика, , "ИспользуютсяНачисленияВВалюте, УчетЗадолженностиПоМесяцам");</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ИспользуютсяНачисленияВВалюте</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИспользуютсяНачисленияВВалюте" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; УчетЗадолженностиПоМесяцам</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="УчетЗадолженностиПоМесяцам" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ПроцентДоплатыЗаРаботуВВечернееВремя</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроцентДоплатыЗаРаботуВВечернееВремя" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; ПроцентДоплатыЗаРаботуВНочноеВремя</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПроцентДоплатыЗаРаботуВНочноеВремя" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УчетОсновногоЗаработкаПодразделенияОрганизации</Код>
				<Наименование>:</Наименование>
				<Порядок>1400</Порядок>
				<ПередВыгрузкой>Отказ = ПустоеЗначение(Источник.ШаблонПроводки);</ПередВыгрузкой>
				<ПриВыгрузке>ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("ПодразделениеОрганизации",		Источник);
ВходящиеДанные.Установить("Период",							НачГода(Параметры.ДатаНачалаУчета));
ВходящиеДанные.Установить("Организация",					?(ПустоеЗначение(Источник) = 0, Источник, "Наша организация"));

Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	ВходящиеДанные.Установить("СпособОтраженияВБухучете",	ПолучитьСпособОтраженияПоШаблону(Источник.ШаблонПроводки));
	ВходящиеДанные.Установить("ПодпадаетПодЕНВД",			Источник.ШаблонПроводки.ПодпадаетПодЕНВД);
Иначе
	ВходящиеДанные.Установить("СтатьяФинансирования",		ПолучитьОтражениеИзШаблона(Источник.ШаблонПроводки));
	ВходящиеДанные.Установить("СтатьяРасходов",				Источник.ШаблонПроводки);
КонецЕсли;</ПриВыгрузке>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Источник>СправочникСсылка.Подразделения</Источник>
				<Приемник>РегистрСведенийЗапись.УчетОсновногоЗаработкаРаботниковПодразделенияОрганизации</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование>--&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>--&gt; Организация</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Измерение" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; СпособОтраженияВБухучете</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СпособОтраженияВБухучете" Вид="Ресурс" Тип="СправочникСсылка.СпособыОтраженияЗарплатыВРеглУчете"/>
						<КодПравилаКонвертации>СпособыОтраженияЗарплатыВРеглУчете                </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>--&gt; ПодпадаетПодЕНВД</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодпадаетПодЕНВД" Вид="Ресурс" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ФИОФизЛиц</Код>
				<Наименование> --&gt; РегистрСведенийЗапись.ФИОФизЛиц</Наименование>
				<Порядок>1450</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ФИОФизЛиц</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; ФизЛицо</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ФизЛицо" Вид="Измерение" Тип="СправочникСсылка.ФизическиеЛица"/>
						<КодПравилаКонвертации>ФизическиеЛица                                    </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Имя</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Имя" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Отчество</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Отчество" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; Фамилия</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Фамилия" Вид="Ресурс" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ШкалаКоэффициентовСтажа</Код>
				<Наименование>:</Наименование>
				<Порядок>1500</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ШкалаКоэффициентовСтажа</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; КоэффициентСтажа</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоэффициентСтажа" Вид="Измерение" Тип="СправочникСсылка.КоэффициентыСтажа"/>
						<КодПравилаКонвертации>КоэффициентыСтажа                                 </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; НомерСтрокиШкалы</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НомерСтрокиШкалы" Вид="Измерение" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; СтажС</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтажС" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; СтажПо</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СтажПо" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; Величина</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Величина" Вид="Ресурс" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ШтатноеРасписаниеОрганизаций</Код>
				<Наименование>СправочникСсылка.ШтатноеРасписание --&gt; РегистрСведенийЗапись.ШтатноеРасписаниеОрганизаций</Наименование>
				<Порядок>1550</Порядок>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ШтатноеРасписаниеОрганизаций</Приемник>
				<Свойства>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Измерение" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Должность</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Должность" Вид="Измерение" Тип="СправочникСсылка.ДолжностиОрганизаций"/>
						<КодПравилаКонвертации>ДолжностиОрганизаций                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; ВидТарифнойСтавки</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВидТарифнойСтавки" Вид="Ресурс" Тип="ПеречислениеСсылка.ВидыТарифныхСтавок"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование> --&gt; МинимальнаяТарифнаяСтавка</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МинимальнаяТарифнаяСтавка" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование> --&gt; МаксимальнаяТарифнаяСтавка</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="МаксимальнаяТарифнаяСтавка" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; КоличествоСтавок</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КоличествоСтавок" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ВалютаТарифнойСтавки</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ВалютаТарифнойСтавки" Вид="Ресурс" Тип="СправочникСсылка.Валюты"/>
						<КодПравилаКонвертации>Валюты                                            </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Планы счетов</Код>
			<Наименование>Планы счетов</Наименование>
			<Порядок>350</Порядок>
			<Правило>
				<Код>ПС</Код>
				<Наименование>:</Наименование>
				<Порядок>50</Порядок>
				<ПередВыгрузкой>Если ПустоеЗначение(Источник) = 1 Тогда
	Возврат 1;
КонецЕсли;

Если ТипЗначенияСтр(Источник) = "Строка" Тогда
	КодСчета = Источник;
Иначе
	КодСчета = Источник.Код;
КонецЕсли;

Если (СтрДлина(КодСчета) = 4) ИЛИ (СтрДлина(КодСчета) = 6) Тогда
	КодСчета = Сред(КодСчета, 1, 3) + "0" + Сред(КодСчета, 4);
КонецЕсли;

ВходящиеДанные = СоздатьОбъект("СписокЗначений");
ВходящиеДанные.Установить("Код", КодСчета);</ПередВыгрузкой>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.ПланСчетов</Источник>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>--&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Правило Отключить="false">
			<Код>Константы</Код>
			<Наименование>Набор констант</Наименование>
			<Порядок>50</Порядок>
			<КодПравилаКонвертации>Константы                                         </КодПравилаКонвертации>
			<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
			<ОбъектВыборки>КонстантыНабор</ОбъектВыборки>
		</Правило>
		<Правило Отключить="false">
			<Код>Организация</Код>
			<Наименование>Организация</Наименование>
			<Порядок>100</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

Источник = "Наша организация";

// Организация
ВыгрузитьПоПравилу(Источник, , , , "Организации");

// Контактная информация организации
// Адрес
Стр = СокрЛП(Константа.АдресОрганизации);

Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложить(Стр);
	РазмерСписка = СпРазбора.РазмерСписка();
			
	Представление = "";
	Для Индекс = 2 По СпРазбора.РазмерСписка() Цикл
		Если ПустоеЗначение(СпРазбора.ПолучитьЗначение(Индекс)) = 0 Тогда
			Представление = Представление + ?(ПустоеЗначение(Представление) = 1, "", ", ")
			+?(Индекс = 8, "дом № ",
			?(Индекс = 9, "корпус ",
			?(Индекс = 10,"кв.", "")))
			+ СпРазбора.ПолучитьЗначение(Индекс);
		КонецЕсли;
	КонецЦикла;
	
	КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
	КонтактнаяИнформация.Установить("Объект",			Источник);
	КонтактнаяИнформация.Установить("Тип",				"Адрес");
	КонтактнаяИнформация.Установить("Вид",				"ЮрАдресОрганизации");
	Если РазмерСписка &gt;= 4 Тогда
		КонтактнаяИнформация.Установить("Поле1",			?(РазмерСписка &gt; 6,  СпРазбора.ПолучитьЗначение(2), ""));
		КонтактнаяИнформация.Установить("Поле2",			?(РазмерСписка &gt; 7,  СпРазбора.ПолучитьЗначение(3), ""));
		КонтактнаяИнформация.Установить("Поле3",			?(РазмерСписка &gt; 8,  СпРазбора.ПолучитьЗначение(4), ""));
		КонтактнаяИнформация.Установить("Поле4",			?(РазмерСписка &gt; 9,  СпРазбора.ПолучитьЗначение(5), ""));
		КонтактнаяИнформация.Установить("Поле5",			?(РазмерСписка &gt; 10, СпРазбора.ПолучитьЗначение(6), ""));
		КонтактнаяИнформация.Установить("Поле6",			СпРазбора.ПолучитьЗначение(РазмерСписка-3));
		КонтактнаяИнформация.Установить("Поле7",			СпРазбора.ПолучитьЗначение(РазмерСписка-2));
		КонтактнаяИнформация.Установить("Поле8",			СпРазбора.ПолучитьЗначение(РазмерСписка-1));
		КонтактнаяИнформация.Установить("Поле9",			СпРазбора.ПолучитьЗначение(РазмерСписка));
	КонецЕсли;
	КонтактнаяИнформация.Установить("Представление",	Представление);
	КонтактнаяИнформация.Установить("ТипОбъекта",		"Орг");
		
	ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
КонецЕсли;

// Телефон
Стр = СокрЛП(Константа.ТелефоныОрганизации);
Если ПустаяСтрока(Стр) = 0 Тогда
	КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
	КонтактнаяИнформация.Установить("Объект",			Источник);
	КонтактнаяИнформация.Установить("Тип",				"Телефон");
	КонтактнаяИнформация.Установить("Вид",				"ТелефонОрганизации");
	КонтактнаяИнформация.Установить("Поле3",			СокрЛП(Стр));
	КонтактнаяИнформация.Установить("Представление",	СокрЛП(Стр));
	КонтактнаяИнформация.Установить("ТипОбъекта",		"Орг");
	
	ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
КонецЕсли;	

// Ответственные лица организации.
ПерРеквизит = СоздатьОбъект("Периодический");

ПерРеквизит.ИспользоватьОбъект("Руководитель");
ПерРеквизит.ВыбратьЗначения();
Пока ПерРеквизит.ПолучитьЗначение() &gt; 0 Цикл
	Если (ПустоеЗначение(ПерРеквизит.Значение) = 1) Тогда
		Продолжить;
	КонецЕсли;
	
	Должность			= ЗначениеПериодическогоРеквизитаНаНачало("Должность", ПерРеквизит.Значение, ПерРеквизит.ДатаЗнач);
	
	ОтветственноеЛицо = СоздатьОбъект("СписокЗначений");
	ОтветственноеЛицо.Установить("Период",				ПерРеквизит.ДатаЗнач);
	ОтветственноеЛицо.Установить("СтруктурнаяЕдиница",	Источник);
	ОтветственноеЛицо.Установить("ОтветственноеЛицо",	"Руководитель");
	ОтветственноеЛицо.Установить("ФизическоеЛицо",		ПерРеквизит.Значение);
	ОтветственноеЛицо.Установить("Должность",			Должность);
	
	ВыгрузитьПоПравилу(ОтветственноеЛицо, , , , "ОтветственныеЛицаОрганизаций");
КонецЦикла;

ПерРеквизит.ИспользоватьОбъект("ГлБухгалтер");
ПерРеквизит.ВыбратьЗначения();
Пока ПерРеквизит.ПолучитьЗначение() &gt; 0 Цикл
	Если (ПустоеЗначение(ПерРеквизит.Значение) = 1) Тогда
		Продолжить;
	КонецЕсли;
	
	Должность			= ЗначениеПериодическогоРеквизитаНаНачало("Должность", ПерРеквизит.Значение, ПерРеквизит.ДатаЗнач);
	
	ОтветственноеЛицо = СоздатьОбъект("СписокЗначений");
	ОтветственноеЛицо.Установить("Период",				ПерРеквизит.ДатаЗнач);
	ОтветственноеЛицо.Установить("СтруктурнаяЕдиница",	Источник);
	ОтветственноеЛицо.Установить("ОтветственноеЛицо",	"ГлавныйБухгалтер");
	ОтветственноеЛицо.Установить("ФизическоеЛицо",		ПерРеквизит.Значение);
	ОтветственноеЛицо.Установить("Должность",			Должность);
	
	ВыгрузитьПоПравилу(ОтветственноеЛицо, , , , "ОтветственныеЛицаОрганизаций");
КонецЦикла;

ФизЛицо	= Константа.НачОтделаКадров;
Если ФизЛицо.Выбран() = 1 Тогда
	Должность			= ЗначениеПериодическогоРеквизитаНаНачало("Должность", ФизЛицо, ДатаОкончания);
	
	ОтветственноеЛицо = СоздатьОбъект("СписокЗначений");
	ОтветственноеЛицо.Установить("Период",				?(ПустоеЗначение(ДатаНачала) = 0, ДатаНачала, Дата(1980, 1, 1)));
	ОтветственноеЛицо.Установить("СтруктурнаяЕдиница",	Источник);
	ОтветственноеЛицо.Установить("ОтветственноеЛицо",	"РуководительКадровойСлужбы");
	ОтветственноеЛицо.Установить("ФизическоеЛицо",		ФизЛицо);
	ОтветственноеЛицо.Установить("Должность",			Должность);
	
	ВыгрузитьПоПравилу(ОтветственноеЛицо, , , , "ОтветственныеЛицаОрганизаций");
КонецЕсли;


// Право применения льгот по ЕСН
ПерРеквизит = СоздатьОбъект("Периодический");
ПерРеквизит.ИспользоватьОбъект("ОрганизацияИнвалидов");
ПерРеквизит.ВыбратьЗначения();
Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
	ЛьготаПоЕСН = СоздатьОбъект("СписокЗначений");
	ЛьготаПоЕСН.Установить("Период",		НачМесяца(ПерРеквизит.ДатаЗнач));
	ЛьготаПоЕСН.Установить("ПравоНаЛьготы",	ПерРеквизит.Значение);
	
	ВыгрузитьПоПравилу(ЛьготаПоЕСН, , , , "ПравоПримененияЛьготПоЕСН");
КонецЦикла;


// Ставка взноса на страхование от несчастных случаев
СпрДополнительныеПроводки = СоздатьОбъект("Справочник.ДополнительныеПроводки");
Если СпрДополнительныеПроводки.НайтиПоКоду("ФСС_НС") = 1 Тогда
	Ставка = СоздатьОбъект("СписокЗначений");
	Ставка.Установить("Ставка",	СпрДополнительныеПроводки.ПроцентОтРасчетнойБазы);
	
	ВыгрузитьПоПравилу(Ставка, , , , "СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев");
КонецЕсли;

// Учетная политика по персоналу
УчетнаяПолитикаПоПерсоналу = СоздатьОбъект("СписокЗначений");
УчетнаяПолитикаПоПерсоналу.Установить("Организация",								Источник);
УчетнаяПолитикаПоПерсоналу.Установить("ИспользуютсяНачисленияВВалюте",				Константа.ЕстьРасчетыВВалюте);
УчетнаяПолитикаПоПерсоналу.Установить("КонтрольКоличестваСтавокШтатногоРасписания",	Константа.ЕстьШтатное);
УчетнаяПолитикаПоПерсоналу.Установить("КонтрольРазмераСтавокШтатногоРасписания",	Константа.ЕстьШтатное);
УчетнаяПолитикаПоПерсоналу.Установить("УчетЗадолженностиПоМесяцам",					Параметры.УчетЗадолженностиПоМесяцам);
УчетнаяПолитикаПоПерсоналу.Установить("ПроцентДоплатыЗаРаботуВВечернееВремя",		(Константа.КоэффициентДоплатыЗаРаботуВВечернееВремя - 1) * 100);
УчетнаяПолитикаПоПерсоналу.Установить("ПроцентДоплатыЗаРаботуВНочноеВремя",			(Константа.КоэффициентДоплатыЗаРаботуВНочноеВремя - 1) * 100);

ВыгрузитьПоПравилу(УчетнаяПолитикаПоПерсоналу, , , , "УчетнаяПолитикаПоПерсоналуОрганизаций");
ВыгрузитьПоПравилу(УчетнаяПолитикаПоПерсоналу, , , , "УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций");

// Учетная политика по налоговому учету
ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = "НаСчетахРасходовНаОплатуТруда";

СпрВидыРасчетов = СоздатьОбъект("Справочник.ВидыРасчетов");
СпрВидыРасчетов.ВыбратьЭлементы();
Пока СпрВидыРасчетов.ПолучитьЭлемент() = 1 Цикл 
	Если	(СпрВидыРасчетов.Расчет = ВидРасчета.ПФР)
		ИЛИ	(СпрВидыРасчетов.Расчет = ВидРасчета.ПФРНакопительнаяЧасть)
		ИЛИ	(СпрВидыРасчетов.Расчет = ВидРасчета.ПФРСтраховаяЧасть)
		ИЛИ	(СпрВидыРасчетов.Расчет = ВидРасчета.ТФОМС)
		ИЛИ	(СпрВидыРасчетов.Расчет = ВидРасчета.ФФОМС)
		ИЛИ	(СпрВидыРасчетов.Расчет = ВидРасчета.ФСС) Тогда
		Если СпрВидыРасчетов.ПорядокОтраженияВНУ = Перечисление.ПорядокОтраженияНалоговНУ.КосвенныеРасходы Тогда
			ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете = "НаСчетахЗатратСоответствующихСчетамБухУчета";
			Прервать;
		КонецЕсли;	
	КонецЕсли;	
КонецЦикла;

// Учетную политику необходимо переносить за каждый год. От этого зависит результаты отчетов по ЕСН
// И формирование документов по отражению в учете
Для ТекущийГод = ДатаГод(ДатаНачала) По Мин(ДатаГод(ДатаОкончания), 2009) Цикл
	ПериодРегистрации = Дата(ТекущийГод, 1, 1);

	УчетнаяПолитикаНалоговыйУчет = СоздатьОбъект("СписокЗначений");
	УчетнаяПолитикаНалоговыйУчет.Установить("Организация",										Источник);
	УчетнаяПолитикаНалоговыйУчет.Установить("Период",											ПериодРегистрации);
	УчетнаяПолитикаНалоговыйУчет.Установить("СистемаНалогообложения",							?(глЕстьУСН(ПериодРегистрации) = 1, "Упрощенная", "Общая"));
	УчетнаяПолитикаНалоговыйУчет.Установить("ОбъектНалогообложенияУСН",							?(глЕстьУСН(ПериодРегистрации) = 1, "Доходы", ""));
	УчетнаяПолитикаНалоговыйУчет.Установить("ОрганизацияЯвляетсяПлательщикомЕНВД",				Константа.ЕстьЕНВД);
	УчетнаяПолитикаНалоговыйУчет.Установить("ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете",	ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете);
	УчетнаяПолитикаНалоговыйУчет.Установить("ВидТарифаСтраховыхВзносов",						"");
	ВыгрузитьПоПравилу(УчетнаяПолитикаНалоговыйУчет, , , , "УчетнаяПолитикаНалоговыйУчет");
КонецЦикла;
Для ТекущийГод = Макс(ДатаГод(ДатаНачала), 2010) По Макс(ДатаГод(ДатаОкончания), 2010) Цикл
	ПериодРегистрации = Дата(ТекущийГод, 1, 1);

	ТарифСтраховыхВзносов = Константа.ТарифСтраховыхВзносов.Получить(ПериодРегистрации);
	Если ПустоеЗначение(ТарифСтраховыхВзносов) = 1 Тогда
		ОрганизацияИнвалидов = Константа.ОрганизацияИнвалидов.Получить(ПериодРегистрации);
		
		Если ОрганизацияИнвалидов = 1 Тогда
			ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов;    
		Иначе
			НалоговыйРежим =  глОсобыйНалоговыйРежим(ПериодРегистрации);
			//		0 - организация обычная
			//		1 - организация с УСН, не уплачивающая добровольные взносы
			//		2 - организация с ЕНВД, не уплачивающая добровольные взносы
			//		3 - организация с УСН с ЕНВД, не уплачивающая добровольные взносы
			//		10 - организация с УСН, уплачивающая добровольные взносы
			//		20 - организация с ЕНВД, уплачивающая добровольные взносы
			//		30 - организация с УСН с ЕНВД, уплачивающая добровольные взносы
			Если (НалоговыйРежим = 0) или (НалоговыйРежим = 2) или (НалоговыйРежим = 20)  Тогда
				ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим;	
			Иначе
				ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим;	
			КонецЕсли; 
			
			Если ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим Тогда
			    Если глКатегорияПФР()  = Перечисление.КатегорияПлательщикаПФ.СХ Тогда
			    	ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.СельХозПроизводители;    
			    КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	УчетнаяПолитикаНалоговыйУчет = СоздатьОбъект("СписокЗначений");
	УчетнаяПолитикаНалоговыйУчет.Установить("Организация",										Источник);
	УчетнаяПолитикаНалоговыйУчет.Установить("Период",											ПериодРегистрации);
	УчетнаяПолитикаНалоговыйУчет.Установить("СистемаНалогообложения",							?(ЕстьУСН2010(ТарифСтраховыхВзносов) = 1, "Упрощенная", "Общая"));
	УчетнаяПолитикаНалоговыйУчет.Установить("ОбъектНалогообложенияУСН",							?(ЕстьУСН2010(ТарифСтраховыхВзносов) = 1, "Доходы", ""));
	УчетнаяПолитикаНалоговыйУчет.Установить("ОрганизацияЯвляетсяПлательщикомЕНВД",				Константа.ЕстьЕНВД);
	УчетнаяПолитикаНалоговыйУчет.Установить("ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете",	ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете);
	УчетнаяПолитикаНалоговыйУчет.Установить("ВидТарифаСтраховыхВзносов",						ТарифСтраховыхВзносов);
	ВыгрузитьПоПравилу(УчетнаяПолитикаНалоговыйУчет, , , , "УчетнаяПолитикаНалоговыйУчет");
	
	// Тариф страховых взносов может меняться раз в месяц
	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	ПредыдущийТарифСтраховыхВзносов = ТарифСтраховыхВзносов;
	Для ТекущийМесяц = Макс(ДатаМесяц(ДатаНачалаТекущегоГода), 2) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
		ПериодРегистрацииМесяц = Дата(ТекущийГод, ТекущийМесяц, 1);
		
		ТарифСтраховыхВзносов = Константа.ТарифСтраховыхВзносов.Получить(ПериодРегистрацииМесяц);
		Если (ТарифСтраховыхВзносов = ПредыдущийТарифСтраховыхВзносов) ИЛИ (ПустоеЗначение(ТарифСтраховыхВзносов) = 1) Тогда
			Продолжить;
		КонецЕсли;
		
		УчетнаяПолитикаНалоговыйУчет = СоздатьОбъект("СписокЗначений");
		УчетнаяПолитикаНалоговыйУчет.Установить("Организация",										Источник);
		УчетнаяПолитикаНалоговыйУчет.Установить("Период",											ПериодРегистрацииМесяц);
		УчетнаяПолитикаНалоговыйУчет.Установить("ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете",	ВариантУчетаРасходовПоНалогамСФОТВНалоговомУчете);
		УчетнаяПолитикаНалоговыйУчет.Установить("ОрганизацияЯвляетсяПлательщикомЕНВД",				Константа.ЕстьЕНВД);
		УчетнаяПолитикаНалоговыйУчет.Установить("СистемаНалогообложения",							?(ЕстьУСН2010(ТарифСтраховыхВзносов) = 1, "Упрощенная", "Общая"));
		УчетнаяПолитикаНалоговыйУчет.Установить("ВидТарифаСтраховыхВзносов",						ТарифСтраховыхВзносов);
		ВыгрузитьПоПравилу(УчетнаяПолитикаНалоговыйУчет, , , , "УчетнаяПолитикаНалоговыйУчет");
		
		ПредыдущийТарифСтраховыхВзносов = ТарифСтраховыхВзносов;
	КонецЦикла;
	
КонецЦикла;


// Учетная политика по НДФЛ
Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	ПерРеквизит = СоздатьОбъект("Периодический");
	ПерРеквизит.ИспользоватьОбъект("УчетнаяПолитикаПоНДФЛ");
	ПерРеквизит.ВыбратьЗначения();
	Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
		УчетнаяПолитикаНДФЛ = СоздатьОбъект("СписокЗначений");
		УчетнаяПолитикаНДФЛ.Установить("Организация",				Источник);
		УчетнаяПолитикаНДФЛ.Установить("Период",					НачГода(ПерРеквизит.ДатаЗнач));
		УчетнаяПолитикаНДФЛ.Установить("ОсобенностиИсчисленияНДФЛ",	ПерРеквизит.Значение);
		
		ВыгрузитьПоПравилу(УчетнаяПолитикаНДФЛ, , , , "УчетнаяПолитикаПоНДФЛ");
	КонецЦикла;
КонецЕсли;

// Соответствие статей затрат в регл учете
Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	Если ПустоеЗначение(Константа.ПроводкаПоУмолчанию) = 0 Тогда
		ВыгрузитьПоПравилу(Константа.ПроводкаПоУмолчанию, , "ЕСН", , "СоответствиеСтатейЗатратОтраженияЗарплатыВУчете");
		ВыгрузитьПоПравилу(Константа.ПроводкаПоУмолчанию, , "ПФР", , "СоответствиеСтатейЗатратОтраженияЗарплатыВУчете");
		ВыгрузитьПоПравилу(Константа.ПроводкаПоУмолчанию, , "ФСС_НС", , "СоответствиеСтатейЗатратОтраженияЗарплатыВУчете");
		ВыгрузитьПоПравилу(Константа.ПроводкаПоУмолчанию, , "ФСС_БЛ", , "СоответствиеСтатейЗатратОтраженияЗарплатыВУчете");
	КонецЕсли;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>КадровыеДанные</Код>
			<Наименование>Кадровые данные (за все время)</Наименование>
			<Порядок>150</Порядок>
			<КодПравилаКонвертации>КадровыеДанные                                    </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ДатаНачалаУчета	= Параметры.ДатаНачалаУчета;

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

ВыборкаДанныхРаботникиОрганизаций			= СоздатьТЗРаботникиОрганизаций();
ВыборкаДанныхЗанятыеШтатныеЕдиницы			= СоздатьТЗЗанятыеШтатныеЕдиницыОрганизаций();

ВыборкаДанныхВременноПрибывающиеРаботники = СоздатьОбъект("ТаблицаЗначений");
ВыборкаДанныхВременноПрибывающиеРаботники.НоваяКолонка("Физлицо");
ВыборкаДанныхВременноПрибывающиеРаботники.НоваяКолонка("Организация");
ВыборкаДанныхВременноПрибывающиеРаботники.НоваяКолонка("Период");
ВыборкаДанныхВременноПрибывающиеРаботники.НоваяКолонка("ПринятПоДолгосрочномуДоговору");


СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
СпрСотрудники.ВыбратьЭлементы();
Пока СпрСотрудники.ПолучитьЭлемент() = 1 Цикл
	Если СпрСотрудники.ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	Сотрудник	= СпрСотрудники.ТекущийЭлемент();
	
	Если (ПустоеЗначение(Параметры.ФизическоеЛицоДляОтладкиВыгрузки) = 0) И (Параметры.ФизическоеЛицоДляОтладкиВыгрузки &lt;&gt; Сотрудник) Тогда
		Продолжить;
	КонецЕсли;
	
	Если ПустоеЗначение(глРаботалСотрудник(Сотрудник, ДатаНачала, ДатаОкончания)) = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	Состояние("Кадровые данные: " + Сотрудник);
	
	РаботникиОрганизаций = СоздатьТЗРаботникиОрганизаций();
	РаботникиОрганизаций.НоваяКолонка("ПодразделениеОрганизацииБыло");
	РаботникиОрганизаций.НоваяКолонка("ДолжностьБыло");
	РаботникиОрганизаций.НоваяКолонка("ЗанимаемыхСтавокБыло");

	Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
		ВоинскиеИСпециальныеЗвания = СоздатьОбъект("ТаблицаЗначений");
		ВоинскиеИСпециальныеЗвания.НоваяКолонка("Период");
		ВоинскиеИСпециальныеЗвания.НоваяКолонка("Физлицо");
		ВоинскиеИСпециальныеЗвания.НоваяКолонка("Звание");

		КлассныеЧиныДипломатическиеРангиФизлиц = СоздатьОбъект("ТаблицаЗначений");
		КлассныеЧиныДипломатическиеРангиФизлиц.НоваяКолонка("Период");
		КлассныеЧиныДипломатическиеРангиФизлиц.НоваяКолонка("Физлицо");
		КлассныеЧиныДипломатическиеРангиФизлиц.НоваяКолонка("КлассныйЧин");
	КонецЕсли;
	
	ПерРеквизит = СоздатьОбъект("Периодический");
	ПерРеквизит.ИспользоватьОбъект("", Сотрудник);
	ПерРеквизит.ВыбратьЗначения(, ДатаОкончания);
	Пока ПерРеквизит.ПолучитьЗначение() &gt; 0 Цикл
		Если (ПустоеЗначение(ПерРеквизит.ДатаЗнач) = 1) ИЛИ (ПерРеквизит.ДатаЗнач &gt; ДатаНачалаУчета) Тогда
			Продолжить;
		КонецЕсли;

		Документ = ПерРеквизит.ТекущийДокумент();
		Реквизит = ПерРеквизит.ТекущийРеквизит();
		
		Если (ПустоеЗначение(ПерРеквизит.Значение) = 1) И (Реквизит &lt;&gt; "СостояниеФизлица") Тогда
			Продолжить;
		КонецЕсли;
		
		Если (ПустоеЗначение(Документ) = 0)
			И (Документ.Вид() &lt;&gt; "ПриказОПриемеНаРаботу")
			И (Документ.Вид() &lt;&gt; "ПриказОЗачисленииВСпискиЧасти")
			И (Документ.Вид() &lt;&gt; "КадровоеПеремещение")
			И (Документ.Вид() &lt;&gt; "КадровоеПеремещениеВоеннослужащего")
			И (Документ.Вид() &lt;&gt; "ПриказОбУвольнении")
			И (Документ.Вид() &lt;&gt; "ПриказОбИсключенииИзСписковЧасти")
			И (Документ.Вид() &lt;&gt; "ПерерасчетОкладовПоПредприятию")
			И (Документ.Вид() &lt;&gt; "СведенияДляРасчетаСтраховыхВзносов") Тогда
			Продолжить;
		КонецЕсли;
		
		Если	(Реквизит = "Подразделение")
			ИЛИ	(Реквизит = "Должность")
			ИЛИ	(Реквизит = "ГрафикРаботы")
			ИЛИ	(Реквизит = "Ставка")
			ИЛИ	(Реквизит = "Оклад")
			ИЛИ	(Реквизит = "СостояниеФизлица") 
			ИЛИ	(Реквизит = "ДолгосрочныйДоговорСИностранцем") Тогда
			
			ЭтоПриемНаРаботу			= 0;
			ЭтоУвольнение				= 0;
			Если (Документ.Вид() = "ПриказОПриемеНаРаботу") ИЛИ (Документ.Вид() = "ПриказОЗачисленииВСпискиЧасти") Тогда
				Если Документ.ДатаПриема = ПерРеквизит.ДатаЗнач Тогда
					ЭтоПриемНаРаботу	= 1;
				Иначе
					ЭтоУвольнение		= 1;
				КонецЕсли;
			
			ИначеЕсли (Документ.Вид() = "ПриказОбУвольнении") ИЛИ (Документ.Вид() = "ПриказОбИсключенииИзСписковЧасти") Тогда
				ЭтоУвольнение			= 1;
				
			КонецЕсли;
			
			ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, ПерРеквизит.ДатаЗнач-ЭтоУвольнение);
			
			// Если у сотрудника нет вида договора, значит кадровый документ по нему оформлять не нужно
			Если СотрудникБезДоговора(ТекущийСотрудник) = 1 Тогда
				Продолжить;
			КонецЕсли;

			Если Реквизит = "ДолгосрочныйДоговорСИностранцем" Тогда
				ВыборкаДанныхВременноПрибывающиеРаботники.НоваяСтрока();
				ВыборкаДанныхВременноПрибывающиеРаботники.ФизЛицо						= ТекущийСотрудник.Получить("Физлицо");
				ВыборкаДанныхВременноПрибывающиеРаботники.Организация					= ТекущийСотрудник.Получить("ОбособленноеПодразделение");
				ВыборкаДанныхВременноПрибывающиеРаботники.Период						= ПерРеквизит.ДатаЗнач;
				ВыборкаДанныхВременноПрибывающиеРаботники.ПринятПоДолгосрочномуДоговору	= ПерРеквизит.Значение;
				Продолжить;
			КонецЕсли;
			
			СтрокаНайдена = 0;
			РаботникиОрганизаций.ВыбратьСтроки();
			Пока РаботникиОрганизаций.ПолучитьСтроку() = 1 Цикл
				Если РаботникиОрганизаций.Период &lt;&gt; ПерРеквизит.ДатаЗнач Тогда
					Продолжить;
				КонецЕсли;
				
				НайденныйСотрудник = РаботникиОрганизаций.Сотрудник;
				
				Если	(НайденныйСотрудник.Получить("ВидДоговора") &lt;&gt; ТекущийСотрудник.Получить("ВидДоговора"))
					ИЛИ	(НайденныйСотрудник.Получить("ВидЗанятости") &lt;&gt; ТекущийСотрудник.Получить("ВидЗанятости"))
					ИЛИ	(НайденныйСотрудник.Получить("НомерДоговора") &lt;&gt; ТекущийСотрудник.Получить("НомерДоговора"))
					ИЛИ	(НайденныйСотрудник.Получить("ДатаДоговора") &lt;&gt; ТекущийСотрудник.Получить("ДатаДоговора"))
				Тогда
					Продолжить;
				КонецЕсли;
				
				СтрокаНайдена = 1;
				Прервать;
			КонецЦикла;
			
			Если СтрокаНайдена = 0 Тогда
				// Подразделение
				Подразделение				= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Сотрудник, ПерРеквизит.ДатаЗнач-1);
				
				// Должность
				Должность					= ЗначениеПериодическогоРеквизитаНаНачало("Должность", Сотрудник, ПерРеквизит.ДатаЗнач-1);
				
				// ГрафикРаботы
				ГрафикРаботы				= ЗначениеПериодическогоРеквизитаНаНачало("ГрафикРаботы", Сотрудник, ПерРеквизит.ДатаЗнач-1);
				Если ПустоеЗначение(ГрафикРаботы) = 1 Тогда
					ГрафикРаботы = Константа.ОсновнойГрафик;
				КонецЕсли;
				
				// Занимаемых ставок
				ЗанимаемыхСтавок			= ЗначениеПериодическогоРеквизитаНаНачало("Ставка", Сотрудник, ПерРеквизит.ДатаЗнач-1);
				
				РаботникиОрганизаций.НоваяСтрока();
				РаботникиОрганизаций.Период							= ПерРеквизит.ДатаЗнач;
				РаботникиОрганизаций.Сотрудник						= ТекущийСотрудник;
				РаботникиОрганизаций.Организация					= "Наша организация";
				РаботникиОрганизаций.ОбособленноеПодразделение		= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
				РаботникиОрганизаций.ПодразделениеОрганизации		= Подразделение;
				РаботникиОрганизаций.Должность						= Должность;
				РаботникиОрганизаций.ГрафикРаботы					= ГрафикРаботы;
				РаботникиОрганизаций.ЗанимаемыхСтавок				= ЗанимаемыхСтавок;
				РаботникиОрганизаций.ПричинаИзмененияСостояния		= "Перемещение";
				
				РаботникиОрганизаций.ПодразделениеОрганизацииБыло	= Подразделение;
				РаботникиОрганизаций.ДолжностьБыло					= Должность;
				РаботникиОрганизаций.ЗанимаемыхСтавокБыло			= ЗанимаемыхСтавок;
				
				РаботникиОрганизаций.ПервичныйДокумент				= Документ;
			КонецЕсли;
			
			Если Реквизит = "Подразделение" Тогда
				РаботникиОрганизаций.ПодразделениеОрганизации		= ПерРеквизит.Значение;
				РаботникиОрганизаций.ОбособленноеПодразделение		= ?(ПустоеЗначение(ПерРеквизит.Значение) = 0, ПерРеквизит.Значение, "Наша организация");
				
			ИначеЕсли Реквизит = "Должность" Тогда
				РаботникиОрганизаций.Должность						= ПерРеквизит.Значение;

			ИначеЕсли Реквизит = "ГрафикРаботы" Тогда
				РаботникиОрганизаций.ГрафикРаботы					= ПерРеквизит.Значение;
				
			ИначеЕсли Реквизит = "Ставка" Тогда
				РаботникиОрганизаций.ЗанимаемыхСтавок				= ПерРеквизит.Значение;
				
			ИначеЕсли Реквизит = "СостояниеФизлица" Тогда
				Если	((ЭтоПриемНаРаботу = 1) И (РаботникиОрганизаций.ПричинаИзмененияСостояния = "Увольнение"))
					ИЛИ	((ЭтоУвольнение = 1) И (РаботникиОрганизаций.ПричинаИзмененияСостояния = "ПриемНаРаботу"))
					Тогда
					// Если было увольнение и прием на работу в один день
					// Необходимо создать вторую запись
					ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, ПерРеквизит.ДатаЗнач);
					
					// Надо создавать еще одну запись
					ОбособленноеПодразделение	= РаботникиОрганизаций.ОбособленноеПодразделение;
					ПодразделениеОрганизации	= РаботникиОрганизаций.ПодразделениеОрганизации;
					Должность					= РаботникиОрганизаций.Должность;
					ГрафикРаботы				= РаботникиОрганизаций.ГрафикРаботы;
					ЗанимаемыхСтавок			= РаботникиОрганизаций.ЗанимаемыхСтавок;
					
					РаботникиОрганизаций.НоваяСтрока();
					РаботникиОрганизаций.Период							= ПерРеквизит.ДатаЗнач;
					РаботникиОрганизаций.Сотрудник						= ТекущийСотрудник;
					РаботникиОрганизаций.Организация					= "Наша организация";
					РаботникиОрганизаций.ОбособленноеПодразделение		= Подразделение;
					РаботникиОрганизаций.ПодразделениеОрганизации		= Подразделение;
					РаботникиОрганизаций.Должность						= Должность;
					РаботникиОрганизаций.ГрафикРаботы					= ГрафикРаботы;
					РаботникиОрганизаций.ЗанимаемыхСтавок				= ЗанимаемыхСтавок;
					
					РаботникиОрганизаций.ПодразделениеОрганизацииБыло	= Подразделение;
					РаботникиОрганизаций.ДолжностьБыло					= Должность;
					РаботникиОрганизаций.ЗанимаемыхСтавокБыло			= ЗанимаемыхСтавок;
					
					РаботникиОрганизаций.ПервичныйДокумент				= Документ;
				КонецЕсли;
					
				Если ЭтоПриемНаРаботу = 1 Тогда
					ЗанимаемыхСтавок = ЗначениеПериодическогоРеквизитаНаНачало("Ставка", Сотрудник, ПерРеквизит.ДатаЗнач);
					РаботникиОрганизаций.ЗанимаемыхСтавок				= ЗанимаемыхСтавок;
					РаботникиОрганизаций.ПричинаИзмененияСостояния		= "ПриемНаРаботу";
				ИначеЕсли ЭтоУвольнение = 1 Тогда
					РаботникиОрганизаций.ЗанимаемыхСтавок				= 0;
					РаботникиОрганизаций.ПричинаИзмененияСостояния		= "Увольнение";
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
			Если (Реквизит = "РазрядЗваниеЧин") Тогда
				ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, ПерРеквизит.ДатаЗнач-ЭтоУвольнение);
				
				// Если у сотрудника нет вида договора, значит кадровый документ по нему оформлять не нужно
				Если СотрудникБезДоговора(ТекущийСотрудник) = 1 Тогда
					Продолжить;
				КонецЕсли;

				ВидДоговора = ТекущийСотрудник.Получить("ВидДоговора");
				
				Если (ВидДоговора = "ВоеннаяСлужбаПоПризыву") ИЛИ (ВидДоговора = "ВоеннаяСлужбаПоКонтракту") Тогда
					РазрядыЧиныЗвания = ВоинскиеИСпециальныеЗвания;
				Иначе
					РазрядыЧиныЗвания = КлассныеЧиныДипломатическиеРангиФизлиц;
				КонецЕсли;
				
				НомерСтроки = 0;
				Если РазрядыЧиныЗвания.НайтиЗначение(ПерРеквизит.ДатаЗнач, НомерСтроки, "Период") = 1 Тогда
					РазрядыЧиныЗвания.ПолучитьСтрокуПоНомеру(НомерСтроки);
				Иначе
					РазрядыЧиныЗвания.НоваяСтрока();
					РазрядыЧиныЗвания.Период						= ПерРеквизит.ДатаЗнач;
					РазрядыЧиныЗвания.Физлицо						= СпрСотрудники.ОсновнойЭлемент;
				КонецЕсли;
				
				Если (ВидДоговора = "ВоеннаяСлужбаПоПризыву") ИЛИ (ВидДоговора = "ВоеннаяСлужбаПоКонтракту") Тогда
					РазрядыЧиныЗвания.Звание						= ПерРеквизит.Значение;
				Иначе
					РазрядыЧиныЗвания.КлассныйЧин					= ПерРеквизит.Значение;
				КонецЕсли;

			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;

	РаботникиОрганизаций.Сортировать("Период");
	
	// Необходимо исправить полученные записи:
	// - Удалить "лишние" увольнения
	// - Удалить перемещения после увольнения
	ИсправлятьЗаписи = 1;
	Пока ИсправлятьЗаписи = 1 Цикл
		ИсправлятьЗаписи = 0;
		
		НайденоУвольнение = 0;
		РаботникиОрганизаций.ВыбратьСтроки();
		Пока РаботникиОрганизаций.ПолучитьСтроку() = 1 Цикл
			Если НайденоУвольнение = 1 Тогда
				НайденоУвольнение = 0;
				Если РаботникиОрганизаций.ПричинаИзмененияСостояния &lt;&gt; "ПриемНаРаботу" Тогда
					РаботникиОрганизаций.УдалитьСтроку();
					ИсправлятьЗаписи = 1;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Если РаботникиОрганизаций.ПричинаИзмененияСостояния = "Увольнение" Тогда
				НайденоУвольнение = 1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ЗанятыеШтатныеЕдиницыОрганизаций = СоздатьТЗЗанятыеШтатныеЕдиницыОрганизаций();
	
	РаботникиОрганизаций.ВыбратьСтроки();
	Пока РаботникиОрганизаций.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(РаботникиОрганизаций.ЗанимаемыхСтавокБыло) = 0 Тогда
			ЗанятыеШтатныеЕдиницыОрганизаций.НоваяСтрока();
			ЗанятыеШтатныеЕдиницыОрганизаций.Период						= РаботникиОрганизаций.Период;
			ЗанятыеШтатныеЕдиницыОрганизаций.ВидДвижения				= "Расход";
			ЗанятыеШтатныеЕдиницыОрганизаций.ПодразделениеОрганизации	= РаботникиОрганизаций.ПодразделениеОрганизацииБыло;
			ЗанятыеШтатныеЕдиницыОрганизаций.Должность					= РаботникиОрганизаций.ДолжностьБыло;
			ЗанятыеШтатныеЕдиницыОрганизаций.КоличествоСтавок			= РаботникиОрганизаций.ЗанимаемыхСтавокБыло;
		КонецЕсли;
		
		Если ПустоеЗначение(РаботникиОрганизаций.ЗанимаемыхСтавок) = 0 Тогда
			ЗанятыеШтатныеЕдиницыОрганизаций.НоваяСтрока();
			ЗанятыеШтатныеЕдиницыОрганизаций.Период							= РаботникиОрганизаций.Период;
			ЗанятыеШтатныеЕдиницыОрганизаций.ВидДвижения					= "Приход";
			ЗанятыеШтатныеЕдиницыОрганизаций.ПодразделениеОрганизации		= РаботникиОрганизаций.ПодразделениеОрганизации;
			ЗанятыеШтатныеЕдиницыОрганизаций.Должность						= РаботникиОрганизаций.Должность;
			ЗанятыеШтатныеЕдиницыОрганизаций.КоличествоСтавок				= РаботникиОрганизаций.ЗанимаемыхСтавок;
		КонецЕсли;
	КонецЦикла;
	
	ЗанятыеШтатныеЕдиницыОрганизаций.Сортировать("Период");
	
	глПереписатьИзТаблицыВТаблицу(РаботникиОрганизаций, ВыборкаДанныхРаботникиОрганизаций);
	РаботникиОрганизаций = 0;
	
	глПереписатьИзТаблицыВТаблицу(ЗанятыеШтатныеЕдиницыОрганизаций, ВыборкаДанныхЗанятыеШтатныеЕдиницы);
	ЗанятыеШтатныеЕдиницыОрганизаций = 0;
	
	Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
		ВоинскиеИСпециальныеЗвания.ВыбратьСтроки();
		Пока ВоинскиеИСпециальныеЗвания.ПолучитьСтроку() = 1 Цикл
			ВыгрузитьПоПравилу(ВоинскиеИСпециальныеЗвания, , , , "ВоинскиеИСпециальныеЗвания_Регистр");
		КонецЦикла;

		КлассныеЧиныДипломатическиеРангиФизлиц.ВыбратьСтроки();
		Пока КлассныеЧиныДипломатическиеРангиФизлиц.ПолучитьСтроку() = 1 Цикл
			ВыгрузитьПоПравилу(КлассныеЧиныДипломатическиеРангиФизлиц, , , , "КлассныеЧиныДипломатическиеРангиФизлиц_Регистр");
		КонецЦикла;
	КонецЕсли;
	
КонецЦикла;

ВыборкаДанныхВременноПрибывающиеРаботники.ВыбратьСтроки();
Пока ВыборкаДанныхВременноПрибывающиеРаботники.ПолучитьСтроку() = 1 Цикл
	ВыгрузитьПоПравилу(ВыборкаДанныхВременноПрибывающиеРаботники, , , , "ВременноПребывающиеПринятыеПоДолгосрочнымДоговорам");
КонецЦикла;

КадровыеДанные = СоздатьОбъект("СписокЗначений");
КадровыеДанные.Установить("Дата",								ТекущаяДата());
КадровыеДанные.Установить("ПериодРегистрации",					Параметры.ДатаНачалаУчета);
КадровыеДанные.Установить("Номер",								"КД");
КадровыеДанные.Установить("Организация",						"Наша организация");
КадровыеДанные.Установить("Комментарий",						"Кадровые данные");
КадровыеДанные.Установить("РаботникиОрганизаций",				ВыборкаДанныхРаботникиОрганизаций);
КадровыеДанные.Установить("ЗанятыеШтатныеЕдиницыОрганизаций",	ВыборкаДанныхЗанятыеШтатныеЕдиницы);

Если 	(ВыборкаДанныхРаботникиОрганизаций.КоличествоСтрок() &gt; 0)
	ИЛИ	(ВыборкаДанныхЗанятыеШтатныеЕдиницы.КоличествоСтрок() &gt; 0) Тогда
	ВыборкаДанных.ДобавитьЗначение(КадровыеДанные);
КонецЕсли;

Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>Отклонения</Код>
			<Наименование>Отклонения (с 2001 года)</Наименование>
			<Порядок>200</Порядок>
			<КодПравилаКонвертации>Отклонения                                        </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

СписокСотрудников = РазделитьСотрудниковНаПорции(1, 1);

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
Если ЖрнЗарплата.ВыбратьЗаписи(Дата(2001, 1, 1), ДатаОкончания) = 0 Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;
ДатаПервойЗаписи = ЖрнЗарплата.ДатаНачала;

ТаблицаВытесняемыхРасчетов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаВытесняемыхРасчетов.НоваяКолонка("ВидРасчета","ВидРасчета",,,,,,);
ТаблицаВытесняемыхРасчетов.НоваяКолонка("ДатаНачала","Дата",,,,,,);
ТаблицаВытесняемыхРасчетов.НоваяКолонка("ДатаОкончания","Дата",,,,,,);
ТаблицаВытесняемыхРасчетов.НоваяКолонка("ПериодРегистрации","Дата",,,,,,);
ТаблицаВытесняемыхРасчетов.НоваяКолонка("Документ","Документ",,,,,,);
ТаблицаВытесняемыхРасчетов.НоваяКолонка("Часы","Число",15,2,,,,);
ТаблицаВытесняемыхРасчетов.НоваяКолонка("Дни","Число",15,2,,,,); 
ТаблицаВытесняемыхРасчетов.НоваяКолонка("Результат","Число",15,2,,,,);
ТаблицаВытесняемыхРасчетов.НоваяКолонка("Сторно","Число",1,0,,,,);

ТаблицаТабелей = СоздатьОбъект("ТаблицаЗначений");
ТаблицаТабелей.НоваяКолонка("НомерМесяца","Дата",,,,,,);
ТаблицаТабелей.НоваяКолонка("ДокументТабель","Документ",,,,,,);
ТаблицаТабелей.НоваяКолонка("НомерВТабеле","Число",6,0,,,,);
ТаблицаТабелей.НоваяКолонка("ЕстьЗаписиПоЖР","Число",1,0,,,,);


СостояниеРаботниковОрганизаций = СоздатьОбъект("ТаблицаЗначений");
СостояниеРаботниковОрганизаций.НоваяКолонка("Сотрудник");
СостояниеРаботниковОрганизаций.НоваяКолонка("Организация");
СостояниеРаботниковОрганизаций.НоваяКолонка("Период");
СостояниеРаботниковОрганизаций.НоваяКолонка("Состояние");
СостояниеРаботниковОрганизаций.НоваяКолонка("ПериодЗавершения");
СостояниеРаботниковОрганизаций.НоваяКолонка("СостояниеЗавершения");
СостояниеРаботниковОрганизаций.НоваяКолонка("ПервичныйДокумент");

Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
	
	ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
	Для НомерПоПорядку = 1 по ПорцияСотрудников.РазмерСписка() Цикл
		Сотрудник = ПорцияСотрудников.ПолучитьЗначение(НомерПоПорядку);
			
		НачПериода = 0;
		ТекущееСостояние = 0;
		КонПериода = 0;
		ПервичныйДокумент = 0;
		
		глСтатусСтрока(Контекст,"Обрабатываются данные по " + Сотрудник + " (порция " + НомерПорции + " из " + СписокСотрудников.РазмерСписка() + ": " + Окр(НомерПоПорядку/ПорцияСотрудников.РазмерСписка()*100) + " %)");
		
		Для ТекущийГод = ДатаГод(ДатаПервойЗаписи) По ДатаГод(ДатаОкончания) Цикл
			Если ТекущийГод = ДатаГод(ДатаПервойЗаписи) Тогда
				ДатаНачалаТекущегоГода		= ДатаПервойЗаписи;
			Иначе
				ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
			КонецЕсли;
			
			Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
				ДатаОкончанияТекущегоГода	= ДатаОкончания;
			Иначе
				ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
			КонецЕсли;

			КодЧасов			= СоздатьОбъект("СписокЗначений");
			ДокиОснования		= СоздатьОбъект("СписокЗначений");
			ВытесняющиеРасчеты	= СоздатьОбъект("СписокЗначений");
			ВытесняющиеДоки		= СоздатьОбъект("СписокЗначений");
			
			Для НомерДаты = 1 по 366 Цикл
				КодЧасов.ДобавитьЗначение("");
				ДокиОснования.ДобавитьЗначение(ПолучитьПустоеЗначение("Документ"));
				ВытесняющиеРасчеты.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));
				ВытесняющиеДоки.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));
			КонецЦикла;
			
			ТаблицаВытесняемыхРасчетов.УдалитьСтроки();
			ТаблицаТабелей.УдалитьСтроки();

			// заполнение отклонений по журналу расчетов
			ЖрнЗарплата.ВыбратьЗаписиПоОбъекту(Сотрудник,ДатаНачалаТекущегоГода,ДатаОкончанияТекущегоГода);
			Пока ЖрнЗарплата.ПолучитьЗапись()=1 Цикл
				ВР = ЖрнЗарплата.ВидРасч;
				Если	(ВР.ВходитВГруппу(ГруппаРасчетов.ВсеОтклонения) = 1) 
				или (ВР = ВидРасчета.ОплатаПраздничных) 
				или (ВР = ВидРасчета.ОплатаСверхурочныхЧасов) Тогда
					
					КоэфСторно = ?(ЖрнЗарплата.Сторно = 1, -1, 1);
					ТаблицаВытесняемыхРасчетов.НоваяСтрока();
					ТаблицаВытесняемыхРасчетов.ВидРасчета			= ВР;
					ТаблицаВытесняемыхРасчетов.ДатаНачала			= ЖрнЗарплата.ДатаНачала;
					ТаблицаВытесняемыхРасчетов.ДатаОкончания		= ЖрнЗарплата.ДатаОкончания;
					ТаблицаВытесняемыхРасчетов.ПериодРегистрации	= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
					ТаблицаВытесняемыхРасчетов.Документ				= ЖрнЗарплата.Документ;
					ТаблицаВытесняемыхРасчетов.Часы					= ЖрнЗарплата.Часы * КоэфСторно; 
					ТаблицаВытесняемыхРасчетов.Дни					= ЖрнЗарплата.Дни * КоэфСторно; 
					ТаблицаВытесняемыхРасчетов.Сторно				= ЖрнЗарплата.Сторно; 
					
				ИначеЕсли ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФЗП Тогда
					// обрежем до даты выхода на работу.                                                                  
					ТаблицаНачисленийУдержаний = "";
					Если глВидРасчетаДействует(Сотрудник, ВР, ДатаНачалаТекущегоГода, ДатаОкончанияТекущегоГода, ТаблицаНачисленийУдержаний) = 1 Тогда
						ДокументОснование				= ТаблицаНачисленийУдержаний.ПолучитьЗначение(1, "Документ");
						Если глТипВидЗначения(ДокументОснование) = "Документ.ОтпускПоУходуЗаРебенком" Тогда
							ДатаДосрочногоВыходаНаРаботу	= ДокументОснование.ДатаВыходаНаРаботу;
							ДатаДосрочногоОкончанияОтпуска	= ДатаДосрочногоВыходаНаРаботу - 1;
							Если ((ПустоеЗначение(ДатаДосрочногоВыходаНаРаботу) = 1)
							или (ДатаДосрочногоОкончанияОтпуска &gt;= ДатаОкончанияТекущегоГода) и (ДатаДосрочногоВыходаНаРаботу&lt;&gt;ДатаНачалаТекущегоГода) )Тогда
								КоэфСторно = ?(ЖрнЗарплата.Сторно = 1, -1, 1);
								ТаблицаВытесняемыхРасчетов.НоваяСтрока();
								ТаблицаВытесняемыхРасчетов.ВидРасчета			= ВР;
								ТаблицаВытесняемыхРасчетов.ДатаНачала			= ЖрнЗарплата.ДатаНачала;
								ТаблицаВытесняемыхРасчетов.ДатаОкончания		= ЖрнЗарплата.ДатаОкончания;
								ТаблицаВытесняемыхРасчетов.ПериодРегистрации	= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
								ТаблицаВытесняемыхРасчетов.Документ				= ЖрнЗарплата.Документ;
								ТаблицаВытесняемыхРасчетов.Часы					= ЖрнЗарплата.Часы * КоэфСторно; 
								ТаблицаВытесняемыхРасчетов.Дни					= ЖрнЗарплата.Дни * КоэфСторно; 
								ТаблицаВытесняемыхРасчетов.Сторно				= ЖрнЗарплата.Сторно; 
							Иначе     
								
								Если ((ДатаДосрочногоОкончанияОтпуска &gt;= ДатаНачалаТекущегоГода) и (ДатаДосрочногоОкончанияОтпуска &lt;= ДатаОкончанияТекущегоГода)) Тогда
									Если ЖрнЗарплата.ДатаНачала &lt;= ДатаДосрочногоОкончанияОтпуска Тогда
										КоэфСторно = ?(ЖрнЗарплата.Сторно = 1, -1, 1);
										ТаблицаВытесняемыхРасчетов.НоваяСтрока();
										ТаблицаВытесняемыхРасчетов.ВидРасчета			= ВР;
										ТаблицаВытесняемыхРасчетов.ДатаНачала			= ЖрнЗарплата.ДатаНачала;
										ТаблицаВытесняемыхРасчетов.ДатаОкончания		= ДатаДосрочногоОкончанияОтпуска;
										ТаблицаВытесняемыхРасчетов.ПериодРегистрации	= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
										ТаблицаВытесняемыхРасчетов.Документ				= ЖрнЗарплата.Документ;
										ТаблицаВытесняемыхРасчетов.Часы					= ЖрнЗарплата.Часы * КоэфСторно; 
										ТаблицаВытесняемыхРасчетов.Дни					= ЖрнЗарплата.Дни * КоэфСторно; 
										ТаблицаВытесняемыхРасчетов.Сторно				= ЖрнЗарплата.Сторно; 
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли ВР.ВходитВГруппу(ГруппаРасчетов.ОсновныеНачисления) = 1 Тогда
					НомерСтроки = 0;
					Если ТаблицаТабелей.НайтиЗначение(КонМесяца(ЖрнЗарплата.ПериодРегистрации.ДатаОкончания), НомерСтроки, "НомерМесяца") = 1 Тогда
						ТаблицаТабелей.ПолучитьСтрокуПоНомеру(НомерСтроки);
					Иначе
						ТаблицаТабелей.НоваяСтрока();
						ТаблицаТабелей.НомерМесяца			= КонМесяца(ЖрнЗарплата.ПериодРегистрации.ДатаОкончания);
						ТаблицаТабелей.ДокументТабель		= ПолучитьПустоеЗначение("Документ.ТабельОтработанногоВремени");
					КонецЕсли;
					ТаблицаТабелей.ЕстьЗаписиПоЖР			= 1;
					
				КонецЕсли;
				
				Если ВР = ВидРасчета.ОплатаПоТабелю тогда
					ДокументИзЖурнала = ЖрнЗарплата.Документ;
					Если ДокументИзЖурнала.Вид() = "ТабельОтработанногоВремени" Тогда
						НомерСтроки = 0;
						Если ТаблицаТабелей.НайтиЗначение(КонМесяца(ЖрнЗарплата.ПериодРегистрации.ДатаОкончания), НомерСтроки, "НомерМесяца") = 1 Тогда
							ТаблицаТабелей.ПолучитьСтрокуПоНомеру(НомерСтроки);
						Иначе
							ТаблицаТабелей.НоваяСтрока();
							ТаблицаТабелей.НомерМесяца		= КонМесяца(ЖрнЗарплата.ПериодРегистрации.ДатаОкончания);
						КонецЕсли;
						ТаблицаТабелей.ДокументТабель		= ДокументИзЖурнала;
						ТаблицаТабелей.НомерВТабеле			= ЖрнЗарплата.НомерСтрокиДокумента;
					КонецЕсли;
					
				ИначеЕсли ВР = ВидРасчета.ОплатаПоОкладу Тогда
					
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаВытесняемыхРасчетов.Сортировать("ПериодРегистрации+");
			Для СчСтрок = 1 По ТаблицаВытесняемыхРасчетов.КоличествоСтрок() Цикл
				
				ТаблицаВытесняемыхРасчетов.ПолучитьСтрокуПоНомеру(СчСтрок);
				
				ВР = ТаблицаВытесняемыхРасчетов.ВидРасчета;
				СимволДня = ""; 

				Если (ВР=ВидРасчета.ОплатаПраздничных) и (ТаблицаВытесняемыхРасчетов.Часы&lt;&gt;0) Тогда
					//если колич. часов нулевое, значит это доплата за работу в праздники, а не оплата праздников
					КодЧасов.УстановитьЗначение(НомерДняГода(ТаблицаВытесняемыхРасчетов.ДатаНачала), "РВ");
					ДокиОснования.УстановитьЗначение(НомерДняГода(ТаблицаВытесняемыхРасчетов.ДатаНачала), ТаблицаВытесняемыхРасчетов.Документ);
					
				ИначеЕсли ВР=ВидРасчета.ОплатаСверхурочныхЧасов Тогда
					
				ИначеЕсли ВР=ВидРасчета.ОтпускОчередной Тогда
					СимволДня = "ОТ";
					
				ИначеЕсли ВР=ВидРасчета.ОтпускДополнительный Тогда
					СимволДня = "ОТ";
					
				ИначеЕсли ВР=ВидРасчета.ОтпускУчебный Тогда
					СимволДня = "У";
					
				ИначеЕсли (ВР=ВидРасчета.ПособиеПоУходуЗаРебенкомФЗП) Тогда
					СимволДня = "ОЖ";
					
				ИначеЕсли (ВР=ВидРасчета.ОтпускЗаСвойСчетКраткосрочный)или(ВР=ВидРасчета.ОтпускЗаСвойСчетДолгосрочный) Тогда
					СимволДня = "ДО";
					
				ИначеЕсли (ВР=ВидРасчета.ОтпускПоБеременности)или(ВР=ВидРасчета.ОтпускПоБеременностис2004)или(ВР=ВидРасчета.ОтпускПоБеременностиПоТекущемуМесяцу)
					  или (ВР=ВидРасчета.ОтпускПоБеременностис2005) или (ВР=ВидРасчета.ОтпускПоБеременностис2007) или (ВР=ВидРасчета.ОтпускПоБеременностис2010)
					  или (ВР=ВидРасчета.ОтпускПоБеременностис2011) Тогда
					СимволДня = "Р";
					
				ИначеЕсли (ВР=ВидРасчета.ОплатаБЛ) или (ВР=ВидРасчета.ОплатаБЛс2004) или (ВР=ВидРасчета.ОплатаБЛс2005) или (ВР=ВидРасчета.ОплатаБЛс2007) или (ВР=ВидРасчета.ОплатаБЛс2010)
					  или (ВР=ВидРасчета.ОплатаБЛпоТекущемуМесяцу) или (ВР=ВидРасчета.ОплатаБЛс2011) Тогда
					  
					Если ТаблицаВытесняемыхРасчетов.Документ.Вид() = "БольничныйЛист" Тогда
						Если (ТаблицаВытесняемыхРасчетов.Документ.ТипБолезни = Перечисление.ТипБолезни.ТравмаВБыту)
						и (ДатаНачалаТекущегоГода &lt; '01.01.2005') Тогда

							Документ = ТаблицаВытесняемыхРасчетов.Документ;		
							Если (Документ.ПервичныйБольничный.Выбран() = 1) тогда
								ПервичныйБЛ = глПолучитьПервичныйБольничный(Документ); 
								ДатаСобытия = ПервичныйБЛ.Начало;
							Иначе
								ДатаСобытия = Документ.Начало;
							КонецЕсли;
							Если ДатаСобытия + 4 &lt; ТаблицаВытесняемыхРасчетов.ДатаНачала Тогда
								СимволДня = "Б";
								
							Иначе
								ЧасовНеОплачивалось = ?(ТаблицаВытесняемыхРасчетов.Часы=0,0,0);
								ДнейНеОплачивалось = ?(ТаблицаВытесняемыхРасчетов.Дни=0,0,Календари.ПолучитьАтрибут("Пятидневка").Дней(ТаблицаВытесняемыхРасчетов.ДатаНачала,Мин(ТаблицаВытесняемыхРасчетов.ДатаОкончания,ДатаСобытия + 4)));
								
								Для Номер = НомерДняГода(ТаблицаВытесняемыхРасчетов.ДатаНачала) по НомерДняГода(Мин(ТаблицаВытесняемыхРасчетов.ДатаОкончания,ДатаСобытия + 4)) Цикл
									Если ТаблицаВытесняемыхРасчетов.Сторно = 1 Тогда
										Поз = ВытесняющиеДоки.ПолучитьЗначение(Номер).НайтиЗначение(ТаблицаВытесняемыхРасчетов.Документ);
										Если Поз &gt; 0 Тогда
											ВытесняющиеРасчеты.ПолучитьЗначение(Номер).УдалитьЗначение(Поз);
											ВытесняющиеДоки.ПолучитьЗначение(Номер).УдалитьЗначение(Поз);
										КонецЕсли;
									Иначе
										ВытесняющиеРасчеты.ПолучитьЗначение(Номер).ДобавитьЗначение("Т");
										ВытесняющиеДоки.ПолучитьЗначение(Номер).ДобавитьЗначение(ТаблицаВытесняемыхРасчетов.Документ);
									КонецЕсли;
								КонецЦикла;
								
								Если ТаблицаВытесняемыхРасчетов.ДатаОкончания &gt; ДатаСобытия + 4 Тогда
									
									Для Номер = НомерДняГода(ДатаСобытия + 5) по НомерДняГода(ТаблицаВытесняемыхРасчетов.ДатаОкончания) Цикл
										Если ТаблицаВытесняемыхРасчетов.Сторно = 1 Тогда
											Поз = ВытесняющиеДоки.ПолучитьЗначение(Номер).НайтиЗначение(ТаблицаВытесняемыхРасчетов.Документ);
											Если Поз &gt; 0 Тогда
												ВытесняющиеРасчеты.ПолучитьЗначение(Номер).УдалитьЗначение(Поз);
												ВытесняющиеДоки.ПолучитьЗначение(Номер).УдалитьЗначение(Поз);
											КонецЕсли;
										Иначе
											ВытесняющиеРасчеты.ПолучитьЗначение(Номер).ДобавитьЗначение("Б");
											ВытесняющиеДоки.ПолучитьЗначение(Номер).ДобавитьЗначение(ТаблицаВытесняемыхРасчетов.Документ);
										КонецЕсли;
									КонецЦикла;
									
								КонецЕсли;
							КонецЕсли;
						Иначе
							СимволДня = "Б";
							
						КонецЕсли;
						
					Иначе
						СимволДня = "Б";
						
					КонецЕсли;
					
				ИначеЕсли ВР.ВходитВГруппу(ГруппаРасчетов.БольничныеЛисты)=1 Тогда
					СимволДня = "Б";
					
				ИначеЕсли ВР=ВидРасчета.Невыход Тогда
					ДокументИзТаблицы = ТаблицаВытесняемыхРасчетов.Документ;
					Если ДокументИзТаблицы.Вид() = "ПриказНаОплатуПоСреднему" тогда
						Основание = ТаблицаВытесняемыхРасчетов.Документ.ПричинаОтсутствия;
						Если Основание = Перечисление.ПричинаОтсутствия.Гособязанности Тогда
							СимволДня = "Г"
						ИначеЕсли Основание = Перечисление.ПричинаОтсутствия.Забастовка Тогда
							СимволДня = "ЗБ";
						Иначе
							СимволДня = "НН";
						КонецЕсли;
						
					ИначеЕсли ДокументИзТаблицы.Вид() = "Невыходы" тогда
						СимволДня = "НН";
						
					ИначеЕсли ДокументИзТаблицы.Вид() = "БольничныйЛист" Тогда  // больничный совместителю 
						Если ДокументИзТаблицы.ТипБолезни = Перечисление.ТипБолезни.ПоБеременностиИРодам Тогда
							СимволДня = "Р";
							
						Иначе
							СимволДня = "Б";	
							
						КонецЕсли;
						
					КонецЕсли;
					
				ИначеЕсли ВР=ВидРасчета.Прогул Тогда
					СимволДня = "ПР";
					
				ИначеЕсли ВР=ВидРасчета.Простой Тогда
					ПросматриваемыйДокумент = ТаблицаВытесняемыхРасчетов.Документ;
					ВидПросматриваемогоДокумента = ПросматриваемыйДокумент.Вид();
					Если ВидПросматриваемогоДокумента = "Невыходы" Тогда
						Если ПросматриваемыйДокумент.ПричинаОтсутствия = Перечисление.ПричинаОтсутствия.ВынужденныйПростой Тогда
							СимволДня = "НП";
						Иначе
							СимволДня = "ВП";
						КонецЕсли;
						
					ИначеЕсли ТаблицаВытесняемыхРасчетов.Документ.Вид() = "ПриказНаОплатуПоСреднему" Тогда
						Если ТаблицаВытесняемыхРасчетов.Документ.ПричинаОтсутствия = Перечисление.ОснованияОплатыПоСреднему.ВынужденныйПростой Тогда
							СимволДня = "РП";
						КонецЕсли;
						
					КонецЕсли;
					
				ИначеЕсли ВР=ВидРасчета.ОплатаПоСреднемуЗаработку Тогда
					Если Метаданные.Документ(ТаблицаВытесняемыхРасчетов.Документ.Вид()).РеквизитШапки("ПричинаОтсутствия").Выбран() = 1 Тогда
						Основание = ТаблицаВытесняемыхРасчетов.Документ.ПричинаОтсутствия;
						Если Основание = Перечисление.ОснованияОплатыПоСреднему.Командировка Тогда
							СимволДня = "К"
						Иначе
							СимволДня = "Г"
						КонецЕсли;
						
					Иначе
						СимволДня = "Г";
						
					КонецЕсли;
					
				ИначеЕсли ВР=ВидРасчета.СохраняемоеДенежноеСодержаниеГосслужащего Тогда
					Если Метаданные.Документ(ТаблицаВытесняемыхРасчетов.Документ.Вид()).РеквизитШапки("ПричинаОтсутствия").Выбран() = 1 Тогда
						Основание = ТаблицаВытесняемыхРасчетов.Документ.ПричинаОтсутствия;
						Если Основание = Перечисление.ОснованияОплатыЗаНеотработанноеВремяГосслужащим.Командировка Тогда
							СимволДня = "К"
						Иначе
							СимволДня = "Г"
						КонецЕсли;
						
					Иначе
						СимволДня = "Г";
						
					КонецЕсли;
					
				ИначеЕсли ВР=ВидРасчета.ОплатаЛьготныхДнейРодителей Тогда
					СимволДня = "Г";
					
				КонецЕсли;
				
				Если ПустоеЗначение(СимволДня) = 0 Тогда
					
					Для Номер = НомерДняГода(ТаблицаВытесняемыхРасчетов.ДатаНачала) по НомерДняГода(ТаблицаВытесняемыхРасчетов.ДатаОкончания) Цикл
						Если ТаблицаВытесняемыхРасчетов.Сторно = 1 Тогда
							Поз = ВытесняющиеДоки.ПолучитьЗначение(Номер).НайтиЗначение(ТаблицаВытесняемыхРасчетов.Документ);
							Если Поз &gt; 0 Тогда
								ВытесняющиеРасчеты.ПолучитьЗначение(Номер).УдалитьЗначение(Поз);
								ВытесняющиеДоки.ПолучитьЗначение(Номер).УдалитьЗначение(Поз);
							КонецЕсли;
						Иначе
							ВытесняющиеРасчеты.ПолучитьЗначение(Номер).ДобавитьЗначение(СимволДня);
							ВытесняющиеДоки.ПолучитьЗначение(Номер).ДобавитьЗначение(ТаблицаВытесняемыхРасчетов.Документ);
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
			КонецЦикла;
			
			Для НомерДаты = 1 по 366 Цикл
				ПоследнийДок = ВытесняющиеДоки.ПолучитьЗначение(НомерДаты).РазмерСписка();
				Если ПоследнийДок &gt; 0 Тогда
					КодЧасов.УстановитьЗначение(НомерДаты, ВытесняющиеРасчеты.ПолучитьЗначение(НомерДаты).ПолучитьЗначение(ПоследнийДок));
					ДокиОснования.УстановитьЗначение(НомерДаты, ВытесняющиеДоки.ПолучитьЗначение(НомерДаты).ПолучитьЗначение(ПоследнийДок));
				КонецЕсли;
			КонецЦикла;
			
			// Попробуем определить дату увольнения.
			ДатаВозможногоУвольнения = Дата(0); 
			ДатаНачалаИзменений = Дата(0);
			ТаблицаРеквизитов	= глПолучитьТаблицуИсторииРеквизитов(Сотрудник,ДатаНачалаТекущегоГода,ДатаОкончанияТекущегоГода,"СостояниеФизлица");
			КоличествоСтрок		= ТаблицаРеквизитов.КоличествоСтрок();  
			Для Номер = 1 по КоличествоСтрок Цикл
				ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер); 
				Если ПустоеЗначение(ТаблицаРеквизитов.СостояниеФизлица)=1 Тогда
					ДатаВозможногоУвольнения = ТаблицаРеквизитов.Дата -1  
				Иначе
					Если ТаблицаРеквизитов.Дата &gt; ДатаНачалаТекущегоГода Тогда
						ДатаНачалаИзменений = ТаблицаРеквизитов.Дата
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;
			
			ТаблицаТабелей.ВыбратьСтроки();
			Пока ТаблицаТабелей.ПолучитьСтроку() = 1 Цикл
				ФормаТрудаСотрудника = Сотрудник.ФормаТруда.Получить(ТаблицаТабелей.НомерМесяца);
				Если (ФормаТрудаСотрудника = Перечисление.ФормыТруда.ТабельПодневнОклад) Или (ФормаТрудаСотрудника = Перечисление.ФормыТруда.ТабельПочасОклад) Или (ФормаТрудаСотрудника = Перечисление.ФормыТруда.ТабельПочасТариф) Тогда
					ДокументТабель = ТаблицаТабелей.ДокументТабель;
					Если ПустоеЗначение(ДокументТабель) = 0 тогда
						ДокументТабель.ПолучитьСтрокуПоНомеру(ТаблицаТабелей.НомерВТабеле);
						
						Если ДокументТабель.ПолнотаВводаДанных = 1 Тогда
							//заполнение данных из табеля
							Для ДатаКалендаря = НачМесяца(ТаблицаТабелей.НомерМесяца) По ТаблицаТабелей.НомерМесяца Цикл           
								
								ПозицияМассива = НомерДняГода(ДатаКалендаря);
								
								Часов = ДокументТабель.ПолучитьАтрибут("КолвоЧасов" + Формат(ДатаЧисло(ДатаКалендаря), "Ч(0)2.0"));
								Если Часов &gt; 0 Тогда
									Если ПустоеЗначение(КодЧасов.ПолучитьЗначение(ПозицияМассива)) = 1 Тогда
										КодЧасов.УстановитьЗначение(ПозицияМассива, "Я");
									КонецЕсли;
									
								ИначеЕсли КодЧасов.ПолучитьЗначение(ПозицияМассива) &lt;&gt; "РВ" Тогда
									
									// Попробуем побороться с буквами "В", которые появляются в табеле после увольнения и перед принятием на работу.
									// Предусмотрим обработку случая когда сотрудника несколько раз принимали и увольняли в одном месяце.
									Если ПустоеЗначение(КодЧасов.ПолучитьЗначение(ПозицияМассива)) = 1 Тогда  
										ЗначениеСостоянияФизЛица = 0;
										ТаблицаРеквизитов.ВыбратьСтроки();
										Пока ТаблицаРеквизитов.ПолучитьСтроку() = 1 Цикл
											Если ТаблицаРеквизитов.Дата &lt;= ДатаКалендаря Тогда
												ЗначениеСостоянияФизЛица = ТаблицаРеквизитов.СостояниеФизЛица;
											Иначе
												Прервать;
											КонецЕсли;
										КонецЦикла;	  
										
										// сотрудник должен быть в штате на эту дату.
										Если ПустоеЗначение(ЗначениеСостоянияФизЛица) = 0 Тогда
											КодЧасов.УстановитьЗначение(ПозицияМассива, "В");
										КонецЕсли;
									КонецЕсли;
									
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
						
				ИначеЕсли ТаблицаТабелей.ЕстьЗаписиПоЖР = 1 Тогда
					// заполнение данных по графику работы
					ТаблицаРеквизитов 	= глПолучитьТаблицуИсторииРеквизитов(Сотрудник,НачМесяца(ТаблицаТабелей.НомерМесяца),ТаблицаТабелей.НомерМесяца,"СостояниеФизлица,Ставка,ГрафикРаботы");
					КоличествоСтрок		= ТаблицаРеквизитов.КоличествоСтрок();
					Для Номер = 1 по КоличествоСтрок Цикл
						ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
						СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1,ТаблицаТабелей.НомерМесяца);
						Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), ТаблицаТабелей.НомерМесяца)) Тогда
							Продолжить
						КонецЕсли;
						ГрафикРаботы = ПолучитьПустоеЗначение("Справочник.ГрафикиРаботы");
						Если ПустоеЗначение(ТаблицаРеквизитов.СостояниеФизлица)=0 Тогда
							ГрафикРаботы = ТаблицаРеквизитов.ГрафикРаботы;
							Если ПустоеЗначение(ГрафикРаботы)=1 Тогда
								ГрафикРаботы = Константа.ОсновнойГрафик;
							КонецЕсли;
						КонецЕсли;
						Если ПустоеЗначение(ГрафикРаботы)=0 Тогда
							ОбщееКоличествоЧасовВПериоде = ГрафикРаботы.ОсновныеЧасы.Часов(НачМесяца(ТаблицаТабелей.НомерМесяца), ТаблицаТабелей.НомерМесяца);
							КоличествоРабочихДнейВПериоде = ГрафикРаботы.ОсновныеЧасы.Дней(НачМесяца(ТаблицаТабелей.НомерМесяца), ТаблицаТабелей.НомерМесяца);
							Для ДатаКалендаря = ТаблицаРеквизитов.Дата по СледующаяДата Цикл
								Если КоличествоРабочихДнейВПериоде = 0 Тогда
									СреднеДневноеКоличествоЧасов = 0;
								Иначе
									СреднеДневноеКоличествоЧасов = Окр(ОбщееКоличествоЧасовВПериоде/КоличествоРабочихДнейВПериоде)*ТаблицаРеквизитов.Ставка;
								КонецЕсли;
								Часов = ГрафикРаботы.ОсновныеЧасы.Часов(ДатаКалендаря,ДатаКалендаря)*ТаблицаРеквизитов.Ставка;
								ПозицияМассива = НомерДняГода(ДатаКалендаря);
								Если Часов&gt;0 Тогда
									Если ПустоеЗначение(КодЧасов.ПолучитьЗначение(ПозицияМассива)) = 1 Тогда
										КодЧасов.УстановитьЗначение(ПозицияМассива, "Я");
									КонецЕсли;
								ИначеЕсли КодЧасов.ПолучитьЗначение(ПозицияМассива) &lt;&gt; "РВ" Тогда
									Если ПустоеЗначение(КодЧасов.ПолучитьЗначение(ПозицияМассива)) = 1 Тогда
										КодЧасов.УстановитьЗначение(ПозицияМассива, "В");
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
						
			КонецЦикла;
				
			Для НомерДаты = 1 По 366 Цикл
				КодЧасовНаДату = КодЧасов.ПолучитьЗначение(НомерДаты);
				
				Если (КодЧасовНаДату = "") ИЛИ (КодЧасовНаДату = "В") ИЛИ (КодЧасовНаДату = "РВ") Тогда
					Продолжить;
				КонецЕсли;
				
				Если (ТекущееСостояние &lt;&gt; КодЧасовНаДату) И (ПустоеЗначение(НачПериода) = 0) Тогда
					Если ТекущееСостояние &lt;&gt; "Я" Тогда
						СостояниеРаботниковОрганизаций.НоваяСтрока();
						СостояниеРаботниковОрганизаций.Сотрудник				= ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, НачПериода);
						СостояниеРаботниковОрганизаций.Организация				= "Наша организация";
						СостояниеРаботниковОрганизаций.Период					= НачПериода;
						СостояниеРаботниковОрганизаций.Состояние				= ТекущееСостояние;
						СостояниеРаботниковОрганизаций.ПериодЗавершения			= КонПериода + 1;
						СостояниеРаботниковОрганизаций.СостояниеЗавершения		= "Я";
						
						Если ПустоеЗначение(ПервичныйДокумент) = 0 Тогда
							Если Метаданные.Документ(ПервичныйДокумент.Вид()).РеквизитШапки("ДокОснование").Выбран() = 1 Тогда
								Если ПустоеЗначение(ПервичныйДокумент.ДокОснование) = 0 Тогда
									ПервичныйДокумент = ПервичныйДокумент.ДокОснование;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						Если глТипВидЗначения(ПервичныйДокумент) = "Документ.НачислениеОтпуска" Тогда
							Док = СоздатьОбъект("Документ");
							Если Док.ВыбратьПоЗначению(НачГода(НачПериода), КонГода(КонПериода), "Сотрудник", Сотрудник) = 1 Тогда
								Пока Док.ПолучитьДокумент() = 1 Цикл
									Если Док.Вид() &lt;&gt; "ПриказПоОтпуску" Тогда
										Продолжить;
									КонецЕсли;
									Если (Док.Начало = НачПериода) И (Док.Окончание = КонПериода) Тогда
										ПервичныйДокумент = Док.ТекущийДокумент();
										Прервать;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
						СостояниеРаботниковОрганизаций.ПервичныйДокумент		= ПервичныйДокумент;
					КонецЕсли;
					
					НачПериода = 0;
					ПервичныйДокумент = 0;
				КонецЕсли;
					
				Если ПустоеЗначение(НачПериода) = 1 Тогда
					НачПериода = Дата(ТекущийГод-1, 12, 31)+НомерДаты;
					ТекущееСостояние = КодЧасовНаДату;
					КонПериода = НачПериода;
					ПервичныйДокумент = ДокиОснования.ПолучитьЗначение(НомерДняГода(НачПериода));
					Продолжить;
				КонецЕсли;
				
				Если ТекущееСостояние = КодЧасовНаДату Тогда
					КонПериода = Дата(ТекущийГод-1, 12, 31)+НомерДаты;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		Если ПустоеЗначение(НачПериода) = 0 Тогда
			Если ТекущееСостояние &lt;&gt; "Я" Тогда
				СостояниеРаботниковОрганизаций.НоваяСтрока();
				СостояниеРаботниковОрганизаций.Сотрудник				= ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, КонПериода);
				СостояниеРаботниковОрганизаций.Организация				= "Наша организация";
				СостояниеРаботниковОрганизаций.Период					= НачПериода;
				СостояниеРаботниковОрганизаций.ПериодЗавершения			= КонПериода + 1;
				СостояниеРаботниковОрганизаций.Состояние				= ТекущееСостояние;
				СостояниеРаботниковОрганизаций.СостояниеЗавершения		= "Я";
				
				Если ПустоеЗначение(ПервичныйДокумент) = 0 Тогда
					Если Метаданные.Документ(ПервичныйДокумент.Вид()).РеквизитШапки("ДокОснование").Выбран() = 1 Тогда
						Если ПустоеЗначение(ПервичныйДокумент.ДокОснование) = 0 Тогда
							ПервичныйДокумент = ПервичныйДокумент.ДокОснование;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Если глТипВидЗначения(ПервичныйДокумент) = "Документ.НачислениеОтпуска" Тогда
					Док = СоздатьОбъект("Документ");
					Если Док.ВыбратьПоЗначению(НачГода(НачПериода), КонГода(КонПериода), "Сотрудник", Сотрудник) = 1 Тогда
						Пока Док.ПолучитьДокумент() = 1 Цикл
							Если Док.Вид() &lt;&gt; "ПриказПоОтпуску" Тогда
								Продолжить;
							КонецЕсли;
							Если (Док.Начало = НачПериода) И (Док.Окончание = КонПериода) Тогда
								ПервичныйДокумент = Док.ТекущийДокумент();
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				СостояниеРаботниковОрганизаций.ПервичныйДокумент		= ПервичныйДокумент;
			КонецЕсли;
		КонецЕсли;
		
		// У последней записи установим дату окончания из первичного документа
		Если (ПустоеЗначение(СостояниеРаботниковОрганизаций.ПервичныйДокумент) = 0) Тогда
			Если СостояниеРаботниковОрганизаций.ПервичныйДокумент.Вид() = "ПриказОРаботеВПраздники" Тогда
				СостояниеРаботниковОрганизаций.ПериодЗавершения			= СостояниеРаботниковОрганизаций.ПервичныйДокумент.ДатаРаботы + 1;
			Иначе
				Если Метаданные.Документ(СостояниеРаботниковОрганизаций.ПервичныйДокумент.Вид()).РеквизитШапки("Окончание").Выбран() = 1 Тогда
					СостояниеРаботниковОрганизаций.ПериодЗавершения		= СостояниеРаботниковОрганизаций.ПервичныйДокумент.Окончание + 1;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла; // По сотрудникам внутри порции
			
КонецЦикла; // По порциям сотрудников

Для ТекущийГод = ДатаГод(ДатаПервойЗаписи) По ДатаГод(ДатаОкончания) Цикл
	Состояние("Отклонения за " + ТекущийГод + "г.");

	Если ТекущийГод = ДатаГод(ДатаПервойЗаписи) Тогда
		ДатаНачалаТекущегоГода		= ДатаПервойЗаписи;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;

	СостояниеРаботниковЗаГод = СоздатьОбъект("ТаблицаЗначений");
	СостояниеРаботниковЗаГод.НоваяКолонка("Сотрудник");
	СостояниеРаботниковЗаГод.НоваяКолонка("Организация");
	СостояниеРаботниковЗаГод.НоваяКолонка("Период");
	СостояниеРаботниковЗаГод.НоваяКолонка("Состояние");
	СостояниеРаботниковЗаГод.НоваяКолонка("ПериодЗавершения");
	СостояниеРаботниковЗаГод.НоваяКолонка("СостояниеЗавершения");
	СостояниеРаботниковЗаГод.НоваяКолонка("ПервичныйДокумент");

	СостояниеРаботниковОрганизаций.ВыбратьСтроки();
	Пока СостояниеРаботниковОрганизаций.ПолучитьСтроку() = 1 Цикл
		Если ДатаГод(СостояниеРаботниковОрганизаций.Период) &lt;&gt; ТекущийГод Тогда
			Продолжить;
		КонецЕсли;
		
		СостояниеРаботниковЗаГод.НоваяСтрока();
		СостояниеРаботниковЗаГод.Сотрудник				= СостояниеРаботниковОрганизаций.Сотрудник;
		СостояниеРаботниковЗаГод.Организация			= СостояниеРаботниковОрганизаций.Организация;
		СостояниеРаботниковЗаГод.Период					= СостояниеРаботниковОрганизаций.Период;
		СостояниеРаботниковЗаГод.Состояние				= СостояниеРаботниковОрганизаций.Состояние;
		СостояниеРаботниковЗаГод.ПериодЗавершения		= СостояниеРаботниковОрганизаций.ПериодЗавершения;
		СостояниеРаботниковЗаГод.СостояниеЗавершения	= СостояниеРаботниковОрганизаций.СостояниеЗавершения;
		СостояниеРаботниковЗаГод.ПервичныйДокумент		= СостояниеРаботниковОрганизаций.ПервичныйДокумент;
	КонецЦикла;
	
	ПериодРегистрации = Дата(ТекущийГод, 1, 1);

	Если СостояниеРаботниковЗаГод.КоличествоСтрок() &gt; 0 Тогда
		Отклонения = СоздатьОбъект("СписокЗначений");
		Отклонения.Установить("Дата",								ТекущаяДата());
		Отклонения.Установить("ПериодРегистрации",					ПериодРегистрации);
		Отклонения.Установить("Номер",								"ОТК-" + Прав(ТекущийГод, 2));
		Отклонения.Установить("Организация",						"Наша организация");
		Отклонения.Установить("Комментарий",						"Отклонения за " + ТекущийГод + "г.");

		Отклонения.Установить("СостояниеРаботниковОрганизаций",		СостояниеРаботниковЗаГод);

		ВыборкаДанных.ДобавитьЗначение(Отклонения);
	КонецЕсли;
	
КонецЦикла;
	
Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ФактическиеОтпуска</Код>
			<Наименование>Фактические отпуска (с 2001 года)</Наименование>
			<Порядок>250</Порядок>
			<КодПравилаКонвертации>ФактическиеОтпуска                                </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
Если ЖрнЗарплата.ВыбратьЗаписи(Дата(2001, 1, 1), ДатаОкончания) = 0 Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;
ДатаПервойЗаписи	= ЖрнЗарплата.ДатаНачала;
ДатаПоследнейЗаписи	= Мин(ЖрнЗарплата.ТекущийПериод().ДатаОкончания, ДатаОкончания);

ЖрнЗарплата = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(ФактическиеОтпуска)
|Период С ДатаНачалаТекущегоГода ПО ДатаОкончанияТекущегоГода;
|Объект							= ЖурналРасчетов.Зарплата.Объект;
|ФизЛицо						= ЖурналРасчетов.Зарплата.Объект.ОсновнойЭлемент;
|РодительскийДокумент			= ЖурналРасчетов.Зарплата.РодительскийДокумент; 
|ДокументОснование				= ЖурналРасчетов.Зарплата.ТекущийДокумент; 
|ЗаписьЖР						= ЖурналРасчетов.Зарплата.ТекущаяЗапись;
|ВидРасч						= ЖурналРасчетов.Зарплата.ВидРасч;
|ПериодДействия					= ЖурналРасчетов.Зарплата.ПериодДействия;
|ПериодДействияДатаНачала		= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаНачала;
|ПериодДействияДатаОкончания	= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаОкончания;
|Дни							= ЖурналРасчетов.Зарплата.Дни;
|Группировка ПериодДействия;
|Группировка Объект;
|Группировка ЗаписьЖР;
|Условие((ВидРасч = ВидРасчета.ОтпускОчередной)	ИЛИ (ВидРасч = ВидРасчета.ОтпускДополнительный)	ИЛИ (ВидРасч = ВидРасчета.КомпенсацияОтпуска) ИЛИ (ВидРасч = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск));
|"//}}ЗАПРОС
;

КалендарьОтпуска = СоздатьОбъект("Календарь.ДляРасчетаОтпускаПоКалендДням");

Для ТекущийГод = ДатаГод(ДатаПервойЗаписи) По ДатаГод(ДатаПоследнейЗаписи) Цикл
	Состояние("Фактические отпуска за " + ТекущийГод + "г.");

	Если ТекущийГод = ДатаГод(ДатаПервойЗаписи) Тогда
		ДатаНачалаТекущегоГода		= ДатаПервойЗаписи;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаПоследнейЗаписи) Тогда
		ДатаОкончанияТекущегоГода	= ДатаПоследнейЗаписи;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	Если ЖрнЗарплата.Выполнить(ТекстЗапроса) = 0 Тогда
		Продолжить;
	КонецЕсли;
	
	ФактическиеОтпуска = СоздатьОбъект("ТаблицаЗначений");
	ФактическиеОтпуска.НоваяКолонка("Сотрудник");
	ФактическиеОтпуска.НоваяКолонка("ВидЕжегодногоОтпуска");
	ФактическиеОтпуска.НоваяКолонка("Период");
	ФактическиеОтпуска.НоваяКолонка("ДатаОкончания");
	ФактическиеОтпуска.НоваяКолонка("Количество");
	ФактическиеОтпуска.НоваяКолонка("Компенсация");
	ФактическиеОтпуска.НоваяКолонка("Регистратор");
	ФактическиеОтпуска.НоваяКолонка("ДатаРегистрации");

	Пока ЖрнЗарплата.Группировка(1) = 1 Цикл // По месяцам

		Пока ЖрнЗарплата.Группировка(2) = 1 Цикл // По сотрудникам
			
			Если ЖрнЗарплата.Объект.ЭтоГруппа() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПустоеЗначение(глРаботалСотрудник(ЖрнЗарплата.Объект, НачМесяца(ДатаНачала), КонМесяца(ДатаОкончания))) = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Пока ЖрнЗарплата.Группировка(3) = 1 Цикл  // По записям ЖР
				ДокОтпуск = ЖрнЗарплата.ДокументОснование;
				Если (ДокОтпуск.Вид() = "НачислениеОтпуска") или (ДокОтпуск.Вид() = "ОтпускПоУходуЗаРебенком") Тогда
					Если ДокОтпуск.Вид() = "НачислениеОтпуска" Тогда
						Если ДокОтпуск.ДокОснование.Вид() = "ПриказОбУвольнении" Тогда
							ДокОтпуск = ДокОтпуск.ДокОснование;
						Иначе
							ДокОтпуск = ДокОтпуск.ТекущийДокумент();
						КонецЕсли;
					Иначе
						ДокОтпуск = ДокОтпуск.ТекущийДокумент();
					КонецЕсли;
				КонецЕсли;
				
				// Если отпуск переходящий, для части отпуска первого месяца посчитаем количество дней, для второго месяца - допишем разницу.
				// Иначе просто запишем количество дней из документа.
				ОтпускДвухПериодов			= 0;
				ПервыйПериод				= 0;
				ДнейОтпускаПоКалендарюП1	= 0;
				Если (Метаданные.Документ(ДокОтпуск.Вид()).РеквизитШапки("Начало").Выбран() = 1) И (Метаданные.Документ(ДокОтпуск.Вид()).РеквизитШапки("Окончание").Выбран() = 1) Тогда
					ОтпускДвухПериодов			= ?(НачМесяца(ДокОтпуск.Начало) &lt;&gt; НачМесяца(ДокОтпуск.Окончание), 1, 0);
					ПервыйПериод				= ?(НачМесяца(ДокОтпуск.Начало) = НачМесяца(ЖрнЗарплата.ПериодДействияДатаНачала), 1, 0);
					ДнейОтпускаПоКалендарюП1	= КалендарьОтпуска.Дней(ДокОтпуск.Начало, КонМесяца(ДокОтпуск.Начало));
				КонецЕсли;
				
				ДнейОтпускаВДокументе = 0;
				Если (ЖрнЗарплата.ВидРасч = ВидРасчета.КомпенсацияОтпуска) ИЛИ (ЖрнЗарплата.ВидРасч = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск) Тогда
					Если Метаданные.Документ(ДокОтпуск.Вид()).РеквизитШапки("ДнейКомпенсацииОтпуска").Выбран() = 1 Тогда
						ДнейОтпускаВДокументе				= ДокОтпуск.ДнейКомпенсацииОтпуска * ?(ЖрнЗарплата.ВидРасч = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск, -1, 1);
					КонецЕсли;
				Иначе
					Если ЖрнЗарплата.ВидРасч = ВидРасчета.ОтпускДополнительный Тогда
						Если Метаданные.Документ(ДокОтпуск.Вид()).РеквизитШапки("КоличествоДнейДополнительногоОтпуска").Выбран() = 1 Тогда
							ДнейОтпускаВДокументе			= ДокОтпуск.КоличествоДнейДополнительногоОтпуска;
						КонецЕсли;
					Иначе
						Если Метаданные.Документ(ДокОтпуск.Вид()).РеквизитШапки("КоличествоДнейОтпуска").Выбран() = 1 Тогда
							ДнейОтпускаВДокументе			= ДокОтпуск.КоличествоДнейОтпуска;
						КонецЕсли;
						Если Метаданные.Документ(ДокОтпуск.Вид()).РеквизитШапки("КоличествоДнейДополнительногоОтпуска").Выбран() = 1 Тогда
							ДнейОтпускаВДокументе			= ДнейОтпускаВДокументе - ДокОтпуск.КоличествоДнейДополнительногоОтпуска;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				ДнейОтпускаПоКалендарю						= КалендарьОтпуска.Дней(ЖрнЗарплата.ПериодДействияДатаНачала, ЖрнЗарплата.ПериодДействияДатаОкончания) * ?(ЖрнЗарплата.ВидРасч = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск, -1, 1);
				
				ФактическиеОтпуска.НоваяСтрока();
				ФактическиеОтпуска.Сотрудник				= ЖрнЗарплата.Объект;
				ФактическиеОтпуска.ВидЕжегодногоОтпуска		= ?(ЖрнЗарплата.ВидРасч = ВидРасчета.ОтпускДополнительный, "Дополнительный ежегодный отпуск", "Основной ежегодный отпуск");
				ФактическиеОтпуска.Период					= ЖрнЗарплата.ПериодДействияДатаНачала;
				ФактическиеОтпуска.ДатаОкончания			= ЖрнЗарплата.ПериодДействияДатаОкончания;
				ФактическиеОтпуска.Компенсация				= ?((ЖрнЗарплата.ВидРасч = ВидРасчета.КомпенсацияОтпуска) ИЛИ (ЖрнЗарплата.ВидРасч = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск), 1, 0);
				ФактическиеОтпуска.ДатаРегистрации			= ДокОтпуск.ДатаДок;
				
				Если ОтпускДвухПериодов = 0 Тогда
					ФактическиеОтпуска.Количество			= ?(ДнейОтпускаВДокументе = 0, ДнейОтпускаПоКалендарю, ДнейОтпускаВДокументе);
				Иначе
					Если (ДнейОтпускаВДокументе &lt;&gt; 0) И (ДнейОтпускаВДокументе &lt;= ДнейОтпускаПоКалендарю) Тогда
						ФактическиеОтпуска.Количество	= ДнейОтпускаВДокументе;
					Иначе
						Если ПервыйПериод = 1 Тогда
							ФактическиеОтпуска.Количество	= ДнейОтпускаПоКалендарю;
						Иначе
							ФактическиеОтпуска.Количество	= ДнейОтпускаВДокументе - ДнейОтпускаПоКалендарюП1;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ФактическиеОтпуска.Свернуть("Сотрудник,ВидЕжегодногоОтпуска,Период,ДатаОкончания,Компенсация,Регистратор,ДатаРегистрации", "Количество");
	
	ПериодРегистрации = Дата(ТекущийГод, 1, 1);

	Отпуска = СоздатьОбъект("СписокЗначений");
	Отпуска.Установить("Дата",							ТекущаяДата());
	Отпуска.Установить("ПериодРегистрации",				ПериодРегистрации);
	Отпуска.Установить("Номер",							"ОТ-" + Прав(ТекущийГод, 2));
	Отпуска.Установить("Организация",					"Наша организация");
	Отпуска.Установить("Комментарий",					"Фактические отпуска за " + ТекущийГод + "г.");
	
	Отпуска.Установить("ФактическиеОтпускаОрганизаций",	ФактическиеОтпуска);

	Если ФактическиеОтпуска.КоличествоСтрок() &gt; 0 Тогда
		ВыборкаДанных.ДобавитьЗначение(Отпуска);
	КонецЕсли;

КонецЦикла;

Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ШтатноеРасписание</Код>
			<Наименование>Штатное расписание (за все время)</Наименование>
			<Порядок>300</Порядок>
			<КодПравилаКонвертации>ШтатноеРасписаниеОрганизаций                      </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ВыборкаДанных = СоздатьТЗШтатноеРасписание();

СпрШтатное = СоздатьОбъект("Справочник.ШтатноеРасписание");
СпрШтатное.ВыбратьЭлементы();
Пока СпрШтатное.ПолучитьЭлемент() = 1 Цикл
	Если СпрШтатное.ЭтоГруппа() = 1 тогда
		Продолжить;
	КонецЕсли;
	
	ШтатноеРасписание = СоздатьТЗШтатноеРасписание();
	
	Надбавки1 = СоздатьОбъект("ТаблицаЗначений");
	Надбавки1.НоваяКолонка("ПодразделениеОрганизации");
	Надбавки1.НоваяКолонка("Должность");
	Надбавки1.НоваяКолонка("Период");
	Надбавки1.НоваяКолонка("ВидНадбавки");
	Надбавки1.НоваяКолонка("Показатель1");
	Надбавки1.НоваяКолонка("Валюта1");
	
	Надбавки2 = СоздатьОбъект("ТаблицаЗначений");
	Надбавки2.Загрузить(Надбавки1);
	
	Надбавки3 = СоздатьОбъект("ТаблицаЗначений");
	Надбавки3.Загрузить(Надбавки1);
	
	ПерРеквизит = СоздатьОбъект("Периодический");
	ПерРеквизит.ИспользоватьОбъект(, СпрШтатное.ТекущийЭлемент());
	ПерРеквизит.ВыбратьЗначения();
	Пока ПерРеквизит.ПолучитьЗначение() &gt; 0 Цикл
		Если ПустоеЗначение(ПерРеквизит.ДатаЗнач) = 1 Тогда
			Продолжить;
		КонецЕсли;

		Реквизит = ПерРеквизит.ТекущийРеквизит();
		
		НомерСтроки = 0;
		Если ШтатноеРасписание.НайтиЗначение(ПерРеквизит.ДатаЗнач, НомерСтроки, "Период") = 1 Тогда
			ШтатноеРасписание.ПолучитьСтрокуПоНомеру(НомерСтроки);
			
		Иначе
			ШтатноеРасписание.НоваяСтрока();
			ШтатноеРасписание.ПодразделениеОрганизации			= СпрШтатное.Подразделение;
			ШтатноеРасписание.Должность							= СпрШтатное.Должность;
			ШтатноеРасписание.ВалютаТарифнойСтавки				= "Рубль";
			ШтатноеРасписание.Период							= ПерРеквизит.ДатаЗнач;
			ШтатноеРасписание.КоличествоСтавок					= 0;
			
			Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
				ШтатноеРасписание.ВидТарифнойСтавки					= "Месячная";
				Если глТипВидЗначения(СпрШтатное.ВилкаМин) = "Справочник.ТарифныеРазряды" Тогда
					ШтатноеРасписание.МинимальнаяТарифнаяСтавка		= СпрШтатное.ВилкаМин.Тариф.Получить(ПерРеквизит.ДатаЗнач);
				Иначе
					ШтатноеРасписание.МинимальнаяТарифнаяСтавка		= СпрШтатное.ВилкаМин;
				КонецЕсли;
				Если глТипВидЗначения(СпрШтатное.ВилкаМакс) = "Справочник.ТарифныеРазряды" Тогда
					ШтатноеРасписание.МаксимальнаяТарифнаяСтавка	= СпрШтатное.ВилкаМакс.Тариф.Получить(ПерРеквизит.ДатаЗнач);
				Иначе
					ШтатноеРасписание.МаксимальнаяТарифнаяСтавка	= СпрШтатное.ВилкаМакс;
				КонецЕсли;
				
			Иначе
				ШтатноеРасписание.Организация						= ?(СпрШтатное.Подразделение.Обособленное = 0, "Наша организация", СпрШтатное.Подразделение);
				ШтатноеРасписание.Порядок							= СпрШтатное.ПорядокВыводаВОтчеты;
				ШтатноеРасписание.ВидРасчета						= "ОкладПоДням";
				ШтатноеРасписание.МесячнаяСтавка					= СпрШтатное.ВилкаМакс;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Реквизит = "СтавокВсего" Тогда
			ШтатноеРасписание.КоличествоСтавок					= ПерРеквизит.Значение;
			
		ИначеЕсли (Реквизит = "Надбавка1") ИЛИ (Реквизит = "РазмерНадбавки1") Тогда
			НомерСтроки = 0;
			Если Надбавки1.НайтиЗначение(ПерРеквизит.ДатаЗнач, НомерСтроки, "Период") = 1 Тогда
				Надбавки1.ПолучитьСтрокуПоНомеру(НомерСтроки);
				
			Иначе
				ВидНадбавки1						= Надбавки1.ВидНадбавки;
				Показатель1							= Надбавки1.Показатель1;
				
				Надбавки1.НоваяСтрока();
				Надбавки1.ПодразделениеОрганизации	= СпрШтатное.Подразделение;
				Надбавки1.Должность					= СпрШтатное.Должность;
				Надбавки1.Период					= ПерРеквизит.ДатаЗнач;
				Надбавки1.ВидНадбавки				= ВидНадбавки1;
				Надбавки1.Показатель1				= Показатель1;
				
			КонецЕсли;
		
			Если (Реквизит = "Надбавка1") Тогда
				Если ПустоеЗначение(ПерРеквизит.Значение.Расчет) = 0 Тогда
					Надбавки1.ВидНадбавки			= ВернутьТЗВидаРасчета(ПерРеквизит.Значение.Расчет, СпрШтатное.ТекущийЭлемент(), ПерРеквизит.ДатаЗнач);
				КонецЕсли;
				
			Иначе
				Если глТипВидЗначения(ПерРеквизит.Значение) = "Справочник.УсловияТруда" Тогда
					Надбавки1.Показатель1			= (ПерРеквизит.Значение.Коэффициент - 1) * 100;
				Иначе
					Надбавки1.Показатель1			= ПерРеквизит.Значение;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли (Реквизит = "Надбавка2") ИЛИ (Реквизит = "РазмерНадбавки2") Тогда
			НомерСтроки = 0;
			Если Надбавки2.НайтиЗначение(ПерРеквизит.ДатаЗнач, НомерСтроки, "Период") = 1 Тогда
				Надбавки2.ПолучитьСтрокуПоНомеру(НомерСтроки);
				
			Иначе
				ВидНадбавки2						= Надбавки2.ВидНадбавки;
				Показатель2							= Надбавки2.Показатель1;
				
				Надбавки2.НоваяСтрока();
				Надбавки2.ПодразделениеОрганизации	= СпрШтатное.Подразделение;
				Надбавки2.Должность					= СпрШтатное.Должность;
				Надбавки2.Период					= ПерРеквизит.ДатаЗнач;
				Надбавки2.ВидНадбавки				= ВидНадбавки2;
				Надбавки2.Показатель1				= Показатель2;
				
			КонецЕсли;
		
			Если (Реквизит = "Надбавка2") Тогда
				Если ПустоеЗначение(ПерРеквизит.Значение.Расчет) = 0 Тогда
					Надбавки2.ВидНадбавки			= ВернутьТЗВидаРасчета(ПерРеквизит.Значение.Расчет, СпрШтатное.ТекущийЭлемент(), ПерРеквизит.ДатаЗнач);
				КонецЕсли;
				
			Иначе
				Если глТипВидЗначения(ПерРеквизит.Значение) = "Справочник.УсловияТруда" Тогда
					Надбавки2.Показатель1			= (ПерРеквизит.Значение.Коэффициент - 1) * 100;
				Иначе
					Надбавки2.Показатель1			= ПерРеквизит.Значение;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли (Реквизит = "Надбавка3") ИЛИ (Реквизит = "РазмерНадбавки3") Тогда
			НомерСтроки = 0;
			Если Надбавки3.НайтиЗначение(ПерРеквизит.ДатаЗнач, НомерСтроки, "Период") = 1 Тогда
				Надбавки3.ПолучитьСтрокуПоНомеру(НомерСтроки);
				
			Иначе
				ВидНадбавки3						= Надбавки3.ВидНадбавки;
				Показатель3							= Надбавки3.Показатель1;
				
				Надбавки3.НоваяСтрока();
				Надбавки3.ПодразделениеОрганизации	= СпрШтатное.Подразделение;
				Надбавки3.Должность					= СпрШтатное.Должность;
				Надбавки3.Период					= ПерРеквизит.ДатаЗнач;
				Надбавки3.ВидНадбавки				= ВидНадбавки3;
				Надбавки3.Показатель1				= Показатель3;
				
			КонецЕсли;
		
			Если (Реквизит = "Надбавка3") Тогда
				Если ПустоеЗначение(ПерРеквизит.Значение.Расчет) = 0 Тогда
					Надбавки3.ВидНадбавки			= ВернутьТЗВидаРасчета(ПерРеквизит.Значение.Расчет, СпрШтатное.ТекущийЭлемент(), ПерРеквизит.ДатаЗнач);
				КонецЕсли;
				
			Иначе
				Если глТипВидЗначения(ПерРеквизит.Значение) = "Справочник.УсловияТруда" Тогда
					Надбавки3.Показатель1			= (ПерРеквизит.Значение.Коэффициент - 1) * 100;
				Иначе
					Надбавки3.Показатель1			= ПерРеквизит.Значение;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Надбавки1.ВыбратьСтроки();
	Пока Надбавки1.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Надбавки1.ВидНадбавки) = 0 Тогда
			ВыгрузитьПоПравилу(Надбавки1, , , , "НадбавкиПоШтатномуРасписаниюОрганизаций");
		КонецЕсли;
	КонецЦикла;
	Надбавки2.ВыбратьСтроки();
	Пока Надбавки2.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Надбавки2.ВидНадбавки) = 0 Тогда
			ВыгрузитьПоПравилу(Надбавки2, , , , "НадбавкиПоШтатномуРасписаниюОрганизаций");
		КонецЕсли;
	КонецЦикла;
	Надбавки3.ВыбратьСтроки();
	Пока Надбавки3.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Надбавки3.ВидНадбавки) = 0 Тогда
			ВыгрузитьПоПравилу(Надбавки3, , , , "НадбавкиПоШтатномуРасписаниюОрганизаций");
		КонецЕсли;
	КонецЦикла;
	
	глПереписатьИзТаблицыВТаблицу(ШтатноеРасписание, ВыборкаДанных);
	ШтатноеРасписание = 0;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ПлановыеНачисленияИУдержания</Код>
			<Наименование>Плановые начисления и удержания (на дату начала учета)</Наименование>
			<Порядок>350</Порядок>
			<КодПравилаКонвертации>ПлановыеНачисленияИУдержания                      </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ДатаНачалаУчета	= Параметры.ДатаНачалаУчета;

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

ВыборкаДанныхПлановыеНачисления			= СоздатьТЗПлановыеНачисления();
ВыборкаДанныхПлановыеУдержания			= СоздатьТЗПлановыеУдержания();
ВыборкаДанныхРеглУчетПлановыхНачислений	= СоздатьТЗУчетПлановыхНачислений();

СписокСотрудников = РазделитьСотрудниковНаПорции(1,1);

Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
	
	ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
	Для НомерПоПорядку = 1 по ПорцияСотрудников.РазмерСписка() Цикл
		Сотрудник = ПорцияСотрудников.ПолучитьЗначение(НомерПоПорядку);

		ТаблицаРасчетов = глПолучитьВсеРасчетыДействующиеПоСотруднику(Сотрудник);
		Если ТаблицаРасчетов.КоличествоСтрок() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Состояние (СокрЛП(Правило.Наименование) + ": " + Сотрудник);
		
		ТаблицаРасчетов.Сортировать("+Расчет, +Начало, +Окончание");
		
		ПлановыеНачисления		= СоздатьТЗПлановыеНачисления();
		ПлановыеУдержания		= СоздатьТЗПлановыеУдержания();
		УчетПлановыхНачислений	= СоздатьТЗУчетПлановыхНачислений();
		
		ТаблицаРасчетов.ВыбратьСтроки();
		Пока ТаблицаРасчетов.ПолучитьСтроку() = 1 Цикл
			ВР	= ТаблицаРасчетов.Расчет;
			Док	= ТаблицаРасчетов.Документ;
			
			Если (ПустоеЗначение(Док) = 0) И (ТипЗначенияСтр(Док) = "Документ") Тогда
				Если ((Док.ДатаДок &gt;= ДатаНачалаУчета) ИЛИ ((ПустоеЗначение(ТаблицаРасчетов.Окончание) = 0) И (ТаблицаРасчетов.Окончание &lt;= ДатаНачалаУчета)))
					И (ВР.ВходитВГруппу(ГруппаРасчетов.ОсновныеНачисления) = 0) Тогда
					Продолжить;
				КонецЕсли;
				
			Иначе
				Если ((ТаблицаРасчетов.Начало &gt;= ДатаНачалаУчета) ИЛИ ((ПустоеЗначение(ТаблицаРасчетов.Окончание) = 0) И (ТаблицаРасчетов.Окончание &lt;= ДатаНачалаУчета)))
					И (ВР.ВходитВГруппу(ГруппаРасчетов.ОсновныеНачисления) = 0) Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			// Исключение тех ВР, которые переносить нельзя
			Если (МожноПереноситьВидРасчета(ТаблицаРасчетов.Расчет) = 0) Тогда
				Продолжить;
			КонецЕсли;
			
			ВидПВР = ОпределитьВидПВР(ТаблицаРасчетов.Расчет);
				
			// Некоторые ВР в ЗиК считаются плановыми, а в ЗУП/ЗБУ дополнительными
			Если (ВидПВР = "ДополнительныеНачисления") Тогда
				Продолжить;
			КонецЕсли;
			
			// Исключение ссуды
			Если (ТаблицаРасчетов.Расчет = ВидРасчета.ПогашениеСсуды) Тогда
				Продолжить;
			КонецЕсли;
			
			// Сотрудник
			// Если начисление действует бессрочно, то необходимо привязать его к последнему сотруднику
			Если ПустоеЗначение(ТаблицаРасчетов.Окончание) = 1 Тогда
				ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, ДатаНачалаУчета-1);
			Иначе
				ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, ТаблицаРасчетов.Начало);
			КонецЕсли;
			
			// Если у сотрудника нет вида договора, значит и плановых начислений по нему быть не может
			Если СотрудникБезДоговора(ТекущийСотрудник) = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВидПВР = "Удержания" Тогда
				Плановое	= ПлановыеУдержания;
			Иначе
				Плановое	= ПлановыеНачисления;
			КонецЕсли;
			
			Период						= ?(ПустоеЗначение(ТаблицаРасчетов.Начало) = 1, ТекущийСотрудник.Получить("ДатаНачала"), ТаблицаРасчетов.Начало);
			ПериодЗавершения			= ТаблицаРасчетов.Окончание + ?(ПустоеЗначение(ТаблицаРасчетов.Окончание) = 0, 1, 0);
			
			Действие					= "Начать";
			ДействиеЗавершения			= ?(ПустоеЗначение(ПериодЗавершения) = 0, "Прекратить", "");
			
			ТЗВидаРасчета				= ВернутьТЗВидаРасчета(ТаблицаРасчетов.Расчет, ТаблицаРасчетов.Документ, Период, Сотрудник, ТаблицаРасчетов.Строка, ТекущийСотрудник.Получить("ВидДоговора"));
			ВидРасчетаНаименование		= ТЗВидаРасчета.Наименование;
			
			// Сотруднику может быть назначено одно и то же плановое начисление/удержание несколько раз
			// Такие начисления/удержания необходимо просуммировать, иначе при загрузке возникнет ошибка
			// Суммировать таблицы значений нельзя
			Найдено = 0;
			Если ВР.ВходитВГруппу(ГруппаРасчетов.ОсновныеНачисления) = 0 Тогда
				Плановое.ВыбратьСтроки();
				Пока Плановое.ПолучитьСтроку() = 1 Цикл
					Если ТипЗначенияСтр(Плановое.ВидРасчета) &lt;&gt; "ТаблицаЗначений" Тогда
						Продолжить;
					КонецЕсли;
					Если    (Плановое.ВидРасчета.ВР &lt;&gt; ВР)
						ИЛИ (Плановое.ВидРасчета.Наименование &lt;&gt; ВидРасчетаНаименование) Тогда
						Продолжить;
					КонецЕсли;
					
					Найдено = 1;
					Прервать;
				КонецЦикла;
			КонецЕсли;
			
			Если Найдено = 0 Тогда
				Плановое.НоваяСтрока();
				Плановое.Период						= Период;
				Плановое.ПериодЗавершения			= ПериодЗавершения;
				Плановое.Организация				= "Наша организация";
				Если ВидПВР = "Удержания" Тогда
					Плановое.Физлицо				= Сотрудник.ОсновнойЭлемент;
					Плановое.ДокументОснование		= ТаблицаРасчетов.Документ;
					
				Иначе
					Плановое.Сотрудник				= ТекущийСотрудник;
					
					Если	(ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФСС)
						ИЛИ	(ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007)
						ИЛИ (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007Военные) Тогда
						Если Плановое.Период &gt;= глДатаНачалаРеформыСоцСтрахования() Тогда
							РасчетПоПравилам2010Года = 0;
							Если Док.Вид() = "ОтпускПоУходуЗаРебенком" Тогда
								РасчетПоПравилам2010Года = Док.РасчетПоПравилам2010Года;
							КонецЕсли;
							
							Если (РасчетПоПравилам2010Года = 0) И ((Плановое.Период &gt;= глДатаНачалаРеформыСоцСтрахования())
								Или (ПустоеЗначение(Плановое.Период) = 0) И (Док.ДатаДок &gt;= глДатаНачалаРеформыСоцСтрахования())) Тогда
								Плановое.ДатаНачалаСобытия	= Плановое.Период;
							Иначе	
								Плановое.ДатаНачалаСобытия	= глДатаЗаменыЕСНСтраховымиВзносами();
							КонецЕсли;
						Иначе
							Плановое.ДатаНачалаСобытия		= Плановое.Период;
						КонецЕсли;
					КонецЕсли;
					
					Плановое.ПервичныйДокумент		= ТаблицаРасчетов.Документ;
					
				КонецЕсли;
				
				Плановое.Действие					= Действие;
				Плановое.ДействиеЗавершения			= ДействиеЗавершения;
				Плановое.ВидРасчета					= ТЗВидаРасчета;
				
				Если (ВидПВР &lt;&gt; "Удержания")
					И (ВР &lt;&gt; ВидРасчета.ОплатаПоОкладу)
					И (ВР &lt;&gt; ВидРасчета.ОплатаПоТабелю)
					И (ВР &lt;&gt; ВидРасчета.ОплатаПоТарифу) Тогда
					Плановое.ВидРасчетаИзмерение	= Плановое.ВидРасчета;
				КонецЕсли;
			
			Иначе
				// запомним текущие значения показателей, что бы затем приплюсовать их к тем, которые будут в текущем документе
				Показатель1 = Плановое.Показатель1;
				Показатель2 = Плановое.Показатель2;
				Показатель3 = Плановое.Показатель3;
				
			КонецЕсли;
			
			ЗаполнитьПоказателиРасчета(Плановое, Плановое.ВидРасчета, ТаблицаРасчетов.Документ, ТаблицаРасчетов.Строка, ТаблицаРасчетов.Расчет, Сотрудник, Период, 1);
			
			Если Найдено = 1 Тогда
				Плановое.Показатель1 = Плановое.Показатель1 + Показатель1;
				Плановое.Показатель2 = Плановое.Показатель2 + Показатель2;
				Плановое.Показатель3 = Плановое.Показатель3 + Показатель3;
			КонецЕсли;
			
			// Доплата за вредные условия труда, но установлены нормальные условия труда
			Если  (ТаблицаРасчетов.Расчет = ВидРасчета.ДоплатаЗаВредность)
				И (ПустоеЗначение(Плановое.Показатель1) = 1) Тогда
				Плановое.УдалитьСтроку();
				Продолжить;
			КонецЕсли;
			
			// Начисления и удержания фиксированными суммами с пустой суммой тоже переносить не будем
			Если ((Плановое.ВидРасчета.СпособРасчета = "ФиксированнойСуммой")
			      ИЛИ (Плановое.ВидРасчета.СпособРасчета = "УдержаниеФиксированнойСуммой"))
			   И (ПустоеЗначение(Плановое.Показатель1) = 1) Тогда
				Плановое.УдалитьСтроку();
				Продолжить;
			КонецЕсли;
			
			// РК без коэффициента
			Если  (ТаблицаРасчетов.Расчет = ВидРасчета.РайонныйКоэффициент)
				И (ПустоеЗначение(Плановое.Показатель1) = 1) Тогда
				Плановое.УдалитьСтроку();
				Продолжить;
			КонецЕсли;
			
			// В ЗУП/ЗБУ для отпуска по уходу за ребенком до 1.5 лет нужен вид расчета ОтпускБезОплатыПоТКРФ
			Если (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФСС)
				ИЛИ (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007)
				ИЛИ (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007Военные) Тогда
				
				Найдено = 0;
				Если ВР.ВходитВГруппу(ГруппаРасчетов.ОсновныеНачисления) = 0 Тогда
					Плановое.ВыбратьСтроки();
					Пока Плановое.ПолучитьСтроку() = 1 Цикл
						Если    (Плановое.ВидРасчета &lt;&gt; "ОтпускПоУходуЗаРебенкомБезОплаты") Тогда
							Продолжить;
						КонецЕсли;
						
						Найдено = 1;
						Прервать;
					КонецЦикла;
				КонецЕсли;
				
				Если Найдено = 0 Тогда
					Плановое.НоваяСтрока();
					Плановое.Период						= Период;
					Плановое.ПериодЗавершения			= ПериодЗавершения;
					Плановое.Организация				= "Наша организация";
					Плановое.Сотрудник					= ТекущийСотрудник;
					Плановое.ПервичныйДокумент			= ТаблицаРасчетов.Документ;
					Плановое.Действие					= Действие;
					Плановое.ДействиеЗавершения			= ДействиеЗавершения;
					Плановое.ВидРасчета					= "ОтпускПоУходуЗаРебенкомБезОплаты";
					Плановое.ВидРасчетаИзмерение		= Плановое.ВидРасчета;
				КонецЕсли;
			КонецЕсли;
			
			// Правила отражения плановых начислений в учете
			Если (ВидПВР = "ОсновныеНачисления") И (ПустоеЗначение(ТаблицаРасчетов.Документ) = 0) И (ТипЗначенияСтр(ТаблицаРасчетов.Документ) = "Документ") Тогда
				Если ПустоеЗначение(ТаблицаРасчетов.Строка) = 0 Тогда
					ТаблицаРасчетов.Документ.ПолучитьСтрокуПоНомеру(ТаблицаРасчетов.Строка);
				КонецЕсли;
				Попытка
					ШаблонПроводки = ТаблицаРасчетов.Документ.ПолучитьАтрибут("ШаблонПроводки");
				Исключение
					ШаблонПроводки = "";
				КонецПопытки;
				
				Если ПустоеЗначение(ШаблонПроводки) = 0 Тогда
					Найдено = 0;
					УчетПлановыхНачислений.ВыбратьСтроки();
					Пока УчетПлановыхНачислений.ПолучитьСтроку() = 1 Цикл
						Если УчетПлановыхНачислений.ВидРасчета.Наименование = ВидРасчетаНаименование Тогда
							Найдено = 1;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если Найдено = 0 Тогда
						// Начало года устанавливается потому, что необходимо сформировать документы "Отражение в учете"
						// с учетом настройки способа отражения
						УчетПлановыхНачислений.НоваяСтрока();
						УчетПлановыхНачислений.Период								= НачГода(ДатаНачалаУчета);
						УчетПлановыхНачислений.Организация							= "Наша организация";
						УчетПлановыхНачислений.Сотрудник							= ТекущийСотрудник;
						УчетПлановыхНачислений.ВидРасчета							= ТЗВидаРасчета;
					КонецЕсли;
					
					Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
						УчетПлановыхНачислений.СпособОтраженияВБухучете				= ПолучитьСпособОтраженияПоШаблону(ШаблонПроводки);
						УчетПлановыхНачислений.ОтнесениеРасходовКДеятельностиЕНВД	= "РасходыРаспределяются";
					Иначе
						УчетПлановыхНачислений.СтатьяФинансирования					= ПолучитьОтражениеИзШаблона(ШаблонПроводки);
						УчетПлановыхНачислений.СтатьяРасходов						= ?(ПустоеЗначение(ШаблонПроводки) = 0, ШаблонПроводки, ШаблонПроводкиПоУмолчанию());
						УчетПлановыхНачислений.КОСГУ								= УчетПлановыхНачислений.СтатьяФинансирования.КОСГУ;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		глПереписатьИзТаблицыВТаблицу(ПлановыеНачисления, ВыборкаДанныхПлановыеНачисления);
		ПлановыеНачисления = 0;
		
		глПереписатьИзТаблицыВТаблицу(ПлановыеУдержания, ВыборкаДанныхПлановыеУдержания);
		ПлановыеУдержания = 0;
		
		глПереписатьИзТаблицыВТаблицу(УчетПлановыхНачислений, ВыборкаДанныхРеглУчетПлановыхНачислений);
		УчетПлановыхНачислений = 0;
		
	КонецЦикла;
	
КонецЦикла;

ВыборкаДанныхПлановыеУдержания.Свернуть("Период, Организация, Физлицо, Действие, ВидРасчета, Показатель1, Валюта1, Показатель2, Валюта2, Показатель3, ПериодЗавершения, ДействиеЗавершения, ДокументОснование, Получатель", "");

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	Если Константа.ЕстьВоенные = 1 Тогда
		ОкладыПоЗваниям = СоздатьОбъект("ТаблицаЗначений");
		ОкладыПоЗваниям.НоваяКолонка("Период");
		ОкладыПоЗваниям.НоваяКолонка("Звание");
		ОкладыПоЗваниям.НоваяКолонка("Размер");
		
		ПерРеквизит = СоздатьОбъект("Периодический");
		СпрРазряды = СоздатьОбъект("Справочник.РазрядыЧиныЗванияГосслужащих");
		СпрРазряды.ВыбратьЭлементы();
		Пока СпрРазряды.ПолучитьЭлемент() = 1 Цикл
			ПерРеквизит.ИспользоватьОбъект("ОкладНадбавка", СпрРазряды.ТекущийЭлемент());
			ПерРеквизит.ОбратныйПорядок();
			ПерРеквизит.ВыбратьЗначения(ДатаНачала);
			ЕстьЗначения = 0;
			Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
				ЕстьЗначения = 1;
				ОкладыПоЗваниям.НоваяСтрока();
				ОкладыПоЗваниям.Период	= ПерРеквизит.ДатаЗнач;
				ОкладыПоЗваниям.Звание	= СпрРазряды.ТекущийЭлемент();
				ОкладыПоЗваниям.Размер	= ПерРеквизит.Значение;
			КонецЦикла;
			Если ЕстьЗначения = 0 Тогда
				ПерРеквизит.ВыбратьЗначения();
				Если ПерРеквизит.ПолучитьЗначение() = 1 Тогда
					ОкладыПоЗваниям.НоваяСтрока();
					ОкладыПоЗваниям.Период	= ПерРеквизит.ДатаЗнач;
					ОкладыПоЗваниям.Звание	= СпрРазряды.ТекущийЭлемент();
					ОкладыПоЗваниям.Размер	= ПерРеквизит.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		ОкладыПоЗваниям.ВыбратьСтроки();
		Пока ОкладыПоЗваниям.ПолучитьСтроку() = 1 Цикл
			ВыгрузитьПоПравилу(ОкладыПоЗваниям, , , , "ОкладыПоВоинскимИСпециальнымЗваниям");
		КонецЦикла;
	КонецЕсли;

	Если (Константа.ЕстьГосслужащие = 1) ИЛИ (Константа.ЕстьМуниципальныеСлужащие = 1) Тогда
		ОкладыПоЧинамРангам = СоздатьОбъект("ТаблицаЗначений");
		ОкладыПоЧинамРангам.НоваяКолонка("Период");
		ОкладыПоЧинамРангам.НоваяКолонка("КлассныйЧин");
		ОкладыПоЧинамРангам.НоваяКолонка("Размер");
		
		ПерРеквизит = СоздатьОбъект("Периодический");
		СпрРазряды = СоздатьОбъект("Справочник.РазрядыЧиныЗванияГосслужащих");
		СпрРазряды.ВыбратьЭлементы();
		Пока СпрРазряды.ПолучитьЭлемент() = 1 Цикл
			ПерРеквизит.ИспользоватьОбъект("ОкладНадбавка", СпрРазряды.ТекущийЭлемент());
			ПерРеквизит.ОбратныйПорядок();
			ПерРеквизит.ВыбратьЗначения(ДатаНачала);
			ЕстьЗначения = 0;
			Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
				ЕстьЗначения = 1;
				ОкладыПоЧинамРангам.НоваяСтрока();
				ОкладыПоЧинамРангам.Период		= ПерРеквизит.ДатаЗнач;
				ОкладыПоЧинамРангам.КлассныйЧин	= СпрРазряды.ТекущийЭлемент();
				ОкладыПоЧинамРангам.Размер		= ПерРеквизит.Значение;
			КонецЦикла;
			Если ЕстьЗначения = 0 Тогда
				ПерРеквизит.ВыбратьЗначения();
				Если ПерРеквизит.ПолучитьЗначение() = 1 Тогда
					ОкладыПоЧинамРангам.НоваяСтрока();
					ОкладыПоЧинамРангам.Период		= ПерРеквизит.ДатаЗнач;
					ОкладыПоЧинамРангам.КлассныйЧин	= СпрРазряды.ТекущийЭлемент();
					ОкладыПоЧинамРангам.Размер		= ПерРеквизит.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		ОкладыПоЧинамРангам.ВыбратьСтроки();
		Пока ОкладыПоЧинамРангам.ПолучитьСтроку() = 1 Цикл
			ВыгрузитьПоПравилу(ОкладыПоЧинамРангам, , , , "ОкладыПоКласснымЧинамДипломатическимРангам");
		КонецЦикла;
	КонецЕсли;
КонецЕсли;

ПлановыеНачисленияИУдержания = СоздатьОбъект("СписокЗначений");
ПлановыеНачисленияИУдержания.Установить("Дата",					ТекущаяДата());
ПлановыеНачисленияИУдержания.Установить("ПериодРегистрации",	НачГода(ДатаНачалаУчета));
ПлановыеНачисленияИУдержания.Установить("Номер",				"ПНУ");
ПлановыеНачисленияИУдержания.Установить("Организация",			"Наша организация");
ПлановыеНачисленияИУдержания.Установить("Комментарий",			"Плановые начисления и удержания на дату начала учета");

ПлановыеНачисленияИУдержания.Установить("ПлановыеНачисленияРаботниковОрганизаций",			ВыборкаДанныхПлановыеНачисления);
ПлановыеНачисленияИУдержания.Установить("ПлановыеУдержанияРаботниковОрганизаций",			ВыборкаДанныхПлановыеУдержания);
ПлановыеНачисленияИУдержания.Установить("РеглУчетПлановыхНачисленийРаботниковОрганизаций",	ВыборкаДанныхРеглУчетПлановыхНачислений);

Если 	(ВыборкаДанныхПлановыеНачисления.КоличествоСтрок() &gt; 0)
	ИЛИ	(ВыборкаДанныхПлановыеУдержания.КоличествоСтрок() &gt; 0)
	ИЛИ	(ВыборкаДанныхРеглУчетПлановыхНачислений.КоличествоСтрок() &gt; 0) Тогда
	ВыборкаДанных.ДобавитьЗначение(ПлановыеНачисленияИУдержания);
КонецЕсли;

Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>КомиссионнаяВыручка</Код>
			<Наименование>Комиссионная выручка (за период переноса)</Наименование>
			<Порядок>400</Порядок>
			<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
			<ОбъектВыборки>ДокументСсылка.КомиссионнаяВыручка</ОбъектВыборки>
			<ПередВыгрузкойОбъекта>Состояние(Правило.Наименование);

КомиссионнаяВыручка = СоздатьОбъект("ТаблицаЗначений");
КомиссионнаяВыручка.НоваяКолонка("ПериодДействия");
КомиссионнаяВыручка.НоваяКолонка("Организация");
КомиссионнаяВыручка.НоваяКолонка("Сотрудник");
КомиссионнаяВыручка.НоваяКолонка("Показатель");
КомиссионнаяВыручка.НоваяКолонка("Значение");
КомиссионнаяВыручка.НоваяКолонка("Валюта");

Объект.ВыбратьСтроки();
Пока Объект.ПолучитьСтроку() = 1 Цикл
	ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(Объект.Сотрудник, Объект.ДатаДок);
	
	КомиссионнаяВыручка.НоваяСтрока();
	КомиссионнаяВыручка.ПериодДействия	= НачМесяца(Объект.ДатаДок);
	
	КомиссионнаяВыручка.Организация		= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Объект.Сотрудник, Объект.ДатаДок);
	
	КомиссионнаяВыручка.Сотрудник		= ТекущийСотрудник;
	КомиссионнаяВыручка.Показатель		= ПолучитьПоказатель("Комиссионная выручка");
	КомиссионнаяВыручка.Значение		= Объект.Выручка;
	КомиссионнаяВыручка.Валюта			= ?(ПустоеЗначение(Объект.Валюта) = 0, Объект.Валюта, "Рубль");
КонецЦикла;

КомиссионнаяВыручка.ВыбратьСтроки();
Пока КомиссионнаяВыручка.ПолучитьСтроку() = 1 Цикл
	ВыгрузитьПоПравилу(КомиссионнаяВыручка, , , , "КомиссионнаяВыручка");
КонецЦикла;

Отказ = 1</ПередВыгрузкойОбъекта>
		</Правило>
		<Правило Отключить="false">
			<Код>ДоговорЗаймаСРаботником</Код>
			<Наименование>Договор займа с работником (за период переноса)</Наименование>
			<Порядок>450</Порядок>
			<КодПравилаКонвертации>ЗаймыРаботников                                   </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

ВыборкаДанныхПогашениеЗаймов = СоздатьТЗПогашениеЗайма();

ВыборкаДанныхСведенияОЗаймах = СоздатьОбъект("ТаблицаЗначений");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("ДатаДокумента");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("НомерДокумента");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("Организация");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("ОтражатьВБухгалтерскомУчете");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("ФизЛицо");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("ДоговорЗайма");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("СуммаЗайма");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("ПроцентЗаПользованиеЗаймом");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("НачалоПогашения");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("ПорядокПогашенияЗайма");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("СрокПогашения");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("НачислятьМатериальнуюВыгоду");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("СтавкаНалогообложенияРезидента");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("СчетУчетаПроцентовПоЗайму");
ВыборкаДанныхСведенияОЗаймах.НоваяКолонка("ВалютаДокумента");

ДокСсуда = СоздатьОбъект("Документ.СсудаПредприятия");
ДокСсуда.ВыбратьДокументы();
Пока ДокСсуда.ПолучитьДокумент() = 1 Цикл
	Если ДокСсуда.Окончание &lt; ДатаНачала Тогда
		Продолжить;
	КонецЕсли;
	
	Подразделение	= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ДокСсуда.Сотрудник, ДокСсуда.Начало);
	Организация		= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
	
	Лет = 0; Месяцев = 0;
	глРазобратьРазностьДат(НачМесяца(ДокСсуда.Окончание), НачМесяца(ДокСсуда.Начало), Лет, Месяцев);
	
	ВыборкаДанныхСведенияОЗаймах.НоваяСтрока();
	ВыборкаДанныхСведенияОЗаймах.ДатаДокумента						= ПолучитьДатуV8(ДокСсуда.ДатаДок, ДокСсуда.ПолучитьВремя());
	ВыборкаДанныхСведенияОЗаймах.НомерДокумента						= ДокСсуда.НомерДок;
	ВыборкаДанныхСведенияОЗаймах.Организация						= Организация;
	ВыборкаДанныхСведенияОЗаймах.ОтражатьВБухгалтерскомУчете		= 1;
	ВыборкаДанныхСведенияОЗаймах.ФизЛицо							= ДокСсуда.Сотрудник;
	ВыборкаДанныхСведенияОЗаймах.ДоговорЗайма						= ДокСсуда.ТекущийДокумент();
	ВыборкаДанныхСведенияОЗаймах.СуммаЗайма							= ДокСсуда.Размер;
	ВыборкаДанныхСведенияОЗаймах.ПроцентЗаПользованиеЗаймом			= ДокСсуда.Процент;
	ВыборкаДанныхСведенияОЗаймах.НачалоПогашения					= ДокСсуда.Начало;
	ВыборкаДанныхСведенияОЗаймах.ПорядокПогашенияЗайма				= ?(ДокСсуда.ПогашатьЕжемесячно = 0, "ПоОкончанииСрока", "Ежемесячно");
	ВыборкаДанныхСведенияОЗаймах.СрокПогашения						= Лет * 12 + Месяцев + 1;
	ВыборкаДанныхСведенияОЗаймах.НачислятьМатериальнуюВыгоду		= ДокСсуда.ИсчислятьМатВыгоду;
	Если ДокСсуда.ИсчислятьМатВыгоду = 1 Тогда
		ВыборкаДанныхСведенияОЗаймах.СтавкаНалогообложенияРезидента	= ?(ДокСсуда.ИсточникСредств = 1, "Ставка35", "Ставка13");
	Иначе
		ВыборкаДанныхСведенияОЗаймах.СтавкаНалогообложенияРезидента	= "";
	КонецЕсли;
	ВыборкаДанныхСведенияОЗаймах.СчетУчетаПроцентовПоЗайму			= "ПрочиеДоходы";
	ВыборкаДанныхСведенияОЗаймах.ВалютаДокумента					= ?(ПустоеЗначение(ДокСсуда.Валюта) = 0, ДокСсуда.Валюта, "Рубль");
	
	ВыборкаДанныхПогашениеЗаймов.НоваяСтрока();
	ВыборкаДанныхПогашениеЗаймов.Период				= ПолучитьДатуV8(ДокСсуда.ДатаДок, ДокСсуда.ПолучитьВремя());
	ВыборкаДанныхПогашениеЗаймов.Организация		= Организация;
	ВыборкаДанныхПогашениеЗаймов.Физлицо			= ДокСсуда.Сотрудник;
	ВыборкаДанныхПогашениеЗаймов.ОсновнойДолг		= ДокСсуда.Размер;
	ВыборкаДанныхПогашениеЗаймов.ДоговорЗайма		= ДокСсуда.ТекущийДокумент();	
КонецЦикла; 

ЗаймыРаботников = СоздатьОбъект("СписокЗначений");
ЗаймыРаботников.Установить("Дата",									ТекущаяДата());
ЗаймыРаботников.Установить("ПериодРегистрации",						Параметры.ДатаНачалаУчета);
ЗаймыРаботников.Установить("Номер",									"ДЗР");
ЗаймыРаботников.Установить("Организация",							"Наша организация");
ЗаймыРаботников.Установить("Комментарий",							"Документы займов работниками");
ЗаймыРаботников.Установить("СведенияОЗаймах",						ВыборкаДанныхСведенияОЗаймах);
ЗаймыРаботников.Установить("ПогашениеЗаймовРаботникамиОрганизаций",	ВыборкаДанныхПогашениеЗаймов);

Если (ВыборкаДанныхСведенияОЗаймах.КоличествоСтрок() &gt; 0) Или (ВыборкаДанныхПогашениеЗаймов.КоличествоСтрок() &gt; 0) Тогда
	ВыборкаДанных.ДобавитьЗначение(ЗаймыРаботников);
КонецЕсли;

Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>КоэффициентИндексацииЗаработка</Код>
			<Наименование>Коэффициент индексации заработка (за период переноса)</Наименование>
			<Порядок>500</Порядок>
			<КодПравилаКонвертации>КоэффициентИндексацииЗаработка                    </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

ВыборкаДанныхКоэффициентИндексацииЗаработка		= СоздатьОбъект("ТаблицаЗначений");
ВыборкаДанныхКоэффициентИндексацииЗаработка.НоваяКолонка("Организация");
ВыборкаДанныхКоэффициентИндексацииЗаработка.НоваяКолонка("Сотрудник");
ВыборкаДанныхКоэффициентИндексацииЗаработка.НоваяКолонка("Период");
ВыборкаДанныхКоэффициентИндексацииЗаработка.НоваяКолонка("Коэффициент");

СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
СпрСотрудники.ВыбратьЭлементы();
Пока СпрСотрудники.ПолучитьЭлемент() = 1 Цикл
	Если СпрСотрудники.ЭтоГруппа() = 1 тогда
		Продолжить;
	КонецЕсли;
	
	КоэффициентИндексацииЗаработка		= СоздатьОбъект("ТаблицаЗначений");
	КоэффициентИндексацииЗаработка.НоваяКолонка("Организация");
	КоэффициентИндексацииЗаработка.НоваяКолонка("Сотрудник");
	КоэффициентИндексацииЗаработка.НоваяКолонка("Период");
	КоэффициентИндексацииЗаработка.НоваяКолонка("Коэффициент");
	
	Сотрудник = СпрСотрудники.ТекущийЭлемент();
	
	Коэффициенты = глПолучитьКоэффициентПовышенияСреднегоЗаработка(Сотрудник, ДатаНачала, ДатаОкончания);
	
	Коэффициенты.ВыбратьСтроки();
	Пока Коэффициенты.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(Коэффициенты.ДатаПовышенияОклада) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтроки = 0;
		Если КоэффициентИндексацииЗаработка.НайтиЗначение(Коэффициенты.ДатаПовышенияОклада, НомерСтроки, "Период") = 1 Тогда
			КоэффициентИндексацииЗаработка.ПолучитьСтрокуПоНомеру(НомерСтроки);
			
		Иначе
			// Сотрудник
			ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(Сотрудник, Коэффициенты.ДатаПовышенияОклада);
			
			// Подразделение
			Подразделение		= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Сотрудник, Коэффициенты.ДатаПовышенияОклада);
		
			КоэффициентИндексацииЗаработка.НоваяСтрока();
			КоэффициентИндексацииЗаработка.Организация	= Подразделение;
			КоэффициентИндексацииЗаработка.Сотрудник	= ТекущийСотрудник;
			КоэффициентИндексацииЗаработка.Период		= Коэффициенты.ДатаПовышенияОклада;
			
		КонецЕсли;
		
		КоэффициентИндексацииЗаработка.Коэффициент		= Коэффициенты.КоэффициентПовышенияОклада;
	КонецЦикла;
	
	глПереписатьИзТаблицыВТаблицу(КоэффициентИндексацииЗаработка, ВыборкаДанныхКоэффициентИндексацииЗаработка);
	КоэффициентИндексацииЗаработка = 0;
	
КонецЦикла;

КоэффициентИндексацииЗаработка = СоздатьОбъект("СписокЗначений");
КоэффициентИндексацииЗаработка.Установить("Дата",							ТекущаяДата());
КоэффициентИндексацииЗаработка.Установить("ПериодРегистрации",				Параметры.ДатаНачалаУчета);
КоэффициентИндексацииЗаработка.Установить("Номер",							"КИЗ");
КоэффициентИндексацииЗаработка.Установить("Организация",					"Наша организация");
КоэффициентИндексацииЗаработка.Установить("Комментарий",					"Индексация заработка");
КоэффициентИндексацииЗаработка.Установить("КоэффициентИндексацииЗаработка",	ВыборкаДанныхКоэффициентИндексацииЗаработка);

Если ВыборкаДанныхКоэффициентИндексацииЗаработка.КоличествоСтрок() &gt; 0 Тогда
	ВыборкаДанных.ДобавитьЗначение(КоэффициентИндексацииЗаработка);
КонецЕсли;

Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ФактическиеНачисленияИУдержания</Код>
			<Наименование>Начисления и удержания (за период переноса)</Наименование>
			<Порядок>550</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ТаблицаКодовОКАТО = "";
ТаблицаКодовОКТМО = "";
глЗаполнитьТаблицыКодовТерриторийКПП(ТаблицаКодовОКАТО,ТаблицаКодовОКТМО);

Параметры.ТаблицаКодовОКАТО		= ТаблицаКодовОКАТО;
Параметры.ТаблицаКодовОКТМО		= ТаблицаКодовОКТМО;

ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
Если ЖрнЗарплата.ВыбратьЗаписи(ДатаНачала, ДатаОкончания) = 0 Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;
ДатаПервойЗаписи	= Макс(ЖрнЗарплата.ДатаНачала, ДатаНачала);
ДатаПоследнейЗаписи	= Мин(ЖрнЗарплата.ТекущийПериод().ДатаОкончания, ДатаОкончания);

Если ДатаПоследнейЗаписи &lt; ДатаНачала Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;

СписокСотрудников = РазделитьСотрудниковНаПорции();

ЖрнЗарплата = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(РезультатыНачисленийИУдержаний)
|Период С ДатаНачалаТекущегоМесяца ПО ДатаОкончанияТекущегоМесяца;
|Объект							= ЖурналРасчетов.Зарплата.Объект;
|ФизЛицо						= ЖурналРасчетов.Зарплата.Объект.ОсновнойЭлемент;
|РодительскийДокумент			= ЖурналРасчетов.Зарплата.РодительскийДокумент; 
|ДокументОснование				= ЖурналРасчетов.Зарплата.ТекущийДокумент; 
|ЗаписьЖР						= ЖурналРасчетов.Зарплата.ТекущаяЗапись;
|ВидРасч						= ЖурналРасчетов.Зарплата.ВидРасч;
|ПериодРегистрации				= ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ПериодДействия					= ЖурналРасчетов.Зарплата.ПериодДействия;
|ПериодДействияДатаНачала		= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаНачала;
|ПериодДействияДатаОкончания	= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаОкончания;
|Дни							= ЖурналРасчетов.Зарплата.Дни;
|Часы							= ЖурналРасчетов.Зарплата.Часы;
|Результат						= ЖурналРасчетов.Зарплата.Результат;
|Группировка Объект;
|Группировка ЗаписьЖР;
|Условие((Результат &lt;&gt; 0)
|	ИЛИ (ВидРасч.ВходитВГруппу(ГруппаРасчетов.УчитыватьДни) = 1)
|	ИЛИ (ЯвляетсяАвторскимДоговором(ВидРасч) = 1)
|	ИЛИ (ВидРасч = ВидРасчета.ОплатаПоДоговору));
|Условие((ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеНачисления) = 1)
|	ИЛИ (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме) = 1)
|	ИЛИ (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания) = 1));
|Условие(ПорцияСотрудников.Принадлежит(ФизЛицо) = 1);
|"//}}ЗАПРОС
;
ОсновнойГрафикРаботы	= Константа.ОсновнойГрафик;

НадоРаспределятьПоИФ	= Параметры.РаспределятьПоИсточникамФинансирования;

ИскатьВоенных = 0;
ИскатьГосслужащих = 0;
Если НадоРаспределятьПоИФ = 1 Тогда 
	
	ИскатьВоенных = Константа.ЕстьВоенные;
	ИскатьГосслужащих = Константа.ЕстьГосслужащие;
	
	// чтобы не обращаться лишний раз в информационную базу,
	// составим таблицу соответствия видов расчета из облагаемой базы ЕСН
	// и придуманных нами типов дохода по ЕСН
	СоответствиеВРкодамДоходовЕСН = ПолучитьСоответствиеВРкодамДоходовЕСН();
	СоответствиеВРкодамДоходовСВ  = глПолучитьСоответствиеВРкодамДоходовСтраховыхВзносов();
	
КонецЕсли;

ЕстьОшибкиВЖР = 0;

СписокПустыхДокументов = СоздатьОбъект("СписокЗначений");

Для ТекущийГод = ДатаГод(ДатаПервойЗаписи) По ДатаГод(ДатаПоследнейЗаписи) Цикл
	
	Если ТекущийГод = ДатаГод(ДатаПервойЗаписи) Тогда
		ДатаНачалаТекущегоГода		= ДатаПервойЗаписи;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;

	Если ТекущийГод = ДатаГод(ДатаПоследнейЗаписи) Тогда
		ДатаОкончанияТекущегоГода	= ДатаПоследнейЗаписи;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
		
	Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
		СписокПустыхДокументов.ДобавитьЗначение(Дата(ТекущийГод, ТекущийМесяц, 1));
	КонецЦикла;
		
	Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
		
		ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
		Если НадоРаспределятьПоИФ = 1 Тогда
			ТаблицаНДФЛСведенияОДоходах				= СоздатьТЗНДФЛСведенияОДоходах(); 
			ТаблицаНДФЛИмущественныеВычетыФизлиц	= СоздатьТЗНДФЛИмущественныеВычеты();
			
			ДоходыВычетыНалогиСотрудников			= СобратьДанныеДляНДФЛВыбор(ПорцияСотрудников, КонГода(Дата(ТекущийГод,12,15)), ТаблицаНДФЛСведенияОДоходах, ТаблицаНДФЛИмущественныеВычетыФизлиц);
		Иначе
			ДоходыВычетыНалогиСотрудников			= "";
		КонецЕсли;
		
		Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл

			ДатаНачалаТекущегоМесяца	= Дата(ТекущийГод, ТекущийМесяц, 1);
			ДатаОкончанияТекущегоМесяца	= КонМесяца(ДатаНачалаТекущегоМесяца);
			
			ПериодРегистрации	= ДатаНачалаТекущегоМесяца;
			НомерДок			= "НЗР-" + Прав(ДатаГод(ПериодРегистрации), 2) + Прав("0" + ДатаМесяц(ПериодРегистрации), 2);
			
			Если ЖрнЗарплата.Выполнить(ТекстЗапроса) = 0 Тогда
				Продолжить;
			КонецЕсли;

			ОсновныеНачисления			= СоздатьТЗОсновныеНачисления();
			ДополнительныеНачисления	= СоздатьТЗДополнительныеНачисления();
			Удержания					= СоздатьТЗУдержания();
			
			БУОсновныеНачисления		= СоздатьТЗОсновныеНачисления();
			БУДополнительныеНачисления	= СоздатьТЗДополнительныеНачисления();
			БУУдержания					= СоздатьТЗУдержания();
			
			Взаиморасчеты				= СоздатьТЗВзаиморасчеты();
			
			Пока ЖрнЗарплата.Группировка(1) = 1 Цикл // По сотрудникам
				
				Если ЖрнЗарплата.Объект.ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				Военнослужащий = 0;
				Прокурор = 0;
				
				Если ИскатьВоенных = 1 Тогда
					
					Если глВоеннослужащий(ЖрнЗарплата.Объект, ПериодРегистрации) = 1 Тогда
						Военнослужащий = 1;
					ИначеЕсли глВоеннослужащий(ЖрнЗарплата.Объект, КонМесяца(ПериодРегистрации)) = 1 Тогда  
						Военнослужащий = 1;
					КонецЕсли;
		
				КонецЕсли;	
						  
				Если (ИскатьВоенных = 1) или (ИскатьГосслужащих = 1) Тогда
					
					Если ЖрнЗарплата.Объект.Должность.Получить(ПериодРегистрации).ВыплачиватьПрокурорские &gt; 0 Тогда
						Прокурор = 1;
					
					ИначеЕсли ЖрнЗарплата.Объект.Должность.Получить(КонМесяца(ПериодРегистрации)).ВыплачиватьПрокурорские &gt; 0 Тогда
						Прокурор = 1;
					КонецЕсли;	
					
				КонецЕсли;
				
				Пока ЖрнЗарплата.Группировка(2) = 1 Цикл  // По записям ЖР
					Если (ЖрнЗарплата.ЗаписьЖР.Перерасчет = 0) Или (ЖрнЗарплата.ЗаписьЖР.Сторно = 1) Или (ЖрнЗарплата.ЗаписьЖР.ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ) = 1) Тогда
						ДобавитьЗаписьРегистраРасчетов(ЖрнЗарплата.ЗаписьЖР, ЖрнЗарплата.ЗаписьЖР.ВидРасч, ЖрнЗарплата.Результат, ЖрнЗарплата.ЗаписьЖР.Сторно, ЖрнЗарплата.ДокументОснование, ЖрнЗарплата.ПериодДействияДатаНачала, ЖрнЗарплата.ПериодДействияДатаОкончания,
							ОсновныеНачисления, ДополнительныеНачисления, Удержания, Взаиморасчеты, БУОсновныеНачисления, БУДополнительныеНачисления, БУУдержания,
							ЕстьОшибкиВЖР,
							НадоРаспределятьПоИФ, Прокурор, Военнослужащий,
							ДоходыВычетыНалогиСотрудников, СоответствиеВРкодамДоходовСВ, СоответствиеВРкодамДоходовЕСН,
							НомерДок, ПериодРегистрации,
							ТекущийГод, ДатаНачалаТекущегоМесяца, ДатаОкончанияТекущегоМесяца,
							ОсновнойГрафикРаботы);
							
							// Если по сотруднику введено отклонение за прошлый период, необходимо создать сторно запись оклада, если у сотрудника оплата по табелю
							Если (ЖрнЗарплата.ЗаписьЖР.ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеОтклонения) = 1) И (ЖрнЗарплата.ПериодДействияДатаНачала &lt; ПериодРегистрации) Тогда
								ФормаТруда = ЗначениеПериодическогоРеквизитаНаНачало("ФормаТруда", ЖрнЗарплата.ЗаписьЖР.Объект, ЖрнЗарплата.ПериодДействияДатаНачала);
								
								Если (ФормаТруда = Перечисление.ФормыТруда.ТабельПодневнОклад) Или (ФормаТруда = Перечисление.ФормыТруда.ТабельПочасОклад) Или (ФормаТруда = Перечисление.ФормыТруда.ТабельПочасТариф) Тогда
									ДобавитьЗаписьРегистраРасчетов(ЖрнЗарплата.ЗаписьЖР, ВидРасчета.ОплатаПоТабелю, 0, ?(ЖрнЗарплата.ЗаписьЖР.Сторно = 1, 0, 1), ЖрнЗарплата.ДокументОснование, ЖрнЗарплата.ПериодДействияДатаНачала, ЖрнЗарплата.ПериодДействияДатаОкончания,
										ОсновныеНачисления, ДополнительныеНачисления, Удержания, Взаиморасчеты, БУОсновныеНачисления, БУДополнительныеНачисления, БУУдержания,
										ЕстьОшибкиВЖР,
										НадоРаспределятьПоИФ, Прокурор, Военнослужащий,
										ДоходыВычетыНалогиСотрудников, СоответствиеВРкодамДоходовСВ, СоответствиеВРкодамДоходовЕСН,
										НомерДок, ПериодРегистрации,
										ТекущийГод, ДатаНачалаТекущегоМесяца, ДатаОкончанияТекущегоМесяца,
										ОсновнойГрафикРаботы);
								КонецЕсли;
							КонецЕсли;
							
					Иначе
						ДобавитьЗаписьРегистраРасчетов(ЖрнЗарплата.ЗаписьЖР.ПервичнаяЗапись, ЖрнЗарплата.ЗаписьЖР.ПервичнаяЗапись.ВидРасч, - (ЖрнЗарплата.ЗаписьЖР.ПервичнаяЗапись.Результат - ЖрнЗарплата.Результат), 1, ЖрнЗарплата.ДокументОснование, ЖрнЗарплата.ПериодДействияДатаНачала, ЖрнЗарплата.ПериодДействияДатаОкончания,
							ОсновныеНачисления, ДополнительныеНачисления, Удержания, Взаиморасчеты, БУОсновныеНачисления, БУДополнительныеНачисления, БУУдержания,
							ЕстьОшибкиВЖР,
							НадоРаспределятьПоИФ, Прокурор, Военнослужащий,
							ДоходыВычетыНалогиСотрудников, СоответствиеВРкодамДоходовСВ, СоответствиеВРкодамДоходовЕСН,
							НомерДок, ПериодРегистрации,
							ТекущийГод, ДатаНачалаТекущегоМесяца, ДатаОкончанияТекущегоМесяца,
							ОсновнойГрафикРаботы);
						
						ДобавитьЗаписьРегистраРасчетов(ЖрнЗарплата.ЗаписьЖР, ЖрнЗарплата.ЗаписьЖР.ВидРасч, ЖрнЗарплата.ЗаписьЖР.ПервичнаяЗапись.Результат, 0, ЖрнЗарплата.ДокументОснование, ЖрнЗарплата.ПериодДействияДатаНачала, ЖрнЗарплата.ПериодДействияДатаОкончания,
							ОсновныеНачисления, ДополнительныеНачисления, Удержания, Взаиморасчеты, БУОсновныеНачисления, БУДополнительныеНачисления, БУУдержания,
							ЕстьОшибкиВЖР,
							НадоРаспределятьПоИФ, Прокурор, Военнослужащий,
							ДоходыВычетыНалогиСотрудников, СоответствиеВРкодамДоходовСВ, СоответствиеВРкодамДоходовЕСН,
							НомерДок, ПериодРегистрации,
							ТекущийГод, ДатаНачалаТекущегоМесяца, ДатаОкончанияТекущегоМесяца,
							ОсновнойГрафикРаботы);
							
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
			
			РезультатыНачисленийИУдержаний = СоздатьОбъект("СписокЗначений");

			РезультатыНачисленийИУдержаний.Установить("Дата",				ТекущаяДата());
			РезультатыНачисленийИУдержаний.Установить("ПериодРегистрации",	ПериодРегистрации);
			РезультатыНачисленийИУдержаний.Установить("Номер",				НомерДок);
			РезультатыНачисленийИУдержаний.Установить("Организация",		"Наша организация");
			РезультатыНачисленийИУдержаний.Установить("Комментарий",		"Результаты начислений и удержаний за " + ПериодСтр(ДатаНачалаТекущегоМесяца, ДатаОкончанияТекущегоМесяца));
			
			РезультатыНачисленийИУдержаний.Установить("ОсновныеНачисленияРаботниковОрганизаций",		ОсновныеНачисления);
			РезультатыНачисленийИУдержаний.Установить("ДополнительныеНачисленияРаботниковОрганизаций",	ДополнительныеНачисления);
			РезультатыНачисленийИУдержаний.Установить("УдержанияРаботниковОрганизаций",					Удержания);
			
			РезультатыНачисленийИУдержаний.Установить("БУОсновныеНачисления",		БУОсновныеНачисления);
			РезультатыНачисленийИУдержаний.Установить("БУДополнительныеНачисления",	БУДополнительныеНачисления);
			РезультатыНачисленийИУдержаний.Установить("БУУдержания",				БУУдержания);
			
			Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
				Взаиморасчеты.Свернуть("Период,ПериодВзаиморасчетов,Организация,Физлицо,ВидДвижения,СФ_Наименование,СФ_КВД,СФ_ПодпадаетПодЕНВД,СФ_Баланс,СФ_КБК,СтатьяФинансирования,КОСГУ", "СуммаВзаиморасчетов");
			Иначе
				Взаиморасчеты.Свернуть("Период,ПериодВзаиморасчетов,Организация,Физлицо,ВидДвижения", "СуммаВзаиморасчетов");
			КонецЕсли;
			РезультатыНачисленийИУдержаний.Установить("ВзаиморасчетыСРаботникамиОрганизаций",	Взаиморасчеты);
			
			Если (ОсновныеНачисления.КоличествоСтрок() &gt; 0) Или (ДополнительныеНачисления.КоличествоСтрок() &gt; 0) Или (Удержания.КоличествоСтрок() &gt; 0) Или 
				(БУОсновныеНачисления.КоличествоСтрок() &gt; 0) Или (БУДополнительныеНачисления.КоличествоСтрок() &gt; 0) Или (БУУдержания.КоличествоСтрок() &gt; 0) Или
				(Взаиморасчеты.КоличествоСтрок() &gt; 0) Тогда
				
				Позиция = СписокПустыхДокументов.НайтиЗначение(Дата(ТекущийГод, ТекущийМесяц, 1));
				Если Позиция = 0 Тогда
					ДозаполнитьТаблицу = 1;
				Иначе
					ДозаполнитьТаблицу = 0;
					СписокПустыхДокументов.УдалитьЗначение(Позиция);
				КонецЕсли;
				
				ВыгрузитьПоПравилу(РезультатыНачисленийИУдержаний, , ДозаполнитьТаблицу, , "НачисленияИУдержания");
				РезультатыНачисленийИУдержаний	= 0;
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>НДФЛ</Код>
			<Наименование>НДФЛ (за период переноса)</Наименование>
			<Порядок>600</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ТаблицаКодовОКАТО = "";
ТаблицаКодовОКТМО = "";
глЗаполнитьТаблицыКодовТерриторийКПП(ТаблицаКодовОКАТО,ТаблицаКодовОКТМО);

Параметры.ТаблицаКодовОКАТО		= ТаблицаКодовОКАТО;
Параметры.ТаблицаКодовОКТМО		= ТаблицаКодовОКТМО;

СписокСотрудников = РазделитьСотрудниковНаПорции();

ТаблицаПреобразованияКодовВычетов = ТаблицаПреобразованияКодовВычетов();

ЖрнЗарплата = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(НДФЛКЗачету)
|Период С ДатаНачалаТекущегоГода ПО ДатаОкончанияТекущегоГода;
|Объект							= ЖурналРасчетов.Зарплата.Объект;
|ФизЛицо						= ЖурналРасчетов.Зарплата.Объект.ОсновнойЭлемент;
|РодительскийДокумент			= ЖурналРасчетов.Зарплата.РодительскийДокумент; 
|ДокументОснование				= ЖурналРасчетов.Зарплата.ТекущийДокумент; 
|ЗаписьЖР						= ЖурналРасчетов.Зарплата.ТекущаяЗапись;
|ВидРасч						= ЖурналРасчетов.Зарплата.ВидРасч;
|ПериодРегистрации				= ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ПериодДействия					= ЖурналРасчетов.Зарплата.ПериодДействия;
|ПериодДействияДатаНачала		= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаНачала;
|ПериодДействияДатаОкончания	= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаОкончания;
|Результат						= ЖурналРасчетов.Зарплата.Результат;
|Группировка ПериодРегистрации;
|Группировка Объект;
|Группировка ЗаписьЖР;
|Условие(Результат &lt; 0);
|Условие(ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ) = 1);
|Условие(ПорцияСотрудников.Принадлежит(Физлицо) = 1);
|"//}}ЗАПРОС
;
	
Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл
	Состояние("НДФЛ за " + ТекущийГод + "г.");
	
	ПериодРегистрации = Дата(ТекущийГод, 1, 1);

	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	// Очистим выгружаемые таблицы
	НДФЛ = СоздатьОбъект("СписокЗначений");
	НДФЛ.Установить("Дата",					ТекущаяДата());
	НДФЛ.Установить("ПериодРегистрации",	ПериодРегистрации);
	НДФЛ.Установить("Номер",				"НДФЛ-" + Прав(ТекущийГод, 2));
	НДФЛ.Установить("Организация",			"Наша организация");
	НДФЛ.Установить("Комментарий",			"НДФЛ за " + ТекущийГод + "г.");

	НДФЛ.Установить("НДФЛСведенияОДоходах",							СоздатьТЗНДФЛСведенияОДоходах());
	НДФЛ.Установить("НДФЛПредоставленныеСтандартныеВычетыФизЛиц",	СоздатьТЗНДФЛПредоставленныеСтандартныеВычеты());
	НДФЛ.Установить("НДФЛИмущественныеВычетыФизлиц",				СоздатьТЗНДФЛИмущественныеВычеты());
	НДФЛ.Установить("НДФЛРасчетыСБюджетом",							СоздатьТЗНДФЛРасчетыСБюджетом());
	НДФЛ.Установить("НДФЛКЗачету",									СоздатьТЗНДФЛКЗачету());
	НДФЛ.Установить("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ",		СоздатьТЗРасчетыНалоговыхАгентовСБюджетомПоНДФЛ());

	ВыгрузитьПоПравилу(НДФЛ, , 0, , "НДФЛ");
	НДФЛ = 0;
	
	ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ		= СоздатьТЗРасчетыНалоговыхАгентовСБюджетомПоНДФЛ();
	
	// Расчеты налоговых агентов с бюджетом по НДФЛ
	Состояние("Расчеты налоговых агентов с бюджетом по НДФЛ");
	Док = СоздатьОбъект("Документ.ПеречислениеНДФЛвБюджет");
	Док.ВыбратьДокументы(ДатаНачалаТекущегоГода, ДатаОкончанияТекущегоГода);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.Проведен() &lt;&gt; 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Док.ВыбратьСтроки();
		Пока Док.ПолучитьСтроку() = 1 Цикл
			Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Док.Сотрудник, Док.ДатаПлатежа);
			ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
			
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.НоваяСтрока();
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация				= ОбособленноеПодразделение;
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Физлицо					= Док.Сотрудник;
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период					= ?(ПустоеЗначение(Док.ДатаПлатежа) = 0, Док.ДатаПлатежа, Док.ДатаДок);
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода	= НачМесяца(Док.МесяцНалоговогоПериода);
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма						= Док.Сумма;
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка					= Док.Ставка;
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКАТО_КПП					= Док.ОКАТО_КПП;
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ОКТМО_КПП					= Док.ОКТМО_КПП;
			ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения				= "Расход";
		КонецЦикла;
	КонецЦикла;
	
	Если	(ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ.КоличествоСтрок() &gt; 0) Тогда
		НДФЛ = СоздатьОбъект("СписокЗначений");
		НДФЛ.Установить("Дата",					ТекущаяДата());
		НДФЛ.Установить("ПериодРегистрации",	ПериодРегистрации);
		НДФЛ.Установить("Номер",				"НДФЛ-" + Прав(ТекущийГод, 2));
		НДФЛ.Установить("Организация",			"Наша организация");
		НДФЛ.Установить("Комментарий",			"НДФЛ за " + ТекущийГод + "г.");
		
		НДФЛ.Установить("РасчетыНалоговыхАгентовСБюджетомПоНДФЛ",	ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ);

		ВыгрузитьПоПравилу(НДФЛ, , 1, , "НДФЛ");
		НДФЛ = 0;
	КонецЕсли;
	ТаблицаРасчетыНалоговыхАгентовСБюджетомПоНДФЛ = 0;
	
	Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
		
		ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
		ТаблицаНДФЛСведенияОДоходах							= СоздатьТЗНДФЛСведенияОДоходах(); 
		ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц	= СоздатьТЗНДФЛПредоставленныеСтандартныеВычеты();
		ТаблицаНДФЛИмущественныеВычетыФизлиц				= СоздатьТЗНДФЛИмущественныеВычеты();
		
		ДоходыВычетыНалогиСотрудников = СобратьДанныеДляНДФЛВыбор(ПорцияСотрудников, КонГода(Дата(ТекущийГод,12,15)), ТаблицаНДФЛСведенияОДоходах, ТаблицаНДФЛИмущественныеВычетыФизлиц);
		
		Если ТаблицаНДФЛСведенияОДоходах.КоличествоСтрок() &gt; 0 Тогда
			// Добавим обособленное подразделение и статью финансирования в таблицу
			ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("Организация");
			ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("ОбособленноеПодразделение");
			Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
				ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СтатьяФинансирования");
			КонецЕсли;
			
			НДФЛ = СоздатьОбъект("СписокЗначений");
			НДФЛ.Установить("Дата",					ТекущаяДата());
			НДФЛ.Установить("ПериодРегистрации",	ПериодРегистрации);
			НДФЛ.Установить("Номер",				"НДФЛ-" + Прав(ТекущийГод, 2));
			НДФЛ.Установить("Организация",			"Наша организация");
			НДФЛ.Установить("Комментарий",			"НДФЛ за " + ТекущийГод + "г.");

			ПреобразоватьКодВычетаНДФЛВСведенияхОДоходах(ТаблицаНДФЛСведенияОДоходах, ТаблицаПреобразованияКодовВычетов, ТекущийГод);
			
			НДФЛ.Установить("НДФЛСведенияОДоходах",	ТаблицаНДФЛСведенияОДоходах);

			ВыгрузитьПоПравилу(НДФЛ, , 1, , "НДФЛ");
			НДФЛ = 0;
		КонецЕсли;
		ТаблицаНДФЛСведенияОДоходах = 0;
		
		
		ЗаполнитьТаблицуНДФЛПредоставленныеСтдВычетыФизЛиц(ПорцияСотрудников, ДоходыВычетыНалогиСотрудников, ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц, ТаблицаПреобразованияКодовВычетов, ТекущийГод);
		
		Если ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.КоличествоСтрок() &gt; 0 Тогда
			// Добавим обособленное подразделение в таблицу
			ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("Организация");
			ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("ОбособленноеПодразделение");
			
			НДФЛ = СоздатьОбъект("СписокЗначений");
			НДФЛ.Установить("Дата",					ТекущаяДата());
			НДФЛ.Установить("ПериодРегистрации",	ПериодРегистрации);
			НДФЛ.Установить("Номер",				"НДФЛ-" + Прав(ТекущийГод, 2));
			НДФЛ.Установить("Организация",			"Наша организация");
			НДФЛ.Установить("Комментарий",			"НДФЛ за " + ТекущийГод + "г.");

			НДФЛ.Установить("НДФЛПредоставленныеСтандартныеВычетыФизЛиц",	ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);

			ВыгрузитьПоПравилу(НДФЛ, , 1, , "НДФЛ");
			НДФЛ = 0;
		КонецЕсли;
		ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц = 0;
		
		
		Если ТаблицаНДФЛИмущественныеВычетыФизлиц.КоличествоСтрок() &gt; 0 Тогда
			// Добавим обособленное подразделение в таблицу
			ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("Организация");
			ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("ОбособленноеПодразделение");
			ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("ВидДвижения");
			
			НДФЛ = СоздатьОбъект("СписокЗначений");
			НДФЛ.Установить("Дата",					ТекущаяДата());
			НДФЛ.Установить("ПериодРегистрации",	ПериодРегистрации);
			НДФЛ.Установить("Номер",				"НДФЛ-" + Прав(ТекущийГод, 2));
			НДФЛ.Установить("Организация",			"Наша организация");
			НДФЛ.Установить("Комментарий",			"НДФЛ за " + ТекущийГод + "г.");

			НДФЛ.Установить("НДФЛИмущественныеВычетыФизлиц",	ТаблицаНДФЛИмущественныеВычетыФизлиц);

			ВыгрузитьПоПравилу(НДФЛ, , 1, , "НДФЛ");
			НДФЛ = 0;
		КонецЕсли;
		ТаблицаНДФЛИмущественныеВычетыФизлиц = 0;
		
		
		ТаблицаНДФЛРасчетыСБюджетом = СоздатьТЗНДФЛРасчетыСБюджетом();

		ЗаполнитьТаблицуНДФЛРасчетыСБюджетом(ПорцияСотрудников, ДоходыВычетыНалогиСотрудников, ТаблицаНДФЛРасчетыСБюджетом, ТекущийГод);
		ДоходыВычетыНалогиСотрудников = 0;
		
		Если	(ТаблицаНДФЛРасчетыСБюджетом.КоличествоСтрок() &gt; 0) Тогда
			// Добавим обособленное подразделение и статью финансирования в таблицу
			ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("Организация");
			ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("ОбособленноеПодразделение");
			ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("ВидДвижения");
			Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
				ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("СтатьяФинансирования");
			КонецЕсли;
			
			НДФЛ = СоздатьОбъект("СписокЗначений");
			НДФЛ.Установить("Дата",					ТекущаяДата());
			НДФЛ.Установить("ПериодРегистрации",	ПериодРегистрации);
			НДФЛ.Установить("Номер",				"НДФЛ-" + Прав(ТекущийГод, 2));
			НДФЛ.Установить("Организация",			"Наша организация");
			НДФЛ.Установить("Комментарий",			"НДФЛ за " + ТекущийГод + "г.");
			
			НДФЛ.Установить("НДФЛРасчетыСБюджетом",	ТаблицаНДФЛРасчетыСБюджетом);

			ВыгрузитьПоПравилу(НДФЛ, , 1, , "НДФЛ");
			НДФЛ = 0;
		КонецЕсли;
		ТаблицаНДФЛРасчетыСБюджетом = 0;
		
		
		Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
			ДатаНачалаТекущегоГода		= ДатаНачала;
		Иначе
			ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
		КонецЕсли;
		
		Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
			ДатаОкончанияТекущегоГода	= ДатаОкончания;
		Иначе
			ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
		КонецЕсли;
		
		Если ЖрнЗарплата.Выполнить(ТекстЗапроса) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаНДФЛКЗачету = СоздатьТЗНДФЛКЗачету();
		
		Пока ЖрнЗарплата.Группировка(1) = 1 Цикл // По месяцам

			Пока ЖрнЗарплата.Группировка(2) = 1 Цикл // По сотрудникам
				
				Если ЖрнЗарплата.Объект.ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				Пока ЖрнЗарплата.Группировка(3) = 1 Цикл  // По записям ЖР
					ТаблицаНДФЛКЗачету.НоваяСтрока();
					ТаблицаНДФЛКЗачету.ФизЛицо								= ЖрнЗарплата.Физлицо;
					ТаблицаНДФЛКЗачету.Период								= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
					ТаблицаНДФЛКЗачету.СуммаНДФЛКЗачету						= -ЖрнЗарплата.Результат;
					Если ЖрнЗарплата.ВидРасч = ВидРасчета.НДФЛпо35процентов Тогда
						ТаблицаНДФЛКЗачету.СтавкаНалогообложенияРезидента	= "Ставка35";
					Иначе
						ТаблицаНДФЛКЗачету.СтавкаНалогообложенияРезидента	= "Ставка13";
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;

		Если	(ТаблицаНДФЛКЗачету.КоличествоСтрок() &gt; 0) Тогда
			НДФЛ = СоздатьОбъект("СписокЗначений");
			НДФЛ.Установить("Дата",					ТекущаяДата());
			НДФЛ.Установить("ПериодРегистрации",	ПериодРегистрации);
			НДФЛ.Установить("Номер",				"НДФЛ-" + Прав(ТекущийГод, 2));
			НДФЛ.Установить("Организация",			"Наша организация");
			НДФЛ.Установить("Комментарий",			"НДФЛ за " + ТекущийГод + "г.");
			
			НДФЛ.Установить("НДФЛКЗачету",	ТаблицаНДФЛКЗачету);

			ВыгрузитьПоПравилу(НДФЛ, , 1, , "НДФЛ");
			НДФЛ = 0;
		КонецЕсли;
		ТаблицаНДФЛКЗачету = 0;
		
	КонецЦикла;
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ОстаткиВзаиморасчетов</Код>
			<Наименование>Остатки взаиморасчетов</Наименование>
			<Порядок>650</Порядок>
			<КодПравилаКонвертации>ОстаткиВзаиморасчетов                             </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

Работники = СоздатьТЗВзаиморасчеты();
Депоненты = СоздатьТЗДепоненты();


СписокСотрудников = РазделитьСотрудниковНаПорции(1,1);

Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
	
	ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);

	ПараметрыКоманды = СоздатьОбъект("СписокЗначений");
	ПараметрыКоманды.Установить("Источник",				ПолучитьПустоеЗначение("Справочник.ИсточникиФинансирования"));
	ПараметрыКоманды.Установить("ФКР",					ПолучитьПустоеЗначение("Справочник.ЗначенияСубконто"));
	ПараметрыКоманды.Установить("Балансодержатель",		ПолучитьПустоеЗначение("Справочник.Балансодержатели"));
	ПараметрыКоманды.Установить("ДатаПериодаС",			НачГода(НачМесяца(ДатаНачала)-1));
	ПараметрыКоманды.Установить("ДатаПериодаПо",		НачМесяца(ДатаНачала)-1);
	ПараметрыКоманды.Установить("СписокСотрудников",	ПорцияСотрудников);
	СписокРез = глОткрытьФормуИВыполнитьКоманду("Отчет.СтруктураЗадолженности", "ПолучитьСтруктуруЗадолженности", ПараметрыКоманды, 1);
	Если ТипЗначенияСтр(СписокРез) = "СписокЗначений" тогда
		ТаблицаЗадолженности = ПараметрыКоманды.Получить("ТаблицаДляРасшифровок");
		Если ТипЗначенияСтр(ТаблицаЗадолженности) &lt;&gt; "ТаблицаЗначений" Тогда
			Продолжить;
		КонецЕсли;
		глОчиститьТаблицуОтНулевыхСумм(ТаблицаЗадолженности);
		
	Иначе
		ТаблицаЗадолженности = глСоздатьТаблицуПоИсточникамФинансирования();
		ТаблицаЗадолженности.НоваяКолонка("Месяц", "Дата");
		ТаблицаЗадолженности.НоваяКолонка("Сотрудник", "Справочник.Сотрудники");
		
	КонецЕсли;
	
	Состояние(Правило.Наименование);

	ТаблицаЗадолженности.ВыбратьСтроки();
	Пока ТаблицаЗадолженности.ПолучитьСтроку() = 1 Цикл
		// Подразделение
		Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ТаблицаЗадолженности.Сотрудник, КонМесяца(ТаблицаЗадолженности.Месяц));
		
		Работники.НоваяСтрока();
		
		Работники.Период					= НачМесяца(ДатаНачала)-1;
		Работники.ПериодВзаиморасчетов		= ?(Параметры.УчетЗадолженностиПоМесяцам = 1, ТаблицаЗадолженности.Месяц, "");
		Работники.Организация				= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
		Работники.Физлицо					= ТаблицаЗадолженности.Сотрудник;
		Работники.ВидДвижения				= ?(ТаблицаЗадолженности.Сумма &gt; 0, "Приход", "Расход");
		Работники.СуммаВзаиморасчетов		= ?(ТаблицаЗадолженности.Сумма &gt; 0, ТаблицаЗадолженности.Сумма, -ТаблицаЗадолженности.Сумма);
		Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
			Работники.СФ_Наименование		= ТаблицаЗадолженности.ФКР.Наименование;
			Работники.СФ_КВД				= ТаблицаЗадолженности.Источник.Код;
			Работники.СФ_Баланс				= ТаблицаЗадолженности.Балансодержатель;
			Работники.КОСГУ					= "211";
		КонецЕсли;
	КонецЦикла;
		
КонецЦикла;

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	Работники.Свернуть("Период,ПериодВзаиморасчетов,Организация,Физлицо,ВидДвижения,Ведомость,ХарактерВыплаты,СпособВыплаты,СФ_Наименование,СФ_КВД,СФ_ПодпадаетПодЕНВД,СФ_Баланс,СФ_КБК,СтатьяФинансирования,КОСГУ", "СуммаВзаиморасчетов");
Иначе
	Работники.Свернуть("Период,ПериодВзаиморасчетов,Организация,Физлицо,ВидДвижения,Ведомость,ХарактерВыплаты,СпособВыплаты", "СуммаВзаиморасчетов");
КонецЕсли;
Работники.Сортировать("Период+,ПериодВзаиморасчетов+,Физлицо+");

ДокументыДепонирование = СоздатьОбъект("Документ.Депонирование");
ДокументыДепонирование.ВыбратьДокументы(, ДатаОкончания);
Пока ДокументыДепонирование.ПолучитьДокумент() = 1 Цикл
	Если (ДокументыДепонирование.Проведен() = 0) тогда
		Продолжить;
	КонецЕсли;
	
	ДокументДепонирование = ДокументыДепонирование.ТекущийДокумент();
	
	ДокументВедомость = ДокументДепонирование.ДокументОснование;
	
	// В ЗУП/ЗБУ обязательно необходимы номер и дата ведомости
	Если ПустоеЗначение(ДокументВедомость) = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	ОстатокДепонента = глПолучитьОстатокПоДепоненту(ДокументДепонирование, ДатаОкончания);
	
	Если ОстатокДепонента &gt; 0 Тогда
		Подразделение		= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ДокументДепонирование.Сотрудник, КонМесяца(ДатаОкончания));
		
		ДокументВедомость	= ДокументДепонирование.ДокументОснование;
		
		Депоненты.НоваяСтрока();
		Депоненты.Период					= ДатаОкончания;
		Депоненты.Физлицо					= ДокументДепонирование.Сотрудник;
		Депоненты.Организация				= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
		Депоненты.ВидДвижения				= ?(ОстатокДепонента &gt; 0, "Приход", "Расход");
		Депоненты.Сумма						= ?(ОстатокДепонента &gt; 0, ОстатокДепонента, -ОстатокДепонента);
		Депоненты.Ведомость					= ДокументВедомость;
		
		// Статья финансирования
		Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
			СтатьяФинансирования = СоздатьТЗСтатьяФинансирования();
			СтатьяФинансирования.НоваяСтрока();
			Если ПустоеЗначение(ДокументВедомость) = 0 тогда
				СтатьяФинансирования.Наименование		= СокрЛП(ДокументВедомость.ФКР.Наименование);
				СтатьяФинансирования.КВД				= ДокументВедомость.ИсточникФинансирования.Код;
				СтатьяФинансирования.ПодпадаетПодЕНВД	= 0;
				СтатьяФинансирования.Баланс				= ДокументВедомость.Балансодержатель;	
			КонецЕсли;
			Если ПустоеЗначение(СтатьяФинансирования.Наименование) = 1 Тогда
				СтатьяФинансирования.Наименование		= "Бюджетное финансирование";
			КонецЕсли;
			Если ПустоеЗначение(СтатьяФинансирования.КВД) = 1 Тогда
				СтатьяФинансирования.КВД				= 1; 
			КонецЕсли;
			Если ПустоеЗначение(СтатьяФинансирования.ПодпадаетПодЕНВД) = 1 Тогда
				СтатьяФинансирования.ПодпадаетПодЕНВД	= 0;
			КонецЕсли;
			Если ПустоеЗначение(СтатьяФинансирования.Баланс) = 1 Тогда
				СтатьяФинансирования.Баланс				= ПолучитьПустоеЗначение("Справочник.Балансодержатели");
			КонецЕсли;
		
			Депоненты.СтатьяФинансирования	= СтатьяФинансирования;
			Депоненты.КОСГУ					= "211";
		КонецЕсли;
		
	КонецЕсли;
КонецЦикла;

ОстаткиВзаиморасчетов = СоздатьОбъект("СписокЗначений");
ОстаткиВзаиморасчетов.Установить("Дата",									ТекущаяДата());
ОстаткиВзаиморасчетов.Установить("ПериодРегистрации",						Параметры.ДатаНачалаУчета);
ОстаткиВзаиморасчетов.Установить("Номер",									"ВЗР");
ОстаткиВзаиморасчетов.Установить("Организация",								"Наша организация");
ОстаткиВзаиморасчетов.Установить("Комментарий",								"Остатки взаиморасчетов");
ОстаткиВзаиморасчетов.Установить("ВзаиморасчетыСРаботникамиОрганизаций",	Работники);
ОстаткиВзаиморасчетов.Установить("ВзаиморасчетыСДепонентамиОрганизаций",	Депоненты);

Если	(Работники.КоличествоСтрок() &gt; 0)
	ИЛИ	(Депоненты.КоличествоСтрок() &gt; 0) Тогда
	ВыборкаДанных.ДобавитьЗначение(ОстаткиВзаиморасчетов);
КонецЕсли;

Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ПогашениеЗаймовРаботниками</Код>
			<Наименование>Погашение займов работниками</Наименование>
			<Порядок>700</Порядок>
			<КодПравилаКонвертации>ПогашениеЗаймовРаботниками                        </КодПравилаКонвертации>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ВыборкаДанных = СоздатьОбъект("СписокЗначений");

СписокДокументов = СоздатьОбъект("СписокЗначений");

ДокСсуда = СоздатьОбъект("Документ.СсудаПредприятия");
ДокСсуда.ВыбратьДокументы();
Пока ДокСсуда.ПолучитьДокумент() = 1 Цикл
	Если ДокСсуда.Окончание &gt;= ДатаНачала Тогда
		СписокДокументов.ДобавитьЗначение(ДокСсуда.ТекущийДокумент());
	КонецЕсли;
КонецЦикла; 


ЖрнЗарплата = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(ПогашениеЗаймовРаботниками)
|Период С ДатаНачала ПО ДатаОкончания;
|ДокументОснование				= ЖурналРасчетов.Зарплата.ТекущийДокумент; 
|ВидРасч						= ЖурналРасчетов.Зарплата.ВидРасч;
|ПериодРегистрации				= ЖурналРасчетов.Зарплата.ПериодРегистрации;
|Результат						= ЖурналРасчетов.Зарплата.Результат;
|Функция ОсновнойДолг			= Сумма(Результат)	Когда (ВидРасч = ВидРасчета.ПогашениеСсуды);
|Функция Проценты				= Сумма(Результат)	Когда (ВидРасч = ВидРасчета.ПогашениеСсудногоПроцента);
|Группировка ПериодРегистрации;
|Группировка ДокументОснование;
|Условие(Результат &lt;&gt; 0);
|Условие((ВидРасч = ВидРасчета.ПогашениеСсуды) ИЛИ (ВидРасч = ВидРасчета.ПогашениеСсудногоПроцента));
|Условие(ДокументОснование В СписокДокументов);
|"//}}ЗАПРОС
;
Если ЖрнЗарплата.Выполнить(ТекстЗапроса) = 0 Тогда
	Отказ = 1;
	Возврат Отказ;
КонецЕсли;

ВыборкаДанныхПогашениеЗаймов = СоздатьТЗПогашениеЗайма();

Пока ЖрнЗарплата.Группировка(1) = 1 Цикл // Период регистрации
	Период = ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
	
	Пока ЖрнЗарплата.Группировка(2) = 1 Цикл // Документ
		Док				= ЖрнЗарплата.ДокументОснование;
		Подразделение	= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Док.Сотрудник, КонМесяца(Период));
		ОбособленноеПодразделение = ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
		
		Если ЖрнЗарплата.Проценты &lt;&gt; 0 Тогда
			ВыборкаДанныхПогашениеЗаймов.НоваяСтрока();
			ВыборкаДанныхПогашениеЗаймов.Период				= Период;
			ВыборкаДанныхПогашениеЗаймов.Организация		= ОбособленноеПодразделение;
			ВыборкаДанныхПогашениеЗаймов.Физлицо			= Док.Сотрудник;
			ВыборкаДанныхПогашениеЗаймов.ОсновнойДолг		= 0;
			ВыборкаДанныхПогашениеЗаймов.Проценты			= ЖрнЗарплата.Проценты;
			ВыборкаДанныхПогашениеЗаймов.УдержаноИзЗарплаты	= 1;
			ВыборкаДанныхПогашениеЗаймов.ДоговорЗайма		= Док;
			ВыборкаДанныхПогашениеЗаймов.ВидДвижения		= "Приход";
		КонецЕсли;
		
		ВыборкаДанныхПогашениеЗаймов.НоваяСтрока();
		ВыборкаДанныхПогашениеЗаймов.Период				= Период;
		ВыборкаДанныхПогашениеЗаймов.Организация		= ОбособленноеПодразделение;
		ВыборкаДанныхПогашениеЗаймов.Физлицо			= Док.Сотрудник;
		ВыборкаДанныхПогашениеЗаймов.ОсновнойДолг		= ЖрнЗарплата.ОсновнойДолг;
		ВыборкаДанныхПогашениеЗаймов.Проценты			= ЖрнЗарплата.Проценты;
		ВыборкаДанныхПогашениеЗаймов.УдержаноИзЗарплаты	= 1;
		ВыборкаДанныхПогашениеЗаймов.ДоговорЗайма		= Док;	
		ВыборкаДанныхПогашениеЗаймов.ВидДвижения		= "Расход";
	КонецЦикла;
КонецЦикла;

ПогашениеЗаймов = СоздатьОбъект("СписокЗначений");
ПогашениеЗаймов.Установить("Дата",									ТекущаяДата());
ПогашениеЗаймов.Установить("ПериодРегистрации",						Параметры.ДатаНачалаУчета);
ПогашениеЗаймов.Установить("Номер",									"ПЗР");
ПогашениеЗаймов.Установить("Организация",							"Наша организация");
ПогашениеЗаймов.Установить("Комментарий",							"Погашение займов работниками");
ПогашениеЗаймов.Установить("ПогашениеЗаймовРаботникамиОрганизаций",	ВыборкаДанныхПогашениеЗаймов);

Если ВыборкаДанныхПогашениеЗаймов.КоличествоСтрок() &gt; 0 Тогда
	ВыборкаДанных.ДобавитьЗначение(ПогашениеЗаймов);
КонецЕсли;

Если ВыборкаДанных.РазмерСписка() = 0 Тогда
	Отказ = 1;
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ВыплатыВозвраты</Код>
			<Наименование>Выплаты / возвраты (за период переноса)</Наименование>
			<Порядок>750</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

СписокСотрудников = РазделитьСотрудниковНаПорции(1);

СписокПустыхДокументов	= СоздатьОбъект("СписокЗначений");

ЖрнЗарплата = СоздатьОбъект("Запрос");
ТекстЗапроса = 
"//{{ЗАПРОС(Взаиморасчеты)
|Период С ДатаНачалаТекущегоГода ПО ДатаОкончанияТекущегоГода;
|Объект							= ЖурналРасчетов.Зарплата.Объект;
|ФизЛицо						= ЖурналРасчетов.Зарплата.Объект.ОсновнойЭлемент;
|РодительскийДокумент			= ЖурналРасчетов.Зарплата.РодительскийДокумент; 
|ДокументОснование				= ЖурналРасчетов.Зарплата.ТекущийДокумент; 
|ЗаписьЖР						= ЖурналРасчетов.Зарплата.ТекущаяЗапись;
|ВидРасч						= ЖурналРасчетов.Зарплата.ВидРасч;
|ПериодРегистрации				= ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ПериодДействия					= ЖурналРасчетов.Зарплата.ПериодДействия;
|ПериодДействияДатаНачала		= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаНачала;
|ПериодДействияДатаОкончания	= ЖурналРасчетов.Зарплата.ПериодДействия.ДатаОкончания;
|Результат						= ЖурналРасчетов.Зарплата.Результат;
|Группировка ПериодРегистрации;
|Группировка Объект;
|Группировка ЗаписьЖР;
|Условие(Результат &lt;&gt; 0);
|Условие((ВидРасч = ВидРасчета.ВыплатаЗарплаты)
|	ИЛИ (ВидРасч = ВидРасчета.Возврат));
|Условие(ПорцияСотрудников.Принадлежит(ФизЛицо) = 1);
|"//}}ЗАПРОС
;

Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл
	Состояние("Выплаты / вовзраты за " + ТекущийГод + "г.");

	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	ПериодРегистрации = Дата(ТекущийГод, 1, 1);

	СписокПустыхДокументов.ДобавитьЗначение(ПериодРегистрации);
	
	Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
		
		ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
		Если ЖрнЗарплата.Выполнить(ТекстЗапроса) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Работники = СоздатьТЗВзаиморасчеты();

		Пока ЖрнЗарплата.Группировка(1) = 1 Цикл // По месяцам

			Пока ЖрнЗарплата.Группировка(2) = 1 Цикл // По сотрудникам
				
				Если ЖрнЗарплата.Объект.ЭтоГруппа() = 1 Тогда
					Продолжить;
				КонецЕсли;
				
				ТекущийСотрудник = ЖрнЗарплата.Физлицо;
					
				Пока ЖрнЗарплата.Группировка(3) = 1 Цикл  // По записям ЖР
					// Подразделение
					Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ЖрнЗарплата.ФизЛицо, ЖрнЗарплата.ПериодДействияДатаОкончания);
					
					ДокументВедомость							= ЖрнЗарплата.ДокументОснование;
						
					Работники.НоваяСтрока();
					Работники.Период							= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
					Работники.ПериодВзаиморасчетов				= ?(Параметры.УчетЗадолженностиПоМесяцам = 1, НачМесяца(ЖрнЗарплата.ПериодДействияДатаНачала), "");
					Работники.Организация						= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
					Работники.Физлицо							= ТекущийСотрудник;
					Работники.ВидДвижения						= "Расход";
					Работники.СпособВыплаты						= "ЧерезКассу";
					
					Если ЖрнЗарплата.ВидРасч = ВидРасчета.ВыплатаЗарплаты Тогда
						Работники.Ведомость						= ДокументВедомость;
						Работники.ХарактерВыплаты				= "Зарплата";
						Работники.СуммаВзаиморасчетов			= ЖрнЗарплата.Результат;
					
					ИначеЕсли ЖрнЗарплата.ВидРасч = ВидРасчета.Возврат Тогда
						Работники.СуммаВзаиморасчетов			= -ЖрнЗарплата.Результат;
						
					КонецЕсли;
						
					Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
						Если ПустоеЗначение(ДокументВедомость) = 0 тогда
							Работники.СФ_Наименование			= СокрЛП(ДокументВедомость.ФКР.Наименование);
							Работники.СФ_КВД					= ДокументВедомость.ИсточникФинансирования.Код;
							Работники.СФ_ПодпадаетПодЕНВД		= 0;
							Работники.СФ_Баланс					= ДокументВедомость.Балансодержатель;	
						КонецЕсли;
						Если ПустоеЗначение(Работники.СФ_Наименование) = 1 Тогда
							Работники.СФ_Наименование			= "Бюджетное финансирование";
						КонецЕсли;
						Если ПустоеЗначение(Работники.СФ_КВД) = 1 Тогда
							Работники.СФ_КВД					= 1; 
						КонецЕсли;
						Если ПустоеЗначение(Работники.СФ_ПодпадаетПодЕНВД) = 1 Тогда
							Работники.СФ_ПодпадаетПодЕНВД		= 0;
						КонецЕсли;
						Если ПустоеЗначение(Работники.СФ_Баланс) = 1 Тогда
							Работники.СФ_Баланс					= ПолучитьПустоеЗначение("Справочник.Балансодержатели");
						КонецЕсли;
					
						Работники.КОСГУ							= "211";
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
			Работники.Свернуть("Период,ПериодВзаиморасчетов,Организация,Физлицо,ВидДвижения,Ведомость,ХарактерВыплаты,СпособВыплаты,СФ_Наименование,СФ_КВД,СФ_ПодпадаетПодЕНВД,СФ_Баланс,СФ_КБК,СтатьяФинансирования,КОСГУ", "СуммаВзаиморасчетов");
		Иначе
			Работники.Свернуть("Период,ПериодВзаиморасчетов,Организация,Физлицо,ВидДвижения,Ведомость,ХарактерВыплаты,СпособВыплаты", "СуммаВзаиморасчетов");
		КонецЕсли;
		
		Взаиморасчеты = СоздатьОбъект("СписокЗначений");
		Взаиморасчеты.Установить("Дата",									ТекущаяДата());
		Взаиморасчеты.Установить("ПериодРегистрации",						ПериодРегистрации);
		Взаиморасчеты.Установить("Номер",									"ВЗР-" + Прав(ТекущийГод, 2));
		Взаиморасчеты.Установить("Организация",								"Наша организация");
		Взаиморасчеты.Установить("Комментарий",								"Выплаты / возвраты зарплаты за " + ТекущийГод + "г.");
		
		Взаиморасчеты.Установить("ВзаиморасчетыСРаботникамиОрганизаций",	Работники);

		Если Работники.КоличествоСтрок() &gt; 0 Тогда
			Позиция = СписокПустыхДокументов.НайтиЗначение(ПериодРегистрации);
			Если Позиция = 0 Тогда
				ДозаполнитьТаблицу = 1;
			Иначе
				ДозаполнитьТаблицу = 0;
				СписокПустыхДокументов.УдалитьЗначение(Позиция);
			КонецЕсли;
			
			ВыгрузитьПоПравилу(Взаиморасчеты, , ДозаполнитьТаблицу, , "Взаиморасчеты");
		КонецЕсли;
		
	КонецЦикла;

	Если Параметры.ОбнулятьСальдо = 1 Тогда
		Взаиморасчеты = СоздатьОбъект("СписокЗначений");
		Взаиморасчеты.Установить("Дата",									ТекущаяДата());
		Взаиморасчеты.Установить("ПериодРегистрации",						ПериодРегистрации);
		Взаиморасчеты.Установить("Номер",									"ВЗРС-" + Прав(ТекущийГод, 2));
		Взаиморасчеты.Установить("Организация",								"Наша организация");
		Взаиморасчеты.Установить("Комментарий",								"Обнуление сальдо за " + ТекущийГод + "г.");
		ВыгрузитьПоПравилу(Взаиморасчеты, , , , "ОбнулениеСальдоВзаиморасчетов");
	КонецЕсли;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ЕСН_ПФР_ЕНВД</Код>
			<Наименование>ЕСН (за период переноса)</Наименование>
			<Порядок>800</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

СписокСотрудников = РазделитьСотрудниковНаПорции(0,1);

СписокПустыхДокументовПоМесяцамОсн	= СоздатьОбъект("СписокЗначений");
СписокПустыхДокументовПоМесяцамДоп	= СоздатьОбъект("СписокЗначений");
СписокПустыхДокументовПоГодамИсч	= СоздатьОбъект("СписокЗначений");
СписокПустыхДокументовПоГодамДох	= СоздатьОбъект("СписокЗначений");

Для ТекущийГод = ДатаГод(ДатаНачала) По Мин(ДатаГод(ДатаОкончания), 2009) Цикл
	Состояние("ЕСН за " + ТекущийГод + "г.");

	ПериодРегистрации = Дата(ТекущийГод, 1, 1);
	
	СписокПустыхДокументовПоГодамИсч.ДобавитьЗначение(Дата(ТекущийГод, 1, 1));
	СписокПустыхДокументовПоГодамДох.ДобавитьЗначение(Дата(ТекущийГод, 1, 1));
	
	Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
		Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
			ДатаНачалаТекущегоГода		= ДатаНачала;
		Иначе
			ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
		КонецЕсли;
		
		Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
			ДатаОкончанияТекущегоГода	= ДатаОкончания;
		Иначе
			ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
		КонецЕсли;
		
		Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
			СписокПустыхДокументовПоМесяцамОсн.ДобавитьЗначение(Дата(ТекущийГод, ТекущийМесяц, 1));
			СписокПустыхДокументовПоМесяцамДоп.ДобавитьЗначение(Дата(ТекущийГод, ТекущийМесяц, 1));
		КонецЦикла;
		
	КонецЕсли;
	
	Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
		
		ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
		ТаблицаЕСНИсчисленный		= СоздатьТЗЕСНИсчисленный();
		ТаблицаЕСНСведенияОДоходах	= СоздатьТЗЕСНСведенияОДоходах();
		ТаблицаЕСННачисления		= СоздатьТЗЕСННачисления();
		
		// Собрать данные о начислениях и сведениях о доходах,
		// а также доходы/вычеты/налоги для ЕСН исчисленного
		ДоходыВычетыНалогиСотрудников = СобратьДанныеДляЕСН(ТаблицаЕСНСведенияОДоходах, ТаблицаЕСННачисления, ПорцияСотрудников, КонГода(Дата(ТекущийГод,12,15)));
		
		// ЕСН Исчисленный
		Состояние("ЕСН Исчисленный");
		ЗаполнитьТаблицуЕСНИсчисленный(ТаблицаЕСНИсчисленный, ПорцияСотрудников, ДоходыВычетыНалогиСотрудников, КонГода(Дата(ТекущийГод,12,15)));
		ДоходыВычетыНалогиСотрудников = 0;

		Если ТаблицаЕСНИсчисленный.КоличествоСтрок() &gt; 0 Тогда
			ТаблицаЕСНИсчисленный.НоваяКолонка("Организация");
			ТаблицаЕСНИсчисленный.НоваяКолонка("ОбособленноеПодразделение");
			
			ЕСН_ПФР_ЕНВД = СоздатьОбъект("СписокЗначений");
			ЕСН_ПФР_ЕНВД.Установить("Дата",						ТекущаяДата());
			ЕСН_ПФР_ЕНВД.Установить("ПериодРегистрации",		ПериодРегистрации);
			ЕСН_ПФР_ЕНВД.Установить("Номер",					"ЕСН-" + Прав(ТекущийГод, 2));
			ЕСН_ПФР_ЕНВД.Установить("Организация",				"Наша организация");
			ЕСН_ПФР_ЕНВД.Установить("Комментарий",				"ЕСН за " + ТекущийГод + "г.");

			ЕСН_ПФР_ЕНВД.Установить("ЕСНИсчисленный",			ТаблицаЕСНИсчисленный);
			
			Позиция = СписокПустыхДокументовПоГодамИсч.НайтиЗначение(Дата(ТекущийГод, 1, 1));
			Если Позиция = 0 Тогда
				ДозаполнитьТаблицу = 1;
			Иначе
				ДозаполнитьТаблицу = 0;
				СписокПустыхДокументовПоГодамИсч.УдалитьЗначение(Позиция);
			КонецЕсли;
			
			ВыгрузитьПоПравилу(ЕСН_ПФР_ЕНВД, , ДозаполнитьТаблицу, , "ЕСН_ПФР_ЕНВД");
			ЕСН_ПФР_ЕНВД = 0;
		КонецЕсли;
		ТаблицаЕСНИсчисленный		= 0;
		
		Если ТаблицаЕСНСведенияОДоходах.КоличествоСтрок() &gt; 0 Тогда
			ТаблицаЕСНСведенияОДоходах.НоваяКолонка("Организация");
			ТаблицаЕСНСведенияОДоходах.НоваяКолонка("ОбособленноеПодразделение");
			
			ЕСН_ПФР_ЕНВД = СоздатьОбъект("СписокЗначений");
			ЕСН_ПФР_ЕНВД.Установить("Дата",						ТекущаяДата());
			ЕСН_ПФР_ЕНВД.Установить("ПериодРегистрации",		ПериодРегистрации);
			ЕСН_ПФР_ЕНВД.Установить("Номер",					"ЕСН-" + Прав(ТекущийГод, 2));
			ЕСН_ПФР_ЕНВД.Установить("Организация",				"Наша организация");
			ЕСН_ПФР_ЕНВД.Установить("Комментарий",				"ЕСН за " + ТекущийГод + "г.");

			ЕСН_ПФР_ЕНВД.Установить("ЕСНСведенияОДоходах",	ТаблицаЕСНСведенияОДоходах);
			
			Позиция = СписокПустыхДокументовПоГодамДох.НайтиЗначение(Дата(ТекущийГод, 1, 1));
			Если Позиция = 0 Тогда
				ДозаполнитьТаблицу = 1;
			Иначе
				ДозаполнитьТаблицу = 0;
				СписокПустыхДокументовПоГодамДох.УдалитьЗначение(Позиция);
			КонецЕсли;
			
			ВыгрузитьПоПравилу(ЕСН_ПФР_ЕНВД, , ДозаполнитьТаблицу, , "ЕСН_ПФР_ЕНВД");
			ЕСН_ПФР_ЕНВД = 0;
		КонецЕсли;
		
		ТаблицаЕСНСведенияОДоходах	= 0;
		
		// ЕСН Основные и Дополнительные начисления
		Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
			Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
				ДатаНачалаТекущегоГода		= ДатаНачала;
			Иначе
				ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
			КонецЕсли;
			
			Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
				ДатаОкончанияТекущегоГода	= ДатаОкончания;
			Иначе
				ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
			КонецЕсли;
			
			Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
				ПериодРегистрацииМесяц = Дата(ТекущийГод, ТекущийМесяц, 1);
				
				ТаблицаЕСНОсновныеНачисления		= СоздатьТЗЕСННачисления();
				ТаблицаЕСНДополнительныеНачисления	= СоздатьТЗЕСННачисления();
				
				ТаблицаЕСННачисления.ВыбратьСтроки();
				Пока ТаблицаЕСННачисления.ПолучитьСтроку() = 1 Цикл
					Если ТаблицаЕСННачисления.ПериодРегистрации &lt;&gt; ПериодРегистрацииМесяц Тогда
						Продолжить;
					КонецЕсли;
					
					Если МожноПереноситьВидРасчета(ТаблицаЕСННачисления.ВидРасчета) = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ВидПВР = ОпределитьВидПВР(ТаблицаЕСННачисления.ВидРасчета);
					
					Если ВидПВР = "ОсновныеНачисления" Тогда
						ЕСННачисления = ТаблицаЕСНОсновныеНачисления;
					ИначеЕсли ВидПВР = "ДополнительныеНачисления" Тогда
						ЕСННачисления = ТаблицаЕСНДополнительныеНачисления;
					Иначе
						Продолжить;
					КонецЕсли;
					
					ЕСННачисления.НоваяСтрока();
					ЕСННачисления.Сотрудник					= ТаблицаЕСННачисления.Сотрудник;
					ЕСННачисления.Физлицо					= ТаблицаЕСННачисления.Физлицо;
					ЕСННачисления.ПериодРегистрации			= ТаблицаЕСННачисления.ПериодРегистрации;
					ЕСННачисления.ПериодДействияНачало		= ТаблицаЕСННачисления.ПериодДействияНачало;
					ЕСННачисления.ПериодДействияКонец		= ТаблицаЕСННачисления.ПериодДействияКонец;
					ЕСННачисления.Результат					= ТаблицаЕСННачисления.Результат;
					ЕСННачисления.Скидка					= ТаблицаЕСННачисления.Скидка;
					ЕСННачисления.КодДоходаЕСН				= ТаблицаЕСННачисления.КодДоходаЕСН;
					ЕСННачисления.ВидРасчета				= ТаблицаЕСННачисления.ВидРасчета;
					ЕСННачисления.ОблагаетсяЕНВД			= ТаблицаЕСННачисления.ОблагаетсяЕНВД;
					ЕСННачисления.ГрафикРаботы				= ТаблицаЕСННачисления.ГрафикРаботы;
					ЕСННачисления.ВидУчетаВремени			= ТаблицаЕСННачисления.ВидУчетаВремени;
					ЕСННачисления.Сторно					= ТаблицаЕСННачисления.Сторно;
					ЕСННачисления.ДокументОснование			= ТаблицаЕСННачисления.ДокументОснование;
					ЕСННачисления.НомерСтрокиДокумента		= ТаблицаЕСННачисления.НомерСтрокиДокумента;
				КонецЦикла;
				
				Если ТаблицаЕСНОсновныеНачисления.КоличествоСтрок() &gt; 0 Тогда
					ЕСН_Начисления = СоздатьОбъект("СписокЗначений");
					ЕСН_Начисления.Установить("Дата",							ТекущаяДата());
					ЕСН_Начисления.Установить("ПериодРегистрации",				ПериодРегистрацииМесяц);
					ЕСН_Начисления.Установить("Номер",							"ЕНЧ-" + Прав(ТекущийГод, 2) + Прав("0" + ТекущийМесяц, 2));
					ЕСН_Начисления.Установить("Организация",					"Наша организация");
					ЕСН_Начисления.Установить("Комментарий",					"ЕСН: начисления за " + Формат(ПериодРегистрацииМесяц, "ДММММГГГГ"));

					ЕСН_Начисления.Установить("ЕСНОсновныеНачисления",			ТаблицаЕСНОсновныеНачисления);
					
					Позиция = СписокПустыхДокументовПоМесяцамОсн.НайтиЗначение(ПериодРегистрацииМесяц);
					Если Позиция = 0 Тогда
						ДозаполнитьТаблицу = 1;
					Иначе
						ДозаполнитьТаблицу = 0;
						СписокПустыхДокументовПоМесяцамОсн.УдалитьЗначение(Позиция);
					КонецЕсли;
					
					ВыгрузитьПоПравилу(ЕСН_Начисления, , ДозаполнитьТаблицу, , "ЕСН_Начисления");
					ЕСН_Начисления = 0;
				КонецЕсли;
				
				ТаблицаЕСНОсновныеНачисления		= 0;
				
				
				Если ТаблицаЕСНДополнительныеНачисления.КоличествоСтрок() &gt; 0 Тогда
					ЕСН_Начисления = СоздатьОбъект("СписокЗначений");
					ЕСН_Начисления.Установить("Дата",							ТекущаяДата());
					ЕСН_Начисления.Установить("ПериодРегистрации",				ПериодРегистрацииМесяц);
					ЕСН_Начисления.Установить("Номер",							"ЕНЧ-" + Прав(ТекущийГод, 2) + Прав("0" + ТекущийМесяц, 2));
					ЕСН_Начисления.Установить("Организация",					"Наша организация");
					ЕСН_Начисления.Установить("Комментарий",					"ЕСН: начисления за " + Формат(ПериодРегистрацииМесяц, "ДММММГГГГ"));

					ЕСН_Начисления.Установить("ЕСНДополнительныеНачисления",	ТаблицаЕСНДополнительныеНачисления);
					
					Позиция = СписокПустыхДокументовПоМесяцамДоп.НайтиЗначение(ПериодРегистрацииМесяц);
					Если Позиция = 0 Тогда
						ДозаполнитьТаблицу = 1;
					Иначе
						ДозаполнитьТаблицу = 0;
						СписокПустыхДокументовПоМесяцамДоп.УдалитьЗначение(Позиция);
					КонецЕсли;
					
					ВыгрузитьПоПравилу(ЕСН_Начисления, , ДозаполнитьТаблицу, , "ЕСН_Начисления");
					ЕСН_Начисления = 0;
				КонецЕсли;
				
				ТаблицаЕСНДополнительныеНачисления	= 0;
					
			КонецЦикла;
			
		КонецЕсли;
		
		ТаблицаЕСННачисления	= 0;
		
	КонецЦикла;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>СтраховыеВзносы</Код>
			<Наименование>Страховые взносы (за период переноса)</Наименование>
			<Порядок>850</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

СписокСотрудников = РазделитьСотрудниковНаПорции(0,1);

СписокПустыхДокументовПоГодамИсч	= СоздатьОбъект("СписокЗначений");
СписокПустыхДокументовПоГодамДох	= СоздатьОбъект("СписокЗначений");

Для ТекущийГод = Макс(ДатаГод(ДатаНачала),2010) По ДатаГод(ДатаОкончания) Цикл
	Состояние("Страховые взносы за " + ТекущийГод + "г.");

	ПериодРегистрации = Дата(ТекущийГод, 1, 1);
	
	СписокПустыхДокументовПоГодамИсч.ДобавитьЗначение(ПериодРегистрации);
	СписокПустыхДокументовПоГодамДох.ДобавитьЗначение(ПериодРегистрации);

	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
		
		ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
		ТаблицаСтраховыеВзносыИсчисленные		= СоздатьТЗСтраховыеВзносыИсчисленные();
		ТаблицаСтраховыеВзносыСведенияОДоходах	= СоздатьТЗСтраховыеВзносыСведенияОДоходах();
		ТаблицаЕСННачисления					= СоздатьТЗЕСННачисления();
		
		// Собрать данные о начислениях и сведениях о доходах,
		// а также доходы/вычеты/налоги для ЕСН исчисленного
		ДоходыВычетыНалогиСотрудников = СобратьДанныеДляСтраховыхВзносов(ТаблицаСтраховыеВзносыСведенияОДоходах, ТаблицаЕСННачисления, ПорцияСотрудников, КонГода(Дата(ТекущийГод,12,15)));
		
		// Страховые взносы Исчисленные
		Состояние("Страховые взносы Исчисленные");
		ЗаполнитьТаблицуСтраховыеВзносыИсчисленные(ТаблицаСтраховыеВзносыИсчисленные, ПорцияСотрудников, ДоходыВычетыНалогиСотрудников, КонГода(Дата(ТекущийГод,12,15)));
		ДоходыВычетыНалогиСотрудников = 0;

		Если ТаблицаСтраховыеВзносыИсчисленные.КоличествоСтрок() &gt; 0 Тогда
			ТаблицаСтраховыеВзносыИсчисленные.НоваяКолонка("Организация");
			ТаблицаСтраховыеВзносыИсчисленные.НоваяКолонка("ОбособленноеПодразделение");
			
			СтраховыеВзносы = СоздатьОбъект("СписокЗначений");
			СтраховыеВзносы.Установить("Дата",					ТекущаяДата());
			СтраховыеВзносы.Установить("ПериодРегистрации",		ПериодРегистрации);
			СтраховыеВзносы.Установить("Номер",					"СВЗ-" + Прав(ТекущийГод, 2));
			СтраховыеВзносы.Установить("Организация",			"Наша организация");
			СтраховыеВзносы.Установить("Комментарий",			"Страховые взносы за " + ТекущийГод + "г.");

			СтраховыеВзносы.Установить("СтраховыеВзносыИсчисленные",	ТаблицаСтраховыеВзносыИсчисленные);
			
			Позиция = СписокПустыхДокументовПоГодамИсч.НайтиЗначение(Дата(ТекущийГод, 1, 1));
			Если Позиция = 0 Тогда
				ДозаполнитьТаблицу = 1;
			Иначе
				ДозаполнитьТаблицу = 0;
				СписокПустыхДокументовПоГодамИсч.УдалитьЗначение(Позиция);
			КонецЕсли;
			
			ВыгрузитьПоПравилу(СтраховыеВзносы, , ДозаполнитьТаблицу, , "СтраховыеВзносы");
			СтраховыеВзносы = 0;
		КонецЕсли;
		
		ТаблицаСтраховыеВзносыИсчисленные		= 0;
		
		Если ТаблицаСтраховыеВзносыСведенияОДоходах.КоличествоСтрок() &gt; 0 Тогда
			ТаблицаСтраховыеВзносыСведенияОДоходах.НоваяКолонка("Организация");
			ТаблицаСтраховыеВзносыСведенияОДоходах.НоваяКолонка("ОбособленноеПодразделение");
			
			СтраховыеВзносы = СоздатьОбъект("СписокЗначений");
			СтраховыеВзносы.Установить("Дата",					ТекущаяДата());
			СтраховыеВзносы.Установить("ПериодРегистрации",		ПериодРегистрации);
			СтраховыеВзносы.Установить("Номер",					"СВЗ-" + Прав(ТекущийГод, 2));
			СтраховыеВзносы.Установить("Организация",			"Наша организация");
			СтраховыеВзносы.Установить("Комментарий",			"Страховые взносы за " + ТекущийГод + "г.");

			СтраховыеВзносы.Установить("СтраховыеВзносыСведенияОДоходах",	ТаблицаСтраховыеВзносыСведенияОДоходах);
			
			Позиция = СписокПустыхДокументовПоГодамДох.НайтиЗначение(Дата(ТекущийГод, 1, 1));
			Если Позиция = 0 Тогда
				ДозаполнитьТаблицу = 1;
			Иначе
				ДозаполнитьТаблицу = 0;
				СписокПустыхДокументовПоГодамДох.УдалитьЗначение(Позиция);
			КонецЕсли;
			
			ВыгрузитьПоПравилу(СтраховыеВзносы, , ДозаполнитьТаблицу, , "СтраховыеВзносы");
			СтраховыеВзносы = 0;
		КонецЕсли;
		
		ТаблицаСтраховыеВзносыСведенияОДоходах	= 0;
		
		ТаблицаЕСННачисления	= 0;
		
	КонецЦикла;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>НачисленияДляСтраховыхВзносов</Код>
			<Наименование>Начисления для страховых взносов (за период переноса)</Наименование>
			<Порядок>900</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

СписокСотрудников = РазделитьСотрудниковНаПорции(0,1);

СписокПустыхДокументовПоМесяцамОсн	= СоздатьОбъект("СписокЗначений");
СписокПустыхДокументовПоМесяцамДоп	= СоздатьОбъект("СписокЗначений");

Для ТекущийГод = Макс(ДатаГод(ДатаНачала),2010) По ДатаГод(ДатаОкончания) Цикл
	Состояние("Страховые взносы за " + ТекущийГод + "г.");

	ПериодРегистрации = Дата(ТекущийГод, 1, 1);
	
	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
		СписокПустыхДокументовПоМесяцамОсн.ДобавитьЗначение(Дата(ТекущийГод, ТекущийМесяц, 1));
		СписокПустыхДокументовПоМесяцамДоп.ДобавитьЗначение(Дата(ТекущийГод, ТекущийМесяц, 1));
	КонецЦикла;
	
	Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
		
		ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
		
		ТаблицаСтраховыеВзносыИсчисленные		= СоздатьТЗСтраховыеВзносыИсчисленные();
		ТаблицаСтраховыеВзносыСведенияОДоходах	= СоздатьТЗСтраховыеВзносыСведенияОДоходах();
		ТаблицаЕСННачисления					= СоздатьТЗЕСННачисления();
		
		// Собрать данные о начислениях и сведениях о доходах,
		// а также доходы/вычеты/налоги для ЕСН исчисленного
		ДоходыВычетыНалогиСотрудников = СобратьДанныеДляСтраховыхВзносов(ТаблицаСтраховыеВзносыСведенияОДоходах, ТаблицаЕСННачисления, ПорцияСотрудников, КонГода(Дата(ТекущийГод,12,15)));
		
		// Страховые взносы Исчисленные
		Состояние("Начисления для страховых взносов");
		ЗаполнитьТаблицуСтраховыеВзносыИсчисленные(ТаблицаСтраховыеВзносыИсчисленные, ПорцияСотрудников, ДоходыВычетыНалогиСотрудников, КонГода(Дата(ТекущийГод,12,15)));
		ДоходыВычетыНалогиСотрудников = 0;
		
		ТаблицаСтраховыеВзносыИсчисленные		= 0;
		
		ТаблицаСтраховыеВзносыСведенияОДоходах	= 0;
		
		// ЕСН Основные и Дополнительные начисления
		Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
			ДатаНачалаТекущегоГода		= ДатаНачала;
		Иначе
			ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
		КонецЕсли;
		
		Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
			ДатаОкончанияТекущегоГода	= ДатаОкончания;
		Иначе
			ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
		КонецЕсли;
		
		Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
			ПериодРегистрацииМесяц = Дата(ТекущийГод, ТекущийМесяц, 1);
			
			ТаблицаЕСНОсновныеНачисления		= СоздатьТЗЕСННачисления();
			ТаблицаЕСНДополнительныеНачисления	= СоздатьТЗЕСННачисления();
			
			ТаблицаЕСННачисления.ВыбратьСтроки();
			Пока ТаблицаЕСННачисления.ПолучитьСтроку() = 1 Цикл
				Если ТаблицаЕСННачисления.ПериодРегистрации &lt;&gt; ПериодРегистрацииМесяц Тогда
					Продолжить;
				КонецЕсли;
				
				Если МожноПереноситьВидРасчета(ТаблицаЕСННачисления.ВидРасчета) = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				ВидПВР = ОпределитьВидПВР(ТаблицаЕСННачисления.ВидРасчета);
				
				Если ВидПВР = "ОсновныеНачисления" Тогда
					ЕСННачисления = ТаблицаЕСНОсновныеНачисления;
				ИначеЕсли ВидПВР = "ДополнительныеНачисления" Тогда
					ЕСННачисления = ТаблицаЕСНДополнительныеНачисления;
				Иначе
					Продолжить;
				КонецЕсли;
				
				ЕСННачисления.НоваяСтрока();
				ЕСННачисления.Сотрудник					= ТаблицаЕСННачисления.Сотрудник;
				ЕСННачисления.Физлицо					= ТаблицаЕСННачисления.Физлицо;
				ЕСННачисления.ПериодРегистрации			= ТаблицаЕСННачисления.ПериодРегистрации;
				ЕСННачисления.ПериодДействияНачало		= ТаблицаЕСННачисления.ПериодДействияНачало;
				ЕСННачисления.ПериодДействияКонец		= ТаблицаЕСННачисления.ПериодДействияКонец;
				ЕСННачисления.Результат					= ТаблицаЕСННачисления.Результат;
				ЕСННачисления.Скидка					= ТаблицаЕСННачисления.Скидка;
				ЕСННачисления.КодДоходаЕСН				= ТаблицаЕСННачисления.КодДоходаЕСН;
				ЕСННачисления.ВидРасчета				= ТаблицаЕСННачисления.ВидРасчета;
				ЕСННачисления.ОблагаетсяЕНВД			= ТаблицаЕСННачисления.ОблагаетсяЕНВД;
				ЕСННачисления.ГрафикРаботы				= ТаблицаЕСННачисления.ГрафикРаботы;
				ЕСННачисления.ВидУчетаВремени			= ТаблицаЕСННачисления.ВидУчетаВремени;
				ЕСННачисления.Сторно					= ТаблицаЕСННачисления.Сторно;
				ЕСННачисления.ДокументОснование			= ТаблицаЕСННачисления.ДокументОснование;
				ЕСННачисления.НомерСтрокиДокумента		= ТаблицаЕСННачисления.НомерСтрокиДокумента;
			КонецЦикла;
			
			Если ТаблицаЕСНОсновныеНачисления.КоличествоСтрок() &gt; 0 Тогда
				ЕСН_Начисления = СоздатьОбъект("СписокЗначений");
				ЕСН_Начисления.Установить("Дата",							ТекущаяДата());
				ЕСН_Начисления.Установить("ПериодРегистрации",				ПериодРегистрацииМесяц);
				ЕСН_Начисления.Установить("Номер",							"СЗЧ-" + Прав(ТекущийГод, 2) + Прав("0" + ТекущийМесяц, 2));
				ЕСН_Начисления.Установить("Организация",					"Наша организация");
				ЕСН_Начисления.Установить("Комментарий",					"Страховые взносы: начисления за " + Формат(ПериодРегистрацииМесяц, "ДММММГГГГ"));

				ЕСН_Начисления.Установить("ЕСНОсновныеНачисления",			ТаблицаЕСНОсновныеНачисления);
				
				Позиция = СписокПустыхДокументовПоМесяцамОсн.НайтиЗначение(ПериодРегистрацииМесяц);
				Если Позиция = 0 Тогда
					ДозаполнитьТаблицу = 1;
				Иначе
					ДозаполнитьТаблицу = 0;
					СписокПустыхДокументовПоМесяцамОсн.УдалитьЗначение(Позиция);
				КонецЕсли;
				
				ВыгрузитьПоПравилу(ЕСН_Начисления, , ДозаполнитьТаблицу, , "ЕСН_Начисления");
				ЕСН_Начисления = 0;
			КонецЕсли;
			
			ТаблицаЕСНОсновныеНачисления		= 0;
			
			Если ТаблицаЕСНДополнительныеНачисления.КоличествоСтрок() &gt; 0 Тогда
				ЕСН_Начисления = СоздатьОбъект("СписокЗначений");
				ЕСН_Начисления.Установить("Дата",							ТекущаяДата());
				ЕСН_Начисления.Установить("ПериодРегистрации",				ПериодРегистрацииМесяц);
				ЕСН_Начисления.Установить("Номер",							"СЗЧ-" + Прав(ТекущийГод, 2) + Прав("0" + ТекущийМесяц, 2));
				ЕСН_Начисления.Установить("Организация",					"Наша организация");
				ЕСН_Начисления.Установить("Комментарий",					"Страховые взносы: начисления за " + Формат(ПериодРегистрацииМесяц, "ДММММГГГГ"));

				ЕСН_Начисления.Установить("ЕСНДополнительныеНачисления",	ТаблицаЕСНДополнительныеНачисления);
				
				Позиция = СписокПустыхДокументовПоМесяцамДоп.НайтиЗначение(ПериодРегистрацииМесяц);
				Если Позиция = 0 Тогда
					ДозаполнитьТаблицу = 1;
				Иначе
					ДозаполнитьТаблицу = 0;
					СписокПустыхДокументовПоМесяцамДоп.УдалитьЗначение(Позиция);
				КонецЕсли;
				
				ВыгрузитьПоПравилу(ЕСН_Начисления, , ДозаполнитьТаблицу, , "ЕСН_Начисления");
				ЕСН_Начисления = 0;
			КонецЕсли;
			
			ТаблицаЕСНДополнительныеНачисления	= 0;
				
		КонецЦикла;
		
		ТаблицаЕСННачисления	= 0;
		
	КонецЦикла;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>РасчетыПоСтраховымВзносам</Код>
			<Наименование>Расчеты по страховым взносам (за период переноса)</Наименование>
			<Порядок>950</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

СписокСотрудников = РазделитьСотрудниковНаПорции(0,1);

СписокПустыхДокументовПоГодамРасч	= СоздатьОбъект("СписокЗначений");

Для ТекущийГод = Макс(ДатаГод(ДатаНачала),2010) По ДатаГод(ДатаОкончания) Цикл
	Состояние("Страховые взносы за " + ТекущийГод + "г.");

	ПериодРегистрации = Дата(ТекущийГод, 1, 1);
	
	СписокПустыхДокументовПоГодамРасч.ДобавитьЗначение(ПериодРегистрации);

	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	ТаблицаРасчетыПоСтраховымВзносам		= СоздатьТЗРасчетыПоСтраховымВзносам();
	
	// Расчеты по страховым взносам
	Состояние("Расчеты по страховым взносам");
	Док = СоздатьОбъект("Документ.РасчетыПоСтраховымВзносам");
	Док.ВыбратьДокументы(ДатаНачалаТекущегоГода, ДатаОкончанияТекущегоГода);
	Пока Док.ПолучитьДокумент() = 1 Цикл
		Если Док.ПометкаУдаления() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ТаблицаРасчетыПоСтраховымВзносам.НоваяСтрока();
		ТаблицаРасчетыПоСтраховымВзносам.ВидДвижения							= "Расход";
		ТаблицаРасчетыПоСтраховымВзносам.Период									= Док.ДатаДок;
		ТаблицаРасчетыПоСтраховымВзносам.Организация							= ?(ПустоеЗначение(Док.ОбособленноеПодразделение) = 1, "Наша организация", Док.ОбособленноеПодразделение);
		ТаблицаРасчетыПоСтраховымВзносам.ВидПлатежа								= "Налог";
		ТаблицаРасчетыПоСтраховымВзносам.МесяцРасчетногоПериода					= НачМесяца(Док.МесяцОтчетногоПериода);
		ТаблицаРасчетыПоСтраховымВзносам.ПФРСтраховая							= Док.ПФРСтраховая;
		ТаблицаРасчетыПоСтраховымВзносам.ПФРНакопительная						= Док.ПФРНакопительная;
		ТаблицаРасчетыПоСтраховымВзносам.ФСС									= Док.ФСС;
		ТаблицаРасчетыПоСтраховымВзносам.ФФОМС									= Док.ФФОМС;
		ТаблицаРасчетыПоСтраховымВзносам.ТФОМС									= Док.ТФОМС;
		ТаблицаРасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах	= Док.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах;
		ТаблицаРасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах	= Док.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах;
		ТаблицаРасчетыПоСтраховымВзносам.ПФРПоСуммарномуТарифу					= Док.ПФРПоСуммарномуТарифу;
	КонецЦикла;
	
	Если ТаблицаРасчетыПоСтраховымВзносам.КоличествоСтрок() &gt; 0 Тогда
		СтраховыеВзносы = СоздатьОбъект("СписокЗначений");
		СтраховыеВзносы.Установить("Дата",					ТекущаяДата());
		СтраховыеВзносы.Установить("ПериодРегистрации",		ПериодРегистрации);
		СтраховыеВзносы.Установить("Номер",					"РСЗ-" + Прав(ТекущийГод, 2));
		СтраховыеВзносы.Установить("Организация",			"Наша организация");
		СтраховыеВзносы.Установить("Комментарий",			"Расчеты по страховым взносам за " + ТекущийГод + "г.");

		СтраховыеВзносы.Установить("РасчетыПоСтраховымВзносам",	ТаблицаРасчетыПоСтраховымВзносам);
		
		Позиция = СписокПустыхДокументовПоГодамРасч.НайтиЗначение(Дата(ТекущийГод, 1, 1));
		Если Позиция = 0 Тогда
			ДозаполнитьТаблицу = 1;
		Иначе
			ДозаполнитьТаблицу = 0;
			СписокПустыхДокументовПоГодамРасч.УдалитьЗначение(Позиция);
		КонецЕсли;
		
		ВыгрузитьПоПравилу(СтраховыеВзносы, , ДозаполнитьТаблицу, , "РасчетыПоСтраховымВзносам");
		СтраховыеВзносы = 0;
	КонецЕсли;
	
	ТаблицаРасчетыПоСтраховымВзносам	= 0;
		
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ФСС</Код>
			<Наименование>Пособия за счет ФСС (за период переноса)</Наименование>
			<Порядок>1000</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл
	Состояние("Пособия за счет ФСС за " + ТекущийГод + "г.");

	ПериодРегистрации = Дата(ТекущийГод, 1, 1);
	
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Период");
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("ОблагаетсяЕНВД");
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("УходЗаПервымРебенком");
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Физлицо"); 
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Сотрудник");
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("СтраховыеСлучаи");
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("СуммаВсего");
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("ДатаСтраховогоСлучая"); 

	ТаблицаПособияСоциальномуСтрахованию = СоздатьОбъект("ТаблицаЗначений"); 
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("Период");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("ВидПособияСоциальногоСтрахования");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("ОблагаетсяЕНВД");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("ВидЗанятости");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("СтраховыеСлучаи");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("ОплаченныеДни");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("СуммаВсего");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("Сотрудник");
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("ДатаСтраховогоСлучая");  
	ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("ДокументОснование");  

	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Период");
	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Физлицо");
	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Сотрудник");
	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("ОблагаетсяЕНВД");
	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("РазмерСреднегоЗаработка");  
	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("ДокументОснование");  

	Если ТекущийГод &gt; 2010 Тогда 
		СобратьДанныеДляФСС2011(
		ТекущийГод, 
		ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет, 
		ТаблицаПособияСоциальномуСтрахованию, 
		ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет);
	
	ИначеЕсли ТекущийГод &gt; 2009 Тогда 
		СобратьДанныеДляФСС2010(
		ТекущийГод, 
		ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет, 
		ТаблицаПособияСоциальномуСтрахованию, 
		ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет);
	
	Иначе
		
		СобратьДанныеДляФСС(
		ТекущийГод, 
		ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет, 
		ТаблицаПособияСоциальномуСтрахованию, 
		ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет);
		
	КонецЕсли;

	Если ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.КоличествоСтрок() &gt; 0 Тогда
		ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Организация");
		
		ФСС = СоздатьОбъект("СписокЗначений");
		ФСС.Установить("Дата",				ТекущаяДата());
		ФСС.Установить("ПериодРегистрации",	ПериодРегистрации);
		ФСС.Установить("Номер",				"ФСС-" + Прав(ТекущийГод, 2));
		ФСС.Установить("Организация",		"Наша организация");
		ФСС.Установить("Комментарий",		"Пособия за счет ФСС за " + ТекущийГод + "г.");

		ФСС.Установить("ПособияПоУходуЗаРебенкомДоПолутораЛет",	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет);
		
		ВыгрузитьПоПравилу(ФСС, , , , "ФСС");
		ФСС = 0;
	КонецЕсли;
	ТаблицаПособияПоУходуЗаРебенкомДоПолутораЛет = 0;

	Если ТаблицаПособияСоциальномуСтрахованию.КоличествоСтрок() &gt; 0 Тогда
		ТаблицаПособияСоциальномуСтрахованию.НоваяКолонка("Организация");
		
		ФСС = СоздатьОбъект("СписокЗначений");
		ФСС.Установить("Дата",				ТекущаяДата());
		ФСС.Установить("ПериодРегистрации",	ПериодРегистрации);
		ФСС.Установить("Номер",				"ФСС-" + Прав(ТекущийГод, 2));
		ФСС.Установить("Организация",		"Наша организация");
		ФСС.Установить("Комментарий",		"Пособия за счет ФСС за " + ТекущийГод + "г.");

		ФСС.Установить("ПособияСоциальномуСтрахованию",	ТаблицаПособияСоциальномуСтрахованию);
		
		ВыгрузитьПоПравилу(ФСС, , , , "ФСС");
		ФСС = 0;
	КонецЕсли;
	ТаблицаПособияСоциальномуСтрахованию = 0;

	Если ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.КоличествоСтрок() &gt; 0 Тогда
		ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет.НоваяКолонка("Организация");
		
		ФСС = СоздатьОбъект("СписокЗначений");
		ФСС.Установить("Дата",				ТекущаяДата());
		ФСС.Установить("ПериодРегистрации",	ПериодРегистрации);
		ФСС.Установить("Номер",				"ФСС-" + Прав(ТекущийГод, 2));
		ФСС.Установить("Организация",		"Наша организация");
		ФСС.Установить("Комментарий",		"Пособия за счет ФСС за " + ТекущийГод + "г.");

		ФСС.Установить("ЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет",	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет);
		
		ВыгрузитьПоПравилу(ФСС, , , , "ФСС");
		ФСС = 0;
	КонецЕсли;
	ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенкомДоПолутораЛет = 0;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ДозаполнениеВидовРасчета</Код>
			<Наименование>Дозаполнение видов расчета</Наименование>
			<Порядок>1050</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

Параметры.ЗаполнениеБазовыхНачислений = 1;

ВыгруженныеВидыРасчета = Параметры.ВыгруженныеВидыРасчета;

// создаем таблицу значений
// колонка - ВидРасчета, настраиваемый вид расчета
// колонка - ВедущиеВидыРасчета, список значений с ведущими видами расчета
ТЗСписокВсехВедущихВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
ТЗСписокВсехВедущихВидовРасчета.НоваяКолонка("ВидРасчета");
ТЗСписокВсехВедущихВидовРасчета.НоваяКолонка("ВедущиеВидыРасчета");

Для Сч = 1 По глСписокПравилПерерасчета.РазмерСписка() Цикл
	Правило=глСписокПравилПерерасчета.ПолучитьЗначение(Сч);
	// обойдем все в.р. которые надо пересчитать и занесем в список ведущих
	// все в.р., входящие в расчетную базу первых в.р.
	Для СчВр = 1 По Правило.КоличествоПодчиненных()  Цикл
		ВР = Правило.ПолучитьПодчиненный(СчВр);
		Если ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 0 Тогда
			Продолжить;	
		КонецЕсли;
		Если глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет",ВР,1) = 0 Тогда
			// не описанные пользователем в.р. рассматривать не будем
			Продолжить
		КонецЕсли;
		Если (глСпрВидыРасчетов.ПорядокРасчета = Перечисление.ХарактерНачисления.ФиксСумма) или (глСпрВидыРасчетов.ПорядокРасчета = Перечисление.ХарактерНачисления.ПоТарифу)  Тогда
			// в правилах перерасчета нуждаются только те в.р., которые рассчитываются   
			// процентом от какой-либо базы или суммой от отработанного времени
			Продолжить
		КонецЕсли;
		НомерСтроки = "";
		Если ТЗСписокВсехВедущихВидовРасчета.НайтиЗначение(ВР, НомерСтроки, "ВидРасчета") = 0 Тогда
			ТЗСписокВсехВедущихВидовРасчета.НоваяСтрока();
			ТЗСписокВсехВедущихВидовРасчета.ВидРасчета = ВР;
			ТаблицаВедущиеВР = СоздатьОбъект("ТаблицаЗначений"); 
			ТаблицаВедущиеВР.НоваяКолонка("ВР");
			ТаблицаВедущиеВР.НоваяКолонка("Наименование");
			НомерСтроки = ТЗСписокВсехВедущихВидовРасчета.КоличествоСтрок();
		Иначе 
			ТЗСписокВсехВедущихВидовРасчета.ПолучитьСтрокуПоНомеру(НомерСтроки);
			ТаблицаВедущиеВР = ТЗСписокВсехВедущихВидовРасчета.ВедущиеВидыРасчета;
		КонецЕсли;
		Для СчВедущих = 1 По Правило.КоличествоВедущих()  Цикл
			ВедущийВР = Правило.ПолучитьВедущий(СчВедущих);
			НомерСтроки2 = 0;
			Если ТаблицаВедущиеВР.НайтиЗначение(ВедущийВР, НомерСтроки2, "ВР") = 0 Тогда
				ВР = Правило.ПолучитьВедущий(СчВедущих);
				
				Если ВР = ВидРасчета.ПНВЛ Тогда
					глПереписатьИзТаблицыВТаблицу(Параметры.ВыгруженныеНачисленияПоФормеТруда, ТаблицаВедущиеВР);
					
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "ОВЗ (Оклад по воинскому званию)";
					ТаблицаВедущиеВР.ВР				= ВидРасчета.ОкладПоЗваниюНадбавкаЗаРазряд;
					
				ИначеЕсли ВР = ВидРасчета.БанковскиеИздержки Тогда
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "Перечисление в банк";
					ТаблицаВедущиеВР.ВР				= ВидРасчета.ПеречислениеВБанк;
					
				ИначеЕсли	(ВР = ВидРасчета.ОплатаПоОкладу)
					ИЛИ (ВР = ВидРасчета.ОплатаПоТабелю)
					ИЛИ (ВР = ВидРасчета.ОплатаПоТарифу)
				Тогда
					глПереписатьИзТаблицыВТаблицу(Параметры.ВыгруженныеНачисленияПоФормеТруда, ТаблицаВедущиеВР);
					
				ИначеЕсли ВР = ВидРасчета.Простой Тогда
					глПереписатьИзТаблицыВТаблицу(Параметры.ВыгруженныеНачисленияПоПростою, ТаблицаВедущиеВР);
					
				ИначеЕсли ВР = ВидРасчета.УдержаниеПоИсполнительномуЛисту Тогда
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "ИЛПроцентом";
					ТаблицаВедущиеВР.ВР				= ВР;
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "ИЛПроцентомДоПредела";
					ТаблицаВедущиеВР.ВР				= ВР;
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "ИЛПроцентомБезБЛ";
					ТаблицаВедущиеВР.ВР				= ВР;
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "ИЛПроцентомДоПределаБезБЛ";
					ТаблицаВедущиеВР.ВР				= ВР;
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "ИЛФиксированнойСуммой";
					ТаблицаВедущиеВР.ВР				= ВР;
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.Наименование	= "ИЛФиксированнойСуммойДоПредела";
					ТаблицаВедущиеВР.ВР				= ВР;
					
				Иначе
					ТаблицаВедущиеВР.НоваяСтрока();
					ТаблицаВедущиеВР.ВР				= ВР;
					ТЗВидаРасчета					= ВернутьТЗВидаРасчета(ТаблицаВедущиеВР.ВР);
					ТаблицаВедущиеВР.Наименование	= ТЗВидаРасчета.Наименование;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
		ТЗСписокВсехВедущихВидовРасчета.УстановитьЗначение(НомерСтроки, "ВедущиеВидыРасчета", ТаблицаВедущиеВР);
	КонецЦикла;
КонецЦикла;

ВыгруженныеВидыРасчета.ВыбратьСтроки();
Пока ВыгруженныеВидыРасчета.ПолучитьСтроку() = 1 Цикл
	
	СписокВедущихРавенБазовым = 1;
	Если ВыгруженныеВидыРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1 Тогда
		Если глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет",ВР,1) = 1 Тогда
			Если Не ((глСпрВидыРасчетов.ПорядокРасчета = Перечисление.ХарактерНачисления.ФиксСумма) или (глСпрВидыРасчетов.ПорядокРасчета = Перечисление.ХарактерНачисления.ПоТарифу)) Тогда
				СписокВедущихРавенБазовым = 0;	
			КонецЕсли;
		КонецЕсли
	КонецЕсли; 
	
	Если (ВыгруженныеВидыРасчета.НужнаБаза &lt;&gt; 1) и (СписокВедущихРавенБазовым = 1) Тогда
		Продолжить;
	КонецЕсли;

	ТЗСписокБазовыхВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокБазовыхВидовРасчета.НоваяКолонка("ВидРасчета");
	
	ТЗСписокВедущихВидовРасчета = СоздатьОбъект("ТаблицаЗначений");
	ТЗСписокВедущихВидовРасчета.НоваяКолонка("ВидРасчета");
	
	Если ВыгруженныеВидыРасчета.НужнаБаза = 1 Тогда
		ТаблицаБазовыхВР = ПолучитьСписокБазовыхВР(ВыгруженныеВидыРасчета.ВР);
	
		ТаблицаБазовыхВР.ВыбратьСтроки();
		Пока ТаблицаБазовыхВР.ПолучитьСтроку() = 1 Цикл
			Если ТипЗначенияСтр(ТаблицаБазовыхВР.ВР) = "Строка" Тогда
				ТЗСписокБазовыхВидовРасчета.НоваяСтрока();
				ТЗСписокБазовыхВидовРасчета.ВидРасчета		= ТаблицаБазовыхВР.ВР;
				
			Иначе
				ВидПВРБазы = ОпределитьВидПВР(ТаблицаБазовыхВР.ВР);
				
				Если ВидПВРБазы = "ДополнительныеНачисления" Тогда
					НовыйВидРасчета = СоздатьТЗПВРДополнительныеНачисления();
				ИначеЕсли ВидПВРБазы = "Удержания" Тогда
					НовыйВидРасчета = СоздатьТЗПВРУдержания();
				Иначе
					НовыйВидРасчета = СоздатьТЗПВРОсновныеНачисления();
				КонецЕсли;
				
				НовыйВидРасчета.НоваяСтрока();
				НовыйВидРасчета.Наименование	= ТаблицаБазовыхВР.Наименование;
				НовыйВидРасчета.ВР				= ТаблицаБазовыхВР.ВР;
				
				ТЗСписокБазовыхВидовРасчета.НоваяСтрока();
				ТЗСписокБазовыхВидовРасчета.ВидРасчета		= НовыйВидРасчета;
				
			КонецЕсли;
		КонецЦикла;
			
	КонецЕсли;
	
	Если СписокВедущихРавенБазовым = 1 Тогда 
		глПереписатьИзТаблицыВТаблицу(ТЗСписокБазовыхВидовРасчета, ТЗСписокВедущихВидовРасчета);
		
	Иначе
		НомерСтроки = 0;
		Если ТЗСписокВсехВедущихВидовРасчета.НайтиЗначение(ВыгруженныеВидыРасчета.ВР, НомерСтроки, "ВидРасчета") = 1 Тогда
			// получим таблицу ведущих ВР
			ТЗСписокВсехВедущихВидовРасчета.ПолучитьСтрокуПоНомеру(НомерСтроки);
			ТаблицаВедущиеВР = ТЗСписокВсехВедущихВидовРасчета.ВедущиеВидыРасчета;
			
			// тут надо создать ТЗСписокВедущихВидовРасчета, поместив в нее из ТаблицаВедущиеВР
			// только те ВР, которые входят в ВыгруженныеВидыРасчета
			ТаблицаВедущиеВР.ВыбратьСтроки();
			Пока ТаблицаВедущиеВР.ПолучитьСтроку() = 1 Цикл
				Если ТипЗначенияСтр(ТаблицаВедущиеВР.ВР) = "Строка" Тогда
					ТЗСписокВедущихВидовРасчета.НоваяСтрока();
					ТЗСписокВедущихВидовРасчета.ВидРасчета		= ТаблицаБазовыхВР.ВР;
					
				Иначе
					ВидПВРБазы = ОпределитьВидПВР(ТаблицаВедущиеВР.ВР);
					
					Если ВидПВРБазы = "ДополнительныеНачисления" Тогда
						НовыйВидРасчета = СоздатьТЗПВРДополнительныеНачисления();
					ИначеЕсли ВидПВРБазы = "Удержания" Тогда
						НовыйВидРасчета = СоздатьТЗПВРУдержания();
					Иначе
						НовыйВидРасчета = СоздатьТЗПВРОсновныеНачисления();
					КонецЕсли;
					
					НовыйВидРасчета.НоваяСтрока();
					НовыйВидРасчета.Наименование	= ТаблицаВедущиеВР.Наименование;
					НовыйВидРасчета.ВР				= ТаблицаВедущиеВР.ВР;
					
					ТЗСписокВедущихВидовРасчета.НоваяСтрока();
					ТЗСписокВедущихВидовРасчета.ВидРасчета		= НовыйВидРасчета;
					
				КонецЕсли;
			КонецЦикла;
			
	 	КонецЕсли;
	 
	КонецЕсли;
	
	Если ВыгруженныеВидыРасчета.ВидПВР = "ДополнительныеНачисления" Тогда
		ТЗВидаРасчета = СоздатьТЗПВРДополнительныеНачисления();
	ИначеЕсли ВыгруженныеВидыРасчета.ВидПВР = "Удержания" Тогда
		ТЗВидаРасчета = СоздатьТЗПВРУдержания();
	Иначе
		ТЗВидаРасчета = СоздатьТЗПВРОсновныеНачисления();
	КонецЕсли;
	
	ТЗВидаРасчета.НоваяСтрока();
	ТЗВидаРасчета.Наименование				= ВыгруженныеВидыРасчета.Наименование;
	ТЗВидаРасчета.ВР						= ВыгруженныеВидыРасчета.ВР;
	ТЗВидаРасчета.НужнаБаза					= ВыгруженныеВидыРасчета.НужнаБаза;
	
	ТЗВидаРасчета.БазовыеВидыРасчета		= ТЗСписокБазовыхВидовРасчета;
	ТЗВидаРасчета.ВедущиеВидыРасчета		= ТЗСписокВедущихВидовРасчета;
	
	Если ВыгруженныеВидыРасчета.ВидПВР = "ДополнительныеНачисления" Тогда
		ВыгрузитьПоПравилу(ТЗВидаРасчета, , , , "ДополнительныеНачисленияОрганизацийБаза");
	ИначеЕсли ВыгруженныеВидыРасчета.ВидПВР = "Удержания" Тогда
		ВыгрузитьПоПравилу(ТЗВидаРасчета, , , , "УдержанияОрганизацийБаза");
	Иначе
		ВыгрузитьПоПравилу(ТЗВидаРасчета, , , , "ОсновныеНачисленияОрганизацийБаза");
	КонецЕсли;
КонецЦикла;

Отказ = 1;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>УчетОсновногоЗаработкаПодразделенияОрганизации</Код>
			<Наименование>Учет основного заработка подразделений</Наименование>
			<Порядок>1100</Порядок>
			<КодПравилаКонвертации>УчетОсновногоЗаработкаПодразделенияОрганизации    </КодПравилаКонвертации>
			<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
			<ОбъектВыборки>СправочникСсылка.Подразделения</ОбъектВыборки>
			<ПередВыгрузкойОбъекта>Отказ = Объект.ПометкаУдаления();</ПередВыгрузкойОбъекта>
		</Правило>
		<Правило Отключить="false">
			<Код>ФизическиеЛица</Код>
			<Наименование>Физические лица</Наименование>
			<Порядок>1150</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

ТаблицаШкалСеверныхНадбавок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаШкалСеверныхНадбавок.НоваяКолонка("Шкала");
ТаблицаШкалСеверныхНадбавок.НоваяКолонка("ПорядокНачисления");
ТаблицаШкалСеверныхНадбавок.НоваяКолонка("НачальныйПроцент");

СпрШкалы = СоздатьОбъект("Справочник.ПроцентныеНадбавкиПоСтажу");
СпрШкалы.ВыбратьЭлементы();
Пока СпрШкалы.ПолучитьЭлемент() = 1 Цикл
	Шкала = СпрШкалы.ТекущийЭлемент();

	СпрШкала = СоздатьОбъект("Справочник.ПроцентныеНадбавкиПоСтажуШкала");
	СпрШкала.ИспользоватьВладельца(Шкала);
	СпрШкала.ПорядокРеквизита("Стаж");

	НачальныйПроцент = 0;
	
	СпрШкала.ВыбратьЭлементы();
	Если СпрШкала.ПолучитьЭлемент() = 1 Тогда
		ПервыйЭлемент = СпрШкала.ТекущийЭлемент();
	КонецЕсли;
	Если ПустоеЗначение(ПервыйЭлемент) = 0 Тогда
		Если ПервыйЭлемент.Стаж = "000000" Тогда
			НачальныйПроцент = ПервыйЭлемент.Процент;
			Если СпрШкала.ПолучитьЭлемент() = 1 Тогда
				ПервыйЭлемент = СпрШкала.ТекущийЭлемент();
			Иначе
				ПервыйЭлемент = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если СпрШкала.ПолучитьЭлемент() = 1 Тогда
		ВторойЭлемент = СпрШкала.ТекущийЭлемент();
	КонецЕсли;
	
	СпрШкала.ОбратныйПорядок(1);
	СпрШкала.ВыбратьЭлементы();
	Если СпрШкала.ПолучитьЭлемент() = 1 Тогда
		ПоследнийЭлемент = СпрШкала.ТекущийЭлемент();
	КонецЕсли;
	Если СпрШкала.ПолучитьЭлемент() = 1 Тогда
		ПредпоследнийЭлемент = СпрШкала.ТекущийЭлемент();
	КонецЕсли;
	
	РазмерПериода1 = 0; РазмерПрироста1 = 0;
	Если (ПустоеЗначение(ПервыйЭлемент) = 0) И (ПустоеЗначение(ВторойЭлемент) = 0) Тогда
		РазмерПрироста1 = ВторойЭлемент.Процент - ПервыйЭлемент.Процент;

		Месяцев1 = Число(Сред(ПервыйЭлемент.Стаж, 1, 2)) * 12 + Число(Сред(ПервыйЭлемент.Стаж, 3, 2));
		Месяцев2 = Число(Сред(ВторойЭлемент.Стаж, 1, 2)) * 12 + Число(Сред(ВторойЭлемент.Стаж, 3, 2));
		РазмерПериода1 = Месяцев2 - Месяцев1;
	КонецЕсли;
	
	РазмерПериода2 = 0; РазмерПрироста2 = 0;
	Если (ПустоеЗначение(ПредпоследнийЭлемент) = 0) И (ПустоеЗначение(ПоследнийЭлемент) = 0) Тогда
		РазмерПрироста2 = ПоследнийЭлемент.Процент - ПредпоследнийЭлемент.Процент;

		Месяцев1 = Число(Сред(ПредпоследнийЭлемент.Стаж, 1, 2)) * 12 + Число(Сред(ПредпоследнийЭлемент.Стаж, 3, 2));
		Месяцев2 = Число(Сред(ПоследнийЭлемент.Стаж, 1, 2)) * 12 + Число(Сред(ПоследнийЭлемент.Стаж, 3, 2));
		РазмерПериода2 = Месяцев2 - Месяцев1;
	КонецЕсли;
	
	Ограничение1 = 100;
	Если (ПустоеЗначение(ПоследнийЭлемент) = 0) Тогда
		Ограничение1 = ПоследнийЭлемент.Процент;
	КонецЕсли;
	
	ПорядокНачисленияСеверныхНадбавок	= "";
	Если (РазмерПериода1 = 6) И (РазмерПрироста1 = 20) И (РазмерПериода2 = 6) И (РазмерПрироста2 = 10) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа1Льготная";
		
	ИначеЕсли (РазмерПериода1 = 6) И (РазмерПрироста1 = 10) И (Ограничение1 = 100) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа1Обычная";
		
	ИначеЕсли (РазмерПериода1 = 6) И (РазмерПрироста1 = 20) И (РазмерПериода2 = 12) И (РазмерПрироста2 = 20) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа2Льготная";
		
	ИначеЕсли (РазмерПериода1 = 6) И (РазмерПрироста1 = 10) И (РазмерПериода2 = 12) И (РазмерПрироста2 = 10) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа2Обычная";
		
	ИначеЕсли (РазмерПериода1 = 6) И (РазмерПрироста1 = 10) И (Ограничение1 = 50) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа3Льготная";
		
	ИначеЕсли (РазмерПериода1 = 12) И (РазмерПрироста1 = 10) И (Ограничение1 = 50) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа3Обычная";
		
	ИначеЕсли (РазмерПериода1 = 6) И (РазмерПрироста1 = 10) И (Ограничение1 = 30) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа4Льготная";
		
	ИначеЕсли (РазмерПериода1 = 24) И (РазмерПрироста1 = 10) И (РазмерПериода2 = 24) И (РазмерПрироста2 = 10) И (Ограничение1 = 30) Тогда
		ПорядокНачисленияСеверныхНадбавок = "Группа4Обычная";
		
	КонецЕсли;
	
	Если ПустоеЗначение(ПорядокНачисленияСеверныхНадбавок) = 0 Тогда
		ТаблицаШкалСеверныхНадбавок.НоваяСтрока();
		ТаблицаШкалСеверныхНадбавок.Шкала				= Шкала;
		ТаблицаШкалСеверныхНадбавок.ПорядокНачисления	= ПорядокНачисленияСеверныхНадбавок;
		ТаблицаШкалСеверныхНадбавок.НачальныйПроцент	= НачальныйПроцент;
	КонецЕсли;
КонецЦикла;
		
// Учет основного заработка работников организаций
УчетОсновногоЗаработка = СоздатьОбъект("ТаблицаЗначений");
УчетОсновногоЗаработка.НоваяКолонка("Период");
УчетОсновногоЗаработка.НоваяКолонка("Сотрудник");
УчетОсновногоЗаработка.НоваяКолонка("Организация");
Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	УчетОсновногоЗаработка.НоваяКолонка("СпособОтраженияВБухучете");
	УчетОсновногоЗаработка.НоваяКолонка("ПодпадаетПодЕНВД");
Иначе
	УчетОсновногоЗаработка.НоваяКолонка("СтатьяФинансирования");
	УчетОсновногоЗаработка.НоваяКолонка("СтатьяРасходов");
КонецЕсли;
	
// НДФЛ Имущественные вычеты
// Создается по одному документу за каждый год переноса данных
ТаблицаИмущественныхВычетов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИмущественныхВычетов.НоваяКолонка("ФизЛицо");
ТаблицаИмущественныхВычетов.НоваяКолонка("ДатаСобытия");
ТаблицаИмущественныхВычетов.НоваяКолонка("Расходы");
ТаблицаИмущественныхВычетов.НоваяКолонка("ПроцентыПоКредитам");
ТаблицаИмущественныхВычетов.НоваяКолонка("КодНалоговогоОргана");
ТаблицаИмущественныхВычетов.НоваяКолонка("НомерВходящегоДокумента");
ТаблицаИмущественныхВычетов.НоваяКолонка("ДатаУведомления");
ТаблицаИмущественныхВычетов.НоваяКолонка("ПроцентыПриПерекредитовании");
ТаблицаИмущественныхВычетов.НоваяКолонка("РасходыНаСвоеОбучение");
ТаблицаИмущественныхВычетов.НоваяКолонка("СтраховыеВзносыНаМедУслуги");
ТаблицаИмущественныхВычетов.НоваяКолонка("РасходыНаДорогостоящееЛечение");
ТаблицаИмущественныхВычетов.НоваяКолонка("РасходыНаОбучениеДетей");
ТаблицаИмущественныхВычетов.НоваяКолонка("РасходыНаЛечение");


// Физические лица переносятся по наименованию и дате рождения
// В ЗиК может быть много сотрудников для одного физлица
// Необходимо перенести данные физлица по последнему из сотрудников

ТаблицаФизлиц = СоздатьОбъект("ТаблицаЗначений");
ТаблицаФизлиц.НоваяКолонка("Ид");
ТаблицаФизлиц.НоваяКолонка("ДатаПриема");
ТаблицаФизлиц.НоваяКолонка("Сотрудник");

СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
СпрСотрудники.ПорядокКодов();
СпрСотрудники.ВыбратьЭлементы(0);
Пока СпрСотрудники.ПолучитьЭлемент() = 1 Цикл
	Если СпрСотрудники.ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	Если СпрСотрудники.ОсновнойЭлемент &lt;&gt; СпрСотрудники.ТекущийЭлемент() Тогда
		Продолжить;
	КонецЕсли;
	
	Если (ПустоеЗначение(Параметры.ФизическоеЛицоДляОтладкиВыгрузки) = 0) И (Параметры.ФизическоеЛицоДляОтладкиВыгрузки &lt;&gt; СпрСотрудники.ОсновнойЭлемент) Тогда
		Продолжить;
	КонецЕсли;
	
	Ид = СокрЛП(СпрСотрудники.Наименование)+ПолучитьДатуV8(СпрСотрудники.ДатаРождения);
	
	Если ПустоеЗначение(глРаботалСотрудник(СпрСотрудники.ТекущийЭлемент(), ДатаНачала, ДатаОкончания)) = 0 Тогда
		НомерСтроки = 0;
		Если ТаблицаФизлиц.НайтиЗначение("1"+Ид, НомерСтроки, "Ид") = 1 Тогда
			ТаблицаФизлиц.ПолучитьСтрокуПоНомеру(НомерСтроки);
			
			// Найдем самый последний прием на работу
			ДокументПриказОПриеме = глПриказПоСотруднику(СпрСотрудники.ТекущийЭлемент(), ДатаОкончания, "ПриказОПриемеНаРаботу, ПриказОЗачисленииВСпискиЧасти", 0);
			// Если не нашли прием на работу на дату окончания, установим вычет на дату начала переноса
			Если ДокументПриказОПриеме.Выбран() = 1 Тогда
				ДатаПриема = ДокументПриказОПриеме.ДатаПриема;
			Иначе
				ДатаПриема = Дата(1,1,1);
			КонецЕсли;
			
			Если ТаблицаФизлиц.ДатаПриема &lt; ДатаПриема Тогда
				ТаблицаФизлиц.ДатаПриема	= ДатаПриема;
				ТаблицаФизлиц.Сотрудник		= СпрСотрудники.ТекущийЭлемент();
			КонецЕсли;
			
		Иначе
			// Найдем самый последний прием на работу
			ДокументПриказОПриеме = глПриказПоСотруднику(СпрСотрудники.ТекущийЭлемент(), ДатаОкончания, "ПриказОПриемеНаРаботу, ПриказОЗачисленииВСпискиЧасти", 0);
			// Если не нашли прием на работу на дату окончания, установим вычет на дату начала переноса
			Если ДокументПриказОПриеме.Выбран() = 1 Тогда
				ДатаПриема = ДокументПриказОПриеме.ДатаПриема;
			Иначе
				ДатаПриема = Дата(1,1,1);
			КонецЕсли;
			
			ТаблицаФизлиц.НоваяСтрока();
			ТаблицаФизлиц.Ид			= "1"+Ид;
			ТаблицаФизлиц.ДатаПриема	= ДатаПриема;
			ТаблицаФизлиц.Сотрудник		= СпрСотрудники.ТекущийЭлемент();
			
		КонецЕсли;
		
	Иначе
		АвторскийДоговор	= ДействуетАвторскийДоговор(СпрСотрудники.ТекущийЭлемент(), ДатаНачала, ДатаОкончания);
		ДоговорПодряда		= ?(глВидРасчетаДействует(СпрСотрудники.ТекущийЭлемент(), ВидРасчета.ОплатаПоДоговору, ДатаНачала, ДатаОкончания) = 1, 1, 0);

		Если АвторскийДоговор = 1 Тогда
			НомерСтроки = 0;
			Если ТаблицаФизлиц.НайтиЗначение("2"+Ид, НомерСтроки, "Ид") = 0 Тогда
				ТаблицаФизлиц.НоваяСтрока();
				ТаблицаФизлиц.Ид			= "2"+Ид;
				ТаблицаФизлиц.ДатаПриема	= Дата(1,1,1);
				ТаблицаФизлиц.Сотрудник		= СпрСотрудники.ТекущийЭлемент();
			КонецЕсли;
		КонецЕсли;
		
		Если ДоговорПодряда = 1 Тогда
			НомерСтроки = 0;
			Если ТаблицаФизлиц.НайтиЗначение("3"+Ид, НомерСтроки, "Ид") = 0 Тогда
				ТаблицаФизлиц.НоваяСтрока();
				ТаблицаФизлиц.Ид			= "3"+Ид;
				ТаблицаФизлиц.ДатаПриема	= Дата(1,1,1);
				ТаблицаФизлиц.Сотрудник		= СпрСотрудники.ТекущийЭлемент();
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;
	
ТаблицаФизлиц.ВыбратьСтроки();
Пока ТаблицаФизлиц.ПолучитьСтроку() = 1 Цикл
	Источник			= ТаблицаФизлиц.Сотрудник;
	АвторскийДоговор	= ?(Сред(ТаблицаФизлиц.Ид, 1, 1) = "2", 1, 0);
	ДоговорПодряда		= ?(Сред(ТаблицаФизлиц.Ид, 1, 1) = "3", 1, 0);
	
	// Все данные по физлицу
	ВыгрузитьПоПравилу(Источник, , , , "ФизическиеЛицаВсеДанные");
	
	// Регистр "СведенияОСтажеРаботыНаСевере"
	СтажСеверный	= Источник.СтажСеверный;
	ШкалаНадбавок	= Источник.ПроцентыСевернойНадбавки;
	Если (ПустаяСтрока(ШкалаНадбавок) = 0) И (ПустаяСтрока(СтажСеверный) = 0) Тогда
		НомерСтроки = 0;
		Если ТаблицаШкалСеверныхНадбавок.НайтиЗначение(ШкалаНадбавок, НомерСтроки, "Шкала") = 1 Тогда
			ТаблицаШкалСеверныхНадбавок.ПолучитьСтрокуПоНомеру(НомерСтроки);
		
			Если ПустаяСтрока(ТаблицаШкалСеверныхНадбавок.ПорядокНачисления) = 0 Тогда
				Год		= Число(Прав(СтажСеверный, 4));
				Месяц	= Число(Сред(СтажСеверный,4,2));
				День	= Число(Лев(СтажСеверный, 2));
				
				// Возможно случайно ошиблись и не доввели дату
				Если Год &lt; 30 Тогда
					Год = 2000 + Год;
					
				ИначеЕсли Год &lt; 100 Тогда
					Год = 1900 + Год;
					
				ИначеЕсли Год &lt; 1000 Тогда
					Год = 1000 + Год;
					
				КонецЕсли;
				
				// Если исправления не помогли, тогда вернум пустой год
				// Иначе данные просто не загрузятся
				Если Год &lt; 1900 Тогда
					Год		= 1;
					Месяц	= 1;
					День	= 1;
				КонецЕсли;
				
				ДатаНачалаПериода		= Дата(Год, Месяц, День);
				
				СтажРаботыНаСевере = СоздатьОбъект("СписокЗначений");
				СтажРаботыНаСевере.Установить("ФизЛицо",							Источник);
				СтажРаботыНаСевере.Установить("Период",								ДатаНачалаПериода);
				СтажРаботыНаСевере.Установить("НачальныйПроцентСевернойНадбавки",	ТаблицаШкалСеверныхНадбавок.НачальныйПроцент);
				СтажРаботыНаСевере.Установить("ПорядокНачисленияСеверныхНадбавок",	ТаблицаШкалСеверныхНадбавок.ПорядокНачисления);
				
				ВыгрузитьПоПравилу(СтажРаботыНаСевере, , , , "СведенияОСтажеРаботыНаСевере");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	// Данные по авансу сотрудников
	Если Источник.Аванс &gt; 0 Тогда
		Аванс = СоздатьОбъект("СписокЗначений");
		Аванс.Установить("Физлицо",		Источник);
		Аванс.Установить("Организация",	"Наша организация");
		Аванс.Установить("СуммаАванса",	Источник.Аванс);
		
		ВыгрузитьПоПравилу(Аванс, , , , "АвансыРаботникамОрганизаций");
	КонецЕсли;
	
	НомерЗарплатногоСчета = Источник.НомерЗарплатногоСчета;
	
	Если (ПустаяСтрока(НомерЗарплатногоСчета) = 0)
		И (ПустаяСтрока(глЗаменитьОдниСимволыДругими("0123456789/", НомерЗарплатногоСчета, "           ")) = 1) Тогда
		ЛицевойСчет = СоздатьОбъект("СписокЗначений");
		ЛицевойСчет.Установить("ФизЛицо",				Источник);
		ЛицевойСчет.Установить("Организация",			"Наша организация");
		ЛицевойСчет.Установить("НомерЛицевогоСчета",	Источник.НомерЗарплатногоСчета);
		
		ВыгрузитьПоПравилу(ЛицевойСчет, , , , "ЛицевыеСчетаРаботниковОрганизации");
	КонецЕсли;
	
	// НДФЛ Доходы с предыдущего места работы
	СпрПредыдущиеДоходы = СоздатьОбъект("Справочник.НКИтогиПоГоду");
	СпрПредыдущиеДоходы.ИспользоватьВладельца(Источник);
	СпрПредыдущиеДоходы.ВыбратьЭлементы();
	Пока СпрПредыдущиеДоходы.ПолучитьЭлемент() = 1 Цикл
		Год = СпрПредыдущиеДоходы.Код;
		
		РазмерДохода = 0;
		Для Месяц = 1 По 12 Цикл
			РазмерДохода = РазмерДохода + СпрПредыдущиеДоходы.ПолучитьАтрибут("СД"+Месяц);
			
			Если РазмерДохода &gt; 0 Тогда
				ПредыдущийДоход = СоздатьОбъект("СписокЗначений");
				ПредыдущийДоход.Установить("ФизЛицо",					Источник);
				ПредыдущийДоход.Установить("Организация",				"Наша организация");
				ПредыдущийДоход.Установить("МесяцНалоговогоПериода",	Дата(Год, Месяц, 1));
				ПредыдущийДоход.Установить("Размер",					РазмерДохода);
				ВыгрузитьПоПравилу(ПредыдущийДоход, , , , "НДФЛДоходыПредыдущегоМестаРаботы");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// НДФЛ Стандартные вычеты
	ТаблицаВычетовНаДетей = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаВычетовНаДетей.НоваяКолонка("Физлицо");
	ТаблицаВычетовНаДетей.НоваяКолонка("Период");
	ТаблицаВычетовНаДетей.НоваяКолонка("ПериодЗавершения");
	ТаблицаВычетовНаДетей.НоваяКолонка("КодВычета");
	ТаблицаВычетовНаДетей.НоваяКолонка("КоличествоДетей");
	ТаблицаВычетовНаДетей.НоваяКолонка("КоличествоДетейЗавершения");
	
	ДатаПервогоВычета = Дата(1,1,1);
	СпрВычеты = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");
	СпрВычеты.ИспользоватьВладельца(Источник);
	СпрВычеты.ВыбратьЭлементы();
	Пока СпрВычеты.ПолучитьЭлемент() = 1 Цикл
		КодВычета = СпрВычеты.ВидВычета.Код;
		ВидВычета = СпрВычеты.ВидВычета;
		
		Если ПустоеЗначение(КодВычета) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ДатаНачалаВычета = СпрВычеты.ДатаНачала;
		Если ПустоеЗначение(ДатаНачалаВычета) = 1 Тогда
			// Найдем самый последний прием на работу
			ДокументПриказОПриеме = глПриказПоСотруднику(Источник, ДатаОкончания, "ПриказОПриемеНаРаботу, ПриказОЗачисленииВСпискиЧасти", 0);
			// Если не нашли прием на работу на дату окончания, установим вычет на дату начала переноса
			Если ДокументПриказОПриеме.Выбран() = 0 Тогда
				ДатаНачалаВычета = ДатаНачала;
			Иначе
				ДатаНачалаВычета = ДокументПриказОПриеме.ДатаПриема;
			КонецЕсли;
		КонецЕсли;
		
		// Стандартные вычеты
		Если ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Стандартные Тогда
			Если (ДатаПервогоВычета = Дата(1,1,1)) ИЛИ (ДатаПервогоВычета &gt; ДатаНачалаВычета) Тогда
				ДатаПервогоВычета = ДатаНачалаВычета;
			КонецЕсли;
			ЛичныйВычет = СоздатьОбъект("СписокЗначений");
			ЛичныйВычет.Установить("Владелец",		Источник);
			ЛичныйВычет.Установить("ДатаНачала",	ДатаНачалаВычета);
			ЛичныйВычет.Установить("ВидВычета",		СпрВычеты.ВидВычета);
			ВыгрузитьПоПравилу(ЛичныйВычет, , , , "НДФЛСтандартныеВычетыФизлиц");
			
			Если ПустоеЗначение(СпрВычеты.ДатаОкончания) = 0 Тогда
				ЛичныйВычет = СоздатьОбъект("СписокЗначений");
				ЛичныйВычет.Установить("Владелец",		Источник);
				ЛичныйВычет.Установить("ДатаНачала",	СпрВычеты.ДатаОкончания+1);
				ВыгрузитьПоПравилу(ЛичныйВычет, , , , "НДФЛСтандартныеВычетыФизлиц");
			КонецЕсли;
			
		// Вычеты на детей
		ИначеЕсли ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей Тогда
			Если (ДатаПервогоВычета = Дата(1,1,1)) ИЛИ (ДатаПервогоВычета &gt; ДатаНачалаВычета) Тогда
				ДатаПервогоВычета = ДатаНачалаВычета;
			КонецЕсли;
			
			ТаблицаВычетовНаДетей.НоваяСтрока();
			ТаблицаВычетовНаДетей.Физлицо					= Источник;
			ТаблицаВычетовНаДетей.Период					= ДатаНачалаВычета;
			ТаблицаВычетовНаДетей.ПериодЗавершения			= СпрВычеты.ДатаОкончания;
			ТаблицаВычетовНаДетей.КодВычета					= СпрВычеты.ВидВычета;
			ТаблицаВычетовНаДетей.КоличествоДетей			= 1;
			ТаблицаВычетовНаДетей.КоличествоДетейЗавершения	= 0;
			
		ИначеЕсли ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Имущественные Тогда
			
			ТаблицаИмущественныхВычетов.НоваяСтрока();
			ТаблицаИмущественныхВычетов.ФизЛицо					= Источник;
			ТаблицаИмущественныхВычетов.ДатаСобытия				= ДатаНачалаВычета;
			ТаблицаИмущественныхВычетов.КодНалоговогоОргана		= СпрВычеты.КодФНС;
			ТаблицаИмущественныхВычетов.НомерВходящегоДокумента	= СпрВычеты.НомерУведомления;
			ТаблицаИмущественныхВычетов.ДатаУведомления			= СпрВычеты.ДатаУведомления;
			Если Найти(КодВычета, "311") &lt;&gt; 0 Тогда
				ТаблицаИмущественныхВычетов.Расходы					= СпрВычеты.Сумма;
			ИначеЕсли Найти(КодВычета, "312") &lt;&gt; 0 Тогда
				ТаблицаИмущественныхВычетов.ПроцентыПоКредитам		= СпрВычеты.Сумма;
			Иначе
				ТаблицаИмущественныхВычетов.ПроцентыПриПерекредитовании		= СпрВычеты.Сумма;
			КонецЕсли;
			
		ИначеЕсли ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО Тогда	
			
			ТаблицаИмущественныхВычетов.НоваяСтрока();
			ТаблицаИмущественныхВычетов.ФизЛицо					= Источник;
			ТаблицаИмущественныхВычетов.ДатаСобытия				= ДатаНачалаВычета;
			ТаблицаИмущественныхВычетов.КодНалоговогоОргана		= СпрВычеты.КодФНС;
			ТаблицаИмущественныхВычетов.НомерВходящегоДокумента	= СпрВычеты.НомерУведомления;
			ТаблицаИмущественныхВычетов.ДатаУведомления			= СпрВычеты.ДатаУведомления;
			Если Найти(КодВычета, "320(о)") &lt;&gt; 0 Тогда
				ТаблицаИмущественныхВычетов.РасходыНаСвоеОбучение		= СпрВычеты.Сумма;
			ИначеЕсли Найти(КодВычета, "325") &lt;&gt; 0 Тогда
				ТаблицаИмущественныхВычетов.СтраховыеВзносыНаМедУслуги		= СпрВычеты.Сумма;
			ИначеЕсли Найти(КодВычета, "326") &lt;&gt; 0 Тогда
				ТаблицаИмущественныхВычетов.РасходыНаДорогостоящееЛечение		= СпрВычеты.Сумма;
			ИначеЕсли Найти(КодВычета, "321") &lt;&gt; 0 Тогда
				ТаблицаИмущественныхВычетов.РасходыНаОбучениеДетей		= СпрВычеты.Сумма;	
			Иначе
				ТаблицаИмущественныхВычетов.РасходыНаЛечение		= СпрВычеты.Сумма;    
			КонецЕсли;
			
		Иначе
			
		КонецЕсли;
	КонецЦикла;
	
	// 1. В ЗиК может быть несколько строк с одинаковым периодом и одинаковым кодов вычета
	// 2. Периоды могут пересекаться, в ЗУП/ЗБУ Пересекающихся периодов быть не должно
	// 3. В ЗУП/ЗБУ периоды всегда начинается и заканчивается первым и последним днями месяца
	ТаблицаВычетовНаДетей.ВыбратьСтроки();
	Пока ТаблицаВычетовНаДетей.ПолучитьСтроку() = 1 Цикл
		Если ПустоеЗначение(ТаблицаВычетовНаДетей.Период) = 0 Тогда
			ТаблицаВычетовНаДетей.Период			= НачМесяца(ТаблицаВычетовНаДетей.Период);
		КонецЕсли;
		Если ПустоеЗначение(ТаблицаВычетовНаДетей.ПериодЗавершения) = 0 Тогда
			ТаблицаВычетовНаДетей.ПериодЗавершения	= КонМесяца(ТаблицаВычетовНаДетей.ПериодЗавершения);
		КонецЕсли;
	КонецЦикла;
	ТаблицаВычетовНаДетей.Свернуть("Физлицо, Период, ПериодЗавершения, КодВычета", "КоличествоДетей, КоличествоДетейЗавершения");
	ТаблицаВычетовНаДетей.Сортировать("+Период,+ПериодЗавершения");
	Пока ТаблицаВычетовНаДетей.КоличествоСтрок() &gt; 0 Цикл
		
		Если ТаблицаВычетовНаДетей.КоличествоСтрок() &gt; 1 Тогда
			ТаблицаВычетовНаДетей.ПолучитьСтрокуПоНомеру(1);
			
			Для Номер = 2 По ТаблицаВычетовНаДетей.КоличествоСтрок() Цикл
				КодВычета = ТаблицаВычетовНаДетей.ПолучитьЗначение(Номер, "КодВычета");
				Если КодВычета &lt;&gt; ТаблицаВычетовНаДетей.КодВычета Тогда
					Продолжить;
				КонецЕсли;
				
				// Правила обработки двух пересекающихся периодов
				//	Всегда у первого периода дата начала меньше чем у второго
				//	С одинаковой датой начала, первым пойдет пустой период
				
				// 1. даты окончания заполнены и совпадают
				//		в первом периоде: дата окончания становится на день меньше даты начала второго периода
				//		во втором периоде: количество детей - сумма первого и второго периодов
				
				// 2. у первого периода не заполнена дата окончания, у второго - заполнена
				//		в первом периоде: дата начала становится на день позже даты окончания второго периода
				//		во втором периоде: количество детей - сумма первого и второго периодов
				
				// 3. у первого и второго периодов совпадают даты начала
				//		в первом периоде: количество детей - сумма первого и второго периодов
				//		во втором периоде: дата начала становится на день больше даты окончания первого периода
				
				// 4. даты окончания заполнены, не совпадают
				//		в первом периоде: дата окончания становится на день меньше даты начала второго периода
				//		во втором периоде: дата начала становится на день больше даты окончания первого периода
				//		добавляется еще один период:
				//			с даты окончания первого до даты начала второго периода, 
				//			количество детей - сумма первого и второго периодов
				
				БудущийПериод						= ТаблицаВычетовНаДетей.ПолучитьЗначение(Номер, "Период");
				БудущийПериодЗавершения				= ТаблицаВычетовНаДетей.ПолучитьЗначение(Номер, "ПериодЗавершения");
				БудущееКоличествоДетей				= ТаблицаВычетовНаДетей.ПолучитьЗначение(Номер, "КоличествоДетей");
				
				Если БудущийПериодЗавершения = ТаблицаВычетовНаДетей.ПериодЗавершения Тогда
					// Запомним количество детей текущей записи
					КоличествоДетей				= ТаблицаВычетовНаДетей.КоличествоДетей;
					
					// У текущей записи уменьшим дату окончания
					ТаблицаВычетовНаДетей.ПериодЗавершения = БудущийПериод-1;
					
					// Исправим количество детей следующей записи
					ТаблицаВычетовНаДетей.ПолучитьСтрокуПоНомеру(Номер);
					ТаблицаВычетовНаДетей.КоличествоДетей			= ТаблицаВычетовНаДетей.КоличествоДетей + КоличествоДетей;
					
					Прервать;
				КонецЕсли;
				
				Если (ПустоеЗначение(ТаблицаВычетовНаДетей.ПериодЗавершения) = 1) Тогда
					// Запомним количество детей текущей записи
					КоличествоДетей				= ТаблицаВычетовНаДетей.КоличествоДетей;
					
					// У текущей записи уменьшим дату начала
					ТаблицаВычетовНаДетей.Период = БудущийПериодЗавершения+1;
					
					// Исправим количество детей следующей записи
					ТаблицаВычетовНаДетей.ПолучитьСтрокуПоНомеру(Номер);
					ТаблицаВычетовНаДетей.КоличествоДетей			= ТаблицаВычетовНаДетей.КоличествоДетей + КоличествоДетей;
					
					Прервать;
				КонецЕсли;
				
				Если (БудущийПериод = ТаблицаВычетовНаДетей.Период) Тогда
					// Запомним период завершения текущей записи
					ПериодЗавершения			= ТаблицаВычетовНаДетей.ПериодЗавершения;
					
					// У текущей записи исправим количество детей
					ТаблицаВычетовНаДетей.КоличествоДетей			= ТаблицаВычетовНаДетей.КоличествоДетей + КоличествоДетей;
					
					// Исправим дату начала следующей записи
					ТаблицаВычетовНаДетей.ПолучитьСтрокуПоНомеру(Номер);
					ТаблицаВычетовНаДетей.Период	= ПериодЗавершения + 1;
					
					Прервать;
				КонецЕсли;
				
				Если (БудущийПериод &lt; ТаблицаВычетовНаДетей.ПериодЗавершения) Тогда
					// Запомним реквизиты текущей записи
					ПериодЗавершения			= ТаблицаВычетовНаДетей.ПериодЗавершения;
					КоличествоДетей				= ТаблицаВычетовНаДетей.КоличествоДетей;
					
					// У текущей записи уменьшим дату окончания
					ТаблицаВычетовНаДетей.ПериодЗавершения = БудущийПериод-1;
					
					// Исправим дату начала следующей записи
					ТаблицаВычетовНаДетей.ПолучитьСтрокуПоНомеру(Номер);
					ТаблицаВычетовНаДетей.Период	= ПериодЗавершения + 1;
					
					// Добавим новую запись между первым и вторым периодом
					ТаблицаВычетовНаДетей.НоваяСтрока();
					ТаблицаВычетовНаДетей.Физлицо					= Источник;
					ТаблицаВычетовНаДетей.Период					= БудущийПериод;
					ТаблицаВычетовНаДетей.ПериодЗавершения			= ПериодЗавершения;
					ТаблицаВычетовНаДетей.КодВычета					= КодВычета;
					ТаблицаВычетовНаДетей.КоличествоДетей			= КоличествоДетей + БудущееКоличествоДетей;
					ТаблицаВычетовНаДетей.КоличествоДетейЗавершения	= КоличествоДетей;
					
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			ТаблицаВычетовНаДетей.Свернуть("Физлицо, Период, ПериодЗавершения, КодВычета", "КоличествоДетей, КоличествоДетейЗавершения");
			ТаблицаВычетовНаДетей.Сортировать("+Период,+ПериодЗавершения");
		КонецЕсли;
		
		ТаблицаВычетовНаДетей.ПолучитьСтрокуПоНомеру(1);
		
		ВыгрузитьПоПравилу(ТаблицаВычетовНаДетей, , , , "НДФЛСтандартныеВычетыНаДетей");
		
		ТаблицаВычетовНаДетей.УдалитьСтроку(1);
		
	КонецЦикла;
	
	// НДФЛ Применение вычетов
	Если ДатаПервогоВычета &lt;&gt; Дата(1,1,1) Тогда
		ПрименениеВычетов = СоздатьОбъект("СписокЗначений");
		ПрименениеВычетов.Установить("Физлицо",		Источник);
		ПрименениеВычетов.Установить("Организация",	"Наша организация");
		ПрименениеВычетов.Установить("Период",		ДатаПервогоВычета);
		ВыгрузитьПоПравилу(ПрименениеВычетов, , , , "НДФЛПрименениеВычетов");
	КонецЕсли;
	
	// Учет основного заработка работников
	ПерРеквизит = СоздатьОбъект("Периодический");
	ПерРеквизит.ИспользоватьОбъект("ШаблонПроводки", Источник);
	ПерРеквизит.ВыбратьЗначения();
	Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
		Если ПустоеЗначение(ПерРеквизит.ДатаЗнач) = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		УчетОсновногоЗаработка.НоваяСтрока();
		УчетОсновногоЗаработка.Период						= ПерРеквизит.ДатаЗнач;
		УчетОсновногоЗаработка.Сотрудник					= ЗаполнитьТЗСотрудникаОрганизации(Источник, ПерРеквизит.ДатаЗнач, АвторскийДоговор, ДоговорПодряда);
		УчетОсновногоЗаработка.Организация					= "Наша организация";
		Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
			УчетОсновногоЗаработка.СпособОтраженияВБухучете	= ПолучитьСпособОтраженияПоШаблону(ПерРеквизит.Значение);
			УчетОсновногоЗаработка.ПодпадаетПодЕНВД			= ПерРеквизит.Значение.ПодпадаетПодЕНВД;
		Иначе
			УчетОсновногоЗаработка.СтатьяФинансирования		= ПолучитьОтражениеИзШаблона(ПерРеквизит.Значение);
			УчетОсновногоЗаработка.СтатьяРасходов			= ПерРеквизит.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецЦикла;

Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл
	ИмущественныйВычет = СоздатьОбъект("СписокЗначений");
	ИмущественныйВычет.Установить("Дата",				ТекущаяДата());
	ИмущественныйВычет.Установить("НалоговыйПериод",	ТекущийГод);
	ИмущественныйВычет.Установить("Номер",				"ИВ-" + Прав(ТекущийГод, 2));
	ИмущественныйВычет.Установить("Организация",		"Наша организация");
	ИмущественныйВычет.Установить("Комментарий",		"Имущественные вычеты за " + ТекущийГод + "г.");

	РаботникиОрганизации = СоздатьОбъект("ТаблицаЗначений");
	РаботникиОрганизации.НоваяКолонка("ФизЛицо");
	РаботникиОрганизации.НоваяКолонка("ДатаСобытия");
	РаботникиОрганизации.НоваяКолонка("Расходы");
	РаботникиОрганизации.НоваяКолонка("ПроцентыПоКредитам");
	РаботникиОрганизации.НоваяКолонка("КодНалоговогоОргана");
	РаботникиОрганизации.НоваяКолонка("НомерВходящегоДокумента");
	РаботникиОрганизации.НоваяКолонка("ДатаУведомления");
	РаботникиОрганизации.НоваяКолонка("ПроцентыПриПерекредитовании");
	РаботникиОрганизации.НоваяКолонка("РасходыНаСвоеОбучение");
	РаботникиОрганизации.НоваяКолонка("СтраховыеВзносыНаМедУслуги");
	РаботникиОрганизации.НоваяКолонка("РасходыНаДорогостоящееЛечение");
	РаботникиОрганизации.НоваяКолонка("РасходыНаОбучениеДетей");
	РаботникиОрганизации.НоваяКолонка("РасходыНаЛечение");
	
	ТаблицаИмущественныхВычетов.ВыбратьСтроки();
	Пока ТаблицаИмущественныхВычетов.ПолучитьСтроку() = 1 Цикл
		Если ДатаГод(ТаблицаИмущественныхВычетов.ДатаСобытия) &lt;&gt; ТекущийГод Тогда
			Продолжить;
		КонецЕсли;                                            
		
		РаботникиОрганизации.НоваяСтрока();
		РаботникиОрганизации.ФизЛицо						= ТаблицаИмущественныхВычетов.ФизЛицо;
		РаботникиОрганизации.ДатаСобытия					= ТаблицаИмущественныхВычетов.ДатаСобытия;
		РаботникиОрганизации.Расходы						= ТаблицаИмущественныхВычетов.Расходы;
		РаботникиОрганизации.ПроцентыПоКредитам				= ТаблицаИмущественныхВычетов.ПроцентыПоКредитам;
		РаботникиОрганизации.КодНалоговогоОргана			= ТаблицаИмущественныхВычетов.КодНалоговогоОргана;
		РаботникиОрганизации.НомерВходящегоДокумента		= ТаблицаИмущественныхВычетов.НомерВходящегоДокумента;
		РаботникиОрганизации.ДатаУведомления				= ТаблицаИмущественныхВычетов.ДатаУведомления;
		РаботникиОрганизации.ПроцентыПриПерекредитовании	= ТаблицаИмущественныхВычетов.ПроцентыПриПерекредитовании;
		РаботникиОрганизации.РасходыНаСвоеОбучение			= ТаблицаИмущественныхВычетов.РасходыНаСвоеОбучение;
		РаботникиОрганизации.СтраховыеВзносыНаМедУслуги		= ТаблицаИмущественныхВычетов.СтраховыеВзносыНаМедУслуги;
		РаботникиОрганизации.РасходыНаДорогостоящееЛечение	= ТаблицаИмущественныхВычетов.РасходыНаДорогостоящееЛечение;
		РаботникиОрганизации.РасходыНаОбучениеДетей			= ТаблицаИмущественныхВычетов.РасходыНаОбучениеДетей;
		РаботникиОрганизации.РасходыНаЛечение				= ТаблицаИмущественныхВычетов.РасходыНаЛечение;

	КонецЦикла;
	
	ИмущественныйВычет.Установить("РаботникиОрганизации",	РаботникиОрганизации);
	
	Если РаботникиОрганизации.КоличествоСтрок() &gt; 0 Тогда
		ВыгрузитьПоПравилу(ИмущественныйВычет, , , , "НДФЛПодтверждениеПраваНаИмущественныйВычет");
	КонецЕсли;
КонецЦикла;

Если УчетОсновногоЗаработка.КоличествоСтрок() &gt; 0 Тогда
	УчетОсновногоЗаработкаРаботников = СоздатьОбъект("СписокЗначений");
	УчетОсновногоЗаработкаРаботников.Установить("Дата",					ТекущаяДата());
	УчетОсновногоЗаработкаРаботников.Установить("ПериодРегистрации",	НачГода(Параметры.ДатаНачалаУчета));
	УчетОсновногоЗаработкаРаботников.Установить("Номер",				"УОЗ");
	УчетОсновногоЗаработкаРаботников.Установить("Организация",			"Наша организация");
	УчетОсновногоЗаработкаРаботников.Установить("Комментарий",			"Учет основного заработка работников организации");
	УчетОсновногоЗаработкаРаботников.Установить("УчетОсновногоЗаработкаРаботниковОрганизацииВРегламентированномУчете",	УчетОсновногоЗаработка);
	
	ВыгрузитьПоПравилу(УчетОсновногоЗаработкаРаботников, , , , "УчетОсновногоЗаработкаРаботников");
КонецЕсли;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>ОтражениеЗарплатыВРеглУчете</Код>
			<Наименование>Отражение в регл. учете (за последний год)</Наименование>
			<Порядок>1200</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>Состояние(Правило.Наименование);

СписокОрганизаций = СоздатьОбъект("СписокЗначений");
СписокОрганизаций.ДобавитьЗначение("Наша организация");

СпрПодразделения = СоздатьОбъект("Справочник.Подразделения");
СпрПодразделения.ВыбратьЭлементы();
Пока СпрПодразделения.ПолучитьЭлемент() = 1 Цикл
	Если СпрПодразделения.Обособленное = 1 Тогда
		СписокОрганизаций.ДобавитьЗначение(СпрПодразделения.ТекущийЭлемент());
	КонецЕсли;
КонецЦикла;

Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл

	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	ТаблицаРаспределениеЗаработка = СоздатьОбъект("ТаблицаЗначений"); 
	ТаблицаРаспределениеЗаработка.НоваяКолонка("ПериодРегистрации");
	ТаблицаРаспределениеЗаработка.НоваяКолонка("Сотрудник");
	ТаблицаРаспределениеЗаработка.НоваяКолонка("Организация");
	ТаблицаРаспределениеЗаработка.НоваяКолонка("ДоляСпособаОтражения");
	
	Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
		ТаблицаРаспределениеЗаработка.НоваяКолонка("СпособОтраженияВБухучете");
		ТаблицаРаспределениеЗаработка.НоваяКолонка("ПодпадаетПодЕНВД");
	Иначе
		ТаблицаРаспределениеЗаработка.НоваяКолонка("СтатьяФинансирования");
		ТаблицаРаспределениеЗаработка.НоваяКолонка("СтатьяРасходов");
		ТаблицаРаспределениеЗаработка.НоваяКолонка("КОСГУ");
	КонецЕсли;

	ДокБухучетНачислений = СоздатьОбъект("Документ.БухучетНачислений");
	ДокБухучетНачислений.ВыбратьДокументы(НачМесяца(ДатаНачалаТекущегоГода), КонМесяца(ДатаОкончанияТекущегоГода));
	Пока ДокБухучетНачислений.ПолучитьДокумент() = 1 Цикл
		Если глТипВидЗначения(ДокБухучетНачислений.Сотрудник) &lt;&gt; "Справочник.Сотрудники" Тогда
			Продолжить;
		КонецЕсли;
		
		ПериодРегистрации			= НачМесяца(ДокБухучетНачислений.ДатаДок);
		
		Сотрудник					= ЗаполнитьТЗСотрудникаОрганизации(ДокБухучетНачислений.Сотрудник, ПериодРегистрации);
		
		ПодразделениеОрганизации	= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ДокБухучетНачислений.Сотрудник, ПериодРегистрации);
		ОбособленноеПодразделение	= ?(ПустоеЗначение(ПодразделениеОрганизации) = 0, ПодразделениеОрганизации, "Наша организация");
		
		ДокБухучетНачислений.ВыбратьСтроки();
		Пока ДокБухучетНачислений.ПолучитьСтроку() = 1 Цикл
			ТаблицаРаспределениеЗаработка.НоваяСтрока();
			ТаблицаРаспределениеЗаработка.ПериодРегистрации				= ПериодРегистрации;
			ТаблицаРаспределениеЗаработка.Сотрудник						= Сотрудник;
			ТаблицаРаспределениеЗаработка.Организация					= ОбособленноеПодразделение;
			ТаблицаРаспределениеЗаработка.ДоляСпособаОтражения			= ДокБухучетНачислений.РазмерРаспределения;
			Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
				ТаблицаРаспределениеЗаработка.СпособОтраженияВБухучете	= ПолучитьСпособОтраженияПоШаблону(ДокБухучетНачислений.ШаблонПроводки);
				ТаблицаРаспределениеЗаработка.ПодпадаетПодЕНВД			= ДокБухучетНачислений.ШаблонПроводки.ПодпадаетПодЕНВД;
			Иначе
				ТаблицаРаспределениеЗаработка.СтатьяФинансирования		= ПолучитьОтражениеИзШаблона(ДокБухучетНачислений.ШаблонПроводки);
				ТаблицаРаспределениеЗаработка.СтатьяРасходов			= ?(ПустоеЗначение(ДокБухучетНачислений.ШаблонПроводки) = 0, ДокБухучетНачислений.ШаблонПроводки, ШаблонПроводкиПоУмолчанию());
				ТаблицаРаспределениеЗаработка.КОСГУ						= ТаблицаРаспределениеЗаработка.СтатьяФинансирования.КОСГУ;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Если ТаблицаРаспределениеЗаработка.КоличествоСтрок() &gt; 0 Тогда
		РаспределениеОсновногоЗаработкаРаботников = СоздатьОбъект("СписокЗначений");
		РаспределениеОсновногоЗаработкаРаботников.Установить("Дата",				ТекущаяДата());
		РаспределениеОсновногоЗаработкаРаботников.Установить("ПериодРегистрации",	НачГода(ДатаНачалаТекущегоГода));
		РаспределениеОсновногоЗаработкаРаботников.Установить("Номер",				"РОЗ");
		РаспределениеОсновногоЗаработкаРаботников.Установить("Организация",			"Наша организация");
		РаспределениеОсновногоЗаработкаРаботников.Установить("Комментарий",			"Распределение основного заработка работников организации");
		РаспределениеОсновногоЗаработкаРаботников.Установить("РаспределениеОсновногоЗаработкаРаботниковОрганизаций",	ТаблицаРаспределениеЗаработка);
		
		ВыгрузитьПоПравилу(РаспределениеОсновногоЗаработкаРаботников, , , , "РаспределениеОсновногоЗаработкаРаботников");
	КонецЕсли;


	Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
		ПериодРегистрации	= Дата(ТекущийГод, ТекущийМесяц, 1);
		
		Состояние("Отражение в учете за " + Формат(ПериодРегистрации, "ДММММГГГГ"));

		Для Номер = 1 По СписокОрганизаций.РазмерСписка() Цикл
			Организация = СписокОрганизаций.ПолучитьЗначение(Номер);
		
			ОтражениеВУчете = СоздатьОбъект("СписокЗначений");
			ОтражениеВУчете.Установить("Дата",				КонМесяца(ПериодРегистрации));
			ОтражениеВУчете.Установить("ПериодРегистрации",	ПериодРегистрации);
			ОтражениеВУчете.Установить("Организация",		Организация);
			ОтражениеВУчете.Установить("Комментарий",		"Отражение в учете за " + Формат(ПериодРегистрации, "ДММММГГГГ"));
			
			ВыгрузитьПоПравилу(ОтражениеВУчете, , , , "ОтражениеЗарплатыВРеглУчете");
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецЦикла;</ПередОбработкойПравила>
		</Правило>
		<Правило Отключить="false">
			<Код>КонтрольныеДанные</Код>
			<Наименование>Контрольные данные</Наименование>
			<Порядок>1250</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>// Выгрузим контрольные данные
ВыгрузитьКонтрольныеДанные();

// Выгрузка организации необходима для корректной работы механизма проверки
ВыгрузитьПоПравилу("Наша организация", , , , "Организации");</ПередОбработкойПравила>
		</Правило>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ВернутьИмяПКОДляЗначенияСубконто" ИспользуетсяПриЗагрузке="false">
			<Текст>ЗначениеСубконто	= ИсходящиеДанные;
Отказ				= ВходящиеДанные;

ИмяПКО = "";

Если глТипВидЗначения(ЗначениеСубконто) = "Справочник.Сотрудники" Тогда
	ИмяПКО = "ФизическиеЛица";
	
ИначеЕсли глТипВидЗначения(ЗначениеСубконто) = "Справочник.Подразделения" Тогда
	ИмяПКО = "ПодразделенияОрганизаций";
	
ИначеЕсли глТипВидЗначения(ЗначениеСубконто) = "Справочник.Контрагенты" Тогда
	ИмяПКО = "Контрагенты";
	
ИначеЕсли глТипВидЗначения(ЗначениеСубконто) = "Справочник.ЗначенияСубконто" Тогда
	Идентификатор = СокрЛП(ЗначениеСубконто.Владелец.Идентификатор);
	
	Если ПустоеЗначение(Идентификатор) = 1 Тогда
		Отказ = 1;
		
	ИначеЕсли (Идентификатор = "Перечисление.ВидыПлатежейВГосБюджет") Или (Идентификатор = "Перечисление.ВидыРасчетовПоНалогамИОтчислениям") Тогда
		ИмяПКО = "ВидыПлатежейВГосБюджет";
		
	ИначеЕсли Идентификатор = "Перечисление.ВидыРасчетовПоСредствамФСС" Тогда
		ИмяПКО = "ВидыРасчетовПоСредствамФСС";
		
	ИначеЕсли (Идентификатор = "Справочник.НазначениеЦелевыхСредств") И (Параметры.РаспределятьПоИсточникамФинансирования = 0) Тогда
		ИмяПКО = "НазначениеЦелевыхСредств";
		
	ИначеЕсли (Идентификатор = "Справочник.НалогиИОтчисления") И (Параметры.РаспределятьПоИсточникамФинансирования = 1) Тогда
		ИмяПКО = "ВидыНалоговИПлатежей";
		
	ИначеЕсли Идентификатор = "Справочник.Номенклатура" Тогда
		ИмяПКО = "Номенклатура";
		
	ИначеЕсли (Идентификатор = "Справочник.НематериальныеАктивы") И (Параметры.РаспределятьПоИсточникамФинансирования = 0) Тогда
		ИмяПКО = "НематериальныеАктивы";
		
	ИначеЕсли (Идентификатор = "Справочник.НоменклатурныеГруппы") И (Параметры.РаспределятьПоИсточникамФинансирования = 0) Тогда
		ИмяПКО = "НоменклатурныеГруппы";
		
	ИначеЕсли (Идентификатор = "Справочник.ОбъектыСтроительства") И (Параметры.РаспределятьПоИсточникамФинансирования = 0) Тогда
		ИмяПКО = "ОбъектыСтроительства";
		
	ИначеЕсли (Идентификатор = "Справочник.ПрочиеДоходыИРасходы") И (Параметры.РаспределятьПоИсточникамФинансирования = 0) Тогда
		ИмяПКО = "ПрочиеДоходыИРасходы";
		
	ИначеЕсли (Идентификатор = "Справочник.РасходыБудущихПериодов") И (Параметры.РаспределятьПоИсточникамФинансирования = 0) Тогда
		ИмяПКО = "РасходыБудущихПериодов";
		
	ИначеЕсли (Идентификатор = "Справочник.СтатьиЗатрат") И (Параметры.РаспределятьПоИсточникамФинансирования = 0) Тогда
		ИмяПКО = "СтатьиЗатрат";
		
	Иначе
		Отказ = 1;
		
	КонецЕсли;
	
Иначе
	Отказ = 1;
	
КонецЕсли;

ВходящиеДанные = Отказ;

Возврат ИмяПКО;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВернутьИмяПКОдляПВР" ИспользуетсяПриЗагрузке="false">
			<Текст>ВидРасч		= ИсходящиеДанные;
Отказ		= ВходящиеДанные;

Если ТипЗначенияСтр(ВидРасч) = "Строка" Тогда
	ИмяПКО = "ОсновныеНачисленияОрганизаций";
	
Иначе
	ПланВидовРасчета = ОпределитьВидПВР(ВидРасч.ВР);

	Если ПланВидовРасчета = "ОсновныеНачисления" Тогда
		ИмяПКО = "ОсновныеНачисленияОрганизаций";
		
	ИначеЕсли ПланВидовРасчета = "ДополнительныеНачисления" Тогда
		ИмяПКО = "ДополнительныеНачисленияОрганизаций";
		
	ИначеЕсли ПланВидовРасчета = "Удержания" Тогда
		ИмяПКО = "УдержанияОрганизаций";
		
	Иначе
		Отказ = 1;
		
	КонецЕсли;
	
КонецЕсли;

Возврат ИмяПКО;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВернутьИмяПКОДляПервичногоДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>ПервичныйДокумент	= ИсходящиеДанные;
Отказ				= ВходящиеДанные;
Сотрудник			= Источник;

Если ПустоеЗначение(ПервичныйДокумент) = 1 Тогда
	Отказ = 1;

ИначеЕсли ПервичныйДокумент.Вид() = "ПриказОПриемеНаРаботу" Тогда
	ИмяПКО = "ПриемНаРаботуВОрганизацию";
	
ИначеЕсли ПервичныйДокумент.Вид() = "КадровоеПеремещение" Тогда
	ИмяПКО = "КадровоеПеремещениеОрганизаций";
	
ИначеЕсли ПервичныйДокумент.Вид() = "ПриказОбУвольнении" Тогда
	ИмяПКО = "УвольнениеИзОрганизаций";
	
ИначеЕсли ПервичныйДокумент.Вид() = "ПриказПоОтпуску" Тогда
	ИмяПКО = "ОтпускаОрганизаций";
	
ИначеЕсли ПервичныйДокумент.Вид() = "НачислениеОтпуска" Тогда
	ИмяПКО = "ОтпускаОрганизацийПоНачислению";
	
ИначеЕсли ПервичныйДокумент.Вид() = "ПерерасчетОкладовПоПредприятию" Тогда
	ИмяПКО = "КадровоеПеремещениеОрганизацийИндексация";
	
ИначеЕсли ПервичныйДокумент.Вид() = "ОтпускПоУходуЗаРебенком" Тогда
	ИмяПКО = "ОтпускПоУходуЗаРебенком";
	
	Если (Параметры.РаспределятьПоИсточникамФинансирования = 1) И (ПустоеЗначение(Сотрудник) = 0) Тогда
		ВидДоговора = Сотрудник.Получить("ВидДоговора");
		Если (ВидДоговора = "ВоеннаяСлужбаПоПризыву") Или (ВидДоговора = "ВоеннаяСлужбаПоКонтракту") Тогда
			ИмяПКО = "ОтпускПоУходуЗаРебенкомВоеннослужащим";
		КонецЕсли;
	КонецЕсли;
	
ИначеЕсли ПервичныйДокумент.Вид() = "ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком" Тогда
	ИмяПКО = "ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком";
	
ИначеЕсли (ПервичныйДокумент.Вид() = "ПриказОЗачисленииВСпискиЧасти") И (Параметры.РаспределятьПоИсточникамФинансирования = 1) Тогда
	ИмяПКО = "ПриказОЗачисленииВСпискиЧасти";
	
ИначеЕсли (ПервичныйДокумент.Вид() = "КадровоеПеремещениеВоеннослужащего") И (Параметры.РаспределятьПоИсточникамФинансирования = 1) Тогда
	ИмяПКО = "КадровоеПеремещениеВоеннослужащих";
	
ИначеЕсли (ПервичныйДокумент.Вид() = "ПриказОбИсключенииИзСписковЧасти") И (Параметры.РаспределятьПоИсточникамФинансирования = 1) Тогда
	ИмяПКО = "ПриказОбИсключенииИзСписковЧасти";
	
Иначе
	Отказ = 1;
	
КонецЕсли;

ВходящиеДанные = Отказ;

Возврат ИмяПКО;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВернутьТЗВидаРасчета" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР						= ИсходящиеДанные;
Регистратор				= ВходящиеДанные;
ДатаЗначения			= Источник;
Сотрудник				= Приемник;
НомерСтрокиДокумента	= ТипПриемника;
ВидДоговора				= Значение;

		
ВидПВР = ОпределитьВидПВР(ВР);

Если ВидПВР = "ДополнительныеНачисления" Тогда
	ТЗВидаРасчета = СоздатьТЗПВРДополнительныеНачисления();
ИначеЕсли ВидПВР = "Удержания" Тогда
	ТЗВидаРасчета = СоздатьТЗПВРУдержания();
Иначе
	ТЗВидаРасчета = СоздатьТЗПВРОсновныеНачисления();
КонецЕсли;

ТЗВидаРасчета.НоваяСтрока();

Если	(ВР = ВидРасчета.ОплатаПоОкладу)
	ИЛИ (ВР = ВидРасчета.ОплатаПоТабелю)
	ИЛИ (ВР = ВидРасчета.ОплатаПоТарифу) Тогда
	
	Если (ВидДоговора = "ВоеннаяСлужбаПоПризыву") ИЛИ (ВидДоговора = "ВоеннаяСлужбаПоКонтракту") Тогда
		ТЗВидаРасчета.ВР	= ВР;
		ЗаполнитьТЗПВРПоУмолчанию(ТЗВидаРасчета, ВР);
		ТЗВидаРасчета		= ЗаполнитьВРОВД(ТЗВидаРасчета);
		
		// Запомним, какое основное начисление выгружали
		ВыгруженныеНачисленияПоФормеТруда = Параметры.ВыгруженныеНачисленияПоФормеТруда;
		Если ВыгруженныеНачисленияПоФормеТруда.НайтиЗначение(ТЗВидаРасчета.Наименование, 0, "Наименование") = 0 Тогда
			ВыгруженныеНачисленияПоФормеТруда.НоваяСтрока();
			ВыгруженныеНачисленияПоФормеТруда.Наименование	= ТЗВидаРасчета.Наименование;
			ВыгруженныеНачисленияПоФормеТруда.ВР			= ТЗВидаРасчета.ВР;
		КонецЕсли;
		
	Иначе
		ФормаТруда		= ЗначениеПериодическогоРеквизитаНаНачало("ФормаТруда", Сотрудник, ДатаЗначения);
		Оклад			= ЗначениеПериодическогоРеквизитаНаНачало("Оклад", Сотрудник, ДатаЗначения);
		ТЗВидаРасчета	= ОпределитьВРОрганизацииПоФормеТруда(ФормаТруда, ТЗВидаРасчета, ВР, глТипВидЗначения(Оклад));
		
	КонецЕсли;
	
ИначеЕсли ВР = ВидРасчета.Простой Тогда
	ПростойПоВинеРаботодателя = 0;
	Если ПустоеЗначение(Регистратор) = 0 Тогда
		Если Регистратор.Вид() = "ПриказНаОплатуПоСреднему" Тогда
			Если Регистратор.ПричинаОтсутствия = Перечисление.ОснованияОплатыПоСреднему.ВынужденныйПростой Тогда
				ПростойПоВинеРаботодателя = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	Если ПростойПоВинеРаботодателя = 1 Тогда
		ТЗВидаРасчета	= ПреобразоватьВРвПВР(ТЗВидаРасчета, ВР, Регистратор, ПростойПоВинеРаботодателя); 
		
	Иначе
		ФормаТруда = ЗначениеПериодическогоРеквизитаНаНачало("ФормаТруда", Сотрудник, ДатаЗначения);
		ТЗВидаРасчета	= ОпределитьВРОрганизацииПоПростою(ФормаТруда, ТЗВидаРасчета, ВР); 
		
	КонецЕсли;
	
ИначеЕсли (ВР = ВидРасчета.ДенежноеВознаграждениеЗаПрыжки) ИЛИ (ВР = ВидРасчета.ОкладПоЗваниюНадбавкаЗаРазряд) Тогда
	ТЗВидаРасчета	= ПреобразоватьВРвПВР(ТЗВидаРасчета, ВР, Регистратор, ВидДоговора);
	
ИначеЕсли ВР = ВидРасчета.ЕдиновременныеПособияИзСоцстраха Тогда
	ТипПособия = "";
	Если ПустоеЗначение(Регистратор) = 0 Тогда
		Если глТипВидЗначения(Регистратор.Расчет) =  "Перечисление.ТипыПособий" Тогда
			ТипПособия = Регистратор.Расчет;
		КонецЕсли;
	КонецЕсли;
	
	ТЗВидаРасчета	= ПреобразоватьВРвПВР(ТЗВидаРасчета, ВР, Регистратор, ТипПособия);
	
ИначеЕсли (ВР = ВидРасчета.НадбавкаЗаВыслугуЛет) ИЛИ (ВР = ВидРасчета.ПНВЛ) Тогда
	Шкала = "";
	Если ПустоеЗначение(Регистратор) = 0 Тогда
		Если Регистратор.Вид() = "НачисленияУдержанияСотрудника" Тогда
			Шкала = Регистратор.Величина;
			
		ИначеЕсли Регистратор.Вид() = "НачисленияУдержанияСписком" Тогда
			Регистратор.ПолучитьСтрокуПоНомеру(НомерСтрокиДокумента);
			Шкала = Регистратор.Величина;
			
		ИначеЕсли Регистратор.Вид() = "ПерерасчетСтажаДляПНВЛ" Тогда
			Шкала = Регистратор.Шкала;
			
		КонецЕсли;
	КонецЕсли;
	
	ТЗВидаРасчета	= ПреобразоватьВРвПВР(ТЗВидаРасчета, ВР, Регистратор, Шкала);
	
Иначе
	ТипРасчетаОтпуска = "";
	Если ПустоеЗначение(Регистратор) = 0 Тогда
		Если Регистратор.Вид() = "НачислениеОтпуска" Тогда
			ТипРасчетаОтпуска = Регистратор.ТипРасчетаОтпуска;
		КонецЕсли;
	КонецЕсли;
	
	ТЗВидаРасчета	= ПреобразоватьВРвПВР(ТЗВидаРасчета, ВР, Регистратор, ТипРасчетаОтпуска, НомерСтрокиДокумента);
	
КонецЕсли;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьГрафикРаботыЗаПериод" ИспользуетсяПриЗагрузке="false">
			<Текст>ГрафикРаботы				= ИсходящиеДанные;
ВыгружаемыйКалендарь		= ВходящиеДанные;
ВидУчетаВремениПоЧасам		= Источник;
УчестьВремяПоДням			= Приемник;

Если ПустоеЗначение(ВыгружаемыйКалендарь) = 0 Тогда
	// Переносим данные графика за год целиком, иначе разойдется расчет среднего в ЗиК и ЗУП/ЗБУ для месяцев, после переноса
	ВыгружаемыйКалендарь.ВыбратьДаты(НачГода(ДатаНачала), КонГода(ДатаОкончания));
	Пока ВыгружаемыйКалендарь.СледующаяДата() = 1 Цикл
		ГрафикиРаботыПоВидамВремени = СоздатьОбъект("СписокЗначений");
		ГрафикиРаботыПоВидамВремени.Установить("ГрафикРаботы",					ГрафикРаботы);
		ГрафикиРаботыПоВидамВремени.Установить("Месяц",							НачМесяца(ВыгружаемыйКалендарь.Дата));
		ГрафикиРаботыПоВидамВремени.Установить("ВидУчетаВремени",				ВидУчетаВремениПоЧасам);
		ГрафикиРаботыПоВидамВремени.Установить("Дата",							ВыгружаемыйКалендарь.Дата);
		ГрафикиРаботыПоВидамВремени.Установить("ОсновноеЗначение",				ВыгружаемыйКалендарь.Значение);
		ГрафикиРаботыПоВидамВремени.Установить("ДополнительноеЗначение",		?(ВыгружаемыйКалендарь.Значение = 0, 0, 1));
		ГрафикиРаботыПоВидамВремени.Установить("ОсновноеЗначениеНорма",			ВыгружаемыйКалендарь.Значение);
		ГрафикиРаботыПоВидамВремени.Установить("ДополнительноеЗначениеНорма",	?(ВыгружаемыйКалендарь.Значение = 0, 0, 1));
		ВыгрузитьПоПравилу(ГрафикиРаботыПоВидамВремени, , , , "ГрафикиРаботыПоВидамВремени");
		
		Если УчестьВремяПоДням = 1 Тогда
			ГрафикиРаботыПоВидамВремени = СоздатьОбъект("СписокЗначений");
			ГрафикиРаботыПоВидамВремени.Установить("ГрафикРаботы",					ГрафикРаботы);
			ГрафикиРаботыПоВидамВремени.Установить("Месяц",							НачМесяца(ВыгружаемыйКалендарь.Дата));
			ГрафикиРаботыПоВидамВремени.Установить("ВидУчетаВремени",				"ПоДням");
			ГрафикиРаботыПоВидамВремени.Установить("Дата",							ВыгружаемыйКалендарь.Дата);
			ГрафикиРаботыПоВидамВремени.Установить("ОсновноеЗначение",				?(ВыгружаемыйКалендарь.Значение = 0, 0, 1));
			ГрафикиРаботыПоВидамВремени.Установить("ДополнительноеЗначение",		ВыгружаемыйКалендарь.Значение);
			ГрафикиРаботыПоВидамВремени.Установить("ОсновноеЗначениеНорма",			?(ВыгружаемыйКалендарь.Значение = 0, 0, 1));
			ГрафикиРаботыПоВидамВремени.Установить("ДополнительноеЗначениеНорма",	ВыгружаемыйКалендарь.Значение);
			ВыгрузитьПоПравилу(ГрафикиРаботыПоВидамВремени, , , , "ГрафикиРаботыПоВидамВремени");
		КонецЕсли;
	КонецЦикла;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьКонтрольныеДанные" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем МесяцыИнвалидности[12]; // Для ЕСН

ПроверятьОтражениеВУчете = 0;
Конфигурация = Константа.ПрограммаБухучета;
Если (Параметры.РаспределятьПоИсточникамФинансирования = 0)
	И ((Конфигурация = Перечисление.БухгалтерскиеПрограммы.Бухгалтерия80) ИЛИ (Конфигурация = Перечисление.БухгалтерскиеПрограммы.Бухгалтерия16)) Тогда
	ПроверятьОтражениеВУчете = 1;
КонецЕсли;

// Сначала добавим, какие проверки у нас есть.
// Каждая проверка это алгоритм, который выполняется при загрузке
УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"Проверки");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Строка");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	"СводЗаМесяц,ЕСНЗаМесяц" + ?(ПроверятьОтражениеВУчете = 1, ",ОтражениеВУчетеЗаМесяц", ""));
ДобавитьПодчиненный(rootNode, УзелПараметра);


// Свод начислений и удержаний
СписокФизическихЛиц	= РазделитьСотрудниковНаПорции(0);
СписокСотрудников	= РазделитьСотрудниковНаПорции(1);

ЖрнЗарплата = СоздатьОбъект("Запрос");
ТаблицаСводЗаМесяц = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСводЗаМесяц.НоваяКолонка("ПериодРегистрации",	"Строка");
ТаблицаСводЗаМесяц.НоваяКолонка("Начисления",			"Число");
ТаблицаСводЗаМесяц.НоваяКолонка("Прочее",				"Число");
ТаблицаСводЗаМесяц.НоваяКолонка("Удержания",			"Число");
ТаблицаСводЗаМесяц.НоваяКолонка("Выплаты",				"Число");

ТекстЗапросаПоНачислениямУдержаниям = 
"//{{ЗАПРОС(НачисленияИУдержания)
|Период С ДатаНачалаТекущегоГода ПО ДатаОкончанияТекущегоГода;
|ПериодРегистрации				= ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ВидРасч						= ЖурналРасчетов.Зарплата.ВидРасч;
|ФизЛицо						= ЖурналРасчетов.Зарплата.Объект.ОсновнойЭлемент;
|Результат						= ЖурналРасчетов.Зарплата.Результат;
|Функция СуммаНачисления		= Сумма(Результат)	Когда (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеНачисления)=1);
|Функция СуммаУдержания			= Сумма(Результат)	Когда (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания)=1);
|Функция СуммаПрочего			= Сумма(Результат)	Когда (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме)=1);
|Группировка ПериодРегистрации;
|Условие(Результат &lt;&gt; 0);
|Условие(ВидРасч &lt;&gt; ВидРасчета.МатВыгодаПоВкладам);
|Условие(ВидРасч &lt;&gt; ВидРасчета.ОплатаПоДоговоруСПредпринимателем);
|Условие(ПорцияСотрудников.Принадлежит(ФизЛицо) = 1);
|"//}}ЗАПРОС
;

ТекстЗапросаПоВыплатамВозвратам = 
"//{{ЗАПРОС(ВыплатыВозвраты)
|Период С ДатаНачалаТекущегоГода ПО ДатаОкончанияТекущегоГода;
|ПериодРегистрации				= ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ВидРасч						= ЖурналРасчетов.Зарплата.ВидРасч;
|ФизЛицо						= ЖурналРасчетов.Зарплата.Объект.ОсновнойЭлемент;
|Результат						= ЖурналРасчетов.Зарплата.Результат;
|Функция СуммаВыплаты			= Сумма(Результат)	Когда (ВидРасч = ВидРасчета.ВыплатаЗарплаты);
|Функция СуммаВозврата			= Сумма(Результат)	Когда (ВидРасч = ВидРасчета.Возврат);
|Группировка ПериодРегистрации;
|Условие(Результат &lt;&gt; 0);
|Условие(ВидРасч &lt;&gt; ВидРасчета.МатВыгодаПоВкладам);
|Условие(ВидРасч &lt;&gt; ВидРасчета.ОплатаПоДоговоруСПредпринимателем);
|Условие(ПорцияСотрудников.Принадлежит(ФизЛицо) = 1);
|"//}}ЗАПРОС
;

Для ТекущийГод = ДатаГод(ДатаНачала) По Мин(ДатаГод(ДатаОкончания), 2009) Цикл
	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	Для НомерПорции = 1 По СписокФизическихЛиц.РазмерСписка() Цикл
		ПорцияСотрудников = СписокФизическихЛиц.ПолучитьЗначение(НомерПорции);
			
		Если ЖрнЗарплата.Выполнить(ТекстЗапросаПоНачислениямУдержаниям) = 0 Тогда
			Продолжить;
		КонецЕсли;

		Пока ЖрнЗарплата.Группировка(1) = 1 Цикл // Период регистрации
			ТаблицаСводЗаМесяц.НоваяСтрока();
			ТаблицаСводЗаМесяц.ПериодРегистрации	= ПолучитьДатуV8(ЖрнЗарплата.ПериодРегистрации.ДатаНачала);
			ТаблицаСводЗаМесяц.Начисления			= ЖрнЗарплата.СуммаНачисления;
			ТаблицаСводЗаМесяц.Прочее				= ЖрнЗарплата.СуммаПрочего;
			ТаблицаСводЗаМесяц.Удержания			= ЖрнЗарплата.СуммаУдержания;
		КонецЦикла;
	КонецЦикла;			

	Для НомерПорции = 1 По СписокСотрудников.РазмерСписка() Цикл
		ПорцияСотрудников = СписокСотрудников.ПолучитьЗначение(НомерПорции);
			
		Если ЖрнЗарплата.Выполнить(ТекстЗапросаПоВыплатамВозвратам) = 0 Тогда
			Продолжить;
		КонецЕсли;

		Пока ЖрнЗарплата.Группировка(1) = 1 Цикл // Период регистрации
			ТаблицаСводЗаМесяц.НоваяСтрока();
			ТаблицаСводЗаМесяц.ПериодРегистрации	= ПолучитьДатуV8(ЖрнЗарплата.ПериодРегистрации.ДатаНачала);
			ТаблицаСводЗаМесяц.Выплаты				= ЖрнЗарплата.СуммаВыплаты - ЖрнЗарплата.СуммаВозврата;
		КонецЦикла;
	КонецЦикла;
КонецЦикла;

ТаблицаСводЗаМесяц.Свернуть("ПериодРегистрации", "Начисления, Прочее, Удержания, Выплаты");

СводЗаМесяц = "";
ТаблицаСводЗаМесяц.ВыбратьСтроки();
Пока ТаблицаСводЗаМесяц.ПолучитьСтроку() = 1 Цикл
		Если ПустаяСтрока(СводЗаМесяц) = 0 Тогда
			СводЗаМесяц = СводЗаМесяц + "|";
		КонецЕсли;
		
		СводЗаМесяц = СводЗаМесяц
					+ ТаблицаСводЗаМесяц.ПериодРегистрации + ";"
					+ ТаблицаСводЗаМесяц.Начисления + ";"
					+ ТаблицаСводЗаМесяц.Прочее + ";"
					+ ТаблицаСводЗаМесяц.Удержания + ";"
					+ ТаблицаСводЗаМесяц.Выплаты;
КонецЦикла;				

УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"СводЗаМесяц");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Строка");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	СводЗаМесяц);
ДобавитьПодчиненный(rootNode, УзелПараметра);


// получение списка сотрудников
СписокСотрудников = СоздатьОбъект("СписокЗначений");
СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
СпрСотрудники.ВыбратьЭлементы();
Пока СпрСотрудники.ПолучитьЭлемент()=1 Цикл
	Если СпрСотрудники.ЭтоГруппа()=0 Тогда
		Если СпрСотрудники.ОсновнойЭлемент=СпрСотрудники.ТекущийЭлемент() Тогда
			СписокСотрудников.ДобавитьЗначение(СпрСотрудники.ТекущийЭлемент());
		КонецЕсли;
	КонецЕсли;
КонецЦикла; 
СпрСотрудники = 0;
	
Буфер = СоздатьОбъект("СписокЗначений");

ТаблицаСводнаяКарточкаЕСН = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСводнаяКарточкаЕСН.НоваяКолонка("ПериодРегистрации", "Дата");
Для Номер = 2 По 30 Цикл
	ТаблицаСводнаяКарточкаЕСН.НоваяКолонка("Колонка"+Номер, "Число");
КонецЦикла;

Для ТекущийГод = ДатаГод(ДатаНачала) По Мин(ДатаГод(ДатаОкончания), 2009) Цикл
	ЕстьУСН = глЕстьУСН(Дата(ТекущийГод, 1, 1));
	
	Если ЕстьУСН = 1 Тогда
		Продолжить;
	КонецЕсли;
	
	ДатаКонцаГода = КонГода(Дата(ТекущийГод,12,15));

	ДоходыВычетыНалогиСотрудников = "";
	Если глСобратьДанныеДляЕСН(ДоходыВычетыНалогиСотрудников,СписокСотрудников,ДатаКонцаГода,Контекст) &lt;&gt; 1 Тогда
	    Продолжить;
	КонецЕсли;
	
	Для СчСотров = 1 По СписокСотрудников.РазмерСписка()  Цикл
			                              						
		СтрокаИтоговойТаблицы = (СчСотров-1)*12;
		ФизЛицо = СписокСотрудников.ПолучитьЗначение(СчСотров);     						
		
		НомерШкалыВзносов = глНомерШкалыСтраховыхВзносовПФР(ФизЛицо, ДатаКонцаГода);
		Если НомерШкалыВзносов &lt; 0 Тогда
			Продолжить;
		КонецЕсли;				
		
		Буфер.УдалитьВсе();
		
		глЗаполнитьИндивидуальнуюКарточкуПоЕСН2004(ФизЛицо,ТекущийГод,1,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,,,,1,2);
		
		// Значения, сохраненные в буфере переносим в ячейки таблицы вручную
		Для Сч = 1 По Буфер.РазмерСписка()  Цикл
			ИмяКолонки="";
			Зн=Число(Буфер.ПолучитьЗначение(Сч,ИмяКолонки));
			
			Если Зн = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если (Лев(ИмяКолонки,5) = "ВСЕГО") ИЛИ (Лев(ИмяКолонки,3) = "НБ_") ИЛИ (Лев(ИмяКолонки,7) = "ОБЛ_ПФР") ИЛИ (Лев(ИмяКолонки,4) = "ПФСС") ИЛИ (Лев(ИмяКолонки,4) = "ВФСС") Тогда
				ТекущийМесяц	= Число(Прав(ИмяКолонки,2));
				Имя				= Лев(ИмяКолонки, СтрДлина(ИмяКолонки)-2);
			ИначеЕсли Лев(ИмяКолонки,1) = "П" Тогда
				ТекущийМесяц	= Число(Сред(ИмяКолонки,2,2));
				Имя				= "П" + Прав(ИмяКолонки,2);
			Иначе
				Продолжить;
			КонецЕсли;
			
			ПериодРегистрации = Дата(ТекущийГод, ТекущийМесяц, 1);
			
			Если НачМесяца(ПериодРегистрации) &gt; НачМесяца(ДатаОкончания) Тогда
				Продолжить;
			КонецЕсли;
			
			НомерСтроки = 0;
			Если ТаблицаСводнаяКарточкаЕСН.НайтиЗначение(ПериодРегистрации, НомерСтроки, "ПериодРегистрации") = 1 Тогда
				ТаблицаСводнаяКарточкаЕСН.ПолучитьСтрокуПоНомеру(НомерСтроки);
			Иначе
				ТаблицаСводнаяКарточкаЕСН.НоваяСтрока();
				ТаблицаСводнаяКарточкаЕСН.ПериодРегистрации		= ПериодРегистрации;
			КонецЕсли;
			
			Если ЕстьУСН = 0 Тогда
				Если      Имя = "П02" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка2			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка2;
				ИначеЕсли Имя = "П03" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка3			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка3;
				ИначеЕсли Имя = "ВСЕГО" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка4			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка4;
				ИначеЕсли Имя = "П05" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка5			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка5;
				ИначеЕсли Имя = "П06" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка6			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка6;
				ИначеЕсли Имя = "НБ_ФБ" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка7			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка7;
				ИначеЕсли Имя = "НБ_ФСС" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка8			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка8;
				ИначеЕсли Имя = "НБ_ОМС" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка9			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка9;
				ИначеЕсли Имя = "П13" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка10			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка10;
				ИначеЕсли Имя = "П14" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка11			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка11;
				ИначеЕсли Имя = "П15" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка12			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка12;
				ИначеЕсли Имя = "П16" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка13			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка13;
				ИначеЕсли Имя = "ОБЛ_ПФР" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка14			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка14;
				ИначеЕсли Имя = "П20" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка15			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка15;
				ИначеЕсли Имя = "П21" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка16			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка16;
				ИначеЕсли Имя = "П22" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка17			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка17;
				ИначеЕсли Имя = "П23" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка18			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка18;
				ИначеЕсли Имя = "П24" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка19			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка19;
				ИначеЕсли Имя = "П25" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка20			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка20;
				ИначеЕсли Имя = "П26" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка21			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка21;
				ИначеЕсли Имя = "П27" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка22			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка22;
				ИначеЕсли Имя = "П28" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка23			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка23;
				ИначеЕсли Имя = "П29" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка24			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка24;
					ТаблицаСводнаяКарточкаЕСН.Колонка29			= ТаблицаСводнаяКарточкаЕСН.Колонка29 + Зн;
				ИначеЕсли Имя = "П30" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка25			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка25;
				ИначеЕсли Имя = "П31" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка26			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка26;
				ИначеЕсли Имя = "П32" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка27			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка27;
					ТаблицаСводнаяКарточкаЕСН.Колонка29			= ТаблицаСводнаяКарточкаЕСН.Колонка29 - Зн;
				ИначеЕсли Имя = "ПФСС" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка28			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка28;
				ИначеЕсли Имя = "П33" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка30			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка30;
				КонецЕсли;
				
			Иначе
				Если      Имя = "П02" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка2			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка2;
				ИначеЕсли Имя = "ВСЕГО" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка4			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка4;
				ИначеЕсли Имя = "П13" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка10			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка10;
					ТаблицаСводнаяКарточкаЕСН.Колонка23			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка23;
				ИначеЕсли Имя = "П32" Тогда
					ТаблицаСводнаяКарточкаЕСН.Колонка27			= Зн + ТаблицаСводнаяКарточкаЕСН.Колонка27;
					ТаблицаСводнаяКарточкаЕСН.Колонка29			= ТаблицаСводнаяКарточкаЕСН.Колонка29 - Зн;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		                                                              
	КонецЦикла;
КонецЦикла;

ЕСНЗаМесяц = "";
ТаблицаСводнаяКарточкаЕСН.ВыбратьСтроки();
Пока ТаблицаСводнаяКарточкаЕСН.ПолучитьСтроку() = 1 Цикл
	Если ПустаяСтрока(ЕСНЗаМесяц) = 0 Тогда
		ЕСНЗаМесяц = ЕСНЗаМесяц + "|";
	КонецЕсли;
	ЕСНЗаМесяц	= ЕСНЗаМесяц + ПолучитьДатуV8(ТаблицаСводнаяКарточкаЕСН.ПериодРегистрации);
	Для Номер = 2 По 30 Цикл
		ЕСНЗаМесяц	= ЕСНЗаМесяц + ";" + ТаблицаСводнаяКарточкаЕСН.ПолучитьЗначение(ТаблицаСводнаяКарточкаЕСН.НомерСтроки, "Колонка"+Номер);
	КонецЦикла;
КонецЦикла;

УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"ЕСНЗаМесяц");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Строка");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	ЕСНЗаМесяц);
ДобавитьПодчиненный(rootNode, УзелПараметра);


// Свод проводок
Если ПроверятьОтражениеВУчете = 1 Тогда
	// Документы отражения в учете переносим только за последний год
	ДатаНачалаОтражения = ?(ДатаГод(ДатаНачала) = ДатаГод(ДатаОкончания), НачМесяца(ДатаНачала), Дата(ДатаГод(ДатаОкончания), 1, 1));
	
	ОтражениеВУчетеЗаМесяц = "";
	Для ТекущийМесяц = ДатаМесяц(ДатаНачалаОтражения) По ДатаМесяц(ДатаОкончания) Цикл
		ПериодРегистрации	= Дата(ДатаГод(ДатаОкончания), ТекущийМесяц, 1);
		
		ТаблицаКорреспонденций = "";
		глПроводкиЗаПериод(ПериодРегистрации,СписокСотрудников,ТаблицаКорреспонденций,"","",Контекст,,,,,1);
		ТаблицаКорреспонденций.Свернуть("СчетКредита","Сумма");
		
		Если ПустаяСтрока(ОтражениеВУчетеЗаМесяц) = 0 Тогда
			ОтражениеВУчетеЗаМесяц = ОтражениеВУчетеЗаМесяц + "|";
		КонецЕсли;
		ОтражениеВУчетеЗаМесяц = ОтражениеВУчетеЗаМесяц + ПолучитьДатуV8(ПериодРегистрации);
		
		ТаблицаКорреспонденций.ВыбратьСтроки();
		Пока ТаблицаКорреспонденций.ПолучитьСтроку() = 1 Цикл
			ОтражениеВУчетеЗаМесяц = ОтражениеВУчетеЗаМесяц + ";" + ТаблицаКорреспонденций.СчетКредита + ";" + ТаблицаКорреспонденций.Сумма;
		КонецЦикла;
		
	КонецЦикла;
	
	УзелПараметра = СоздатьУзел("ЗначениеПараметра");
	УстановитьАтрибут(УзелПараметра,	"Имя",		"ОтражениеВУчетеЗаМесяц");
	УстановитьАтрибут(УзелПараметра,	"Тип",		"Строка");
	ЗаписатьЭлемент(УзелПараметра,		"Значение",	ОтражениеВУчетеЗаМесяц);
	ДобавитьПодчиненный(rootNode, УзелПараметра);
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьПараметрыВыполненияАлгоритмовЗагрузки" ИспользуетсяПриЗагрузке="false">
			<Текст>// Заполнение производственного календаря перед загрузкой всех остальных данных
НомерПВД = ПравилаВыгрузкиСписок.НайтиЗначение("Организация");
Если НомерПВД &gt; 0 Тогда
	Пометка = ПравилаВыгрузкиСписок.Пометка(НомерПВД);
Иначе
	Пометка = 0;
КонецЕсли;
УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"ЗаполнитьПроизводственныйКалендарь");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Булево");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	?(Пометка = 1, "true", "false"));
ДобавитьПодчиненный(rootNode, УзелПараметра);


// ЗБУ: Заполнение констант ведомственной принадлежности
НомерПВД = ПравилаВыгрузкиСписок.НайтиЗначение("Константы");
Если (НомерПВД &gt; 0) И (Параметры.РаспределятьПоИсточникамФинансирования = 1) Тогда
	Пометка = ПравилаВыгрузкиСписок.Пометка(НомерПВД);
Иначе
	Пометка = 0;
КонецЕсли;
УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"УстановитьЗначенияКонстант");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Булево");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	?(Пометка = 1, "true", "false"));
ДобавитьПодчиненный(rootNode, УзелПараметра);


// В перенесенных графиках работы необходимо заполнить данные из производственного календаря
НомерПВД = ПравилаВыгрузкиСписок.НайтиЗначение("КадровыеДанные");
Если НомерПВД &gt; 0 Тогда
	Пометка = ПравилаВыгрузкиСписок.Пометка(НомерПВД);
Иначе
	Пометка = 0;
КонецЕсли;
УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"ЗаполнитьГрафикиРаботы");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Булево");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	?(Пометка = 1, "true", "false"));
ДобавитьПодчиненный(rootNode, УзелПараметра);


// После переноса НДФЛ необходимо дописать приход по расчетам с налоговым агентом
НомерПВД = ПравилаВыгрузкиСписок.НайтиЗначение("НДФЛ");
Если НомерПВД &gt; 0 Тогда
	Пометка = ПравилаВыгрузкиСписок.Пометка(НомерПВД);
Иначе
	Пометка = 0;
КонецЕсли;
УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"ЗарегистрироватьРасчетыНалоговогоАгента");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Булево");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	?(Пометка = 1, "true", "false"));
ДобавитьПодчиненный(rootNode, УзелПараметра);


// После переноса всех видов расчета необходимо правильно расставить категории расчета
НомерПВД = ПравилаВыгрузкиСписок.НайтиЗначение("КонтрольныеДанные");
Если НомерПВД &gt; 0 Тогда
	Пометка = ПравилаВыгрузкиСписок.Пометка(НомерПВД);
Иначе
	Пометка = 0;
КонецЕсли;
УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"ЗаполнитьКатегорииРасчета");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Булево");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	?(Пометка = 1, "true", "false"));
ДобавитьПодчиненный(rootNode, УзелПараметра);


// После переноса всех начислений и выплат, необходимо распределить выплаты по источникам финансирования
НомерПВД = ПравилаВыгрузкиСписок.НайтиЗначение("КонтрольныеДанные");
Если (НомерПВД &gt; 0) И (Параметры.РаспределятьПоИсточникамФинансирования = 1) Тогда
	Пометка = ПравилаВыгрузкиСписок.Пометка(НомерПВД);
Иначе
	Пометка = 0;
КонецЕсли;
УзелПараметра = СоздатьУзел("ЗначениеПараметра");
УстановитьАтрибут(УзелПараметра,	"Имя",		"РаспределитьВзаиморасчетыПоИФ");
УстановитьАтрибут(УзелПараметра,	"Тип",		"Булево");
ЗаписатьЭлемент(УзелПараметра,		"Значение",	?(Пометка = 1, "true", "false"));
ДобавитьПодчиненный(rootNode, УзелПараметра);


АлгоритмПослеЗагрузкиПараметров =
"Если Параметры.ЗаполнитьПроизводственныйКалендарь Тогда
|	Выполнить(Алгоритмы.ЗаполнитьПроизводственныйКалендарь);
|КонецЕсли;";

ЗаписатьЭлемент(rootNode, "АлгоритмПослеЗагрузкиПараметров", АлгоритмПослеЗагрузкиПараметров);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыгрузитьСведенияОбИБ" ИспользуетсяПриЗагрузке="false">
			<Текст>Идентификатор = "ИдентификаторКонфигурации";
Значение = глИдентификаторКонфигурации();
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "НомерРелиза";
Значение = Константа.НомерРелиза;
УстановитьАтрибут(rootNode, Идентификатор, Значение);

//**********************************************************
Идентификатор = "Организация";
Значение = ?(ПустоеЗначение(Константа.НазваниеОрганизации) = 0, Константа.НазваниеОрганизации, Константа.СокращенноеНаименованиеОрганизации);
УстановитьАтрибут(rootNode, Идентификатор, Значение);

ИНН_КПП	= СокрЛП(Константа.ИНН);
ИНН = "";
КПП = "";

ОдинадцатыйСимвол = Сред(ИНН_КПП,11,1);
Если (Строка(Число(ОдинадцатыйСимвол)) = ОдинадцатыйСимвол) И (ПустаяСтрока(ОдинадцатыйСимвол) = 0) Тогда // оказалось физическое лицо
	ИНН	= Лев(ИНН_КПП,12);
	КПП	= "";
Иначе // оказалась организация	
	ИНН	= Лев(ИНН_КПП,10);
	КПП	= Прав(ИНН_КПП,9);
КонецЕсли;

//**********************************************************
Идентификатор = "ИНН";
УстановитьАтрибут(rootNode, Идентификатор, ИНН);

//**********************************************************
Идентификатор = "КПП";
УстановитьАтрибут(rootNode, Идентификатор, КПП);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ВыполнитьРаспределениеНДФЛ" ИспользуетсяПриЗагрузке="false">
			<Текст>ЗаписьИзЖурнала					= ИсходящиеДанные;
ДоходыВычетыНалогиСотрудников	= ВходящиеДанные;

Режим = "";
ПланСчетов = СоздатьОбъект("Справочник.ПланСчетов");

// вспомогательная таблица - для распределения результатов по счетам
ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);
ТаблицаРаспределения.НоваяКолонка("Наименование");
ТаблицаРаспределения.НоваяКолонка("КВД");
ТаблицаРаспределения.НоваяКолонка("ПодпадаетПодЕНВД");
ТаблицаРаспределения.НоваяКолонка("Баланс");
ТаблицаРаспределения.НоваяКолонка("КБК");
ТаблицаРаспределения.НоваяКолонка("КОСГУ");


ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
ЖрнЗарплатаДляСторно = СоздатьОбъект("ЖурналРасчетов.Зарплата");

Документ			= ЗаписьИзЖурнала.Документ;
ВидДока				= Документ.Вид();
ОписаниеДокумента	= Метаданные.Документ(ВидДока);


//налоговый период к которому относится НДФЛ
ГодНалоговогоПериода=ДатаГод(ЗаписьИзЖурнала.ДатаНачала);
//налоговый период, в котором зарегистрирован НДФЛ
ГодНалоговогоПериодаПоРегистрации=ДатаГод(ЗаписьИзЖурнала.ПериодРегистрации.ДатаОкончания); 
//проверим совпадают налоговые периоды регистрации и действия
Если ГодНалоговогоПериода&lt;&gt;ГодНалоговогоПериодаПоРегистрации  Тогда
	ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",ЗаписьИзЖурнала.Объект,ЖрнЗарплата.ПериодПоДате(ЗаписьИзЖурнала.ПериодРегистрации.ДатаОкончания),ЖрнЗарплата.ПериодПоДате(ЗаписьИзЖурнала.ПериодРегистрации.ДатаОкончания));
	ПроверятьПериодыДляНДФЛ=1;    
Иначе
	ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",ЗаписьИзЖурнала.Объект,ЖрнЗарплата.ПериодПоДате(ЗаписьИзЖурнала.ДатаОкончания),ЖрнЗарплата.ПериодПоДате(ЗаписьИзЖурнала.ДатаОкончания));	
КонецЕсли;

ВременнаяТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
ВременнаяТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ВременнаяТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);

Пока ЖрнЗарплата.ПолучитьЗапись()=1  Цикл  
	
	РезультатКРаспределению = ЖрнЗарплата.Результат;
	Если РезультатКРаспределению = 0 Тогда
		Продолжить;
	КонецЕсли;	
	
	Если (глВходитВБазу(ЖрнЗарплата.ВидРасч,ЗаписьИзЖурнала.ВидРасч)&lt;&gt;1) Тогда
		Продолжить;
	КонецЕсли;		
	
	ВРизЖурнала = ЖрнЗарплата.ВидРасч;
	// если это НДФЛ исч по ст 13% и ВР из таблицы Дивиденды сотруников или
	// дивиденды не сотрудников, тогда такой счет кредита для Шаблона из таблицы учитывать не будем
	Если (ВРизЖурнала = ВидРасчета.ДивидендыСотрудников) или (ВРизЖурнала = ВидРасчета.ДивидендыУчредителей) тогда
		Продолжить;
	КонецЕсли;
	
	Если ПроверятьПериодыДляНДФЛ=1 Тогда
		//период действия записи должен совпадать с периодом действия НДФЛ 
		Если (ЖрнЗарплата.ПериодПоДате(ЖрнЗарплата.ДатаНачала).ДатаНачала&lt;&gt;ЖрнЗарплата.ПериодПоДате(ЗаписьИзЖурнала.ДатаНачала).ДатаНачала) Тогда
			Продолжить;
		КонецЕсли;
	КонецЕсли;
	
	глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет", ВРизЖурнала, 1);
	КодДоходаВР = Строка(?(ПустоеЗначение(глСпрВидыРасчетов.ВидДохода.Код)=0,глСпрВидыРасчетов.ВидДохода.Код,"2000"));
	Если ВРизЖурнала.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=1 Тогда
		ДокОснованиеВР    = ЖрнЗарплата.Документ;
		ВидДокОснованиеВР = ДокОснованиеВР.Вид(); 
		Если (ВидДокОснованиеВР="НачисленияУдержанияСписком") или (ВидДокОснованиеВР="ДоговорГраждПравХаракт")или (ВидДокОснованиеВР="НачисленияУдержанияСотрудника")  Тогда
			КодДоходаВР=СОКРЛП(ДокОснованиеВР.ВидДохода.Код); 
			
		ИначеЕсли (ВидДокОснованиеВР="СсудаПредприятия") Тогда
			Если ДокОснованиеВР.ИсточникСредств = 2 Тогда
				КодДоходаВР="2620";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если (КодДоходаВР = "1210") или (КодДоходаВР = "2610") или (КодДоходаВР = "2740") или (КодДоходаВР = "3020") тогда
		Продолжить;
	КонецЕсли;											
	
	// проверим, что этот начисление вошло в расчет НДФЛ
	Если ТипЗначенияСтр(ДоходыВычетыНалогиСотрудников) = "ТаблицаЗначений" Тогда
		Если (Найти(КодДоходаВР,"2000")=1) или (Найти(КодДоходаВР,"2012")=1) или (ВРизЖурнала.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=1) Тогда
			ГодНалоговогоПериодаВР=ДатаГод(ЖрнЗарплата.ПериодПоДате(ЖрнЗарплата.ДатаНачала).ДатаНачала);
			Если ГодНалоговогоПериодаВР&lt;&gt;ГодНалоговогоПериода Тогда
				Продолжить;
			КонецЕсли;
			ДатаМес = ДатаМесяц(ЖрнЗарплата.ПериодПоДате(ЖрнЗарплата.ДатаОкончания).ДатаОкончания);	
		Иначе 
			//доходы по периоду регистрации
			Если ЖрнЗарплата.Сторно=1 Тогда 
				Док = ЖрнЗарплата.Документ;
				Если ЖрнЗарплатаДляСторно.ВыбратьЗаписиПоДокументу(Док)=1 Тогда
					ГодНалоговогоПериодаВР=ДатаГод(ЖрнЗарплата.ПериодПоДате(ЖрнЗарплата.ДатаНачала).ДатаНачала);
					Если ГодНалоговогоПериодаВР&lt;&gt;ГодНалоговогоПериода Тогда
						Продолжить;
					КонецЕсли;
					ДатаМес = ДатаМесяц(ЖрнЗарплата.ПериодПоДате(ЖрнЗарплатаДляСторно.ПериодРегистрации.ДатаОкончания).ДатаОкончания);	
				Иначе
					ДатаМес = ДатаМесяц(ЖрнЗарплата.ПериодПоДате(ЖрнЗарплата.ПериодРегистрации.ДатаОкончания).ДатаОкончания);		
				КонецЕсли;
			Иначе
				ДатаМес = ДатаМесяц(ЖрнЗарплата.ПериодПоДате(ЖрнЗарплата.ПериодРегистрации.ДатаОкончания).ДатаОкончания);	
			КонецЕсли;
		КонецЕсли;
		
		СтрокаИтоговойТаблицы = "";											
		ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(ЗаписьИзЖурнала.Объект.ОсновнойЭлемент)+глДополнитьСтроку(ДатаМес,2),СтрокаИтоговойТаблицы,1);
		Если СтрокаИтоговойТаблицы &gt; 0 Тогда												
			Если СтрДлина(КодДоходаВР) &lt; 5 Тогда
				КодДоходаВР = КодДоходаВР + " ";
			КонецЕсли;
			Если ДатаМес &gt; 1 Тогда
				ТаблицаДоходов = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,2);													
				Если ТипЗначенияСтр(ТаблицаДоходов) = "ТаблицаЗначений" Тогда
					СтрокаТаблицыДоходов = ""; 
					ТаблицаДоходов.НайтиЗначение(КодДоходаВР,СтрокаТаблицыДоходов,1);
					Если СтрокаТаблицыДоходов &gt; 0 Тогда 
						РазмерВычетаПрошлогоМесяца = ТаблицаДоходов.ПолучитьЗначение(СтрокаТаблицыДоходов,4);
						СуммаДоходаПрошлогоМесяца = ТаблицаДоходов.ПолучитьЗначение(СтрокаТаблицыДоходов,2);
					Иначе
						РазмерВычетаПрошлогоМесяца = 0;
						СуммаДоходаПрошлогоМесяца = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе     
				РазмерВычетаПрошлогоМесяца = 0;
				СуммаДоходаПрошлогоМесяца = 0;
			КонецЕсли;
			ТаблицаДоходов = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,2);													
			Если ТипЗначенияСтр(ТаблицаДоходов) = "ТаблицаЗначений" Тогда
				СтрокаТаблицыДоходов = ""; 
				ТаблицаДоходов.НайтиЗначение(КодДоходаВР,СтрокаТаблицыДоходов,1);
				Если СтрокаТаблицыДоходов &gt; 0 Тогда 
					РазмерВычета = ТаблицаДоходов.ПолучитьЗначение(СтрокаТаблицыДоходов,4) - РазмерВычетаПрошлогоМесяца;
					СуммаДохода = ТаблицаДоходов.ПолучитьЗначение(СтрокаТаблицыДоходов,2) - СуммаДоходаПрошлогоМесяца;
					Если СуммаДохода &lt;&gt; 0 Тогда
						РазмерВычета = РезультатКРаспределению*РазмерВычета/СуммаДохода;
						РезультатКРаспределению = РезультатКРаспределению - РазмерВычета;
					КонецЕсли;
				Иначе
					Продолжить;	
				КонецЕсли;
			Иначе
				Продолжить;	
			КонецЕсли;
		Иначе         
			// по данному сотруднику нет данных
			Продолжить
		КонецЕсли;
	Иначе
		Продолжить;
	КонецЕсли;											
	
	// начисление вошло в расчет НДФЛ, получим его отражение в учете
	глПолучитьРаспределениеРезультата(ЖрнЗарплата,ВременнаяТаблицаРаспределения,,,,,,РезультатКРаспределению);
	
	//дозаполним
	ВременнаяТаблицаРаспределения.НоваяКолонка("Наименование");
	ВременнаяТаблицаРаспределения.НоваяКолонка("КВД");
	ВременнаяТаблицаРаспределения.НоваяКолонка("ПодпадаетПодЕНВД");
	ВременнаяТаблицаРаспределения.НоваяКолонка("Баланс");
	ВременнаяТаблицаРаспределения.НоваяКолонка("КБК");
	ВременнаяТаблицаРаспределения.НоваяКолонка("КОСГУ");
	СтатьяФинансирования = ""; 
	КОСГУ = "";
	
	ВременнаяТаблицаРаспределения.ВыбратьСтроки();
	Пока ВременнаяТаблицаРаспределения.ПолучитьСтроку()=1 Цикл 
		ШаблонПроводки = ВременнаяТаблицаРаспределения.Шаблон;
		
		СтатьяФинансирования	= ПолучитьОтражениеИзШаблона(ШаблонПроводки, , ЖрнЗарплата.ВидРасч);
		
		ВременнаяТаблицаРаспределения.Наименование		= СтатьяФинансирования.Наименование;
		ВременнаяТаблицаРаспределения.КВД				= СтатьяФинансирования.КВД;
		ВременнаяТаблицаРаспределения.ПодпадаетПодЕНВД	= СтатьяФинансирования.ПодпадаетПодЕНВД;
		ВременнаяТаблицаРаспределения.Баланс			= СтатьяФинансирования.Баланс;
		ВременнаяТаблицаРаспределения.КБК				= СтатьяФинансирования.КБК;
		ВременнаяТаблицаРаспределения.КОСГУ				= СтатьяФинансирования.КОСГУ;
	КонецЦикла;  
	
	глПереписатьИзТаблицыВТаблицу(ВременнаяТаблицаРаспределения,ТаблицаРаспределения);
	
КонецЦикла; 

ВременнаяТаблицаРаспределения = 0;

ТаблицаРаспределения.Свернуть("Шаблон,Наименование,КВД,ПодпадаетПодЕНВД,Баланс,КБК,КОСГУ","Сумма");

Возврат ТаблицаРаспределения;</Текст>
		</Алгоритм>
		<Алгоритм Имя="глПолучитьВидДоходаПоАвторскомуДоговору" ИспользуетсяПриЗагрузке="false">
			<Текст>Док = ИсходящиеДанные;

Если Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеЛП" Тогда
	Возврат "АвторскиеЛитературныеПроизведения";
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеГП" Тогда
	Возврат "АвторскиеГрафическиеПроизведения";
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеСкульптуры" Тогда
	Возврат "АвторскиеСкульптуры";	
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеАП" Тогда
	Возврат "АвторскиеАудиовизуальныеПроизведения";
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеМСП" Тогда
	Возврат "АвторскиеМузыкальноСценическиеПроизведение";
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеДМП" Тогда
	Возврат "АвторскиеДругиеМузыкальныеПроизведения";
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеИП" Тогда
	Возврат "АвторскиеИсполнениеПроизведений";
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеНТ" Тогда
	Возврат "АвторскиеНаучныеТруды";
ИначеЕсли Док.ВидДоходаДляСтраховыхВзносов.Код = "АвторскиеОткрытия" Тогда
	Возврат "АвторскиеОткрытия";
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="глПолучитьВсеРасчетыДействующиеПоСотруднику" ИспользуетсяПриЗагрузке="false">
			<Текст>// В отличие от ЗиК - не добавляем НДФЛ

Сотрудник	= ИсходящиеДанные;
Начало		= Дата(ВходящиеДанные);
Окончание	= Дата(Источник);

// определение возвращаемой	 таблицы 
ТаблицаРасчетов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРасчетов.НоваяКолонка("Расчет",		"ВидРасчета",,,,15);
ТаблицаРасчетов.НоваяКолонка("Начало",		"Дата",,,,9);
ТаблицаРасчетов.НоваяКолонка("Окончание",	"Дата",,,,9);
ТаблицаРасчетов.НоваяКолонка("Документ",	); // или документ, или эл-т спр.ШтатноеРасписание
ТаблицаРасчетов.НоваяКолонка("Строка",		"Число",5,0);  // номер строки документа или номер реквизита в Штатном расписании

// получение основных начислений сотрудника
//
// оплата по окладу, оплата по тарифу
ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,Начало,Окончание,"СостояниеФизлица,Оклад,Ставка,ФормаТруда,ГрафикРаботы,КоэффициентОплаты");
КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
Для Номер = 1 по КоличествоСтрок Цикл
	ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
	СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1, Окончание); // дата окончания действия значения находящегося в первой строке
	
	// т.к. значений может быть несколько, берем последнее значение на дату
	Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), Окончание)) Тогда
		Продолжить
	КонецЕсли;
	
	ФормаТруда = ТаблицаРеквизитов.ФормаТруда;
	Если (ПустоеЗначение(ТаблицаРеквизитов.СостояниеФизлица)=0) и (ТаблицаРеквизитов.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботает) и (ТаблицаРеквизитов.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботаетВоеннослужащий) и (ПустоеЗначение(ФормаТруда)=0) Тогда
		ТаблицаРасчетов.НоваяСтрока();
		Если (ФормаТруда=Перечисление.ФормыТруда.ТабельПодневнОклад)
		 или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасОклад)
		 или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасТариф) Тогда
			 РасчетПоТабелю = 1;
			 ТаблицаРасчетов.Расчет		= ВидРасчета.ОплатаПоТабелю;
		Иначе
			 РасчетПоТабелю = 0;
			 ТаблицаРасчетов.Расчет		= ?(глФормаТрудаПоТарифуОкладу(ТаблицаРеквизитов.ФормаТруда)="Оклад",ВидРасчета.ОплатаПоОкладу,ВидРасчета.ОплатаПоТарифу);
		КонецЕсли;
		ТаблицаРасчетов.Начало		= ТаблицаРеквизитов.Дата;
		ТаблицаРасчетов.Окончание	= СледующаяДата;
		ТаблицаРасчетов.Документ	= ТаблицаРеквизитов.Документ;
		
		Если (ФормаТруда &lt;&gt; Перечисление.ФормыТруда.КосвенноСдельная)
				и (ФормаТруда &lt;&gt; Перечисление.ФормыТруда.СдельнаяПрямая) 
				и (ФормаТруда &lt;&gt; Перечисление.ФормыТруда.СдельноПремиальная) 
				и (ФормаТруда &lt;&gt; Перечисление.ФормыТруда.СдельноПрогрессивная) Тогда
		
			ГрафикРаботы = ТаблицаРеквизитов.ГрафикРаботы;
			Если ПустоеЗначение(ГрафикРаботы)=0 Тогда
				Если ПустоеЗначение(ГрафикРаботы.ВечерниеЧасы)=0 Тогда
					ТаблицаРасчетов.НоваяСтрока();
					ТаблицаРасчетов.Расчет		= ?(РасчетПоТабелю = 1,ВидРасчета.ДоплатаЗаВечерниеЧасыПоТабелю,ВидРасчета.ДоплатаЗаВечерниеЧасы);
					ТаблицаРасчетов.Начало		= ТаблицаРеквизитов.Дата;
					ТаблицаРасчетов.Окончание	= СледующаяДата;
				КонецЕсли;
				Если ПустоеЗначение(ГрафикРаботы.НочныеЧасы)=0 Тогда
					ТаблицаРасчетов.НоваяСтрока();
					ТаблицаРасчетов.Расчет		= ?(РасчетПоТабелю = 1,ВидРасчета.ДоплатаЗаНочныеЧасыПоТабелю,ВидРасчета.ДоплатаЗаНочныеЧасы);
					ТаблицаРасчетов.Начало		= ТаблицаРеквизитов.Дата;
					ТаблицаРасчетов.Окончание	= СледующаяДата;
				КонецЕсли;
			КонецЕсли
		КонецЕсли;
		
	КонецЕсли;
КонецЦикла;

// оклад по званию
Если (Константа.ЕстьВоенные=1) или (Константа.ЕстьГосслужащие=1) или (Константа.ВестиУчетКлассныхЧиновМуниципальныхСлужащих=1) Тогда
	ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,Начало,Окончание,"СостояниеФизлица,РазрядЗваниеЧин,ГрафикРаботы");
	КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
	Для Номер = 1 по КоличествоСтрок Цикл
		ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
		СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1,Окончание);
		
		// т.к. значений может быть несколько, берем последнее значение на дату
		Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), Окончание)) Тогда
			Продолжить
		КонецЕсли;
		
		Если (ТаблицаРеквизитов.СостояниеФизлица=Перечисление.СостояниеФизлица.ВоеннослужащийПоКонтракту) 
			  или (ТаблицаРеквизитов.СостояниеФизлица=Перечисление.СостояниеФизлица.ВоеннослужащийПоПризыву)
			  или (ТаблицаРеквизитов.СостояниеФизлица=Перечисление.СостояниеФизлица.Госслужащий) Тогда
			Если ПустоеЗначение(ТаблицаРеквизитов.РазрядЗваниеЧин) = 0 Тогда
				Если ПустоеЗначение(ТаблицаРеквизитов.РазрядЗваниеЧин.ОкладНадбавка.Получить(СледующаяДата)) = 0 Тогда
					ТаблицаРасчетов.НоваяСтрока();
					ТаблицаРасчетов.Расчет		= ВидРасчета.ОкладПоЗваниюНадбавкаЗаРазряд;
					ТаблицаРасчетов.Начало		= ТаблицаРеквизитов.Дата;
					ТаблицаРасчетов.Окончание	= СледующаяДата;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

// ежемясячная премия
ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,Начало,Окончание,"СостояниеФизлица,ПроцентЕжемесПремии");
КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
Для Номер = 1 по КоличествоСтрок Цикл
	ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
	СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1,Окончание);
	
	// т.к. значений может быть несколько, берем последнее значение на дату
	Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), Окончание)) Тогда
		Продолжить
	КонецЕсли;
	
	Если (ПустоеЗначение(ТаблицаРеквизитов.СостояниеФизлица)=0) и (ТаблицаРеквизитов.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботает) и (ТаблицаРеквизитов.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботаетВоеннослужащий) и (ТаблицаРеквизитов.ПроцентЕжемесПремии&gt;0) Тогда
		ТаблицаРасчетов.НоваяСтрока();
		ТаблицаРасчетов.Расчет		= ВидРасчета.ЕжемесячнаяПремия;
		ТаблицаРасчетов.Начало		= ТаблицаРеквизитов.Дата;
		ТаблицаРасчетов.Окончание	= СледующаяДата;
	КонецЕсли;
КонецЦикла;

// доплата по районному коэффициенту
ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,Начало,Окончание,"Подразделение");
КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
Для Номер = 1 по КоличествоСтрок Цикл
	ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
	Подр = ТаблицаРеквизитов.Подразделение;

	Если глПодразделениеОбособленное(Подр)=1 Тогда
		
		// если подразделение обособленное, то проверим его районный коэффициент
		Если Подр.РайонныйКоэффициент&gt;1 Тогда
			ТаблицаРасчетов.НоваяСтрока();
			ТаблицаРасчетов.Расчет		= ВидРасчета.РайонныйКоэффициент;
			ТаблицаРасчетов.Начало		= Начало;
			ТаблицаРасчетов.Окончание	= Окончание;
			Прервать
		КонецЕсли;
		
	Иначе
		
		// если не работал в обособленном подразделении
		Если Константа.РайонныйКоэффициент&gt;1 Тогда
			ТаблицаРасчетов.НоваяСтрока();
			ТаблицаРасчетов.Расчет		= ВидРасчета.РайонныйКоэффициент;
			ТаблицаРасчетов.Начало		= Начало;
			ТаблицаРасчетов.Окончание	= Окончание;
			Прервать
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;

// надбавка за стаж работы на севере
Если (Сотрудник.ПроцентыСевернойНадбавки.Выбран()=1)и(ПустоеЗначение(Сотрудник.СтажСеверный)=0) Тогда
	ТаблицаРасчетов.НоваяСтрока();
	ТаблицаРасчетов.Расчет		= ВидРасчета.СевернаяНадбавка;
	ТаблицаРасчетов.Начало		= Начало;
	ТаблицаРасчетов.Окончание	= Окончание;
КонецЕсли;

// получение начислений и удержаний сотрудника
ТаблицаНачисленийУдержаний = "";
глВидРасчетаДействует(Сотрудник,,Начало,Окончание,ТаблицаНачисленийУдержаний);
Для Номер = 1 по ТаблицаНачисленийУдержаний.КоличествоСтрок() Цикл
	ТаблицаНачисленийУдержаний.ПолучитьСтрокуПоНомеру(Номер);
	Если ТаблицаНачисленийУдержаний.Расчет.Расчет.ВходитВГруппу(ГруппаРасчетов.СамовытесняемыеДоплаты) = 0 Тогда
		ТаблицаРасчетов.НоваяСтрока();
		ТаблицаРасчетов.Расчет		= ТаблицаНачисленийУдержаний.Расчет.Расчет;
		ТаблицаРасчетов.Начало		= ?(ПустоеЗначение(Начало	)=1,ТаблицаНачисленийУдержаний.Начало	,Макс(Начало,	ТаблицаНачисленийУдержаний.Начало));
		ТаблицаРасчетов.Окончание	= ?(ПустоеЗначение(ТаблицаНачисленийУдержаний.Окончание)=1,Окончание,?(ПустоеЗначение(Окончание)=1,ТаблицаНачисленийУдержаний.Окончание,Мин(Окончание,ТаблицаНачисленийУдержаний.Окончание)));
		ТаблицаРасчетов.Документ	= ТаблицаНачисленийУдержаний.Документ;
		ТаблицаРасчетов.Строка		= ТаблицаНачисленийУдержаний.Строка;
	Иначе
		НачалоПериода = ?(ПустоеЗначение(Начало	)=1,ТаблицаНачисленийУдержаний.Начало	,Макс(Начало,	ТаблицаНачисленийУдержаний.Начало));
		ОкончаниеПериода = ?(ПустоеЗначение(ТаблицаНачисленийУдержаний.Окончание)=1,Окончание,?(ПустоеЗначение(Окончание)=1,ТаблицаНачисленийУдержаний.Окончание,Мин(Окончание,ТаблицаНачисленийУдержаний.Окончание)));
		
		ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,НачалоПериода,ОкончаниеПериода,"СостояниеФизлица,Оклад,Ставка,ФормаТруда,ГрафикРаботы");
		КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
		Для НомерДоплаты = 1 по КоличествоСтрок Цикл
			
			ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(НомерДоплаты);
			СледующаяДата = ?(НомерДоплаты&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(НомерДоплаты+1,"Дата")-1,Окончание);
			
			// т.к. значений может быть несколько, берем последнее значение на дату
			Если (НомерДоплаты&lt;КоличествоСтрок)и(ТаблицаРеквизитов.Дата&gt;=?(НомерДоплаты&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(НомерДоплаты+1,"Дата"),Окончание)) Тогда
				Продолжить
			КонецЕсли;
			
			ФормаТруда = ТаблицаРеквизитов.ФормаТруда;
			Если (ПустоеЗначение(ТаблицаРеквизитов.СостояниеФизлица)=0) 
				  и (ТаблицаРеквизитов.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботает) 
				  и (ТаблицаРеквизитов.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботаетВоеннослужащий)
				  и (ПустоеЗначение(ФормаТруда)=0) Тогда
				ТаблицаРасчетов.НоваяСтрока();
				ТаблицаРасчетов.Расчет		= ТаблицаНачисленийУдержаний.Расчет.Расчет;
				ТаблицаРасчетов.Начало		= ТаблицаРеквизитов.Дата;
				ТаблицаРасчетов.Окончание	= СледующаяДата;
				ТаблицаРасчетов.Документ	= ТаблицаНачисленийУдержаний.Документ;
				ТаблицаРасчетов.Строка		= ТаблицаНачисленийУдержаний.Строка;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
КонецЦикла;

// надбавки по штатному расписанию
СпрШтатноеРасписание = СоздатьОбъект("Справочник.ШтатноеРасписание");
ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,Начало,Окончание,"СостояниеФизлица,Подразделение,Должность");
КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
Для Номер = 1 по КоличествоСтрок Цикл
	ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
	СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1,Окончание);
	
	// т.к. значений может быть несколько, берем последнее значение на дату
	Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), Окончание)) Тогда
		Продолжить
	КонецЕсли;

	Если (ПустоеЗначение(ТаблицаРеквизитов.СостояниеФизлица)=1) или (ТаблицаРеквизитов.СостояниеФизлица = Перечисление.СостояниеФизлица.ВременноНеРаботает) или (ТаблицаРеквизитов.СостояниеФизлица = Перечисление.СостояниеФизлица.ВременноНеРаботаетВоеннослужащий) Тогда
		Продолжить
	КонецЕсли;
	
	Подразделение	= ТаблицаРеквизитов.Подразделение;
	Должность		= ТаблицаРеквизитов.Должность;
	Если (ПустоеЗначение(Подразделение)=0)и(ПустоеЗначение(Должность)=0) Тогда
		НачалоШР = ТаблицаРеквизитов.Дата;
		ОкончаниеШР = СледующаяДата;
		СпрШтатноеРасписание.ВыбратьЭлементыПоРеквизиту("Подразделение",Подразделение);
		Пока СпрШтатноеРасписание.ПолучитьЭлемент()=1 Цикл
			Если СпрШтатноеРасписание.Должность=Должность Тогда
				Для НомерНадбавки = 1 по 3 Цикл
					ТаблицаРеквизитовШтатногоРасписания = глПолучитьТаблицуИсторииРеквизитов(СпрШтатноеРасписание.ТекущийЭлемент(),
															НачалоШР,ОкончаниеШР,"Надбавка"+НомерНадбавки);
					КоличествоСтрокШтатногоРасписания = ТаблицаРеквизитовШтатногоРасписания.КоличествоСтрок();
					Для НомерШтатногоРасписания = 1 по КоличествоСтрокШтатногоРасписания Цикл
						ТаблицаРеквизитовШтатногоРасписания.ПолучитьСтрокуПоНомеру(НомерШтатногоРасписания);
						СледующаяДатаШтатногоРасписания = ?(НомерШтатногоРасписания&lt;КоличествоСтрокШтатногоРасписания,ТаблицаРеквизитовШтатногоРасписания.ПолучитьЗначение(НомерШтатногоРасписания+1,"Дата")-1,ОкончаниеШР);
						
						// т.к. значений может быть несколько, берем последнее значение на дату
						Если (НомерШтатногоРасписания&lt;КоличествоСтрокШтатногоРасписания)и(ТаблицаРеквизитовШтатногоРасписания.Дата&gt;=?(НомерШтатногоРасписания&lt;КоличествоСтрокШтатногоРасписания,ТаблицаРеквизитовШтатногоРасписания.ПолучитьЗначение(НомерШтатногоРасписания+1,"Дата"),ОкончаниеШР)) Тогда
							Продолжить
						КонецЕсли;
						Надбавка = ТаблицаРеквизитовШтатногоРасписания.ПолучитьЗначение(НомерШтатногоРасписания,"Надбавка"+НомерНадбавки);
						Если ПустоеЗначение(Надбавка)=0 Тогда
							
							Если Надбавка.Расчет.ВходитВГруппу(ГруппаРасчетов.СамовытесняемыеДоплаты) = 0 Тогда
								ТаблицаРасчетов.НоваяСтрока();
								ТаблицаРасчетов.Расчет		= Надбавка.Расчет;
								ТаблицаРасчетов.Начало		= ТаблицаРеквизитовШтатногоРасписания.Дата;
								ТаблицаРасчетов.Окончание	= СледующаяДатаШтатногоРасписания;
								ТаблицаРасчетов.Документ	= СпрШтатноеРасписание.ТекущийЭлемент();
								ТаблицаРасчетов.Строка		= НомерНадбавки;
							Иначе
								НачалоПериода = ТаблицаРеквизитовШтатногоРасписания.Дата;
								ОкончаниеПериода = СледующаяДатаШтатногоРасписания;
								
								ТаблицаРеквизитов1 = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,НачалоПериода,ОкончаниеПериода,"Оклад,Ставка,ФормаТруда,ГрафикРаботы");
								КоличествоСтрок1 = ТаблицаРеквизитов1.КоличествоСтрок();
								Для НомерСтроки = 1 по КоличествоСтрок1 Цикл
									
									ТаблицаРеквизитов1.ПолучитьСтрокуПоНомеру(НомерСтроки);
									СледующаяДата1 = ?(НомерСтроки&lt;КоличествоСтрок1,ТаблицаРеквизитов1.ПолучитьЗначение(НомерСтроки+1,"Дата")-1,ОкончаниеПериода);
									
									// т.к. значений может быть несколько, берем последнее значение на дату
									Если (НомерСтроки&lt;КоличествоСтрок1)и(ТаблицаРеквизитов1.Дата&gt;=?(НомерСтроки&lt;КоличествоСтрок1,ТаблицаРеквизитов1.ПолучитьЗначение(НомерСтроки+1,"Дата"),ОкончаниеПериода)) Тогда
										Продолжить
									КонецЕсли;
									
									ФормаТруда = ТаблицаРеквизитов1.ФормаТруда;
									Если (ПустоеЗначение(ФормаТруда)=0) Тогда
										ТаблицаРасчетов.НоваяСтрока();
										ТаблицаРасчетов.Расчет		= Надбавка.Расчет;
										ТаблицаРасчетов.Начало		= ТаблицаРеквизитов1.Дата;
										ТаблицаРасчетов.Окончание	= СледующаяДата1;
										ТаблицаРасчетов.Документ	= СпрШтатноеРасписание.ТекущийЭлемент();
										ТаблицаРасчетов.Строка		= НомерНадбавки;
									КонецЕсли;
								КонецЦикла;
								
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				Прервать
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецЦикла;

Возврат ТаблицаРасчетов;</Текст>
		</Алгоритм>
		<Алгоритм Имя="глПолучитьКоэффициентПовышенияСреднегоЗаработка" ИспользуетсяПриЗагрузке="false">
			<Текст>// В ЗиК эта процедура - не экспортная

Сотрудник	= ИсходящиеДанные;
НачалоРП	= ВходящиеДанные;
ОкончаниеРП	= Источник;

ТаблицаПовышения = СоздатьОбъект("ТаблицаЗначений");	
ТаблицаПовышения.НоваяКолонка("ДатаПовышенияОклада","Дата");
ТаблицаПовышения.НоваяКолонка("ДатаПовышенияОкладаНадбавки","Дата");
ТаблицаПовышения.НоваяКолонка("КоэффициентПовышенияОклада","Число");
ТаблицаПовышения.НоваяКолонка("КоэффициентПовышенияОкладаНадбавки","Число");

ДокументПовышенияОкладов = ПолучитьПустоеЗначение("Документ.ПерерасчетОкладовПоПредприятию");
ДатаПовышенияОклада = Дата(0);
ДатаПовышенияОкладаНадбавки = Дата(0);
КоэффициентПовышенияОклада = 1;
КоэффициентПовышенияОкладаНадбавки = 1;
ЗначенияОклада = СоздатьОбъект("Периодический");
ЗначенияОклада.ИспользоватьОбъект("Оклад", Сотрудник);
ЗначенияОклада.ВыбратьЗначения(НачалоРП, ОкончаниеРП);
Пока ЗначенияОклада.ПолучитьЗначение() = 1 Цикл
	ДокументПовышенияОкладов = ЗначенияОклада.ТекущийДокумент();
	Если глТипВидЗначения(ДокументПовышенияОкладов) = "Документ.ПерерасчетОкладовПоПредприятию" тогда
		ДатаПовышенияОклада = ЗначенияОклада.ДатаЗнач;
		
		РеквизитОклад = Сотрудник.Оклад.Получить(ДатаПовышенияОклада - 1);
		Если ТипЗначения(РеквизитОклад) = 11 Тогда
			Если РеквизитОклад.Вид()="ЕТС" Тогда 
				ПредыдущийОклад=РеквизитОклад.Оклад.Получить(ДатаПовышенияОклада - 1);	
			ИначеЕсли РеквизитОклад.Вид()="ТарифныеРазряды" Тогда                                 
				ПредыдущийОклад=РеквизитОклад.Тариф.Получить(ДатаПовышенияОклада - 1);
			Иначе                 
				//непонятный вид реквизита, на всякий случай
				ПредыдущийОклад=0;
			КонецЕсли
		Иначе
			ПредыдущийОклад=РеквизитОклад;
		КонецЕсли;	
		Если  ПустоеЗначение(ПредыдущийОклад) = 1 тогда
			Продолжить;
		КонецЕсли; 
		
		РеквизитОклад = Сотрудник.Оклад.Получить(ДатаПовышенияОклада); 
		Если ТипЗначения(РеквизитОклад) = 11 Тогда
			Если РеквизитОклад.Вид()="ЕТС" Тогда 
				ТекущийОклад=РеквизитОклад.Оклад.Получить(ДатаПовышенияОклада);	
			ИначеЕсли РеквизитОклад.Вид()="ТарифныеРазряды" Тогда                                 
				ТекущийОклад=РеквизитОклад.Тариф.Получить(ДатаПовышенияОклада);
			Иначе                 
				//непонятный вид реквизита, на всякий случай
				ТекущийОклад=0;
			КонецЕсли
		Иначе
			ТекущийОклад=РеквизитОклад;
		КонецЕсли;	
		
		КоэффициентПовышенияОклада = ТекущийОклад / ПредыдущийОклад;
		Если КоэффициентПовышенияОклада&gt;1 Тогда 
			//учитываем только повышение оклада
			ТаблицаПовышения.НоваяСтрока();
			ТаблицаПовышения.ДатаПовышенияОклада = ДатаПовышенияОклада;
			ТаблицаПовышения.КоэффициентПовышенияОклада = КоэффициентПовышенияОклада;
		КонецЕсли;
		
	КонецЕсли;
КонецЦикла;   

ЗначенияНадбавка = СоздатьОбъект("Периодический");

РеквизитЗвание	=	Сотрудник.РазрядЗваниеЧин.Получить(ОкончаниеРП);

ЗначенияНадбавка.ИспользоватьОбъект("ОкладНадбавка", РеквизитЗвание);
ЗначенияНадбавка.ВыбратьЗначения(НачалоРП, ОкончаниеРП);
Пока ЗначенияНадбавка.ПолучитьЗначение() = 1 Цикл                 
	
	ДатаПовышенияОкладаНадбавки		=	ЗначенияНадбавка.ДатаЗнач;
	РеквизитЗваниеНадбавка			=	ЗначенияНадбавка.Значение;          			
	ДокументПовышенияЗвания			=	ЗначенияНадбавка.ТекущийДокумент();
	Если ДокументПовышенияЗвания.Выбран() = 1 Тогда
		ВидПриказа						=	ДокументПовышенияЗвания.ВидПриказа;			
		Если (ВидПриказа = Перечисление.ВидПриказаПовышенияПоПредприятию.ИзменениеОкладаНадбавки) Тогда
			
			ПредыдущийОклад = РеквизитЗвание.ОкладНадбавка.Получить(ДатаПовышенияОкладаНадбавки - 1);
			Если  ПустоеЗначение(ПредыдущийОклад)=1 Тогда
				Продолжить;
			КонецЕсли;
			
			КоэффициентПовышенияОкладаНадбавки = РеквизитЗвание.ОкладНадбавка.Получить(ДатаПовышенияОкладаНадбавки) / ПредыдущийОклад;
			Если КоэффициентПовышенияОкладаНадбавки&gt;1 Тогда
				//учитываем только повышение надбавки
				ТаблицаПовышения.НоваяСтрока();
				ТаблицаПовышения.ДатаПовышенияОкладаНадбавки = ДатаПовышенияОкладаНадбавки;
				ТаблицаПовышения.КоэффициентПовышенияОкладаНадбавки = КоэффициентПовышенияОкладаНадбавки;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецЦикла;	
		
// прочие повышения: ИзменениеТарифныхСтавок(ЕТС) и ИзменениеОкладаНадбавки
// Может у сотрудника оклад по разряду ЕТС, проверим изменения разрядов в справочнике "ЕТС".
ОкладСотра = ЗначенияОклада.ЗначениеНаДату(ОкончаниеРП);
Если ТипЗначения(ОкладСотра) = 11 Тогда   
	Если ОкладСотра.Вид() = "ЕТС" Тогда  // в этом случае документ "Перерасчет окладов" поменял ставки в спр "ЕТС".
		ДатаПовышенияОклада = Дата(0); 
		ТарифныйРазряд = ОкладСотра;
		ДокПовышенияЕТС = СоздатьОбъект("Документ.ПерерасчетОкладовПоПредприятию");
		ДокПовышенияЕТС.ОбратныйПорядок(1);
		Если ДокПовышенияЕТС.ВыбратьДокументы(НачалоРП, ОкончаниеРП) = 1 Тогда
			Пока ДокПовышенияЕТС.ПолучитьДокумент() = 1 Цикл
				ТекДок = ДокПовышенияЕТС.ТекущийДокумент();
				Если ТекДок.ВидПриказа = Перечисление.ВидПриказаПовышенияПоПредприятию.ИзменениеТарифныхСтавок Тогда
					ТекДок.ВыбратьСтроки();   
					Если ТекДок.Проведен()&lt;&gt;1 Тогда
						Продолжить;
					КонецЕсли;
					Пока ТекДок.ПолучитьСтроку() = 1 Цикл
						Если ТекДок.Элемент = ТарифныйРазряд Тогда
							ДатаПовышенияОклада = ТекДок.ДатаДок;
							Прервать
						КонецЕсли;	
					КонецЦикла;
					Если ПустоеЗначение(ДатаПовышенияОклада) = 0 Тогда 
						ПредыдущийТарифныйРазряд = глОкладПоРазрядуЕТС(ТарифныйРазряд, ДатаПовышенияОклада - 1);
						Если ПустоеЗначение(ПредыдущийТарифныйРазряд)=0 Тогда 
							КоэффициентПовышенияОклада = глОкладПоРазрядуЕТС(ТарифныйРазряд, ДатаПовышенияОклада) / ПредыдущийТарифныйРазряд;
							Если КоэффициентПовышенияОклада&gt;1 Тогда 
								//учитываем только повышение оклада
								ТаблицаПовышения.НоваяСтрока();
								ТаблицаПовышения.ДатаПовышенияОклада = ДатаПовышенияОклада;
								ТаблицаПовышения.КоэффициентПовышенияОклада = КоэффициентПовышенияОклада;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли; 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;

ТаблицаПовышения.Сортировать("ДатаПовышенияОклада,ДатаПовышенияОкладаНадбавки");

Возврат ТаблицаПовышения;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДействуетАвторскийДоговор" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник				= ИсходящиеДанные;
ДатаНачалаДоговора		= ВходящиеДанные;
ДатаОкончанияДоговора	= Источник;

Возврат ?(
	(глВидРасчетаДействует(Сотрудник, ВидРасчета.Авторские, ДатаНачалаДоговора, ДатаОкончанияДоговора) = 1)
	ИЛИ (глВидРасчетаДействует(Сотрудник, ВидРасчета.ЛицензионныеВыплаты, ДатаНачалаДоговора, ДатаОкончанияДоговора) = 1)
	ИЛИ (глВидРасчетаДействует(Сотрудник, ВидРасчета.ВыплатыЗаОтчуждениеИсключительныхПрав, ДатаНачалаДоговора, ДатаОкончанияДоговора) = 1)
, 1, 0);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьЗаписьРегистраРасчетов" ИспользуетсяПриЗагрузке="false">
			<Текст>ЗаписьЖР						= ИсходящиеДанные;
ВидРасч							= ВходящиеДанные;
Результат						= Источник;
Сторно							= Приемник;
ДокументИзЖурнала				= ТипПриемника;
ПериодДействияДатаНачала		= Значение;
ПериодДействияДатаОкончания		= Выражение;
ОсновныеНачисления				= Пусто;
ДополнительныеНачисления		= ВыборкаДанных;
Удержания						= Объект;
Взаиморасчеты					= КоллекцияОбъектов;
БУОсновныеНачисления			= ОбъектКоллекции;
БУДополнительныеНачисления		= ИмяПКО;
БУУдержания						= ИмяПКОВидСубконто;
ЕстьОшибкиВЖР					= НомерПКО;
НадоРаспределятьПоИФ			= НомерПКС;
Прокурор						= Правило;
Военнослужащий					= КлючВыгружаемыхДанных;
ДоходыВычетыНалогиСотрудников	= НеЗапоминатьВыгруженные;
СоответствиеВРкодамДоходовСВ	= НеЗамещатьОбъектПриЗагрузке;
СоответствиеВРкодамДоходовЕСН	= ВсеОбъектыВыгружены;
НомерДок						= ТолькоПолучитьУзелСсылки;
ПериодРегистрации				= РежимЗаписи;
ТекущийГод						= РежимПроведения;
ДатаНачалаТекущегоМесяца		= СтандартнаяОбработка;
ДатаОкончанияТекущегоМесяца		= НеЗамещать;
ОсновнойГрафикРаботы			= НеОчищать;

Если (ПустоеЗначение(ЗаписьЖР.Объект) = 1)
	ИЛИ (ПустоеЗначение(ЗаписьЖР.РодительскийДокумент) = 1)
	ИЛИ (ПустоеЗначение(ДокументИзЖурнала) = 1)
	ИЛИ (ПустоеЗначение(ВидРасч) = 1) Тогда
	
	Если ЕстьОшибкиВЖР = 0 Тогда
		ЕстьОшибкиВЖР = 1;
		
		ТекстОшибки		= "В журнале расчетов присутствуют испорченные записи.";
		ТекстДействия	= "Запустите тестирование и исправление.";
		Сообщить(ТекстОшибки + " " + ТекстДействия, "!");
		ЗафиксироватьОшибку(ТекстОшибки + "|" + ТекстДействия);
	КонецЕсли;
	
	НаименованиеВР = ВидРасч;
	Если ПустоеЗначение(ВидРасч) = 0 Тогда
		ЭлементСпрВР = ПолучитьВРИзСправочника(ВидРасч);
		Если ПустоеЗначение(ЭлементСпрВР) = 0 Тогда
			НаименованиеВР = ЭлементСпрВР.Наименование;
		КонецЕсли;
	КонецЕсли;
	
	ТекстОшибки = "   - сотрудник '" + ЗаписьЖР.Объект
		+ "' за " + ПериодСтр(ДатаНачалаТекущегоМесяца, ДатаОкончанияТекущегоМесяца)
		+ " по виду расчета '" + НаименованиеВР + "'.";
	
	Сообщить(ТекстОшибки, " ");
	ЗафиксироватьОшибку(ТекстОшибки);
	
	Возврат 1;
КонецЕсли;

ВидПВР = ОпределитьВидПВР(ВидРасч);

Если ВидПВР = "ДополнительныеНачисления" Тогда
	РегистрРасчета = ДополнительныеНачисления;
ИначеЕсли ВидПВР = "Удержания" Тогда
	РегистрРасчета = Удержания;
Иначе
	РегистрРасчета = ОсновныеНачисления;
КонецЕсли;

// Подразделение
Подразделение = ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", ЗаписьЖР.Объект, ПериодДействияДатаОкончания);

// Распределение по статьям финансирования/КОСГУ
Если НадоРаспределятьПоИФ = 1 Тогда
	ТаблицаРаспределения = ПолучитьОтражениеВУчетеЗаписи(ЗаписьЖР, Результат, ДоходыВычетыНалогиСотрудников);
КонецЕсли;

// Взаиморасчеты //
Если (
		(
			  (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеВыплачиваемыеСуммы) = 1)
			И (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВыплачиваемоеНачальноеСальдо) = 0)
		)
		ИЛИ (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания) = 1)
	)
	И	(Результат &lt;&gt; 0)
	И	(
			(ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ) = 0)
			ИЛИ	(
					  (ВидРасч.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ) = 1)
					И (Результат &gt; 0)
				)
		) Тогда
		
	Если ДокументИзЖурнала.Вид() = "ВыплатаЗаработнойПлаты" Тогда
		ПериодВзаиморасчетов	= НачМесяца(ДокументИзЖурнала.ДатаПериода);
	Иначе
		ПериодВзаиморасчетов	= ПериодРегистрации;
	КонецЕсли;
		
	Если НадоРаспределятьПоИФ = 1 Тогда
		ТаблицаРаспределения.ВыбратьСтроки();
		Пока ТаблицаРаспределения.ПолучитьСтроку() = 1 Цикл
			Взаиморасчеты.НоваяСтрока();
			Взаиморасчеты.Период				= КонМесяца(ПериодРегистрации);
			Взаиморасчеты.ПериодВзаиморасчетов	= ?(Параметры.УчетЗадолженностиПоМесяцам = 1, ПериодВзаиморасчетов, "");
			Взаиморасчеты.Организация			= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
			Взаиморасчеты.ФизЛицо				= ЗаписьЖР.Объект.ОсновнойЭлемент;
			Взаиморасчеты.ВидДвижения			= "Приход";
			Взаиморасчеты.СуммаВзаиморасчетов	= ТаблицаРаспределения.Сумма * ?(ВидПВР = "Удержания", -1, 1);
			
			СтатьяФинансирования = ПолучитьОтражениеИзШаблона(ТаблицаРаспределения.Шаблон, , ВидРасч);
			Взаиморасчеты.СФ_Наименование		= СтатьяФинансирования.Наименование;
			Взаиморасчеты.СФ_КВД				= СтатьяФинансирования.КВД;
			Взаиморасчеты.СФ_ПодпадаетПодЕНВД	= СтатьяФинансирования.ПодпадаетПодЕНВД;
			Взаиморасчеты.СФ_Баланс				= СтатьяФинансирования.Баланс;
			Взаиморасчеты.СФ_КБК				= СтатьяФинансирования.КБК;
			Взаиморасчеты.КОСГУ					= СтатьяФинансирования.КОСГУ;
		КонецЦикла;
		
	Иначе
		Взаиморасчеты.НоваяСтрока();
		Взаиморасчеты.Период				= КонМесяца(ПериодРегистрации);
		Взаиморасчеты.ПериодВзаиморасчетов	= ?(Параметры.УчетЗадолженностиПоМесяцам = 1, ПериодВзаиморасчетов, "");
		Взаиморасчеты.Организация			= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
		Взаиморасчеты.ФизЛицо				= ЗаписьЖР.Объект.ОсновнойЭлемент;
		Взаиморасчеты.ВидДвижения			= "Приход";
		Взаиморасчеты.СуммаВзаиморасчетов	= Результат * ?(ВидПВР = "Удержания", -1, 1);
		
	КонецЕсли;
	
КонецЕсли;


// Начисления/Удержания //
Если (МожноПереноситьВидРасчета(ВидРасч) = 0) Тогда
	Возврат 1;
КонецЕсли;

// Сотрудник
АвторскийДоговор	= ЯвляетсяАвторскимДоговором(ВидРасч);
ДоговорПодряда		= ?(ВидРасч = ВидРасчета.ОплатаПоДоговору, 1, 0);
ТекущийСотрудник	=  ЗаполнитьТЗСотрудникаОрганизации(ЗаписьЖР.Объект, ПериодДействияДатаОкончания, АвторскийДоговор, ДоговорПодряда);

ДатаНачалаТД = ТекущийСотрудник.Получить("ДатаНачала");
Если ПустоеЗначение(ДатаНачалаТД) = 0 Тогда
	Если (ПериодДействияДатаОкончания &gt; ДатаНачалаТД) И (ПериодДействияДатаНачала &lt; ДатаНачалаТД) Тогда
		ПериодДействияДатаНачала = ДатаНачалаТД;
	КонецЕсли;
КонецЕсли;

// Вид расчета
ТЗВидаРасчета		= ВернутьТЗВидаРасчета(ВидРасч, ДокументИзЖурнала, ПериодДействияДатаОкончания, ЗаписьЖР.Объект, ЗаписьЖР.НомерСтрокиДокумента, ТекущийСотрудник.Получить("ВидДоговора"));

// Код дохода ЕСН
КодДоходаЕСН = "";
Если НадоРаспределятьПоИФ = 1 Тогда
	
	Если Прокурор = 1 Тогда
		КодДоходаЕСН = СокрЛП(КодДоходаПоЕСН(ВидРасч,0,?(ТекущийГод&gt;2009,СоответствиеВРкодамДоходовСВ,СоответствиеВРкодамДоходовЕСН)));
		Если ПустаяСтрока(КодДоходаЕСН) = 1 Тогда 
			КодДоходаЕСН="ДенежноеСодержаниеПрокуроров";
		КонецЕсли;
		
	Иначе           
		КодДоходаЕСН = КодДоходаПоЕСН(ВидРасч, Военнослужащий,?(ТекущийГод&gt;2009,СоответствиеВРкодамДоходовСВ,СоответствиеВРкодамДоходовЕСН));
		
	КонецЕсли;
	
	Если ПустаяСтрока(КодДоходаЕСН) = 1 Тогда
		КодДоходаЕСН = "ОблагаетсяЦеликом";
	КонецЕсли;
	
КонецЕсли;
		

РегистрРасчета.НоваяСтрока();

РегистрРасчета.ПериодРегистрации			= ПериодРегистрации;
РегистрРасчета.Организация					= "Наша организация";
РегистрРасчета.ОбособленноеПодразделение	= ?(ПустоеЗначение(Подразделение) = 0, Подразделение, "Наша организация");
Если ВидПВР &lt;&gt; "Удержания" Тогда
	РегистрРасчета.ПодразделениеОрганизации	= Подразделение;
КонецЕсли;
РегистрРасчета.Сотрудник					= ТекущийСотрудник;
РегистрРасчета.ФизЛицо						= ЗаписьЖР.Объект.ОсновнойЭлемент;
РегистрРасчета.ВидРасчета					= ТЗВидаРасчета;
РегистрРасчета.Результат					= Результат;
РегистрРасчета.Сторно						= Сторно;
Если (РегистрРасчета.Сторно = 1) И (ВидПВР &lt;&gt; "Удержания") Тогда
	ПериодРегистрацииСторно = ОпределитьПериодРегистрацииДокумента(ЗаписьЖР.Документ);
	РегистрРасчета.СторнируемыйДокумент	= СоздатьОбъект("СписокЗначений");
	РегистрРасчета.СторнируемыйДокумент.Установить("ПериодРегистрации",			ПериодРегистрацииСторно);
	РегистрРасчета.СторнируемыйДокумент.Установить("Номер",						"НЗР-" + Прав(ДатаГод(ПериодРегистрацииСторно), 2) + Прав("0" + ДатаМесяц(ПериодРегистрацииСторно), 2));
	РегистрРасчета.СторнируемыйДокумент.Установить("Организация",				"Наша организация");
	Если ПериодРегистрации = ПериодРегистрацииСторно Тогда
		РегистрРасчета.СторнируемыйДокумент.Установить("СоздаватьЕслиНеНайден",	1);
	Иначе
		РегистрРасчета.СторнируемыйДокумент.Установить("СоздаватьЕслиНеНайден",	0);
	КонецЕсли;
КонецЕсли;

ЗаполнитьПоказателиРасчета(РегистрРасчета, ТЗВидаРасчета, ДокументИзЖурнала, ЗаписьЖР.НомерСтрокиДокумента, ТЗВидаРасчета.ВР, ЗаписьЖР.Объект, ПериодРегистрации);

РегистрРасчета.ДатаНачалаСобытия			= ПериодДействияДатаНачала;
РегистрРасчета.Авторасчет					= 1;

// График работы
ГрафикРаботы	= ЗначениеПериодическогоРеквизитаНаНачало("ГрафикРаботы", ЗаписьЖР.Объект, ПериодДействияДатаОкончания);
Если ПустоеЗначение(ГрафикРаботы) = 1 Тогда
	ГрафикРаботы = ОсновнойГрафикРаботы;
КонецЕсли;
Если (ВидПВР = "ОсновныеНачисления") ИЛИ (ТЗВидаРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.РассчитываемыеПоСреднемуЗаработку) = 1) Тогда
	РегистрРасчета.ГрафикРаботы				= ГрафикРаботы;
КонецЕсли;

// Вид учета времени
Если (ВидПВР = "ОсновныеНачисления") ИЛИ (ТЗВидаРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.РассчитываемыеПоСреднемуЗаработку) = 1) Тогда
	РегистрРасчета.ВидУчетаВремени				= ПолучитьВидУчетаВремени(ТЗВидаРасчета, ГрафикРаботы);
Иначе
	РегистрРасчета.ВидУчетаВремени				= ПолучитьВидУчетаВремени(ТЗВидаРасчета);
КонецЕсли;
	
Если ВидПВР = "ОсновныеНачисления" Тогда
	РегистрРасчета.ПериодДействияНачало			= ПериодДействияДатаНачала;
	РегистрРасчета.ПериодДействияКонец			= ПолучитьДатуV8(ПериодДействияДатаОкончания, "23:59:59");
	
	Если ТЗВидаРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.УчитыватьДни) = 1 Тогда
		РегистрРасчета.НормаДней				= ЗаписьЖР.Дни;
		РегистрРасчета.НормаЧасов				= ЗаписьЖР.Часы;
	КонецЕсли;
	
	Если ((ТЗВидаРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.УчитыватьДни) = 1) ИЛИ (ТЗВидаРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.УчитыватьДниПриРасчетеСреднегоЗаработка) = 1))
		И (ТЗВидаРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.ВсеОтклонения) = 0) Тогда
		РегистрРасчета.ОтработаноДней		= ЗаписьЖР.Дни;
		РегистрРасчета.ОтработаноЧасов		= ЗаписьЖР.Часы;
	КонецЕсли;
	
	РегистрРасчета.ОплаченоДнейЧасов	= ?(РегистрРасчета.ВидУчетаВремени = "ПоДням", РегистрРасчета.ОтработаноДней, РегистрРасчета.ОтработаноЧасов);
	
	Если (ТЗВидаРасчета.ВР = ВидРасчета.ЕжемесячнаяПремия) И (ТЗВидаРасчета.ПериодДействияБазовый &lt;&gt; 1) Тогда
		РегистрРасчета.БазовыйПериодНачало	= ДобавитьМесяц(ПериодДействияДатаНачала, -1);
		РегистрРасчета.БазовыйПериодКонец	= ПолучитьДатуV8(?(ПериодДействияДатаОкончания = КонМесяца(ПериодДействияДатаОкончания), КонМесяца(ДобавитьМесяц(ПериодДействияДатаОкончания, -1)), ДобавитьМесяц(ПериодДействияДатаОкончания, -1)), "23:59:59");
	КонецЕсли;
	
	ТипВидДока = глТипВидЗначения(ДокументИзЖурнала);
	Если ТипВидДока = "Документ.БольничныйЛист" Тогда
		Если ТЗВидаРасчета.ВР.ВходитВГруппу(ГруппаРасчетов.БольничныеЛистыС2011) = 0 Тогда
			НачалоСобытия = глПолучитьДатуНачалаСобытияБЛ(ДокументИзЖурнала);
			
			РегистрРасчета.ПериодРасчетаСреднегоЗаработкаНачало		= Макс(ДобавитьМесяц(НачМесяца(НачалоСобытия), - 12), ТекущийСотрудник.Получить("ДатаНачала"));
			РегистрРасчета.ПериодРасчетаСреднегоЗаработкаОкончание	= НачМесяца(НачалоСобытия)-1;
		КонецЕсли;
		
	ИначеЕсли ТипВидДока = "Документ.НачислениеОтпуска" Тогда
		Если (ДокументИзЖурнала.ВидОтпуска = ВидРасчета.КомпенсацияОтпуска) или (ДокументИзЖурнала.ВидОтпуска = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск) тогда
			Если ДокументИзЖурнала.ДокОснование.Вид() &lt;&gt; "ПриказОбУвольнении" Тогда
				НачалоСобытия = Дата(0);
			Иначе
				
				ДатаУв = ДокументИзЖурнала.ДокОснование.ДатаУвольнения;
				Если КонМесяца(ДатаУв) = ДатаУв Тогда
					НачалоСобытия = ДатаУв+1;
				Иначе
					НачалоСобытия = ДатаУв;
				КонецЕсли;

			КонецЕсли; 
		ИначеЕсли ДокументИзЖурнала.ВидОтпуска = ВидРасчета.КомпенсацияОтпускаСверх28дней тогда
			НачалоСобытия = ДокументИзЖурнала.ДатаДок;
		Иначе
			НачалоСобытия = ДокументИзЖурнала.Начало;
		КонецЕсли;
		
			РегистрРасчета.ПериодРасчетаСреднегоЗаработкаНачало		= Макс(ДобавитьМесяц(НачМесяца(НачалоСобытия), - 12), ТекущийСотрудник.Получить("ДатаНачала"));
		РегистрРасчета.ПериодРасчетаСреднегоЗаработкаОкончание	= НачМесяца(НачалоСобытия)-1;
		
	ИначеЕсли ТипВидДока = "Документ.ПриказНаОплатуПоСреднему" Тогда
		Если (ДокументИзЖурнала.ПричинаОтсутствия = Перечисление.ОснованияОплатыПоСреднему.ЗаработокНаВремяТрудоустройства) Или (ДокументИзЖурнала.ПричинаОтсутствия = Перечисление.ОснованияОплатыПоСреднему.ВыходноеПособие) Тогда
			Если ДокументИзЖурнала.ДокОснование.Вид() &lt;&gt; "ПриказОбУвольнении" Тогда
			    НачалоСобытия = Дата(0);
			Иначе
				ДатаУв = ДокументИзЖурнала.ДокОснование.ДатаУвольнения;
				Если КонМесяца(ДатаУв) = ДатаУв Тогда
					НачалоСобытия = ДатаУв+1;
				Иначе
					НачалоСобытия =	ДатаУв;
				КонецЕсли;
			КонецЕсли; 
		Иначе
			НачалоСобытия = ДокументИзЖурнала.Начало;
		КонецЕсли;
		
			РегистрРасчета.ПериодРасчетаСреднегоЗаработкаНачало		= Макс(ДобавитьМесяц(НачМесяца(НачалоСобытия), - 12), ТекущийСотрудник.Получить("ДатаНачала"));
		РегистрРасчета.ПериодРасчетаСреднегоЗаработкаОкончание	= НачМесяца(НачалоСобытия)-1;
		
	КонецЕсли;
	
ИначеЕсли ВидПВР = "ДополнительныеНачисления" Тогда
	Если (ДокументИзЖурнала.Вид() = "НачисленияУдержанияСотрудника") ИЛИ (ДокументИзЖурнала.Вид() = "НачисленияУдержанияСписком") Тогда
		Если ДокументИзЖурнала.Вид() = "НачисленияУдержанияСписком" Тогда
			ДокументИзЖурнала.ПолучитьСтрокуПоНомеру(ЗаписьЖР.НомерСтрокиДокумента);
		КонецЕсли;
		
		РегистрРасчета.БазовыйПериодНачало		= ДокументИзЖурнала.Начало;
		РегистрРасчета.БазовыйПериодКонец		= ДокументИзЖурнала.Окончание;
		
	Иначе
		РегистрРасчета.БазовыйПериодНачало		= ПериодДействияДатаНачала;
		РегистрРасчета.БазовыйПериодКонец		= ПолучитьДатуV8(ПериодДействияДатаОкончания, "23:59:59");
		
	КонецЕсли;
	
	Если (ТЗВидаРасчета.ВР = ВидРасчета.ПремияРазовая)
	 ИЛИ (ТЗВидаРасчета.ВР = ВидРасчета.ПремияМесячная)
	 ИЛИ (ТЗВидаРасчета.ВР = ВидРасчета.ПремияКвартальная)
	 ИЛИ (ТЗВидаРасчета.ВР = ВидРасчета.ПремияКвартальнаяСуммой)
	 ИЛИ (ТЗВидаРасчета.ВР = ВидРасчета.ПремияПоИтогамГода)
	 ИЛИ (ТЗВидаРасчета.ВР = ВидРасчета.ПремияПоИтогамГодаСуммой) Тогда
		Лет = 0; Месяцев = 0;
		глРазобратьРазностьДат(НачМесяца(РегистрРасчета.БазовыйПериодКонец), НачМесяца(РегистрРасчета.БазовыйПериодНачало), Лет, Месяцев);
		
		РегистрРасчета.ЧислоМесяцев = Лет * 12 + Месяцев + 1;
	КонецЕсли;
	
	Если  (ДокументИзЖурнала.Вид() = "ДоговорГраждПравХаракт")
		И ((ЯвляетсяАвторскимДоговором(ТЗВидаРасчета.ВР) = 1) ИЛИ (ТЗВидаРасчета.ВР = ВидРасчета.ОплатаПоДоговору)) Тогда
		РегистрРасчета.ДокументОснование	= ДокументИзЖурнала;
	КонецЕсли;

ИначеЕсли ВидПВР = "Удержания" Тогда
	РегистрРасчета.БазовыйПериодНачало		= ПериодДействияДатаНачала;
	РегистрРасчета.БазовыйПериодКонец		= ПолучитьДатуV8(ПериодДействияДатаОкончания, "23:59:59");

КонецЕсли;

Если	(ВидРасч = ВидРасчета.УдержаниеПоИсполнительномуЛисту)
	ИЛИ	(ВидРасч = ВидРасчета.ПочтовыйСбор) Тогда
	РегистрРасчета.ДокументОснование		= ДокументИзЖурнала;
КонецЕсли;


// БУ //

// Для ЗБУ таблицу получили ранее, для ЗУП нужно только сейчас
Если (НадоРаспределятьПоИФ &lt;&gt; 1) И (ВидПВР &lt;&gt; "Удержания") Тогда
	ТаблицаРаспределения = ПолучитьОтражениеВУчетеЗаписи(ЗаписьЖР, Результат);
КонецЕсли;

Если (НадоРаспределятьПоИФ = 1) ИЛИ (ВидПВР &lt;&gt; "Удержания") Тогда
	ТаблицаРаспределения.ВыбратьСтроки();
	Пока ТаблицаРаспределения.ПолучитьСтроку() = 1 Цикл
		Если ТаблицаРаспределения.Шаблон.Наименование = "Не отражать в бухгалтерском учете" Тогда
			Возврат 1;
		КонецЕсли;
		
		Если ВидПВР = "ДополнительныеНачисления" Тогда
			БУРегистрРасчета = БУДополнительныеНачисления;
		ИначеЕсли ВидПВР = "Удержания" Тогда
			БУРегистрРасчета = БУУдержания;
		Иначе
			БУРегистрРасчета = БУОсновныеНачисления;
		КонецЕсли;
		
		БУРегистрРасчета.НоваяСтрока();
		
		БУРегистрРасчета.ПериодРегистрации				= РегистрРасчета.ПериодРегистрации;
		БУРегистрРасчета.Организация					= РегистрРасчета.Организация;
		БУРегистрРасчета.ОбособленноеПодразделение		= РегистрРасчета.ОбособленноеПодразделение;
		Если ВидПВР &lt;&gt; "Удержания" Тогда
			БУРегистрРасчета.ПодразделениеОрганизации	= РегистрРасчета.ПодразделениеОрганизации;
		КонецЕсли;
		БУРегистрРасчета.Сотрудник						= РегистрРасчета.Сотрудник;
		БУРегистрРасчета.ФизЛицо						= РегистрРасчета.ФизЛицо;
		БУРегистрРасчета.ВидРасчета						= РегистрРасчета.ВидРасчета;
		БУРегистрРасчета.Результат						= ТаблицаРаспределения.Сумма;
		БУРегистрРасчета.Сторно							= РегистрРасчета.Сторно;
		
		БУРегистрРасчета.ДатаНачалаСобытия				= РегистрРасчета.ДатаНачалаСобытия;
		БУРегистрРасчета.Авторасчет						= РегистрРасчета.Авторасчет;
		
		БУРегистрРасчета.ГрафикРаботы					= РегистрРасчета.ГрафикРаботы;
		БУРегистрРасчета.ВидУчетаВремени				= РегистрРасчета.ВидУчетаВремени;
		
		Если ВидПВР = "ОсновныеНачисления" Тогда
			БУРегистрРасчета.ПериодДействияНачало		= РегистрРасчета.ПериодДействияНачало;
			БУРегистрРасчета.ПериодДействияКонец		= РегистрРасчета.ПериодДействияКонец;
		КонецЕсли;
		
		БУРегистрРасчета.БазовыйПериодНачало			= РегистрРасчета.БазовыйПериодНачало;
		БУРегистрРасчета.БазовыйПериодКонец				= РегистрРасчета.БазовыйПериодКонец;
		
		Если НадоРаспределятьПоИФ = 1 Тогда
			// Статья финансирования
			БУРегистрРасчета.СтатьяФинансирования		= ПолучитьОтражениеИзШаблона(ТаблицаРаспределения.Шаблон, , ВидРасч);
			БУРегистрРасчета.КОСГУ						= БУРегистрРасчета.СтатьяФинансирования.КОСГУ;
			Если ВидПВР &lt;&gt; "Удержания" Тогда
				БУРегистрРасчета.СтатьяРасходов			= ?(ПустоеЗначение(ТаблицаРаспределения.Шаблон) = 0, ТаблицаРаспределения.Шаблон, ШаблонПроводкиПоУмолчанию());
				БУРегистрРасчета.КодДоходаЕСН			= КодДоходаЕСН;
			КонецЕсли;
			
			Если ВидПВР &lt;&gt; "Удержания" Тогда
				БУРегистрРасчета.ДокументРегистратор	= СоздатьОбъект("СписокЗначений");
				БУРегистрРасчета.ДокументРегистратор.Установить("ПериодРегистрации",		ПериодРегистрации);
				БУРегистрРасчета.ДокументРегистратор.Установить("Номер",					НомерДок);
				БУРегистрРасчета.ДокументРегистратор.Установить("Организация",				"Наша организация");
				БУРегистрРасчета.ДокументРегистратор.Установить("СоздаватьЕслиНеНайден",	1);
			КонецЕсли;
			
			Если	(ВидРасч = ВидРасчета.УдержаниеПоИсполнительномуЛисту)
				ИЛИ	(ВидРасч = ВидРасчета.ПочтовыйСбор) Тогда
				БУРегистрРасчета.ДокументОснование		= РегистрРасчета.ДокументОснование;
			КонецЕсли;
			
		Иначе
			// хозрасчетная организация
			Если	(ВидРасч &lt;&gt; ВидРасчета.УдержаниеПоИсполнительномуЛисту)
				И	(ВидРасч &lt;&gt; ВидРасчета.ПочтовыйСбор) Тогда
				БУРегистрРасчета.ДокументОснование	= СоздатьОбъект("СписокЗначений");
				БУРегистрРасчета.ДокументОснование.Установить("ПериодРегистрации",		ПериодРегистрации);
				БУРегистрРасчета.ДокументОснование.Установить("Номер",					НомерДок);
				БУРегистрРасчета.ДокументОснование.Установить("Организация",			"Наша организация");
				БУРегистрРасчета.ДокументОснование.Установить("СоздаватьЕслиНеНайден",	1);
				
				ЗаполнитьДанныеБухучетаПоШаблонуПроводки(ТаблицаРаспределения.Шаблон, БУРегистрРасчета);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;

ТаблицаРаспределения = 0;

Возврат 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДобавитьСтрокуВычетовНДФЛВТаблицу" ИспользуетсяПриЗагрузке="false">
			<Текст>ИсходящиеДанные.НоваяСтрока();
ИсходящиеДанные.Код = ВходящиеДанные;
ИсходящиеДанные.Код2015 = Источник;
ИсходящиеДанные.Код2011 = Приемник;
ИсходящиеДанные.Код2009 = ТипПриемника;
ИсходящиеДанные.Код2008 = Значение;
ИсходящиеДанные.Код2007 = Выражение;

Возврат 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ДополнительныеНачисленияОрганизацийПоляПоиска" ИспользуетсяПриЗагрузке="true">
			<Текст>НаименованиеВР = СвойстваПоиска.Получить("Наименование");

Если НомерВариантаПоиска = 1 Тогда
	Если Найти(НаименованиеВР, " ") = 0 Тогда
		СсылкаНаОбъект = одНайтиОбъектПоСвойству(ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций, "{ИмяПредопределенногоЭлемента}", НаименованиеВР);
	КонецЕсли;
	
ИначеЕсли НомерВариантаПоиска = 2 Тогда
	СсылкаНаОбъект = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций, НаименованиеВР);
	
Иначе
	СтрокаИменСвойствПоиска = "Наименование";
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЕстьУСН2010" ИспользуетсяПриЗагрузке="false">
			<Текст>ТарифСтраховыхВзносов	= ИсходящиеДанные;

Если (ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим)
	ИЛИ (ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.ЕСХН) Тогда
	Возврат 1;
	
ИначеЕсли (ТарифСтраховыхВзносов = Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
	И (Константа.ПрограммаБухучета = Перечисление.БухгалтерскиеПрограммы.УСН) Тогда
	Возврат 1;
	
КонецЕсли;

Возврат 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРАвторские" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;
ВидДоходаКод	= ВходящиеДанные;

// Если в документе указан код дохода 2201, тогда используем предопределенный вид расчета, 
// если другой, тогда создает свой вид расчета.
Если (ВидДоходаКод = "2201") ИЛИ (ПустаяСтрока(ВидДоходаКод) = 1) Тогда
	ТЗВидаРасчета.Наименование		= "Оплата авторских договоров"; 
	
Иначе
	ТЗВидаРасчета.Наименование		= "Оплата авторских договоров (" + ВидДоходаКод + ")";
	
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	ТЗВидаРасчета.СпособРасчета		= "ПоДоговоруФиксированнойСуммой";
	ТЗВидаРасчета.ВидПремии			= "НеПремия";
	
	ТЗВидаРасчета.КодДоходаНДФЛ		= ВидДоходаКод;
	ТЗВидаРасчета.КодДоходаЕСН		= "ДоговораАвторские";
КонецЕсли;

Возврат ТЗВидаРасчета</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРДВК" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование								= "ДВК (Денежное вознаграждение за классную квалификацию)";
ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРДенежноеВознаграждениеЗаПрыжки" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета			= ИсходящиеДанные;
ВидДоговораСотрудника	= ВходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;

Если ВидДоговораСотрудника = "ВоеннаяСлужбаПоКонтракту" Тогда
	ТЗВидаРасчета.ФормулаРасчета							= "?(ИсходныеДанные.Показатель1 &lt; 1, 0, ?(ИсходныеДанные.Показатель1 &lt; 2, 0.06, ?(ИсходныеДанные.Показатель1 &lt; 26, 0.05, ?(ИсходныеДанные.Показатель1 &lt; 51, 0.07, ИсходныеДанные.Показатель1 &lt; 101, 0.085, 0.1)))) * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3";
	ТЗВидаРасчета.Наименование								= "ДВ за ПП (Денежное вознаграждение за прыжки с парашютом) контрактникам";
ИначеЕсли ВидДоговораСотрудника = "ВоеннаяСлужбаПоПризыву" Тогда
	ТЗВидаРасчета.ФормулаРасчета							= "?(ИсходныеДанные.Показатель1 &lt; 1, 0, ?(ИсходныеДанные.Показатель1 &lt; 2, 0.05, ?(ИсходныеДанные.Показатель1 &lt; 26, 0.04, ?(ИсходныеДанные.Показатель1 &lt; 51, 0.05, ИсходныеДанные.Показатель1 &lt; 101, 0.06, 0.07)))) * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3";
	ТЗВидаРасчета.Наименование								= "ДВ за ПП (Денежное вознаграждение за прыжки с парашютом) призывникам";
Иначе
	ТЗВидаРасчета.ФормулаРасчета							= "?(ИсходныеДанные.Показатель1 &lt; 26, 0, ?(ИсходныеДанные.Показатель1 &lt; 51, 0.085, ?(ИсходныеДанные.Показатель1 &lt; 101, 0.1,  0.11))) * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3";
	ТЗВидаРасчета.Наименование								= "ДВ за ПП (Денежное вознаграждение за прыжки с парашютом) инструкторам";
КонецЕсли;

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Оплачиваемых прыжков");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Оклад по 10-му тарифному разряду");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Процент за усложнение");

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРДКВПП" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "ДКВПП (Денежная компенсация взамен продовольственного пойка)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Суточная стоимость продовольственного пайка");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ВремяВКалендарныхДнях");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "ДКВПП";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРДоплатаЗаВредность" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРДоплатаЗаЗамещение" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
ТЗВидаРасчета.СпособРасчета								= "ПоМесячнойТарифнойСтавкеПоДням";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРДоплатаЗаСекретность" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию				= "НадбавкаЗаСекретность";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕДВзаДИДО" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "ЕДВ за ДИДО (Единовременное денежное вознаграждение за добросовестное исполнение должностных обязанн";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * (ИсходныеДанные.Показатель2 + ИсходныеДанные.Показатель3) * 3 * ИсходныеДанные.Показатель4 / 12";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Процент ежемесячный");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВЗ");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОтработаноМесяцев");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "ЕДВзаДИДО";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕДП" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3 / ИсходныеДанные.Показатель4";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ТарифнаяСтавкаМесячная");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Количество должностных окладов");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ВремяВКалендарныхДнях");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("НормаВремениВДнях");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "ЕжемесячноеДенежноеПоощрение";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕжемесячнойПремии" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

Если Константа.РасчетМесячнойПремии = 0 Тогда
	ТЗВидаРасчета.Наименование							= "Ежемесячная премия по текущему месяцу";
	ТЗВидаРасчета.ПериодДействияБазовый					= 1;
Иначе
	ТЗВидаРасчета.Наименование							= "Ежемесячная премия по предыдущему месяцу";
	ТЗВидаРасчета.ПериодДействияБазовый					= 0;
КонецЕсли;

ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕНВИВЮО" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕНК" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "(ЕНК) Ежемесячная надбавка за командование";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Надбавка за командование");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "ЕПК";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕПК" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "ЕПК (Единовременное пособие при заключении контракта)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "(ИсходныеДанные.Показатель1 + ИсходныеДанные.Показатель2) * ИсходныеДанные.Показатель3";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВЗ");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Количество ОДС");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "ЕПК";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕПУ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "ЕПУ (Единовременное пособие, выплачиваемое при увольнении)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "(ИсходныеДанные.Показатель1 + ИсходныеДанные.Показатель2) * ИсходныеДанные.Показатель3";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВЗ");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Количество ОДС для разовых выплат");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "ЕПУ";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРЕСП" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРКосвенноСдельной" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "Косвенно-сдельная оплата труда";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Коэффициент косвенно-сдельной оплаты");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Фактический заработок основных рабочих бригады");


ТЗВидаРасчета.ВидВремени									= "ОтработанноеВПределахНормы";
ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени		= "Работа";

ТЗВидаРасчета.ВидСтажаСЗВ4									= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНадбавкаЗаВыслугуЛет" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;
Шкала			= ВходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета				= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета					= "ОтСтажаПроцентом";
ТЗВидаРасчета.ВидСтажа						= "СтажНаНадбавкуЗаВыслугуЛет";

ТЗВидаРасчета.НужнаБаза						= 1; 

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию	= "НадбавкаЗаВыслугуЛет";

ТЗВидаРасчета.КоэффициентСтажа				= Шкала;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНаКомиссионнойОсновеДоОклада" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование								= "На комиссионной основе (% выручки, не менее оклада)";
ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
ТЗВидаРасчета.СпособРасчета								= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета				= 1;
ТЗВидаРасчета.ФормулаРасчета							= "Макс(ИсходныеДанные.Показатель1, ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3)";

ТЗВидаРасчета.Показатели 								= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("ТарифнаяСтавкаМесячная");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("Комиссионная выручка");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("Процент");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;

ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНаКомиссионнойОсновеСОкладом" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование								= "На комиссионной основе (оклад + % выручки)";
ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
ТЗВидаРасчета.СпособРасчета								= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета				= 1;
ТЗВидаРасчета.ФормулаРасчета							= "ИсходныеДанные.Показатель1 + ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3";

ТЗВидаРасчета.ЗависитОтТарифнойСтавки					= 1;
ТЗВидаРасчета.Показатели 								= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("ТарифнаяСтавкаМесячная");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("Комиссионная выручка");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("Процент");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;

ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНаКоммисионнойОснове" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;
УчетВремени		= ВходящиеДанные;

Если ПустоеЗначение(УчетВремени) = 1 Тогда
	УчетВремени = 1;
КонецЕсли;

ТЗВидаРасчета.Наименование									= "На комиссионной основе (% выручки)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Комиссионная выручка");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Процент");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;

Если УчетВремени = 1 Тогда
	ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
	ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";
КонецЕсли;

ТЗВидаРасчета.ПериодДействияБазовый							= 1;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНЗИЯ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНООИВС" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета								= "Процентом";

ТЗВидаРасчета.НужнаБаза									= 1; 

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНОУС" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "НОУС (Надбавка за особые условия службы)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3 / ИсходныеДанные.Показатель4";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Процент");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ВремяВДнях");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("НормаВремениВДнях");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "НадбавкаЗаОсобыеУсловияСлужбы";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНОУС_ВОП" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3 / ИсходныеДанные.Показатель4";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Процент");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ВремяВДнях");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("НормаВремениВДнях");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "НадбавкаЗаОсобыеУсловияСлужбы";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНСН" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "НСН (Надбавка за сложность, напряженность)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3 / ИсходныеДанные.Показатель4";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Процент");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ВремяВДнях");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("НормаВремениВДнях");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "НСН";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРНУС" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "НУС (Ежемесячная надбавка за ученую степень и ученое звание)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3 / ИсходныеДанные.Показатель4";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Процент");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ВремяВДнях");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("НормаВремениВДнях");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "НУС";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРОВД" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета			= ИсходящиеДанные;
ВидДоговораСотрудника	= ВходящиеДанные;

ТЗВидаРасчета.Наименование								= "ОВД (Оклад по воинской должности)";
ТЗВидаРасчета.ФормулаРасчета							= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 / ИсходныеДанные.Показатель3";
ТЗВидаРасчета.ОтношениеКДенежномуСодержанию				= "ОВД";

ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
ТЗВидаРасчета.СпособРасчета								= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета				= 1;
ТЗВидаРасчета.Показатели 								= СоздатьТЗПоказатели();

ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("ВремяВДнях");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("НормаВремениВДнях");

ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРОкладПоЗваниюНадбавкаЗаРазряд" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета			= ИсходящиеДанные;
ВидДоговораСотрудника	= ВходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();

Если ВидДоговораСотрудника = "ГосударственнаяСлужба" Тогда
	ТЗВидаРасчета.Наименование								= "Оклад за классный чин";
	ТЗВидаРасчета.ФормулаРасчета							= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 / ИсходныеДанные.Показатель3";
	ТЗВидаРасчета.ОтношениеКДенежномуСодержанию				= "ОкладЗаКлассныйЧин";

	ТЗВидаРасчета.Показатели.НоваяСтрока();
	ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("ОкладЗаКлассныйЧин");
	
ИначеЕсли ВидДоговораСотрудника = "МуниципальнаяСлужба" Тогда
	ТЗВидаРасчета.Наименование								= "Надбавка к окладу за классный чин";
	ТЗВидаРасчета.ФормулаРасчета							= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 * ИсходныеДанные.Показатель3 / ИсходныеДанные.Показатель4";
	ТЗВидаРасчета.ОтношениеКДенежномуСодержанию				= "ПрочиеЕжемесячныеВыплаты";

	ТЗВидаРасчета.ЗависитОтТарифнойСтавки					= 1;
	ТЗВидаРасчета.Показатели.НоваяСтрока();
	ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("ТарифнаяСтавкаМесячная");
	ТЗВидаРасчета.Показатели.НоваяСтрока();
	ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("Процент");

Иначе
	ТЗВидаРасчета.Наименование								= "ОВЗ (Оклад по воинскому званию)";
	ТЗВидаРасчета.ФормулаРасчета							= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 / ИсходныеДанные.Показатель3";
	ТЗВидаРасчета.ОтношениеКДенежномуСодержанию				= "ОВЗ";

	ТЗВидаРасчета.Показатели.НоваяСтрока();
	ТЗВидаРасчета.Показатели.Показатель						= ПолучитьПоказатель("ОВЗ");
	
КонецЕсли;

ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ВремяВДнях");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("НормаВремениВДнях");

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРОтпускДополнительный" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета		= ИсходящиеДанные;
ТипРасчетаОтпуска	= ВходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
Если ТипРасчетаОтпуска = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
	ТЗВидаРасчета.СпособРасчета							= "ПоСреднемуЗаработкуДляОтпускаПоШестидневке";
Иначе
	ТЗВидаРасчета.СпособРасчета							= "ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням";
КонецЕсли;

ТЗВидаРасчета.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка	= "ПоТрудовомуЗаконодательству";

ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "ДополнительныйОтпуск";

ТЗВидаРасчета.ВидЕжегодногоОтпуска						= "Дополнительный ежегодный отпуск";

ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтраховойСтаж";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРОтпускУчебный" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета		= ИсходящиеДанные;
ТипРасчетаОтпуска	= ВходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
Если ТипРасчетаОтпуска = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
	ТЗВидаРасчета.СпособРасчета							= "ПоСреднемуЗаработкуДляОтпускаПоШестидневке";
Иначе
	ТЗВидаРасчета.СпособРасчета							= "ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням";
КонецЕсли;

ТЗВидаРасчета.ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка	= "ПоТрудовомуЗаконодательству";

ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "ОтпускНаОбучение";

ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтраховойСтаж";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРОтчуждениеАвторских" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;
ВидДоходаКод	= ВходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
ТЗВидаРасчета.СпособРасчета		= "ПоДоговоруФиксированнойСуммой";
ТЗВидаРасчета.ВидПремии			= "НеПремия";

ТЗВидаРасчета.КодДоходаНДФЛ		= "1301";
ТЗВидаРасчета.КодДоходаЕСН		= "ДоговораАвторские";

Возврат ТЗВидаРасчета</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРПН_за_СВМ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета								= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * 0.15";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("РасчетнаяБаза");

ТЗВидаРасчета.НужнаБаза										= 1;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРПНВЛ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;
Шкала			= ВходящиеДанные;

ТЗВидаРасчета.Наименование					= "ПНВЛ (Надбавка за выслугу лет)";
ТЗВидаРасчета.КатегорияРасчета				= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета					= "ОтСтажаПроцентом";
ТЗВидаРасчета.ВидСтажа						= "СтажНаНадбавкуЗаВыслугуЛет";

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию	= "НадбавкаЗаВыслугуЛет";

ТЗВидаРасчета.НужнаБаза						= 1;


ТЗВидаРасчета.КоэффициентСтажа				= Шкала;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРПНСУБР" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета								= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "ИсходныеДанные.Показатель1 * 0.1";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("РасчетнаяБаза");

ТЗВидаРасчета.НужнаБаза										= 1;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРПП" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.Наименование									= "ПП (Подъемное пособие)";
ТЗВидаРасчета.КатегорияРасчета								= "Первичное";
ТЗВидаРасчета.СпособРасчета									= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета					= 1;
ТЗВидаРасчета.ФормулаРасчета								= "(ИсходныеДанные.Показатель1 + ИсходныеДанные.Показатель2) * (2+ИсходныеДанные.Показатель3*0.5 + ИсходныеДанные.Показатель4)";

ТЗВидаРасчета.Показатели 									= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВД");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ОВЗ");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("Количество иждивенцев");
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель							= ПолучитьПоказатель("ЕстьСупруга");

ТЗВидаРасчета.ОтношениеКДенежномуСодержанию					= "ПП";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРПремия" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета		= ИсходящиеДанные;
КоличествоМесяцев	= ВходящиеДанные;

ТЗВидаРасчета.Наименование					= ТЗВидаРасчета.Наименование + " (ЗиК)";

ТЗВидаРасчета.КатегорияРасчета				= "ЗависимоеПервогоУровня";
ТЗВидаРасчета.СпособРасчета					= "ПроизвольнаяФормула";
ТЗВидаРасчета.ПроизвольнаяФормулаРасчета	= 1;
ТЗВидаРасчета.ФормулаРасчета				= "ИсходныеДанные.Показатель1" + " * (ИсходныеДанные.Показатель2 / " + КоличествоМесяцев + ")";

ТЗВидаРасчета.Показатели 					= СоздатьТЗПоказатели();
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("Процент ежемесячный");
ТЗВидаРасчета.Показатели.ЗапрашиватьПриКадровыхПеремещениях	= 1;
ТЗВидаРасчета.Показатели.НоваяСтрока();
ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("РасчетнаяБаза");

ТЗВидаРасчета.НужнаБаза						= 1; 

ТЗВидаРасчета.ЧислоМесяцев					= КоличествоМесяцев;
Если КоличествоМесяцев = 12 Тогда
	ТЗВидаРасчета.ВидПремии					= "ГодоваяПремия";
Иначе
	ТЗВидаРасчета.ВидПремии					= "Премия";
КонецЕсли;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьВРСохраняемоеДенежноеСодержание" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;

ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
ТЗВидаРасчета.СпособРасчета								= "СохраняемоеДенежноеСодержаниеОтпуска";

ТЗВидаРасчета.КодДоходаНДФЛ								= "2012";

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьГрафикиРаботы" ИспользуетсяПриЗагрузке="true">
			<Текст>Запрос = Новый Запрос;

Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

Запрос.Текст =
"ВЫБРАТЬ
|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
|	ГрафикиРаботыПоВидамВремени.Месяц КАК Месяц
|ПОМЕСТИТЬ ВТМесяцыДляЗаполнения
|ИЗ
|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
|ГДЕ
|	ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &amp;ДатаНачала И &amp;ДатаОкончания
|
|СГРУППИРОВАТЬ ПО
|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы,
|	ГрафикиРаботыПоВидамВремени.Месяц
|
|ИМЕЮЩИЕ
|	МАКСИМУМ(ГрафикиРаботыПоВидамВремени.ПроизводственныйКалендарьПятидневка) = 0
|
|ИНДЕКСИРОВАТЬ ПО
|	ГрафикРаботы,
|	Месяц
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначение,
|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначение,
|	ГрафикиРаботыПоВидамВремени.ОсновноеЗначениеНорма,
|	ГрафикиРаботыПоВидамВремени.ДополнительноеЗначениеНорма,
|	ЕСТЬNULL(РегламентированныйПроизводственныйКалендарь.Пятидневка, 0) КАК ПроизводственныйКалендарьПятидневка,
|	ЕСТЬNULL(РегламентированныйПроизводственныйКалендарь.Пятидневка, 0) * ГрафикиРаботыПоВидамВремени.ГрафикРаботы.ДлительностьРабочейНедели / 5 КАК ПроизводственныйКалендарьПятидневкаЧасы,
|	ЕСТЬNULL(РегламентированныйПроизводственныйКалендарь.Шестидневка, 0) КАК ПроизводственныйКалендарьШестиДневка,
|	ЕСТЬNULL(РегламентированныйПроизводственныйКалендарь.КалендарныеДни, 0) КАК ПроизводственныйКалендарьКалендарныеДни,
|	ГрафикиРаботыПоВидамВремени.ГрафикРаботы КАК ГрафикРаботы,
|	ГрафикиРаботыПоВидамВремени.Месяц КАК Месяц,
|	ГрафикиРаботыПоВидамВремени.План,
|	ГрафикиРаботыПоВидамВремени.ВидУчетаВремени КАК ВидУчетаВремени,
|	ГрафикиРаботыПоВидамВремени.Дата
|ИЗ
|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМесяцыДляЗаполнения КАК ВТМесяцыДляЗаполнения
|		ПО ГрафикиРаботыПоВидамВремени.ГрафикРаботы = ВТМесяцыДляЗаполнения.ГрафикРаботы
|			И ГрафикиРаботыПоВидамВремени.Месяц = ВТМесяцыДляЗаполнения.Месяц
|			И (ГрафикиРаботыПоВидамВремени.План)
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
|		ПО ГрафикиРаботыПоВидамВремени.Дата = РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
|			И (ГрафикиРаботыПоВидамВремени.ВидУчетаВремени В (ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням), ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоЧасам)))
|
|УПОРЯДОЧИТЬ ПО
|	ГрафикРаботы,
|	Месяц,
|	ВидУчетаВремени";

Запрос.УстановитьПараметр("ДатаНачала",		НачалоГода(ДатаНачала));
Запрос.УстановитьПараметр("ДатаОкончания",	КонецГода(ДатаОкончания));

НаборЗаписей = РегистрыСведений.ГрафикиРаботыПоВидамВремени.СоздатьНаборЗаписей();

Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.СледующийПоЗначениюПоля("ГрафикРаботы") Цикл
	Пока Выборка.СледующийПоЗначениюПоля("Месяц") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("ВидУчетаВремени") Цикл
			НаборЗаписей.Отбор.ГрафикРаботы.Установить(Выборка.ГрафикРаботы);
			НаборЗаписей.Отбор.Месяц.Установить(Выборка.Месяц);
			НаборЗаписей.Отбор.План.Установить(Истина);
			НаборЗаписей.Отбор.ВидУчетаВремени.Установить(Выборка.ВидУчетаВремени);
			
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьДанныеБухучетаПоШаблонуПроводки" ИспользуетсяПриЗагрузке="false">
			<Текст>ШаблонПроводки	 = ИсходящиеДанные;
БУРегистрРасчета = ВходящиеДанные; 

СчетДт			= "26";
СубконтоДт1		= "";
СубконтоДт2		= "";
СубконтоДт3		= "";
СчетКт			= "70";
СубконтоКт1		= "";
СубконтоКт2		= "";		
СубконтоКт3		= "";
ОтражениеВУСН	= "Принимаются";

// проверим шаблон проводки, мож но ли из него получить данные
Если ПустоеЗначение(ШаблонПроводки) = 1 Тогда
	//будем использовать шаблон по умолчанию 
	ШаблонПроводки = Константа.ПроводкаПоУмолчанию;
КонецЕсли; 

Если ПустоеЗначение(ШаблонПроводки) &lt;&gt; 1 Тогда 
	СпособОтражения = ПолучитьСпособОтраженияПоШаблону(ШаблонПроводки);
КонецЕсли; 
 
Если ПустоеЗначение(СпособОтражения) = 1 Тогда
	
	БУРегистрРасчета.СчетДт			= СчетДт;
	БУРегистрРасчета.СубконтоДт1	= СубконтоДт1;
	БУРегистрРасчета.СубконтоДт2	= СубконтоДт2;
	БУРегистрРасчета.СубконтоДт3	= СубконтоДт3;
	БУРегистрРасчета.СчетКт			= СчетКт;
	БУРегистрРасчета.СубконтоКт1	= СубконтоКт1;
	БУРегистрРасчета.СубконтоКт2	= СубконтоКт2;
	БУРегистрРасчета.СубконтоКт3	= СубконтоКт3;
	БУРегистрРасчета.ОтражениеВУСН	= ОтражениеВУСН;
	
Иначе
	
	БУРегистрРасчета.СчетДт			= СпособОтражения.Получить("СчетДт");
	БУРегистрРасчета.СубконтоДт1	= СпособОтражения.Получить("СубконтоДт1");
	БУРегистрРасчета.СубконтоДт2	= СпособОтражения.Получить("СубконтоДт2");
	БУРегистрРасчета.СубконтоДт3	= СпособОтражения.Получить("СубконтоДт3");
	БУРегистрРасчета.СчетКт			= СпособОтражения.Получить("СчетКт");
	БУРегистрРасчета.СубконтоКт1	= СпособОтражения.Получить("СубконтоКт1");
	БУРегистрРасчета.СубконтоКт2	= СпособОтражения.Получить("СубконтоКт2");
	БУРегистрРасчета.СубконтоКт3	= СпособОтражения.Получить("СубконтоКт3");
	БУРегистрРасчета.ОтражениеВУСН	= СпособОтражения.Получить("ОтражениеВУСН");
	
КонецЕсли;

// Необходимо заполнить субконто, которое подбирается автоматически, сотрудник или подразделение
Счета=СоздатьОбъект("Справочник.ПланСчетов");

Если Счета.НайтиПоКоду(БУРегистрРасчета.СчетДт) = 1 Тогда
	Для НомерСубконто = 1 По 3 Цикл
		Ид = СокрЛП(Счета.ПолучитьАтрибут("ИдентификаторСубконто"+НомерСубконто));
		
		Если (Ид &lt;&gt; "Подразделения") И (Ид &lt;&gt; "Сотрудники") Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеСубконто = БУРегистрРасчета.ПолучитьЗначение(БУРегистрРасчета.НомерСтроки, "СубконтоДт"+НомерСубконто);
		
		Если ПустоеЗначение(ЗначениеСубконто) = 1 Тогда
			Если Ид = "Подразделения" Тогда
				БУРегистрРасчета.УстановитьЗначение(БУРегистрРасчета.НомерСтроки, "СубконтоДт"+НомерСубконто, БУРегистрРасчета.ПодразделениеОрганизации);
			ИначеЕсли Ид = "Сотрудники" Тогда
				БУРегистрРасчета.УстановитьЗначение(БУРегистрРасчета.НомерСтроки, "СубконтоДт"+НомерСубконто, БУРегистрРасчета.Физлицо);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецЕсли;

Если Счета.НайтиПоКоду(БУРегистрРасчета.СчетКт) = 1 Тогда
	Для НомерСубконто = 1 По 3 Цикл
		Ид = СокрЛП(Счета.ПолучитьАтрибут("ИдентификаторСубконто"+НомерСубконто));

		Если (Ид &lt;&gt; "Подразделения") И (Ид &lt;&gt; "Сотрудники") Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеСубконто = БУРегистрРасчета.ПолучитьЗначение(БУРегистрРасчета.НомерСтроки, "СубконтоКт"+НомерСубконто);
		
		Если ПустоеЗначение(ЗначениеСубконто) = 1 Тогда
			Если Ид = "Подразделения" Тогда
				БУРегистрРасчета.УстановитьЗначение(БУРегистрРасчета.НомерСтроки, "СубконтоКт"+НомерСубконто, БУРегистрРасчета.ПодразделениеОрганизации);
			ИначеЕсли Ид = "Сотрудники" Тогда
				БУРегистрРасчета.УстановитьЗначение(БУРегистрРасчета.НомерСтроки, "СубконтоКт"+НомерСубконто, БУРегистрРасчета.Физлицо);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецЕсли;

Возврат БУРегистрРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьКатегорииРасчета" ИспользуетсяПриЗагрузке="true">
			<Текст>Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

// получим основные начисления, у которых категория расчета не первичная и им не нужна база 
// или нужна база, но она пустая, этим начислениям установим категорию - первичное
Запрос.Текст = 
"ВЫБРАТЬ
|	ОсновныеНачисления.Ссылка КАК Ссылка
|ИЗ
|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияБазовыеВидыРасчета
|		ПО ОсновныеНачисления.Ссылка = ОсновныеНачисленияБазовыеВидыРасчета.Ссылка
|ГДЕ
|	ОсновныеНачисления.КатегорияРасчета &lt;&gt; ЗНАЧЕНИЕ(Справочник.КатегорииРасчетов.Первичное)
|	И (НЕ ОсновныеНачисления.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет)))
|	И ОсновныеНачисленияБазовыеВидыРасчета.НомерСтроки ЕСТЬ NULL 
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	ДополнительныеНачисления.Ссылка
|ИЗ
|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисления
|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ДополнительныеНачисленияБазовыеВидыРасчета
|		ПО ДополнительныеНачисления.Ссылка = ДополнительныеНачисленияБазовыеВидыРасчета.Ссылка
|ГДЕ
|	ДополнительныеНачисления.КатегорияРасчета &lt;&gt; ЗНАЧЕНИЕ(Справочник.КатегорииРасчетов.Первичное)
|	И (НЕ ДополнительныеНачисления.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет)))
|	И ДополнительныеНачисленияБазовыеВидыРасчета.НомерСтроки ЕСТЬ NULL ";
РезультатЗапроса = Запрос.Выполнить();

// установим у этих начислений первичную категорию
Если Не РезультатЗапроса.Пустой() Тогда
	ВыборкаИзЗапроса	= РезультатЗапроса.Выбрать();
	КатегорияРасчета	= Справочники.КатегорииРасчетов.Первичное;
	
	Выполнить(Алгоритмы.УстановитьНовуюКатегорию);
КонецЕсли;

// ВТ_СписокНачисленийНужнаБаза -  начислений, для которых нужна база
// это начислений, у которых заполнена таблица базовых начислений
СписокНачисленийНужнаБазаТекст =
"ВЫБРАТЬ
|	СписокНачислений.Ссылка,
|	СписокНачислений.ЭтоОсновноеНачисление,
|	СписокНачислений.ОсновныеМаксимальнаяКатегория,
|	СписокНачислений.ДополнительныеМаксимальнаяКатегория
|ПОМЕСТИТЬ ВТ_СписокНачисленийНужнаБаза
|ИЗ
|	(ВЫБРАТЬ
|		ОсновныеНачисления.Ссылка КАК Ссылка,
|		ИСТИНА КАК ЭтоОсновноеНачисление,
|		ОсновныеНачисления.ОсновныеМаксимальнаяКатегория КАК ОсновныеМаксимальнаяКатегория,
|		ОсновныеНачисления.ДополнительныеМаксимальнаяКатегория КАК ДополнительныеМаксимальнаяКатегория,
|		ОсновныеНачисления.Ссылка.КатегорияРасчета.Код КАК КатегорияРасчета
|	ИЗ
|		(ВЫБРАТЬ
|			ОсновныеНачисления.Ссылка КАК Ссылка,
|			МАКСИМУМ(ВЫБОР
|					КОГДА ОсновныеНачисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
|						ТОГДА ОсновныеНачисления.ВидРасчета.КатегорияРасчета.Код
|					ИНАЧЕ ""000000""
|				КОНЕЦ) КАК ОсновныеМаксимальнаяКатегория,
|			МАКСИМУМ(ВЫБОР
|					КОГДА ОсновныеНачисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций
|						ТОГДА ОсновныеНачисления.ВидРасчета.КатегорияРасчета.Код
|					ИНАЧЕ ""000000""
|				КОНЕЦ) КАК ДополнительныеМаксимальнаяКатегория
|		ИЗ
|			ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисления
|		ГДЕ
|			(НЕ ОсновныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет)))
|		
|		СГРУППИРОВАТЬ ПО
|			ОсновныеНачисления.Ссылка) КАК ОсновныеНачисления
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		ДополнительныеНачисления.Ссылка,
|		ЛОЖЬ,
|		ДополнительныеНачисления.ОсновныеМаксимальнаяКатегория,
|		ДополнительныеНачисления.ДополнительныеМаксимальнаяКатегория,
|		ДополнительныеНачисления.Ссылка.КатегорияРасчета.Код
|	ИЗ
|		(ВЫБРАТЬ
|			ДополнительныеНачисления.Ссылка КАК Ссылка,
|			МАКСИМУМ(ВЫБОР
|					КОГДА ДополнительныеНачисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
|						ТОГДА ДополнительныеНачисления.ВидРасчета.КатегорияРасчета.Код
|					ИНАЧЕ ""000000""
|				КОНЕЦ) КАК ОсновныеМаксимальнаяКатегория,
|			МАКСИМУМ(ВЫБОР
|					КОГДА ДополнительныеНачисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ДополнительныеНачисленияОрганизаций
|						ТОГДА ДополнительныеНачисления.ВидРасчета.КатегорияРасчета.Код
|					ИНАЧЕ ""000000""
|				КОНЕЦ) КАК ДополнительныеМаксимальнаяКатегория
|		ИЗ
|			ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ДополнительныеНачисления
|		ГДЕ
|			(НЕ ДополнительныеНачисления.ВидРасчета.СпособРасчета В (ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС), ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет)))
|		
|		СГРУППИРОВАТЬ ПО
|			ДополнительныеНачисления.Ссылка) КАК ДополнительныеНачисления) КАК СписокНачислений
|ГДЕ
|	ВЫБОР
|			КОГДА СписокНачислений.ЭтоОсновноеНачисление
|				ТОГДА ВЫБОР
|						КОГДА СписокНачислений.ОсновныеМаксимальнаяКатегория &gt;= СписокНачислений.КатегорияРасчета
|								ИЛИ СписокНачислений.ДополнительныеМаксимальнаяКатегория &gt; СписокНачислений.КатегорияРасчета
|							ТОГДА ИСТИНА
|						ИНАЧЕ ЛОЖЬ
|					КОНЕЦ
|			ИНАЧЕ ВЫБОР
|					КОГДА СписокНачислений.ОсновныеМаксимальнаяКатегория &gt; СписокНачислений.КатегорияРасчета
|							ИЛИ СписокНачислений.ДополнительныеМаксимальнаяКатегория &gt;= СписокНачислений.КатегорияРасчета
|						ТОГДА ИСТИНА
|					ИНАЧЕ ЛОЖЬ
|				КОНЕЦ
|		КОНЕЦ";
Запрос.Текст = СписокНачисленийНужнаБазаТекст;
Запрос.Выполнить();

Запрос.Текст = 
"ВЫБРАТЬ
|	КатегорииРасчетов.Ссылка,
|	КатегорииРасчетов.Код
|ИЗ
|	Справочник.КатегорииРасчетов КАК КатегорииРасчетов
|
|УПОРЯДОЧИТЬ ПО
|	КатегорииРасчетов.Код";
// это список всех категорий, отсортированный по возрастанию
ТаблицаКатегорий		= Запрос.Выполнить().Выгрузить();
МассивКатегорий			= ТаблицаКатегорий.ВыгрузитьКолонку("Ссылка");
МассивКодовКатегорий	= ТаблицаКатегорий.ВыгрузитьКолонку("Код");

// в этих массиве будем собирать категории для условия в запросе
Массив1 = Новый Массив;
Массив1.Добавить("000000");

Массив2 = Новый Массив;
Массив2.Добавить("000000");
Массив2.Добавить(МассивКодовКатегорий[0]);

СписокНачисленийДляОбработкиТекст =
"ВЫБРАТЬ
|	ВТ_СписокНачисленийНужнаБаза.Ссылка
|ИЗ
|	ВТ_СписокНачисленийНужнаБаза КАК ВТ_СписокНачисленийНужнаБаза
|ГДЕ
|	ВЫБОР
|			КОГДА ВТ_СписокНачисленийНужнаБаза.ЭтоОсновноеНачисление
|				ТОГДА ВЫБОР
|						КОГДА ВТ_СписокНачисленийНужнаБаза.ОсновныеМаксимальнаяКатегория В (&amp;Массив1)
|								И ВТ_СписокНачисленийНужнаБаза.ДополнительныеМаксимальнаяКатегория В (&amp;Массив1)
|							ТОГДА ИСТИНА
|						ИНАЧЕ ЛОЖЬ
|					КОНЕЦ
|			ИНАЧЕ ВЫБОР
|					КОГДА ВТ_СписокНачисленийНужнаБаза.ОсновныеМаксимальнаяКатегория В (&amp;Массив2)
|							И ВТ_СписокНачисленийНужнаБаза.ДополнительныеМаксимальнаяКатегория В (&amp;Массив1)
|						ТОГДА ИСТИНА
|					ИНАЧЕ ЛОЖЬ
|				КОНЕЦ
|		КОНЕЦ";

НеОбработаноНачислений = 0;
КоличествоКатегорий = МассивКодовКатегорий.Количество();
Для СчКатегорий = 1 По КоличествоКатегорий Цикл
	
	Массив1.Добавить(МассивКодовКатегорий[СчКатегорий-1]);
	Массив2.Добавить(МассивКодовКатегорий[Мин(СчКатегорий, КоличествоКатегорий - 1)]);
	
	Запрос.УстановитьПараметр("Массив1", Массив1);
	Запрос.УстановитьПараметр("Массив2", Массив2);

	Запрос.Текст = СписокНачисленийДляОбработкиТекст;
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Продолжить;
	КонецЕсли;
	
	Если СчКатегорий &lt; КоличествоКатегорий Тогда
		ВыборкаИзЗапроса	= РезультатЗапроса.Выбрать();
		КатегорияРасчета	= МассивКатегорий[СчКатегорий];
		
		Выполнить(Алгоритмы.УстановитьНовуюКатегорию);
	КонецЕсли;

	Запрос.Текст =
	"УНИЧТОЖИТЬ ВТ_СписокНачисленийНужнаБаза";
	Запрос.Выполнить();
	
	Запрос.Текст = СписокНачисленийНужнаБазаТекст;
	НеОбработаноНачислений = Запрос.Выполнить().Выгрузить()[0].Количество; 
	Если НеОбработаноНачислений = 0 Тогда
		Прервать;
	КонецЕсли;	
	
КонецЦикла;	

СчКатегорий = СчКатегорий -1;
Пока НеОбработаноНачислений &gt; 0 Цикл
	// не хватило существующих категорий
	
	НоваяКатегория = Справочники.КатегорииРасчетов.СоздатьЭлемент();
	НаименованиеКатегории = "";
	
	ТекстКатегории = "";
	Если СчКатегорий = 2 Тогда
		ТекстКатегории = "второго";
	ИначеЕсли СчКатегорий = 3 Тогда
		ТекстКатегории = "третьего";
	ИначеЕсли СчКатегорий = 4 Тогда
		ТекстКатегории = "четвертого";
	ИначеЕсли СчКатегорий = 5 Тогда
		ТекстКатегории = "пятого";
	ИначеЕсли СчКатегорий = 6 Тогда
		ТекстКатегории = "шестого";
	ИначеЕсли СчКатегорий = 7 Тогда
		ТекстКатегории = "седьмого";
	ИначеЕсли СчКатегорий = 8 Тогда
		ТекстКатегории = "восьмого";
	ИначеЕсли СчКатегорий = 9 Тогда
		ТекстКатегории = "девятого";
	ИначеЕсли СчКатегорий = 10 Тогда
		ТекстКатегории = "десятого";
	Иначе	
		Прервать;
	КонецЕсли;	

	НаименованиеКатегории = "Зависимое " + ТекстКатегории + " уровня";

	НоваяКатегория.Наименование = НаименованиеКатегории;
	НоваяКатегория.Записать();
	МассивКатегорий.Добавить(НоваяКатегория.Ссылка);
	МассивКодовКатегорий.Добавить(НоваяКатегория.Код);
	
	Массив1.Добавить(МассивКодовКатегорий[СчКатегорий-1]);
	Массив2.Добавить(МассивКодовКатегорий[СчКатегорий]);
	
	Запрос.УстановитьПараметр("Массив1", Массив1);
	Запрос.УстановитьПараметр("Массив2", Массив2);

	Запрос.Текст = СписокНачисленийДляОбработкиТекст;
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Прервать;
	КонецЕсли;
	
	ВыборкаИзЗапроса	= РезультатЗапроса.Выбрать();
	КатегорияРасчета	= МассивКатегорий[СчКатегорий];
	
	Выполнить(Алгоритмы.УстановитьНовуюКатегорию);
	
	Запрос.Текст =
	"УНИЧТОЖИТЬ ВТ_СписокНачисленийНужнаБаза";
	Запрос.Выполнить();
	
	Запрос.Текст = СписокНачисленийНужнаБазаТекст;
	НеОбработаноНачислений = Запрос.Выполнить().Выгрузить()[0].Количество; 
	СчКатегорий = СчКатегорий +1;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьПоказателиРасчета" ИспользуетсяПриЗагрузке="false">
			<Текст>РегистрРасчета			= ИсходящиеДанные;
ТЗВидаРасчета			= ВходящиеДанные;
Регистратор				= Источник;
НомерСтрокиДокумента	= Приемник;
ВР						= ТипПриемника;
Сотрудник				= Значение;
ДатаЗначения			= Выражение;
ПлановыеПоказатели		= Пусто;

Если	(ВР = ВидРасчета.ОплатаПоОкладу)
	ИЛИ (ВР = ВидРасчета.ОплатаПоТабелю)
	ИЛИ (ВР = ВидРасчета.ОплатаПоТарифу) Тогда
	
	ФормаТруда = ЗначениеПериодическогоРеквизитаНаНачало("ФормаТруда", Сотрудник, ДатаЗначения);

	Если ФормаТруда = Перечисление.ФормыТруда.КомиссВыручка Тогда
		КоэффициентОплаты = ЗначениеПериодическогоРеквизитаНаНачало("КоэффициентОплаты", Сотрудник, ДатаЗначения);
		
		РегистрРасчета.Показатель2		= КоэффициентОплаты;
		
	Иначе
		Оклад = ЗначениеПериодическогоРеквизитаНаНачало("Оклад", Сотрудник, ДатаЗначения);
		
		Ставка = ЗначениеПериодическогоРеквизитаНаНачало("Ставка", Сотрудник, ДатаЗначения);
		Если Ставка = 0 Тогда
			Ставка = 1;
		КонецЕсли;
		
		Если глТипВидЗначения(Оклад) = "Справочник.ТарифныеРазряды" Тогда
			Если ПлановыеПоказатели = 1 Тогда
				РегистрРасчета.ТарифныйРазряд1	= Оклад;
				
			Иначе
				РегистрРасчета.Показатель1		= Оклад.Тариф.Получить(ДатаЗначения) * Ставка;
				
			КонецЕсли;
			
		ИначеЕсли глТипВидЗначения(Оклад) = "Справочник.ЕТС" Тогда
			Если ПлановыеПоказатели = 1 Тогда
				РегистрРасчета.ТарифныйРазряд1	= Оклад;
				РегистрРасчета.Валюта1			= ?(ПустоеЗначение(Сотрудник.ВалютаОклада) = 0, Сотрудник.ВалютаОклада, "Рубль");
				
			Иначе
				РегистрРасчета.Показатель1		= Оклад.Оклад.Получить(ДатаЗначения) * Ставка;
				
			КонецЕсли;
		
		Иначе
			Если ТипЗначенияСтр(Оклад) = "Строка" Тогда
				Попытка
					Оклад = Число(Оклад);
				Исключение
					Оклад = 0;
				КонецПопытки;
			КонецЕсли;
			
			РегистрРасчета.Показатель1			= Оклад * Ставка;
			Если ПлановыеПоказатели = 1 Тогда
				РегистрРасчета.Валюта1			= ?(ПустоеЗначение(Сотрудник.ВалютаОклада) = 0, Сотрудник.ВалютаОклада, "Рубль");
			КонецЕсли;
		
		КонецЕсли;			
		
		Если	(ФормаТруда = Перечисление.ФормыТруда.КомиссВыручкаОклад)
			ИЛИ	(ФормаТруда = Перечисление.ФормыТруда.КомиссОкладВыручка) Тогда
			КоэффициентОплаты = ЗначениеПериодическогоРеквизитаНаНачало("КоэффициентОплаты", Сотрудник, ДатаЗначения);
	
			РегистрРасчета.Показатель3	= КоэффициентОплаты;
		КонецЕсли;
		
	КонецЕсли;
	
ИначеЕсли (ВР = ВидРасчета.ЕжемесячнаяПремия) Тогда
	РегистрРасчета.Показатель1 = ЗначениеПериодическогоРеквизитаНаНачало("ПроцентЕжемесПремии", Сотрудник, ДатаЗначения);
	
ИначеЕсли (ВР = ВидРасчета.ДоплатаЗаВечерниеЧасы) ИЛИ (ВР = ВидРасчета.ДоплатаЗаВечерниеЧасыПоТабелю) Тогда
	РегистрРасчета.Показатель1 = (Константа.КоэффициентДоплатыЗаРаботуВВечернееВремя - 1) * 100;
	
ИначеЕсли (ВР = ВидРасчета.ДоплатаЗаНочныеЧасы) ИЛИ (ВР = ВидРасчета.ДоплатаЗаНочныеЧасыПоТабелю) Тогда
	РегистрРасчета.Показатель1 = (Константа.КоэффициентДоплатыЗаРаботуВНочноеВремя - 1) * 100;
	
ИначеЕсли (ВР = ВидРасчета.ДоплатаЗаВредность) Тогда
	УсловияТруда = 0;
	
	Если Регистратор.Вид() = "НачисленияУдержанияСотрудника" Тогда
		УсловияТруда = Регистратор.Величина;
		
	ИначеЕсли Регистратор.Вид() = "НачисленияУдержанияСписком" Тогда
		Если ПустоеЗначение(НомерСтрокиДокумента) = 0 Тогда
			Регистратор.ПолучитьСтрокуПоНомеру(НомерСтрокиДокумента);
			
			УсловияТруда = Регистратор.Величина;
		КонецЕсли;
		
	ИначеЕсли Регистратор.Вид() = "ШтатноеРасписание" Тогда
		Если ПустоеЗначение(НомерСтрокиДокумента) = 0 Тогда
			УсловияТруда = Регистратор.ПолучитьАтрибут("РазмерНадбавки" + НомерСтрокиДокумента).Получить(ДатаЗначения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если глТипВидЗначения(УсловияТруда) = "Справочник.УсловияТруда" Тогда
		РегистрРасчета.Показатель1		= (УсловияТруда.Коэффициент - 1) * 100;
	КонецЕслИ;
	
ИначеЕсли (ВР = ВидРасчета.ПеречислениеВБанк) Тогда
	Если Регистратор.Вид() = "ПеречислениеЗарплатыВБанк" Тогда
		РегистрРасчета.Показатель1	= Регистратор.Величина;
		Если ПлановыеПоказатели = 1 Тогда
			РегистрРасчета.Валюта1	= "Рубль";
		КонецЕсли;
	КонецЕсли;	
		
ИначеЕсли (ВР = ВидРасчета.БанковскиеИздержки) Тогда
	Если Регистратор.Вид() = "ПеречислениеЗарплатыВБанк" Тогда
		Если Регистратор.Получатель.Выбран() = 1 Тогда
			РегистрРасчета.Показатель1	= Регистратор.Величина * Регистратор.Получатель.ПроцентИздержекБанка / 100;
		КонецЕсли;
	ИначеЕсли Регистратор.Вид() = "ИсполнительныйЛист" Тогда
		Если Регистратор.Получатель.Выбран() = 1 Тогда
			РегистрРасчета.Получатель	= Регистратор.Получатель;
			РегистрРасчета.Показатель1	= Регистратор.Получатель.ПроцентИздержекБанка;
		КонецЕсли;
	КонецЕсли;	
		
ИначеЕсли (ВР = ВидРасчета.УдержаниеПоИсполнительномуЛисту) Тогда
	Если Регистратор.Вид() = "ИсполнительныйЛист" Тогда
		РегистрРасчета.Получатель	= Регистратор.Получатель;
		РегистрРасчета.Показатель1	= Регистратор.Величина;
		Если (ПлановыеПоказатели = 1) И (Регистратор.СпособРасчетаПоИЛ = 2) Тогда
			РегистрРасчета.Валюта1	= "Рубль";
		КонецЕсли;
	КонецЕсли;
	
ИначеЕсли (ВР = ВидРасчета.ПочтовыйСбор) Тогда
	Если Регистратор.Вид() = "ИсполнительныйЛист" Тогда
		РегистрРасчета.Получатель	= Регистратор.Получатель;
		РегистрРасчета.Показатель1	= Регистратор.ПроцентПочтовогоСбора;
	КонецЕсли;
	
ИначеЕсли (ВР = ВидРасчета.РайонныйКоэффициент) Тогда
	ТаблицаКоэффициентов = глПолучитьРайонныеКоэффициенты(Сотрудник, ДатаЗначения, ДатаЗначения);
	ТаблицаКоэффициентов.ВыбратьСтроки();
	Если ТаблицаКоэффициентов.ПолучитьСтроку() = 1 Тогда
		РегистрРасчета.Показатель1	= (ТаблицаКоэффициентов.Коэффициент - 1) * 100;
	КонецЕсли;
	
ИначеЕсли (ВР = ВидРасчета.ОплатаПоНаряду) ИЛИ (ВР = ВидРасчета.СдельныйНаряд) Тогда
	РегистрРасчета.Показатель1	= глТарифПоРазряду(Сотрудник, ДатаЗначения);
	
Иначе
	Если ПустоеЗначение(Регистратор) = 1 Тогда
		Возврат РегистрРасчета;
	КонецЕсли;

	Если Регистратор.Выбран() = 0 Тогда
		Возврат РегистрРасчета;
	КонецЕсли;
	
	Если (Регистратор.Вид() = "НачисленияУдержанияСотрудника") Тогда
		Если ТЗВидаРасчета.ЗависитОтТарифнойСтавки = 1 Тогда
			Если ТипЗначенияСтр(Регистратор.Величина) = "Число" Тогда
				РегистрРасчета.Показатель2	= Регистратор.Величина;
			КонецЕсли;
			Если ПлановыеПоказатели = 1 Тогда
				РегистрРасчета.Валюта2		= Источник.Валюта;
			КонецЕсли;
		Иначе
			Если ТипЗначенияСтр(Регистратор.Величина) = "Число" Тогда
				РегистрРасчета.Показатель1	= Регистратор.Величина;
			КонецЕсли;
			Если ТипЗначенияСтр(Регистратор.Величина2) = "Число" Тогда
				РегистрРасчета.Показатель2	= Регистратор.Величина2;
			КонецЕсли;
			Если ПлановыеПоказатели = 1 Тогда
				РегистрРасчета.Валюта1		= Источник.Валюта;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Регистратор.Вид() = "НачисленияУдержанияСписком" Тогда
		Если ПустоеЗначение(НомерСтрокиДокумента) = 0 Тогда
			Регистратор.ПолучитьСтрокуПоНомеру(НомерСтрокиДокумента);
			
			Если ТЗВидаРасчета.ЗависитОтТарифнойСтавки = 1 Тогда
				Если ТипЗначенияСтр(Регистратор.Величина) = "Число" Тогда
					РегистрРасчета.Показатель2	= Регистратор.Величина;
				КонецЕсли;
				Если ПлановыеПоказатели = 1 Тогда
					РегистрРасчета.Валюта2	= Источник.Валюта;
				КонецЕсли;
			Иначе
				Если ТипЗначенияСтр(Регистратор.Величина) = "Число" Тогда
					РегистрРасчета.Показатель1	= Регистратор.Величина;
				КонецЕсли;
				Если ТипЗначенияСтр(Регистратор.Величина2) = "Число" Тогда
					РегистрРасчета.Показатель2	= Регистратор.Величина2;
				КонецЕсли;
				Если ПлановыеПоказатели = 1 Тогда
					РегистрРасчета.Валюта1	= Источник.Валюта;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли Регистратор.Вид() = "ШтатноеРасписание" Тогда
		Если ПустоеЗначение(НомерСтрокиДокумента) = 0 Тогда
			РегистрРасчета.Показатель1	= Регистратор.ПолучитьАтрибут("РазмерНадбавки" + НомерСтрокиДокумента).Получить(ДатаЗначения);
		КонецЕсли;
			
	ИначеЕсли Регистратор.Вид() = "ПерерасчетСтажаДляПНВЛ" Тогда
		Если ПустоеЗначение(НомерСтрокиДокумента) = 0 Тогда
			Регистратор.ПолучитьСтрокуПоНомеру(НомерСтрокиДокумента);
			
			Если ПлановыеПоказатели &lt;&gt; 1 Тогда
				РегистрРасчета.Показатель1 = глПолучитьПроцентОтСтажа(Регистратор.Шкала, Регистратор.НовыйСтаж, ДатаЗначения);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли (Регистратор.Вид() = "БольничныйЛист") И (ПлановыеПоказатели &lt;&gt; 1) Тогда
		ТабличнаяЧасть = СоздатьОбъект("ТаблицаЗначений"); 
		
		Если (Регистратор.ПервичныйБольничный.Выбран() = 1) Тогда
			Если (Регистратор.КоличествоСтрок() = 0) Тогда
				ПервичныйДокумент = глПолучитьПервичныйБольничный(Регистратор);
				ПервичныйДокумент.ВыгрузитьТабличнуюЧасть(ТабличнаяЧасть);
			Иначе
				Регистратор.ВыгрузитьТабличнуюЧасть(ТабличнаяЧасть);
			КонецЕсли;
		Иначе
			Регистратор.ВыгрузитьТабличнуюЧасть(ТабличнаяЧасть);
		КонецЕсли; 
		
		ДатаНачалаСобытия = Регистратор.Начало;
		Если Регистратор.ПервичныйБольничный.Выбран() = 1 Тогда 
			//сначала поищем самый первый день самого первого больничного:
			ПредыдущийПервичный = Регистратор.ПервичныйБольничный;
			Пока ПредыдущийПервичный.ПервичныйБольничный.Выбран() = 1  Цикл
				ПредыдущийПервичный = ПредыдущийПервичный.ПервичныйБольничный;
			КонецЦикла;
			ДатаНачалаСобытия = ПредыдущийПервичный.Начало;
		КонецЕсли;
		
		Если ПустоеЗначение(ДатаНачалаСобытия)=1 Тогда
			ДатаНачалаСобытия = Регистратор.ДатаДок;
		КонецЕсли;
		
		Если ПлановыеПоказатели &lt;&gt; 1 Тогда
			РегистрРасчета.ДополнительныеДанные = глСуммаСреднегоЗаработкаБольничного(Сотрудник, ДатаНачалаСобытия, Регистратор.ТипРасчетаБольничного, ТабличнаяЧасть);
			РегистрРасчета.ОплаченоДнейЧасов	= Регистратор.ДнейОплаты;
		КонецЕсли;
		
	ИначеЕсли (Регистратор.Вид() = "НачислениеОтпуска") И (ПлановыеПоказатели &lt;&gt; 1) Тогда
		ВидПВР = ОпределитьВидПВР(ВР);
		Если ВидПВР = "ОсновныеНачисления" Тогда
			ТабличнаяЧасть = СоздатьОбъект("ТаблицаЗначений");
			
			Регистратор.ВыгрузитьТабличнуюЧасть(ТабличнаяЧасть);
			
			Если (Регистратор.ВидОтпуска = ВидРасчета.КомпенсацияОтпуска) или (Регистратор.ВидОтпуска = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск) тогда
				Если Регистратор.ДокОснование.Вид() &lt;&gt; "ПриказОбУвольнении" Тогда
					ДатаНачалаСобытия = Дата(0)
				Иначе
					ДатаНачалаСобытия = Регистратор.ДокОснование.ДатаУвольнения
				КонецЕсли; 
			ИначеЕсли Регистратор.ВидОтпуска = ВидРасчета.КомпенсацияОтпускаСверх28дней тогда
				ДатаНачалаСобытия = Регистратор.ДатаДок;
			Иначе
				ДатаНачалаСобытия = Регистратор.Начало;
			КонецЕсли;
			
			СписокСумм = глСуммаСреднегоЗаработкаОтпуска(Сотрудник, ДатаНачалаСобытия, Регистратор.ТипРасчетаОтпуска, Регистратор.ТипРасчетаДополнительногоОтпуска, ТабличнаяЧасть, ?(Регистратор.КоличествоМесяцев = 1, 3, 12), Регистратор.ИспользоватьСреднеЧасовойЗаработок);
			
			Если ПлановыеПоказатели &lt;&gt; 1 Тогда
				Если (ВР = ВидРасчета.ОтпускДополнительный) Тогда
					РегистрРасчета.ДополнительныеДанные	= СписокСумм.Получить("СуммаСреднегоЗаработкаДополнительного");
				Иначе
					РегистрРасчета.ДополнительныеДанные	= СписокСумм.Получить("СуммаСреднегоЗаработка");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ВидПВР &lt;&gt; "Удержания" Тогда
			Если (ВР = ВидРасчета.ОтпускДополнительный) Тогда
				РегистрРасчета.ОплаченоДнейЧасов	= Регистратор.КоличествоДнейОтпуска;
			Иначе
				РегистрРасчета.ОплаченоДнейЧасов	= Регистратор.КоличествоДнейДополнительногоОтпуска;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли (Регистратор.Вид() = "ПриказНаОплатуПоСреднему") И (ПлановыеПоказатели &lt;&gt; 1) Тогда
		ТабличнаяЧасть = СоздатьОбъект("ТаблицаЗначений");
		
		Регистратор.ВыгрузитьТабличнуюЧасть(ТабличнаяЧасть);
		
		Если (Регистратор.ПричинаОтсутствия = Перечисление.ОснованияОплатыПоСреднему.ЗаработокНаВремяТрудоустройства) или (Регистратор.ПричинаОтсутствия = Перечисление.ОснованияОплатыПоСреднему.ВыходноеПособие) Тогда
			Если Регистратор.ДокОснование.Вид() &lt;&gt; "ПриказОбУвольнении" Тогда
				ДатаНачалаСобытия = Дата(0)
			Иначе
				ДатаНачалаСобытия = Регистратор.ДокОснование.ДатаУвольнения
			КонецЕсли; 
		Иначе
			ДатаНачалаСобытия = Регистратор.Начало;
		КонецЕсли;
		
		ВидПВР = ОпределитьВидПВР(ВР);
		
		Если (ПлановыеПоказатели &lt;&gt; 1) И (ВидПВР = "ОсновныеНачисления") Тогда
			РегистрРасчета.ДополнительныеДанные = глСуммаСреднегоЗаработка(Сотрудник, ДатаНачалаСобытия, ТабличнаяЧасть, ?(Регистратор.КоличествоМесяцев=1,3,12));          
		КонецЕсли;
		
	ИначеЕсли Регистратор.Вид() = "ОтпускПоУходуЗаРебенком" Тогда
		Если ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФЗП Тогда
			РегистрРасчета.Показатель1				= Константа.ПособиеПоУходуДоТрехЛет.Получить(ДатаЗначения);
			
		Иначе
			РегистрРасчета.Показатель1				= Регистратор.СреднедневнойЗаработок;
			РегистрРасчета.Показатель2				= Регистратор.КоличествоДетей;
			РегистрРасчета.Показатель3				= Регистратор.ЕстьПервыйРебенок;
			Если ПлановыеПоказатели &lt;&gt; 1 Тогда
				РегистрРасчета.ДополнительныеДанные = Регистратор.СреднедневнойЗаработок;
			КонецЕсли;
			
		КонецЕсли;
			
	ИначеЕсли Регистратор.Вид() = "ИзменениеУсловийОплатыОтпускаПоУходуЗаРебенком" Тогда
		РегистрРасчета.Показатель2			= Регистратор.КоличествоДетей;
		РегистрРасчета.Показатель3			= Регистратор.ЕстьПервыйРебенок;
				
	КонецЕсли;

КонецЕсли;

Возврат РегистрРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьПроизводственныйКалендарь" ИспользуетсяПриЗагрузке="true">
			<Текст>Запрос = Новый Запрос;
Запрос.Текст =
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	РегламентированныйПроизводственныйКалендарь.Год
|ИЗ
|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
|ГДЕ
|	РегламентированныйПроизводственныйКалендарь.Год &gt;= 2001";
СуществующиеГода = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Год");

Объект			= РегистрыСведений.РегламентированныйПроизводственныйКалендарь.СоздатьНаборЗаписей();
НаборЗаписей	= РегистрыСведений.ПеренесенныеРабочиеДни.СоздатьНаборЗаписей();

ВидДняСуббота		= Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота;
ВидДняВоскресенье	= Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье;

Для ТекущийГод = 2001 По Год(ТекущаяДата()) Цикл
	Если СуществующиеГода.Найти(ТекущийГод) &lt;&gt; Неопределено Тогда
		Продолжить;
	КонецЕсли;
	
	ПроцедурыОбновленияИнформационнойБазы.ЗаполнитьПроизводственныйКалендарь(ТекущийГод);
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьРасчетыПоСтраховымВзносам" ИспользуетсяПриЗагрузке="true">
			<Текст>Объект.Записать();

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("Регистратор",	Объект.Ссылка);
Запрос.УстановитьПараметр("ДатаНачала",		ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());

Запрос.Текст =
"ВЫБРАТЬ
|	РасчетыПоСтраховымВзносам.Регистратор,
|	РасчетыПоСтраховымВзносам.ВидДвижения,
|	РасчетыПоСтраховымВзносам.Период,
|	РасчетыПоСтраховымВзносам.Организация,
|	РасчетыПоСтраховымВзносам.ВидПлатежа,
|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода,
|	СУММА(РасчетыПоСтраховымВзносам.ПФРСтраховая) КАК ПФРСтраховая,
|	СУММА(РасчетыПоСтраховымВзносам.ПФРНакопительная) КАК ПФРНакопительная,
|	СУММА(РасчетыПоСтраховымВзносам.ФСС) КАК ФСС,
|	СУММА(РасчетыПоСтраховымВзносам.ФФОМС) КАК ФФОМС,
|	СУММА(РасчетыПоСтраховымВзносам.ТФОМС) КАК ТФОМС,
|	СУММА(РасчетыПоСтраховымВзносам.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
|	СУММА(РасчетыПоСтраховымВзносам.ПФРПоДополнительномуТарифу) КАК ПФРПоДополнительномуТарифу,
|	СУММА(РасчетыПоСтраховымВзносам.ПФРНаДоплатуКПенсииШахтерам) КАК ПФРНаДоплатуКПенсииШахтерам,
|	РасчетыПоСтраховымВзносам.ОблагаетсяЕНВД,
|	СУММА(РасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
|	СУММА(РасчетыПоСтраховымВзносам.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
|	СУММА(РасчетыПоСтраховымВзносам.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу
|ИЗ
|	(ВЫБРАТЬ
|		СтраховыеВзносыИсчисленные.Регистратор КАК Регистратор,
|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
|		СтраховыеВзносыИсчисленные.Период КАК Период,
|		СтраховыеВзносыИсчисленные.ОбособленноеПодразделение КАК Организация,
|		ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК ВидПлатежа,
|		НАЧАЛОПЕРИОДА(СтраховыеВзносыИсчисленные.Период, МЕСЯЦ) КАК МесяцРасчетногоПериода,
|		СтраховыеВзносыИсчисленные.ПФРСтраховая + СтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД КАК ПФРСтраховая,
|		СтраховыеВзносыИсчисленные.ПФРНакопительная + СтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД КАК ПФРНакопительная,
|		СтраховыеВзносыИсчисленные.ФСС + СтраховыеВзносыИсчисленные.ФССЕНВД КАК ФСС,
|		СтраховыеВзносыИсчисленные.ФФОМС + СтраховыеВзносыИсчисленные.ФФОМСЕНВД КАК ФФОМС,
|		СтраховыеВзносыИсчисленные.ТФОМС + СтраховыеВзносыИсчисленные.ТФОМСЕНВД КАК ТФОМС,
|		СтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
|		СтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу КАК ПФРПоДополнительномуТарифу,
|		СтраховыеВзносыИсчисленные.ПФРНаДоплатуКПенсииШахтерам КАК ПФРНаДоплатуКПенсииШахтерам,
|		ЛОЖЬ КАК ОблагаетсяЕНВД,
|		СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
|		СтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
|		СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу + СтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД КАК ПФРПоСуммарномуТарифу
|	ИЗ
|		РегистрНакопления.СтраховыеВзносыИсчисленные КАК СтраховыеВзносыИсчисленные
|	ГДЕ
|		СтраховыеВзносыИсчисленные.Регистратор = &amp;Регистратор
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		Пособия.Регистратор,
|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
|		Пособия.Период,
|		Пособия.Организация,
|		ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию),
|		НАЧАЛОПЕРИОДА(Пособия.Период, МЕСЯЦ),
|		0,
|		0,
|		ВЫБОР
|			КОГДА НЕ Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев))
|				ТОГДА Пособия.СуммаВсего
|			ИНАЧЕ 0
|		КОНЕЦ,
|		0,
|		0,
|		ВЫБОР
|			КОГДА Пособия.ВидПособияСоциальногоСтрахования В (ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьНесчастныйСлучай), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.НетрудоспособностьПрофзаболевание), ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныйОтпускПослеНесчастныхСлучаев))
|				ТОГДА Пособия.СуммаВсего
|			ИНАЧЕ 0
|		КОНЕЦ,
|		0,
|		0,
|		Пособия.ОблагаетсяЕНВД,
|		0,
|		0,
|		0
|	ИЗ
|		РегистрНакопления.ПособияСоциальномуСтрахованию КАК Пособия
|	ГДЕ
|		Пособия.Регистратор = &amp;Регистратор
|		И Пособия.ВидПособияСоциальногоСтрахования &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ПустаяСсылка)
|		И Пособия.Период &gt;= &amp;ДатаНачала
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		Пособия.Регистратор,
|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
|		Пособия.Период,
|		Пособия.Организация,
|		ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.РасходыПоСтрахованию),
|		НАЧАЛОПЕРИОДА(Пособия.Период, МЕСЯЦ),
|		0,
|		0,
|		Пособия.СуммаВсего,
|		0,
|		0,
|		0,
|		0,
|		0,
|		Пособия.ОблагаетсяЕНВД,
|		0,
|		0,
|		0
|	ИЗ
|		РегистрНакопления.ПособияПоУходуЗаРебенкомДоПолутораЛет КАК Пособия
|	ГДЕ
|		Пособия.Регистратор = &amp;Регистратор
|		И Пособия.Период &gt;= &amp;ДатаНачала) КАК РасчетыПоСтраховымВзносам
|
|СГРУППИРОВАТЬ ПО
|	РасчетыПоСтраховымВзносам.Период,
|	РасчетыПоСтраховымВзносам.Регистратор,
|	РасчетыПоСтраховымВзносам.Организация,
|	РасчетыПоСтраховымВзносам.ОблагаетсяЕНВД,
|	РасчетыПоСтраховымВзносам.ВидПлатежа,
|	РасчетыПоСтраховымВзносам.МесяцРасчетногоПериода,
|	РасчетыПоСтраховымВзносам.ВидДвижения";

Объект.Движения.РасчетыПоСтраховымВзносам.Загрузить(Запрос.Выполнить().Выгрузить());</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьСписокНепереносимыхВР" ИспользуетсяПриЗагрузке="false">
			<Текст>СписокНепереносимыхВР = СоздатьОбъект("СписокЗначений");
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.Возврат);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ВозвратНДФЛ);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ВозвратНДФЛпоСтавке35);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ВозвратНДФЛсДивидендов);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ВыплатаЗарплаты);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.Вытесняющий);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.КомпенсацияЗаПросрочкуЗарплаты);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.КомпенсацияНДФЛ);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.МатВыгодаПоВкладам);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.МатВыгодаПоСсудам);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НачальноеСальдоЗадолженность);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НачальноеСальдоОкругления);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НачальноеСальдоПереплатаНДФЛ);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НДФЛ);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НДФЛпо35процентов);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НДФЛпо35процентовУдержанный);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НДФЛсДивидендов);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НДФЛсДивидендовУдержанный);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.НДФЛУдержанный);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ОплатаПоДоговоруСПредпринимателем);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПогашениеСсудногоПроцента);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПогашениеСсудногоПроцентаКасса);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПогашениеСсуды);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПогашениеСсудыКасса);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПФР);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПФРНакопительнаяЧасть);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПФРНакопительнаяЧастьс2010);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПФРСтраховаяЧасть);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ПФРСтраховаяЧастьс2010);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ТФОМС);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ТФОМСс2010);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ФСС);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ФССс2010);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ФФОМС);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ФФОМСс2010);
СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ФСС_НС);

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ДивидендыСотрудников);
	СписокНепереносимыхВР.ДобавитьЗначение(ВидРасчета.ДивидендыУчредителей);
КонецЕсли;

Параметры.СписокНепереносимыхВР = СписокНепереносимыхВР;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуЕСНИсчисленный" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем МесяцыИнвалидности[12]; 

ТаблицаЕСНИсчисленный			= ИсходящиеДанные;
СписокСотров					= ВходящиеДанные;
ДоходыВычетыНалогиСотрудников	= Источник;
ДатаАктуальности				= Приемник;

ГодДанных = ДатаГод(ДатаАктуальности);

ВсегоСотров = СписокСотров.РазмерСписка();

Если ВсегоСотров &gt; 0 Тогда
	
	БуферЕСН = СоздатьОбъект("СписокЗначений");
	БуферПФР = СоздатьОбъект("СписокЗначений");
		 
	Для СчСотров = 1 По СписокСотров.РазмерСписка()  Цикл 
		
		СтрокаИтоговойТаблицы = (СчСотров-1)*12;
		ФизЛицо = СписокСотров.ПолучитьЗначение(СчСотров);     						
		
		НомерШкалыВзносов = глНомерШкалыСтраховыхВзносовПФР(ФизЛицо, ДатаАктуальности);
		Если НомерШкалыВзносов &lt; 0 Тогда
			Продолжить;
		КонецЕсли;
		
		БуферЕСН.УдалитьВсе();
		БуферПФР.УдалитьВсе();
		
		глЗаполнитьИндивидуальнуюКарточкуПоЕСН2004(ФизЛицо,ГодДанных,1,МесяцыИнвалидности,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,БуферЕСН);
		глЗаполнитьИндивидуальнуюКарточкуПоОПС(ФизЛицо,ГодДанных,1,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,БуферПФР);
		
		Если (БуферЕСН.РазмерСписка() &lt;&gt; 0) или (БуферПФР.РазмерСписка() &lt;&gt; 0) Тогда
			
			Для СчМес = 1 По 12 Цикл 
				
				СчСтрок = ?(СтрДлина(СчМес)=1, "0"+СчМес, СчМес);
				
				ФедеральныйБюджет		= Число(Сокрлп(БуферЕСН.Получить("П" + СчСтрок + "13")));
				ФСС						= Число(Сокрлп(БуферЕСН.Получить("П" + СчСтрок + "14")));
				ФФОМС					= Число(Сокрлп(БуферЕСН.Получить("П" + СчСтрок + "15")));
				ТФОМС					= Число(Сокрлп(БуферЕСН.Получить("П" + СчСтрок + "16")));
				
				ПримененнаяЛьготаФБ		= Число(Сокрлп(БуферЕСН.Получить("П" + СчСтрок + "23")));
				ПримененнаяЛьготаФСС	= Число(Сокрлп(БуферЕСН.Получить("П" + СчСтрок + "23")));
				ПримененнаяЛьготаФОМС	= Число(Сокрлп(БуферЕСН.Получить("П" + СчСтрок + "23"))); 
				
				ПФРСтраховаяЕНВД		= Число(Сокрлп(БуферПФР.Получить("П209" + СчСтрок)));
				ПФРНакопительнаяЕНВД	= Число(Сокрлп(БуферПФР.Получить("П210" + СчСтрок)));
				
				ПФРСтраховая			= Число(Сокрлп(БуферПФР.Получить("П109" + СчСтрок)));
				ПФРНакопительная		= Число(Сокрлп(БуферПФР.Получить("П110" + СчСтрок)));
				
				Если (ФедеральныйБюджет&lt;&gt; 0) или (ФСС&lt;&gt; 0) или (ФФОМС&lt;&gt; 0) или (ТФОМС&lt;&gt; 0) 
					или (ПримененнаяЛьготаФБ&lt;&gt; 0) или (ПримененнаяЛьготаФСС&lt;&gt; 0) или (ПримененнаяЛьготаФОМС&lt;&gt; 0)
					или (ПФРСтраховаяЕНВД&lt;&gt; 0) или (ПФРНакопительнаяЕНВД&lt;&gt; 0)
					или (ПФРСтраховая&lt;&gt; 0) или (ПФРНакопительная&lt;&gt; 0) Тогда
						
					ЕстьУСН = глЕстьУСН(Дата(ГодДанных,СчМес,1));
				
					ТаблицаЕСНИсчисленный.НоваяСтрока();
					ТаблицаЕСНИсчисленный.Период				= Дата(ГодДанных,СчМес,1);
					ТаблицаЕСНИсчисленный.Физлицо				= ФизЛицо;
				
					ТаблицаЕСНИсчисленный.ФедеральныйБюджет		= ?(ЕстьУСН = 1, 0, ФедеральныйБюджет);
					ТаблицаЕСНИсчисленный.ФСС					= ?(ЕстьУСН = 1, 0, ФСС);
					ТаблицаЕСНИсчисленный.ФФОМС					= ?(ЕстьУСН = 1, 0, ФФОМС);
					ТаблицаЕСНИсчисленный.ТФОМС					= ?(ЕстьУСН = 1, 0, ТФОМС);
					
					ТаблицаЕСНИсчисленный.ПримененнаяЛьготаФБ	= ?(ЕстьУСН = 1, 0, ПримененнаяЛьготаФБ);
					ТаблицаЕСНИсчисленный.ПримененнаяЛьготаФСС	= ?(ЕстьУСН = 1, 0, ПримененнаяЛьготаФСС);
					ТаблицаЕСНИсчисленный.ПримененнаяЛьготаФОМС	= ?(ЕстьУСН = 1, 0, ПримененнаяЛьготаФОМС); 
					
					ТаблицаЕСНИсчисленный.ПФРСтраховаяЕНВД		= ПФРСтраховаяЕНВД;
					ТаблицаЕСНИсчисленный.ПФРНакопительнаяЕНВД	= ПФРНакопительнаяЕНВД;
					
					ТаблицаЕСНИсчисленный.ПФРСтраховая			= ПФРСтраховая + ПФРСтраховаяЕНВД;
					ТаблицаЕСНИсчисленный.ПФРНакопительная      = ПФРНакопительная + ПФРНакопительнаяЕНВД;
					
				КонецЕсли;
					
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуЕСННачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник						= ИсходящиеДанные;
Физлицо							= ВходящиеДанные;
ПериодРегистрации				= Источник;
ПериодДействия					= Приемник;
ПериодДействияНачало			= ТипПриемника;
ПериодДействияКонец				= Значение;
Результат						= Выражение;
Скидка							= Пусто;
КодДоходаЕСН					= ВыборкаДанных;
ВР								= Объект;
ОблагаетсяЕНВД					= КоллекцияОбъектов;
ГрафикРаботы					= ОбъектКоллекции;
ВидУчетаВремени					= ИмяПКО;
ДокументОснование				= ИмяПКОВидСубконто;
НомерСтрокиДокумента			= НомерПКО;
Сторно							= НомерПКС;
ВремТаблицаЕСННачисления		= Правило;

Если ВР = ВидРасчета.ЛицензионныеВыплаты Тогда
	Возврат 0;
КонецЕсли;
	
Если ПустоеЗначение(ДокументОснование) = 1 Тогда
	ДокументОснование = ПолучитьПустоеЗначение("Документ");
КонецЕсли;

ВремТаблицаЕСННачисления.НоваяСтрока();
ВремТаблицаЕСННачисления.Сотрудник				= Сотрудник;
ВремТаблицаЕСННачисления.Физлицо				= Физлицо;
ВремТаблицаЕСННачисления.ПериодРегистрации		= ПериодРегистрации;
ВремТаблицаЕСННачисления.ПериодДействия			= ПериодДействия;
ВремТаблицаЕСННачисления.ПериодДействияНачало	= ПериодДействияНачало;
ВремТаблицаЕСННачисления.ПериодДействияКонец	= ПериодДействияКонец;
ВремТаблицаЕСННачисления.Результат				= Результат;
ВремТаблицаЕСННачисления.Скидка					= Скидка;
ВремТаблицаЕСННачисления.КодДоходаЕСН			= КодДоходаЕСН; 
ВремТаблицаЕСННачисления.ВидРасчета				= ВР;
ВремТаблицаЕСННачисления.ОблагаетсяЕНВД			= ОблагаетсяЕНВД;
ВремТаблицаЕСННачисления.ГрафикРаботы			= ГрафикРаботы;
ВремТаблицаЕСННачисления.ВидУчетаВремени		= ВидУчетаВремени;
ВремТаблицаЕСННачисления.ДокументОснование		= ДокументОснование;
ВремТаблицаЕСННачисления.НомерСтрокиДокумента	= НомерСтрокиДокумента;
ВремТаблицаЕСННачисления.Сторно					= Сторно;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуЕСНСведенияОДоходах" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник						= ИсходящиеДанные;
Период							= ВходящиеДанные;
Результат						= Источник;
Скидка							= Приемник;
КодДоходаЕСН					= ТипПриемника;
ОблагаетсяЕНВД					= Значение;
ВремТаблицаЕСНСведенияОДоходах	= Выражение;
ДокументОснование				= Пусто;

Если ПустоеЗначение(ДокументОснование) = 1 Тогда
	ДокументОснование = ПолучитьПустоеЗначение("Документ");
КонецЕсли;	

ВремТаблицаЕСНСведенияОДоходах.НоваяСтрока();
ВремТаблицаЕСНСведенияОДоходах.Физлицо				= Сотрудник;
ВремТаблицаЕСНСведенияОДоходах.Период				= Период;
ВремТаблицаЕСНСведенияОДоходах.Результат			= Результат;
ВремТаблицаЕСНСведенияОДоходах.Скидка				= Скидка;
ВремТаблицаЕСНСведенияОДоходах.КодДоходаЕСН			= КодДоходаЕСН;
ВремТаблицаЕСНСведенияОДоходах.ОблагаетсяЕНВД		= ОблагаетсяЕНВД;
ВремТаблицаЕСНСведенияОДоходах.ДокументОснование	= ДокументОснование;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуЗаработкиПолучателейПособияПоУходу" ИспользуетсяПриЗагрузке="false">
			<Текст>Период					 							= ИсходящиеДанные;
ОблагаетсяЕНВД			 							= ВходящиеДанные;
Физлицо					 							= Источник;
Сотрудник			 								= Приемник;
РазмерСреднегоЗаработка  							= ТипПриемника;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком	= Значение;

ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком.НоваяСтрока();
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком.Период					= Период;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком.ОблагаетсяЕНВД			= ОблагаетсяЕНВД;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком.Физлицо					= Физлицо;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком.Сотрудник 	 	 		= Сотрудник;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком.РазмерСреднегоЗаработка	= РазмерСреднегоЗаработка;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц" ИспользуетсяПриЗагрузке="false">
			<Текст>ФизЛицо										= ИсходящиеДанные;
КодВычетаИмущественный						= ВходящиеДанные;
Год											= Источник;
Период										= Приемник;
Размер										= ТипПриемника; 
ПодразделениеОрганизации					= Значение;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц	= Выражение;

ОКАТО	= "";
ОКТМО   = "";
КПП		= "";
Если ПустоеЗначение(ПодразделениеОрганизации) = 0 Тогда
	ТаблицаКодовОКАТО	= Параметры.ТаблицаКодовОКАТО;
	ТаблицаКодовОКТМО	= Параметры.ТаблицаКодовОКТМО;
	НомСтроки = 0;
	Если ТаблицаКодовОКАТО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКАТО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКАТО = ТаблицаКодовОКАТО.ОКАТО;
		КПП   = ТаблицаКодовОКАТО.КПП;
	КонецЕсли;
	Если ТаблицаКодовОКТМО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКТМО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКТМО = ТаблицаКодовОКТМО.ОКТМО;
		КПП   = ТаблицаКодовОКТМО.КПП;
	КонецЕсли;
КонецЕсли;

ВремТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяСтрока();
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.ФизЛицо					= ФизЛицо;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Период						= Период;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.КодВычетаИмущественный		= КодВычетаИмущественный;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Год						= Год;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Размер						= Размер;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.ПодразделениеОрганизации	= ПодразделениеОрганизации;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.КодПоОКАТО					= ОКАТО;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.КодПоОКТМО					= ОКТМО;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.КПП						= КПП;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДФЛПредоставленныеСтдВычетыФизЛиц" ИспользуетсяПриЗагрузке="false">
			<Текст>СписокФизлиц					= ИсходящиеДанные;
ДоходыВычетыНалогиСотрудников	= ВходящиеДанные;
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц = Источник;
ТабКодов = Приемник;
Год								= ТипПриемника;


Если Год &gt;= 2015 Тогда
	ИмяКолонки = "Код2015";
ИначеЕсли Год &gt;= 2011 Тогда
	ИмяКолонки = "Код2011";
ИначеЕсли Год &gt;= 2009 Тогда
	ИмяКолонки = "Код2009";
ИначеЕсли Год &gt;= 2008 Тогда
	ИмяКолонки = "Код2008";
Иначе
	ИмяКолонки = "Код2017";
КонецЕсли;

ОкончаниеГода = Дата(Год,12,31);
НачалоГода    = Дата(Год,1,1);

ВсегоСотров = СписокФизлиц.РазмерСписка();
НомерРелизаИБ		= Число(СтрЗаменить(Константа.НомерРелиза, ".",""));

Если ВсегоСотров &gt; 0 Тогда
	
	БуферРазделов=СоздатьОбъект("СписокЗначений");
		 
	Для СчСотров = 1 По ВсегоСотров  Цикл 
		
		СтрокаИтоговойТаблицы = (СчСотров-1)*12;
		ФизЛицо = СписокФизлиц.ПолучитьЗначение(СчСотров);
		
		ВычетыФизлица = "";
		
		БуферРазделов.УдалитьВсе(); 
		ПоследнийМесяц = 0;
		
		// заполняем буферы
		Если (Год&gt;=2011) и (НомерРелизаИБ &gt;= 770318) Тогда 
			
			ТаблицаВычетов = ПолучитьСписокСтандартныхВычетов(ФизЛицо,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Год, ПоследнийМесяц);  
			

			Если (ТаблицаВычетов.КоличествоСтрок() &lt;&gt; 0) Тогда 
				
				Для СчМес = 1 По ПоследнийМесяц Цикл 
					
					ПериодРегистрацииДохода		= Дата(Год,СчМес,1);
					ПодразделениеОрганизации = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"Подразделение");
					МесяцНалоговогоПериода		= Дата(Год,СчМес,1); 
					
					НомСтроки = "";
					Если ТаблицаВычетов.НайтиЗначение(СчМес,НомСтроки,"Месяц")&gt;0 Тогда
					    
						Для СчСтрок = НомСтроки По ТаблицаВычетов.КоличествоСтрок() Цикл 
							
							ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СчСтрок);
							
							Если ТаблицаВычетов.Месяц&lt;&gt;СчМес Тогда
							    Прервать;
							КонецЕсли;
							
							Если ТаблицаВычетов.СуммаВычета&lt;&gt;0 Тогда
								
								ПримененныйВычет			= ТаблицаВычетов.СуммаВычета;
								КодВычета					= ТаблицаВычетов.КодВычета;
								
								Если (Год &gt;= 2016) И (Найти("117,120,125",СОКРЛП(КодВычета))&gt;1) Тогда
									
									Если ПустоеЗначение(ВычетыФизлица)=1 Тогда
										
										ВычетыФизлица = СоздатьОбъект("СписокЗначений");
										СпрВычетыСотрудников = СоздатьОбъект("Справочник.ВычетыСотрудниковПоНДФЛ");
										СпрВычетыСотрудников.ИспользоватьВладельца(ФизЛицо);
										СпрВычетыСотрудников.ВыбратьЭлементы();
										Пока СпрВычетыСотрудников.ПолучитьЭлемент()=1 Цикл
											Если (СпрВычетыСотрудников.ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей) И (СпрВычетыСотрудников.ДатаНачала &lt;= ОкончаниеГода) и ((СпрВычетыСотрудников.ДатаОкончания &gt;= НачалоГода) или (ПустоеЗначение(СпрВычетыСотрудников.ДатаОкончания)=1)) Тогда
												ВычетыФизлица.Установить(СпрВычетыСотрудников.ВидВычета.КодДляОтчетности2015,Лев(СпрВычетыСотрудников.ВидВычета.Код,3) + " (о)");	
											КонецЕсли;
										КонецЦикла;	
										
									КонецЕсли;
									
									НовыйКод = ВычетыФизлица.Получить(КодВычета);
									
								Иначе
									
									НовыйКод = КодВычета;
									НомСтроки = "";
									ТабКодов.НайтиЗначение(КодВычета,НомСтроки,ИмяКолонки);
									Если ПустоеЗначение(НомСтроки)&lt;&gt;1 Тогда
										НовыйКод = ТабКодов.ПолучитьЗначение(НомСтроки,"Код");
									КонецЕсли;
									
								КонецЕсли;	
								 
								КодВычета = НовыйКод;
								
								ЗаполнитьТаблицуПредоставленныхВычетов(
								ФизЛицо,
								ПериодРегистрацииДохода,
								ПодразделениеОрганизации,
								МесяцНалоговогоПериода,
								КодВычета,
								ПримененныйВычет,
								ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц); 
								
							КонецЕсли;

						КонецЦикла;	
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе 
			Если Год&gt;=2009 Тогда
				глЗаполнитьРазделыНК2009(ФизЛицо,"",Год,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,БуферРазделов,БуферРазделов,БуферРазделов,БуферРазделов,БуферРазделов,ПоследнийМесяц);
			Иначе
				глЗаполнитьРазделыНК2005(ФизЛицо,"",Год,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,БуферРазделов,БуферРазделов,БуферРазделов,БуферРазделов,БуферРазделов,ПоследнийМесяц);
			КонецЕсли;
			
			Если (БуферРазделов.РазмерСписка() &lt;&gt; 0) Тогда
				
				Для СчМес = 1 По ПоследнийМесяц Цикл 
					
					ПериодРегистрацииДохода		= Дата(Год,СчМес,1);
					ПодразделениеОрганизации = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"Подразделение");
					МесяцНалоговогоПериода		= Дата(Год,СчМес,1);
					
					СчСтрок = ?(СтрДлина(СчМес)=1, "0"+СчМес, СчМес);
					
					
					Если Год&gt;=2009 Тогда
						
						Сумма103 = Число(Сокрлп(БуферРазделов.Получить("СВМес3" + СчСтрок))); 
						Если Сумма103&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма103;
							КодВычета					= "103";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма104 = Число(Сокрлп(БуферРазделов.Получить("СВМес4" + СчСтрок)));
						Если Сумма104&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма104;
							КодВычета					= "104";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма105 = Число(Сокрлп(БуферРазделов.Получить("СВМес5" + СчСтрок)));
						Если Сумма105&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма105;
							КодВычета					= "105";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма108 = Число(Сокрлп(БуферРазделов.Получить("СВМес8" + СчСтрок)));
						Если Сумма108&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма108;
							КодВычета					= "114";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма109 = Число(Сокрлп(БуферРазделов.Получить("СВМес9" + СчСтрок))); 
						Если Сумма109&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма109;
							КодВычета					= "117";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма110 = Число(Сокрлп(БуферРазделов.Получить("СВМес10" + СчСтрок)));
						Если Сумма110&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма110;
							КодВычета					= "118";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма111 = Число(Сокрлп(БуферРазделов.Получить("СВМес11" + СчСтрок)));
						Если Сумма111&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма111;
							КодВычета					= "122";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма112 = Число(Сокрлп(БуферРазделов.Получить("СВМес12" + СчСтрок)));
						Если Сумма112&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма112;
							КодВычета					= "121";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма113 = Число(Сокрлп(БуферРазделов.Получить("СВМес13" + СчСтрок)));
						Если Сумма113&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма113;
							КодВычета					= "125";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						
					Иначе
						
						Сумма101 = Число(Сокрлп(БуферРазделов.Получить("СВМес1" + СчСтрок)));
						Если Сумма101&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма101;
							КодВычета					= "114";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма102 = Число(Сокрлп(БуферРазделов.Получить("СВМес2" + СчСтрок)));
						Если Сумма102&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма102;
							КодВычета					= "118";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма103 = Число(Сокрлп(БуферРазделов.Получить("СВМес3" + СчСтрок)));
						Если Сумма103&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма103;
							КодВычета					= "103";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма104 = Число(Сокрлп(БуферРазделов.Получить("СВМес4" + СчСтрок)));
						Если Сумма104&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма104;
							КодВычета					= "104";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма105 = Число(Сокрлп(БуферРазделов.Получить("СВМес5" + СчСтрок))); 
						Если Сумма105&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма105;
							КодВычета					= "105";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма106 = Число(Сокрлп(БуферРазделов.Получить("СВМес6" + СчСтрок)));
						Если Сумма106&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма106;
							КодВычета					= "117";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						Сумма107 = Число(Сокрлп(БуферРазделов.Получить("СВМес7" + СчСтрок)));
						Если Сумма107&lt;&gt;0 Тогда
							ПримененныйВычет			= Сумма107;
							КодВычета					= "121";
							ЗаполнитьТаблицуПредоставленныхВычетов(
							ФизЛицо,
							ПериодРегистрацииДохода,
							ПодразделениеОрганизации,
							МесяцНалоговогоПериода,
							КодВычета,
							ПримененныйВычет,
							ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц);    
						КонецЕсли;
						
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДФЛРасчеты09" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник						= ИсходящиеДанные;
ВремТаблицаНДФЛРасчетыСБюджетом	= ВходящиеДанные;
ПериодРегистрации				= Источник;
МесяцНалоговогоПериода			= Приемник;
СуммаИ_9						= ТипПриемника;
СуммаУ_9						= Значение;
СуммаВ_9						= Выражение;
СуммаВз_9						= Пусто;
ИсчисленоИзЗарплаты             = ВыборкаДанных;

Если (СуммаИ_9 = 0) и (СуммаУ_9 = 0) и (СуммаВ_9 = 0)  и (СуммаВз_9 = 0) Тогда
	Возврат 0;
КонецЕсли;


Если СуммаИ_9 &lt;&gt;0 Тогда 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаИ_9;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Начисление"; 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка09";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= ИсчисленоИзЗарплаты;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 9% 
	
КонецЕсли;

Если СуммаУ_9 &lt;&gt;0 Тогда 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаУ_9;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Удержание";
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка09";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 9% 
	
КонецЕсли;

Если СуммаВ_9 &lt;&gt;0 Тогда 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВ_9;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ПереданоНаВзыскание"; 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка09";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 9% 
	
КонецЕсли;

Если СуммаВз_9 &lt;&gt;0 Тогда 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВз_9;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ВозвратНалога"; 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка09";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 9% 
	
КонецЕсли;

Возврат 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДФЛРасчеты13" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник						= ИсходящиеДанные;
ДоходыВычетыНалогиСотрудников	= ВходящиеДанные;
ВремТаблицаНДФЛРасчетыСБюджетом	= Источник;
ПериодРегистрации				= Приемник;
МесяцНалоговогоПериода			= ТипПриемника;
ПодразделениеОрганизации		= Значение;
СуммаИ_13						= Выражение;
СуммаУ_13						= Пусто;
СуммаВ_13						= ВыборкаДанных;
СуммаВз_13						= Объект;
ИсчисленоИзЗарплаты             = КоллекцияОбъектов;

Если (СуммаИ_13 = 0) и (СуммаУ_13 = 0) и (СуммаВ_13 = 0)  и (СуммаВз_13 = 0) Тогда
	Возврат 0;
КонецЕсли;	

НадоРаспределять	= Параметры.РаспределятьПоИсточникамФинансирования;

ОКАТО	= "";
ОКТМО   = "";
КПП		= "";
Если ПустоеЗначение(ПодразделениеОрганизации) = 0 Тогда
	ТаблицаКодовОКАТО	= Параметры.ТаблицаКодовОКАТО;
	ТаблицаКодовОКТМО	= Параметры.ТаблицаКодовОКТМО;
	НомСтроки = 0;
	Если ТаблицаКодовОКАТО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКАТО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКАТО = ТаблицаКодовОКАТО.ОКАТО;
		КПП   = ТаблицаКодовОКАТО.КПП;
	КонецЕсли;
	Если ТаблицаКодовОКТМО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКТМО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКТМО = ТаблицаКодовОКТМО.ОКТМО;
		КПП   = ТаблицаКодовОКТМО.КПП;
	КонецЕсли;
КонецЕсли;

ТаблицаРаспределения = "";
ВсегоРазмерРаспределения = 0;
Если НадоРаспределять = 1 Тогда
	
	ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
	//Получим распределение НДФЛ, в нем сразу заполним СтатьяФинансирования и КОСГУ
	
	ЖрнЗарплата.ВыбратьПериодПоОбъекту(Сотрудник,ПериодРегистрации);
	Пока ЖрнЗарплата.ПолучитьЗапись()=1 Цикл 
		Если ЖрнЗарплата.Результат = 0 Тогда
			Продолжить;
		КонецЕсли;	
	
		Если ЖрнЗарплата.ВидРасч = ВидРасчета.НДФЛ Тогда
			ТаблицаРаспределения = ВыполнитьРаспределениеНДФЛ(ЖрнЗарплата, ДоходыВычетыНалогиСотрудников);
			ВсегоРазмерРаспределения = ТаблицаРаспределения.Итог("Сумма");
			Прервать;
		КонецЕсли;
		
	КонецЦикла; // цикл по записям журнала расчетов в выбранном месяце
	
КонецЕсли;

Если (ТипЗначения(ТаблицаРаспределения) &lt;&gt; 100) или (ВсегоРазмерРаспределения = 0) Тогда
	
	СтатьяФинансирования		= "Бюджетное финансирование";
	СтатьяФинансированияКВД		= 1; 
	СтатьяФинансированияЕНВД	= 0;
	СтатьяФинансированияБаланс	= ПолучитьПустоеЗначение("Справочник.Балансодержатели");
	СтатьяФинансированияКБК		= "00000000000000000";
	КОСГУ						= "211";
	
	Если СуммаИ_13 &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаИ_13;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Начисление"; 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= ИсчисленоИзЗарплаты;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= СтатьяФинансирования;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= СтатьяФинансированияКВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= СтатьяФинансированияЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= СтатьяФинансированияБаланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= СтатьяФинансированияКБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= КОСГУ;
		
	КонецЕсли;
	
	Если СуммаУ_13 &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаУ_13;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Удержание";
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= СтатьяФинансирования;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= СтатьяФинансированияКВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= СтатьяФинансированияЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= СтатьяФинансированияБаланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= СтатьяФинансированияКБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= КОСГУ;
		
	КонецЕсли;
	
	Если СуммаВ_13 &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВ_13;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ПереданоНаВзыскание"; 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= СтатьяФинансирования;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= СтатьяФинансированияКВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= СтатьяФинансированияЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= СтатьяФинансированияБаланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= СтатьяФинансированияКБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= КОСГУ;
		
	КонецЕсли;
	
	Если СуммаВз_13 &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВз_13;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ВозвратНалога"; 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= СтатьяФинансирования;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= СтатьяФинансированияКВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= СтатьяФинансированияЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= СтатьяФинансированияБаланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= СтатьяФинансированияКБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= КОСГУ;
		
	КонецЕсли;
	
	Возврат 0;
	
КонецЕсли;

КолСтрок = ТаблицаРаспределения.КоличествоСтрок();
СуммаИ_13_Накоплено = 0;
СуммаУ_13_Накоплено = 0;
СуммаВ_13_Накоплено = 0;
СуммаВз_13_Накоплено = 0;
КоэффициентИ_13  = СуммаИ_13 / ВсегоРазмерРаспределения;
КоэффициентУ_13  = СуммаУ_13 / ВсегоРазмерРаспределения;
КоэффициентВ_13  = СуммаВ_13 / ВсегоРазмерРаспределения;
КоэффициентВз_13 = СуммаВз_13 / ВсегоРазмерРаспределения;

Для Сч = 1 По КолСтрок Цикл             
	
	ТаблицаРаспределения.ПолучитьСтрокуПоНомеру(Сч);
	Сумма = ТаблицаРаспределения.Сумма;
	
	Если Сч = КолСтрок Тогда
		СуммаИ_13_ИФ = СуммаИ_13 - СуммаИ_13_Накоплено;
		СуммаУ_13_ИФ = СуммаУ_13 - СуммаУ_13_Накоплено;
		СуммаВ_13_ИФ = СуммаВ_13 - СуммаВ_13_Накоплено;
		СуммаВз_13_ИФ = СуммаВз_13 - СуммаВз_13_Накоплено;
	Иначе
		СуммаИ_13_ИФ = Окр(КоэффициентИ_13 * Сумма,2);
		СуммаИ_13_Накоплено = СуммаИ_13_Накоплено + СуммаИ_13_ИФ;
		
		СуммаУ_13_ИФ = Окр(КоэффициентУ_13 * Сумма,2);
		СуммаУ_13_Накоплено = СуммаУ_13_Накоплено + СуммаУ_13_ИФ;
		
		СуммаВ_13_ИФ = Окр(КоэффициентВ_13 * Сумма,2);
		СуммаВ_13_Накоплено = СуммаВ_13_Накоплено + СуммаВ_13_ИФ;
		
		СуммаВз_13_ИФ = Окр(КоэффициентВз_13 * Сумма,2);
		СуммаВз_13_Накоплено = СуммаВз_13_Накоплено + СуммаВз_13_ИФ;
	КонецЕсли;
	
	Если СуммаИ_13_ИФ &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаИ_13_ИФ;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Начисление"; 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= ИсчисленоИзЗарплаты;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= ТаблицаРаспределения.Наименование;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= ТаблицаРаспределения.КВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= ТаблицаРаспределения.ПодпадаетПодЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= ТаблицаРаспределения.Баланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= ТаблицаРаспределения.КБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= ТаблицаРаспределения.КОСГУ;
		
	КонецЕсли;
	
	Если СуммаУ_13_ИФ &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаУ_13_ИФ;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Удержание";
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= ТаблицаРаспределения.Наименование;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= ТаблицаРаспределения.КВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= ТаблицаРаспределения.ПодпадаетПодЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= ТаблицаРаспределения.Баланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= ТаблицаРаспределения.КБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= ТаблицаРаспределения.КОСГУ;
		
	КонецЕсли;
	
	Если СуммаВ_13_ИФ &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВ_13_ИФ;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ПереданоНаВзыскание"; 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= ТаблицаРаспределения.Наименование;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= ТаблицаРаспределения.КВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= ТаблицаРаспределения.ПодпадаетПодЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= ТаблицаРаспределения.Баланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= ТаблицаРаспределения.КБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= ТаблицаРаспределения.КОСГУ;
		
	КонецЕсли;
	
	Если СуммаВз_13_ИФ &lt;&gt;0 Тогда 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
		ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВз_13_ИФ;
		ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ВозвратНалога"; 
		
		ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
		ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
		ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка13";
		ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
		ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
		ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
		ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
		ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= "";// заполняем для доходов по ставке 35% 
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Наименование					= ТаблицаРаспределения.Наименование;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КВД							= ТаблицаРаспределения.КВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_ПодпадаетПодЕНВД				= ТаблицаРаспределения.ПодпадаетПодЕНВД;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_Баланс						= ТаблицаРаспределения.Баланс;
		ВремТаблицаНДФЛРасчетыСБюджетом.СФ_КБК							= ТаблицаРаспределения.КБК;
		ВремТаблицаНДФЛРасчетыСБюджетом.КОСГУ							= ТаблицаРаспределения.КОСГУ;
		
	КонецЕсли;
	
КонецЦикла;

Возврат 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДФЛРасчеты35" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник						= ИсходящиеДанные;
ВремТаблицаНДФЛРасчетыСБюджетом	= ВходящиеДанные;
ПодразделениеОрганизации		= Источник;
ПериодРегистрации				= Приемник;
МесяцНалоговогоПериода			= ТипПриемника;
СуммаИ_35						= Значение;
СуммаУ_35						= Выражение;
СуммаВ_35						= Пусто; 
СуммаВз_35						= ВыборкаДанных;
КодДохода                       = Объект;
ИсчисленоИзЗарплаты             = КоллекцияОбъектов;

Если (СуммаИ_35 = 0) и (СуммаУ_35 = 0) и (СуммаВ_35 = 0) и (СуммаВз_35 = 0) Тогда
	Возврат 0;
КонецЕсли;


ОКАТО	= "";
ОКТМО   = "";
КПП		= "";
Если ПустоеЗначение(ПодразделениеОрганизации) = 0 Тогда
	ТаблицаКодовОКАТО	= Параметры.ТаблицаКодовОКАТО;
	ТаблицаКодовОКТМО	= Параметры.ТаблицаКодовОКТМО;
	НомСтроки = 0;
	Если ТаблицаКодовОКАТО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКАТО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКАТО = ТаблицаКодовОКАТО.ОКАТО;
		КПП   = ТаблицаКодовОКАТО.КПП;
	КонецЕсли;
	Если ТаблицаКодовОКТМО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКТМО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКТМО = ТаблицаКодовОКТМО.ОКТМО;
		КПП   = ТаблицаКодовОКТМО.КПП;
	КонецЕсли;
КонецЕсли;

Если СуммаИ_35 &lt;&gt;0 Тогда 
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаИ_35;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Начисление"; 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка35";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= ИсчисленоИзЗарплаты;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= КодДохода;// заполняем для доходов по ставке 35% 
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
	ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
КонецЕсли;

Если СуммаУ_35 &lt;&gt;0 Тогда 
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока();
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаУ_35;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "Удержание";
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка35";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= КодДохода;// заполняем для доходов по ставке 35%
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
	ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
КонецЕсли;

Если СуммаВ_35 &lt;&gt;0 Тогда 
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВ_35;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ПереданоНаВзыскание"; 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка35";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= КодДохода;// заполняем для доходов по ставке 35%
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
	ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
КонецЕсли;

Если СуммаВз_35 &lt;&gt;0 Тогда 
	ВремТаблицаНДФЛРасчетыСБюджетом.НоваяСтрока(); 
	ВремТаблицаНДФЛРасчетыСБюджетом.Налог							= СуммаВз_35;
	ВремТаблицаНДФЛРасчетыСБюджетом.ВидСтроки						= "ВозвратНалога"; 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Физлицо							= Сотрудник;
	ВремТаблицаНДФЛРасчетыСБюджетом.Период							= ПериодРегистрации;
	ВремТаблицаНДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента	= "Ставка35";
	ВремТаблицаНДФЛРасчетыСБюджетом.МесяцНалоговогоПериода			= МесяцНалоговогоПериода;
	ВремТаблицаНДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты				= 0;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодДохода						= КодДохода;// заполняем для доходов по ставке 35%
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКАТО						= ОКАТО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КодПоОКТМО						= ОКТМО;
	ВремТаблицаНДФЛРасчетыСБюджетом.КПП								= КПП;
	ВремТаблицаНДФЛРасчетыСБюджетом.ПодразделениеОрганизации		= ПодразделениеОрганизации;
КонецЕсли;

Возврат 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуНДФЛРасчетыСБюджетом" ИспользуетсяПриЗагрузке="false">
			<Текст>СписокФизлиц					= ИсходящиеДанные;
ДоходыВычетыНалогиСотрудников	= ВходящиеДанные;
ТаблицаНДФЛРасчетыСБюджетом		= Источник;
Год								= Приемник; 

Если Год&gt;=2011 Тогда
    КолонкаНДФЛу = "НУ1";
Иначе
	КолонкаНДФЛу = 10;
КонецЕсли;

ВремТаблицаНДФЛРасчетыСБюджетом = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаНДФЛРасчетыСБюджетом.Загрузить(ТаблицаНДФЛРасчетыСБюджетом); 

ТаблицаНДФЛ = СоздатьОбъект("ТаблицаЗначений");
ТаблицаНДФЛ.НоваяКолонка("МесяцРегистрации");
ТаблицаНДФЛ.НоваяКолонка("Сумма");
ТаблицаНДФЛ.НоваяКолонка("ПодразделениеОрганизации"); 

// обход списка сотрудников
ВсегоСотров = СписокФизлиц.РазмерСписка();
Для СчСотров = 1 По ВсегоСотров Цикл 
	
	ВремТаблицаНДФЛРасчетыСБюджетом.УдалитьСтроки();
	ТаблицаНДФЛ.УдалитьСтроки();
	
	Сотрудник = СписокФизлиц.ПолучитьЗначение(СчСотров);
	
	СтрокаИтоговойТаблицы = "";	//сюда вернем номер первой строки по сотруднику
	Если ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(Сотрудник)+"01",СтрокаИтоговойТаблицы,1) = 0 Тогда
		// в таблице нет данных по сотруднику
		Продолжить;
	КонецЕсли;
	
	 
	СписокПредыдущегоМесяца = "";
	ПоследнийМесяц = 0;
	
	СуммаРазница = 0; 
	
	Для Сч = 1 По 12 Цикл	
		
		// во 2 колонке - таблица доходов
		ТаблицаДоходов = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1+Сч,2);
		Если ТипЗначения(ТаблицаДоходов) = 0 Тогда
			Продолжить
		КонецЕсли; 
	
		СписокДляСравнения = СоздатьОбъект("СписокЗначений");
		ТаблицаДоходов.Выгрузить(СписокДляСравнения,,,"1,2,3"); 
		СписокДляСравнения.ДобавитьЗначение(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1+Сч,4));
		Для СчК = 10 По 12 Цикл
			СписокДляСравнения.ДобавитьЗначение(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1+Сч,СчК));
		КонецЦикла; 
		
		Если Сч&gt;1  Тогда
			Если  глСпискиИдентичны(СписокДляСравнения,СписокПредыдущегоМесяца) = 1 Тогда
				Продолжить
			Иначе
				СписокПредыдущегоМесяца = СписокДляСравнения; 
			КонецЕсли;
		Иначе
			СписокПредыдущегоМесяца = СписокДляСравнения; 
		КонецЕсли;
		
		ПериодРегистрации = Дата(Год,Сч,1);
		 
		ПодразделениеОрганизации = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,"Подразделение");
		
		// исчислено
		СуммаИ_13Ж			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,4));
		СуммаИ_13К			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,21));
		СписокИсчислено13	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,"НР");
		// удержано
		СуммаУ_13			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,КолонкаНДФЛу)); 
		// взыскано
		СуммаВ_13			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,16));
		
		// возвращено
		СуммаВз_13			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,42));
		
		СуммаИ_9Ж			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,5));
		СуммаИ_9К			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,22));
		СуммаУ_9			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,11));
		СуммаВ_9			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,17));
		СуммаВз_9			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,43));
		
		СписокИзЧетырехНИЖ	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,6), ";") ;
		РазмерСпискаНИЖ		= СписокИзЧетырехНИЖ.РазмерСписка();
		СписокИзЧетырехНИК	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,23), ";") ;
		РазмерСпискаНИК		= СписокИзЧетырехНИК.РазмерСписка();
		СписокИзЧетырехНУ	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,12), ";") ;
		РазмерСпискаНУ		= СписокИзЧетырехНУ.РазмерСписка();			
		СписокИзЧетырехВЗ	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,18), ";") ;
		РазмерСпискаВЗ		= СписокИзЧетырехВЗ.РазмерСписка();	
		СписокИзЧетырехВЗв	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-1,44), ";") ;
		РазмерСпискаВЗв		= СписокИзЧетырехВЗ.РазмерСписка();
		
		Если Сч&gt;1 Тогда
		
			Если (ПоследнийМесяц + 1 &lt;= Сч - 1) Тогда 
				// исчислено
				СуммаИ_13Жп			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+ПоследнийМесяц-1,4));
				СуммаИ_13Кп			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+ПоследнийМесяц-1,21));
				// удержано
				СуммаУ_13п			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+ПоследнийМесяц-1,КолонкаНДФЛу));
				// взыскано
				СуммаВ_13п			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+ПоследнийМесяц-1,16));
				// возвращено
				СуммаВз_13п			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+ПоследнийМесяц-1,42)); 
				
			Иначе
				// исчислено
				СуммаИ_13Жп			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,4));
				СуммаИ_13Кп			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,21));
				// удержано
				СуммаУ_13п			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,КолонкаНДФЛу));
				// взыскано
				СуммаВ_13п			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,16));
				// возвращено
				СуммаВз_13п			= Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,42));
				
			КонецЕсли;
			
			// исчислено
			СуммаИ_13Ж	= СуммаИ_13Ж - СуммаИ_13Жп;
			СуммаИ_13К	= СуммаИ_13К - СуммаИ_13Кп;
			// удержано
			СуммаУ_13	= СуммаУ_13 - СуммаУ_13п;
			// взыскано
			СуммаВ_13	= СуммаВ_13 - СуммаВ_13п;
			// возвращено
			СуммаВз_13	= СуммаВз_13 - СуммаВз_13п;                                    
			
			СуммаИ_9Ж	= СуммаИ_9Ж - Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,5));
			СуммаИ_9К	= СуммаИ_9К - Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,22));
			СуммаУ_9	= СуммаУ_9 - Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,11));
			СуммаВ_9	= СуммаВ_9 - Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,17));
			СуммаВз_9	= СуммаВз_9 - Окр(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,43));
			
			СписокИзЧетырехНИ_1Ж	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,6), ";");
			РазмерСпискаНИ1Ж		= СписокИзЧетырехНИ_1Ж.РазмерСписка(); 
			СписокИзЧетырехНИ_1К	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,23), ";");
			РазмерСпискаНИ1К		= СписокИзЧетырехНИ_1К.РазмерСписка();
			СписокИзЧетырехНУ_1		= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,12), ";");
			РазмерСпискаНУ1			= СписокИзЧетырехНУ_1.РазмерСписка();				
			СписокИзЧетырехВЗ_1		= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,18), ";");
			РазмерСпискаВЗ1			= СписокИзЧетырехВЗ_1.РазмерСписка();
			СписокИзЧетырехВЗв_1	= глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Сч-2,44), ";");
			РазмерСпискаВЗв1		= СписокИзЧетырехВЗв_1.РазмерСписка();
			
		КонецЕсли;          
		
		ПоследнийМесяц = Сч;
			
		// НДФЛ по ставке 35%  
		Если (РазмерСпискаНИЖ&lt;&gt;0) или (РазмерСпискаНИК&lt;&gt;0) или (РазмерСпискаНУ&lt;&gt;0) или (СписокИзЧетырехВЗ&lt;&gt;0)  или (СписокИзЧетырехВЗв&lt;&gt;0)  Тогда 
			
			//СтрокаДоходовРаздела5 = "2610,1210,3020,2740";
			Для НомерДохода35 = 1 по Макс(РазмерСпискаНИЖ,РазмерСпискаНИК) Цикл
				
				НДФЛИсчисленныйЖ     = Число(СписокИзЧетырехНИЖ.ПолучитьЗначение(НомерДохода35));
				БылоНДФЛИсчисленныйЖ = ?(Сч=1,0,Число(СписокИзЧетырехНИ_1Ж.ПолучитьЗначение(НомерДохода35))); 
				НДФЛИсчисленныйЖ     = НДФЛИсчисленныйЖ - БылоНДФЛИсчисленныйЖ;
				
				НДФЛИсчисленныйК     = Число(СписокИзЧетырехНИК.ПолучитьЗначение(НомерДохода35));
				БылоНДФЛИсчисленныйК = ?(Сч=1,0,Число(СписокИзЧетырехНИ_1К.ПолучитьЗначение(НомерДохода35))); 
				НДФЛИсчисленныйК     = НДФЛИсчисленныйК - БылоНДФЛИсчисленныйК; 
				
				СуммаРазница = НДФЛИсчисленныйК - НДФЛИсчисленныйЖ;//сумма из 1-НДФЛ минус сумма из журнала расчетов
				
				НДФЛУдержанный     = ?(РазмерСпискаНУ &lt; НомерДохода35,0,Число(СписокИзЧетырехНУ.ПолучитьЗначение(НомерДохода35)));
				БылоНДФЛУдержанный = ?(Сч=1,0,?(РазмерСпискаНУ1 &lt; НомерДохода35,0,Число(СписокИзЧетырехНУ_1.ПолучитьЗначение(НомерДохода35))));
				НДФЛУдержанный     = НДФЛУдержанный - БылоНДФЛУдержанный;
				
				НДФЛКВзысканию     = ?(РазмерСпискаВЗ &lt; НомерДохода35,0,Число(СписокИзЧетырехВЗ.ПолучитьЗначение(НомерДохода35)));
				БылоНДФЛКВзысканию = ?(Сч=1,0,?(РазмерСпискаВЗ1 &lt; НомерДохода35,0,Число(СписокИзЧетырехВЗ_1.ПолучитьЗначение(НомерДохода35))));
				НДФЛКВзысканию 	   = НДФЛКВзысканию - БылоНДФЛКВзысканию;
				
				НДФЛВозврат     = ?(РазмерСпискаВЗв &lt; НомерДохода35,0,Число(СписокИзЧетырехВЗв.ПолучитьЗначение(НомерДохода35)));
				БылоНДФЛВозврат = ?(Сч=1,0,?(РазмерСпискаВЗв1 &lt; НомерДохода35,0,Число(СписокИзЧетырехВЗв_1.ПолучитьЗначение(НомерДохода35))));
				НДФЛВозврат 	   = НДФЛВозврат - БылоНДФЛВозврат;
				
				КодДохода = ?(НомерДохода35=1,"2610",?(НомерДохода35=2,"1210",?(НомерДохода35=3,"3020","2740")));
				
				Если СуммаРазница &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуНДФЛРасчеты35(
						Сотрудник,
						ВремТаблицаНДФЛРасчетыСБюджетом,
						ПодразделениеОрганизации,
						ПериодРегистрации,
						ПериодРегистрации,
						НДФЛИсчисленныйЖ,
						НДФЛУдержанный,
						НДФЛКВзысканию,
						-НДФЛВозврат,
						КодДохода,
						1);
					
					ЗаполнитьТаблицуНДФЛРасчеты35(
						Сотрудник,
						ВремТаблицаНДФЛРасчетыСБюджетом,
						ПодразделениеОрганизации,
						ПериодРегистрации,
						ПериодРегистрации,
						СуммаРазница,
						0,
						0,
						0,
						КодДохода,
						0);
					
				Иначе 
					ЗаполнитьТаблицуНДФЛРасчеты35(
						Сотрудник,
						ВремТаблицаНДФЛРасчетыСБюджетом,
						ПодразделениеОрганизации,
						ПериодРегистрации,
						ПериодРегистрации,
						НДФЛИсчисленныйЖ,
						НДФЛУдержанный,
						НДФЛКВзысканию,
						-НДФЛВозврат,
						КодДохода,
						1);
						
				КонецЕсли;
				
			КонецЦикла	
			
		КонецЕсли;
		
		
		// НДФЛ по ставке 9%
		СуммаРазница = СуммаИ_9К - СуммаИ_9Ж;//сумма из 1-НДФЛ минус сумма из журнала расчетов 
		
		Акционер = 0;
		Если (СуммаИ_9Ж&lt;&gt;0) или (СуммаИ_9К&lt;&gt;0) Тогда
			//уточним значение Акционер
			Начало = Дата(Год,Сч,1);
			Окончание = КонМесяца(Дата(Год,Сч,1)); 
			Если  (ПустоеЗначение(глРаботалСотрудник(Сотрудник, Начало, Начало)) = 1) или (ПустоеЗначение(глРаботалСотрудник(Сотрудник, Окончание, Окончание)) = 1) или 
			(ПустоеЗначение(глРаботалСотрудник(Сотрудник, Начало, Окончание)) = 1) Тогда
				Акционер = 1;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СуммаРазница &lt;&gt; 0 Тогда
			
			Если Акционер = 1 Тогда
				ЗаполнитьТаблицуНДФЛРасчеты09(
					Сотрудник, 
					ВремТаблицаНДФЛРасчетыСБюджетом, 
					ПериодРегистрации, 
					ПериодРегистрации, 
					СуммаИ_9К, 
					СуммаУ_9, 
					СуммаВ_9,
					-СуммаВз_9,
					0);
				
			Иначе
				ЗаполнитьТаблицуНДФЛРасчеты09(
					Сотрудник, 
					ВремТаблицаНДФЛРасчетыСБюджетом, 
					ПериодРегистрации,
					ПериодРегистрации,
					СуммаИ_9Ж,
					СуммаУ_9,
					СуммаВ_9,
					-СуммаВз_9,
					1);
					
				ЗаполнитьТаблицуНДФЛРасчеты09(
					Сотрудник,
					ВремТаблицаНДФЛРасчетыСБюджетом,
					ПериодРегистрации,
					ПериодРегистрации,
					СуммаРазница,
					0,
					0,
					0,
					0);
				 
			КонецЕсли;
			
		Иначе 
			ЗаполнитьТаблицуНДФЛРасчеты09(
				Сотрудник,
				ВремТаблицаНДФЛРасчетыСБюджетом,
				ПериодРегистрации,
				ПериодРегистрации,
				СуммаИ_9Ж,
				СуммаУ_9,
				СуммаВ_9,
				-СуммаВз_9,
				1);
			
		КонецЕсли;	
		
		СуммаРазница = СуммаИ_13К - СуммаИ_13Ж;//сумма из 1-НДФЛ минус сумма из журнала расчетов 
		
		ЗаполнитьТаблицуНДФЛРасчеты13(
			Сотрудник, 
			ДоходыВычетыНалогиСотрудников, 
			ВремТаблицаНДФЛРасчетыСБюджетом, 
			ПериодРегистрации, 
			ПериодРегистрации, 
			ПодразделениеОрганизации, 
			0, 
			СуммаУ_13, 
			СуммаВ_13,
			-СуммаВз_13,
			1);
				
		Для СчНР=1 По СписокИсчислено13.РазмерСписка() Цикл 
				
			Сумма13 = "";
			ПериодРегистрацииН = СписокИсчислено13.ПолучитьЗначение(СчНР, Сумма13);    
			Сумма13 = Число(Сумма13); 
			
			Если Сумма13&lt;&gt;0 Тогда
				
				ЗаполнитьТаблицуНДФЛРасчеты13(
					Сотрудник, 
					ДоходыВычетыНалогиСотрудников, 
					ВремТаблицаНДФЛРасчетыСБюджетом, 
					ПериодРегистрацииН, 
					ПериодРегистрации, 
					ПодразделениеОрганизации, 
					Сумма13, 
					0, 
					0,
					0,
					1);
				
			КонецЕсли;
				
		КонецЦикла;
			
		Если СуммаРазница &lt; 0 Тогда 
			
			СуммаКРаспределению = -1*СуммаРазница;// это сумма которую надо зарегистрировать с минусом в этом месяце
			
			ТаблицаНДФЛ.ВыбратьСтроки();
			Пока ТаблицаНДФЛ.ПолучитьСтроку()=1 Цикл
				
				МесяцРегистрации =ТаблицаНДФЛ.МесяцРегистрации; 
				СуммаИзТаблицы = ТаблицаНДФЛ.Сумма;
				
				Если СуммаИзТаблицы &lt;= 0 Тогда
					//не выбираем отрицательные суммы
					Продолжить;
				КонецЕсли;
				
				Если СуммаИзТаблицы &lt;= СуммаКРаспределению Тогда
					ТаблицаНДФЛ.Сумма = 0;
				Иначе
					ТаблицаНДФЛ.Сумма = СуммаИзТаблицы - СуммаКРаспределению;
				КонецЕсли;
				
				СуммаПрошлая = -1*Мин(СуммаИзТаблицы, СуммаКРаспределению);
				
				ПодразделениеОрганизацииПрошлое = ТаблицаНДФЛ.ПодразделениеОрганизации;
				
				// спишем сумму из прошлого периода
				ЗаполнитьТаблицуНДФЛРасчеты13(
					Сотрудник, 
					ДоходыВычетыНалогиСотрудников, 
					ВремТаблицаНДФЛРасчетыСБюджетом, 
					Дата(Год,МесяцРегистрации,1), 
					Дата(Год,МесяцРегистрации,1), 
					ПодразделениеОрганизацииПрошлое, 
					-1*СуммаПрошлая, 
					0, 
					0, 
					0);
				
				//	запишем ее на текущий период
				ЗаполнитьТаблицуНДФЛРасчеты13(
					Сотрудник, 
					ДоходыВычетыНалогиСотрудников, 
					ВремТаблицаНДФЛРасчетыСБюджетом, 
					Дата(Год,МесяцРегистрации,1), 
					ПериодРегистрации, 
					ПодразделениеОрганизацииПрошлое, 
					СуммаПрошлая, 
					0, 
					0, 
					0);
				
				СуммаКРаспределению = СуммаКРаспределению + СуммаПрошлая;
				Если СуммаКРаспределению = 0 Тогда
					Прервать;    
				КонецЕсли;
			КонецЦикла; 
			
			Если СуммаКРаспределению &lt;&gt;0 Тогда
				//..зарегистрируем
				// запомним что в этом месяце зарегистрировано НДФЛ больше чем исчислено
				ТаблицаНДФЛ.НоваяСтрока();
				ТаблицаНДФЛ.МесяцРегистрации = Сч;
				ТаблицаНДФЛ.Сумма = -1*СуммаКРаспределению;
				ТаблицаНДФЛ.ПодразделениеОрганизации = ПодразделениеОрганизации;
			КонецЕсли;
			
			
		ИначеЕсли СуммаРазница &gt; 0 Тогда
			
			// теперь необходимо с минусом зарегистрировать сумму в текущем месяце и с прошлым месяцем налогового периода
			
			СуммаКРаспределению = -1*СуммаРазница;// это сумма которую надо зарегистрировать с минусом в этом месяце
			
			ТаблицаНДФЛ.ВыбратьСтроки();
			Пока ТаблицаНДФЛ.ПолучитьСтроку()=1 Цикл
				
				МесяцРегистрации =ТаблицаНДФЛ.МесяцРегистрации; 
				СуммаИзТаблицы = ТаблицаНДФЛ.Сумма;
				
				Если СуммаИзТаблицы &gt;= 0 Тогда
					// выбираем только отрицательные суммы
					Продолжить;
				КонецЕсли;
				
				Если СуммаИзТаблицы &gt;= СуммаКРаспределению Тогда
					ТаблицаНДФЛ.Сумма = 0;
				Иначе
					ТаблицаНДФЛ.Сумма = СуммаИзТаблицы - СуммаКРаспределению;
				КонецЕсли;
				
				СуммаПрошлая = Макс(СуммаИзТаблицы, СуммаКРаспределению);
				
				ПодразделениеОрганизацииПрошлое = ТаблицаНДФЛ.ПодразделениеОрганизации;
				
				// спишем сумму из прошлого периода
				ЗаполнитьТаблицуНДФЛРасчеты13(
					Сотрудник, 
					ДоходыВычетыНалогиСотрудников, 
					ВремТаблицаНДФЛРасчетыСБюджетом, 
					Дата(Год,МесяцРегистрации,1), 
					Дата(Год,МесяцРегистрации,1), 
					ПодразделениеОрганизацииПрошлое, 
					СуммаПрошлая, 
					0, 
					0,
					0,
					0);
				
				//	запишем ее на текущий период
				ЗаполнитьТаблицуНДФЛРасчеты13(
					Сотрудник, 
					ДоходыВычетыНалогиСотрудников, 
					ВремТаблицаНДФЛРасчетыСБюджетом, 
					Дата(Год,МесяцРегистрации,1), 
					ПериодРегистрации,
					ПодразделениеОрганизацииПрошлое, 
					-1*СуммаПрошлая, 
					0, 
					0,
					0,
					0);	
					
				СуммаКРаспределению = СуммаКРаспределению - СуммаПрошлая;
				Если СуммаКРаспределению = 0 Тогда
					Прервать;    
				КонецЕсли;
			КонецЦикла; 
			
			Если СуммаКРаспределению &lt;&gt;0 Тогда
				//..зарегистрируем
				// запомним что в этом месяце зарегистрировано НДФЛ меньше чем исчислено
				ТаблицаНДФЛ.НоваяСтрока();
				ТаблицаНДФЛ.МесяцРегистрации = Сч;
				ТаблицаНДФЛ.Сумма = -1*СуммаКРаспределению;
				ТаблицаНДФЛ.ПодразделениеОрганизации = ПодразделениеОрганизации;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // цикл по месяцам  
	
	//проверим, что осталось в таблице ТаблицаНДФЛ 
	Если ТаблицаНДФЛ.КоличествоСтрок() &gt; 0 Тогда
		
		ТаблицаНДФЛ.ВыбратьСтроки();
		Пока ТаблицаНДФЛ.ПолучитьСтроку()=1 Цикл
			Если ТаблицаНДФЛ.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;  
			МесяцРегистрации = ТаблицаНДФЛ.МесяцРегистрации;
			СуммаНДФЛ = ТаблицаНДФЛ.Сумма;
			
			ПодразделениеОрганизации = ТаблицаНДФЛ.ПодразделениеОрганизации;
			
			ЗаполнитьТаблицуНДФЛРасчеты13(
				Сотрудник, 
				ДоходыВычетыНалогиСотрудников, 
				ВремТаблицаНДФЛРасчетыСБюджетом, 
				Дата(Год,МесяцРегистрации,1), 
				Дата(Год,МесяцРегистрации,1), 
				ПодразделениеОрганизации, 
				СуммаНДФЛ, 
				0, 
				0,
				0,
				0);
		КонецЦикла;
		
	КонецЕсли;
	
	ВремТаблицаНДФЛРасчетыСБюджетом.Сортировать("Физлицо, Период");
	ВремТаблицаНДФЛРасчетыСБюджетом.Свернуть("Период,МесяцНалоговогоПериода,ПодразделениеОрганизации,Физлицо,ВидСтроки,СтавкаНалогообложенияРезидента,КодДохода,СФ_Наименование,СФ_КВД,СФ_ПодпадаетПодЕНВД,СФ_Баланс,СФ_КБК,КОСГУ,ИсчисленоИзЗарплаты,КПП,КодПоОКАТО,КодПоОКТМО","Налог");
	
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаНДФЛРасчетыСБюджетом,ТаблицаНДФЛРасчетыСБюджетом);
	
КонецЦикла; // цикл по сотрудникам

ВремТаблицаНДФЛРасчетыСБюджетом = 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуПособияПоУходуЗаРебенком" ИспользуетсяПриЗагрузке="false">
			<Текст>Период				 			= ИсходящиеДанные;
ОблагаетсяЕНВД		 			= ВходящиеДанные;
УходЗаПервымРебенком 			= Источник;
СтраховыеСлучаи		 			= Приемник;
СуммаВсего			 			= ТипПриемника;
Физлицо				 			= Значение;
Сотрудник			 			= Выражение;
ДатаСтраховогоСлучая			= Пусто;
ТаблицаПособияПоУходуЗаРебенком	= ВыборкаДанных;

ТаблицаПособияПоУходуЗаРебенком.НоваяСтрока();
ТаблицаПособияПоУходуЗаРебенком.Период					= Период;
ТаблицаПособияПоУходуЗаРебенком.ОблагаетсяЕНВД			= ОблагаетсяЕНВД;
ТаблицаПособияПоУходуЗаРебенком.УходЗаПервымРебенком	= УходЗаПервымРебенком;
ТаблицаПособияПоУходуЗаРебенком.СтраховыеСлучаи			= СтраховыеСлучаи;
ТаблицаПособияПоУходуЗаРебенком.СуммаВсего				= СуммаВсего;
ТаблицаПособияПоУходуЗаРебенком.Физлицо					= Физлицо;
ТаблицаПособияПоУходуЗаРебенком.Сотрудник				= Сотрудник;
ТаблицаПособияПоУходуЗаРебенком.ДатаСтраховогоСлучая	= ДатаСтраховогоСлучая;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуПособияСоциальномуСтрахованию" ИспользуетсяПриЗагрузке="false">
			<Текст>Период				 					= ИсходящиеДанные;
ВидПособияСоциальногоСтрахования		= ВходящиеДанные;
ОблагаетсяЕНВД		 					= Источник;
ВидЗанятости		 					= Приемник;
СтраховыеСлучаи		 					= ТипПриемника;
ОплаченныеДни		 					= Значение;
СуммаВсего			 					= Выражение;
Сотрудник			 					= Пусто;
ДатаСтраховогоСлучая					= ВыборкаДанных;
ТаблицаПособияСоциальномуСтрахованию	= Объект;

ТаблицаПособияСоциальномуСтрахованию.НоваяСтрока();
ТаблицаПособияСоциальномуСтрахованию.Период								= Период;
ТаблицаПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования	= ВидПособияСоциальногоСтрахования;
ТаблицаПособияСоциальномуСтрахованию.ОблагаетсяЕНВД						= ОблагаетсяЕНВД;
ТаблицаПособияСоциальномуСтрахованию.ВидЗанятости						= ВидЗанятости;
ТаблицаПособияСоциальномуСтрахованию.СтраховыеСлучаи					= СтраховыеСлучаи;
ТаблицаПособияСоциальномуСтрахованию.ОплаченныеДни						= ОплаченныеДни;
ТаблицаПособияСоциальномуСтрахованию.СуммаВсего							= СуммаВсего;
ТаблицаПособияСоциальномуСтрахованию.Сотрудник							= Сотрудник;
ТаблицаПособияСоциальномуСтрахованию.ДатаСтраховогоСлучая				= ДатаСтраховогоСлучая;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуПредоставленныхВычетов" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник												= ИсходящиеДанные;
ПериодРегистрацииДохода									= ВходящиеДанные;
ПодразделениеОрганизации								= Источник;
МесяцНалоговогоПериода									= Приемник;
КодВычета												= ТипПриемника;
ПримененныйВычет										= Значение;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц	= Выражение;

ОКАТО	= "";
ОКТМО   = "";
КПП		= "";
Если ПустоеЗначение(ПодразделениеОрганизации) = 0 Тогда
	ТаблицаКодовОКАТО	= Параметры.ТаблицаКодовОКАТО;
	ТаблицаКодовОКТМО	= Параметры.ТаблицаКодовОКТМО;
	НомСтроки = 0;
	Если ТаблицаКодовОКАТО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКАТО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКАТО = ТаблицаКодовОКАТО.ОКАТО;
		КПП   = ТаблицаКодовОКАТО.КПП;
	КонецЕсли;
	Если ТаблицаКодовОКТМО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКТМО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКТМО = ТаблицаКодовОКТМО.ОКТМО;
		КПП   = ТаблицаКодовОКТМО.КПП;
	КонецЕсли;
КонецЕсли;

ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяСтрока();
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.Период					= ПериодРегистрацииДохода;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода	= МесяцНалоговогоПериода;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.ПодразделениеОрганизации	= ПодразделениеОрганизации;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.Физлицо					= Сотрудник;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета					= КодВычета;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.ПримененныйВычет			= ПримененныйВычет;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодПоОКАТО				= ОКАТО;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодПоОКТМО				= ОКТМО;
ВремТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.КПП						= КПП;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуСведенийОДоходах" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник						= ИсходящиеДанные;
ЖрнЗарплата						= ВходящиеДанные;
ТаблицаРаспределения			= Источник;
ПериодРегистрацииДохода			= Приемник;
ПодразделениеОрганизации		= ТипПриемника;
МесяцДохода						= КонМесяца(Значение);
КодДохода						= Выражение;
СуммаДохода						= Пусто;
КодВычета						= ВыборкаДанных;
СуммаВычета						= Объект;
КоличествоДетей					= КоллекцияОбъектов;
ВремТаблицаНДФЛСведенияОДоходах	= ОбъектКоллекции;
ИсчисленоИзЗарплаты 			= ИмяПКО;
ДатаПолученияДохода				= МесяцДохода;

НадоРаспределять = Параметры.РаспределятьПоИсточникамФинансирования;

ДанныеИзСправочника = ПустоеЗначение(ЖрнЗарплата);
// если данные из справочника

КолСтрок = 0;
Если (ДанныеИзСправочника = 0) и (НадоРаспределять = 1) Тогда
	ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
	ТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
	ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);
	глПолучитьРаспределениеРезультата(ЖрнЗарплата,ТаблицаРаспределения); 
	КолСтрок = ТаблицаРаспределения.КоличествоСтрок();
	ИсчисленоИзЗарплаты = 1;
КонецЕсли; 

ОКАТО	= "";
ОКТМО   = "";
КПП		= "";
Если ПустоеЗначение(ПодразделениеОрганизации) = 0 Тогда
	ТаблицаКодовОКАТО	= Параметры.ТаблицаКодовОКАТО;
	ТаблицаКодовОКТМО	= Параметры.ТаблицаКодовОКТМО;
	НомСтроки = 0;
	Если ТаблицаКодовОКАТО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКАТО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКАТО = ТаблицаКодовОКАТО.ОКАТО;
		КПП   = ТаблицаКодовОКАТО.КПП;
	КонецЕсли;
	Если ТаблицаКодовОКТМО.НайтиЗначение(ПодразделениеОрганизации,НомСтроки,"Подразделение") = 1 Тогда
		ТаблицаКодовОКТМО.ПолучитьСТрокуПоНомеру(НомСтроки);
		ОКТМО = ТаблицаКодовОКТМО.ОКТМО;
		КПП   = ТаблицаКодовОКТМО.КПП;
	КонецЕсли;
КонецЕсли;

Если (ДанныеИзСправочника = 1) или (КолСтрок = 0) Тогда 
	Если НадоРаспределять=1 Тогда
		СтатьяФинансирования = ПолучитьОтражениеИзШаблона(Константа.ПроводкаПоУмолчанию, КодДохода);
	Иначе 
		СтатьяФинансирования	= СоздатьТЗСтатьяФинансирования( ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,,,,,,,,,,,,,,,,,,,,,,,,,,, Отказ);
		СтатьяФинансирования.НоваяСтрока();
		
		//значения по умолчанию, когда нет данных
		СтатьяФинансирования.Наименование			= "";
		СтатьяФинансирования.КВД					= 1;
		СтатьяФинансирования.ПодпадаетПодЕНВД		= 0;
		СтатьяФинансирования.Баланс					= ПолучитьПустоеЗначение("Справочник.Балансодержатели");
		СтатьяФинансирования.КОСГУ					= "";
		
	КонецЕсли;
	
	ВремТаблицаНДФЛСведенияОДоходах.НоваяСтрока();
	ВремТаблицаНДФЛСведенияОДоходах.Период						= МесяцДохода;
	ВремТаблицаНДФЛСведенияОДоходах.ПериодРегистрации			= ПериодРегистрацииДохода;
	ВремТаблицаНДФЛСведенияОДоходах.ПодразделениеОрганизации	= ПодразделениеОрганизации;
	ВремТаблицаНДФЛСведенияОДоходах.Физлицо						= Сотрудник;
	ВремТаблицаНДФЛСведенияОДоходах.КодДохода					= КодДохода;
	ВремТаблицаНДФЛСведенияОДоходах.СуммаДохода					= СуммаДохода;
	ВремТаблицаНДФЛСведенияОДоходах.КодВычета					= КодВычета;
	ВремТаблицаНДФЛСведенияОДоходах.СуммаВычета					= СуммаВычета;
	ВремТаблицаНДФЛСведенияОДоходах.СФ_Наименование				= СтатьяФинансирования.Наименование;
	ВремТаблицаНДФЛСведенияОДоходах.СФ_КВД						= СтатьяФинансирования.КВД;
	ВремТаблицаНДФЛСведенияОДоходах.СФ_ПодпадаетПодЕНВД			= СтатьяФинансирования.ПодпадаетПодЕНВД;
	ВремТаблицаНДФЛСведенияОДоходах.СФ_Баланс					= СтатьяФинансирования.Баланс;
	ВремТаблицаНДФЛСведенияОДоходах.СФ_КБК						= СтатьяФинансирования.КБК;
	ВремТаблицаНДФЛСведенияОДоходах.КОСГУ						= СтатьяФинансирования.КОСГУ;
	ВремТаблицаНДФЛСведенияОДоходах.ИсчисленоИзЗарплаты			= ИсчисленоИзЗарплаты;
	ВремТаблицаНДФЛСведенияОДоходах.КПП							= КПП;
	ВремТаблицаНДФЛСведенияОДоходах.КодПоОКАТО					= ОКАТО;
	ВремТаблицаНДФЛСведенияОДоходах.КодПоОКТМО					= ОКТМО;
	ВремТаблицаНДФЛСведенияОДоходах.КоличествоДетей				= КоличествоДетей;
	ВремТаблицаНДФЛСведенияОДоходах.ДатаПолученияДохода			= ДатаПолученияДохода;
	
Иначе 
	
	ТаблицаРаспределения.ВыбратьСтроки();
	СуммаИтог = ТаблицаРаспределения.Итог("Сумма");
	СуммаДоходаРаспределили = 0;
	СуммаВычетаРаспределили = 0;
	
	Для Сч = 1 По КолСтрок Цикл
		
		ТаблицаРаспределения.ПолучитьСтрокуПоНомеру(Сч);
		Сумма = ТаблицаРаспределения.Сумма;
		
		СтатьяФинансирования = ПолучитьОтражениеИзШаблона(ТаблицаРаспределения.Шаблон, КодДохода);
		
		Если Сч = КолСтрок Тогда
			СуммаДоходаИФ = СуммаДохода - СуммаДоходаРаспределили;
			СуммаВычетаИФ = СуммаВычета - СуммаВычетаРаспределили;
		Иначе
			СуммаДоходаИФ = Окр(СуммаДохода * Сумма / СуммаИтог,2);
			СуммаДоходаРаспределили = СуммаДоходаРаспределили + СуммаДоходаИФ;
			СуммаВычетаИФ = Окр(СуммаВычета * Сумма / СуммаИтог,2);
			СуммаВычетаРаспределили = СуммаВычетаРаспределили + СуммаВычетаИФ;
		КонецЕсли;
		
		ВремТаблицаНДФЛСведенияОДоходах.НоваяСтрока();
		ВремТаблицаНДФЛСведенияОДоходах.Период						= МесяцДохода;
		ВремТаблицаНДФЛСведенияОДоходах.ПериодРегистрации			= ПериодРегистрацииДохода;
		ВремТаблицаНДФЛСведенияОДоходах.ПодразделениеОрганизации	= ПодразделениеОрганизации;
		ВремТаблицаНДФЛСведенияОДоходах.Физлицо						= Сотрудник;
		ВремТаблицаНДФЛСведенияОДоходах.КодДохода					= КодДохода;
		ВремТаблицаНДФЛСведенияОДоходах.СуммаДохода					= СуммаДоходаИФ;
		ВремТаблицаНДФЛСведенияОДоходах.КодВычета					= КодВычета;
		ВремТаблицаНДФЛСведенияОДоходах.СуммаВычета					= СуммаВычетаИФ;
		ВремТаблицаНДФЛСведенияОДоходах.СФ_Наименование				= СтатьяФинансирования.Наименование;
		ВремТаблицаНДФЛСведенияОДоходах.СФ_КВД						= СтатьяФинансирования.КВД;
		ВремТаблицаНДФЛСведенияОДоходах.СФ_ПодпадаетПодЕНВД			= СтатьяФинансирования.ПодпадаетПодЕНВД;
		ВремТаблицаНДФЛСведенияОДоходах.СФ_Баланс					= СтатьяФинансирования.Баланс;
		ВремТаблицаНДФЛСведенияОДоходах.СФ_КБК						= СтатьяФинансирования.КБК;
		ВремТаблицаНДФЛСведенияОДоходах.КОСГУ						= СтатьяФинансирования.КОСГУ;
		ВремТаблицаНДФЛСведенияОДоходах.ИсчисленоИзЗарплаты			= ИсчисленоИзЗарплаты;
		ВремТаблицаНДФЛСведенияОДоходах.КПП							= КПП;
		ВремТаблицаНДФЛСведенияОДоходах.КодПоОКАТО					= ОКАТО;
		ВремТаблицаНДФЛСведенияОДоходах.КодПоОКТМО					= ОКТМО;
		ВремТаблицаНДФЛСведенияОДоходах.КоличествоДетей				= КоличествоДетей;
		ВремТаблицаНДФЛСведенияОДоходах.ДатаПолученияДохода			= ДатаПолученияДохода;
		
	КонецЦикла;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуСтраховыеВзносыИсчисленные" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем МесяцыИнвалидности[12]; 

ТаблицаСтраховыеВзносыИсчисленные	= ИсходящиеДанные;
СписокСотров						= ВходящиеДанные;
ДоходыВычетыНалогиСотрудников		= Источник;
ДатаАктуальности					= Приемник;

ГодДанных = ДатаГод(ДатаАктуальности);

ВсегоСотров = СписокСотров.РазмерСписка();

Если ВсегоСотров &gt; 0 Тогда
	
	Буфер = СоздатьОбъект("СписокЗначений");
		 
	Для СчСотров = 1 По СписокСотров.РазмерСписка()  Цикл 
		
		СтрокаИтоговойТаблицы = (СчСотров-1)*12;
		ФизЛицо = СписокСотров.ПолучитьЗначение(СчСотров);
		
		Если ГодДанных &lt; 2014 Тогда
			НомерШкалыВзносов = глПолучитьНомерШкалыСтраховыхВзносовПФР(ФизЛицо);
			Если НомерШкалыВзносов &lt; 1 Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	
		Буфер.УдалитьВсе();
		
		ПоследнийМесяц = 0;
		глЗаполнитьКарточкаУчетаПоСтраховымВзносам(ФизЛицо,ГодДанных,1,ДоходыВычетыНалогиСотрудников,СтрокаИтоговойТаблицы,Буфер,ПоследнийМесяц);
		
		Если Буфер.РазмерСписка() &lt;&gt; 0 Тогда
			
			Для СчМес = 1 По ПоследнийМесяц Цикл 
				
				СчСтрок = ?(СтрДлина(СчМес)=1, "0"+СчМес, СчМес); 
				
				Если ГодДанных&gt;=2014 Тогда
					
					ФСС_НС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФСС_НС"); 
					
					ФСС     = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФСС")
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФССЛТ")
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФССИнвалид");
					ФССЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФССЕНВД");
					
					ФФОМС     = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФФОМС")
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФФОМСЛТ")
								+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФФОМСИнвалид");
					ФФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФФОМСЕНВД");
					
					ПФРПоСуммарномуТарифу     = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоПФР")
												+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоПФРЛТ")
												+ ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоПФРИнвалид");
					ПФРПоСуммарномуТарифуЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоПФРЕНВД");
					
					ДопТариф    = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоДопТариф");
					ДопТариф_ВУ = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоПФРЗаЗанятыхНаПодземныхИВредныхРаботах");
					ДопТариф_ТУ = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоПФРЗаЗанятыхНаТяжелыхИПрочихРаботах");
					
					Если СчМес&gt;1 Тогда
						
						ФСС_НС = ФСС_НС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФСС_НС");
						
						ФСС     = ФСС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФСС")
										- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФССЛТ")
										- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФССИнвалид");
						ФССЕНВД = ФССЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФССЕНВД");
						
						ФФОМС     = ФФОМС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФФОМС")
											- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФФОМСЛТ")
											- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФФОМСИнвалид");
						ФФОМСЕНВД = ФФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФФОМСЕНВД");
						
						ПФРПоСуммарномуТарифу     = ПФРПоСуммарномуТарифу - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоПФР")
																			- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоПФРЛТ")
																			- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоПФРИнвалид");
						ПФРПоСуммарномуТарифуЕНВД = ПФРПоСуммарномуТарифуЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоПФРЕНВД"); 
						
						ДопТариф    = ДопТариф - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоДопТариф");
						ДопТариф_ВУ = ДопТариф_ВУ - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоПФРЗаЗанятыхНаПодземныхИВредныхРаботах");
						ДопТариф_ТУ = ДопТариф_ТУ - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоПФРЗаЗанятыхНаТяжелыхИПрочихРаботах");
						
					КонецЕсли; 
					
					ПФРНакопительная = 0;
					ПФРНакопительнаяЕНВД = 0;
					ПФРСтраховая = 0;
					ПФРСтраховаяЕНВД = 0; 
					ТФОМС = 0;
					ТФОМСЕНВД = 0;
					
				Иначе	
					
					ПФРПоСуммарномуТарифу     = 0;
					ПФРПоСуммарномуТарифуЕНВД = 0;
					
					ФСС						= Число(Сокрлп(Буфер.Получить("П122"+СчСтрок))) + Число(Сокрлп(Буфер.Получить("П222"+СчСтрок)));
					ФФОМС					= Число(Сокрлп(Буфер.Получить("П124"+СчСтрок))) + Число(Сокрлп(Буфер.Получить("П224"+СчСтрок)));
					ТФОМС					= Число(Сокрлп(Буфер.Получить("П126"+СчСтрок))) + Число(Сокрлп(Буфер.Получить("П226"+СчСтрок)));
					ПФРСтраховая			= Число(Сокрлп(Буфер.Получить("П116"+СчСтрок))) + Число(Сокрлп(Буфер.Получить("П216"+СчСтрок)));
					ПФРНакопительная		= Число(Сокрлп(Буфер.Получить("П118"+СчСтрок))) + Число(Сокрлп(Буфер.Получить("П218"+СчСтрок)));
					
					ПФРСтраховаяЕНВД		= Число(Сокрлп(Буфер.Получить("П316"+СчСтрок)));
					ПФРНакопительнаяЕНВД	= Число(Сокрлп(Буфер.Получить("П318"+СчСтрок))); 
					ФССЕНВД					= Число(Сокрлп(Буфер.Получить("П322"+СчСтрок)));
					ФФОМСЕНВД				= Число(Сокрлп(Буфер.Получить("П324"+СчСтрок)));
					ТФОМСЕНВД				= Число(Сокрлп(Буфер.Получить("П326"+СчСтрок))); 
					
					Если ГодДанных&gt;=2012 Тогда
						ФСС						= ФСС + Число(Сокрлп(Буфер.Получить("П422"+СчСтрок)));
						ФФОМС					= ФФОМС + Число(Сокрлп(Буфер.Получить("П424"+СчСтрок)));
						ТФОМС					= ТФОМС + Число(Сокрлп(Буфер.Получить("П426"+СчСтрок)));
						ПФРСтраховая			= ПФРСтраховая + Число(Сокрлп(Буфер.Получить("П416"+СчСтрок)));
						ПФРНакопительная		= ПФРНакопительная + Число(Сокрлп(Буфер.Получить("П418"+СчСтрок)));    
					КонецЕсли;
					
					ДопТариф_ВУ = 0;
					ДопТариф_ТУ = 0;
					Если ГодДанных&gt;=2013 Тогда
						ДопТариф_ВУ		= Число(Сокрлп(Буфер.Получить("ПФР_ВУ"+СчСтрок)));
						ДопТариф_ТУ		= Число(Сокрлп(Буфер.Получить("ПФР_ТУ"+СчСтрок)));    
					КонецЕсли;
					
					ДопТариф		= Число(Сокрлп(Буфер.Получить("П120"+СчСтрок))); 
					
				КонецЕсли;
				
				Если ГодДанных&gt;=2011 Тогда
					ФСС_НС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФСС_НС");
					Если СчМес&gt;1 Тогда
						ФСС_НС = ФСС_НС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес-1,"ИсчисленоФСС_НС");    
					КонецЕсли;
				Иначе
					ФСС_НС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМес,"ИсчисленоФСС_НС");
				КонецЕсли;				
			
				Если (ФСС &lt;&gt; 0) Или (ФСС_НС &lt;&gt; 0) Или (ТФОМС &lt;&gt; 0) Или (ФФОМС &lt;&gt; 0)
					Или (ПФРПоСуммарномуТарифу &lt;&gt; 0) Или (ПФРПоСуммарномуТарифуЕНВД &lt;&gt; 0)
					Или (ПФРНакопительная &lt;&gt; 0) Или (ПФРНакопительнаяЕНВД &lt;&gt; 0)
					Или (ПФРСтраховая &lt;&gt; 0) Или (ПФРСтраховаяЕНВД &lt;&gt; 0)
					Или (ДопТариф &lt;&gt; 0)
					Или (ДопТариф_ВУ &lt;&gt; 0) Или (ДопТариф_ВУ &lt;&gt; 0) Тогда
				
					ТаблицаСтраховыеВзносыИсчисленные.НоваяСтрока();
					ТаблицаСтраховыеВзносыИсчисленные.Период						= Дата(ГодДанных,СчМес,1);
					ТаблицаСтраховыеВзносыИсчисленные.Физлицо						= ФизЛицо;
					
					ТаблицаСтраховыеВзносыИсчисленные.ФСС							= ФСС;
					ТаблицаСтраховыеВзносыИсчисленные.ФССЕНВД						= ФССЕНВД;
					ТаблицаСтраховыеВзносыИсчисленные.ФССНесчастныеСлучаи			= ФСС_НС;
					ТаблицаСтраховыеВзносыИсчисленные.ТФОМС							= ТФОМС; 
					ТаблицаСтраховыеВзносыИсчисленные.ТФОМСЕНВД						= ТФОМСЕНВД;
					ТаблицаСтраховыеВзносыИсчисленные.ФФОМС							= ФФОМС;
					ТаблицаСтраховыеВзносыИсчисленные.ФФОМСЕНВД						= ФФОМСЕНВД; 
					
					ТаблицаСтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифу			= ПФРПоСуммарномуТарифу;
					ТаблицаСтраховыеВзносыИсчисленные.ПФРПоСуммарномуТарифуЕНВД		= ПФРПоСуммарномуТарифуЕНВД;
					
					ТаблицаСтраховыеВзносыИсчисленные.ПФРНакопительная				= ПФРНакопительная;
					ТаблицаСтраховыеВзносыИсчисленные.ПФРНакопительнаяЕНВД			= ПФРНакопительнаяЕНВД;
					ТаблицаСтраховыеВзносыИсчисленные.ПФРСтраховая					= ПФРСтраховая;
					ТаблицаСтраховыеВзносыИсчисленные.ПФРСтраховаяЕНВД				= ПФРСтраховаяЕНВД;
					
					ТаблицаСтраховыеВзносыИсчисленные.ПФРПоДополнительномуТарифу	= ДопТариф;
					
					ТаблицаСтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах = ДопТариф_ВУ;
					ТаблицаСтраховыеВзносыИсчисленные.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах	 = ДопТариф_ТУ;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник							= ИсходящиеДанные;
Период								= ВходящиеДанные;
Результат							= Источник;
Скидка								= Приемник;
ВидДохода							= ТипПриемника;
ОблагаетсяЕНВД						= Значение;
ВР									= Выражение;
ОблагаетсяПоДополнительномуТарифу	= Пусто;
ВремТаблицаЕСНСведенияОДоходах		= ВыборкаДанных;
ДокументОснование					= ?(ПустоеЗначение(ДокументОснование) = 1, ПолучитьПустоеЗначение("Документ"), Объект);
ЯвляетсяДоходомФармацевта 			= ?(КоллекцияОбъектов="",0,КоллекцияОбъектов); 
ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ = ?(ОбъектКоллекции="",0,ОбъектКоллекции); 
ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ?(ИмяПКО="",ПолучитьПустоеЗначение(Перечисление.ВидыРаботСДосрочнойПенсией),ИмяПКО);


ВремТаблицаЕСНСведенияОДоходах.НоваяСтрока();
ВремТаблицаЕСНСведенияОДоходах.Физлицо								= Сотрудник;
ВремТаблицаЕСНСведенияОДоходах.Период								= Период;
ВремТаблицаЕСНСведенияОДоходах.Результат							= Результат;
ВремТаблицаЕСНСведенияОДоходах.Скидка								= Скидка;
ВремТаблицаЕСНСведенияОДоходах.ВидДохода							= ВидДохода;
ВремТаблицаЕСНСведенияОДоходах.ОблагаетсяЕНВД						= ОблагаетсяЕНВД;
ВремТаблицаЕСНСведенияОДоходах.ВидРасчета							= ВР;
ВремТаблицаЕСНСведенияОДоходах.ОблагаетсяПоДополнительномуТарифу	= ОблагаетсяПоДополнительномуТарифу;
ВремТаблицаЕСНСведенияОДоходах.ДокументОснование					= ДокументОснование;
ВремТаблицаЕСНСведенияОДоходах.ЯвляетсяДоходомФармацевта			= ЯвляетсяДоходомФармацевта;
ВремТаблицаЕСНСведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ = ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ;
ВремТаблицаЕСНСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТЗПВРОтражениеВУчете" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета				= ИсходящиеДанные;
ВР							= ВходящиеДанные;

ВидПВР = ОпределитьВидПВР(ВР);

// Заполним значения по умолчанию
ЭлементСпрВР = ПолучитьВРизСправочника(ВР);

Если ВидПВР = "Удержания" Тогда
	ТЗВидаРасчета.СтратегияОтраженияВУчете				= "КакБазовыеНачисления";
	
Иначе
	Если ТЗВидаРасчета.НужнаБаза = 1 Тогда
		ТЗВидаРасчета.СтратегияОтраженияВУчете			= "КакБазовыеНачисления";
	Иначе
		ТЗВидаРасчета.СтратегияОтраженияВУчете			= "КакЗаданоНаНачалоСобытия";
	КонецЕсли;
	
КонецЕсли;

Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	Если ПустоеЗначение(ЭлементСпрВР.ШаблонПроводки) = 0 Тогда
		Если ЭлементСпрВР.ШаблонПроводки.Наименование = "Распределять пропорционально расчетной базе" Тогда
			ТЗВидаРасчета.СтратегияОтраженияВУчете		= "КакБазовыеНачисления";
			
		Иначе
			ТЗВидаРасчета.СпособОтраженияВБухучете		= ПолучитьСпособОтраженияПоШаблону(ЭлементСпрВР.ШаблонПроводки, ?(ВидПВР = "Удержания", 1, 0));
			
		КонецЕсли;
		
	ИначеЕсли ВидПВР = "Удержания" Тогда
		ТЗВидаРасчета.СпособОтраженияВБухучете			= ПолучитьСпособОтраженияПоШаблону(ЭлементСпрВР.ШаблонПроводки, ?(ВидПВР = "Удержания", 1, 0));
		
	КонецЕсли;
	
	Если ПустоеЗначение(ТЗВидаРасчета.СпособОтраженияВБухучете) = 0 Тогда
		ТЗВидаРасчета.СтратегияОтраженияВУчете			= "КакЗаданоВидуРасчета";
	КонецЕсли;
	
Иначе
	Если ПустоеЗначение(ЭлементСпрВР.ШаблонПроводки) = 0 Тогда
		Если ЭлементСпрВР.ШаблонПроводки.Наименование = "Не отражать в бухгалтерском учете" Тогда
		
		ИначеЕсли ЭлементСпрВР.ШаблонПроводки.Наименование = "Распределять пропорционально расчетной базе" Тогда
			ТЗВидаРасчета.СтратегияОтраженияВУчете		= "КакБазовыеНачисления";
			
		Иначе
			ТЗВидаРасчета.СтатьяФинансирования			= ПолучитьОтражениеИзШаблона(ЭлементСпрВР.ШаблонПроводки);
			ТЗВидаРасчета.СтатьяРасходов				= ЭлементСпрВР.ШаблонПроводки;
			ТЗВидаРасчета.КОСГУ							= ТЗВидаРасчета.СтатьяФинансирования.КОСГУ;
			
			Если (ПустоеЗначение(ТЗВидаРасчета.СтатьяФинансирования) = 0)
				ИЛИ (ПустоеЗначение(ТЗВидаРасчета.КОСГУ) = 0)
				ИЛИ (ПустоеЗначение(ТЗВидаРасчета.СтатьяРасходов) = 0) Тогда
				ТЗВидаРасчета.СтратегияОтраженияВУчете	= "КакЗаданоВидуРасчета";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТЗПВРПоУмолчанию" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета				= ИсходящиеДанные;
ВР							= ВходящиеДанные;

ВидПВР = ОпределитьВидПВР(ВР);

// Заполним значения по умолчанию
ЭлементСпрВР = ПолучитьВРизСправочника(ВР);

ТЗВидаРасчета.Наименование								= ?(ПустоеЗначение(ЭлементСпрВР) = 1, Строка(ВР), ЭлементСпрВР.Наименование);

Если ВидПВР = "Удержания" Тогда
	Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
		ТЗВидаРасчета.ВидОперацииБУ						= "Удержание";
	КонецЕсли;

Иначе
	ТЗВидаРасчета.КодДоходаНДФЛ							= "2000";
	ТЗВидаРасчета.КодДоходаЕСН							= "ОблагаетсяЦеликом";
	ТЗВидаРасчета.КодДоходаСтраховыеВзносы				= "ОблагаетсяЦеликом";
	ТЗВидаРасчета.КодДоходаФСС_НС						= ?(ОблагаетсяФСС_НС(ВР) = 1, "Облагается", "НеОблагается");
	
	Если ПустоеЗначение(ЭлементСпрВР) = 0 Тогда
		ТЗВидаРасчета.КодДоходаНДФЛ						= ?(ПустоеЗначение(ЭлементСпрВР.ВидДохода) = 0, ЭлементСпрВР.ВидДохода, "2000");
		ТЗВидаРасчета.КодДоходаЕСН						= ?(ПустоеЗначение(ЭлементСпрВР.ТипДоходаДляЕСН) = 0, ЭлементСпрВР.ТипДоходаДляЕСН, "ОблагаетсяЦеликом");
		ТЗВидаРасчета.КодДоходаСтраховыеВзносы			= ?(ПустоеЗначение(ЭлементСпрВР.ТипДоходаДляСтраховыхВзносов) = 0, ЭлементСпрВР.ТипДоходаДляСтраховыхВзносов, "ОблагаетсяЦеликом");
	КонецЕсли;
	
	ТЗВидаРасчета.ОтнесениеРасходовКДеятельностиЕНВД	= "РасходыРаспределяются";
	ТЗВидаРасчета.ВидНачисленияПоСт255НК				= ПолучитьВидНачисления(ВР);
	
	Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
		ТЗВидаРасчета.ВидОперацииБУ						= "Начисление";
	КонецЕсли;
	
	Если ВидПВР = "ОсновныеНачисления" Тогда
		ТЗВидаРасчета.ВидВремени						= "ДополнительноОплачиваемоеВПределахНормы";
		ТЗВидаРасчета.ЯвляетсяДоходомВНатуральнойФорме	= ВР.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме);
		ТЗВидаРасчета.ПериодДействияБазовый				= 1;
		
	ИначеЕсли ВидПВР = "ДополнительныеНачисления" Тогда
		ТЗВидаРасчета.ВидПремии							= "НеПремия";
		ТЗВидаРасчета.ЯвляетсяДоходомВНатуральнойФорме	= ВР.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме);
		
	КонецЕсли;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьТЗСотрудникаОрганизации" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник			= ИсходящиеДанные;
ДатаСобытия			= ВходящиеДанные;
АвторскийДоговор	= Источник;
ДоговорПодряда		= Приемник;

РаботникОрганизации = СоздатьТЗСотрудникаОрганизации();

// Проверим, может такой сотрудник уже есть
ДокументПриказОПриеме = глПриказПоСотруднику(Сотрудник, ДатаСобытия, "ПриказОПриемеНаРаботу, ПриказОЗачисленииВСпискиЧасти");
// Если не нашли прием на работу на дату события, возьмем ближайший после даты события
Если ДокументПриказОПриеме.Выбран() = 0 Тогда
	ДокументПриказОПриеме = глПриказПоСотруднику(Сотрудник, ДатаСобытия, "ПриказОПриемеНаРаботу, ПриказОЗачисленииВСпискиЧасти, ПриказОбУвольнении", 0);
КонецЕсли;

Наименование	= Сотрудник.Наименование;
ВидЗанятости	= "";
НомерДоговора	= "";
ДатаДоговора	= "";

Если (АвторскийДоговор &lt;&gt; 1) И (ДоговорПодряда &lt;&gt; 1) И (ДокументПриказОПриеме.Выбран() = 1) Тогда
	НомерДоговора	= СокрЛП(ДокументПриказОПриеме.НомерДок);
	ДатаДоговора	= ДокументПриказОПриеме.ДатаДок;
	
	Если ДокументПриказОПриеме.Вид() = "ПриказОПриемеНаРаботу" Тогда
		Если (ДокументПриказОПриеме.ВидРаботы = 2) И (Параметры.РаспределятьПоИсточникамФинансирования = 1) Тогда
			Если Константа.ЕстьМуниципальныеСлужащие = 1 Тогда
				ВидДоговора		= "МуниципальнаяСлужба";
			Иначе
				ВидДоговора		= "ГосударственнаяСлужба";
			КонецЕсли;
			
		Иначе
			ВидДоговора			= "ТрудовойДоговор";
		КонецЕсли;
		
		Если Сотрудник &lt;&gt; Сотрудник.ОсновнойЭлемент Тогда
			ВидЗанятости		= "ВнутреннееСовместительство";
			Наименование		= Наименование + " (вн. совм.)";
			
		ИначеЕсли Сотрудник.СостояниеФизлица.Получить(ДатаОкончания) = Перечисление.СостояниеФизлица.СотрудникНеосновной Тогда
			ВидЗанятости		= "Совместительство";
			Наименование		= Наименование + " (совм.)";
			
		Иначе
			ВидЗанятости		= "ОсновноеМестоРаботы";
			
		КонецЕсли;
		
	ИначеЕсли ДокументПриказОПриеме.Вид() = "ПриказОЗачисленииВСпискиЧасти" Тогда
		Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
			Если ДокументПриказОПриеме.ВидВоеннослужащего = Перечисление.ВидВоеннослужащего.ПоПризыву Тогда
				ВидДоговора		= "ВоеннаяСлужбаПоПризыву";
			Иначе
				ВидДоговора		= "ВоеннаяСлужбаПоКонтракту";
			КонецЕсли;
		КонецЕсли;
		
		ВидЗанятости			= "ОсновноеМестоРаботы";
		
	Иначе // Создадим сотрудника по приказу об увольнении
		ВидДоговора			= "ТрудовойДоговор";
		ВидЗанятости		= "ОсновноеМестоРаботы";
		
	КонецЕсли;
	
Иначе
	Если АвторскийДоговор = 1 Тогда
		Наименование	= Наименование + " (дг. авт.)";
		ВидДоговора		= "Авторский";
	КонецЕсли;
	
	Если ДоговорПодряда = 1 Тогда
		Наименование	= Наименование + " (дг. подр.)";
		ВидДоговора		= "Подряда";
	КонецЕсли;
	
КонецЕсли;

РаботникОрганизации.Установить("Код",									Сотрудник.Код);
РаботникОрганизации.Установить("Наименование",							Наименование);
РаботникОрганизации.Установить("Физлицо",								Сотрудник.ОсновнойЭлемент);
РаботникОрганизации.Установить("Организация",							"Наша организация");
РаботникОрганизации.Установить("ВидЗанятости",							ВидЗанятости);
РаботникОрганизации.Установить("НомерДоговора",							НомерДоговора);
РаботникОрганизации.Установить("ДатаДоговора",							ДатаДоговора);

Если ПустоеЗначение(ВидДоговора) = 0 Тогда
	РаботникОрганизации.Установить("ВидДоговора",						ВидДоговора);
	РаботникОрганизации.Установить("Актуальность",						1);
Иначе
	РаботникОрганизации.Установить("Актуальность",						0);
	Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
		РаботникОрганизации.Установить("ВидДоговора",					"ДоговорУправленческий");
	Иначе
		РаботникОрганизации.Установить("ВидДоговора",					"");
	КонецЕсли;
КонецЕсли;

Если (АвторскийДоговор = 1) ИЛИ (ДоговорПодряда = 1) Тогда
	Возврат РаботникОрганизации;
КонецЕсли;

Если ДокументПриказОПриеме.Выбран() = 1 тогда

	Если ДокументПриказОПриеме.Вид() = "ПриказОбУвольнении" Тогда
		Подразделение	= ЗначениеПериодическогоРеквизитаНаНачало("Подразделение", Сотрудник, ДатаСобытия);
		Должность		= ЗначениеПериодическогоРеквизитаНаНачало("Должность", Сотрудник, ДатаСобытия);
		
		РаботникОрганизации.Установить("ОбособленноеПодразделение",		Подразделение);
		РаботникОрганизации.Установить("ПодразделениеОрганизации",		Подразделение);
		РаботникОрганизации.Установить("Должность",						Должность);
		РаботникОрганизации.Установить("ДатаНачала",					ДатаНачала);
		
	Иначе
		РаботникОрганизации.Установить("ОбособленноеПодразделение",		ДокументПриказОПриеме.Подразделение);
		РаботникОрганизации.Установить("ПодразделениеОрганизации",		ДокументПриказОПриеме.Подразделение);
		РаботникОрганизации.Установить("Должность",						ДокументПриказОПриеме.Должность);
		РаботникОрганизации.Установить("ДатаНачала",					ДокументПриказОПриеме.ДатаПриема);
		
	КонецЕсли;
	
	Размер	= 0;
	Ставка	= 1;
	
	Если ДокументПриказОПриеме.Вид() = "ПриказОПриемеНаРаботу" Тогда
		РаботникОрганизации.Установить("ДатаОкончания",					ДокументПриказОПриеме.Окончание);
		
		Ставка = ?(ДокументПриказОПриеме.Ставка = 0, 1, ДокументПриказОПриеме.Ставка);
		
		Если ДокументПриказОПриеме.ФормаТруда &lt;&gt; Перечисление.ФормыТруда.КомиссВыручка Тогда
			Если глТипВидЗначения(ДокументПриказОПриеме.Оклад) = "Справочник.ТарифныеРазряды" Тогда
				Размер	= ДокументПриказОПриеме.Оклад.Тариф.Получить(ДокументПриказОПриеме.ДатаПриема);
				
			ИначеЕсли глТипВидЗначения(ДокументПриказОПриеме.Оклад) = "Справочник.ЕТС" Тогда
				Размер	= ДокументПриказОПриеме.Оклад.Оклад.Получить(ДокументПриказОПриеме.ДатаПриема);
				
			Иначе
				Размер	= ДокументПриказОПриеме.Оклад;
				
			КонецЕсли;	
			
			Если ПустоеЗначение(ДокументПриказОПриеме.Валюта) = 0 Тогда
				РаботникОрганизации.Установить("ВалютаТарифнойСтавки",	ДокументПриказОПриеме.Валюта);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ДокументПриказОПриеме.Вид() = "ПриказОЗачисленииВСпискиЧасти" Тогда
		Размер	= ДокументПриказОПриеме.ОВД;
		
	Иначе // Увольнение
		РаботникОрганизации.Установить("ДатаОкончания",					ДатаСобытия);
		
		Ставка		= ЗначениеПериодическогоРеквизитаНаНачало("Ставка", Сотрудник, ДатаСобытия);
		Оклад		= ЗначениеПериодическогоРеквизитаНаНачало("Оклад", Сотрудник, ДатаСобытия);
		ФормаТруда	= ЗначениеПериодическогоРеквизитаНаНачало("ФормаТруда", Сотрудник, ДатаСобытия);
		
		Если Ставка = 0 Тогда
			Ставка = 1;
		КонецЕсли;
		
		Если ФормаТруда &lt;&gt; Перечисление.ФормыТруда.КомиссВыручка Тогда
			Если глТипВидЗначения(Оклад) = "Справочник.ТарифныеРазряды" Тогда
				Размер	= Оклад.Тариф.Получить(ДатаСобытия);
				
			ИначеЕсли глТипВидЗначения(Оклад) = "Справочник.ЕТС" Тогда
				Размер	= Оклад.Оклад.Получить(ДатаСобытия);
				
			Иначе
				Размер	= Оклад;
				
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустоеЗначение(Сотрудник.ВалютаОклада) = 0 Тогда
		РаботникОрганизации.Установить("ВалютаТарифнойСтавки",			Сотрудник.ВалютаОклада);
	КонецЕсли;
	Если ПустоеЗначение(РаботникОрганизации.Получить("ВалютаТарифнойСтавки")) = 1 Тогда
		РаботникОрганизации.Установить("ВалютаТарифнойСтавки",			"Рубль");
	КонецЕсли;
	РаботникОрганизации.Установить("ЗанимаемыхСтавок",					Ставка);
	РаботникОрганизации.Установить("ТарифнаяСтавка",					Размер * Ставка);
	
	Если ДокументПриказОПриеме.Вид() = "ПриказОбУвольнении" Тогда
		ГрафикРаботы	= ЗначениеПериодическогоРеквизитаНаНачало("ГрафикРаботы", Сотрудник, ДатаСобытия);
		
		РаботникОрганизации.Установить("ГрафикРаботы",						?(ПустоеЗначение(ГрафикРаботы) = 0, ГрафикРаботы, Константа.ОсновнойГрафик));
		РаботникОрганизации.Установить("ВидРасчета",						ВернутьТЗВидаРасчета(ВидРасчета.ОплатаПоОкладу, ДокументПриказОПриеме, ДатаСобытия, Сотрудник, , РаботникОрганизации.Получить("ВидДоговора")));
		
	Иначе
		РаботникОрганизации.Установить("ГрафикРаботы",						?(ПустоеЗначение(ДокументПриказОПриеме.ГрафикРаботы) = 0, ДокументПриказОПриеме.ГрафикРаботы, Константа.ОсновнойГрафик));
		РаботникОрганизации.Установить("ВидРасчета",						ВернутьТЗВидаРасчета(ВидРасчета.ОплатаПоОкладу, ДокументПриказОПриеме, ДокументПриказОПриеме.ДатаПриема, Сотрудник, , РаботникОрганизации.Получить("ВидДоговора")));
		
	КонецЕсли;
	
КонецЕсли;

Возврат РаботникОрганизации;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗаполнитьФизЛицоВТабличнойЧасти" ИспользуетсяПриЗагрузке="true">
			<Текст>СоответствиеСотрудникФизлицо = Новый Соответствие;
ПустоеФизлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
ПустойСотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
Для Каждого ТабличнаяЧасть Из Объект.Метаданные().ТабличныеЧасти Цикл
	Если ТабличнаяЧасть.Реквизиты.Найти("Сотрудник") = Неопределено ИЛИ ТабличнаяЧасть.Реквизиты.Найти("Физлицо") = Неопределено Тогда
		Продолжить;
	КонецЕсли;
	Для Каждого СтрокаТабличнойЧасти Из Объект[ТабличнаяЧасть.Имя] Цикл
		Если СтрокаТабличнойЧасти.Сотрудник &lt;&gt; ПустойСотрудник И СтрокаТабличнойЧасти.Физлицо = ПустоеФизлицо Тогда
			СоответствиеСотрудникФизлицо.Вставить(СтрокаТабличнойЧасти.Сотрудник);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

МассивСотрудников = Новый Массив;
Для Каждого ЭлементСоответствия Из СоответствиеСотрудникФизлицо Цикл
	МассивСотрудников.Добавить(ЭлементСоответствия.Ключ);
КонецЦикла;
Запрос = Новый Запрос;
Запрос.УстановитьПараметр("СписокСотрудников", МассивСотрудников);
Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
|	СотрудникиОрганизаций.Физлицо,
|	СотрудникиОрганизаций.Ссылка КАК Сотрудник
|ИЗ
|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
|ГДЕ
|	СотрудникиОрганизаций.Ссылка В(&amp;СписокСотрудников)";
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
	СоответствиеСотрудникФизлицо.Вставить(Выборка.Сотрудник, Выборка.Физлицо);
КонецЦикла;

Для Каждого ТабличнаяЧасть Из Объект.Метаданные().ТабличныеЧасти Цикл
	Если ТабличнаяЧасть.Реквизиты.Найти("Сотрудник") = Неопределено ИЛИ ТабличнаяЧасть.Реквизиты.Найти("Физлицо") = Неопределено Тогда
		Продолжить;
	КонецЕсли;
	ЗаписыватьТабличнуюЧасть = Ложь;
	Для Каждого СтрокаТабличнойЧасти Из Объект[ТабличнаяЧасть.Имя] Цикл
		Если СтрокаТабличнойЧасти.Сотрудник &lt;&gt; ПустойСотрудник И СтрокаТабличнойЧасти.Физлицо = ПустоеФизлицо Тогда
			СтрокаТабличнойЧасти.Физлицо = СоответствиеСотрудникФизлицо.Получить(СтрокаТабличнойЧасти.Сотрудник);
		КонецЕсли;
	КонецЦикла;
КонецЦикла;

Если Объект.Метаданные().ТабличныеЧасти.Найти("ФизическиеЛица") &lt;&gt; Неопределено Тогда
	СоответствиеФизлица = Новый Соответствие;

	Для Каждого ТабличнаяЧасть Из Объект.Метаданные().ТабличныеЧасти Цикл
		Если ТабличнаяЧасть.Реквизиты.Найти("Физлицо") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого СтрокаТабличнойЧасти Из Объект[ТабличнаяЧасть.Имя] Цикл
			СоответствиеФизлица.Вставить(СтрокаТабличнойЧасти.Физлицо, "");
		КонецЦикла;
	КонецЦикла;

	ОбработкаТабличныхЧастейПереопределяемый.ПолучитьФизлицИзДополнительныхТабличныхЧастей(Объект, Ложь, "", "", СоответствиеФизлица);

	Формировать = Ложь;
	Если СоответствиеФизлица.Количество() = Объект.ФизическиеЛица.Количество() Тогда
		Для Каждого Строка Из Объект.ФизическиеЛица Цикл
			Если СоответствиеФизлица[Строка.ФизическоеЛицо] = НеОпределено Тогда
				Формировать = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Формировать = Истина;
	КонецЕсли;

	Если Формировать Тогда
		Объект.ФизическиеЛица.Очистить();
		Для Каждого ЭлементСтруктуры Из СоответствиеФизлица Цикл
			Строка = Объект.ФизическиеЛица.Добавить();
			Строка.ФизическоеЛицо = ЭлементСтруктуры.Ключ;
		КонецЦикла;
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗарегистрироватьРасчетыНалоговогоАгента" ИспользуетсяПриЗагрузке="true">
			<Текст>Запрос = Новый Запрос;
Запрос.УстановитьПараметр("ПустойКодПоОКАТО",	"");
Запрос.УстановитьПараметр("ПустойКПП",			"");
Запрос.УстановитьПараметр("ДатаЗакона229ФЗ",	ПроведениеРасчетов.ДатаЗакона229ФЗ());
Запрос.УстановитьПараметр("Организация",		Параметры.Организация);
Запрос.УстановитьПараметр("ДатаНачала",			НачалоГода(ДатаНачала));
Запрос.УстановитьПараметр("ДатаОкончания",		НачалоГода(ДатаОкончания));

Запрос.Текст = 
"ВЫБРАТЬ
|	НДФЛРасчетыСБюджетом.Регистратор,
|	СУММА(НДФЛРасчетыСБюджетом.Налог) КАК Сумма
|ПОМЕСТИТЬ ВТУдержано
|ИЗ
|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
|ГДЕ
|	НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
|	И НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода &gt;= &amp;ДатаЗакона229ФЗ
|	И НДФЛРасчетыСБюджетом.Регистратор ССЫЛКА Документ.ПереносДанных
|	И НДФЛРасчетыСБюджетом.Организация = &amp;Организация
|	И НДФЛРасчетыСБюджетом.Регистратор.ПериодРегистрации МЕЖДУ &amp;ДатаНачала И &amp;ДатаОкончания
|
|СГРУППИРОВАТЬ ПО
|	НДФЛРасчетыСБюджетом.Регистратор
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	НДФЛРасчетыСБюджетом.Регистратор
|ПОМЕСТИТЬ ВТРегистраторы
|ИЗ
|	ВТУдержано КАК НДФЛРасчетыСБюджетом
|ГДЕ
|	НДФЛРасчетыСБюджетом.Сумма &lt;&gt; 0
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	НДФЛРасчетыСБюджетом.НомерСтроки,
|	НДФЛРасчетыСБюджетом.ФизЛицо,
|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
|	НДФЛРасчетыСБюджетом.КодДохода,
|	НДФЛРасчетыСБюджетом.КПП,
|	НДФЛРасчетыСБюджетом.КодПоОКАТО,
|	НДФЛРасчетыСБюджетом.Налог КАК Сумма,
|	НДФЛРасчетыСБюджетом.Период,
|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента,
|	НДФЛРасчетыСБюджетом.ПодразделениеОрганизации,
|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
|	НДФЛРасчетыСБюджетом.Регистратор
|ПОМЕСТИТЬ ВТРасчетыФЛ
|ИЗ
|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
|ГДЕ
|	НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)
|	И НДФЛРасчетыСБюджетом.Налог &lt;&gt; 0
|	И НДФЛРасчетыСБюджетом.Регистратор В
|			(ВЫБРАТЬ
|				Регистраторы.Регистратор
|			ИЗ
|				ВТРегистраторы КАК Регистраторы)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДатыРегистра.НомерСтроки,
|	ЕСТЬNULL(СтатусФизЛицКакНалогоплательщиковНДФЛ.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК Статус,
|	ДатыРегистра.Регистратор
|ПОМЕСТИТЬ ВТСтатусНалогоплательщика
|ИЗ
|	(ВЫБРАТЬ
|		РасчетыФЛ.ФизЛицо КАК ФизЛицо,
|		МАКСИМУМ(СтатусФизЛицКакНалогоплательщиковНДФЛ.Период) КАК Период,
|		РасчетыФЛ.НомерСтроки КАК НомерСтроки,
|		РасчетыФЛ.Регистратор КАК Регистратор
|	ИЗ
|		ВТРасчетыФЛ КАК РасчетыФЛ
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
|			ПО РасчетыФЛ.ФизЛицо = СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо
|				И РасчетыФЛ.МесяцНалоговогоПериода &gt;= СтатусФизЛицКакНалогоплательщиковНДФЛ.Период
|	
|	СГРУППИРОВАТЬ ПО
|		РасчетыФЛ.ФизЛицо,
|		РасчетыФЛ.НомерСтроки,
|		РасчетыФЛ.Регистратор) КАК ДатыРегистра
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ КАК СтатусФизЛицКакНалогоплательщиковНДФЛ
|		ПО ДатыРегистра.ФизЛицо = СтатусФизЛицКакНалогоплательщиковНДФЛ.ФизЛицо
|			И ДатыРегистра.Период = СтатусФизЛицКакНалогоплательщиковНДФЛ.Период
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	РасчетыФЛ.Период,
|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
|	РасчетыФЛ.ФизЛицо,
|	РасчетыФЛ.ОбособленноеПодразделение КАК Организация,
|	РасчетыФЛ.МесяцНалоговогоПериода,
|	РасчетыФЛ.Сумма,
|	ВЫБОР
|		КОГДА РасчетыФЛ.КПП &lt;&gt; &amp;ПустойКПП
|			ТОГДА РасчетыФЛ.КПП
|		КОГДА ЕСТЬNULL(РасчетыФЛ.ПодразделениеОрганизации.КПП, &amp;ПустойКПП) &lt;&gt; &amp;ПустойКПП
|			ТОГДА РасчетыФЛ.ПодразделениеОрганизации.КПП
|		ИНАЧЕ ЕСТЬNULL(РасчетыФЛ.ОбособленноеПодразделение.КПП, &amp;ПустойКПП)
|	КОНЕЦ КАК КПП,
|	ВЫБОР
|		КОГДА РасчетыФЛ.КодПоОКАТО &lt;&gt; &amp;ПустойКодПоОКАТО
|			ТОГДА РасчетыФЛ.КодПоОКАТО
|		КОГДА ЕСТЬNULL(РасчетыФЛ.ПодразделениеОрганизации.КодПоОКАТО, &amp;ПустойКодПоОКАТО) &lt;&gt; &amp;ПустойКодПоОКАТО
|			ТОГДА РасчетыФЛ.ПодразделениеОрганизации.КодПоОКАТО
|		ИНАЧЕ ЕСТЬNULL(РасчетыФЛ.ОбособленноеПодразделение.КодПоОКАТО, &amp;ПустойКодПоОКАТО)
|	КОНЕЦ КАК КодПоОКАТО,
|	ВЫБОР
|		КОГДА Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
|			ТОГДА ВЫБОР
|					КОГДА РасчетыФЛ.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код1010)
|						ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
|				КОНЕЦ
|		КОГДА РасчетыФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
|		КОГДА РасчетыФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка09)
|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка09)
|		КОГДА РасчетыФЛ.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка35)
|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка35)
|		ИНАЧЕ """"
|	КОНЕЦ КАК Ставка,
|	РасчетыФЛ.НомерСтроки КАК НомерСтроки,
|	РасчетыФЛ.Регистратор КАК Регистратор
|ИЗ
|	ВТРасчетыФЛ КАК РасчетыФЛ
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусНалогоплательщика КАК Статусы
|		ПО РасчетыФЛ.НомерСтроки = Статусы.НомерСтроки
|			И РасчетыФЛ.Регистратор = Статусы.Регистратор
|
|УПОРЯДОЧИТЬ ПО
|	Регистратор,
|	НомерСтроки";

ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();

НаборЗаписей = РегистрыНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.СоздатьНаборЗаписей();
НаборЗаписей.ОбменДанными.Загрузка = Истина;
Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор") Цикл
	НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
	НаборЗаписей.Прочитать();
	Пока ВыборкаРегистраторов.Следующий() Цикл
		СтрокаНабора = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНабора, ВыборкаРегистраторов);
		СтрокаНабора.ОКАТО_КПП = СправкиПоНДФЛ.СуммаОКАТОиКПП(ВыборкаРегистраторов.КодПоОКАТО, ВыборкаРегистраторов.КПП);
	КонецЦикла;
	НаборЗаписей.Записать();
	НаборЗаписей.Очистить();
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЗначениеПериодическогоРеквизитаНаНачало" ИспользуетсяПриЗагрузке="false">
			<Текст>Реквизит	= ИсходящиеДанные;
Сотрудник	= ВходящиеДанные;
Начало		= Источник;

Если (Сотрудник.Выбран()=0) или (ПустоеЗначение(Начало)=1) Тогда //вернем пустое значение
	Возврат "";
КонецЕсли;
Периодический = СоздатьОбъект("Периодический"); 
Периодический.ИспользоватьОбъект(Реквизит,Сотрудник);
Если Периодический.ВыбратьЗначения(Начало,Начало)=1 Тогда 
	//в нужном дне значения вводились, возьмем самое первое и посмотрим не родное ли оно
	Если Периодический.ПолучитьЗначение()=1 Тогда
		//Если Периодический.ТекущийДокумент() &lt;&gt; ТекущийДокумент() Тогда
			Возврат Периодический.Значение;	//значение не от нашего документа, значит его и возвращаем	
		//Иначе //первое же значение введено нашим документом, значит меняли мы значение от предыдущей даты
		//	Возврат Периодический.ЗначениеНаДату(Начало-1);
		//КонецЕсли;
	Иначе
		//по какой-то причине не смогли получить это значение (интересно по какой?)
		Возврат "";
	КонецЕсли;
Иначе //в нужной дате движений не было, значит смело возвращаем последнее действующее   
	Возврат Периодический.ЗначениеНаДату(Начало);
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="КодДоходаПоЕСН" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР								= ИсходящиеДанные;
ЯвляетсяВоеннослужащим			= ВходящиеДанные;
СоответствиеВРкодамДоходовЕСН	= Источник;

НомерСтроки="";
Если СоответствиеВРкодамДоходовЕСН.НайтиЗначение(ВР,НомерСтроки,1) = 1 Тогда 
	
	Если ЯвляетсяВоеннослужащим = 1 Тогда
		
		Если СоответствиеВРкодамДоходовЕСН.ПолучитьЗначение(НомерСтроки, 3) = "0" Тогда
			Возврат СоответствиеВРкодамДоходовЕСН.ПолучитьЗначение(НомерСтроки,2)
			
		Иначе
			Возврат "Довольствие"
			
		КонецЕсли;
		
	Иначе
		Возврат СоответствиеВРкодамДоходовЕСН.ПолучитьЗначение(НомерСтроки, 2)
		
	КонецЕсли;
КонецЕсли;

Возврат "НеЯвляетсяОбъектом";</Текст>
		</Алгоритм>
		<Алгоритм Имя="КодДоходаПоНДФЛ" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР									= ИсходящиеДанные;
ЯвляетсяВоеннослужащимПоПризыву		= ВходящиеДанные;
СоответствиеВРкодамДоходовНДФЛ		= Источник;

НомерСтроки="";
Если СоответствиеВРкодамДоходовНДФЛ.НайтиЗначение(ВР,НомерСтроки,1)=1 Тогда 
	Если ЯвляетсяВоеннослужащимПоПризыву = 1 Тогда
		Если СоответствиеВРкодамДоходовНДФЛ.ПолучитьЗначение(НомерСтроки,3)="0" Тогда
			Возврат Число(СоответствиеВРкодамДоходовНДФЛ.ПолучитьЗначение(НомерСтроки,2))
		КонецЕсли;
	Иначе
		Возврат Число(СоответствиеВРкодамДоходовНДФЛ.ПолучитьЗначение(НомерСтроки,2))
	КонецЕсли;
КонецЕсли;

Возврат -1</Текст>
		</Алгоритм>
		<Алгоритм Имя="МожноПереноситьВидРасчета" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР	= ИсходящиеДанные;

Можно = 1;

СписокНепереносимыхВР = Параметры.СписокНепереносимыхВР;

Если СписокНепереносимыхВР.НайтиЗначение(ВР) &gt; 0 Тогда
	Можно = 0;
КонецЕсли;

Возврат Можно;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОблагаетсяФСС_НС" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР	= ИсходящиеДанные;

СпрФСС = СоздатьОбъект("Справочник.ДополнительныеПроводки");
Если СпрФСС.НайтиПоКоду("ФСС_НС") = 0 Тогда
	Возврат 0;    
КонецЕсли;
ФСС_НС = СпрФСС.ТекущийЭлемент();

БазаПроводок = СоздатьОбъект("Справочник.ДополнительныеПроводкиБаза");
ГруппаПоУмолчанию = "";
ГруппаПоУмолчанию = ГруппаРасчетов.ОблагаетсяФССнаНСиПЗ;
БазаПроводок.ИспользоватьВладельца(ФСС_НС);
Если БазаПроводок.ВыбратьЭлементы() = 0 Тогда
	Если ПустоеЗначение(ГруппаПоУмолчанию) = 1 Тогда
		Возврат 0
	Иначе
		Возврат ВР.ВходитВГруппу(ГруппаПоУмолчанию)
	КонецЕсли;
Иначе
	Возврат БазаПроводок.НайтиПоРеквизиту("Расчет",ВР,0);
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбнулитьСальдоВзаиморасчетов" ИспользуетсяПриЗагрузке="true">
			<Текст>Объект.Записать();

Запрос = Новый Запрос;

Запрос.УстановитьПараметр("Организация",	Объект.Организация);
Запрос.УстановитьПараметр("ПериодОстатков",	?(Год(Объект.ПериодРегистрации) = Год(ДатаОкончания), КонецМесяца(ДатаОкончания), КонецМесяца(Объект.ПериодРегистрации)));
Запрос.УстановитьПараметр("Регистратор",	Объект.Ссылка);

Запрос.Текст =
"ВЫБРАТЬ
|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
|	&amp;ПериодОстатков КАК Период,
|	Взаиморасчеты.Организация,
|	Взаиморасчеты.ПериодВзаиморасчетов,
|	Взаиморасчеты.Физлицо,
|	СУММА(Взаиморасчеты.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
|ИЗ
|	(ВЫБРАТЬ
|		Взаиморасчеты.Организация КАК Организация,
|		Взаиморасчеты.ПериодВзаиморасчетов КАК ПериодВзаиморасчетов,
|		Взаиморасчеты.Физлицо КАК Физлицо,
|		Взаиморасчеты.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов
|	ИЗ
|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(
|				НАЧАЛОПЕРИОДА(&amp;ПериодОстатков, ГОД),
|				ВЫБОР
|					КОГДА Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
|						ТОГДА Организация.Ссылка
|					ИНАЧЕ Организация.ГоловнаяОрганизация
|				КОНЕЦ = &amp;Организация) КАК Взаиморасчеты
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		Взаиморасчеты.Организация,
|		Взаиморасчеты.ПериодВзаиморасчетов,
|		Взаиморасчеты.Физлицо,
|		Взаиморасчеты.СуммаВзаиморасчетовОборот
|	ИЗ
|		РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Обороты(
|				НАЧАЛОПЕРИОДА(&amp;ПериодОстатков, ГОД),
|				&amp;ПериодОстатков,
|				Регистратор,
|				ВЫБОР
|					КОГДА Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
|						ТОГДА Организация.Ссылка
|					ИНАЧЕ Организация.ГоловнаяОрганизация
|				КОНЕЦ = &amp;Организация) КАК Взаиморасчеты
|	ГДЕ
|		Взаиморасчеты.Регистратор &lt;&gt; &amp;Регистратор) КАК Взаиморасчеты
|
|СГРУППИРОВАТЬ ПО
|	Взаиморасчеты.Организация,
|	Взаиморасчеты.ПериодВзаиморасчетов,
|	Взаиморасчеты.Физлицо
|
|ИМЕЮЩИЕ
|	СУММА(Взаиморасчеты.СуммаВзаиморасчетов) &lt;&gt; 0";

Объект.Движения.ВзаиморасчетыСРаботникамиОрганизаций.Загрузить(Запрос.Выполнить().Выгрузить());

Запрос.Текст =
"ВЫБРАТЬ
|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
|	&amp;ПериодОстатков КАК Период,
|	НДФЛКЗачету.ФизЛицо,
|	НДФЛКЗачету.Организация,
|	НДФЛКЗачету.СтавкаНалогообложенияРезидента,
|	СУММА(НДФЛКЗачету.СуммаНДФЛКЗачету) КАК СуммаНДФЛКЗачету
|ИЗ
|	(ВЫБРАТЬ
|		НДФЛКЗачетуОстатки.ФизЛицо КАК ФизЛицо,
|		НДФЛКЗачетуОстатки.Организация КАК Организация,
|		НДФЛКЗачетуОстатки.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
|		НДФЛКЗачетуОстатки.СуммаНДФЛКЗачетуОстаток КАК СуммаНДФЛКЗачету
|	ИЗ
|		РегистрНакопления.НДФЛКЗачету.Остатки(
|				НАЧАЛОПЕРИОДА(&amp;ПериодОстатков, ГОД),
|				ВЫБОР
|					КОГДА Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
|						ТОГДА Организация.Ссылка
|					ИНАЧЕ Организация.ГоловнаяОрганизация
|				КОНЕЦ = &amp;Организация) КАК НДФЛКЗачетуОстатки
|	
|	ОБЪЕДИНИТЬ ВСЕ
|	
|	ВЫБРАТЬ
|		НДФЛКЗачетуОбороты.ФизЛицо,
|		НДФЛКЗачетуОбороты.Организация,
|		НДФЛКЗачетуОбороты.СтавкаНалогообложенияРезидента,
|		НДФЛКЗачетуОбороты.СуммаНДФЛКЗачетуОборот
|	ИЗ
|		РегистрНакопления.НДФЛКЗачету.Обороты(
|				НАЧАЛОПЕРИОДА(&amp;ПериодОстатков, ГОД),
|				&amp;ПериодОстатков,
|				Регистратор,
|				ВЫБОР
|					КОГДА Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
|						ТОГДА Организация.Ссылка
|					ИНАЧЕ Организация.ГоловнаяОрганизация
|				КОНЕЦ = &amp;Организация) КАК НДФЛКЗачетуОбороты
|	ГДЕ
|		НДФЛКЗачетуОбороты.Регистратор &lt;&gt; &amp;Регистратор) КАК НДФЛКЗачету
|
|СГРУППИРОВАТЬ ПО
|	НДФЛКЗачету.ФизЛицо,
|	НДФЛКЗачету.Организация,
|	НДФЛКЗачету.СтавкаНалогообложенияРезидента
|
|ИМЕЮЩИЕ
|	СУММА(НДФЛКЗачету.СуммаНДФЛКЗачету) &lt;&gt; 0";

Объект.Движения.НДФЛКЗачету.Загрузить(Запрос.Выполнить().Выгрузить());</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбработатьСтрокуВКолонке" ИспользуетсяПриЗагрузке="false">
			<Текст>ДоходыВычетыНалогиСотрудников	= ИсходящиеДанные;
Колонка							= ВходящиеДанные;
Слагаемое_1						= Источник;
Слагаемое_2						= Приемник;
Слагаемое_3						= ТипПриемника;
Слагаемое_4						= Значение;
СтрокаМесяца					= Выражение;

//разложим и сложим строку в шестой колонке
СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,Колонка), ";");
РазмерСписка = СписокИзЧетырех.РазмерСписка();
Составл_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1))) + Слагаемое_1;

Составл_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2))) + Слагаемое_2;
Составл_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3))) + Слагаемое_3;
Составл_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4))) + Слагаемое_4;
ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,Колонка,Строка(""+Составл_1+";"+Составл_2+";"+Составл_3+";"+Составл_4+";")); 

Источник		= Слагаемое_1;
Приемник		= Слагаемое_2;
ТипПриемника	= Слагаемое_3;
Значение		= Слагаемое_4;
Выражение		= СтрокаМесяца;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбходСотрудниковДляЕСН" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаЕСНСведенияОДоходах			= ИсходящиеДанные;
ТаблицаЕСННачисления				= ВходящиеДанные;
ВсегоСотров							= Источник;
Сотрудники							= Приемник;
ЗапросПоЕСН							= ТипПриемника;
ЗапросПоЕСНкСправочникам			= Значение;
ДоходыВычетыНалогиСотрудников		= Выражение;
ЖрнЗарплата							= Пусто;
Год									= ВыборкаДанных;
ПервыйМесяц							= Объект;
ПоследнийМесяц						= КоллекцияОбъектов;
ОрганизацияИнвалидов				= ОбъектКоллекции;
ИскатьВоенных						= ИмяПКО;
ТаблицаРаспределенияПоШаблПроводок	= ИмяПКОВидСубконто;
ТаблицаРаспределения				= НомерПКО;
ИскатьЕНВД							= НомерПКС;
КолонкаПособийКРаспределению		= Правило;
ДатаОтменыЕСНприЕНВД				= КлючВыгружаемыхДанных;
СоответствиеВРкодамДоходовЕСН		= НеЗапоминатьВыгруженные;
								
// скопируем структуру таблицы
ВремТаблицаЕСНСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаЕСНСведенияОДоходах.Загрузить(ТаблицаЕСНСведенияОДоходах); 								
								
ВремТаблицаЕСННачисления = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаЕСННачисления.Загрузить(ТаблицаЕСННачисления);
								
// перебираем сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл
	
	ВремТаблицаЕСНСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаЕСННачисления.УдалитьСтроки();

	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	
	КодСотра=Сотрудник.Код;
	ИмяСотра=Сотрудник.Наименование; 
	
	НалогиПоРегистрации=0;
	ЗапросПоЕСН.вНачалоВыборки();
	Если ЗапросПоЕСН.Получить(Сотрудник,,)=1 Тогда
		НалогиПоРегистрации=1;	
	КонецЕсли; 
	
	ДанныеВСправочнике=0;
	ЗапросПоЕСНкСправочникам.вНачалоВыборки();
	Если ЗапросПоЕСНкСправочникам.Получить(Сотрудник,)=1 Тогда
		ДанныеВСправочнике=1;	
	КонецЕсли;
	
	НовыйПроцент = Окр(СчСотров/ВсегоСотров*100);
	
	Если СчСотров &lt; ВсегоСотров Тогда
		глСтатусСтрока(Форма,"Обрабатываются доходы"+?(ВсегоСотров=1,""," ("+НовыйПроцент+"%)")+": "+ИмяСотра);
	КонецЕсли;

	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.НоваяСтрока(); 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(ДоходыВычетыНалогиСотрудников.КоличествоСтрок(),1,КодСотраВтаблице+глДополнитьСтроку(Сч,2));
	КонецЦикла;
	
	Если ПустоеЗначение(""+КодСотра+ИмяСотра)=1 Тогда
		Продолжить
	КонецЕсли;
	
	// получим выборку записей по всем местам работы сотра на предприятии,
	// включая все места по внутреннему совместительству
	Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,ЖрнЗарплата.ПериодПоДате(Дата(Год,ПервыйМесяц,15)),ЖрнЗарплата.ПериодПоДате(Дата(Год,ПоследнийМесяц,15))) = 1 Тогда
	ИначеЕсли ДанныеВСправочнике + НалогиПоРегистрации = 0 Тогда
		Продолжить
	КонецЕсли;

	Военнослужащий = "000000000000";
	Прокурор	   = "000000000000";
	Инвалид = ОрганизацияИнвалидов; 
	ЕСНвЧастиПФР = "111111111111";
	ВзиматьНаСтрахПФР = "111111111111";
	ЕСНвЧастиОМС = "111111111111";
	ЕСНвЧастиФСС = "111111111111"; 
	
	СкидкаМатпомощи = 3000;
	
	Для Сч = ПервыйМесяц По ПоследнийМесяц Цикл
		
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
		
		Если (Сотрудник.НеВзиматьНаСтрахПФР.Получить(ДатаМесяца) = 1) Тогда
			ВзиматьНаСтрахПФР = ?(Сч=1,"",Лев(ВзиматьНаСтрахПФР,Сч-1))+"0"+?(Сч=12,"",Прав(ВзиматьНаСтрахПФР,12-Сч));
		КонецЕсли;
		
		Если (Сотрудник.НеВзиматьЕСНвПФР.Получить(ДатаМесяца) = 1) Тогда
			ЕСНвЧастиПФР = ?(Сч=1,"",Лев(ЕСНвЧастиПФР,Сч-1))+"0"+?(Сч=12,"",Прав(ЕСНвЧастиПФР,12-Сч));
		КонецЕсли;
		
		Если Сотрудник.НеВзиматьЕСНвФСС.Получить(ДатаМесяца) = 1 Тогда
			ЕСНвЧастиФСС = ?(Сч=1,"",Лев(ЕСНвЧастиФСС,Сч-1))+"0"+?(Сч=12,"",Прав(ЕСНвЧастиФСС,12-Сч));
		КонецЕсли;
		
		Если Сотрудник.НеВзиматьЕСНвФОМС.Получить(ДатаМесяца) = 1 Тогда
			ЕСНвЧастиОМС = ?(Сч=1,"",Лев(ЕСНвЧастиОМС,Сч-1))+"0"+?(Сч=12,"",Прав(ЕСНвЧастиОМС,12-Сч));
		КонецЕсли;
		
		Если Сред(ОрганизацияИнвалидов,Сч,1) = "0" Тогда
			КатегорияПФР = Сотрудник.КатегорияПлательщикаПФР.Получить(ДатаМесяца).Идентификатор();
			Если ПустоеЗначение(КатегорияПФР) = 1 Тогда
				КатегорияПФР = глКатегорияПФР();
			КонецЕсли;
			Если Найти(",НРИВ,СХИВ,ФХИВ,ИПИВ,АДИВ,",","+КатегорияПФР+",") &gt; 0 Тогда
				Инвалид = ?(Сч=1,"",Лев(Инвалид,Сч-1))+"1"+?(Сч=12,"",Прав(Инвалид,12-Сч));
			КонецЕсли;
		КонецЕсли;
		
		Если ИскатьВоенных = 1 Тогда
			Если глВоеннослужащий(Сотрудник, ДатаМесяца) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
			Если глВоеннослужащий(Сотрудник, НачМесяца(ДатаМесяца)) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(ДатаМесяца).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;				

		КонецЕсли;

	КонецЦикла;
	
	СуммаЕНВДза7месяцев2002года = 0;
	БылМесяцДохода = 0;
	Пока ЖрнЗарплата.ПолучитьЗапись() = 1 Цикл
		
		ВР = ЖрнЗарплата.ВидРасч;
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеНачисления) &lt;&gt; 1) И (ВР.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме) &lt;&gt; 1) Тогда
			Продолжить
		КонецЕсли;
		
		СуммаРез = ЖрнЗарплата.Результат; 
		Если СуммаРез = 0 Тогда
			Продолжить
		КонецЕсли; 
		Скидка = 0;
		
		Объект					= ЖрнЗарплата.Объект; //это сотрудник
		ДокументОснование		= ЖрнЗарплата.Документ;
		НомерСтрокиДокумента	= ЖрнЗарплата.НомерСтрокиДокумента;
			
		ДатаДохода				= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
		ПериодРегистрации		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
		ПериодДействия			= НачМесяца(ЖрнЗарплата.ДатаНачала);
		ПериодДействияНачало	= ЖрнЗарплата.ДатаНачала;
		ПериодДействияКонец		= ЖрнЗарплата.ДатаОкончания;
		МесяцДохода				= ДатаМесяц(ДатаДохода);
		
		Если БылМесяцДохода &lt;&gt; МесяцДохода Тогда
			БылМесяцДохода = МесяцДохода
		КонецЕсли;
		
		НомерКолонки = 0;
		НомерКолонкиПФР = 0;
		ОсобыеРасходыФСС=0; //для обработки пособий по ухоу за ребенком с 2007 года
		МатПомощьНаДетей = 0; //для обработки мат. помощи при рождении детей с 2008 года
				   
		Если Число(Сред(Прокурор,МесяцДохода,1)) = 1 Тогда
			НомерСтроки="";
			Если СоответствиеВРкодамДоходовЕСН.НайтиЗначение(ВР,НомерСтроки,1)=1 Тогда 
				КодДохода="Содержание прокуроров";
			Иначе  
				КодДохода="Не является объектом по ЕСН";
			КонецЕсли;
		Иначе
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР, Число(Сред(Военнослужащий,МесяцДохода,1)), СоответствиеВРкодамДоходовЕСН));
		КонецЕсли;
		Если ПустаяСтрока(КодДохода) = 1 Тогда
			// целиком облагаемые 
			КодДоходаЕСН = "ОблагаетсяЦеликом";
		ИначеЕсли КодДохода = "Авторские договора" Тогда
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Если Док.Вид() = "НачисленияУдержанияСписком" Тогда
				Док.ПолучитьСтрокуПоНомеру(ЖрнЗарплата.НомерСтрокиДокумента);
			КонецЕсли;
			КодДохода = Док.ВидДохода.Код;
			КодВычета = Док.ВидВычета.Код;
			Если КодВычета = "405" Тогда // норматив затрат по авторским договорам - см. пп. 3 ст. 221 НК РФ
				Норматив = 0;
				Если КодДохода = "2206" Тогда
					Норматив = 25
				ИначеЕсли (Найти(",2201,2207,2208,","," + КодДохода + ",") &gt; 0)  Тогда
					Норматив = 20
				ИначеЕсли (Найти(",2202,2204,2209,","," + КодДохода + ",") &gt; 0)  Тогда
					Норматив = 30
				ИначеЕсли (Найти(",2203,2205,","," + КодДохода + ",") &gt; 0)  Тогда
					Норматив = 40
				Иначе
					
				КонецЕсли; 
				Расходы = Окр(СуммаРез * Норматив / 100,2);
			Иначе // фактические расходы 
				Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
					Расходы = - Док.Вычет;
				Иначе 
					Расходы = Док.Вычет;
				КонецЕсли;
			КонецЕсли;
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = Макс(Расходы,СуммаРез);
				СуммаРез = СуммаРез - Скидка;
			Иначе 
				Скидка = Макс(Мин(Расходы,СуммаРез),0);
				СуммаРез = СуммаРез - Скидка;
			КонецЕсли;
			НомерКолонки = 18; 
			КодДоходаЕСН = "ДоговораАвторские";
		ИначеЕсли (КодДохода="Договора подряда")  Тогда
			НомерКолонки = 18; 
			КодДоходаЕСН = "ДоговораГПХ";
		ИначеЕсли (КодДохода="Лицензионные договора")  Тогда
			НомерКолонки = 24;
			КодДоходаЕСН = "НеЯвляетсяОбъектом";				
		ИначеЕсли (КодДохода="Расходы за счет ФСС")  Тогда
			НомерКолонки = 9;
			НомерКолонкиПФР = 31; 
			КодДоходаЕСН = "ПособияЗаСчетФСС";
		ИначеЕсли (КодДохода="Расходы за счет ФСС особые")  Тогда //пособие по уходу за ребенком с 2007 года
			НомерКолонки = 9;
			НомерКолонкиПФР = 31;
			ОсобыеРасходыФСС = ИскатьЕНВД; //только если есть ЕНВД  
			КодДоходаЕСН = "ПособияЗаСчетФСС";
		ИначеЕсли (КодДохода="Возмещаемые ФСС")  Тогда
			НомерКолонки = 25;
			НомерКолонкиПФР = 31;
			КодДоходаЕСН = "ПособияЗаСчетФСС";
		ИначеЕсли (КодДохода="МатпомощьПриРожденииРебенка")  Тогда
			МатПомощьНаДетей = 1;
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Скидка = Док.СуммаВычета;
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = -1*Скидка;
			КонецЕсли;
			// СуммаРез - это то, что облагается ЕСН + льгота
			// Скидка - то, что не облагается ЕСН - ст 238 в колонки 17 и 30
			КодДоходаЕСН = "МатпомощьПриРожденииРебенка";
		ИначеЕсли КодДохода="-1"  Тогда 
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				НомерКолонки = 13;
				КодДохода="Начислено за счет чистой прибыли";
				КодДоходаЕСН = "ВыплатыЗаСчетПрибыли";
			ИначеЕсли (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2005) или (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2007) Тогда
				НомерКолонки = 25;
				НомерКолонкиПФР = 30;
				КодДоходаЕСН = "НеОблагаетсяЦеликом";
			Иначе
				КодДохода="Не облагается ЕСН";
				НомерКолонки = 17;
				НомерКолонкиПФР = 30;
				КодДоходаЕСН = "НеОблагаетсяЦеликом";
			КонецЕсли;	
		ИначеЕсли (КодДохода="Не является объектом по ЕСН")  Тогда
			НомерКолонки = -1; 
			КодДоходаЕСН = "НеЯвляетсяОбъектом";
		ИначеЕсли (КодДохода=Строка(Перечисление.ТипыДоходовДляЕСН.ЗаСчетПрибыли)) Тогда
			НомерКолонки = 13; 
			КодДоходаЕСН = "ВыплатыЗаСчетПрибыли";
		ИначеЕсли (КодДохода=Строка(Перечисление.ТипыДоходовДляЕСН.ст238п2а2)) Тогда
			НомерКолонки = 14;
			НомерКолонкиПФР = 27;
			КодДоходаЕСН = "Матпомощь";
			
			Скидка = СкидкаМатпомощи;
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = Макс(-1*Скидка,СуммаРез);
			Иначе 
				Скидка = Макс(Мин(Скидка,СуммаРез),0);
			КонецЕсли;
			СкидкаМатпомощи = СкидкаМатпомощи - Скидка; 
			
		ИначеЕсли (КодДохода="Довольствие")  Тогда
			НомерКолонки = 11;
			КодДоходаЕСН = "ДенежноеДовольствиеВоеннослужащих";
		ИначеЕсли (КодДохода="Содержание прокуроров")  Тогда
			НомерКолонки = 19;
			КодДоходаЕСН = "ДенежноеСодержаниеПрокуроров";
		Иначе
			
		КонецЕсли;  
		
		// занесем доходы в таблицу по сотруднику
		Если НомерКолонки &gt;= 0 Тогда
			
			ОписаниеВР = глПредставлениеВидаРасчета(ВР);
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 10, СуммаРез);
			
			Если ПустоеЗначение(КодДохода) = 1 Тогда
				КодДохода = "Облагается ЕСН"
			КонецЕсли;
			
			СуммаИзПрибыли = 0;
			СуммаПриходящаясяНаЕНВД = 0;
			СуммаНеОбъекта = 0;
			
			Если ОсобыеРасходыФСС=1 Тогда 
				
				// обработка пособий по уходу до полутора лет с 2007 года, при наличии ЕНВД
				
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,ТаблицаРаспределения, "БезИсточниковФинансирования",,,,,1);
				ДоляЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						ДоляЕНВД = ДоляЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				ДоляНеЕНВД = СуммаРез - ДоляЕНВД;
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению) + ДоляНеЕНВД);
				
				Если (СуммаРез &lt;&gt; 0) Тогда // отдельно запомним доходы, не облагаемые взносами в ПФР (ст. 238 НК РФ)
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПФР, ДоляНеЕНВД);
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПФР, ДоляЕНВД);
				КонецЕсли; 
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, ДоляНеЕНВД);
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 25, ДоляЕНВД);
				
				// отразим доли ЕНВД и неЕНВД
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДоляНеЕНВД, 
					0,
					КодДоходаЕСН,
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
					
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ДоляЕНВД,
					0,
					КодДоходаЕСН,
					1,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
				
				ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					ДоляЕНВД,
					0,
					КодДоходаЕСН,
					ВР,
					1,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					ДоляНеЕНВД,
					0,
					КодДоходаЕСН,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
				
			ИначеЕсли МатПомощьНаДетей =1 Тогда
				
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,ТаблицаРаспределения, "БезИсточниковФинансирования");
				
				// данные по НУ по ЕСН
				Для СчСтрок = 1 По ТаблицаРаспределения.КоличествоСтрок() Цикл
					Распределение = ТаблицаРаспределения.ПолучитьЗначение(СчСтрок,"Шаблон");
					ЧастьРезультата = ТаблицаРаспределения.ПолучитьЗначение(СчСтрок,"Сумма");
					Если Распределение = Перечисление.ТипыДоходовДляЕСН.ЗаСчетПрибыли Тогда
						СуммаИзПрибыли = СуммаИзПрибыли + ЧастьРезультата;
					ИначеЕсли Распределение = Перечисление.ТипыДоходовДляЕСН.НеЯвляетсяОбъектомЕСН Тогда
						СуммаНеОбъекта = СуммаНеОбъекта + ЧастьРезультата;
					КонецЕсли;
				КонецЦикла;
				
				//выделяем ЕНВД:
				Если ИскатьЕНВД = 1 Тогда
					ДоляЕНВД = 0; 
					Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
						Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
							ДоляЕНВД = ДоляЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
						КонецЕсли;
					КонецЦикла;
					Если СуммаРез &lt;&gt; 0 Тогда
						СуммаПриходящаясяНаЕНВД = Окр((СуммаРез - СуммаИзПрибыли - СуммаНеОбъекта)/СуммаРез*ДоляЕНВД,2);
						// учтем, что СуммаРез вместе с вычетом по авторским может оказаться меньше, чем ДоляЕНВД: 
						Если СуммаРез &gt; 0 Тогда
							СуммаПриходящаясяНаЕНВД  = Мин(СуммаРез,СуммаПриходящаясяНаЕНВД);
						Иначе
							СуммаПриходящаясяНаЕНВД  = Макс(СуммаРез,СуммаПриходящаясяНаЕНВД);
						КонецЕсли;
					Иначе    
						СуммаПриходящаясяНаЕНВД = 0;
					КонецЕсли;
				КонецЕсли;
				
				Если (СуммаПриходящаясяНаЕНВД &lt;&gt; 0) Тогда
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению+1,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению+1) + СуммаПриходящаясяНаЕНВД);
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 25, СуммаПриходящаясяНаЕНВД);
					
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
						Сотрудник,
						Дата(Год,МесяцДохода,1),
						СуммаПриходящаясяНаЕНВД,
						0,
						КодДоходаЕСН,
						1,
						ВремТаблицаЕСНСведенияОДоходах,
						ДокументОснование);
						
					ЗаполнитьТаблицуЕСННачисления(
						Объект,
						Сотрудник,
						ПериодРегистрации,
						ПериодДействия,
						ПериодДействияНачало,
						ПериодДействияКонец,
						СуммаПриходящаясяНаЕНВД,
						0,
						КодДоходаЕСН,
						ВР,
						1,
						,
						,
						ДокументОснование,
						НомерСтрокиДокумента,
						ЭтоСторно,
						ВремТаблицаЕСННачисления);
				КонецЕсли;
				
				НомерКолонки = 17;
				НомерКолонкиПФР = 30;
				
				Если (Скидка &lt;&gt; 0) Тогда // отдельно запомним доходы, не облагаемые взносами в ПФР (ст. 238 НК РФ)
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПФР, Скидка);
				КонецЕсли;
				
				Если (СуммаРез &lt;&gt; 0) Тогда
					
					Если (СуммаПриходящаясяНаЕНВД &lt;&gt; 0) и (Скидка &lt;&gt; 0) Тогда 
						// зарегистрируем скидку на ЕНВД
						ЗаполнитьТаблицуЕСНСведенияОДоходах(
							Сотрудник, 
							Дата(Год,МесяцДохода,1), 
							0, 
							Окр(Скидка * СуммаПриходящаясяНаЕНВД/СуммаРез,2), 
							КодДоходаЕСН, 
							1, 
							ВремТаблицаЕСНСведенияОДоходах, 
							ДокументОснование);
							
						ЗаполнитьТаблицуЕСННачисления(
							Объект, 
							Сотрудник, 
							ПериодРегистрации, 
							ПериодДействия, 
							ПериодДействияНачало, 
							ПериодДействияКонец, 
							0, 
							Окр(Скидка * СуммаПриходящаясяНаЕНВД/СуммаРез,2), 
							КодДоходаЕСН, 
							ВР, 
							1,
							,
							,
							ДокументОснование,
							НомерСтрокиДокумента,
							ЭтоСторно,
							ВремТаблицаЕСННачисления);
					КонецЕсли;
					
					Скидка = Скидка - Окр(Скидка * СуммаПриходящаясяНаЕНВД/СуммаРез,2); // учтем ЕНВД 
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, Скидка);
					
					// зарегистрируем не ЕНВД   //(СуммаРез - СуммаИзПрибыли - СуммаНеОбъекта)
					СуммаНеЕНВД = (СуммаРез - СуммаИзПрибыли - СуммаНеОбъекта) - СуммаПриходящаясяНаЕНВД;
					Если СуммаНеЕНВД &lt;&gt;0 Тогда
						ЗаполнитьТаблицуЕСНСведенияОДоходах(
							Сотрудник,
							Дата(Год,МесяцДохода,1),
							СуммаНеЕНВД,
							0,
							КодДоходаЕСН,
							0,
							ВремТаблицаЕСНСведенияОДоходах,
							ДокументОснование);
							
						ЗаполнитьТаблицуЕСНСведенияОДоходах(
							Сотрудник,
							Дата(Год,МесяцДохода,1),
							0,
							Скидка,
							КодДоходаЕСН,
							0,
							ВремТаблицаЕСНСведенияОДоходах,
							ДокументОснование);
							
						ЗаполнитьТаблицуЕСННачисления(
							Объект,
							Сотрудник,
							ПериодРегистрации,
							ПериодДействия,
							ПериодДействияНачало,
							ПериодДействияКонец,
							СуммаНеЕНВД,
							Скидка,
							КодДоходаЕСН,
							ВР,
							0,
							,
							,
							ДокументОснование,
							НомерСтрокиДокумента,
							ЭтоСторно,
							ВремТаблицаЕСННачисления);
						
					КонецЕсли;
					
				КонецЕсли; 
				
				Если СуммаИзПрибыли &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
						Сотрудник,
						Дата(Год,МесяцДохода,1),
						СуммаИзПрибыли,
						0,
						"ВыплатыЗаСчетПрибыли",
						0,
						ВремТаблицаЕСНСведенияОДоходах,
						ДокументОснование);
						
					ЗаполнитьТаблицуЕСННачисления(
						Объект,
						Сотрудник,
						ПериодРегистрации,
						ПериодДействия,
						ПериодДействияНачало,
						ПериодДействияКонец,
						СуммаИзПрибыли,
						0,
						"ВыплатыЗаСчетПрибыли",
						ВР,
						1,
						,
						,
						ДокументОснование,
						НомерСтрокиДокумента,
						ЭтоСторно,
						ВремТаблицаЕСННачисления);
				КонецЕсли;  
				
				Если СуммаНеОбъекта &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
						Сотрудник,
						Дата(Год,МесяцДохода,1),
						СуммаНеОбъекта,
						0,
						"НеЯвляетсяОбъектом",
						0,
						ВремТаблицаЕСНСведенияОДоходах,
						ДокументОснование);
						
					ЗаполнитьТаблицуЕСННачисления(
						Объект,
						Сотрудник,
						ПериодРегистрации,
						ПериодДействия,
						ПериодДействияНачало,
						ПериодДействияКонец,
						СуммаНеОбъекта,
						0,
						"НеЯвляетсяОбъектом",
						ВР,
						0,
						,
						,
						ДокументОснование,
						НомерСтрокиДокумента,
						ЭтоСторно,
						ВремТаблицаЕСННачисления);
				КонецЕсли;
				
			Иначе
				Если (НомерКолонки &lt;&gt; 13) и (НомерКолонки &lt;&gt; 9) и (НомерКолонки &lt;&gt; 11) и (НомерКолонки &lt;&gt; 19) Тогда
					
					глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,ТаблицаРаспределения, "БезИсточниковФинансирования");
					
					
					// данные по НУ по ЕСН
					Для СчСтрок = 1 По ТаблицаРаспределения.КоличествоСтрок() Цикл
						Распределение = ТаблицаРаспределения.ПолучитьЗначение(СчСтрок,"Шаблон");
						ЧастьРезультата = ТаблицаРаспределения.ПолучитьЗначение(СчСтрок,"Сумма");
						Если Распределение = Перечисление.ТипыДоходовДляЕСН.ЗаСчетПрибыли Тогда
							СуммаИзПрибыли = СуммаИзПрибыли + ЧастьРезультата;
						ИначеЕсли Распределение = Перечисление.ТипыДоходовДляЕСН.НеЯвляетсяОбъектомЕСН Тогда
							СуммаНеОбъекта = СуммаНеОбъекта + ЧастьРезультата;
						КонецЕсли;
					КонецЦикла;
					
					//выделяем ЕНВД:
					Если ИскатьЕНВД = 1 Тогда
						ДоляЕНВД = 0; 
						Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
							Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
								ДоляЕНВД = ДоляЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
							КонецЕсли;
						КонецЦикла;
						Если СуммаРез &lt;&gt; 0 Тогда
							СуммаПриходящаясяНаЕНВД = Окр((СуммаРез - СуммаИзПрибыли - СуммаНеОбъекта)/СуммаРез*ДоляЕНВД,2);
							// учтем, что СуммаРез вместе с вычетом по авторским может оказаться меньше, чем ДоляЕНВД: 
							Если СуммаРез &gt; 0 Тогда
								СуммаПриходящаясяНаЕНВД  = Мин(СуммаРез,СуммаПриходящаясяНаЕНВД);
							Иначе
								СуммаПриходящаясяНаЕНВД  = Макс(СуммаРез,СуммаПриходящаясяНаЕНВД);
							КонецЕсли;
						Иначе    
							СуммаПриходящаясяНаЕНВД = 0;
						КонецЕсли;
					КонецЕсли;
					
					Если (СуммаПриходящаясяНаЕНВД &lt;&gt; 0) Тогда
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению+1,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению+1) + СуммаПриходящаясяНаЕНВД);
					КонецЕсли;
					
				ИначеЕсли (НомерКолонки = 9) и (ИскатьЕНВД = 1) Тогда
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,КолонкаПособийКРаспределению) + СуммаРез);
				КонецЕсли; 
				
				
				
				Если СуммаИзПрибыли &lt;&gt; 0 Тогда
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 13, СуммаИзПрибыли);
					
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
						Сотрудник,
						Дата(Год,МесяцДохода,1),
						СуммаИзПрибыли,
						0,
						"ВыплатыЗаСчетПрибыли",
						0,
						ВремТаблицаЕСНСведенияОДоходах,
						ДокументОснование);
						
					ЗаполнитьТаблицуЕСННачисления(
						Объект,
						Сотрудник,
						ПериодРегистрации,
						ПериодДействия,
						ПериодДействияНачало,
						ПериодДействияКонец,
						СуммаИзПрибыли,
						0,
						"ВыплатыЗаСчетПрибыли",
						ВР,
						0,
						,
						,
						ДокументОснование,
						НомерСтрокиДокумента,
						ЭтоСторно,
						ВремТаблицаЕСННачисления);
				КонецЕсли;
				Если СуммаНеОбъекта &lt;&gt; 0 Тогда
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 10, -СуммаНеОбъекта);
					
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
						Сотрудник,
						Дата(Год,МесяцДохода,1),
						СуммаНеОбъекта,
						0,
						"НеЯвляетсяОбъектом",
						0,
						ВремТаблицаЕСНСведенияОДоходах,
						ДокументОснование);
						
					ЗаполнитьТаблицуЕСННачисления(
						Объект,
						Сотрудник,
						ПериодРегистрации,
						ПериодДействия,
						ПериодДействияНачало,
						ПериодДействияКонец,
						СуммаНеОбъекта,
						0,
						"НеЯвляетсяОбъектом",
						ВР,
						0,
						,
						,
						ДокументОснование,
						НомерСтрокиДокумента,
						ЭтоСторно,
						ВремТаблицаЕСННачисления);
				КонецЕсли;
				Если СуммаПриходящаясяНаЕНВД &lt;&gt; 0 Тогда
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 25, СуммаПриходящаясяНаЕНВД);
					
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
						Сотрудник,
						Дата(Год,МесяцДохода,1),
						СуммаПриходящаясяНаЕНВД,
						0,
						КодДоходаЕСН,
						1,
						ВремТаблицаЕСНСведенияОДоходах,
						ДокументОснование);
						
					ЗаполнитьТаблицуЕСННачисления(
						Объект,
						Сотрудник,
						ПериодРегистрации,
						ПериодДействия,
						ПериодДействияНачало,
						ПериодДействияКонец,
						СуммаПриходящаясяНаЕНВД,
						0,
						КодДоходаЕСН,
						ВР,
						1,
						,
						,
						ДокументОснование,
						НомерСтрокиДокумента,
						ЭтоСторно,
						ВремТаблицаЕСННачисления);
				КонецЕсли;
				
				СуммаРез = СуммаРез - СуммаИзПрибыли - СуммаНеОбъекта; // учтем необлагаемые части
				
				Если (НомерКолонкиПФР &gt; 0) и (СуммаРез &lt;&gt; 0) Тогда // отдельно запомним доходы, не облагаемые взносами в ПФР (ст. 238 НК РФ)
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПФР, СуммаРез);
				КонецЕсли;
				
				СуммаРез = СуммаРез - СуммаПриходящаясяНаЕНВД; // учтем ЕНВД 
				
				Если СуммаРез &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
						Сотрудник,
						Дата(Год,МесяцДохода,1),
						СуммаРез,
						0,
						КодДоходаЕСН,
						0,
						ВремТаблицаЕСНСведенияОДоходах,
						ДокументОснование);
						
					ЗаполнитьТаблицуЕСННачисления(
						Объект,
						Сотрудник,
						ПериодРегистрации,
						ПериодДействия,
						ПериодДействияНачало,
						ПериодДействияКонец,
						СуммаРез,
						0,
						КодДоходаЕСН,
						ВР,
						0,
						,
						,
						ДокументОснование,
						НомерСтрокиДокумента,
						ЭтоСторно,
						ВремТаблицаЕСННачисления);
				КонецЕсли;
				
				Если (НомерКолонки = 14) и (Скидка &lt;&gt; 0) Тогда
	
					ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					0,
					Скидка,
					КодДоходаЕСН,
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					Скидка,
					КодДоходаЕСН,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;
				
				Если (НомерКолонки &gt; 0) и (СуммаРез &lt;&gt; 0) Тогда
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, СуммаРез);
					
					Если (Найти(",2201,2202,2203,2204,2205,2206,2207,2208,2209,2299,","," + КодДохода + ",") &gt; 0) Тогда
						НомерКолонки = "СкидкиАвторские" ; 
						// вычислим долю скидки на неЕНВД
						СкидкаНеЕНВД = Окр(Скидка * СуммаРез / (СуммаРез + СуммаПриходящаясяНаЕНВД), 2);
						ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, Скидка);
						
						ЗаполнитьТаблицуЕСНСведенияОДоходах(
							Сотрудник,
							Дата(Год,МесяцДохода,1),
							СкидкаНеЕНВД,
							СкидкаНеЕНВД,
							КодДоходаЕСН,
							0,
							ВремТаблицаЕСНСведенияОДоходах,
							ДокументОснование);
							
						ЗаполнитьТаблицуЕСННачисления(
							Объект,
							Сотрудник,
							ПериодРегистрации,
							ПериодДействия,
							ПериодДействияНачало,
							ПериодДействияКонец,
							СкидкаНеЕНВД,
							СкидкаНеЕНВД,
							КодДоходаЕСН,
							ВР,
							0,
							,
							,
							ДокументОснование,
							НомерСтрокиДокумента,
							ЭтоСторно,
							ВремТаблицаЕСННачисления);
							
						СкидкаЕНВД = Скидка - СкидкаНеЕНВД;
						Если СкидкаЕНВД &lt;&gt; 0 Тогда
							ЗаполнитьТаблицуЕСНСведенияОДоходах(
							Сотрудник,
							Дата(Год,МесяцДохода,1),
							СкидкаЕНВД,
							СкидкаЕНВД,
							КодДоходаЕСН,
							1,
							ВремТаблицаЕСНСведенияОДоходах,
							ДокументОснование);
							
							ЗаполнитьТаблицуЕСННачисления(
							Объект,
							Сотрудник,
							ПериодРегистрации,
							ПериодДействия,
							ПериодДействияНачало,
							ПериодДействияКонец,
							СкидкаЕНВД,
							СкидкаЕНВД,
							КодДоходаЕСН,
							ВР,
							1,
							,
							,
							ДокументОснование,
							НомерСтрокиДокумента,
							ЭтоСторно,
							ВремТаблицаЕСННачисления);
						КонецЕсли;
						
					КонецЕсли;
						
				КонецЕсли; 
				
			КонецЕсли;
		
		ИначеЕсли НомерКолонки = -1 Тогда
			ЗаполнитьТаблицуЕСНСведенияОДоходах(
				Сотрудник,
				Дата(Год,МесяцДохода,1),
				СуммаРез,
				0,
				"НеЯвляетсяОбъектом",
				0,
				ВремТаблицаЕСНСведенияОДоходах,
				ДокументОснование);
				
			ЗаполнитьТаблицуЕСННачисления(
				Объект,
				Сотрудник,
				ПериодРегистрации,
				ПериодДействия,
				ПериодДействияНачало,
				ПериодДействияКонец,
				СуммаРез,
				Скидка,
				"НеЯвляетсяОбъектом",
				ВР,
				0,
				,
				,
				ДокументОснование,
				НомерСтрокиДокумента,
				ЭтоСторно,
				ВремТаблицаЕСННачисления);
			
		КонецЕсли;	
		
	КонецЦикла; // обхода записей ж.р. 
	
	ЭтоСторно = 0;
	// добавим доходы и налоги из справочника
	Если  ДанныеВСправочнике = 1 Тогда
		
		ВР = ПолучитьПустоеЗначение("ВидРасчета");
		
		Пока ЗапросПоЕСНкСправочникам.Группировка("ГодоМесяц")=1 Цикл
			
			МесяцДохода = Число(ЗапросПоЕСНкСправочникам.ГодоМесяц) % 100;
			
			УдержаноПФР = ЗапросПоЕСНкСправочникам.УдержаноПФР;
			УдержаноФФОМС = ЗапросПоЕСНкСправочникам.УдержаноФФОМС;
			УдержаноТФОМС = ЗапросПоЕСНкСправочникам.УдержаноТФОМС;
			УдержаноФСС = ЗапросПоЕСНкСправочникам.УдержаноФСС;
			УдержаноПФРнаСтраховуюПенсию = ЗапросПоЕСНкСправочникам.УдержаноПФРнаСтраховуюПенсию;
			УдержаноПФРнаНакопительнуюПенсию = ЗапросПоЕСНкСправочникам.УдержаноПФРнаНакопительнуюПенсию;
			БЛзаСчетФСС = ЗапросПоЕСНкСправочникам.БЛзаСчетФСС;
			ПрочиеРасходыЗаСчетФСС = ЗапросПоЕСНкСправочникам.ПрочиеРасходыЗаСчетФСС;
			НачисленоВсего = ЗапросПоЕСНкСправочникам.НачисленоВсего;
			ОбъектЕСНпоЕНВД = ЗапросПоЕСНкСправочникам.ОбъектЕСНпоЕНВД;
			ДенежноеДовольствиеВоенных = ЗапросПоЕСНкСправочникам.ДенежноеДовольствиеВоенных;
			НачисленияЗаСчетПрибыли = ЗапросПоЕСНкСправочникам.НачисленияЗаСчетПрибыли;
			ст238п2а2 = ЗапросПоЕСНкСправочникам.ст238п2а2;
			Стипендия = ЗапросПоЕСНкСправочникам.Стипендия;
			ПрочиеНеоблагаемыеДоходы = ЗапросПоЕСНкСправочникам.ПрочиеНеоблагаемыеДоходы;
			Авторские = ЗапросПоЕСНкСправочникам.Авторские;
			Лицензионные = ЗапросПоЕСНкСправочникам.Лицензионные;
			ДенежноеСодержаниеПрокуроров = ЗапросПоЕСНкСправочникам.ДенежноеСодержаниеПрокуроров;
			
			Если ИскатьЕНВД = 1 Тогда  // отдельно добавим "ручные" правки для ПФР
				ст238п2а2_ПФР = ЗапросПоЕСНкСправочникам.ст238п2а2_ПФР;
				ПрочиеНеоблагаемыеДоходы_ПФР = ЗапросПоЕСНкСправочникам.ПрочиеНеоблагаемыеДоходы_ПФР;
				РасходыЗаСчетФСС_ПФР = ЗапросПоЕСНкСправочникам.РасходыЗаСчетФСС_ПФР;
			Иначе
				ст238п2а2_ПФР = 0;
				ПрочиеНеоблагаемыеДоходы_ПФР = 0;
				РасходыЗаСчетФСС_ПФР = 0;
			КонецЕсли;
			
			ОбъектЕСН = НачисленоВсего - БЛзаСчетФСС - ПрочиеРасходыЗаСчетФСС - ОбъектЕСНпоЕНВД - ДенежноеДовольствиеВоенных - НачисленияЗаСчетПрибыли - ПрочиеНеоблагаемыеДоходы - ДенежноеСодержаниеПрокуроров - Авторские - ст238п2а2 - Стипендия;
			
			Если ОбъектЕСН &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ОбъектЕСН,
					0,
					"ОблагаетсяЦеликом",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;
			
			Если ОбъектЕСНпоЕНВД &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ОбъектЕСНпоЕНВД,
					0,
					"ОблагаетсяЦеликом",
					1,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;
			
			Если (ПрочиеРасходыЗаСчетФСС &lt;&gt; 0) или (БЛзаСчетФСС &lt;&gt; 0) Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ПрочиеРасходыЗаСчетФСС+БЛзаСчетФСС,
					0,
					"ПособияЗаСчетФСС",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			Если НачисленияЗаСчетПрибыли &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					НачисленияЗаСчетПрибыли,
					0,
					"ВыплатыЗаСчетПрибыли",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			Если Авторские &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					Авторские,
					0,
					"ДоговораАвторские",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			Если Лицензионные &lt;&gt; 0 Тогда
			КонецЕсли;						
			Если Стипендия &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					Стипендия,
					0,
					"НеЯвляетсяОбъектом",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			Если ДенежноеДовольствиеВоенных &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ДенежноеДовольствиеВоенных,
					0,
					"ДенежноеДовольствиеВоеннослужащих",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			Если ДенежноеСодержаниеПрокуроров &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ДенежноеСодержаниеПрокуроров,
					0,
					"ДенежноеСодержаниеПрокуроров",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			Если ст238п2а2 &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ст238п2а2,
					ст238п2а2,
					"Матпомощь",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			Если ПрочиеНеоблагаемыеДоходы &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуЕСНСведенияОДоходах(
					Сотрудник,
					Дата(Год,МесяцДохода,1),
					ПрочиеНеоблагаемыеДоходы,
					0,
					"НеЯвляетсяОбъектом",
					0,
					ВремТаблицаЕСНСведенияОДоходах,
					ДокументОснование);
			КонецЕсли;						
			
			
			НастАвторские = 0;
			
			
			Для Сч = МесяцДохода По 12 Цикл
				НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника+Сч;
				
				//прибавим из справочников:
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,5)
				+УдержаноПФР);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,6,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,6)
				+УдержаноФФОМС);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,7)
				+УдержаноТФОМС);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,8)
				+УдержаноФСС);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,9,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,9)
				+БЛзаСчетФСС+ПрочиеРасходыЗаСчетФСС);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,31,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,31)
				+БЛзаСчетФСС+ПрочиеРасходыЗаСчетФСС+РасходыЗаСчетФСС_ПФР);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,10,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,10)
				+НачисленоВсего);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,25,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,25)
				+ОбъектЕСНпоЕНВД);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,11,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,11)
				+ДенежноеДовольствиеВоенных);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,13,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,13)
				+НачисленияЗаСчетПрибыли);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,14,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,14)
				+ст238п2а2);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,27,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,27)
				+ст238п2а2+ст238п2а2_ПФР);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,17,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,17)
				+Стипендия+ПрочиеНеоблагаемыеДоходы);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,30,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,30)
				+Стипендия+ПрочиеНеоблагаемыеДоходы+ПрочиеНеоблагаемыеДоходы_ПФР);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,18,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,18)
				+Авторские);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,24,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,24)
				+Лицензионные); 
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,19,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,19)
				+ДенежноеСодержаниеПрокуроров);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,21)
				+УдержаноПФРнаСтраховуюПенсию);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,22)
				+УдержаноПФРнаНакопительнуюПенсию);
				
				
			КонецЦикла; 
			
		КонецЦикла;  // обхода по периодам действия/регистрации
		
	КонецЕсли;
			
	// здесь собирается начисленный ранее ЕСН - по периоду регистрации
	Если (НалогиПоРегистрации = 1) Тогда 
		Пока ЗапросПоЕСН.Группировка("Регистрация")=1 Цикл
			Регистрация = ЗапросПоЕСН.Регистрация;
			МесяцДохода=ДатаМесяц(Регистрация); 
			Пока ЗапросПоЕСН.Группировка("ВР")=1 Цикл
				ВР = ЗапросПоЕСН.ВР;
				СуммаРез=ЗапросПоЕСН.РезультатВР;
				НомерКолонки=0;
				Если (ВР=ВидРасчета.ПФР) Тогда
					НомерКолонки = 5
				ИначеЕсли (ВР=ВидРасчета.ФФОМС)  Тогда
					НомерКолонки = 6
				ИначеЕсли (ВР=ВидРасчета.ТФОМС)  Тогда
					НомерКолонки = 7
				ИначеЕсли (ВР=ВидРасчета.ФСС)  Тогда
					НомерКолонки = 8
				ИначеЕсли (ВР=ВидРасчета.ПФРСтраховаяЧасть)  Тогда
					НомерКолонки = 21
				ИначеЕсли (ВР=ВидРасчета.ПФРНакопительнаяЧасть)  Тогда
					НомерКолонки = 22
				КонецЕсли;
				
				// занесем налоги в таблицу по сотруднику
				Если НомерКолонки &gt; 0 Тогда
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, СуммаРез);
				КонецЕсли;
			КонецЦикла;  // обхода видов расчета
			
		КонецЦикла;  // обхода по месяцам
		
	КонецЕсли;
	
			
	БылоВПрошлом = 0;
	БылоВПрошломПФР = 0;
	СуммаЕНВДза7месяцев2002года = 0;
	Для Сч = 1 По 12 Цикл  
		
		СтрокаТаблицы = НомерСтрокиСотрудника+Сч;
		
		// рассчитаем "скидки" по доходам
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,14,Мин(3000,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,14)));
		// и отдельно для ПФР
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,27,Мин(3000,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,27)));
		
		ДатаМесяца = Дата(Год,Сч,1);
		Если ИскатьЕНВД = 1 Тогда
			// "обрежем" пособия за счет ФСС, если сотр подпал под ЕНВД
			ПособийКРаспределению = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,КолонкаПособийКРаспределению);
			ОтнесеноНаЕНВД = 0;
			Если ПособийКРаспределению &lt;&gt; 0 Тогда
				НачисленоЗарплаты = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10)-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,9);
				Если Сч &gt; 1 Тогда
					НачисленоЗарплаты = НачисленоЗарплаты - (ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10)-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,9));
				КонецЕсли;
				ВТомЧислеПоЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,КолонкаПособийКРаспределению+1);
				Если НачисленоЗарплаты &gt; ВТомЧислеПоЕНВД Тогда 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,КолонкаПособийКРаспределению,0)
				ИначеЕсли (ВТомЧислеПоЕНВД &gt; 0) и (ВТомЧислеПоЕНВД &gt;= НачисленоЗарплаты) Тогда
					ОтнесеноНаЕНВД = ПособийКРаспределению;
				ИначеЕсли (ВТомЧислеПоЕНВД = 0) и (НачисленоЗарплаты = 0) Тогда
					ШаблонПроводки = УточнитьУчетПоСотруднику(ПолучитьПустоеЗначение("Справочник.ШаблоныПроводок"), Сотрудник, ПолучитьПустоеЗначение("ВидРасчета"), ПособийКРаспределению, Дата(Год,Сч,1), КонМесяца(Дата(Год,Сч,1)));
					Если ТипЗначения(ШаблонПроводки) = 11 Тогда
						Если ШаблонПроводки.ПодпадаетПодЕНВД = 1 Тогда
							ОтнесеноНаЕНВД = ПособийКРаспределению;
						КонецЕсли;
					ИначеЕсли ТипЗначения(ШаблонПроводки) = 100 Тогда
						ЕстьДеятельностьПоНалогуНаПрибыль = 0;
						Для СчСтрок = 1 По ШаблонПроводки.КоличествоСтрок() Цикл
							Если ШаблонПроводки.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 0 Тогда
								ЕстьДеятельностьПоНалогуНаПрибыль = 1;
								Прервать
							КонецЕсли;
						КонецЦикла;
						Если ЕстьДеятельностьПоНалогуНаПрибыль = 0 Тогда
							ОтнесеноНаЕНВД = ПособийКРаспределению;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Если (ДатаМесяца &lt; ДатаОтменыЕСНприЕНВД) Тогда
					СуммаЕНВДза7месяцев2002года = СуммаЕНВДза7месяцев2002года + ОтнесеноНаЕНВД;
					ОтнесеноНаЕНВД = 0;
				КонецЕсли;
			КонецЕсли;
			//Если (ДатаМесяца = ДатаОтменыЕСНприЕНВД) и (СуммаЕНВДза7месяцев2002года &lt;&gt; 0) Тогда
			//	ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,Сч,"Пособия отнесены к видам деятельности, облагаемой ЕНВД",9,-СуммаЕНВДза7месяцев2002года);
			//	ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,Сч,"Пособия за счет ФСС, отнесенные к видам деятельности, облагаемой ЕНВД",25,СуммаЕНВДза7месяцев2002года);
			//КонецЕсли;
			Если ОтнесеноНаЕНВД &lt;&gt; 0 Тогда
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, Сч, 9, -ОтнесеноНаЕНВД);
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, Сч, 25, ОтнесеноНаЕНВД);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	НалоговаяБазаПФР = 0;
	НалоговаяБазаФБ = 0;
	НалоговаяБазаОМС = 0;
	НалоговаяБазаФСС = 0;       
	
	НалоговаяБазаФБИностранца = 0;
	НалоговаяБазаФБИностранцаИнвалида = 0;
	НалоговаяБазаФдБИностранцаПредыдущегоМесяца = 0;
	НалоговаяБазаФБИностранцаИнвалидаПредыдущегоМесяца = 0;

	ЛьготаИнвалидуФдБ = 0;
	ЛьготаИнвалидуОМС = 0;
	ЛьготаИнвалидуФСС = 0;

	НалоговаяБазаИнвалидаПредыдущегоМесяцаФдБ = 0;
	НалоговаяБазаИнвалидаПредыдущегоМесяцаОМС = 0;
	НалоговаяБазаИнвалидаПредыдущегоМесяцаФСС = 0;

	НалоговаяБазаПФРПредыдущегоМесяца = 0;
	НалоговаяБазаФдБПредыдущегоМесяца = 0;
	НалоговаяБазаОМСПредыдущегоМесяца = 0;
	НалоговаяБазаФССПредыдущегоМесяца = 0;
	
	БазаВзносовПредыдущегоМесяца = 0;
	ОблагаемаяВзносамиПФР_ЕНВДПредыдущегоМесяца = 0;
	УдержаноПФРнаСтраховуюПенсиюПредыдущегоМесяца = 0;
	УдержаноПФРнаНакопительнуюПенсиюПредыдущегоМесяца = 0;
	УдержаноПФРнаСтраховуюПенсиюЕНВДПредыдущегоМесяца = 0;
	УдержаноПФРнаНакопительнуюПенсиюЕНВДПредыдущегоМесяца = 0;
	
	Для Сч = 1 По 12 Цикл  // рассчитаем налоговую базу
										  
		СтрокаТаблицы = НомерСтрокиСотрудника+Сч;
		
		ОблагаемаяВзносамиПФР				= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,23);
		ЕСНОблагаемаяПФР					= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,2);							
		НачисленоВсего						= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10);
		НачисленоЕНВД						= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,25);
		НачисленоЗаСчетПрибыли				= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,13);							
		ПособийЗаСчетФСС					= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,9);                          							
		ЛьготаПоЕСНп2ст238абз2				= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,14);
		ПрочихЛьготПоСт238					= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,17);			
		УдержаноПФРнаСтраховуюПенсию		= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,21);
		УдержаноПФРнаНакопительнуюПенсию	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,22);														

		
		НалоговаяБаза =	НачисленоВсего														// начислено всего
						-ПособийЗаСчетФСС													// расходы за счет ФСС
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,11)	// довольствие военнослужащих
						-НачисленоЗаСчетПрибыли												// начислено за счет чистой прибыли
						-ЛьготаПоЕСНп2ст238абз2											    // скидка по матпомощи
						-ПрочихЛьготПоСт238												  	// прочие необлагаемые
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,25)	// попало под ЕНВД
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,24);	// Лицензионные выплаты
						
		БазаВзносов =	НачисленоВсего														// начислено всего
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,31)	// расходы за счет ФСС
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,11)	// довольствие военнослужащих
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,19)	// довольствие прокуроров
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,26)	// натуроплата сельхозпродуктами
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,13)	// начислено за счет чистой прибыли
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,27)   // скидка по матпомощи
						-ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,30);  // прочие необлагаемые
		
		Если Сред(ВзиматьНаСтрахПФР,Сч,1) = "1" Тогда  // учтем флажок страховых взносов

			НалоговаяБазаПФР = НалоговаяБазаПФР + БазаВзносов - НалоговаяБазаПФРПредыдущегоМесяца;
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,23,НалоговаяБазаПФР); // база страховых взносов в ПФР
		ИначеЕсли Сч &gt; 1 Тогда
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,23,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,23));
		КонецЕсли; 

		НалоговаяБазаПФРПредыдущегоМесяца = БазаВзносов;
		
		// для каждой части налога ЕСН "инвалидная" льгота своя, т.к. база своя, посчитаем эти базы:
		БазаЛьготыФдБ = НалоговаяБаза - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,19); // ЕСНвЧастиПФР // дополнительно вычли ден. содержание прокуроров
		БазаЛьготыОМС = НалоговаяБаза;                                                                    // ЕСНвЧастиОМС
		БазаЛьготыФСС = НалоговаяБаза - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,18); // ЕСНвЧастиФСС // дополнительно вычли договора подряда и авторские выплаты

		// "инвалидную" льготу будем предоставлять только за те месяцы, когда предприятие
		// имеет на нее право по зарплате данного работника
		Если Сред(Инвалид,Сч,1) = "1" Тогда
			Если (НЕ ((БазаЛьготыФдБ &gt;= 100000) И (ЛьготаИнвалидуФдБ &gt;=100000)) ) Тогда
				ЛьготаИнвалидуФдБ = Мин(100000,ЛьготаИнвалидуФдБ+БазаЛьготыФдБ-НалоговаяБазаИнвалидаПредыдущегоМесяцаФдБ);
			КонецЕсли;
			Если (Не ((БазаЛьготыОМС &gt;=100000) И (ЛьготаИнвалидуОМС &gt;= 100000)) ) Тогда
				ЛьготаИнвалидуОМС = Мин(100000,ЛьготаИнвалидуОМС+БазаЛьготыОМС-НалоговаяБазаИнвалидаПредыдущегоМесяцаОМС);
			КонецЕсли;
			Если (Не ((БазаЛьготыФСС &gt;= 100000) И (ЛьготаИнвалидуФСС &gt;= 100000)) ) Тогда
				ЛьготаИнвалидуФСС = Мин(100000,ЛьготаИнвалидуФСС+БазаЛьготыФСС-НалоговаяБазаИнвалидаПредыдущегоМесяцаФСС);
			КонецЕсли;
		КонецЕсли; 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ЛьготаИнвалидуФдБ",ЛьготаИнвалидуФдБ); //в 35 колонке помещаем самую полную льготу(ФБ), без вычета сод. прокуроров и договоров/авторких
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ЛьготаИнвалидуОМС",ЛьготаИнвалидуОМС); //в 36 колонке помещаем самую полную льготу(ОМС), без вычета сод. прокуроров и договоров/авторких
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ЛьготаИнвалидуФСС",ЛьготаИнвалидуФСС); //в 37 колонке помещаем самую полную льготу(ФСС), без вычета сод. прокуроров и договоров/авторких			

		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,20,ЛьготаИнвалидуОМС); //в 20 колонке помещаем самую полную льготу(ОМС), без вычета сод. прокуроров и договоров/авторких
		
		НалоговаяБазаИнвалидаПредыдущегоМесяцаФдБ = БазаЛьготыФдБ;
		НалоговаяБазаИнвалидаПредыдущегоМесяцаОМС = БазаЛьготыОМС;
		НалоговаяБазаИнвалидаПредыдущегоМесяцаФСС = БазаЛьготыФСС;
				 
		// смотрим на флаг ЕСНвЧастиПФР (даже у иностранцев, т.к. бывают временно проживающие и т.п., по реквизитам иностранца не определить
		Если (Сред(ЕСНвЧастиПФР,Сч,1) = "1") Тогда 
			НалоговаяБазаФБ = НалоговаяБазаФБ  
			+ БазаЛьготыФдБ - ЛьготаИнвалидуФдБ
			- НалоговаяБазаФдБПредыдущегоМесяца; 
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,2,НалоговаяБазаФБ);				
			Если (Сред(ВзиматьНаСтрахПФР,Сч,1) = "0") Тогда 
				// иностранец                										
				Если (Сред(Инвалид,Сч,1) = "1") Тогда 
					// иностранец - инвалид  
					НалоговаяБазаФБИностранцаИнвалида = НалоговаяБазаФБИностранцаИнвалида + Мин(ЛьготаИнвалидуФдБ,100000) - НалоговаяБазаФБИностранцаИнвалидаПредыдущегоМесяца; 												
				КонецЕсли;
				НалоговаяБазаФБИностранца = НалоговаяБазаФБИностранца + БазаЛьготыФдБ - НалоговаяБазаФдБИностранцаПредыдущегоМесяца; 						
			КонецЕсли;
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИностраннаяБаза",НалоговаяБазаФБИностранца);					
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИностраннаяБазаИнвалида",НалоговаяБазаФБИностранцаИнвалида);					
		ИначеЕсли Сч &gt; 1 Тогда
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,2,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,2));
		КонецЕсли; 
		
		Если Сред(ЕСНвЧастиОМС,Сч,1) = "1" Тогда
			НалоговаяБазаОМС = НалоговаяБазаОМС
								+ БазаЛьготыОМС - ЛьготаИнвалидуОМС
								- НалоговаяБазаОМСПредыдущегоМесяца;
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,3,НалоговаяБазаОМС);
		ИначеЕсли Сч &gt; 1 Тогда
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,3,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,3));
		КонецЕсли; 
		
		Если Сред(ЕСНвЧастиФСС,Сч,1) = "1" Тогда
			НалоговаяБазаФСС = НалоговаяБазаФСС
								- НалоговаяБазаФССПредыдущегоМесяца
								+ БазаЛьготыФСС - ЛьготаИнвалидуФСС ;
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,4,НалоговаяБазаФСС);
		ИначеЕсли Сч &gt; 1 Тогда
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,4));
		КонецЕсли;
		
		Если Сред(ВзиматьНаСтрахПФР,Сч,1) = "1" Тогда  // учтем флажок страховых взносов
			ОблагаемаяВзносамиПФР_ЕНВД = БазаВзносов - (НачисленоВсего-НачисленоЗаСчетПрибыли-НачисленоЕНВД-ПособийЗаСчетФСС-ПрочихЛьготПоСт238-ЛьготаПоЕСНп2ст238абз2 - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,11) - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,19));
		КонецЕсли;
		
		Если БазаВзносов - БазаВзносовПредыдущегоМесяца = 0 Тогда																					                                                        														
			УдержаноПФРнаСтраховуюПенсиюЕНВД = УдержаноПФРнаСтраховуюПенсиюЕНВДПредыдущегоМесяца; 
			УдержаноПФРнаНакопительнуюПенсиюЕНВД = УдержаноПФРнаНакопительнуюПенсиюЕНВДПредыдущегоМесяца;													
		Иначе
			УдержаноПФРнаСтраховуюПенсиюЕНВД = УдержаноПФРнаСтраховуюПенсиюЕНВДПредыдущегоМесяца + (УдержаноПФРнаСтраховуюПенсию-УдержаноПФРнаСтраховуюПенсиюПредыдущегоМесяца) * ((ОблагаемаяВзносамиПФР_ЕНВД-ОблагаемаяВзносамиПФР_ЕНВДПредыдущегоМесяца) / (БазаВзносов - БазаВзносовПредыдущегоМесяца)); 
			УдержаноПФРнаНакопительнуюПенсиюЕНВД = УдержаноПФРнаНакопительнуюПенсиюЕНВДПредыдущегоМесяца + (УдержаноПФРнаНакопительнуюПенсию-УдержаноПФРнаНакопительнуюПенсиюПредыдущегоМесяца) * ((ОблагаемаяВзносамиПФР_ЕНВД-ОблагаемаяВзносамиПФР_ЕНВДПредыдущегоМесяца) / (БазаВзносов - БазаВзносовПредыдущегоМесяца));
		КонецЕсли;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОблагаемаяВзносамиПФР_ЕНВД",ОблагаемаяВзносамиПФР_ЕНВД);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"УдержаноПФРнаСтраховуюПенсиюЕНВД",УдержаноПФРнаСтраховуюПенсиюЕНВД);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"УдержаноПФРнаНакопительнуюПенсиюЕНВД",УдержаноПФРнаНакопительнуюПенсиюЕНВД);			
		
		//базы предыдущего месяца
		БазаВзносовПредыдущегоМесяца = БазаВзносов; 			
		ОблагаемаяВзносамиПФР_ЕНВДПредыдущегоМесяца = ОблагаемаяВзносамиПФР_ЕНВД;
		УдержаноПФРнаСтраховуюПенсиюПредыдущегоМесяца = УдержаноПФРнаСтраховуюПенсию;
		УдержаноПФРнаНакопительнуюПенсиюПредыдущегоМесяца = УдержаноПФРнаНакопительнуюПенсию;			
		УдержаноПФРнаСтраховуюПенсиюЕНВДПредыдущегоМесяца = УдержаноПФРнаСтраховуюПенсиюЕНВД;
		УдержаноПФРнаНакопительнуюПенсиюЕНВДПредыдущегоМесяца = УдержаноПФРнаНакопительнуюПенсиюЕНВД;
		
		НалоговаяБазаФдБПредыдущегоМесяца = БазаЛьготыФдБ - ЛьготаИнвалидуФдБ;
		НалоговаяБазаФССПредыдущегоМесяца = БазаЛьготыФСС - ЛьготаИнвалидуФСС;
		НалоговаяБазаОМСПредыдущегоМесяца = БазаЛьготыОМС - ЛьготаИнвалидуОМС;			
		НалоговаяБазаФдБИностранцаПредыдущегоМесяца = НалоговаяБазаФБИностранца;
		НалоговаяБазаФБИностранцаИнвалидаПредыдущегоМесяца = НалоговаяБазаФБИностранцаИнвалида;
		
	КонецЦикла; // обход сотров по мес.
	
	ВремТаблицаЕСНСведенияОДоходах.Сортировать("Физлицо, Период");   
	
	ВремТаблицаЕСННачисления.Сортировать("Сотрудник, ПериодРегистрации"); 
	
	ВремТаблицаЕСНСведенияОДоходах.Свернуть("Период,Физлицо,КодДоходаЕСН,ОблагаетсяЕНВД,ДокументОснование","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаЕСНСведенияОДоходах, ТаблицаЕСНСведенияОДоходах);
	
	ВремТаблицаЕСННачисления.Свернуть("Сотрудник,Физлицо,ПериодРегистрации,ПериодДействия,ПериодДействияНачало,ПериодДействияКонец,КодДоходаЕСН,ВидРасчета,ОблагаетсяЕНВД,ГрафикРаботы,ВидУчетаВремени,ДокументОснование,НомерСтрокиДокумента,Сторно","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаЕСННачисления,ТаблицаЕСННачисления); 
	
КонецЦикла; // обхода сотров и физлиц

ВремТаблицаЕСНСведенияОДоходах = 0;
ВремТаблицаЕСННачисления = 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбходСотрудниковДляСтраховыхВзносов2010" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаСтраховыеВзносыСведенияОДоходах	= ИсходящиеДанные;
ТаблицаЕСННачисления					= ВходящиеДанные;
ВсегоСотров								= Источник;
Сотрудники								= Приемник;
ЗапросПоВзносам							= ТипПриемника;
ЗапросПоВзносамКСправочникам			= Значение;
ДоходыВычетыНалогиСотрудников			= Выражение;
ЖрнЗарплата								= Пусто;
Год										= ВыборкаДанных;
ПервыйМесяц								= Объект;
ПоследнийМесяц							= КоллекцияОбъектов;
ИскатьВоенных							= ОбъектКоллекции;
ТаблицаРаспределенияПоШаблПроводок		= ИмяПКО;
ИскатьЕНВД								= ИмяПКОВидСубконто;
СоответствиеВРкодамДоходовСВ			= НомерПКО;


// скопируем структуру таблицы
ВремТаблицаСтраховыеВзносыСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаСтраховыеВзносыСведенияОДоходах.Загрузить(ТаблицаСтраховыеВзносыСведенияОДоходах); 								

ВремТаблицаЕСННачисления = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаЕСННачисления.Загрузить(ТаблицаЕСННачисления);


ДатаАктуальности = Дата(Год,ПоследнийМесяц,01);
ИскатьЛетчиков = Константа.ЕстьЛетчики; 
ИскатьГосслужащих = Константа.ЕстьГосслужащие;

ДатаНачалаРеформыСоцСтрахования = глДатаНачалаРеформыСоцСтрахования();

ТаблицаОсновныхТарифов = глПолучитьТаблицуОсновныхТарифов(ДатаАктуальности);

ПределДоходов = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода(ДатаАктуальности));

// получим размеры скидок к доходам
СпрВычетов = СоздатьОбъект("Справочник.СтраховыеВзносыСкидкиКДоходам");
СкидкаМатпомощь = 0;
РазмерСкидкаМатпомощь = 0;
Если СпрВычетов.НайтиПоКоду("Матпомощь",0) = 1 Тогда
	РазмерСкидкаМатпомощь = СпрВычетов.ГодоваяСкидка.Получить(НачГода(ДатаАктуальности));
КонецЕсли;
СкидкаМатпомощьПриРожденииРебенка = 0;

// для расчета ФСС_НС
СтавкаФСС_НС = 0;
ДополнительноеОтчисление = "";
Если Год&lt;2011 Тогда
	СпрДопПроводок = СоздатьОбъект("Справочник.ДополнительныеПроводки");
	СпрДопПроводок.ВыбратьЭлементы();
	Пока СпрДопПроводок.ПолучитьЭлемент() = 1 Цикл
		Если (СпрДопПроводок.ПроцентОтРасчетнойБазы &gt; 0) и (СпрДопПроводок.Код="ФСС_НС") Тогда
			СтавкаФСС_НС = СпрДопПроводок.ПроцентОтРасчетнойБазы/100;
			ДополнительноеОтчисление = СпрДопПроводок.ТекущийЭлемент();
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

ТаблицаБазаОТ = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаБазаОТ.НоваяКолонка("БазаПФР","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФСС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФОМС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("ВидТарифа");

СпрШаблонов = СоздатьОбъект("Справочник.ШаблоныПроводок");
СпрШаблонов.НайтиПоНаименованию("Не отражать в бухгалтерском учете");
НеРаспределять = СпрШаблонов.ТекущийЭлемент();

// перебираем сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаЕСННачисления.УдалитьСтроки();
	
	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	
	КодСотра=Сотрудник.Код;
	ИмяСотра=Сотрудник.Наименование; 
	
	НалогиПоРегистрации=0;
	ЗапросПоВзносам.вНачалоВыборки();
	Если ЗапросПоВзносам.Получить(Сотрудник,,)=1 Тогда
		НалогиПоРегистрации=1;	
	КонецЕсли; 
	
	ДанныеВСправочнике=0;
	ЗапросПоВзносамКСправочникам.вНачалоВыборки();
	Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,,)=1 Тогда
		ДанныеВСправочнике=1;	
	КонецЕсли;
	
	НовыйПроцент = Окр(СчСотров/ВсегоСотров*100);
	
	Если СчСотров &lt; ВсегоСотров Тогда
		глСтатусСтрока(Форма,"Обрабатываются доходы"+?(ВсегоСотров=1,""," ("+НовыйПроцент+"%)")+": "+ИмяСотра);
	КонецЕсли;
	
	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.НоваяСтрока();
		НомерСтроки = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
		ИдентификаторСотрудника = КодСотраВтаблице+глДополнитьСтроку(Сч,2);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,1,ИдентификаторСотрудника);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,"ОграниченнаяБаза",ТаблицаБазаОТ);
	КонецЦикла;
	
	Если ПустоеЗначение(""+КодСотра+ИмяСотра)=1 Тогда
		Продолжить
	КонецЕсли;
	
	// получим выборку записей по всем местам работы сотра на предприятии,
	// включая все места по внутреннему совместительству
	Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,ЖрнЗарплата.ПериодПоДате(Дата(Год,ПервыйМесяц,15)),ЖрнЗарплата.ПериодПоДате(Дата(Год,ПоследнийМесяц,15))) = 1 Тогда
	ИначеЕсли ДанныеВСправочнике + НалогиПоРегистрации = 0 Тогда
		Продолжить
	КонецЕсли;
	
	Военнослужащий = "000000000000";
	Прокурор	   = "000000000000";
	Летчик         = "000000000000";
	ВзиматьВзносыПФРиФСС = "111111111111"; 
	Инвалид = "000000000000"; 
	
	Для Сч = ПервыйМесяц По ПоследнийМесяц Цикл
		
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
		
		Если (Сотрудник.НеВзиматьВзносыПФРиФСС.Получить(ДатаМесяца) = 1) Тогда
			ВзиматьВзносыПФРиФСС = ?(Сч=1,"",Лев(ВзиматьВзносыПФРиФСС,Сч-1))+"0"+?(Сч=12,"",Прав(ВзиматьВзносыПФРиФСС,12-Сч));
		КонецЕсли;
		
		КатегорияПФР = Сотрудник.КатегорияПлательщикаПФР.Получить(ДатаМесяца).Идентификатор();
		Если ПустоеЗначение(КатегорияПФР) = 0 Тогда
			Если Найти(",НРИВ,СХИВ,ФХИВ,ИПИВ,АДИВ,",","+КатегорияПФР+",") &gt; 0 Тогда
				Инвалид = ?(Сч=1,"",Лев(Инвалид,Сч-1))+"1"+?(Сч=12,"",Прав(Инвалид,12-Сч));
			КонецЕсли;
		КонецЕсли;
		
		Если ИскатьЛетчиков = 1 Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьВоенных = 1 Тогда
			Если глВоеннослужащий(Сотрудник, ДатаМесяца) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
			Если глВоеннослужащий(Сотрудник, НачМесяца(ДатаМесяца)) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
		КонецЕсли;
		
		Если (ИскатьВоенных = 1) или (ИскатьГосслужащих=1) Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;				
			
		КонецЕсли;
		
	КонецЦикла;
	
	БылМесяцДохода = 0;
	Пока ЖрнЗарплата.ПолучитьЗапись() = 1 Цикл
		
		ВР = ЖрнЗарплата.ВидРасч;
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания) = 1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ВозвратыНДФЛ) = 1) Тогда
			Продолжить
		КонецЕсли;
		
		СуммаРез = ЖрнЗарплата.Результат; 
		Если СуммаРез = 0 Тогда
			Продолжить
		КонецЕсли; 
		Скидка = 0;
		
		Объект					= ЖрнЗарплата.Объект; //это сотрудник
		ДокументОснование		= ЖрнЗарплата.Документ;
		НомерСтрокиДокумента	= ЖрнЗарплата.НомерСтрокиДокумента;
		
		ДатаДохода				= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
		ПериодРегистрации		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
		ПериодДействия			= НачМесяца(ЖрнЗарплата.ДатаНачала);
		ПериодДействияНачало	= ЖрнЗарплата.ДатаНачала;
		ПериодДействияКонец		= ЖрнЗарплата.ДатаОкончания;
		МесяцДохода				= ДатаМесяц(ДатаДохода);
		
		Если БылМесяцДохода &lt;&gt; МесяцДохода Тогда
			БылМесяцДохода = МесяцДохода
		КонецЕсли;
		
		ЭтоИнвалид 		  = Число(Сред(Инвалид,МесяцДохода,1));
		ЭтоЛетчик 		  = Число(Сред(Летчик,МесяцДохода,1));
		ЭтоПрокурор 	  = Число(Сред(Прокурор,МесяцДохода,1)); 
		
		КоэфВзносыПФРиФСС = Число(Сред(ВзиматьВзносыПФРиФСС,МесяцДохода,1));
		
		Если ЭтоПрокурор = 1 Тогда
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,0,СоответствиеВРкодамДоходовСВ));
			Если ПустаяСтрока(КодДохода) = 1 Тогда 
				КодДохода="СодержаниеПрокуроров";
			КонецЕсли;
		Иначе
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,Число(Сред(Военнослужащий,МесяцДохода,1)), СоответствиеВРкодамДоходовСВ));
		КонецЕсли; 
		
		// для ФСС_НС, до 2011 года
		Если СтавкаФСС_НС &gt;0 Тогда 
			
			КоэфФСС_НС = 0;
			Если ТипЗначения(ДополнительноеОтчисление) = 11 Тогда
				Если глВходитВБазуПроводки(ВР,ДополнительноеОтчисление) = 0 Тогда
					//ВР не входит в базу для расчета ФСС_НС, однако мы можем явно указать оплату в документе
					//для некотрых видов расчета
					Если (ВР = ВидРасчета.ОплатаПоДоговору) или (ВР = ВидРасчета.ОплатаПоДоговоруСПредпринимателем)
						или (ЯвляетсяАвторскимДоговором(ВР) = 1) Тогда 
						Если ЖрнЗарплата.Документ.Вид() = "ДоговорГраждПравХаракт" Тогда
							Если ЖрнЗарплата.Документ.УплачиватьВФСС = 1  Тогда
								КоэфФСС_НС = 1; //в документе указано, что платим ФСС_НС
							КонецЕсли;
						КонецЕсли;						
					КонецЕсли;
				Иначе
					КоэфФСС_НС = 1;	
				КонецЕсли;
			КонецЕсли;
			
			Если КоэфФСС_НС&gt;0 Тогда
				
				НомерСтроки = "";
				ТаблицаОсновныхТарифов.НайтиЗначение(МесяцДохода,НомерСтроки,"Месяц");
				Тариф = ТаблицаОсновныхТарифов.ПолучитьЗначение(НомерСтроки,"Месяц"); 
				
				Если (ЭтоИнвалид =1) или (Тариф = Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов) Тогда
					КоэфФСС_НС = 0.6;
				КонецЕсли;
				
				НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника + МесяцДохода;
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"БазаФСС_НС",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"БазаФСС_НС")
				+СуммаРез*КоэфФСС_НС);
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		СуммаОсновнойТариф = 0; // сумма по основному тарифу, не инвалид
		СуммаИнвалид = 0;       // сумма инвалида
		СуммаЕНВД = 0;          // сумма по виду деятельности ЕНВД, не инвалид
		НомерКолонки = 0;       // номер колонки дохода для основного тарифа
		НомерКолонкиПрокурор = 0;       // номер колонки дохода для основного тарифа
		
		СкидкаОсновнойТариф = 0; // сумма скидки по основному тарифу, не инвалид
		СкидкаИнвалид = 0;       // сумма скидки инвалида
		СкидкаЕНВД = 0;
		
		РазложитьСуммыПоТарифам = 1;
		КодДоходаСтраховыеВзносы = "";
		Если ПустаяСтрока(КодДохода) = 1 Тогда
			// целиком облагаемые 
			КодДоходаСтраховыеВзносы	= "ОблагаетсяЦеликом";
			
		ИначеЕсли КодДохода="-1"  Тогда 
			
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				Продолжить;
			Иначе
				КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
				НомерКолонки = 4;
			КонецЕсли;
			
		ИначеЕсли (КодДохода="Не является объектом по ЕСН") Тогда
			Продолжить
			
		ИначеЕсли (КодДохода="НеЯвляетсяОбъектом") Тогда
			Продолжить	
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 4;
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликомЕНВД" Тогда 
			НомерКолонки = 4; 
			КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
			РазложитьСуммыПоТарифам		= 0;
			Если ИскатьЕНВД = 1 Тогда
				СуммаЕНВД				= СуммаРез;
			Иначе
				СуммаОсновнойТариф		= СуммаРез;
			КонецЕсли;
		
		ИначеЕсли КодДохода="НеЯвляетсяОбъектом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 3;
			
		ИначеЕсли КодДохода="РасходыЗаСчетФСС" Тогда	
			// не бывает на ЕНВД
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
		
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
		
			РазложитьСуммыПоТарифам = 0;
			
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			
		ИначеЕсли КодДохода="ВозмещаемыеФСС" Тогда
			//расходы, возмещаемые ФСС при ЕНВД
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1 Тогда
				СуммаЕНВД = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			
		ИначеЕсли КодДохода="ПособиеДоПолутораЛет" Тогда
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1 Тогда
				//надо опредлить долю ЕНВД
				
				СуммаЕНВД = 0;
				Док = ЖрнЗарплата.Документ;
				
				Если (Док.Вид() = "ОтпускПоУходуЗаРебенком") и (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007) Тогда 
					
					Если ДатаАктуальности &gt;= ДатаНачалаРеформыСоцСтрахования Тогда
						СуммаЕНВД = 0;
						
					Иначе
						ДатаНачалаПериода=ЖрнЗарплата.ДатаНачала;
						ДатаОкончанияПериода=ЖрнЗарплата.ДатаОкончания; 
						глИзвлечьРаспределениеИзДокаОСреднем(Сотрудник,1,Док,ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007,СуммаРез,ТаблицаРаспределенияПоШаблПроводок,НеРаспределять);
						Для Сч = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
							ТаблицаРаспределенияПоШаблПроводок.ПолучитьСтрокуПоНомеру(Сч);
							Если ТаблицаРаспределенияПоШаблПроводок.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
								СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.Сумма;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
				Иначе
					
					глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
					СуммаЕНВД = 0; 
					Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
						Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
							СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			
		ИначеЕсли КодДохода="Довольствие" Тогда
			НомерКолонки = 6;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
		
			РазложитьСуммыПоТарифам = 0;
			
			КодДоходаСтраховыеВзносы	= "ДенежноеДовольствиеВоеннослужащих";
			
		ИначеЕсли КодДохода="СодержаниеПрокуроров" Тогда
			НомерКолонки = 7;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
		
			РазложитьСуммыПоТарифам = 0;
			
			КодДоходаСтраховыеВзносы	= "ДенежноеСодержаниеПрокуроров";
			
		ИначеЕсли (КодДохода="МатПомощь")  Тогда
			КодДоходаСтраховыеВзносы	= "Матпомощь";
			
			НомерКолонки = 10;
			
		ИначеЕсли (КодДохода="МатпомощьПриРожденииРебенка")  Тогда  
			
			НомерКолонки = 8;
			НомерКолонкиПрокурор = 7;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Скидка = Док.СуммаВычета;
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = -1*Скидка;
			КонецЕсли;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД,2);
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли;  
			
			РазложитьСуммыПоТарифам = 0;
			
			КодДоходаСтраховыеВзносы	= КодДохода;
			
		ИначеЕсли (КодДохода="ДоговорыПодряда")  Тогда
			
			НомерКолонки = 12;
			
			КодДоходаСтраховыеВзносы	= "ДоговорыГПХ";
			
		ИначеЕсли (КодДохода = "Авторские") или (КодДохода = "Лицензионные") или (КодДохода = "ОтчуждениеАвторскихПрав") Тогда
			// все авторские договора
			КодДоходаСтраховыеВзносы	= глПолучитьВидДоходаПоАвторскомуДоговору(ДокументОснование);
			Если ПустоеЗначение(КодДоходаСтраховыеВзносы) = 1 Тогда
				КодДоходаСтраховыеВзносы = "ОблагаетсяЦеликом";
			КонецЕсли;
			
			НомерКолонки = 13;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Если Док.Вид() = "НачисленияУдержанияСписком" Тогда
				Док.ПолучитьСтрокуПоНомеру(ЖрнЗарплата.НомерСтрокиДокумента);
			КонецЕсли;
			Расходы = глПолучитьРазмерСкидкиПоАвторскомуДоговору(Док, СуммаРез, ЭтоСторно, ДатаДохода);
			
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = Макс(Расходы,СуммаРез);
			Иначе 
				Скидка = Макс(Мин(Расходы,СуммаРез),0);
			КонецЕсли;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД/СуммаРез,2);  
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли; 
			
			РазложитьСуммыПоТарифам = 0;
			
		КонецЕсли;	
		
		Если РазложитьСуммыПоТарифам = 1 Тогда
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		КонецЕсли;
		
		
		Если КоэфВзносыПФРиФСС=1 Тогда
			//
		ИначеЕсли НомерКолонки &lt;&gt; 3 Тогда
			//
			НомерКолонки = 4;
			НомерКолонкиПрокурор = 0;
			СкидкаОсновнойТариф = 0;
			СкидкаЕНВД = 0;
		КонецЕсли;
		
		// занесем доходы в таблицу по сотруднику 
		
		Если СуммаОсновнойТариф &lt;&gt; 0 Тогда
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2, СуммаОсновнойТариф);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаОсновнойТариф, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование);
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаОсновнойТариф,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, СуммаОсновнойТариф);
				
				Если СкидкаОсновнойТариф &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+1, СкидкаОсновнойТариф);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;    
			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаОсновнойТариф - СкидкаОсновнойТариф;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор, СодержаниеПрокурора);
			КонецЕсли;
			
		КонецЕсли; 
		
		Если СуммаИнвалид &lt;&gt; 0 Тогда 
				
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2, СуммаИнвалид);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаИнвалид, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование);
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаИнвалид,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда 
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, СуммаИнвалид);
				
				Если СкидкаИнвалид &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+1, СкидкаИнвалид);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;

			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаИнвалид - СкидкаИнвалид;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор, СодержаниеПрокурора);
			КонецЕсли;

		КонецЕсли;
		
		Если СуммаЕНВД &lt;&gt; 0 Тогда
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+26, СуммаЕНВД);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаЕНВД, 
			0,
			КодДоходаСтраховыеВзносы,
			1,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование);
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаЕНВД,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			1,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26, СуммаЕНВД);	
				
				Если СкидкаЕНВД &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26+1, СкидкаЕНВД);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					1,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					ВР,
					1,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // обхода записей ж.р. 
	
	
	// добавим доходы и налоги из справочника
	Если  ДанныеВСправочнике = 1 Тогда
		
		// получим данные из справочников последовательно для двух разделов
		// 0 - НеЕНВД, 1 - ЕНВД 
		
		ВР = ПолучитьПустоеЗначение("ВидРасчета");
		
		Для ВидТарифа = 0 По 1 Цикл 
			
			ЗапросПоВзносамКСправочникам.вНачалоВыборки();
			
			Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,ВидТарифа,)=0 Тогда
				Продолжить;	
			КонецЕсли;
			
			
			Пока ЗапросПоВзносамкСправочникам.Группировка("ГодоМесяц")=1 Цикл
				
				МесяцДохода = Число(ЗапросПоВзносамкСправочникам.ГодоМесяц) % 100;
				
				ЭтоИнвалид				= Число(Сред(Инвалид,МесяцДохода,1));
				НомерНачальнойКолонки	= ?(ЭтоИнвалид=1,13,?(ИскатьЕНВД*ВидТарифа=0,0,26));
				ТекстТарифа				= ?(ЭтоИнвалид=1,"по тарифу для инвалидов",?(ИскатьЕНВД*ВидТарифа=0,"по основному тарифу","по тарифу ЕНВД"));
				ИмяРаздела				= ?(ЭтоИнвалид=1,"Инвалид",?(ИскатьЕНВД*ВидТарифа=0,"","ЕНВД"));
				
				// по основному тарифу
				ИсчисленоПФРНак   = ЗапросПоВзносамкСправочникам.НачисленоПФРНак;
				ИсчисленоПФРСтрах = ЗапросПоВзносамкСправочникам.НачисленоПФРСтрах;
				ИсчисленоФСС      = ЗапросПоВзносамкСправочникам.НачисленоФСС;
				ИсчисленоФФОМС    = ЗапросПоВзносамкСправочникам.НачисленоФФОМС;
				ИсчисленоТФОМС    = ЗапросПоВзносамкСправочникам.НачисленоТФОМС;
				ИсчисленоДопТариф = ЗапросПоВзносамкСправочникам.НачисленоДопТариф;
				
				НачисленоВсего						= ЗапросПоВзносамкСправочникам.НачисленоВсего;
				НеЯвляетсяОбъектом					= ЗапросПоВзносамкСправочникам.НеЯвляетсяОбъектом;
				НеОблагаетсяЦеликом					= ЗапросПоВзносамкСправочникам.НеОблагаетсяЦеликом;
				РасходыЗаСчетФСС					= ЗапросПоВзносамкСправочникам.РасходыЗаСчетФСС;
				ДенежноеДовольствиеВоеннослужащих	= ЗапросПоВзносамкСправочникам.ДенежноеДовольствиеВоеннослужащих;
				ДенежноеСодержаниеПрокуроров		= ЗапросПоВзносамкСправочникам.ДенежноеСодержаниеПрокуроров;
				Матпомощь							= ЗапросПоВзносамкСправочникам.Матпомощь;
				СкидкаМатпомощь						= ЗапросПоВзносамкСправочникам.СкидкаМатпомощь;
				МатпомощьПриРожденииРебенка			= ЗапросПоВзносамкСправочникам.МатпомощьПриРожденииРебенка;
				СкидкаМатпомощьПриРожденииРебенка	= ЗапросПоВзносамкСправочникам.СкидкаМатпомощьПриРожденииРебенка;
				ДоговорыПодряда						= ЗапросПоВзносамкСправочникам.ДоговорыПодряда;
				Авторские							= ЗапросПоВзносамкСправочникам.Авторские;
				СкидкаАвторские						= ЗапросПоВзносамкСправочникам.СкидкаАвторские;
				
				пЕНВД = ИскатьЕНВД*ВидТарифа;
				
				
				Если ДоговорыПодряда &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДоговорыПодряда, 
					0,
					"ДоговорыПодряда",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если Авторские &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Авторские, 
					СкидкаАвторские,
					"Авторские",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если ДенежноеДовольствиеВоеннослужащих &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеДовольствиеВоеннослужащих, 
					0,
					"ДенежноеДовольствиеВоеннослужащих",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если ДенежноеСодержаниеПрокуроров &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеСодержаниеПрокуроров, 
					0,
					"ДенежноеСодержаниеПрокуроров",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если Матпомощь &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Матпомощь, 
					0,
					"Матпомощь",
					пЕНВД,
					ВидРасчета.МатПомощь,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если МатпомощьПриРожденииРебенка &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					МатпомощьПриРожденииРебенка, 
					СкидкаМатпомощьПриРожденииРебенка,
					"МатпомощьПриРожденииРебенка",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если НеЯвляетсяОбъектом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеЯвляетсяОбъектом, 
					0,
					"НеЯвляетсяОбъектом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если НеОблагаетсяЦеликом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеОблагаетсяЦеликом, 
					0,
					"НеОблагаетсяЦеликом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если РасходыЗаСчетФСС &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					РасходыЗаСчетФСС, 
					0,
					"РасходыЗаСчетФСС",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				
				Для Сч = МесяцДохода По 12 Цикл
					НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника+Сч;
					
					
					//прибавим из справочников:
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки)
					+НачисленоВсего);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки)
					+НеЯвляетсяОбъектом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки)
					+НеОблагаетсяЦеликом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки)
					+РасходыЗаСчетФСС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки)
					+ДенежноеДовольствиеВоеннослужащих);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки)
					+ДенежноеСодержаниеПрокуроров);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки)
					+Матпомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки)
					+СкидкаМатПомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки)
					+МатпомощьПриРожденииРебенка); 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки)
					+СкидкаМатПомощьПриРожденииРебенка);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки)
					+ДоговорыПодряда);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки)
					+Авторские);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки)
					+СкидкаАвторские);
					
					
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРНак"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРНак"+ИмяРаздела)
					+ИсчисленоПФРНак);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРСтрах"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРСтрах"+ИмяРаздела)
					+ИсчисленоПФРСтрах); 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФСС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФСС"+ИмяРаздела)
					+ИсчисленоФСС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФФОМС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФФОМС"+ИмяРаздела)
					+ИсчисленоФФОМС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоТФОМС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоТФОМС"+ИмяРаздела)
					+ИсчисленоТФОМС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоДопТариф",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоДопТариф")
					+ИсчисленоДопТариф);				
					
					
				КонецЦикла; 
				
			КонецЦикла;  // обхода по периодам действия/регистрации 
		КонецЦикла; // обход по видам тарифа
		
	КонецЕсли;
	
	// здесь собирается начисленные ранее страховые взносы - по периоду регистрации
	Если НалогиПоРегистрации = 1 Тогда 
		Пока ЗапросПоВзносам.Группировка("Регистрация")=1 Цикл
			Регистрация = ЗапросПоВзносам.Регистрация;
			МесяцДохода=ДатаМесяц(Регистрация); 
			ЭтоИнвалид = Число(Сред(Инвалид,МесяцДохода,1));
			ИмяРаздела = ?(ЭтоИнвалид = 1, "Инвалид", "");
			ИмяРазделаЕНВД = ?(ЭтоИнвалид = 1, "Инвалид", "ЕНВД");
			Пока ЗапросПоВзносам.Группировка("ВР")=1 Цикл
				ВР = ЗапросПоВзносам.ВР;
				СуммаРез=ЗапросПоВзносам.РезультатВР;
				ИмяКолонки="";
				Если (ВР=ВидРасчета.ФФОМСс2010)  Тогда
					ИмяКолонки = "ИсчисленоФФОМС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ТФОМСс2010)  Тогда
					ИмяКолонки = "ИсчисленоТФОМС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ФССс2010)  Тогда
					ИмяКолонки = "ИсчисленоФСС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРСтраховаяЧастьс2010)  Тогда
					ИмяКолонки = "ИсчисленоПФРСтрах" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРНакопительнаяЧастьс2010)  Тогда
					ИмяКолонки = "ИсчисленоПФРНак" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРСтраховаяЧастьЕНВД)  Тогда
					ИмяКолонки = "ИсчисленоПФРСтрах" + ИмяРазделаЕНВД;
				ИначеЕсли (ВР=ВидРасчета.ПФРНакопительнаяЧастьЕНВД)  Тогда
					ИмяКолонки = "ИсчисленоПФРНак" + ИмяРазделаЕНВД;
				ИначеЕсли (ВР=ВидРасчета.ПФРПоДополнительномуТарифу)  Тогда
					ИмяКолонки = "ИсчисленоДопТариф";	
				ИначеЕсли (ВР=ВидРасчета.ФСС_НС)  Тогда
					ИмяКолонки = "ИсчисленоФСС_НС";	
				КонецЕсли;
				
				// занесем налоги в таблицу по сотруднику
				Если ИмяКолонки &lt;&gt; "" Тогда
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, ИмяКолонки, СуммаРез);
					
				КонецЕсли;
			КонецЦикла;  // обхода видов расчета
		КонецЦикла;  // обхода по месяцам
	КонецЕсли;
	
	МатпомощьВсегоПоТекущийМесяцСкорр = 0;
	Для Сч = 1 По 12 Цикл  
		
		СтрокаТаблицы = НомерСтрокиСотрудника+Сч; 
		
		ЭтоПрокурор = Число(Сред(Прокурор,Сч,1));
		КоэфВзносыПФРиФСС = Число(Сред(ВзиматьВзносыПФРиФСС,Сч,1)); 
		
		// рассчитаем скидку к доходу Матпомощь
		МатпомощьПоТекущийМесяц 	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10);
		МатпомощьИнвалидПоТекущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+13);
		МатпомощьЕНВДПоТекущийМесяц	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+26);
		МатпомощьВсегоПоТекущийМесяц   = МатпомощьПоТекущийМесяц + МатпомощьИнвалидПоТекущийМесяц + МатпомощьЕНВДПоТекущийМесяц;
		
		Если Сч = 1 Тогда
			
			МатпомощьПоПредыдущийМесяц 	      = 0;
			МатпомощьИнвалидПоПредыдущийМесяц = 0;
			МатпомощьЕНВДПоПредыдущийМесяц	  = 0;
			МатпомощьВсегоПоПредыдущийМесяц   = 0;
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= 0;
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = 0;
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= 0;
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = 0;
			
		Иначе  
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11);
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+13);
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+26);
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьЕНВДПоПредыдущийМесяц; 
			
			МатпомощьПоПредыдущийМесяц 	   	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10);
			МатпомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+13);
			МатпомощьЕНВДПоПредыдущийМесяц	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+26);
			МатпомощьВсегоПоПредыдущийМесяц   = МатпомощьПоПредыдущийМесяц + МатпомощьИнвалидПоПредыдущийМесяц + МатпомощьЕНВДПоПредыдущийМесяц;
			
		КонецЕсли; 
		
		МатПомощьТекущийМесяц         = (МатпомощьПоТекущийМесяц - МатпомощьПоПредыдущийМесяц) * КоэфВзносыПФРиФСС;
		МатПомощьИнвалидаТекущийМесяц = (МатпомощьИнвалидПоТекущийМесяц - МатпомощьИнвалидПоПредыдущийМесяц) * КоэфВзносыПФРиФСС;
		МатПомощьЕНВДТекущийМесяц     = (МатпомощьЕНВДПоТекущийМесяц - МатпомощьЕНВДПоПредыдущийМесяц) * КоэфВзносыПФРиФСС;
		МатпомощьВсегоТекущийМесяц 	  = МатПомощьТекущийМесяц + МатПомощьИнвалидаТекущийМесяц + МатПомощьЕНВДТекущийМесяц; 
		
		МатпомощьВсегоПоПредыдущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр;
		МатпомощьВсегоПоТекущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр + МатпомощьВсегоТекущийМесяц;
		
		// Скидка текущего месяца
		СкидкаМатПомощьВсегоТекущийМесяц = Мин(МатпомощьВсегоПоТекущийМесяцСкорр, РазмерСкидкаМатпомощь) - СкидкаМатПомощьВсегоПоПредыдущийМесяц;
		
		// вычислим месячную долю, которая учавствует в расчете
		// это для месяца, в котором превысили предел РазмерСкидкаМатпомощь 
		Если СкидкаМатПомощьВсегоТекущийМесяц &gt;= 0 Тогда 
			
			Если (МатпомощьВсегоТекущийМесяц = 0) или (МатпомощьВсегоПоПредыдущийМесяцСкорр &gt;= РазмерСкидкаМатпомощь)  Тогда
				// предел превышен
				КоэффициентБазы = 0;
			ИначеЕсли МатпомощьВсегоПоТекущийМесяцСкорр &lt;= РазмерСкидкаМатпомощь  Тогда
				//не достигли предела
				КоэффициентБазы = 1;
			Иначе
				КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			КонецЕсли; 
			
			
			
		Иначе // сторно скидуки
			
			КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			
		КонецЕсли;
		
		СкидкаМатПомощьТекущийМесяц 		= МатПомощьТекущийМесяц  * КоэффициентБазы; // по основному тарифу
		СкидкаМатПомощьИнвалидаТекущийМесяц = МатПомощьИнвалидаТекущийМесяц * КоэффициентБазы; // база инвалида
		СкидкаМатПомощьЕНВДТекущийМесяц  	= МатПомощьЕНВДТекущийМесяц * КоэффициентБазы; // база ЕНВД
		
		СкидкаМатПомощьПоТекущийМесяц        = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьТекущийМесяц;
		СкидкаМатПомощьИнвалидПоТекущийМесяц = СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьИнвалидаТекущийМесяц;
		СкидкаМатПомощьЕНВДПоТекущийМесяц    = СкидкаМатПомощьЕНВДПоПредыдущийМесяц + СкидкаМатПомощьЕНВДТекущийМесяц;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11,СкидкаМатПомощьПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+13,СкидкаМатПомощьИнвалидПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+26,СкидкаМатПомощьЕНВДПоТекущийМесяц);
		
		Если ЭтоПрокурор=1 Тогда 
			
			ДоляМатпомощьПрокурор = МатпомощьПоТекущийМесяц-СкидкаМатПомощьПоТекущийМесяц;
			ДоляМатпомощьПрокурорИнвалид = МатпомощьИнвалидПоТекущийМесяц-СкидкаМатПомощьИнвалидПоТекущийМесяц;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7)+ДоляМатпомощьПрокурор);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7+13,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7+13)+ДоляМатпомощьПрокурорИнвалид);
			
		КонецЕсли;
		
		Если СкидкаМатПомощьТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"");
		КонецЕсли; 
		
		Если СкидкаМатПомощьИнвалидаТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьИнвалидаТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"");
		КонецЕсли;
		
		Если СкидкаМатПомощьЕНВДТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьЕНВДТекущийМесяц,
			"Матпомощь",
			1,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"");
		КонецЕсли;
		
		
	КонецЦикла; // цикл по месяцам при расчете скидки
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Сортировать("Физлицо, Период");   
	
	ВремТаблицаЕСННачисления.Сортировать("Сотрудник, ПериодРегистрации"); 
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Свернуть("Период,Физлицо,ВидДохода,ОблагаетсяЕНВД,ВидРасчета,ДокументОснование,ОблагаетсяПоДополнительномуТарифу,ЯвляетсяДоходомФармацевта,ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаСтраховыеВзносыСведенияОДоходах, ТаблицаСтраховыеВзносыСведенияОДоходах);
	
	ВремТаблицаЕСННачисления.Свернуть("Сотрудник,Физлицо,ПериодРегистрации,ПериодДействия,ПериодДействияНачало,ПериодДействияКонец,КодДоходаЕСН,ВидРасчета,ОблагаетсяЕНВД,ГрафикРаботы,ВидУчетаВремени,ДокументОснование,НомерСтрокиДокумента,Сторно","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаЕСННачисления,ТаблицаЕСННачисления); 
	
КонецЦикла; // обхода сотров и физлиц									

ВремТаблицаСтраховыеВзносыСведенияОДоходах = 0;
ВремТаблицаЕСННачисления = 0;

// рассчитаем ФСС_НС, до 2011 года
Если СтавкаФСС_НС &gt; 0 Тогда
	// пониженный тариф учтен в базе
	
	Для Сч = 1 по 12 Цикл
		
		БазаФСС_НСВсего = 0;
		НалогВсего = 0;
		
		НомерСтрокиМаксРезультата = 1;
		БылНалог = 0;
		Для СчСотров = 1 По ВсегоСотров Цикл 
			
			НомерСтрокиСотрудника = (СчСотров-1)*12 + Сч; 
			
			БазаФСС_НС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника,"БазаФСС_НС");
			БазаФСС_НСВсего = БазаФСС_НСВсего + БазаФСС_НС;		
			
			Налог = Окр(БазаФСС_НС*СтавкаФСС_НС,2);
			НалогВсего = НалогВсего + Налог;
			
			Если Налог &gt; БылНалог Тогда
				НомерСтрокиМаксРезультата = НомерСтрокиСотрудника;
			КонецЕсли;  
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника,"ИсчисленоФСС_НС",Налог);
			
		КонецЦикла; 
		
		НалогВсегоРасчет = Окр(БазаФСС_НСВсего*СтавкаФСС_НС,2);   
		Разница = НалогВсегоРасчет - НалогВсего;
		Если Разница&lt;&gt;0 Тогда
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиМаксРезультата,"ИсчисленоФСС_НС",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиМаксРезультата,"ИсчисленоФСС_НС")+Разница);    
		КонецЕсли;
		
	КонецЦикла;	
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбходСотрудниковДляСтраховыхВзносов2011" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем БазаПФР[3];
Перем БазаПФРТекущийМесяц[3];
Перем НалоговаяБазаПФРПоПредыдущийМесяц[3];
Перем ОграниченнаяБазаПФР[3];

Перем БазаФОМС[3];
Перем БазаФОМСТекущийМесяц[3];
Перем НалоговаяБазаФОМСПоПредыдущийМесяц[3];
Перем ОграниченнаяБазаФОМС[3];

Перем БазаФСС[3]; 
Перем БазаФССТекущийМесяц[3];
Перем НалоговаяБазаФССПоПредыдущийМесяц[3];
Перем ОграниченнаяБазаФСС[3]; 

Перем БазаФСС_НС[3]; 
Перем БазаФСС_НСТекущийМесяц[3];
Перем НалоговаяБазаФСС_НСПоПредыдущийМесяц[3];


ТаблицаСтраховыеВзносыСведенияОДоходах	= ИсходящиеДанные;
ТаблицаЕСННачисления					= ВходящиеДанные;
ВсегоСотров								= Источник;
Сотрудники								= Приемник;
ЗапросПоВзносам							= ТипПриемника;
ЗапросПоВзносамКСправочникам			= Значение;
ДоходыВычетыНалогиСотрудников			= Выражение;
ЖрнЗарплата								= Пусто;
Год										= ВыборкаДанных;
ПервыйМесяц								= Объект;
ПоследнийМесяц							= КоллекцияОбъектов;
ИскатьВоенных							= ОбъектКоллекции;
ТаблицаРаспределенияПоШаблПроводок		= ИмяПКО;
ИскатьЕНВД								= ИмяПКОВидСубконто;
СоответствиеВРкодамДоходовСВ			= НомерПКО;


// скопируем структуру таблицы
ВремТаблицаСтраховыеВзносыСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаСтраховыеВзносыСведенияОДоходах.Загрузить(ТаблицаСтраховыеВзносыСведенияОДоходах);

ВремТаблицаЕСННачисления = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаЕСННачисления.Загрузить(ТаблицаЕСННачисления);


ДатаАктуальности = Дата(Год,ПоследнийМесяц,01);
ИскатьЛетчиков = Константа.ЕстьЛетчики; 
ИскатьГосслужащих = Константа.ЕстьГосслужащие;

ТаблицаДоляЕНВД = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаДоляЕНВД.НоваяКолонка("ДоляЕНВД","Число",25,10);


ТаблицаОсновныхТарифов = глПолучитьТаблицуОсновныхТарифов(ДатаАктуальности); 

ПределДоходов = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода(ДатаАктуальности));

// получим размеры скидок к доходам
СпрВычетов = СоздатьОбъект("Справочник.СтраховыеВзносыСкидкиКДоходам");
СкидкаМатпомощь = 0;
РазмерСкидкаМатпомощь = 0;
Если СпрВычетов.НайтиПоКоду("Матпомощь",0) = 1 Тогда
	РазмерСкидкаМатпомощь = СпрВычетов.ГодоваяСкидка.Получить(НачГода(ДатаАктуальности));
КонецЕсли;
СкидкаМатпомощьПриРожденииРебенка = 0;

ТаблицаБазаОТ = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаБазаОТ.НоваяКолонка("БазаПФР","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФСС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФОМС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("ВидТарифа");  

СпрШаблонов = СоздатьОбъект("Справочник.ШаблоныПроводок");
СпрШаблонов.НайтиПоНаименованию("Не отражать в бухгалтерском учете");
НеРаспределять = СпрШаблонов.ТекущийЭлемент();

// перебираем сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаЕСННачисления.УдалитьСтроки();
	
	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	
	КодСотра=Сотрудник.Код;
	ИмяСотра=Сотрудник.Наименование; 
	
	НалогиПоРегистрации=0;
	ЗапросПоВзносам.вНачалоВыборки();
	Если ЗапросПоВзносам.Получить(Сотрудник,,)=1 Тогда
		НалогиПоРегистрации=1;	
	КонецЕсли; 
	
	ДанныеВСправочнике=0;
	ЗапросПоВзносамКСправочникам.вНачалоВыборки();
	Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,,)=1 Тогда
		ДанныеВСправочнике=1;	
	КонецЕсли;
	
	НовыйПроцент = Окр(СчСотров/ВсегоСотров*100);
	
	Если СчСотров &lt; ВсегоСотров Тогда
		глСтатусСтрока(Форма,"Обрабатываются доходы"+?(ВсегоСотров=1,""," ("+НовыйПроцент+"%)")+": "+ИмяСотра);
	КонецЕсли;
	
	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.НоваяСтрока();
		НомерСтроки = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
		ИдентификаторСотрудника = КодСотраВтаблице+глДополнитьСтроку(Сч,2);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,1,ИдентификаторСотрудника);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,"ОграниченнаяБаза",ТаблицаБазаОТ);
	КонецЦикла;
	
	Если ПустоеЗначение(""+КодСотра+ИмяСотра)=1 Тогда
		Продолжить
	КонецЕсли;
	
	// получим выборку записей по всем местам работы сотра на предприятии,
	// включая все места по внутреннему совместительству
	Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,ЖрнЗарплата.ПериодПоДате(Дата(Год,ПервыйМесяц,15)),ЖрнЗарплата.ПериодПоДате(Дата(Год,ПоследнийМесяц,15))) = 1 Тогда
	ИначеЕсли ДанныеВСправочнике + НалогиПоРегистрации = 0 Тогда
		Продолжить
	КонецЕсли;
	
	Военнослужащий = "000000000000";
	Прокурор	   = "000000000000";
	Летчик         = "000000000000";
	ВзиматьВзносыПФРиФСС = "111111111111"; 
	Инвалид = "000000000000"; 
	
	Для Сч = ПервыйМесяц По ПоследнийМесяц Цикл
		
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
		
		Если (Сотрудник.НеВзиматьВзносыПФРиФСС.Получить(ДатаМесяца) = 1) Тогда
			ВзиматьВзносыПФРиФСС = ?(Сч=1,"",Лев(ВзиматьВзносыПФРиФСС,Сч-1))+"0"+?(Сч=12,"",Прав(ВзиматьВзносыПФРиФСС,12-Сч));
		КонецЕсли;
		
		КатегорияПФР = Сотрудник.КатегорияПлательщикаПФР.Получить(ДатаМесяца).Идентификатор();
		Если ПустоеЗначение(КатегорияПФР) = 0 Тогда
			Если Найти(",НРИВ,СХИВ,ФХИВ,ИПИВ,АДИВ,",","+КатегорияПФР+",") &gt; 0 Тогда
				Инвалид = ?(Сч=1,"",Лев(Инвалид,Сч-1))+"1"+?(Сч=12,"",Прав(Инвалид,12-Сч));
			КонецЕсли;
		КонецЕсли;
		
		Если ИскатьЛетчиков = 1 Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьВоенных = 1 Тогда
			Если глВоеннослужащий(Сотрудник, ДатаМесяца) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
			Если глВоеннослужащий(Сотрудник, НачМесяца(ДатаМесяца)) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
		КонецЕсли;
		
		Если (ИскатьВоенных = 1) или (ИскатьГосслужащих=1) Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;				
			
		КонецЕсли;
		
	КонецЦикла; 
	
	
	ТаблицаДоляЕНВД.УдалитьСтроки();
	ПустойШаблон = ПолучитьПустоеЗначение("Справочник.ШаблоныПроводок");
	
	Для СчМес = 1 По 12 Цикл
		
		ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(СчМес);
		ТаблицаДоляЕНВД.НоваяСтрока();
		Если ИскатьЕНВД = 1 Тогда
			ДатаУчета = КонМесяца(Дата(Год,СчМес,15)); 
			ФормаТруда = Сотрудник.ФормаТруда.Получить(ДатаУчета);
			Если ПустоеЗначение(ФормаТруда)=0 Тогда
				
				Если (ФормаТруда=Перечисление.ФормыТруда.ТабельПодневнОклад)
				или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасОклад)
				или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасТариф) Тогда
					ОсновнойВР = ВидРасчета.ОплатаПоТабелю;
				Иначе
					ОсновнойВР = ?(глФормаТрудаПоТарифуОкладу(ФормаТруда)="Оклад",ВидРасчета.ОплатаПоОкладу,ВидРасчета.ОплатаПоТарифу);
				КонецЕсли;
				
			Иначе	
				ОсновнойВР = ВидРасчета.ОплатаПоОкладу;
			КонецЕсли;
			
			ШаблонУчета = УточнитьУчетПоСотруднику(ПустойШаблон,Сотрудник,ОсновнойВР,1,ДатаУчета,ДатаУчета);
			Если ТипЗначения(ШаблонУчета) = 11  Тогда
				Если ШаблонУчета.ПодпадаетПодЕНВД = 1 Тогда
					ТаблицаДоляЕНВД.ДоляЕНВД = 1;
				КонецЕсли;
			ИначеЕсли ТипЗначения(ШаблонУчета) = 100 Тогда
				
				ДоляЕНВД = 0;
				Для Сч = 1 По ШаблонУчета.КоличествоСтрок() Цикл
					ШаблонУчета.ПолучитьСтрокуПоНомеру(Сч);
					Если ШаблонУчета.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
						ДоляЕНВД = ДоляЕНВД + ШаблонУчета.Сумма;
					КонецЕсли;
				КонецЦикла;
				ТаблицаДоляЕНВД.ДоляЕНВД = ДоляЕНВД;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	БылМесяцДохода = 0;
	Пока ЖрнЗарплата.ПолучитьЗапись() = 1 Цикл
		
		ВР = ЖрнЗарплата.ВидРасч;
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания) = 1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ВозвратыНДФЛ) = 1) Тогда
			Продолжить
		КонецЕсли;
		
		СуммаРез = ЖрнЗарплата.Результат; 
		Если СуммаРез = 0 Тогда
			Продолжить
		КонецЕсли; 
		Скидка = 0;
		
		Объект					= ЖрнЗарплата.Объект; //это сотрудник
		ДокументОснование		= ЖрнЗарплата.Документ;
		НомерСтрокиДокумента	= ЖрнЗарплата.НомерСтрокиДокумента;
		
		ДатаДохода				= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
		ПериодРегистрации		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
		ПериодДействия			= НачМесяца(ЖрнЗарплата.ДатаНачала);
		ПериодДействияНачало	= ЖрнЗарплата.ДатаНачала;
		ПериодДействияКонец		= ЖрнЗарплата.ДатаОкончания;
		МесяцДохода				= ДатаМесяц(ДатаДохода);
		
		Если БылМесяцДохода &lt;&gt; МесяцДохода Тогда
			БылМесяцДохода = МесяцДохода
		КонецЕсли;
		
		ЭтоИнвалид 		  = Число(Сред(Инвалид,МесяцДохода,1));
		ЭтоЛетчик 		  = Число(Сред(Летчик,МесяцДохода,1));
		ЭтоПрокурор 	  = Число(Сред(Прокурор,МесяцДохода,1)); 
		
		КоэфВзносыПФРиФСС = Число(Сред(ВзиматьВзносыПФРиФСС,МесяцДохода,1));
		
		Если ЭтоПрокурор = 1 Тогда
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,0,СоответствиеВРкодамДоходовСВ));
			Если ПустаяСтрока(КодДохода) = 1 Тогда 
				КодДохода="СодержаниеПрокуроров";
			КонецЕсли;
		Иначе
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,Число(Сред(Военнослужащий,МесяцДохода,1)), СоответствиеВРкодамДоходовСВ));
		КонецЕсли; 
		
		
		СуммаОсновнойТариф = 0; // сумма по основному тарифу, не инвалид
		СуммаИнвалид = 0;       // сумма инвалида
		СуммаЕНВД = 0;          // сумма по виду деятельности ЕНВД, не инвалид
		НомерКолонки = 0;       // номер колонки дохода для основного тарифа
		НомерКолонкиПрокурор = 0;       // номер колонки дохода для основного тарифа
		
		СкидкаОсновнойТариф = 0; // сумма скидки по основному тарифу, не инвалид
		СкидкаИнвалид = 0;       // сумма скидки инвалида
		СкидкаЕНВД = 0;
		
		РазложитьСуммыПоТарифам = 1;
		КодДоходаСтраховыеВзносы = "";
		Если ПустаяСтрока(КодДохода) = 1 Тогда
			// целиком облагаемые 
			КодДоходаСтраховыеВзносы	= "ОблагаетсяЦеликом";
			
		ИначеЕсли КодДохода="-1"  Тогда 
			
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				Продолжить;
			Иначе
				КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
				НомерКолонки = 4;
			КонецЕсли;
			
		ИначеЕсли (КодДохода="Не является объектом по ЕСН") Тогда
			Продолжить
			
		ИначеЕсли (КодДохода="НеЯвляетсяОбъектом") Тогда
			Продолжить	
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 4;
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликомЕНВД" Тогда 
			КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
			НомерКолонки = 4;
			РазложитьСуммыПоТарифам = 0; 
			Если ИскатьЕНВД = 1 Тогда
				СуммаЕНВД = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
		
		ИначеЕсли КодДохода="НеЯвляетсяОбъектом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 3; 
			
		ИначеЕсли КодДохода="ЕдиновременныеПособияФСС" Тогда
				
			    КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			
				// единовременные пособия за счет ФСС
				НомерКолонки = 5;
				
				Если ЭтоИнвалид = 1 Тогда
					СуммаИнвалид = СуммаРез;      
				Иначе	
					СуммаОсновнойТариф = СуммаРез;
				КонецЕсли;	
			
		ИначеЕсли КодДохода="РасходыЗаСчетФСС" Тогда	
			
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения 
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		ИначеЕсли КодДохода="ВозмещаемыеФСС" Тогда
			
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				СуммаЕНВД = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли КодДохода="ПособиеДоПолутораЛет" Тогда
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		ИначеЕсли КодДохода="Довольствие" Тогда
			КодДоходаСтраховыеВзносы	= "ДенежноеДовольствиеВоеннослужащих";
			НомерКолонки = 6;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли; 
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли КодДохода="СодержаниеПрокуроров" Тогда
			КодДоходаСтраховыеВзносы	= "ДенежноеСодержаниеПрокуроров";
			НомерКолонки = 7;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли; 
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли (КодДохода="МатПомощь")  Тогда
			КодДоходаСтраховыеВзносы	= "Матпомощь";
			НомерКолонки = 10;
			
		ИначеЕсли (КодДохода="МатпомощьПриРожденииРебенка")  Тогда  
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 8;
			НомерКолонкиПрокурор = 7;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Скидка = Док.СуммаВычета;
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = -1*Скидка;
			КонецЕсли;  
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД,2);
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли (КодДохода="ДоговорыПодряда")  Тогда
			КодДоходаСтраховыеВзносы	= "ДоговорыГПХ";
			НомерКолонки = 12;
			
		ИначеЕсли (КодДохода = "Авторские") или (КодДохода = "Лицензионные") или (КодДохода = "ОтчуждениеАвторскихПрав") Тогда
			// все авторские договора
			КодДоходаСтраховыеВзносы	= глПолучитьВидДоходаПоАвторскомуДоговору(ДокументОснование);
			Если ПустоеЗначение(КодДоходаСтраховыеВзносы) = 1 Тогда
				КодДоходаСтраховыеВзносы = "ОблагаетсяЦеликом";
			КонецЕсли;
			
			НомерКолонки = 13;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Если Док.Вид() = "НачисленияУдержанияСписком" Тогда
				Док.ПолучитьСтрокуПоНомеру(ЖрнЗарплата.НомерСтрокиДокумента);
			КонецЕсли;
			Расходы = глПолучитьРазмерСкидкиПоАвторскомуДоговору(Док, СуммаРез, ЭтоСторно, ДатаДохода);
			
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = Макс(Расходы,СуммаРез);
			Иначе 
				Скидка = Макс(Мин(Расходы,СуммаРез),0);
			КонецЕсли;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД/СуммаРез,2);  
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			

		КонецЕсли;	
		
		Если РазложитьСуммыПоТарифам = 1 Тогда
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				
				Если (КодДохода = "РасходыЗаСчетФСС") или (КодДохода = "ВозмещаемыеФСС") или (КодДохода = "ПособиеДоПолутораЛет") Тогда
					
					СуммаЕНВД = ОКР(СуммаРез * ДоляЕНВД,2);
					СуммаОсновнойТариф = СуммаРез - СуммаЕНВД; 
					
				ИначеЕсли (КодДохода="ЕдиновременныеПособияФСС") Тогда
					
					Если ДоляЕНВД = 1 Тогда
						СуммаЕНВД = СуммаРез;
						СуммаОсновнойТариф = 0;    
					КонецЕсли;	
				Иначе 
					
					//надо опредлить долю ЕНВД
					глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
					СуммаЕНВД = 0; 
					Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
						Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
							СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
						КонецЕсли;
					КонецЦикла;
					СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
					
				КонецЕсли;
				
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		КонецЕсли;
		

		
		// занесем доходы в таблицу по сотруднику 
		
		Если СуммаОсновнойТариф &lt;&gt; 0 Тогда
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2, СуммаОсновнойТариф);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаОсновнойТариф, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование);
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаОсновнойТариф,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки, СуммаОсновнойТариф);
				
				Если СкидкаОсновнойТариф &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+1, СкидкаОсновнойТариф);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли; 
				
			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаОсновнойТариф - СкидкаОсновнойТариф;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор, СодержаниеПрокурора);
			КонецЕсли;
			
		КонецЕсли;  
		
		Если СуммаИнвалид &lt;&gt; 0 Тогда 
				
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+13, СуммаИнвалид);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаИнвалид, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование);
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаИнвалид,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда 
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+13, СуммаИнвалид);
				
				Если СкидкаИнвалид &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+13+1, СкидкаИнвалид);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;

			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаИнвалид - СкидкаИнвалид;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор+13, СодержаниеПрокурора);
			КонецЕсли;

		КонецЕсли; 
		
		Если СуммаЕНВД &lt;&gt; 0 Тогда
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+26, СуммаЕНВД);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаЕНВД, 
			0,
			КодДоходаСтраховыеВзносы,
			1,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование);
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаЕНВД,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			1,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
		
			Если НомерКолонки &gt; 0 Тогда
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26, СуммаЕНВД);
				
				Если СкидкаЕНВД &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26+1, СкидкаЕНВД);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					1,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					ВР,
					1,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // обхода записей ж.р. 
	
	
	// добавим доходы и налоги из справочника
	Если  ДанныеВСправочнике = 1 Тогда
		
		// получим данные из справочников последовательно для двух разделов
		// 0 - НеЕНВД, 1 - ЕНВД 
		
		ВР = ПолучитьПустоеЗначение("ВидРасчета");
		
		Для ВидТарифа = 0 По 1 Цикл 
			
			ЗапросПоВзносамКСправочникам.вНачалоВыборки();
			
			Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,ВидТарифа,)=0 Тогда
				Продолжить;	
			КонецЕсли;
			
			
			Пока ЗапросПоВзносамкСправочникам.Группировка("ГодоМесяц")=1 Цикл
				
				МесяцДохода = Число(ЗапросПоВзносамкСправочникам.ГодоМесяц) % 100;
				
				ЭтоИнвалид				= Число(Сред(Инвалид,МесяцДохода,1));
				НомерНачальнойКолонки = ?(ЭтоИнвалид=1,13,?(ИскатьЕНВД*ВидТарифа=0,0,26));
				ТекстТарифа = ?(ЭтоИнвалид=1,"по тарифу для инвалидов","по основному тарифу");
				ИмяРаздела = ?(ЭтоИнвалид=1,"Инвалид",?(ИскатьЕНВД*ВидТарифа=0,"","ЕНВД"));
				
				// по основному тарифу
				ИсчисленоПФРНак   = ЗапросПоВзносамкСправочникам.НачисленоПФРНак;
				ИсчисленоПФРСтрах = ЗапросПоВзносамкСправочникам.НачисленоПФРСтрах;
				ИсчисленоФСС      = ЗапросПоВзносамкСправочникам.НачисленоФСС;
				ИсчисленоФФОМС    = ЗапросПоВзносамкСправочникам.НачисленоФФОМС;
				ИсчисленоТФОМС    = ЗапросПоВзносамкСправочникам.НачисленоТФОМС;
				ИсчисленоДопТариф = ЗапросПоВзносамкСправочникам.НачисленоДопТариф;
				
				НачисленоВсего						= ЗапросПоВзносамкСправочникам.НачисленоВсего;
				НеЯвляетсяОбъектом					= ЗапросПоВзносамкСправочникам.НеЯвляетсяОбъектом;
				НеОблагаетсяЦеликом					= ЗапросПоВзносамкСправочникам.НеОблагаетсяЦеликом;
				РасходыЗаСчетФСС					= ЗапросПоВзносамкСправочникам.РасходыЗаСчетФСС;
				ДенежноеДовольствиеВоеннослужащих	= ЗапросПоВзносамкСправочникам.ДенежноеДовольствиеВоеннослужащих;
				ДенежноеСодержаниеПрокуроров		= ЗапросПоВзносамкСправочникам.ДенежноеСодержаниеПрокуроров;
				Матпомощь							= ЗапросПоВзносамкСправочникам.Матпомощь;
				СкидкаМатпомощь						= ЗапросПоВзносамкСправочникам.СкидкаМатпомощь;
				МатпомощьПриРожденииРебенка			= ЗапросПоВзносамкСправочникам.МатпомощьПриРожденииРебенка;
				СкидкаМатпомощьПриРожденииРебенка	= ЗапросПоВзносамкСправочникам.СкидкаМатпомощьПриРожденииРебенка;
				ДоговорыПодряда						= ЗапросПоВзносамкСправочникам.ДоговорыПодряда;
				Авторские							= ЗапросПоВзносамкСправочникам.Авторские;
				СкидкаАвторские						= ЗапросПоВзносамкСправочникам.СкидкаАвторские;
				
				пЕНВД = ИскатьЕНВД*ВидТарифа;
				
				Если ДоговорыПодряда &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДоговорыПодряда, 
					0,
					"ДоговорыПодряда",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если Авторские &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Авторские, 
					СкидкаАвторские,
					"Авторские",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если ДенежноеДовольствиеВоеннослужащих &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеДовольствиеВоеннослужащих, 
					0,
					"ДенежноеДовольствиеВоеннослужащих",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если ДенежноеСодержаниеПрокуроров &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеСодержаниеПрокуроров, 
					0,
					"ДенежноеСодержаниеПрокуроров",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;						
				Если Матпомощь &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Матпомощь, 
					0,
					"Матпомощь",
					пЕНВД,
					ВидРасчета.МатПомощь,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если МатпомощьПриРожденииРебенка &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					МатпомощьПриРожденииРебенка, 
					СкидкаМатпомощьПриРожденииРебенка,
					"МатпомощьПриРожденииРебенка",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если НеЯвляетсяОбъектом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеЯвляетсяОбъектом, 
					0,
					"НеЯвляетсяОбъектом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если НеОблагаетсяЦеликом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеОблагаетсяЦеликом, 
					0,
					"НеОблагаетсяЦеликом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				Если РасходыЗаСчетФСС &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					РасходыЗаСчетФСС, 
					0,
					"РасходыЗаСчетФСС",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование);
				КонецЕсли;
				
				
				Для Сч = МесяцДохода По 12 Цикл
					НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника+Сч;
					
					
					//прибавим из справочников:
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки)
					+НачисленоВсего);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки)
					+НеЯвляетсяОбъектом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки)
					+НеОблагаетсяЦеликом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки)
					+РасходыЗаСчетФСС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки)
					+ДенежноеДовольствиеВоеннослужащих);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки)
					+ДенежноеСодержаниеПрокуроров);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки)
					+Матпомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки)
					+СкидкаМатПомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки)
					+МатпомощьПриРожденииРебенка); 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки)
					+СкидкаМатПомощьПриРожденииРебенка);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки)
					+ДоговорыПодряда);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки)
					+Авторские);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки)
					+СкидкаАвторские);
					
					
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРНак"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРНак"+ИмяРаздела)
					+ИсчисленоПФРНак);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРСтрах"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРСтрах"+ИмяРаздела)
					+ИсчисленоПФРСтрах); 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФСС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФСС"+ИмяРаздела)
					+ИсчисленоФСС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФФОМС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФФОМС"+ИмяРаздела)
					+ИсчисленоФФОМС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоТФОМС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоТФОМС"+ИмяРаздела)
					+ИсчисленоТФОМС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоДопТариф",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоДопТариф")
					+ИсчисленоДопТариф);				
					
					
				КонецЦикла; 
				
			КонецЦикла;  // обхода по периодам действия/регистрации 
		КонецЦикла; // обход по видам тарифа
		
	КонецЕсли;
	
	// здесь собирается начисленные ранее страховые взносы - по периоду регистрации
	Если НалогиПоРегистрации = 1 Тогда 
		Пока ЗапросПоВзносам.Группировка("Регистрация")=1 Цикл
			Регистрация = ЗапросПоВзносам.Регистрация;
			МесяцДохода=ДатаМесяц(Регистрация); 
			ЭтоИнвалид = Число(Сред(Инвалид,МесяцДохода,1));
			ИмяРаздела = ?(ЭтоИнвалид = 1, "Инвалид", "");
			Пока ЗапросПоВзносам.Группировка("ВР")=1 Цикл
				ВР = ЗапросПоВзносам.ВР;
				СуммаРез=ЗапросПоВзносам.РезультатВР;
				ИмяКолонки="";
				Если (ВР=ВидРасчета.ФФОМСс2010)  Тогда
					ИмяКолонки = "ИсчисленоФФОМС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ТФОМСс2010)  Тогда
					ИмяКолонки = "ИсчисленоТФОМС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ФССс2010)  Тогда
					ИмяКолонки = "ИсчисленоФСС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРСтраховаяЧастьс2010)  Тогда
					ИмяКолонки = "ИсчисленоПФРСтрах" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРНакопительнаяЧастьс2010)  Тогда
					ИмяКолонки = "ИсчисленоПФРНак" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРПоДополнительномуТарифу)  Тогда
					ИмяКолонки = "ИсчисленоДопТариф";	
				ИначеЕсли (ВР=ВидРасчета.ФСС_НС)  Тогда
					ИмяКолонки = "ИсчисленоФСС_НС";	
				КонецЕсли;
				
				// занесем налоги в таблицу по сотруднику
				Если ИмяКолонки &lt;&gt; "" Тогда
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, ИмяКолонки, СуммаРез);
					
				КонецЕсли;
			КонецЦикла;  // обхода видов расчета
		КонецЦикла;  // обхода по месяцам
	КонецЕсли;
	       
	Для Сч = 1 По 3 Цикл 
		
		БазаПФР[Сч] = 0;             // база без дохода иностранца
		БазаПФРТекущийМесяц[Сч] = 0;
		НалоговаяБазаПФРПоПредыдущийМесяц[Сч] = 0; // вся база, включая доходы иностранца
		ОграниченнаяБазаПФР[Сч] = 0; 
		
		БазаФОМС[Сч] = 0;
		БазаФОМСТекущийМесяц[Сч] = 0;
		НалоговаяБазаФОМСПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФОМС[Сч] = 0;
		
		БазаФСС[Сч] = 0;
		БазаФССТекущийМесяц[Сч] = 0;
		НалоговаяБазаФССПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФСС[Сч] = 0;
		
		БазаФСС_НС[Сч] = 0;
		БазаФСС_НСТекущийМесяц[Сч] = 0;
		НалоговаяБазаФСС_НСПоПредыдущийМесяц[Сч] = 0;
		
	КонецЦикла; 
	
	Прокурор	   = "000000000000";
	Если (ИскатьВоенных = 1) или (ИскатьГосслужащих=1) Тогда
		Для Сч = 1 По 12 Цикл
			Если Сотрудник.Должность.Получить(ДатаМесяца).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	МатпомощьВсегоПоТекущийМесяцСкорр = 0;
	Для Сч = 1 По 12 Цикл  
		
		СтрокаТаблицы = НомерСтрокиСотрудника+Сч; 
		
		ЭтоПрокурор = Число(Сред(Прокурор,Сч,1));
		КоэфВзносыПФРиФСС = Число(Сред(ВзиматьВзносыПФРиФСС,Сч,1)); 
		ЭтоИнвалид 		  = Число(Сред(Инвалид,Сч,1));
		
		// рассчитаем скидку к доходу Матпомощь
		МатпомощьПоТекущийМесяц 	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10);
		МатпомощьИнвалидПоТекущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+13);
		МатпомощьЕНВДПоТекущийМесяц	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+26);
		МатпомощьВсегоПоТекущийМесяц   = МатпомощьПоТекущийМесяц + МатпомощьИнвалидПоТекущийМесяц + МатпомощьЕНВДПоТекущийМесяц;
		
		Если Сч = 1 Тогда
			
			МатпомощьПоПредыдущийМесяц 	      = 0;
			МатпомощьИнвалидПоПредыдущийМесяц = 0;
			МатпомощьЕНВДПоПредыдущийМесяц	  = 0;
			МатпомощьВсегоПоПредыдущийМесяц   = 0;
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= 0;
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = 0;
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= 0;
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = 0;
			
		Иначе  
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11);
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+13);
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+26);
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьЕНВДПоПредыдущийМесяц; 

			МатпомощьПоПредыдущийМесяц 	   	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10);
			МатпомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+13);
			МатпомощьЕНВДПоПредыдущийМесяц	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+26);
			МатпомощьВсегоПоПредыдущийМесяц   = МатпомощьПоПредыдущийМесяц + МатпомощьИнвалидПоПредыдущийМесяц + МатпомощьЕНВДПоПредыдущийМесяц;
			
		КонецЕсли; 
		
		МатПомощьТекущийМесяц         = (МатпомощьПоТекущийМесяц - МатпомощьПоПредыдущийМесяц);
		МатПомощьИнвалидаТекущийМесяц = (МатпомощьИнвалидПоТекущийМесяц - МатпомощьИнвалидПоПредыдущийМесяц);
		МатПомощьЕНВДТекущийМесяц     = (МатпомощьЕНВДПоТекущийМесяц - МатпомощьЕНВДПоПредыдущийМесяц);
		МатпомощьВсегоТекущийМесяц 	  = МатПомощьТекущийМесяц + МатПомощьИнвалидаТекущийМесяц + МатПомощьЕНВДТекущийМесяц;  
		
		МатпомощьВсегоПоПредыдущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр;
		МатпомощьВсегоПоТекущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр + МатпомощьВсегоТекущийМесяц;
		
		// Скидка текущего месяца
		СкидкаМатПомощьВсегоТекущийМесяц = Мин(МатпомощьВсегоПоТекущийМесяцСкорр, РазмерСкидкаМатпомощь) - СкидкаМатПомощьВсегоПоПредыдущийМесяц;
		
		// вычислим месячную долю, которая учавствует в расчете
		// это для месяца, в котором превысили предел РазмерСкидкаМатпомощь 
		Если СкидкаМатПомощьВсегоТекущийМесяц &gt;= 0 Тогда 
			
			Если (МатпомощьВсегоТекущийМесяц = 0) или (МатпомощьВсегоПоПредыдущийМесяцСкорр &gt;= РазмерСкидкаМатпомощь)  Тогда
				// предел превышен
				КоэффициентБазы = 0;
			ИначеЕсли МатпомощьВсегоПоТекущийМесяцСкорр &lt;= РазмерСкидкаМатпомощь  Тогда
				//не достигли предела
				КоэффициентБазы = 1;
			Иначе
				КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			КонецЕсли; 
			
			
			
		Иначе // сторно скидуки
			
			КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			
		КонецЕсли;
		
		СкидкаМатПомощьТекущийМесяц 		= МатПомощьТекущийМесяц  * КоэффициентБазы; // по основному тарифу
		СкидкаМатПомощьИнвалидаТекущийМесяц = МатПомощьИнвалидаТекущийМесяц * КоэффициентБазы; // база инвалида 
		СкидкаМатПомощьЕНВДТекущийМесяц  	= МатПомощьЕНВДТекущийМесяц * КоэффициентБазы; // база ЕНВД
		
		
		СкидкаМатПомощьПоТекущийМесяц        = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьТекущийМесяц;
		СкидкаМатПомощьИнвалидПоТекущийМесяц = СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьИнвалидаТекущийМесяц;
		СкидкаМатПомощьЕНВДПоТекущийМесяц    = СкидкаМатПомощьЕНВДПоПредыдущийМесяц + СкидкаМатПомощьЕНВДТекущийМесяц;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11,СкидкаМатПомощьПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+13,СкидкаМатПомощьИнвалидПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+26,СкидкаМатПомощьЕНВДПоТекущийМесяц);
		
		Если ЭтоПрокурор=1 Тогда 
			
			ДоляМатпомощьПрокурор = МатпомощьПоТекущийМесяц-СкидкаМатПомощьПоТекущийМесяц;
			ДоляМатпомощьПрокурорИнвалид = МатпомощьИнвалидПоТекущийМесяц-СкидкаМатПомощьИнвалидПоТекущийМесяц;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7)+ДоляМатпомощьПрокурор);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7+13,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7+13)+ДоляМатпомощьПрокурорИнвалид);
			
		КонецЕсли;
	
		Если СкидкаМатПомощьТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"");
		КонецЕсли; 
		
		Если СкидкаМатПомощьИнвалидаТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьИнвалидаТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"");
		КонецЕсли;  
		
		Если СкидкаМатПомощьЕНВДТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьЕНВДТекущийМесяц,
			"Матпомощь",
			1,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"");
		КонецЕсли;
		
		Если ИскатьЕНВД = 1 Тогда
			
			ТаблицаБазаОсновнойТариф = СоздатьОбъект("ТаблицаЗначений"); 
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаПФР","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФСС","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФОМС","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("ВидТарифа"); 
			
			Для СчТарифов = 1 по 3 Цикл
				//тариф ЕНВД оставлен для совместимости
				
				РазлелТаблицы = (СчТарифов-1) * 13;
				ИмяРаздела = ?(СчТарифов = 1,"",?(СчТарифов = 2,"Инвалид","ЕНВД"));
				
				НачисленоВсего                    = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,2+РазлелТаблицы);
				НеЯвляетсяОбъектом                = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,3+РазлелТаблицы);
				НеОблагаетсяЦеликом               = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,4+РазлелТаблицы);
				РасходыЗаСчетФСС                  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,5+РазлелТаблицы);
				ДенежноеДовольствиеВоеннослужащих = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,6+РазлелТаблицы);
				ДенежноеСодержаниеПрокуроров      = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7+РазлелТаблицы);
				Матпомощь                         = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+РазлелТаблицы);
				СкидкаМатПомощь                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,11+РазлелТаблицы);
				МатпомощьПриРожденииРебенка       = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,8+РазлелТаблицы);
				СкидкаМатПомощьПриРожденииРебенка = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,9+РазлелТаблицы);
				ДоговорыПодряда                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,12+РазлелТаблицы);
				Авторские                         = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,13+РазлелТаблицы);
				СкидкаАвторские                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,14+РазлелТаблицы); 
				
				НалоговаяБазаФОМС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- СкидкаАвторские;
				
				НалоговаяБазаПФР = НалоговаяБазаФОМС
				- ДенежноеСодержаниеПрокуроров;
				
				НалоговаяБазаФСС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- ДоговорыПодряда
				- Авторские;
				
				
				БазаПФРТекущийМесяц[СчТарифов] = 0;
				БазаФССТекущийМесяц[СчТарифов] = 0;
				Если КоэфВзносыПФРиФСС = 1 Тогда  // учтем флажок страховых взносов
					БазаПФРТекущийМесяц[СчТарифов] = НалоговаяБазаПФР - НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов];
					БазаФССТекущийМесяц[СчТарифов] = НалоговаяБазаФСС - НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов];
				КонецЕсли;
				НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаПФР;
				НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС; 
				
				БазаФСС_НСТекущийМесяц[СчТарифов] = НалоговаяБазаФСС - НалоговаяБазаФСС_НСПоПредыдущийМесяц[СчТарифов]; 
				НалоговаяБазаФСС_НСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС;
				
				БазаПФР[СчТарифов]    = БазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов];
				БазаФСС[СчТарифов]    = БазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов];
				БазаФСС_НС[СчТарифов] = БазаФСС_НС[СчТарифов] + БазаФСС_НСТекущийМесяц[СчТарифов];
				
				БазаФОМСТекущийМесяц[СчТарифов] = 0;
				Если КоэфВзносыПФРиФСС = 1 Тогда  // учтем флажок страховых взносов
					БазаФОМСТекущийМесяц[СчТарифов] = НалоговаяБазаФОМС - НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов];
				КонецЕсли; 
				НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФОМС;
				
				БазаФОМС[СчТарифов] = БазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов];
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаПФР"+ИмяРаздела,БазаПФР[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФСС"+ИмяРаздела,БазаФСС[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФОМС"+ИмяРаздела,БазаФОМС[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФСС_НС"+ИмяРаздела,БазаФСС_НС[СчТарифов]);
				
				
			КонецЦикла; // цикл по тарифам
			
			//******************************************************************************
			// Расчет облагаемой базы, с учетом ограничения сверху
			
			БазаПФРВсегоПоТекущийМесяц    = БазаПФР[1] + БазаПФР[2] + БазаПФР[3];
			БазаПФРВсегоТекущийМесяц      = БазаПФРТекущийМесяц[1] + БазаПФРТекущийМесяц[2] + БазаПФРТекущийМесяц[3];
			БазаПФРВсегоПоПредыдущийМесяц = БазаПФРВсегоПоТекущийМесяц - БазаПФРВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаПФРВсегоТекущийМесяц = Мин(БазаПФРВсегоПоТекущийМесяц, ПределДоходов) - БазаПФРВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаПФРВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаПФРВсегоПоТекущийМесяц &gt;= ПределДоходов) Тогда 
				// предел превышен в прошлом периоде
				КоэффициентБазыПФР = 0;
			ИначеЕсли (БазаПФРВсегоПоТекущийМесяц &lt;= ПределДоходов)  Тогда 
				Если (БазаПФРВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыПФР = 1;
				ИначеЕсли ОблагаемаяБазаПФРВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыПФР = (БазаПФРВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаПФРВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыПФР = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыПФР = ОблагаемаяБазаПФРВсегоТекущийМесяц / БазаПФРВсегоТекущийМесяц;
			КонецЕсли; 
			
			
			БазаФОМСВсегоПоТекущийМесяц    = БазаФОМС[1] + БазаФОМС[2] + БазаФОМС[3];
			БазаФОМСВсегоТекущийМесяц      = БазаФОМСТекущийМесяц[1] + БазаФОМСТекущийМесяц[2] + БазаФОМСТекущийМесяц[3];
			БазаФОМСВсегоПоПредыдущийМесяц = БазаФОМСВсегоПоТекущийМесяц - БазаФОМСВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаФОМСВсегоТекущийМесяц = Мин(БазаФОМСВсегоПоТекущийМесяц, ПределДоходов) - БазаФОМСВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаФОМСВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаФОМСВсегоПоТекущийМесяц &gt;= ПределДоходов) Тогда 
				// предел превышен
				КоэффициентБазыФОМС = 0;
			ИначеЕсли БазаФОМСВсегоПоТекущийМесяц &lt;= ПределДоходов  Тогда
				//не достигли предела, вся база входит в облагаемую
				Если (БазаФОМСВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыФОМС = 1;
				ИначеЕсли ОблагаемаяБазаФОМСВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыФОМС = (БазаФОМСВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаФОМСВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыФОМС = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыФОМС = ОблагаемаяБазаФОМСВсегоТекущийМесяц / БазаФОМСВсегоТекущийМесяц;
			КонецЕсли;
			
			
			БазаФССВсегоПоТекущийМесяц    = БазаФСС[1] + БазаФСС[2] + БазаФСС[3];
			БазаФССВсегоТекущийМесяц      = БазаФССТекущийМесяц[1] + БазаФССТекущийМесяц[2] + БазаФССТекущийМесяц[3];
			БазаФССВсегоПоПредыдущийМесяц = БазаФССВсегоПоТекущийМесяц - БазаФССВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаФССВсегоТекущийМесяц = Мин(БазаФССВсегоПоТекущийМесяц, ПределДоходов) - БазаФССВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаФССВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаФССВсегоПоТекущийМесяц &gt;= ПределДоходов)  Тогда 
				// предел превышен
				КоэффициентБазыФСС = 0;
			ИначеЕсли БазаФССВсегоПоТекущийМесяц &lt;= ПределДоходов  Тогда
				//не достигли предела, вся база входит в облагаемую
				Если (БазаФССВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыФСС = 1;
				ИначеЕсли ОблагаемаяБазаФССВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыФСС = (БазаФССВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаФССВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыФСС = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыФСС = ОблагаемаяБазаФССВсегоТекущийМесяц / БазаФССВсегоТекущийМесяц;
			КонецЕсли;
			
			Для СчТарифов = 1 по 3 Цикл
				
				ИмяРаздела = ?(СчТарифов = 1,"",?(СчТарифов = 2,"Инвалид","ЕНВД"));
				
				Если СчТарифов = 1 Тогда 
					// по основному тарифу базу пишем в разрезе тарифов
					// получим основной тариф текущего месяца
					ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(Сч);
					ОсновнойТариф = ТаблицаОсновныхТарифов.ВидТарифа;
					
					Если Сч = 1 Тогда 
						//первый месяц
						ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
						ТаблицаБазаОсновнойТариф.ВидТарифа = ОсновнойТариф;
						ТаблицаБазаОсновнойТариф.БазаПФР   = БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
						ТаблицаБазаОсновнойТариф.БазаФСС   = БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
						ТаблицаБазаОсновнойТариф.БазаФОМС  = БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
					Иначе
						ТаблицаБазаОсновнойТариф.Загрузить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБаза"));
						НомерСтрокиТаблицы = "";
						Если ТаблицаБазаОсновнойТариф.НайтиЗначение(ОсновнойТариф,НомерСтрокиТаблицы,"ВидТарифа") = 1 Тогда
							ТаблицаБазаОсновнойТариф.ПолучитьСтрокуПоНомеру(НомерСтрокиТаблицы); 
							ТаблицаБазаОсновнойТариф.ВидТарифа = ОсновнойТариф;
							ТаблицаБазаОсновнойТариф.БазаПФР   = ТаблицаБазаОсновнойТариф.БазаПФР  + БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
							ТаблицаБазаОсновнойТариф.БазаФСС   = ТаблицаБазаОсновнойТариф.БазаФСС  + БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
							ТаблицаБазаОсновнойТариф.БазаФОМС  = ТаблицаБазаОсновнойТариф.БазаФОМС + БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
						Иначе
							ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
							ТаблицаБазаОсновнойТариф.ВидТарифа = ОсновнойТариф;
							ТаблицаБазаОсновнойТариф.БазаПФР   = БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
							ТаблицаБазаОсновнойТариф.БазаФСС   = БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
							ТаблицаБазаОсновнойТариф.БазаФОМС  = БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
						КонецЕсли;	
					КонецЕсли;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБаза",ТаблицаБазаОсновнойТариф);
					
				Иначе
					
					ОграниченнаяБазаПФР[СчТарифов] = ОграниченнаяБазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов] * КоэффициентБазыПФР;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаПФР"+ИмяРаздела,ОграниченнаяБазаПФР[СчТарифов]);
					
					ОграниченнаяБазаФОМС[СчТарифов] = ОграниченнаяБазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов] * КоэффициентБазыФОМС;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФОМС"+ИмяРаздела,ОграниченнаяБазаФОМС[СчТарифов]); 
					
					ОграниченнаяБазаФСС[СчТарифов] = ОграниченнаяБазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов] * КоэффициентБазыФСС;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФСС"+ИмяРаздела,ОграниченнаяБазаФСС[СчТарифов]);
					
				КонецЕсли;
				
			КонецЦикла;
			
			ИсчисленоПФРНак = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНак");
			ИсчисленоПФРНакЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНакЕНВД");
			ИсчисленоПФРСтрах = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрах");
			ИсчисленоПФРСтрахЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрахЕНВД");
			ИсчисленоТФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМС");
			ИсчисленоТФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМСЕНВД");
			ИсчисленоФФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМС");
			ИсчисленоФФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМСЕНВД");
			ИсчисленоФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФСС");
			ИсчисленоФССЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФССЕНВД");
			
			
			ОблагаемаяБазаПФРЕНВД  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаПФРЕНВД");
			ОблагаемаяБазаФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФОМСЕНВД");
			ОблагаемаяБазаФССЕНВД  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФССЕНВД");
			
			ОблагаемаяБазаПФР = 0;
			ОблагаемаяБазаФОМС = 0;
			ОблагаемаяБазаФСС = 0;
			ОблагаемаяБазаПоТекущийМесяцТаблица	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБаза");
			ОблагаемаяБазаПоТекущийМесяцТаблица.ВыбратьСтроки();
			Пока ОблагаемаяБазаПоТекущийМесяцТаблица.ПолучитьСтроку()=1 Цикл
				// цикл по всем тарифам, которые использовались в организации
				ОблагаемаяБазаПФР  = ОблагаемаяБазаПФР  + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаПФР;
				ОблагаемаяБазаФОМС = ОблагаемаяБазаФОМС + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФОМС;
				ОблагаемаяБазаФСС  = ОблагаемаяБазаФСС + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФСС;
			КонецЦикла;
			
			Если Сч&gt;1 Тогда
				
				ИсчисленоПФРНак = ИсчисленоПФРНак - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНак");
				ИсчисленоПФРНакЕНВД = ИсчисленоПФРНакЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНакЕНВД");
				ИсчисленоПФРСтрах = ИсчисленоПФРСтрах - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрах");
				ИсчисленоПФРСтрахЕНВД = ИсчисленоПФРСтрахЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрахЕНВД");
				ИсчисленоТФОМС = ИсчисленоТФОМС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМС");
				ИсчисленоТФОМСЕНВД = ИсчисленоТФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМСЕНВД");
				ИсчисленоФФОМС = ИсчисленоФФОМС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМС");
				ИсчисленоФФОМСЕНВД = ИсчисленоФФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМСЕНВД"); 
				ИсчисленоФСС = ИсчисленоФСС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФСС");
				ИсчисленоФССЕНВД = ИсчисленоФССЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФССЕНВД");
				
				ОблагаемаяБазаПФРЕНВД  = ОблагаемаяБазаПФРЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаПФРЕНВД");
				ОблагаемаяБазаФОМСЕНВД = ОблагаемаяБазаФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаФОМСЕНВД");
				ОблагаемаяБазаФССЕНВД  = ОблагаемаяБазаФССЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаФССЕНВД");
				
				ОблагаемаяБазаПФР1 = 0;
				ОблагаемаяБазаФОМС1 = 0;
				ОблагаемаяБазаФСС1 = 0;
				ОблагаемаяБазаПоТекущийМесяцТаблица	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБаза");
				ОблагаемаяБазаПоТекущийМесяцТаблица.ВыбратьСтроки();
				Пока ОблагаемаяБазаПоТекущийМесяцТаблица.ПолучитьСтроку()=1 Цикл
					// цикл по всем тарифам, которые использовались в организации
					ОблагаемаяБазаПФР1  = ОблагаемаяБазаПФР1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаПФР;
					ОблагаемаяБазаФОМС1 = ОблагаемаяБазаФОМС1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФОМС;
					ОблагаемаяБазаФСС1 = ОблагаемаяБазаФСС1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФСС;
				КонецЦикла;  
				ОблагаемаяБазаПФР  = ОблагаемаяБазаПФР  - ОблагаемаяБазаПФР1;
				ОблагаемаяБазаФОМС = ОблагаемаяБазаФОМС - ОблагаемаяБазаФОМС1;
				ОблагаемаяБазаФСС  = ОблагаемаяБазаФСС - ОблагаемаяБазаФСС1;
				
			КонецЕсли; 
			
			
			КоэфЕНВД_ПФР = ?((ОблагаемаяБазаПФРЕНВД+ОблагаемаяБазаПФР)=0,0,ОблагаемаяБазаПФРЕНВД/(ОблагаемаяБазаПФРЕНВД+ОблагаемаяБазаПФР));
			КоэфЕНВД_ФОМС = ?((ОблагаемаяБазаФОМСЕНВД+ОблагаемаяБазаФОМС)=0,0,ОблагаемаяБазаФОМСЕНВД/(ОблагаемаяБазаФОМСЕНВД+ОблагаемаяБазаФОМС));
			КоэфЕНВД_ФСС = ?((ОблагаемаяБазаФССЕНВД+ОблагаемаяБазаФСС)=0,0,ОблагаемаяБазаФССЕНВД/(ОблагаемаяБазаФССЕНВД+ОблагаемаяБазаФСС));
			
			ИсчисленоПФРНак = ИсчисленоПФРНак + ИсчисленоПФРНакЕНВД; 
			ИсчисленоПФРНакЕНВД = Окр(ИсчисленоПФРНак*КоэфЕНВД_ПФР,2);
			ИсчисленоПФРНак = ИсчисленоПФРНак - ИсчисленоПФРНакЕНВД;
			
			ИсчисленоПФРСтрах = ИсчисленоПФРСтрах + ИсчисленоПФРСтрахЕНВД; 
			ИсчисленоПФРСтрахЕНВД = Окр(ИсчисленоПФРСтрах*КоэфЕНВД_ПФР,2);
			ИсчисленоПФРСтрах = ИсчисленоПФРСтрах - ИсчисленоПФРСтрахЕНВД;
			
			ИсчисленоТФОМС = ИсчисленоТФОМС + ИсчисленоТФОМСЕНВД; 
			ИсчисленоТФОМСЕНВД = Окр(ИсчисленоТФОМС*КоэфЕНВД_ФОМС,2);
			ИсчисленоТФОМС = ИсчисленоТФОМС - ИсчисленоТФОМСЕНВД;
			
			ИсчисленоФФОМС = ИсчисленоФФОМС + ИсчисленоФФОМСЕНВД; 
			ИсчисленоФФОМСЕНВД = Окр(ИсчисленоФФОМС*КоэфЕНВД_ФОМС,2);
			ИсчисленоФФОМС = ИсчисленоФФОМС - ИсчисленоФФОМСЕНВД;
			
			ИсчисленоФСС = ИсчисленоФСС + ИсчисленоФССЕНВД; 
			ИсчисленоФССЕНВД = Окр(ИсчисленоФСС*КоэфЕНВД_ФСС,2);
			ИсчисленоФСС = ИсчисленоФСС - ИсчисленоФССЕНВД;
			
			Если Сч&gt;1 Тогда 
				
				ИсчисленоПФРНак = ИсчисленоПФРНак + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНак");
				ИсчисленоПФРНакЕНВД = ИсчисленоПФРНакЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНакЕНВД");
				ИсчисленоПФРСтрах = ИсчисленоПФРСтрах + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрах");
				ИсчисленоПФРСтрахЕНВД = ИсчисленоПФРСтрахЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрахЕНВД");
				ИсчисленоТФОМС = ИсчисленоТФОМС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМС");
				ИсчисленоТФОМСЕНВД = ИсчисленоТФОМСЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМСЕНВД");
				ИсчисленоФФОМС = ИсчисленоФФОМС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМС");
				ИсчисленоФФОМСЕНВД = ИсчисленоФФОМСЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМСЕНВД");
				ИсчисленоФСС = ИсчисленоФСС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФСС");
				ИсчисленоФССЕНВД = ИсчисленоФССЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФССЕНВД");
				
			КонецЕсли;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНак",ИсчисленоПФРНак);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНакЕНВД",ИсчисленоПФРНакЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрах",ИсчисленоПФРСтрах);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрахЕНВД",ИсчисленоПФРСтрахЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМС",ИсчисленоТФОМС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМСЕНВД",ИсчисленоТФОМСЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМС",ИсчисленоФФОМС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМСЕНВД",ИсчисленоФФОМСЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФСС",ИсчисленоФСС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФССЕНВД",ИсчисленоФССЕНВД);
			
		КонецЕсли;
		
	КонецЦикла; // цикл по месяцам 

	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Сортировать("Физлицо, Период");
	
	ВремТаблицаЕСННачисления.Сортировать("Сотрудник, ПериодРегистрации");
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Свернуть("Период,Физлицо,ВидДохода,ОблагаетсяЕНВД,ВидРасчета,ДокументОснование,ОблагаетсяПоДополнительномуТарифу,ЯвляетсяДоходомФармацевта,ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаСтраховыеВзносыСведенияОДоходах, ТаблицаСтраховыеВзносыСведенияОДоходах);
	
	ВремТаблицаЕСННачисления.Свернуть("Сотрудник,Физлицо,ПериодРегистрации,ПериодДействия,ПериодДействияНачало,ПериодДействияКонец,КодДоходаЕСН,ВидРасчета,ОблагаетсяЕНВД,ГрафикРаботы,ВидУчетаВремени,ДокументОснование,НомерСтрокиДокумента,Сторно","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаЕСННачисления,ТаблицаЕСННачисления); 
	
КонецЦикла; // обхода сотров и физлиц

ВремТаблицаСтраховыеВзносыСведенияОДоходах = 0;
ВремТаблицаЕСННачисления = 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбходСотрудниковДляСтраховыхВзносов2012" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем БазаПФР[4];
Перем БазаПФРТекущийМесяц[4];
Перем НалоговаяБазаПФРПоПредыдущийМесяц[4];
Перем ОграниченнаяБазаПФР[4];

Перем БазаФОМС[4];
Перем БазаФОМСТекущийМесяц[4];
Перем НалоговаяБазаФОМСПоПредыдущийМесяц[4];
Перем ОграниченнаяБазаФОМС[4];

Перем БазаФСС[4]; 
Перем БазаФССТекущийМесяц[4];
Перем НалоговаяБазаФССПоПредыдущийМесяц[4];
Перем ОграниченнаяБазаФСС[4]; 

Перем БазаФСС_НС[4]; 
Перем БазаФСС_НСТекущийМесяц[4];
Перем НалоговаяБазаФСС_НСПоПредыдущийМесяц[4];

Перем БазаПФРДопТарифы[2];
Перем БазаПФРПоПредыдущийМесяцДопТарифы[2];

ТаблицаСтраховыеВзносыСведенияОДоходах	= ИсходящиеДанные;
ТаблицаЕСННачисления					= ВходящиеДанные;
ВсегоСотров								= Источник;
Сотрудники								= Приемник;
ЗапросПоВзносам							= ТипПриемника;
ЗапросПоВзносамКСправочникам			= Значение;
ДоходыВычетыНалогиСотрудников			= Выражение;
ЖрнЗарплата								= Пусто;
Год										= ВыборкаДанных;
ПервыйМесяц								= Объект;
ПоследнийМесяц							= КоллекцияОбъектов;
ИскатьВоенных							= ОбъектКоллекции;
ТаблицаРаспределенияПоШаблПроводок		= ИмяПКО;
ИскатьЕНВД								= ИмяПКОВидСубконто;
СоответствиеВРкодамДоходовСВ			= НомерПКО;
ЗапросПоДоходамКСправочникам			= НомерПКС;


// скопируем структуру таблицы
ВремТаблицаСтраховыеВзносыСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаСтраховыеВзносыСведенияОДоходах.Загрузить(ТаблицаСтраховыеВзносыСведенияОДоходах);

ВремТаблицаЕСННачисления = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаЕСННачисления.Загрузить(ТаблицаЕСННачисления);


ДатаАктуальности = Дата(Год,ПоследнийМесяц,01);
ИскатьЛетчиков = Константа.ЕстьЛетчики; 
ИскатьГосслужащих = Константа.ЕстьГосслужащие;
ИскатьМоряков = Константа.ИспользуетсяТрудЧленовЭкипажейМорскихСудов;
ИскатьФармацевтов = Константа.ИспользуетсяТрудФармацевтов;
ИскатьРаботыСДосрочнойПенсией = Константа.ИспользуютсяРаботыСДосрочнойПенсией;

Если Год &lt; 2013 Тогда
	ИскатьРаботыСДосрочнойПенсией = 0;
КонецЕсли;

ТаблицаДоляЕНВД = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаДоляЕНВД.НоваяКолонка("ДоляЕНВД","Число",25,10);


ТаблицаОсновныхТарифов = глПолучитьТаблицуОсновныхТарифов(ДатаАктуальности); 
ТаблицаОсновныхТарифов.НоваяКолонка("НеВыделятьИнвалидов","Число");
ВидТарифа = Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов; 
Если глСпрТарифСтраховыхВзносов.НайтиПоРеквизиту("ВидТарифа",ВидТарифа,1) = 0 Тогда
	ПФР = 0;
	ФСС = 0;	
	ФФОМС = 0;	
	ТФОМС = 0;
Иначе 
	ПФР = глСпрТарифСтраховыхВзносов.ПФР.Получить(ДатаАктуальности);
	ФСС = глСпрТарифСтраховыхВзносов.ФСС.Получить(ДатаАктуальности);	
	ФФОМС = глСпрТарифСтраховыхВзносов.ФФОМС.Получить(ДатаАктуальности);	
	ТФОМС = глСпрТарифСтраховыхВзносов.ТФОМС.Получить(ДатаАктуальности);	
КонецЕсли;
СуммарныйТарифИнвалида = ПФР + ФСС + ФФОМС + ТФОМС;

ТаблицаОсновныхТарифов.ВыбратьСтроки();
Пока ТаблицаОсновныхТарифов.ПолучитьСтроку()=1 Цикл
	Если ТаблицаОсновныхТарифов.СуммарныйТариф &lt; СуммарныйТарифИнвалида Тогда
		ТаблицаОсновныхТарифов.НеВыделятьИнвалидов = 1;    
	КонецЕсли;
КонецЦикла;

ПределДоходов = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода(ДатаАктуальности));

// получим размеры скидок к доходам
СпрВычетов = СоздатьОбъект("Справочник.СтраховыеВзносыСкидкиКДоходам");
СкидкаМатпомощь = 0;
РазмерСкидкаМатпомощь = 0;
Если СпрВычетов.НайтиПоКоду("Матпомощь",0) = 1 Тогда
	РазмерСкидкаМатпомощь = СпрВычетов.ГодоваяСкидка.Получить(НачГода(ДатаАктуальности));
КонецЕсли;
СкидкаМатпомощьПриРожденииРебенка = 0;

ТаблицаБазаОТ = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаБазаОТ.НоваяКолонка("БазаПФР","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФСС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФОМС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("ВидТарифа");  

СпрШаблонов = СоздатьОбъект("Справочник.ШаблоныПроводок");
СпрШаблонов.НайтиПоНаименованию("Не отражать в бухгалтерском учете");
НеРаспределять = СпрШаблонов.ТекущийЭлемент();

// перебираем сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаЕСННачисления.УдалитьСтроки();
	
	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	
	КодСотра=Сотрудник.Код;
	ИмяСотра=Сотрудник.Наименование; 
	
	НалогиПоРегистрации=0;
	ЗапросПоВзносам.вНачалоВыборки();
	Если ЗапросПоВзносам.Получить(Сотрудник,,)=1 Тогда
		НалогиПоРегистрации=1;	
	КонецЕсли; 
	
	ДанныеВСправочнике=0;
	ЗапросПоВзносамКСправочникам.вНачалоВыборки();
	Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,,)=1 Тогда
		ДанныеВСправочнике=1;	
	КонецЕсли;
	
	ДанныеВСправочникеДопТариф=0;
	ЗапросПоДоходамКСправочникам.вНачалоВыборки();
	Если ЗапросПоДоходамКСправочникам.Получить(Сотрудник,,)=1 Тогда
		ДанныеВСправочникеДопТариф=1;	
	КонецЕсли;
	
	НовыйПроцент = Окр(СчСотров/ВсегоСотров*100);
	
	Если СчСотров &lt; ВсегоСотров Тогда
		глСтатусСтрока(Форма,"Обрабатываются доходы"+?(ВсегоСотров=1,""," ("+НовыйПроцент+"%)")+": "+ИмяСотра);
	КонецЕсли;
	
	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.НоваяСтрока();
		НомерСтроки = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
		ИдентификаторСотрудника = КодСотраВтаблице+глДополнитьСтроку(Сч,2);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,1,ИдентификаторСотрудника);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,"ОграниченнаяБаза",ТаблицаБазаОТ);
	КонецЦикла;
	
	Если ПустоеЗначение(""+КодСотра+ИмяСотра)=1 Тогда
		Продолжить
	КонецЕсли;
	
	// получим выборку записей по всем местам работы сотра на предприятии,
	// включая все места по внутреннему совместительству
	Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,ЖрнЗарплата.ПериодПоДате(Дата(Год,ПервыйМесяц,15)),ЖрнЗарплата.ПериодПоДате(Дата(Год,ПоследнийМесяц,15))) = 1 Тогда
	ИначеЕсли ДанныеВСправочнике + НалогиПоРегистрации = 0 Тогда
		Продолжить
	КонецЕсли;
	
	НомерШкалыВзносовПФР = глПолучитьНомерШкалыСтраховыхВзносовПФР(Сотрудник.ОсновнойЭлемент);
	СписокНеНачислятьПФРНак = СоздатьОбъект("СписокЗначений");
	СписокСтатусИГ = СоздатьОбъект("СписокЗначений");
	СписокВидыРаботСДосрочнойПенсией = СоздатьОбъект("СписокЗначений");
	Для Сч=1 По 12 Цикл
		СписокНеНачислятьПФРНак.ДобавитьЗначение(0);
		СписокСтатусИГ.ДобавитьЗначение("");
		СписокВидыРаботСДосрочнойПенсией.ДобавитьЗначение(ПустоеЗначение(Перечисление.ВидыРаботСДосрочнойПенсией));
	КонецЦикла;
	
	Военнослужащий			= "000000000000";
	Прокурор				= "000000000000";
	Летчик					= "000000000000";
	Моряк					= "000000000000";
	Фармацевт				= "000000000000";
	ВзиматьВзносыПФР		= "111111111111";
	ВзиматьВзносыФОМСиФСС	= "111111111111"; 
	Инвалид					= "000000000000";    // это для определения тарифа при расчете страховых взносов
	ИнвалидТаб				= "000000000000"; //это для записи в таблицу информации о том, что сотрудник - инвалид 
	РаботникСДосрочнойПенсией  = "000000000000";
	
	Для Сч = ПервыйМесяц По ПоследнийМесяц Цикл
		
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15)); 
		
		ВидЗастрахованногоЛица = Сотрудник.ВидЗастрахованногоЛица.Получить(ДатаМесяца);
		Если ВидЗастрахованногоЛица = Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцы Тогда
		    
			ВзиматьВзносыФОМСиФСС = ?(Сч=1,"",Лев(ВзиматьВзносыФОМСиФСС,Сч-1))+"0"+?(Сч=12,"",Прав(ВзиматьВзносыФОМСиФСС,12-Сч));
			ДолгосрочныйДоговор = Сотрудник.ДолгосрочныйДоговорСИностранцем.Получить(ДатаМесяца);
			Если ДолгосрочныйДоговор=0 Тогда
				ВзиматьВзносыПФР = ?(Сч=1,"",Лев(ВзиматьВзносыПФР,Сч-1))+"0"+?(Сч=12,"",Прав(ВзиматьВзносыПФР,12-Сч)); 
			Иначе
				СписокНеНачислятьПФРНак.УстановитьЗначение(Сч,1);
			КонецЕсли;  
			СписокСтатусИГ.УстановитьЗначение(Сч,"ВП");
			
		ИначеЕсли ВидЗастрахованногоЛица = Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПроживающиеИностранцы Тогда	
			СписокНеНачислятьПФРНак.УстановитьЗначение(Сч,1); 
			СписокСтатусИГ.УстановитьЗначение(Сч,"ВЖ");
		КонецЕсли;  
		
		Если ИскатьЛетчиков = 1 Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьВоенных = 1 Тогда
			Если глВоеннослужащий(Сотрудник, ДатаМесяца) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
			Если глВоеннослужащий(Сотрудник, НачМесяца(ДатаМесяца)) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
		КонецЕсли;
		
		Если (ИскатьВоенных = 1) или (ИскатьГосслужащих=1) Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;				
			
		КонецЕсли;
		
		Если ИскатьФармацевтов = 1 Тогда
		
			Если Сотрудник.Должность.Получить(ДатаМесяца).ЯвляетсяФармацевтическойДолжностью &gt; 0 Тогда
				Фармацевт	   = ?(Сч=1,"",Лев(Фармацевт,Сч-1))+"1"+?(Сч=12,"",Прав(Фармацевт,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ЯвляетсяФармацевтическойДолжностью &gt; 0 Тогда
				Фармацевт	   = ?(Сч=1,"",Лев(Фармацевт,Сч-1))+"1"+?(Сч=12,"",Прав(Фармацевт,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьМоряков = 1 Тогда 
		
			Если Сотрудник.Подразделение.Получить(ДатаМесяца).СоответствуетСудамПодФлагомРФ &gt; 0 Тогда
				Моряк	   = ?(Сч=1,"",Лев(Моряк,Сч-1))+"1"+?(Сч=12,"",Прав(Моряк,12-Сч));
			КонецЕсли;
			Если Сотрудник.Подразделение.Получить(НачМесяца(ДатаМесяца)).СоответствуетСудамПодФлагомРФ &gt; 0 Тогда
				Моряк	   = ?(Сч=1,"",Лев(Моряк,Сч-1))+"1"+?(Сч=12,"",Прав(Моряк,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьРаботыСДосрочнойПенсией = 1 Тогда 
			
			ВидыРаботСДосрочнойПенсией = Сотрудник.Должность.Получить(ДатаМесяца).ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией;
			Если (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы) или (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)  Тогда
				РаботникСДосрочнойПенсией = ?(Сч=1,"",Лев(РаботникСДосрочнойПенсией,Сч-1))+"1"+?(Сч=12,"",Прав(РаботникСДосрочнойПенсией,12-Сч));
				СписокВидыРаботСДосрочнойПенсией.УстановитьЗначение(Сч, ВидыРаботСДосрочнойПенсией);
			КонецЕсли; 
			
			ВидыРаботСДосрочнойПенсией = Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией;
			Если (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы) или (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)  Тогда
				РаботникСДосрочнойПенсией = ?(Сч=1,"",Лев(РаботникСДосрочнойПенсией,Сч-1))+"1"+?(Сч=12,"",Прав(РаботникСДосрочнойПенсией,12-Сч));
				СписокВидыРаботСДосрочнойПенсией.УстановитьЗначение(Сч, ВидыРаботСДосрочнойПенсией);
			КонецЕсли;  
			
		КонецЕсли;
		
		ЭтоМоряк     = Число(Сред(Моряк,Сч,1));
		ЭтоФармацевт = Число(Сред(Фармацевт,Сч,1));
		ЛьготныйТариф = ?((ЭтоМоряк =1) или (ЭтоФармацевт = 1),1,0);
		
		ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(Сч);
		
		КатегорияПФР = Сотрудник.КатегорияПлательщикаПФР.Получить(ДатаМесяца).Идентификатор();
		Если ПустоеЗначение(КатегорияПФР) = 0 Тогда
			Если Найти(",НРИВ,СХИВ,ФХИВ,ИПИВ,АДИВ,",","+КатегорияПФР+",") &gt; 0 Тогда
				
				Если (ЛьготныйТариф = 0) и (ТаблицаОсновныхТарифов.НеВыделятьИнвалидов = 0) Тогда
					Инвалид = ?(Сч=1,"",Лев(Инвалид,Сч-1))+"1"+?(Сч=12,"",Прав(Инвалид,12-Сч));    
				КонецЕсли;
				ИнвалидТаб = ?(Сч=1,"",Лев(ИнвалидТаб,Сч-1))+"1"+?(Сч=12,"",Прав(ИнвалидТаб,12-Сч));
				
			КонецЕсли;
		КонецЕсли;    
		
	КонецЦикла; 
	
	
	ТаблицаДоляЕНВД.УдалитьСтроки();
	ПустойШаблон = ПолучитьПустоеЗначение("Справочник.ШаблоныПроводок");
	
	Для СчМес = 1 По 12 Цикл
		
		ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(СчМес);
		ТаблицаДоляЕНВД.НоваяСтрока();
		Если ИскатьЕНВД = 1 Тогда
			ДатаУчета = КонМесяца(Дата(Год,СчМес,15)); 
			ФормаТруда = Сотрудник.ФормаТруда.Получить(ДатаУчета);
			Если ПустоеЗначение(ФормаТруда)=0 Тогда
				
				Если (ФормаТруда=Перечисление.ФормыТруда.ТабельПодневнОклад)
				или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасОклад)
				или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасТариф) Тогда
					ОсновнойВР = ВидРасчета.ОплатаПоТабелю;
				Иначе
					ОсновнойВР = ?(глФормаТрудаПоТарифуОкладу(ФормаТруда)="Оклад",ВидРасчета.ОплатаПоОкладу,ВидРасчета.ОплатаПоТарифу);
				КонецЕсли;
				
			Иначе	
				ОсновнойВР = ВидРасчета.ОплатаПоОкладу;
			КонецЕсли;
			
			ШаблонУчета = УточнитьУчетПоСотруднику(ПустойШаблон,Сотрудник,ОсновнойВР,1,ДатаУчета,ДатаУчета);
			Если ТипЗначения(ШаблонУчета) = 11  Тогда
				Если ШаблонУчета.ПодпадаетПодЕНВД = 1 Тогда
					ТаблицаДоляЕНВД.ДоляЕНВД = 1;
				КонецЕсли;
			ИначеЕсли ТипЗначения(ШаблонУчета) = 100 Тогда
				
				ДоляЕНВД = 0;
				Для Сч = 1 По ШаблонУчета.КоличествоСтрок() Цикл
					ШаблонУчета.ПолучитьСтрокуПоНомеру(Сч);
					Если ШаблонУчета.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
						ДоляЕНВД = ДоляЕНВД + ШаблонУчета.Сумма;
					КонецЕсли;
				КонецЦикла;
				ТаблицаДоляЕНВД.ДоляЕНВД = ДоляЕНВД;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	БылМесяцДохода = 0;
	Пока ЖрнЗарплата.ПолучитьЗапись() = 1 Цикл
		
		ВР = ЖрнЗарплата.ВидРасч;
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания) = 1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ВозвратыНДФЛ) = 1) Тогда
			Продолжить
		КонецЕсли;
		
		СуммаРез = ЖрнЗарплата.Результат; 
		Если СуммаРез = 0 Тогда
			Продолжить
		КонецЕсли; 
		Скидка = 0;
		
		Объект					= ЖрнЗарплата.Объект; //это сотрудник
		ДокументОснование		= ЖрнЗарплата.Документ;
		НомерСтрокиДокумента	= ЖрнЗарплата.НомерСтрокиДокумента;
		
		ДатаДохода				= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
		ПериодРегистрации		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
		ПериодДействия			= НачМесяца(ЖрнЗарплата.ДатаНачала);
		ПериодДействияНачало	= ЖрнЗарплата.ДатаНачала;
		ПериодДействияКонец		= ЖрнЗарплата.ДатаОкончания;
		МесяцДохода				= ДатаМесяц(ДатаДохода);
		
		Если БылМесяцДохода &lt;&gt; МесяцДохода Тогда
			БылМесяцДохода = МесяцДохода
		КонецЕсли;
		
		ЭтоИнвалид 		  = Число(Сред(Инвалид,МесяцДохода,1));
		ЭтоЛетчик 		  = Число(Сред(Летчик,МесяцДохода,1));
		ЭтоПрокурор 	  = Число(Сред(Прокурор,МесяцДохода,1));
		ЭтоМоряк      = Число(Сред(Моряк,МесяцДохода,1));
		ЭтоФармацевт  = Число(Сред(Фармацевт,МесяцДохода,1));
		ЛьготныйТариф = ?((ЭтоМоряк =1) или (ЭтоФармацевт = 1),1,0);
		ЭтоРаботникСДосрочнойПенсией = Число(Сред(РаботникСДосрочнойПенсией,МесяцДохода,1));
		
		Если ЭтоПрокурор = 1 Тогда
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,0,СоответствиеВРкодамДоходовСВ));
			Если ПустаяСтрока(КодДохода) = 1 Тогда 
				КодДохода="СодержаниеПрокуроров";
			КонецЕсли;
		Иначе
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,Число(Сред(Военнослужащий,МесяцДохода,1)), СоответствиеВРкодамДоходовСВ));
		КонецЕсли; 
		
		СуммаОсновнойТариф = 0; // сумма по основному тарифу, не инвалид
		СуммаИнвалид = 0;       // сумма инвалида
		СуммаЕНВД = 0;          // сумма по виду деятельности ЕНВД, не инвалид
		НомерКолонки = 0;       // номер колонки дохода для основного тарифа
		НомерКолонкиПрокурор = 0;       // номер колонки дохода для основного тарифа
		
		СкидкаОсновнойТариф = 0; // сумма скидки по основному тарифу, не инвалид
		СкидкаИнвалид = 0;       // сумма скидки инвалида
		СкидкаЕНВД = 0;
		
		РазложитьСуммыПоТарифам = 1;
		КодДоходаСтраховыеВзносы = "";
		Если ПустаяСтрока(КодДохода) = 1 Тогда
			// целиком облагаемые 
			КодДоходаСтраховыеВзносы	= "ОблагаетсяЦеликом";
			
		ИначеЕсли КодДохода="-1"  Тогда 
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				Продолжить;
			Иначе
				КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
				НомерКолонки = 4;
			КонецЕсли;
			
		ИначеЕсли (КодДохода="Не является объектом по ЕСН") Тогда
			Продолжить
			
		ИначеЕсли (КодДохода="НеЯвляетсяОбъектом") Тогда
			Продолжить	
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 4;
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликомЕНВД" Тогда 
			КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
			НомерКолонки = 4;
			РазложитьСуммыПоТарифам = 0; 
			Если ИскатьЕНВД = 1 Тогда
				СуммаЕНВД = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
		
		ИначеЕсли КодДохода="НеЯвляетсяОбъектом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 3; 
			
		ИначеЕсли КодДохода="ЕдиновременныеПособияФСС" Тогда
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			// единовременные пособия за счет ФСС
			НомерКолонки = 5;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;      
			Иначе	
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;	
			
		ИначеЕсли КодДохода="РасходыЗаСчетФСС" Тогда	
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения 
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		ИначеЕсли КодДохода="ВозмещаемыеФСС" Тогда
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				СуммаЕНВД = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли КодДохода="ПособиеДоПолутораЛет" Тогда
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		ИначеЕсли КодДохода="Довольствие" Тогда
			КодДоходаСтраховыеВзносы	= "ДенежноеДовольствиеВоеннослужащих";
			НомерКолонки = 6;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли; 
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли КодДохода="СодержаниеПрокуроров" Тогда
			КодДоходаСтраховыеВзносы	= "ДенежноеСодержаниеПрокуроров";
			НомерКолонки = 7;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли; 
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли (КодДохода="МатПомощь")  Тогда
			КодДоходаСтраховыеВзносы	= "Матпомощь";
			НомерКолонки = 10;
			
		ИначеЕсли (КодДохода="МатпомощьПриРожденииРебенка")  Тогда  
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 8;
			НомерКолонкиПрокурор = 7;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Скидка = Док.СуммаВычета;
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = -1*Скидка;
			КонецЕсли;  
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД,2);
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли (КодДохода="ДоговорыПодряда")  Тогда
			КодДоходаСтраховыеВзносы	= "ДоговорыГПХ";
			НомерКолонки = 12;
			
		ИначеЕсли (КодДохода = "Авторские") или (КодДохода = "Лицензионные") или (КодДохода = "ОтчуждениеАвторскихПрав") Тогда
			// все авторские договора
			КодДоходаСтраховыеВзносы	= глПолучитьВидДоходаПоАвторскомуДоговору(ДокументОснование);
			Если ПустоеЗначение(КодДоходаСтраховыеВзносы) = 1 Тогда
				КодДоходаСтраховыеВзносы = "ОблагаетсяЦеликом";
			КонецЕсли;
			
			НомерКолонки = 13;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Если Док.Вид() = "НачисленияУдержанияСписком" Тогда
				Док.ПолучитьСтрокуПоНомеру(ЖрнЗарплата.НомерСтрокиДокумента);
			КонецЕсли;
			Расходы = глПолучитьРазмерСкидкиПоАвторскомуДоговору(Док, СуммаРез, ЭтоСторно, ДатаДохода);
			
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = Макс(Расходы,СуммаРез);
			Иначе 
				Скидка = Макс(Мин(Расходы,СуммаРез),0);
			КонецЕсли;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД/СуммаРез,2);  
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			

		КонецЕсли;	
		
		// данные для доп тарифов с 2013 года
		СуммаДопТариф  = СуммаРез;
		СкидкаДопТариф = Скидка;
		
		Если РазложитьСуммыПоТарифам = 1 Тогда
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				
				Если (КодДохода = "РасходыЗаСчетФСС") или (КодДохода = "ВозмещаемыеФСС") или (КодДохода = "ПособиеДоПолутораЛет") Тогда
					
					СуммаЕНВД = ОКР(СуммаРез * ДоляЕНВД,2);
					СуммаОсновнойТариф = СуммаРез - СуммаЕНВД; 
					
				ИначеЕсли (КодДохода="ЕдиновременныеПособияФСС") Тогда
					
					Если ДоляЕНВД = 1 Тогда
						СуммаЕНВД = СуммаРез;
						СуммаОсновнойТариф = 0;    
					КонецЕсли;	
				Иначе 
					
					//надо опредлить долю ЕНВД
					глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
					СуммаЕНВД = 0; 
					Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
						Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
							СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
						КонецЕсли;
					КонецЦикла;
					СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
					
				КонецЕсли;
				
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		КонецЕсли;
		
		// занесем доходы в таблицу по сотруднику  
		
		Если ЭтоРаботникСДосрочнойПенсией =1 Тогда
			// зарегистрируем доходы для доп. тарифов 
			
			СмещениеКолонокДопТариф = 0;
			Если СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода) = Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы Тогда
				СмещениеКолонокДопТариф = 3;    
			КонецЕсли;
			
			Если (НомерКолонки = 0) или (НомерКолонки = 4) или (НомерКолонки = 5) или (НомерКолонки = 8) или (НомерКолонки = 10)  Тогда
				// начислено всего 
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,МесяцДохода,54+СмещениеКолонокДопТариф,СуммаДопТариф);
				
				Если (НомерКолонки = 4) или (НомерКолонки = 5) Тогда
					// необлагаемые суммы
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,МесяцДохода,55+СмещениеКолонокДопТариф,СуммаДопТариф);
					
				КонецЕсли;
				
				Если СкидкаДопТариф &lt;&gt; 0 Тогда
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,МесяцДохода,56+СмещениеКолонокДопТариф,СкидкаДопТариф);
				КонецЕсли;
				
			КонецЕсли;            
			
		КонецЕсли;
		
		// занесем доходы в таблицу по сотруднику 
		
		Если СуммаОсновнойТариф &lt;&gt; 0 Тогда 
			
			СмещениеКолонкиПоТарифу = ?(ЛьготныйТариф=0,0,39); // учтем моряков и фармацевтов
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+СмещениеКолонкиПоТарифу, СуммаОсновнойТариф);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаОсновнойТариф, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование,
			ЭтоФармацевт,
			ЭтоМоряк,
			СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаОсновнойТариф,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+СмещениеКолонкиПоТарифу, СуммаОсновнойТариф);
				
				Если СкидкаОсновнойТариф &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+СмещениеКолонкиПоТарифу+1, СкидкаОсновнойТариф);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					ЭтоФармацевт,
					ЭтоМоряк,
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли; 
				
			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаОсновнойТариф - СкидкаОсновнойТариф;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор, СодержаниеПрокурора);
			КонецЕсли;
			
		КонецЕсли;  
		
		Если СуммаИнвалид &lt;&gt; 0 Тогда 
				
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+13, СуммаИнвалид);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаИнвалид, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование,
			0,
			0,
			СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаИнвалид,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда 
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+13, СуммаИнвалид);
				
				Если СкидкаИнвалид &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+13+1, СкидкаИнвалид);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					0,
					0,
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;

			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаИнвалид - СкидкаИнвалид;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор+13, СодержаниеПрокурора);
			КонецЕсли;

		КонецЕсли; 
		
		Если СуммаЕНВД &lt;&gt; 0 Тогда
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+26, СуммаЕНВД);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаЕНВД, 
			0,
			КодДоходаСтраховыеВзносы,
			1,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование,
			0,
			0,
			СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаЕНВД,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			1,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
		
			Если НомерКолонки &gt; 0 Тогда
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26, СуммаЕНВД);
				
				Если СкидкаЕНВД &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26+1, СкидкаЕНВД);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					1,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					0,
					0,
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					ВР,
					1,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // обхода записей ж.р. 
	
	// добавим доходы и налоги из справочника для доп. тарифов
	Если ДанныеВСправочникеДопТариф = 1 Тогда 
		
		// получим данные из справочников из раздела не ЕНВД
		// 0 - ПодземныеИВредныеРаботы, 1 - ТяжелыеИПрочиеРаботы 
		
		Для ВидТарифа = 0 По 1 Цикл
			
			ЗапросПоДоходамКСправочникам.вНачалоВыборки();
			
			Если ЗапросПоДоходамКСправочникам.Получить(Сотрудник,ВидТарифа,)=0 Тогда
				Продолжить;	
			КонецЕсли;
			
			СмещениеКолонок = 0;
			Если ВидТарифа = 1 Тогда
				СмещениеКолонок = 3;
			КонецЕсли;
			
			Пока ЗапросПоДоходамКСправочникам.Группировка("ГодоМесяц")=1 Цикл
				
				МесяцДохода = Число(ЗапросПоДоходамКСправочникам.ГодоМесяц) % 100; 
				
				НачисленоВсего 	    = ЗапросПоДоходамКСправочникам.НачисленоВсего;
				НеОблагаетсяЦеликом = ЗапросПоДоходамКСправочникам.НеОблагаетсяЦеликом;
				Скидка    			= ЗапросПоДоходамКСправочникам.Скидка;
				
				глСообщениеТрассировки(	глСообщенияТрассировки,
				"Начислено всего: _П01", 0, 1, НачисленоВсего, "Ч15.2");
				
				
				Для Сч = МесяцДохода По 12 Цикл
					НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника+Сч;
					
					//прибавим из справочников:
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,54+СмещениеКолонок,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,54+СмещениеКолонок)
					+НачисленоВсего);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,55+СмещениеКолонок,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,55+СмещениеКолонок)
					+НеОблагаетсяЦеликом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,56+СмещениеКолонок,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,56+СмещениеКолонок)
					+Скидка);
					
				КонецЦикла; 
				
				глСообщениеТрассировки(глСообщенияТрассировки, "", 0, -2);
			КонецЦикла;  // обхода по периодам действия/регистрации 
			
		КонецЦикла;
		
	КонецЕсли;
	
	// добавим доходы и налоги из справочника
	Если  ДанныеВСправочнике = 1 Тогда
		
		// получим данные из справочников последовательно для двух разделов
		// 0 - НеЕНВД, 1 - ЕНВД 
		
		ВР = ПолучитьПустоеЗначение("ВидРасчета");
		
		Для ВидТарифа = 0 По 2 Цикл 
			
			ЗапросПоВзносамКСправочникам.вНачалоВыборки();
			
			Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,ВидТарифа,)=0 Тогда
				Продолжить;	
			КонецЕсли;
			
			
			Пока ЗапросПоВзносамкСправочникам.Группировка("ГодоМесяц")=1 Цикл
				
				МесяцДохода = Число(ЗапросПоВзносамкСправочникам.ГодоМесяц) % 100;
				
				ЭтоИнвалид				= Число(Сред(Инвалид,МесяцДохода,1));
				ЭтоМоряк    		    = Число(Сред(Моряк,МесяцДохода,1));
				ЭтоФармацевт  			= Число(Сред(Фармацевт,МесяцДохода,1));
				
				пЕНВД = 0;
			
				Если ЭтоИнвалид = 1 Тогда
					НомерНачальнойКолонки = 13;
					ИмяРаздела = "Инвалид";
				ИначеЕсли (ИскатьЕНВД*ВидТарифа = 1) Тогда
					НомерНачальнойКолонки = 26;
					ИмяРаздела = "ЕНВД";	
					пЕНВД = 1;
				ИначеЕсли ВидТарифа = 2 Тогда	
					НомерНачальнойКолонки = 39;
					ИмяРаздела = "ЛТ";
				Иначе // основной тариф
					НомерНачальнойКолонки = 0;
					ИмяРаздела = "";
				КонецЕсли;
				
				// по основному тарифу
				ИсчисленоПФРНак   = ЗапросПоВзносамкСправочникам.НачисленоПФРНак;
				ИсчисленоПФРСтрах = ЗапросПоВзносамкСправочникам.НачисленоПФРСтрах;
				ИсчисленоФСС      = ЗапросПоВзносамкСправочникам.НачисленоФСС;
				ИсчисленоФФОМС    = ЗапросПоВзносамкСправочникам.НачисленоФФОМС;
				ИсчисленоТФОМС    = ЗапросПоВзносамкСправочникам.НачисленоТФОМС;
				ИсчисленоДопТариф = ЗапросПоВзносамкСправочникам.НачисленоДопТариф;
				
				НачисленоВсего						= ЗапросПоВзносамкСправочникам.НачисленоВсего;
				НеЯвляетсяОбъектом					= ЗапросПоВзносамкСправочникам.НеЯвляетсяОбъектом;
				НеОблагаетсяЦеликом					= ЗапросПоВзносамкСправочникам.НеОблагаетсяЦеликом;
				РасходыЗаСчетФСС					= ЗапросПоВзносамкСправочникам.РасходыЗаСчетФСС;
				ДенежноеДовольствиеВоеннослужащих	= ЗапросПоВзносамкСправочникам.ДенежноеДовольствиеВоеннослужащих;
				ДенежноеСодержаниеПрокуроров		= ЗапросПоВзносамкСправочникам.ДенежноеСодержаниеПрокуроров;
				Матпомощь							= ЗапросПоВзносамкСправочникам.Матпомощь;
				СкидкаМатпомощь						= ЗапросПоВзносамкСправочникам.СкидкаМатпомощь;
				МатпомощьПриРожденииРебенка			= ЗапросПоВзносамкСправочникам.МатпомощьПриРожденииРебенка;
				СкидкаМатпомощьПриРожденииРебенка	= ЗапросПоВзносамкСправочникам.СкидкаМатпомощьПриРожденииРебенка;
				ДоговорыПодряда						= ЗапросПоВзносамкСправочникам.ДоговорыПодряда;
				Авторские							= ЗапросПоВзносамкСправочникам.Авторские;
				СкидкаАвторские						= ЗапросПоВзносамкСправочникам.СкидкаАвторские;
			
				ОблагаетсяВзносами = НачисленоВсего - НеЯвляетсяОбъектом - НеОблагаетсяЦеликом - РасходыЗаСчетФСС 
						- ДенежноеДовольствиеВоеннослужащих - ДенежноеСодержаниеПрокуроров - Матпомощь
						- МатпомощьПриРожденииРебенка - ДоговорыПодряда -  Авторские;  
						
				Если ОблагаетсяВзносами &lt;&gt;0 Тогда 
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ОблагаетсяВзносами, 
					0,
					"ОблагаетсяЦеликом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				    
				КонецЕсли;
			
				Если ДоговорыПодряда &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДоговорыПодряда, 
					0,
					"ДоговорыГПХ",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0));
				КонецЕсли;						
				Если Авторские &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Авторские, 
					СкидкаАвторские,
					"АвторскиеЛитературныеПроизведения",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;						
				Если ДенежноеДовольствиеВоеннослужащих &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеДовольствиеВоеннослужащих, 
					0,
					"ДенежноеДовольствиеВоеннослужащих",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0));
				КонецЕсли;						
				Если ДенежноеСодержаниеПрокуроров &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеСодержаниеПрокуроров, 
					0,
					"ДенежноеСодержаниеПрокуроров",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0));
				КонецЕсли;						
				Если Матпомощь &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Матпомощь, 
					0,
					"Матпомощь",
					пЕНВД,
					ВидРасчета.МатПомощь,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если МатпомощьПриРожденииРебенка &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					МатпомощьПриРожденииРебенка, 
					СкидкаМатпомощьПриРожденииРебенка,
					"МатпомощьПриРожденииРебенка",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если НеЯвляетсяОбъектом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеЯвляетсяОбъектом, 
					0,
					"НеЯвляетсяОбъектом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если НеОблагаетсяЦеликом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеОблагаетсяЦеликом, 
					0,
					"НеОблагаетсяЦеликом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если РасходыЗаСчетФСС &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					РасходыЗаСчетФСС, 
					0,
					"ПособияЗаСчетФСС",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				
				Для Сч = МесяцДохода По 12 Цикл
					НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника+Сч;
					
					
					//прибавим из справочников:
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки)
					+НачисленоВсего);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки)
					+НеЯвляетсяОбъектом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки)
					+НеОблагаетсяЦеликом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки)
					+РасходыЗаСчетФСС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки)
					+ДенежноеДовольствиеВоеннослужащих);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки)
					+ДенежноеСодержаниеПрокуроров);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки)
					+Матпомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки)
					+СкидкаМатПомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки)
					+МатпомощьПриРожденииРебенка); 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки)
					+СкидкаМатПомощьПриРожденииРебенка);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки)
					+ДоговорыПодряда);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки)
					+Авторские);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки)
					+СкидкаАвторские);
					
					
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРНак"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРНак"+ИмяРаздела)
					+ИсчисленоПФРНак);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРСтрах"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоПФРСтрах"+ИмяРаздела)
					+ИсчисленоПФРСтрах); 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФСС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФСС"+ИмяРаздела)
					+ИсчисленоФСС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФФОМС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоФФОМС"+ИмяРаздела)
					+ИсчисленоФФОМС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоТФОМС"+ИмяРаздела,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоТФОМС"+ИмяРаздела)
					+ИсчисленоТФОМС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоДопТариф",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,"ИсчисленоДопТариф")
					+ИсчисленоДопТариф);				
					
					
				КонецЦикла; 
				
			КонецЦикла;  // обхода по периодам действия/регистрации 
		КонецЦикла; // обход по видам тарифа
		
	КонецЕсли;
	
	// здесь собирается начисленные ранее страховые взносы - по периоду регистрации
	Если НалогиПоРегистрации = 1 Тогда 
		Пока ЗапросПоВзносам.Группировка("Регистрация")=1 Цикл
			Регистрация = ЗапросПоВзносам.Регистрация;
			МесяцДохода=ДатаМесяц(Регистрация); 
			ЭтоИнвалид = Число(Сред(Инвалид,МесяцДохода,1)); 
			ЭтоМоряк     = Число(Сред(Моряк,МесяцДохода,1));
			ЭтоФармацевт = Число(Сред(Фармацевт,МесяцДохода,1));
			ЛьготныйТариф = ?((ЭтоМоряк =1) или (ЭтоФармацевт = 1),1,0);
			ИмяРаздела = ?(ЭтоИнвалид = 1, "Инвалид", ?(ЛьготныйТариф=1,"ЛТ",""));
			Пока ЗапросПоВзносам.Группировка("ВР")=1 Цикл
				ВР = ЗапросПоВзносам.ВР;
				СуммаРез=ЗапросПоВзносам.РезультатВР;
				ИмяКолонки="";
				Если (ВР=ВидРасчета.ФФОМСс2010)  Тогда
					ИмяКолонки = "ИсчисленоФФОМС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ТФОМСс2010)  Тогда
					ИмяКолонки = "ИсчисленоТФОМС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ФССс2010)  Тогда
					ИмяКолонки = "ИсчисленоФСС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРСтраховаяЧастьс2010)  Тогда
					ИмяКолонки = "ИсчисленоПФРСтрах" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРНакопительнаяЧастьс2010)  Тогда
					ИмяКолонки = "ИсчисленоПФРНак" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРПоДополнительномуТарифу)  Тогда
					ИмяКолонки = "ИсчисленоДопТариф";	
				ИначеЕсли (ВР=ВидРасчета.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)  Тогда
					ИмяКолонки = "ИсчисленоПФРЗаЗанятыхНаПодземныхИВредныхРаботах";	
				ИначеЕсли (ВР=ВидРасчета.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)  Тогда
					ИмяКолонки = "ИсчисленоПФРЗаЗанятыхНаТяжелыхИПрочихРаботах";	
				ИначеЕсли (ВР=ВидРасчета.ФСС_НС)  Тогда
					ИмяКолонки = "ИсчисленоФСС_НС";	
				КонецЕсли;
				
				// занесем налоги в таблицу по сотруднику
				Если ИмяКолонки &lt;&gt; "" Тогда
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, ИмяКолонки, СуммаРез);
					
				КонецЕсли;
			КонецЦикла;  // обхода видов расчета
		КонецЦикла;  // обхода по месяцам
	КонецЕсли;
	       
	Для Сч = 1 По 4 Цикл 
		
		БазаПФР[Сч] = 0;             // база без дохода иностранца
		БазаПФРТекущийМесяц[Сч] = 0;
		НалоговаяБазаПФРПоПредыдущийМесяц[Сч] = 0; // вся база, включая доходы иностранца
		ОграниченнаяБазаПФР[Сч] = 0; 
		
		БазаФОМС[Сч] = 0;
		БазаФОМСТекущийМесяц[Сч] = 0;
		НалоговаяБазаФОМСПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФОМС[Сч] = 0;
		
		БазаФСС[Сч] = 0;
		БазаФССТекущийМесяц[Сч] = 0;
		НалоговаяБазаФССПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФСС[Сч] = 0;
		
		БазаФСС_НС[Сч] = 0;
		БазаФСС_НСТекущийМесяц[Сч] = 0;
		НалоговаяБазаФСС_НСПоПредыдущийМесяц[Сч] = 0;
		
	КонецЦикла; 
	
	Для Сч = 1 По 2 Цикл
		
		БазаПФРДопТарифы[Сч] = 0;
		БазаПФРПоПредыдущийМесяцДопТарифы[Сч] = 0;
		
	КонецЦикла;
	
	МатпомощьВсегоПоТекущийМесяцСкорр = 0;
	Для Сч = 1 По 12 Цикл  
		
		ЭтоПрокурор = Число(Сред(Прокурор,Сч,1));
		ЭтоМоряк     = Число(Сред(Моряк,МесяцДохода,1));
		ЭтоФармацевт = Число(Сред(Фармацевт,МесяцДохода,1));
		ЭтоИнвалид 	 = Число(Сред(ИнвалидТаб,Сч,1));
		ТарифИнвалид = Число(Сред(Инвалид,Сч,1));
		
		ЭтоРаботникСДосрочнойПенсией = Число(Сред(РаботникСДосрочнойПенсией,Сч,1));
		
		СтрокаТаблицы = НомерСтрокиСотрудника+Сч; 

		КоэфПФР = Число(Сред(ВзиматьВзносыПФР,Сч,1));
		КоэфФОМСиФСС = Число(Сред(ВзиматьВзносыФОМСиФСС,Сч,1));
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ВзиматьВзносыПФРиФСС",КоэфПФР); 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ВзиматьВзносыФОМСиФСС",КоэфФОМСиФСС);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"НомерШкалыВзносовПФР",НомерШкалыВзносовПФР); 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ТарифИнвалид",ТарифИнвалид);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"Инвалид",ЭтоИнвалид);  
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ЛьготныйТариф",?(ЭтоМоряк=1,1,?(ЭтоФармацевт=1,2,0)));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ВидРаботСДосрочнойПенсией", СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(Сч)); 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"СтатусИГ",СписокСтатусИГ.ПолучитьЗначение(Сч));
		
		// рассчитаем скидку к доходу Матпомощь
		МатпомощьПоТекущийМесяц 	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10);
		МатпомощьИнвалидПоТекущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+13);
		МатпомощьЕНВДПоТекущийМесяц	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+26); 
		МатпомощьЛТПоТекущийМесяц	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+39);
		МатпомощьВсегоПоТекущийМесяц   = МатпомощьПоТекущийМесяц + МатпомощьИнвалидПоТекущийМесяц + МатпомощьЕНВДПоТекущийМесяц + МатпомощьЛТПоТекущийМесяц;
		
		Если Сч = 1 Тогда
			
			МатпомощьПоПредыдущийМесяц 	      = 0;
			МатпомощьИнвалидПоПредыдущийМесяц = 0;
			МатпомощьЕНВДПоПредыдущийМесяц	  = 0;
			МатпомощьЛТПоПредыдущийМесяц	  = 0;
			МатпомощьВсегоПоПредыдущийМесяц   = 0;
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= 0;
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = 0;
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= 0;
			СкидкаМатПомощьЛТПоПредыдущийМесяц	    = 0;
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = 0;
			
		Иначе  
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11);
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+13);
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+26);
			СкидкаМатПомощьЛТПоПредыдущийМесяц	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+39);
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьЕНВДПоПредыдущийМесяц + СкидкаМатПомощьЛТПоПредыдущийМесяц; 

			МатпомощьПоПредыдущийМесяц 	   	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10);
			МатпомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+13);
			МатпомощьЕНВДПоПредыдущийМесяц	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+26);
			МатпомощьЛТПоПредыдущийМесяц	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+39);
			МатпомощьВсегоПоПредыдущийМесяц   = МатпомощьПоПредыдущийМесяц + МатпомощьИнвалидПоПредыдущийМесяц + МатпомощьЕНВДПоПредыдущийМесяц + МатпомощьЛТПоПредыдущийМесяц;
			
		КонецЕсли; 
		
		МатПомощьТекущийМесяц         = (МатпомощьПоТекущийМесяц - МатпомощьПоПредыдущийМесяц);
		МатПомощьИнвалидаТекущийМесяц = (МатпомощьИнвалидПоТекущийМесяц - МатпомощьИнвалидПоПредыдущийМесяц);
		МатПомощьЕНВДТекущийМесяц     = (МатпомощьЕНВДПоТекущийМесяц - МатпомощьЕНВДПоПредыдущийМесяц);
		МатПомощьЛТТекущийМесяц       = (МатпомощьЛТПоТекущийМесяц - МатпомощьЛТПоПредыдущийМесяц);
		МатпомощьВсегоТекущийМесяц 	  = МатПомощьТекущийМесяц + МатПомощьИнвалидаТекущийМесяц + МатПомощьЕНВДТекущийМесяц + МатПомощьЛТТекущийМесяц; 
		
		МатпомощьВсегоПоПредыдущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр;
		МатпомощьВсегоПоТекущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр + МатпомощьВсегоТекущийМесяц;
		
		// Скидка текущего месяца
		СкидкаМатПомощьВсегоТекущийМесяц = Мин(МатпомощьВсегоПоТекущийМесяцСкорр, РазмерСкидкаМатпомощь) - СкидкаМатПомощьВсегоПоПредыдущийМесяц;
		
		// вычислим месячную долю, которая учавствует в расчете
		// это для месяца, в котором превысили предел РазмерСкидкаМатпомощь 
		Если СкидкаМатПомощьВсегоТекущийМесяц &gt;= 0 Тогда 
			
			Если (МатпомощьВсегоТекущийМесяц = 0) или (МатпомощьВсегоПоПредыдущийМесяцСкорр &gt;= РазмерСкидкаМатпомощь)  Тогда
				// предел превышен
				КоэффициентБазы = 0;
			ИначеЕсли МатпомощьВсегоПоТекущийМесяцСкорр &lt;= РазмерСкидкаМатпомощь  Тогда
				//не достигли предела
				КоэффициентБазы = 1;
			Иначе
				КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			КонецЕсли; 
			
		Иначе // сторно скидуки
			 
			КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			
		КонецЕсли;
		
		СкидкаМатПомощьТекущийМесяц 		= МатПомощьТекущийМесяц  * КоэффициентБазы; // по основному тарифу
		СкидкаМатПомощьИнвалидаТекущийМесяц = МатПомощьИнвалидаТекущийМесяц * КоэффициентБазы; // база инвалида 
		СкидкаМатПомощьЕНВДТекущийМесяц  	= МатПомощьЕНВДТекущийМесяц * КоэффициентБазы; // база ЕНВД 
		СкидкаМатПомощьЛТТекущийМесяц    	= МатПомощьЛТТекущийМесяц * КоэффициентБазы; 
		
		
		СкидкаМатПомощьПоТекущийМесяц        = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьТекущийМесяц;
		СкидкаМатПомощьИнвалидПоТекущийМесяц = СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьИнвалидаТекущийМесяц;
		СкидкаМатПомощьЕНВДПоТекущийМесяц    = СкидкаМатПомощьЕНВДПоПредыдущийМесяц + СкидкаМатПомощьЕНВДТекущийМесяц;
		СкидкаМатПомощьЛТПоТекущийМесяц      = СкидкаМатПомощьЛТПоПредыдущийМесяц + СкидкаМатПомощьЛТТекущийМесяц;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11,СкидкаМатПомощьПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+13,СкидкаМатПомощьИнвалидПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+26,СкидкаМатПомощьЕНВДПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+39,СкидкаМатПомощьЛТПоТекущийМесяц);
		
		Если ЭтоПрокурор=1 Тогда 
			
			ДоляМатпомощьПрокурор = МатпомощьПоТекущийМесяц-СкидкаМатПомощьПоТекущийМесяц;
			ДоляМатпомощьПрокурорИнвалид = МатпомощьИнвалидПоТекущийМесяц-СкидкаМатПомощьИнвалидПоТекущийМесяц;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7)+ДоляМатпомощьПрокурор);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7+13,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7+13)+ДоляМатпомощьПрокурорИнвалид);
			
		КонецЕсли;
	
		Если СкидкаМатПомощьТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			0,
			0);
		КонецЕсли; 
		
		Если СкидкаМатПомощьИнвалидаТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьИнвалидаТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			0,
			0);
		КонецЕсли;  
		
		Если СкидкаМатПомощьЕНВДТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьЕНВДТекущийМесяц,
			"Матпомощь",
			1,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			0,
			0);
		КонецЕсли;
		
		Если СкидкаМатПомощьЛТТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьЕНВДТекущийМесяц,
			"Матпомощь",
			1,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			ЭтоФармацевт,
			ЭтоМоряк);
		КонецЕсли;
		
		Если ИскатьЕНВД = 1 Тогда
			
			ТаблицаБазаОсновнойТариф = СоздатьОбъект("ТаблицаЗначений"); 
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаПФР","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФСС","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФОМС","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("ВидТарифа"); 
			ТаблицаБазаОсновнойТариф.НоваяКолонка("НеНачислятьПФРНак","Число",1,0);// признак начисления взносов в ПФР в накопительную часть 
			ТаблицаБазаОсновнойТариф.НоваяКолонка("Ключ"); //ключ поиска ВидТарифа+НеНачислятьПФРНак 
			
			Для СчТарифов = 1 по 4 Цикл
				
				РазлелТаблицы = (СчТарифов-1) * 13;
				ИмяРаздела = ?(СчТарифов = 1,"",?(СчТарифов = 2,"Инвалид",?(СчТарифов = 3,"ЕНВД","ЛТ")));
				
				НачисленоВсего                    = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,2+РазлелТаблицы);
				НеЯвляетсяОбъектом                = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,3+РазлелТаблицы);
				НеОблагаетсяЦеликом               = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,4+РазлелТаблицы);
				РасходыЗаСчетФСС                  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,5+РазлелТаблицы);
				ДенежноеДовольствиеВоеннослужащих = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,6+РазлелТаблицы);
				ДенежноеСодержаниеПрокуроров      = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7+РазлелТаблицы);
				Матпомощь                         = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+РазлелТаблицы);
				СкидкаМатПомощь                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,11+РазлелТаблицы);
				МатпомощьПриРожденииРебенка       = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,8+РазлелТаблицы);
				СкидкаМатПомощьПриРожденииРебенка = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,9+РазлелТаблицы);
				ДоговорыПодряда                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,12+РазлелТаблицы);
				Авторские                         = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,13+РазлелТаблицы);
				СкидкаАвторские                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,14+РазлелТаблицы); 
				
				НалоговаяБазаФОМС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- СкидкаАвторские;
				
				НалоговаяБазаПФР = НалоговаяБазаФОМС
				- ДенежноеСодержаниеПрокуроров;
				
				НалоговаяБазаФСС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- ДоговорыПодряда
				- Авторские;
				
				
				БазаПФРТекущийМесяц[СчТарифов] = 0;
				БазаФССТекущийМесяц[СчТарифов] = 0;
				БазаФОМСТекущийМесяц[СчТарифов] = 0;
				Если КоэфПФР = 1 Тогда  // учтем флажок страховых взносов
					БазаПФРТекущийМесяц[СчТарифов]  = НалоговаяБазаПФР - НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов];
				КонецЕсли;
				Если КоэфФОМСиФСС = 1 Тогда
					БазаФССТекущийМесяц[СчТарифов]  = НалоговаяБазаФСС - НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов];
					БазаФОМСТекущийМесяц[СчТарифов] = НалоговаяБазаФОМС - НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов];
				КонецЕсли;
				НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаПФР;
				НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС;
				НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФОМС;
				
				
				БазаФСС_НСТекущийМесяц[СчТарифов] = НалоговаяБазаФСС - НалоговаяБазаФСС_НСПоПредыдущийМесяц[СчТарифов]; 
				НалоговаяБазаФСС_НСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС;
				
				БазаПФР[СчТарифов]    = БазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов];
				БазаФСС[СчТарифов]    = БазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов];
				БазаФОМС[СчТарифов]   = БазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов]; 
				БазаФСС_НС[СчТарифов] = БазаФСС_НС[СчТарифов] + БазаФСС_НСТекущийМесяц[СчТарифов];
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаПФР"+ИмяРаздела,БазаПФР[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФСС"+ИмяРаздела,БазаФСС[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФОМС"+ИмяРаздела,БазаФОМС[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФСС_НС"+ИмяРаздела,БазаФСС_НС[СчТарифов]);
				
			КонецЦикла; // цикл по тарифам
			
			//******************************************************************************
			// Расчет облагаемой базы, с учетом ограничения сверху
			
			БазаПФРВсегоПоТекущийМесяц    = БазаПФР[1] + БазаПФР[2] + БазаПФР[3] + БазаПФР[4];
			БазаПФРВсегоТекущийМесяц      = БазаПФРТекущийМесяц[1] + БазаПФРТекущийМесяц[2] + БазаПФРТекущийМесяц[3] + БазаПФРТекущийМесяц[4];
			БазаПФРВсегоПоПредыдущийМесяц = БазаПФРВсегоПоТекущийМесяц - БазаПФРВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаПФРВсегоТекущийМесяц = Мин(БазаПФРВсегоПоТекущийМесяц, ПределДоходов) - БазаПФРВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаПФРВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаПФРВсегоПоТекущийМесяц &gt;= ПределДоходов) Тогда 
				// предел превышен в прошлом периоде
				КоэффициентБазыПФР = 0;
			ИначеЕсли (БазаПФРВсегоПоТекущийМесяц &lt;= ПределДоходов)  Тогда 
				Если (БазаПФРВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыПФР = 1;
				ИначеЕсли ОблагаемаяБазаПФРВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыПФР = (БазаПФРВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаПФРВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыПФР = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыПФР = ОблагаемаяБазаПФРВсегоТекущийМесяц / БазаПФРВсегоТекущийМесяц;
			КонецЕсли; 
			
			
			БазаФОМСВсегоПоТекущийМесяц    = БазаФОМС[1] + БазаФОМС[2] + БазаФОМС[3] + БазаФОМС[4];
			БазаФОМСВсегоТекущийМесяц      = БазаФОМСТекущийМесяц[1] + БазаФОМСТекущийМесяц[2] + БазаФОМСТекущийМесяц[3] + БазаФОМСТекущийМесяц[4];
			БазаФОМСВсегоПоПредыдущийМесяц = БазаФОМСВсегоПоТекущийМесяц - БазаФОМСВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаФОМСВсегоТекущийМесяц = Мин(БазаФОМСВсегоПоТекущийМесяц, ПределДоходов) - БазаФОМСВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаФОМСВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаФОМСВсегоПоТекущийМесяц &gt;= ПределДоходов) Тогда 
				// предел превышен
				КоэффициентБазыФОМС = 0;
			ИначеЕсли БазаФОМСВсегоПоТекущийМесяц &lt;= ПределДоходов  Тогда
				//не достигли предела, вся база входит в облагаемую
				Если (БазаФОМСВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыФОМС = 1;
				ИначеЕсли ОблагаемаяБазаФОМСВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыФОМС = (БазаФОМСВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаФОМСВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыФОМС = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыФОМС = ОблагаемаяБазаФОМСВсегоТекущийМесяц / БазаФОМСВсегоТекущийМесяц;
			КонецЕсли;
			
			
			БазаФССВсегоПоТекущийМесяц    = БазаФСС[1] + БазаФСС[2] + БазаФСС[3] + БазаФСС[4];
			БазаФССВсегоТекущийМесяц      = БазаФССТекущийМесяц[1] + БазаФССТекущийМесяц[2] + БазаФССТекущийМесяц[3] + БазаФССТекущийМесяц[4];
			БазаФССВсегоПоПредыдущийМесяц = БазаФССВсегоПоТекущийМесяц - БазаФССВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаФССВсегоТекущийМесяц = Мин(БазаФССВсегоПоТекущийМесяц, ПределДоходов) - БазаФССВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаФССВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаФССВсегоПоТекущийМесяц &gt;= ПределДоходов)  Тогда 
				// предел превышен
				КоэффициентБазыФСС = 0;
			ИначеЕсли БазаФССВсегоПоТекущийМесяц &lt;= ПределДоходов  Тогда
				//не достигли предела, вся база входит в облагаемую
				Если (БазаФССВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыФСС = 1;
				ИначеЕсли ОблагаемаяБазаФССВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыФСС = (БазаФССВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаФССВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыФСС = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыФСС = ОблагаемаяБазаФССВсегоТекущийМесяц / БазаФССВсегоТекущийМесяц;
			КонецЕсли;
			
			ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(Сч);
			ОсновнойТариф = ТаблицаОсновныхТарифов.ВидТарифа;
			
			Для СчТарифов = 1 по 4 Цикл
				
				ИмяРаздела = ?(СчТарифов = 1,"",?(СчТарифов = 2,"Инвалид",?(СчТарифов = 3,"ЕНВД","ЛТ")));
				
				Если СчТарифов = 1 Тогда 
					// по основному тарифу базу пишем в разрезе тарифов
					// получим основной тариф текущего месяца
					НеНачислятьПФРНак = СписокНеНачислятьПФРНак.ПолучитьЗначение(Сч);
					Ключ =  Формат(""+НеНачислятьПФРНак+ОсновнойТариф.Идентификатор(),"Строк50");
					
					Если Сч = 1 Тогда 
						//первый месяц
						ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
						ТаблицаБазаОсновнойТариф.ВидТарифа			= ОсновнойТариф;
						ТаблицаБазаОсновнойТариф.БазаПФР			= БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
						ТаблицаБазаОсновнойТариф.БазаФСС			= БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
						ТаблицаБазаОсновнойТариф.БазаФОМС			= БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
						ТаблицаБазаОсновнойТариф.НеНачислятьПФРНак	= НеНачислятьПФРНак;
						ТаблицаБазаОсновнойТариф.Ключ				= Ключ;
						
					Иначе
						ТаблицаБазаОсновнойТариф.Загрузить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБаза"));
						НомерСтрокиТаблицы = "";
						Если ТаблицаБазаОсновнойТариф.НайтиЗначение(Ключ,НомерСтрокиТаблицы,"Ключ") = 1 Тогда
							ТаблицаБазаОсновнойТариф.ПолучитьСтрокуПоНомеру(НомерСтрокиТаблицы); 
							ТаблицаБазаОсновнойТариф.ВидТарифа			= ОсновнойТариф;
							ТаблицаБазаОсновнойТариф.БазаПФР			= ТаблицаБазаОсновнойТариф.БазаПФР  + БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
							ТаблицаБазаОсновнойТариф.БазаФСС			= ТаблицаБазаОсновнойТариф.БазаФСС  + БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
							ТаблицаБазаОсновнойТариф.БазаФОМС			= ТаблицаБазаОсновнойТариф.БазаФОМС + БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
							ТаблицаБазаОсновнойТариф.НеНачислятьПФРНак	= НеНачислятьПФРНак;
							ТаблицаБазаОсновнойТариф.Ключ				= Ключ;
							
						Иначе
							ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
							ТаблицаБазаОсновнойТариф.ВидТарифа			= ОсновнойТариф;
							ТаблицаБазаОсновнойТариф.БазаПФР			= БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
							ТаблицаБазаОсновнойТариф.БазаФСС			= БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
							ТаблицаБазаОсновнойТариф.БазаФОМС			= БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
							ТаблицаБазаОсновнойТариф.НеНачислятьПФРНак	= НеНачислятьПФРНак;
							ТаблицаБазаОсновнойТариф.Ключ				= Ключ;
							
						КонецЕсли;
						
					КонецЕсли;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБаза",ТаблицаБазаОсновнойТариф);
					
				Иначе
					
					ОграниченнаяБазаПФР[СчТарифов] = ОграниченнаяБазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов] * КоэффициентБазыПФР;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаПФР"+ИмяРаздела,ОграниченнаяБазаПФР[СчТарифов]);
					
					ОграниченнаяБазаФОМС[СчТарифов] = ОграниченнаяБазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов] * КоэффициентБазыФОМС;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФОМС"+ИмяРаздела,ОграниченнаяБазаФОМС[СчТарифов]); 
					
					ОграниченнаяБазаФСС[СчТарифов] = ОграниченнаяБазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов] * КоэффициентБазыФСС;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФСС"+ИмяРаздела,ОграниченнаяБазаФСС[СчТарифов]);
					
				КонецЕсли;
				
			КонецЦикла;
			
			ИсчисленоПФРНак = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНак");
			ИсчисленоПФРНакЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНакЕНВД");
			ИсчисленоПФРСтрах = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрах");
			ИсчисленоПФРСтрахЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрахЕНВД");
			ИсчисленоТФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМС");
			ИсчисленоТФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМСЕНВД");
			ИсчисленоФФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМС");
			ИсчисленоФФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМСЕНВД");
			ИсчисленоФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФСС");
			ИсчисленоФССЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФССЕНВД");
			
			
			ОблагаемаяБазаПФРЕНВД  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаПФРЕНВД");
			ОблагаемаяБазаФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФОМСЕНВД");
			ОблагаемаяБазаФССЕНВД  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФССЕНВД");
			
			ОблагаемаяБазаПФР = 0;
			ОблагаемаяБазаФОМС = 0;
			ОблагаемаяБазаФСС = 0;
			ОблагаемаяБазаПоТекущийМесяцТаблица	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБаза");
			ОблагаемаяБазаПоТекущийМесяцТаблица.ВыбратьСтроки();
			Пока ОблагаемаяБазаПоТекущийМесяцТаблица.ПолучитьСтроку()=1 Цикл
				// цикл по всем тарифам, которые использовались в организации
				ОблагаемаяБазаПФР  = ОблагаемаяБазаПФР  + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаПФР;
				ОблагаемаяБазаФОМС = ОблагаемаяБазаФОМС + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФОМС;
				ОблагаемаяБазаФСС  = ОблагаемаяБазаФСС + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФСС;
			КонецЦикла;
			
			Если Сч&gt;1 Тогда
				
				ИсчисленоПФРНак = ИсчисленоПФРНак - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНак");
				ИсчисленоПФРНакЕНВД = ИсчисленоПФРНакЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНакЕНВД");
				ИсчисленоПФРСтрах = ИсчисленоПФРСтрах - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрах");
				ИсчисленоПФРСтрахЕНВД = ИсчисленоПФРСтрахЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрахЕНВД");
				ИсчисленоТФОМС = ИсчисленоТФОМС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМС");
				ИсчисленоТФОМСЕНВД = ИсчисленоТФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМСЕНВД");
				ИсчисленоФФОМС = ИсчисленоФФОМС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМС");
				ИсчисленоФФОМСЕНВД = ИсчисленоФФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМСЕНВД"); 
				ИсчисленоФСС = ИсчисленоФСС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФСС");
				ИсчисленоФССЕНВД = ИсчисленоФССЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФССЕНВД");
				
				ОблагаемаяБазаПФРЕНВД  = ОблагаемаяБазаПФРЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаПФРЕНВД");
				ОблагаемаяБазаФОМСЕНВД = ОблагаемаяБазаФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаФОМСЕНВД");
				ОблагаемаяБазаФССЕНВД  = ОблагаемаяБазаФССЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаФССЕНВД");
				
				ОблагаемаяБазаПФР1 = 0;
				ОблагаемаяБазаФОМС1 = 0;
				ОблагаемаяБазаФСС1 = 0;
				ОблагаемаяБазаПоТекущийМесяцТаблица	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБаза");
				ОблагаемаяБазаПоТекущийМесяцТаблица.ВыбратьСтроки();
				Пока ОблагаемаяБазаПоТекущийМесяцТаблица.ПолучитьСтроку()=1 Цикл
					// цикл по всем тарифам, которые использовались в организации
					ОблагаемаяБазаПФР1  = ОблагаемаяБазаПФР1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаПФР;
					ОблагаемаяБазаФОМС1 = ОблагаемаяБазаФОМС1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФОМС;
					ОблагаемаяБазаФСС1 = ОблагаемаяБазаФСС1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФСС;
				КонецЦикла;  
				ОблагаемаяБазаПФР  = ОблагаемаяБазаПФР  - ОблагаемаяБазаПФР1;
				ОблагаемаяБазаФОМС = ОблагаемаяБазаФОМС - ОблагаемаяБазаФОМС1;
				ОблагаемаяБазаФСС  = ОблагаемаяБазаФСС - ОблагаемаяБазаФСС1;
				
			КонецЕсли; 
			
			
			КоэфЕНВД_ПФР = ?((ОблагаемаяБазаПФРЕНВД+ОблагаемаяБазаПФР)=0,0,ОблагаемаяБазаПФРЕНВД/(ОблагаемаяБазаПФРЕНВД+ОблагаемаяБазаПФР));
			КоэфЕНВД_ФОМС = ?((ОблагаемаяБазаФОМСЕНВД+ОблагаемаяБазаФОМС)=0,0,ОблагаемаяБазаФОМСЕНВД/(ОблагаемаяБазаФОМСЕНВД+ОблагаемаяБазаФОМС));
			КоэфЕНВД_ФСС = ?((ОблагаемаяБазаФССЕНВД+ОблагаемаяБазаФСС)=0,0,ОблагаемаяБазаФССЕНВД/(ОблагаемаяБазаФССЕНВД+ОблагаемаяБазаФСС));
			
			ИсчисленоПФРНак = ИсчисленоПФРНак + ИсчисленоПФРНакЕНВД; 
			ИсчисленоПФРНакЕНВД = Окр(ИсчисленоПФРНак*КоэфЕНВД_ПФР,2);
			ИсчисленоПФРНак = ИсчисленоПФРНак - ИсчисленоПФРНакЕНВД;
			
			ИсчисленоПФРСтрах = ИсчисленоПФРСтрах + ИсчисленоПФРСтрахЕНВД; 
			ИсчисленоПФРСтрахЕНВД = Окр(ИсчисленоПФРСтрах*КоэфЕНВД_ПФР,2);
			ИсчисленоПФРСтрах = ИсчисленоПФРСтрах - ИсчисленоПФРСтрахЕНВД;
			
			ИсчисленоТФОМС = ИсчисленоТФОМС + ИсчисленоТФОМСЕНВД; 
			ИсчисленоТФОМСЕНВД = Окр(ИсчисленоТФОМС*КоэфЕНВД_ФОМС,2);
			ИсчисленоТФОМС = ИсчисленоТФОМС - ИсчисленоТФОМСЕНВД;
			
			ИсчисленоФФОМС = ИсчисленоФФОМС + ИсчисленоФФОМСЕНВД; 
			ИсчисленоФФОМСЕНВД = Окр(ИсчисленоФФОМС*КоэфЕНВД_ФОМС,2);
			ИсчисленоФФОМС = ИсчисленоФФОМС - ИсчисленоФФОМСЕНВД;
			
			ИсчисленоФСС = ИсчисленоФСС + ИсчисленоФССЕНВД; 
			ИсчисленоФССЕНВД = Окр(ИсчисленоФСС*КоэфЕНВД_ФСС,2);
			ИсчисленоФСС = ИсчисленоФСС - ИсчисленоФССЕНВД;
			
			Если Сч&gt;1 Тогда 
				
				ИсчисленоПФРНак = ИсчисленоПФРНак + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНак");
				ИсчисленоПФРНакЕНВД = ИсчисленоПФРНакЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРНакЕНВД");
				ИсчисленоПФРСтрах = ИсчисленоПФРСтрах + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрах");
				ИсчисленоПФРСтрахЕНВД = ИсчисленоПФРСтрахЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРСтрахЕНВД");
				ИсчисленоТФОМС = ИсчисленоТФОМС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМС");
				ИсчисленоТФОМСЕНВД = ИсчисленоТФОМСЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоТФОМСЕНВД");
				ИсчисленоФФОМС = ИсчисленоФФОМС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМС");
				ИсчисленоФФОМСЕНВД = ИсчисленоФФОМСЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМСЕНВД");
				ИсчисленоФСС = ИсчисленоФСС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФСС");
				ИсчисленоФССЕНВД = ИсчисленоФССЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФССЕНВД");
				
			КонецЕсли;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНак",ИсчисленоПФРНак);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРНакЕНВД",ИсчисленоПФРНакЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрах",ИсчисленоПФРСтрах);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРСтрахЕНВД",ИсчисленоПФРСтрахЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМС",ИсчисленоТФОМС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоТФОМСЕНВД",ИсчисленоТФОМСЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМС",ИсчисленоФФОМС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМСЕНВД",ИсчисленоФФОМСЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФСС",ИсчисленоФСС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФССЕНВД",ИсчисленоФССЕНВД);
			
		КонецЕсли;
		
	КонецЦикла; // цикл по месяцам 

	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Сортировать("Физлицо, Период");
	
	ВремТаблицаЕСННачисления.Сортировать("Сотрудник, ПериодРегистрации"); 
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Свернуть("Период,Физлицо,ВидДохода,ОблагаетсяЕНВД,ВидРасчета,ДокументОснование,ОблагаетсяПоДополнительномуТарифу,ЯвляетсяДоходомФармацевта,ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаСтраховыеВзносыСведенияОДоходах, ТаблицаСтраховыеВзносыСведенияОДоходах);
	
	ВремТаблицаЕСННачисления.Свернуть("Сотрудник,Физлицо,ПериодРегистрации,ПериодДействия,ПериодДействияНачало,ПериодДействияКонец,КодДоходаЕСН,ВидРасчета,ОблагаетсяЕНВД,ГрафикРаботы,ВидУчетаВремени,ДокументОснование,НомерСтрокиДокумента,Сторно","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаЕСННачисления,ТаблицаЕСННачисления); 
	
КонецЦикла; // обхода сотров и физлиц

ВремТаблицаСтраховыеВзносыСведенияОДоходах = 0;
ВремТаблицаЕСННачисления = 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОбходСотрудниковДляСтраховыхВзносов2014" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем БазаПФР[4];
Перем БазаПФРТекущийМесяц[4];
Перем НалоговаяБазаПФРПоПредыдущийМесяц[4];
Перем ОграниченнаяБазаПФР[4];
	
Перем БазаФОМС[4];
Перем БазаФОМСТекущийМесяц[4];
Перем НалоговаяБазаФОМСПоПредыдущийМесяц[4];
Перем ОграниченнаяБазаФОМС[4];
	
Перем БазаФСС[4]; 
Перем БазаФССТекущийМесяц[4];
Перем НалоговаяБазаФССПоПредыдущийМесяц[4];
Перем ОграниченнаяБазаФСС[4]; 

Перем БазаФСС_НС[4]; 
Перем БазаФСС_НСТекущийМесяц[4];
Перем НалоговаяБазаФСС_НСПоПредыдущийМесяц[4];

Перем БазаПФРДопТарифы[2];
Перем БазаПФРПоПредыдущийМесяцДопТарифы[2];

ТаблицаСтраховыеВзносыСведенияОДоходах	= ИсходящиеДанные;
ТаблицаЕСННачисления					= ВходящиеДанные;
ВсегоСотров								= Источник;
Сотрудники								= Приемник;
ЗапросПоВзносам							= ТипПриемника;
ЗапросПоВзносамКСправочникам			= Значение;
ДоходыВычетыНалогиСотрудников			= Выражение;
ЖрнЗарплата								= Пусто;
Год										= ВыборкаДанных;
ПервыйМесяц								= Объект;
ПоследнийМесяц							= КоллекцияОбъектов;
ИскатьВоенных							= ОбъектКоллекции;
ТаблицаРаспределенияПоШаблПроводок		= ИмяПКО;
ИскатьЕНВД								= ИмяПКОВидСубконто;
СоответствиеВРкодамДоходовСВ			= НомерПКО;
ЗапросПоДоходамКСправочникам			= НомерПКС;


// скопируем структуру таблицы
ВремТаблицаСтраховыеВзносыСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаСтраховыеВзносыСведенияОДоходах.Загрузить(ТаблицаСтраховыеВзносыСведенияОДоходах); 								

ВремТаблицаЕСННачисления = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаЕСННачисления.Загрузить(ТаблицаЕСННачисления);


ДатаАктуальности = Дата(Год,ПоследнийМесяц,01);
ИскатьЛетчиков = Константа.ЕстьЛетчики; 
ИскатьГосслужащих = Константа.ЕстьГосслужащие;
ИскатьМоряков = Константа.ИспользуетсяТрудЧленовЭкипажейМорскихСудов;
ИскатьФармацевтов = Константа.ИспользуетсяТрудФармацевтов;
ИскатьРаботыСДосрочнойПенсией = Константа.ИспользуютсяРаботыСДосрочнойПенсией;

Если Год &lt; 2013 Тогда
	ИскатьРаботыСДосрочнойПенсией = 0;    
КонецЕсли;

ТаблицаДоляЕНВД = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаДоляЕНВД.НоваяКолонка("ДоляЕНВД","Число",25,10);


ТаблицаОсновныхТарифов = глПолучитьТаблицуОсновныхТарифов(ДатаАктуальности); 
ТаблицаОсновныхТарифов.НоваяКолонка("НеВыделятьИнвалидов","Число");
ВидТарифа = Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов; 
Если глСпрТарифСтраховыхВзносов.НайтиПоРеквизиту("ВидТарифа",ВидТарифа,1) = 0 Тогда
	ПФР = 0;
	ФСС = 0;	
	ФФОМС = 0;	
	ТФОМС = 0;
Иначе 
	ПФР = глСпрТарифСтраховыхВзносов.ПФР.Получить(ДатаАктуальности);
	ФСС = глСпрТарифСтраховыхВзносов.ФСС.Получить(ДатаАктуальности);	
	ФФОМС = глСпрТарифСтраховыхВзносов.ФФОМС.Получить(ДатаАктуальности);	
	ТФОМС = глСпрТарифСтраховыхВзносов.ТФОМС.Получить(ДатаАктуальности);	
КонецЕсли;
СуммарныйТарифИнвалида = ПФР + ФСС + ФФОМС + ТФОМС;

ТаблицаОсновныхТарифов.ВыбратьСтроки();
Пока ТаблицаОсновныхТарифов.ПолучитьСтроку()=1 Цикл
	Если ТаблицаОсновныхТарифов.СуммарныйТариф &lt; СуммарныйТарифИнвалида Тогда
		ТаблицаОсновныхТарифов.НеВыделятьИнвалидов = 1;    
	КонецЕсли;
КонецЦикла;

ПределДоходов = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода(ДатаАктуальности));

// получим размеры скидок к доходам
СпрВычетов = СоздатьОбъект("Справочник.СтраховыеВзносыСкидкиКДоходам");
СкидкаМатпомощь = 0;
РазмерСкидкаМатпомощь = 0;
Если СпрВычетов.НайтиПоКоду("Матпомощь",0) = 1 Тогда
	РазмерСкидкаМатпомощь = СпрВычетов.ГодоваяСкидка.Получить(НачГода(ДатаАктуальности));
КонецЕсли;
СкидкаМатпомощьПриРожденииРебенка = 0;

ТаблицаБазаОТ = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаБазаОТ.НоваяКолонка("БазаПФР","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФСС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("БазаФОМС","Число",15,2);
ТаблицаБазаОТ.НоваяКолонка("ВидТарифа");  

СпрШаблонов = СоздатьОбъект("Справочник.ШаблоныПроводок");
СпрШаблонов.НайтиПоНаименованию("Не отражать в бухгалтерском учете");
НеРаспределять = СпрШаблонов.ТекущийЭлемент();

// перебираем сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаЕСННачисления.УдалитьСтроки();
	
	Сотрудник=Сотрудники.ПолучитьЗначение(СчСотров);
	
	КодСотра=Сотрудник.Код;
	ИмяСотра=Сотрудник.Наименование; 
	
	НалогиПоРегистрации=0;
	ЗапросПоВзносам.вНачалоВыборки();
	Если ЗапросПоВзносам.Получить(Сотрудник,,)=1 Тогда
		НалогиПоРегистрации=1;	
	КонецЕсли; 
	
	ДанныеВСправочнике=0;
	ЗапросПоВзносамКСправочникам.вНачалоВыборки();
	Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,,)=1 Тогда
		ДанныеВСправочнике=1;	
	КонецЕсли;
	
	ДанныеВСправочникеДопТариф=0;
	ЗапросПоДоходамКСправочникам.вНачалоВыборки();
	Если ЗапросПоДоходамКСправочникам.Получить(Сотрудник,,)=1 Тогда
		ДанныеВСправочникеДопТариф=1;	
	КонецЕсли;
	
	НовыйПроцент = Окр(СчСотров/ВсегоСотров*100);
	
	Если СчСотров &lt; ВсегоСотров Тогда
		глСтатусСтрока(Форма,"Обрабатываются доходы"+?(ВсегоСотров=1,""," ("+НовыйПроцент+"%)")+": "+ИмяСотра);
	КонецЕсли;
	
	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.НоваяСтрока();
		НомерСтроки = ДоходыВычетыНалогиСотрудников.КоличествоСтрок();
		ИдентификаторСотрудника = КодСотраВтаблице+глДополнитьСтроку(Сч,2);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,1,ИдентификаторСотрудника);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтроки,"ОграниченнаяБаза",ТаблицаБазаОТ);
	КонецЦикла;
	
	Если ПустоеЗначение(""+КодСотра+ИмяСотра)=1 Тогда
		Продолжить
	КонецЕсли;
	
	// получим выборку записей по всем местам работы сотра на предприятии,
	// включая все места по внутреннему совместительству
	Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,ЖрнЗарплата.ПериодПоДате(Дата(Год,ПервыйМесяц,15)),ЖрнЗарплата.ПериодПоДате(Дата(Год,ПоследнийМесяц,15))) = 1 Тогда
	ИначеЕсли ДанныеВСправочнике + НалогиПоРегистрации = 0 Тогда
		Продолжить
	КонецЕсли;
	
	СписокСтатусИГ = СоздатьОбъект("СписокЗначений");
	СписокВидыРаботСДосрочнойПенсией = СоздатьОбъект("СписокЗначений");
	Для Сч=1 По 12 Цикл
		СписокСтатусИГ.ДобавитьЗначение("");
		СписокВидыРаботСДосрочнойПенсией.ДобавитьЗначение(ПустоеЗначение(Перечисление.ВидыРаботСДосрочнойПенсией));
	КонецЦикла;
	
	Военнослужащий			= "000000000000";
	Прокурор				= "000000000000";
	Летчик					= "000000000000";
	Моряк					= "000000000000";
	Фармацевт				= "000000000000";
	ВзиматьВзносыПФР		= "111111111111";
	ВзиматьВзносыФОМСиФСС	= "111111111111"; 
	Инвалид					= "000000000000";    // это для определения тарифа при расчете страховых взносов
	ИнвалидТаб				= "000000000000"; //это для записи в таблицу информации о том, что сотрудник - инвалид 
	РаботникСДосрочнойПенсией  = "000000000000";
	
	Для Сч = ПервыйМесяц По ПоследнийМесяц Цикл
		
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15)); 
		
		ВидЗастрахованногоЛица = Сотрудник.ВидЗастрахованногоЛица.Получить(ДатаМесяца);
		Если ВидЗастрахованногоЛица = Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПребывающиеИностранцы Тогда
		    
			ВзиматьВзносыФОМСиФСС = ?(Сч=1,"",Лев(ВзиматьВзносыФОМСиФСС,Сч-1))+"0"+?(Сч=12,"",Прав(ВзиматьВзносыФОМСиФСС,12-Сч));
			ДолгосрочныйДоговор = Сотрудник.ДолгосрочныйДоговорСИностранцем.Получить(ДатаМесяца);
			Если ДолгосрочныйДоговор=0 Тогда
				ВзиматьВзносыПФР = ?(Сч=1,"",Лев(ВзиматьВзносыПФР,Сч-1))+"0"+?(Сч=12,"",Прав(ВзиматьВзносыПФР,12-Сч)); 
			КонецЕсли;  
			СписокСтатусИГ.УстановитьЗначение(Сч,"ВП");
			
		ИначеЕсли ВидЗастрахованногоЛица = Перечисление.ВидыЗастрахованныхЛицОбязательногоСтрахования.ВременноПроживающиеИностранцы Тогда	
			СписокСтатусИГ.УстановитьЗначение(Сч,"ВЖ");
		КонецЕсли;  
		
		Если ИскатьЛетчиков = 1 Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ЛетныйЭкипаж &gt; 0 Тогда
				Летчик	   = ?(Сч=1,"",Лев(Летчик,Сч-1))+"1"+?(Сч=12,"",Прав(Летчик,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьВоенных = 1 Тогда
			Если глВоеннослужащий(Сотрудник, ДатаМесяца) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
			Если глВоеннослужащий(Сотрудник, НачМесяца(ДатаМесяца)) = 1 Тогда
				Военнослужащий = ?(Сч=1,"",Лев(Военнослужащий,Сч-1))+"1"+?(Сч=12,"",Прав(Военнослужащий,12-Сч));
			КонецЕсли;
		КонецЕсли;
		
		Если (ИскатьВоенных = 1) или (ИскатьГосслужащих=1) Тогда
			
			Если Сотрудник.Должность.Получить(ДатаМесяца).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВыплачиватьПрокурорские &gt; 0 Тогда
				Прокурор	   = ?(Сч=1,"",Лев(Прокурор,Сч-1))+"1"+?(Сч=12,"",Прав(Прокурор,12-Сч));
			КонецЕсли;				
			
		КонецЕсли;
		
		Если ИскатьФармацевтов = 1 Тогда
		
			Если Сотрудник.Должность.Получить(ДатаМесяца).ЯвляетсяФармацевтическойДолжностью &gt; 0 Тогда
				Фармацевт	   = ?(Сч=1,"",Лев(Фармацевт,Сч-1))+"1"+?(Сч=12,"",Прав(Фармацевт,12-Сч));
			КонецЕсли;
			Если Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ЯвляетсяФармацевтическойДолжностью &gt; 0 Тогда
				Фармацевт	   = ?(Сч=1,"",Лев(Фармацевт,Сч-1))+"1"+?(Сч=12,"",Прав(Фармацевт,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьМоряков = 1 Тогда 
		
			Если Сотрудник.Подразделение.Получить(ДатаМесяца).СоответствуетСудамПодФлагомРФ &gt; 0 Тогда
				Моряк	   = ?(Сч=1,"",Лев(Моряк,Сч-1))+"1"+?(Сч=12,"",Прав(Моряк,12-Сч));
			КонецЕсли;
			Если Сотрудник.Подразделение.Получить(НачМесяца(ДатаМесяца)).СоответствуетСудамПодФлагомРФ &gt; 0 Тогда
				Моряк	   = ?(Сч=1,"",Лев(Моряк,Сч-1))+"1"+?(Сч=12,"",Прав(Моряк,12-Сч));
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИскатьРаботыСДосрочнойПенсией = 1 Тогда 
			
			ВидыРаботСДосрочнойПенсией = Сотрудник.Должность.Получить(ДатаМесяца).ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией;
			Если (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы) или (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)  Тогда
				РаботникСДосрочнойПенсией = ?(Сч=1,"",Лев(РаботникСДосрочнойПенсией,Сч-1))+"1"+?(Сч=12,"",Прав(РаботникСДосрочнойПенсией,12-Сч));
				СписокВидыРаботСДосрочнойПенсией.УстановитьЗначение(Сч, ВидыРаботСДосрочнойПенсией);
			КонецЕсли; 
			
			ВидыРаботСДосрочнойПенсией = Сотрудник.Должность.Получить(НачМесяца(ДатаМесяца)).ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией;
			Если (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы) или (ВидыРаботСДосрочнойПенсией=Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)  Тогда
				РаботникСДосрочнойПенсией = ?(Сч=1,"",Лев(РаботникСДосрочнойПенсией,Сч-1))+"1"+?(Сч=12,"",Прав(РаботникСДосрочнойПенсией,12-Сч));
				СписокВидыРаботСДосрочнойПенсией.УстановитьЗначение(Сч, ВидыРаботСДосрочнойПенсией);
			КонецЕсли;  
			
		КонецЕсли;
		
		ЭтоМоряк     = Число(Сред(Моряк,Сч,1));
		ЭтоФармацевт = Число(Сред(Фармацевт,Сч,1));
		ЛьготныйТариф = ?((ЭтоМоряк =1) или (ЭтоФармацевт = 1),1,0);
		
		ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(Сч);
		
		КатегорияПФР = Сотрудник.КатегорияПлательщикаПФР.Получить(ДатаМесяца).Идентификатор();
		Если ПустоеЗначение(КатегорияПФР) = 0 Тогда
			Если Найти(",НРИВ,СХИВ,ФХИВ,ИПИВ,АДИВ,",","+КатегорияПФР+",") &gt; 0 Тогда
				
				Если (ЛьготныйТариф = 0) и (ТаблицаОсновныхТарифов.НеВыделятьИнвалидов = 0) Тогда
					Инвалид = ?(Сч=1,"",Лев(Инвалид,Сч-1))+"1"+?(Сч=12,"",Прав(Инвалид,12-Сч));    
				КонецЕсли;
				ИнвалидТаб = ?(Сч=1,"",Лев(ИнвалидТаб,Сч-1))+"1"+?(Сч=12,"",Прав(ИнвалидТаб,12-Сч));
				
			КонецЕсли;
		КонецЕсли;    
		
	КонецЦикла; 
	
	
	ТаблицаДоляЕНВД.УдалитьСтроки();
	ПустойШаблон = ПолучитьПустоеЗначение("Справочник.ШаблоныПроводок");
	
	Для СчМес = 1 По 12 Цикл
		
		ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(СчМес);
		ТаблицаДоляЕНВД.НоваяСтрока();
		Если ИскатьЕНВД = 1 Тогда
			ДатаУчета = КонМесяца(Дата(Год,СчМес,15)); 
			ФормаТруда = Сотрудник.ФормаТруда.Получить(ДатаУчета);
			Если ПустоеЗначение(ФормаТруда)=0 Тогда
				
				Если (ФормаТруда=Перечисление.ФормыТруда.ТабельПодневнОклад)
				или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасОклад)
				или (ФормаТруда=Перечисление.ФормыТруда.ТабельПочасТариф) Тогда
					ОсновнойВР = ВидРасчета.ОплатаПоТабелю;
				Иначе
					ОсновнойВР = ?(глФормаТрудаПоТарифуОкладу(ФормаТруда)="Оклад",ВидРасчета.ОплатаПоОкладу,ВидРасчета.ОплатаПоТарифу);
				КонецЕсли;
				
			Иначе	
				ОсновнойВР = ВидРасчета.ОплатаПоОкладу;
			КонецЕсли;
			
			ШаблонУчета = УточнитьУчетПоСотруднику(ПустойШаблон,Сотрудник,ОсновнойВР,1,ДатаУчета,ДатаУчета);
			Если ТипЗначения(ШаблонУчета) = 11  Тогда
				Если ШаблонУчета.ПодпадаетПодЕНВД = 1 Тогда
					ТаблицаДоляЕНВД.ДоляЕНВД = 1;
				КонецЕсли;
			ИначеЕсли ТипЗначения(ШаблонУчета) = 100 Тогда
				
				ДоляЕНВД = 0;
				Для Сч = 1 По ШаблонУчета.КоличествоСтрок() Цикл
					ШаблонУчета.ПолучитьСтрокуПоНомеру(Сч);
					Если ШаблонУчета.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
						ДоляЕНВД = ДоляЕНВД + ШаблонУчета.Сумма;
					КонецЕсли;
				КонецЦикла;
				ТаблицаДоляЕНВД.ДоляЕНВД = ДоляЕНВД;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	БылМесяцДохода = 0;
	Пока ЖрнЗарплата.ПолучитьЗапись() = 1 Цикл
		
		ВР = ЖрнЗарплата.ВидРасч;
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания) = 1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ВозвратыНДФЛ) = 1) Тогда
			Продолжить
		КонецЕсли;
		
		СуммаРез = ЖрнЗарплата.Результат; 
		Если СуммаРез = 0 Тогда
			Продолжить
		КонецЕсли; 
		Скидка = 0;
		
		Объект					= ЖрнЗарплата.Объект; //это сотрудник
		ДокументОснование		= ЖрнЗарплата.Документ;
		НомерСтрокиДокумента	= ЖрнЗарплата.НомерСтрокиДокумента;
		
		ДатаДохода				= ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
		ПериодРегистрации		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
		ПериодДействия			= НачМесяца(ЖрнЗарплата.ДатаНачала);
		ПериодДействияНачало	= ЖрнЗарплата.ДатаНачала;
		ПериодДействияКонец		= ЖрнЗарплата.ДатаОкончания;
		МесяцДохода				= ДатаМесяц(ДатаДохода);
		
		Если БылМесяцДохода &lt;&gt; МесяцДохода Тогда
			БылМесяцДохода = МесяцДохода
		КонецЕсли;
		
		ЭтоИнвалид 		  = Число(Сред(Инвалид,МесяцДохода,1));
		ЭтоЛетчик 		  = Число(Сред(Летчик,МесяцДохода,1));
		ЭтоПрокурор 	  = Число(Сред(Прокурор,МесяцДохода,1));
		ЭтоМоряк      = Число(Сред(Моряк,МесяцДохода,1));
		ЭтоФармацевт  = Число(Сред(Фармацевт,МесяцДохода,1));
		ЛьготныйТариф = ?((ЭтоМоряк =1) или (ЭтоФармацевт = 1),1,0);
		ЭтоРаботникСДосрочнойПенсией = Число(Сред(РаботникСДосрочнойПенсией,МесяцДохода,1));
		
		Если ЭтоПрокурор = 1 Тогда
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,0,СоответствиеВРкодамДоходовСВ));
			Если ПустаяСтрока(КодДохода) = 1 Тогда 
				КодДохода="СодержаниеПрокуроров";
			КонецЕсли;
		Иначе
			КодДохода = СокрЛП(КодДоходаПоЕСН(ВР,Число(Сред(Военнослужащий,МесяцДохода,1)), СоответствиеВРкодамДоходовСВ));
		КонецЕсли; 
		
		СуммаОсновнойТариф = 0; // сумма по основному тарифу, не инвалид
		СуммаИнвалид = 0;       // сумма инвалида
		СуммаЕНВД = 0;          // сумма по виду деятельности ЕНВД, не инвалид
		НомерКолонки = 0;       // номер колонки дохода для основного тарифа
		НомерКолонкиПрокурор = 0;       // номер колонки дохода для основного тарифа
		
		СкидкаОсновнойТариф = 0; // сумма скидки по основному тарифу, не инвалид
		СкидкаИнвалид = 0;       // сумма скидки инвалида
		СкидкаЕНВД = 0;
		
		РазложитьСуммыПоТарифам = 1;
		КодДоходаСтраховыеВзносы = "";
		Если ПустаяСтрока(КодДохода) = 1 Тогда
			// целиком облагаемые 
			КодДоходаСтраховыеВзносы	= "ОблагаетсяЦеликом";
			
		ИначеЕсли КодДохода="-1"  Тогда 
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				Продолжить;
			Иначе
				КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
				НомерКолонки = 4;
			КонецЕсли;
			
		ИначеЕсли (КодДохода="Не является объектом по ЕСН") Тогда
			Продолжить
			
		ИначеЕсли (КодДохода="НеЯвляетсяОбъектом") Тогда
			Продолжить	
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 4;
			
		ИначеЕсли КодДохода="НеОблагаетсяЦеликомЕНВД" Тогда 
			КодДоходаСтраховыеВзносы	= "НеОблагаетсяЦеликом";
			НомерКолонки = 4;
			РазложитьСуммыПоТарифам = 0; 
			Если ИскатьЕНВД = 1 Тогда
				СуммаЕНВД = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
		
		ИначеЕсли КодДохода="НеЯвляетсяОбъектом" Тогда 
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 3; 
			
		ИначеЕсли КодДохода="ЕдиновременныеПособияФСС" Тогда
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			// единовременные пособия за счет ФСС
			НомерКолонки = 5;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;      
			Иначе	
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;	
			
		ИначеЕсли КодДохода="РасходыЗаСчетФСС" Тогда	
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения 
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		ИначеЕсли КодДохода="ВозмещаемыеФСС" Тогда
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				СуммаЕНВД = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли КодДохода="ПособиеДоПолутораЛет" Тогда
			КодДоходаСтраховыеВзносы	= "ПособияЗаСчетФСС";
			НомерКолонки = 5; // Расходы на выплату страхового обеспечения
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		ИначеЕсли КодДохода="Довольствие" Тогда
			КодДоходаСтраховыеВзносы	= "ДенежноеДовольствиеВоеннослужащих";
			НомерКолонки = 6;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли; 
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли КодДохода="СодержаниеПрокуроров" Тогда
			КодДоходаСтраховыеВзносы	= "ДенежноеСодержаниеПрокуроров";
			НомерКолонки = 7;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли; 
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли (КодДохода="МатПомощь")  Тогда
			КодДоходаСтраховыеВзносы	= "Матпомощь";
			НомерКолонки = 10;
			
		ИначеЕсли (КодДохода="МатпомощьПриРожденииРебенка")  Тогда  
			КодДоходаСтраховыеВзносы	= КодДохода;
			НомерКолонки = 8;
			НомерКолонкиПрокурор = 7;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Скидка = Док.СуммаВычета;
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = -1*Скидка;
			КонецЕсли;  
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД,2);
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			
		ИначеЕсли (КодДохода="ДоговорыПодряда")  Тогда
			КодДоходаСтраховыеВзносы	= "ДоговорыГПХ";
			НомерКолонки = 12;
			
		ИначеЕсли (КодДохода = "Авторские") или (КодДохода = "Лицензионные") или (КодДохода = "ОтчуждениеАвторскихПрав") Тогда
			// все авторские договора
			КодДоходаСтраховыеВзносы	= глПолучитьВидДоходаПоАвторскомуДоговору(ДокументОснование);
			Если ПустоеЗначение(КодДоходаСтраховыеВзносы) = 1 Тогда
				КодДоходаСтраховыеВзносы = "ОблагаетсяЦеликом";
			КонецЕсли;
			
			НомерКолонки = 13;
			
			ЭтоСторно = ЖрнЗарплата.Сторно;
			Док = ЖрнЗарплата.Документ;
			Если Док.Вид() = "НачисленияУдержанияСписком" Тогда
				Док.ПолучитьСтрокуПоНомеру(ЖрнЗарплата.НомерСтрокиДокумента);
			КонецЕсли;
			Расходы = глПолучитьРазмерСкидкиПоАвторскомуДоговору(Док, СуммаРез, ЭтоСторно, ДатаДохода);
			
			Если (ЭтоСторно = 1) и (СуммаРез &lt; 0) Тогда // попали на сторно-запись, надо сделать все наоборот:
				Скидка = Макс(Расходы,СуммаРез);
			Иначе 
				Скидка = Макс(Мин(Расходы,СуммаРез),0);
			КонецЕсли;
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
				СкидкаИнвалид = Скидка;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				//надо опредлить долю ЕНВД
				глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
				СуммаЕНВД = 0; 
				Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
					Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
						СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
					КонецЕсли;
				КонецЦикла;
				СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
				
				ДоляЕНВД = СуммаЕНВД/СуммаРез;
				СкидкаЕНВД			= Окр(Скидка * ДоляЕНВД/СуммаРез,2);  
				СкидкаОсновнойТариф = Скидка - СкидкаЕНВД;
				
			Иначе
				СуммаОсновнойТариф  = СуммаРез;
				СкидкаОсновнойТариф = Скидка;
			КонецЕсли;
			
			РазложитьСуммыПоТарифам = 0;
			

		КонецЕсли;	
		
		// данные для доп тарифов с 2013 года
		СуммаДопТариф  = СуммаРез;
		СкидкаДопТариф = Скидка;
		
		Если РазложитьСуммыПоТарифам = 1 Тогда
			
			Если ЭтоИнвалид = 1 Тогда
				СуммаИнвалид = СуммаРез;
			ИначеЕсли ИскатьЕНВД = 1  Тогда
				
				Если (КодДохода = "РасходыЗаСчетФСС") или (КодДохода = "ВозмещаемыеФСС") или (КодДохода = "ПособиеДоПолутораЛет") Тогда
					
					СуммаЕНВД = ОКР(СуммаРез * ДоляЕНВД,2);
					СуммаОсновнойТариф = СуммаРез - СуммаЕНВД; 
					
				ИначеЕсли (КодДохода="ЕдиновременныеПособияФСС") Тогда
					
					Если ДоляЕНВД = 1 Тогда
						СуммаЕНВД = СуммаРез;
						СуммаОсновнойТариф = 0;    
					КонецЕсли;	
				Иначе 
					
					//надо опредлить долю ЕНВД
					глПолучитьРаспределениеРезультата(ЖрнЗарплата, ТаблицаРаспределенияПоШаблПроводок,,, "БезИсточниковФинансирования",,,,,1);
					СуммаЕНВД = 0; 
					Для СчСтрок = 1 По ТаблицаРаспределенияПоШаблПроводок.КоличествоСтрок() Цикл
						Если ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Шаблон").ПодпадаетПодЕНВД = 1 Тогда
							СуммаЕНВД = СуммаЕНВД + ТаблицаРаспределенияПоШаблПроводок.ПолучитьЗначение(СчСтрок,"Сумма");
						КонецЕсли;
					КонецЦикла;
					СуммаОсновнойТариф = СуммаРез - СуммаЕНВД;
					
				КонецЕсли;
				
			Иначе
				СуммаОсновнойТариф = СуммаРез;
			КонецЕсли;
			
		КонецЕсли;
		
		// занесем доходы в таблицу по сотруднику  
		
		Если ЭтоРаботникСДосрочнойПенсией =1 Тогда
			// зарегистрируем доходы для доп. тарифов 
			
			СмещениеКолонокДопТариф = 0;
			Если СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода) = Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы Тогда
				СмещениеКолонокДопТариф = 3;    
			КонецЕсли;
			
			Если (НомерКолонки = 0) или (НомерКолонки = 4) или (НомерКолонки = 5) или (НомерКолонки = 8) или (НомерКолонки = 10)  Тогда
				// начислено всего 
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,МесяцДохода,54+СмещениеКолонокДопТариф,СуммаДопТариф);
				
				Если (НомерКолонки = 4) или (НомерКолонки = 5) Тогда
					// необлагаемые суммы
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,МесяцДохода,55+СмещениеКолонокДопТариф,СуммаДопТариф);
					
				КонецЕсли;
				
				Если СкидкаДопТариф &lt;&gt; 0 Тогда
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников,НомерСтрокиСотрудника,МесяцДохода,56+СмещениеКолонокДопТариф,СкидкаДопТариф);
				КонецЕсли;
				
			КонецЕсли;            
			
		КонецЕсли;
		
		// занесем доходы в таблицу по сотруднику 
		
		Если СуммаОсновнойТариф &lt;&gt; 0 Тогда 
			
			СмещениеКолонкиПоТарифу = ?(ЛьготныйТариф=0,0,39); // учтем моряков и фармацевтов
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+СмещениеКолонкиПоТарифу, СуммаОсновнойТариф);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаОсновнойТариф, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование,
			ЭтоФармацевт,
			ЭтоМоряк,
			СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаОсновнойТариф,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+СмещениеКолонкиПоТарифу, СуммаОсновнойТариф);
				
				Если СкидкаОсновнойТариф &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+СмещениеКолонкиПоТарифу+1, СкидкаОсновнойТариф);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					ЭтоФармацевт,
					ЭтоМоряк,
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаОсновнойТариф,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли; 
				
			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаОсновнойТариф - СкидкаОсновнойТариф;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор, СодержаниеПрокурора);
			КонецЕсли;
			
		КонецЕсли;  
		
		Если СуммаИнвалид &lt;&gt; 0 Тогда 
				
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+13, СуммаИнвалид);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаИнвалид, 
			0,
			КодДоходаСтраховыеВзносы,
			0,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование,
			0,
			0,
			СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаИнвалид,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			0,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
			
			Если НомерКолонки &gt; 0 Тогда 
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+13, СуммаИнвалид);
				
				Если СкидкаИнвалид &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+13+1, СкидкаИнвалид);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					0,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					0,
					0,
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаИнвалид,
					КодДоходаСтраховыеВзносы,
					ВР,
					0,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;

			КонецЕсли;
			
			Если (ЭтоПрокурор = 1) и (НомерКолонкиПрокурор &gt; 0) Тогда 
				СодержаниеПрокурора = СуммаИнвалид - СкидкаИнвалид;
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонкиПрокурор+13, СодержаниеПрокурора);
			КонецЕсли;

		КонецЕсли; 
		
		Если СуммаЕНВД &lt;&gt; 0 Тогда
			
			ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, 2+26, СуммаЕНВД);
			
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,МесяцДохода,1), 
			СуммаЕНВД, 
			0,
			КодДоходаСтраховыеВзносы,
			1,
			ВР,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			ДокументОснование,
			0,
			0,
			СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
			
			ЗаполнитьТаблицуЕСННачисления(
			Объект,
			Сотрудник,
			ПериодРегистрации,
			ПериодДействия,
			ПериодДействияНачало,
			ПериодДействияКонец,
			СуммаЕНВД,
			0,
			КодДоходаСтраховыеВзносы,
			ВР,
			1,
			,
			,
			ДокументОснование,
			НомерСтрокиДокумента,
			ЭтоСторно,
			ВремТаблицаЕСННачисления);
		
			Если НомерКолонки &gt; 0 Тогда
				
				ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26, СуммаЕНВД);
				
				Если СкидкаЕНВД &lt;&gt; 0 Тогда
					// скидку пишем в следующую колонку после дохода
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, НомерКолонки+26+1, СкидкаЕНВД);    
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					0, 
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					1,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					0,
					0,
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
					
					ЗаполнитьТаблицуЕСННачисления(
					Объект,
					Сотрудник,
					ПериодРегистрации,
					ПериодДействия,
					ПериодДействияНачало,
					ПериодДействияКонец,
					0,
					СкидкаЕНВД,
					КодДоходаСтраховыеВзносы,
					ВР,
					1,
					,
					,
					ДокументОснование,
					НомерСтрокиДокумента,
					ЭтоСторно,
					ВремТаблицаЕСННачисления);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // обхода записей ж.р. 
	
	// добавим доходы и налоги из справочника для доп. тарифов
	Если ДанныеВСправочникеДопТариф = 1 Тогда 
		
		// получим данные из справочников из раздела не ЕНВД
		// 0 - ПодземныеИВредныеРаботы, 1 - ТяжелыеИПрочиеРаботы 
		
		Для ВидТарифа = 0 По 1 Цикл
			
			ЗапросПоДоходамКСправочникам.вНачалоВыборки();
			
			Если ЗапросПоДоходамКСправочникам.Получить(Сотрудник,ВидТарифа,)=0 Тогда
				Продолжить;	
			КонецЕсли;
			
			СмещениеКолонок = 0;
			Если ВидТарифа = 1 Тогда
				СмещениеКолонок = 3;
			КонецЕсли;
			
			Пока ЗапросПоДоходамКСправочникам.Группировка("ГодоМесяц")=1 Цикл
				
				МесяцДохода = Число(ЗапросПоДоходамКСправочникам.ГодоМесяц) % 100; 
				
				НачисленоВсего 	    = ЗапросПоДоходамКСправочникам.НачисленоВсего;
				НеОблагаетсяЦеликом = ЗапросПоДоходамКСправочникам.НеОблагаетсяЦеликом;
				Скидка    			= ЗапросПоДоходамКСправочникам.Скидка;
				
				глСообщениеТрассировки(	глСообщенияТрассировки,
				"Начислено всего: _П01", 0, 1, НачисленоВсего, "Ч15.2");
				
				
				Для Сч = МесяцДохода По 12 Цикл
					НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника+Сч;
					
					//прибавим из справочников:
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,54+СмещениеКолонок,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,54+СмещениеКолонок)
					+НачисленоВсего);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,55+СмещениеКолонок,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,55+СмещениеКолонок)
					+НеОблагаетсяЦеликом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,56+СмещениеКолонок,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,56+СмещениеКолонок)
					+Скидка);
					
				КонецЦикла; 
				
				глСообщениеТрассировки(глСообщенияТрассировки, "", 0, -2);
			КонецЦикла;  // обхода по периодам действия/регистрации 
			
		КонецЦикла;
		
	КонецЕсли;
	
	// добавим доходы и налоги из справочника
	Если  ДанныеВСправочнике = 1 Тогда
		
		// получим данные из справочников последовательно для двух разделов
		// 0 - НеЕНВД, 1 - ЕНВД 
		
		ВР = ПолучитьПустоеЗначение("ВидРасчета");
		
		Для ВидТарифа = 0 По 2 Цикл 
			
			ЗапросПоВзносамКСправочникам.вНачалоВыборки();
			
			Если ЗапросПоВзносамКСправочникам.Получить(Сотрудник,ВидТарифа,)=0 Тогда
				Продолжить;	
			КонецЕсли;
			
			
			Пока ЗапросПоВзносамкСправочникам.Группировка("ГодоМесяц")=1 Цикл
				
				МесяцДохода = Число(ЗапросПоВзносамкСправочникам.ГодоМесяц) % 100;
				
				ЭтоИнвалид				= Число(Сред(Инвалид,МесяцДохода,1));
				ЭтоМоряк    		    = Число(Сред(Моряк,МесяцДохода,1));
				ЭтоФармацевт  			= Число(Сред(Фармацевт,МесяцДохода,1));
				
				пЕНВД = 0;
			
				Если ЭтоИнвалид = 1 Тогда
					НомерНачальнойКолонки = 13;
					ИмяРаздела = "Инвалид";
				ИначеЕсли (ИскатьЕНВД*ВидТарифа = 1) Тогда
					НомерНачальнойКолонки = 26;
					ИмяРаздела = "ЕНВД";	
					пЕНВД = 1;
				ИначеЕсли ВидТарифа = 2 Тогда	
					НомерНачальнойКолонки = 39;
					ИмяРаздела = "ЛТ";
				Иначе // основной тариф
					НомерНачальнойКолонки = 0;
					ИмяРаздела = "";
				КонецЕсли;
				
				НачисленоВсего						= ЗапросПоВзносамкСправочникам.НачисленоВсего;
				НеЯвляетсяОбъектом					= ЗапросПоВзносамкСправочникам.НеЯвляетсяОбъектом;
				НеОблагаетсяЦеликом					= ЗапросПоВзносамкСправочникам.НеОблагаетсяЦеликом;
				РасходыЗаСчетФСС					= ЗапросПоВзносамкСправочникам.РасходыЗаСчетФСС;
				ДенежноеДовольствиеВоеннослужащих	= ЗапросПоВзносамкСправочникам.ДенежноеДовольствиеВоеннослужащих;
				ДенежноеСодержаниеПрокуроров		= ЗапросПоВзносамкСправочникам.ДенежноеСодержаниеПрокуроров;
				Матпомощь							= ЗапросПоВзносамкСправочникам.Матпомощь;
				СкидкаМатпомощь						= ЗапросПоВзносамкСправочникам.СкидкаМатпомощь;
				МатпомощьПриРожденииРебенка			= ЗапросПоВзносамкСправочникам.МатпомощьПриРожденииРебенка;
				СкидкаМатпомощьПриРожденииРебенка	= ЗапросПоВзносамкСправочникам.СкидкаМатпомощьПриРожденииРебенка;
				ДоговорыПодряда						= ЗапросПоВзносамкСправочникам.ДоговорыПодряда;
				Авторские							= ЗапросПоВзносамкСправочникам.Авторские;
				СкидкаАвторские						= ЗапросПоВзносамкСправочникам.СкидкаАвторские;
			
				ОблагаетсяВзносами = НачисленоВсего - НеЯвляетсяОбъектом - НеОблагаетсяЦеликом - РасходыЗаСчетФСС 
						- ДенежноеДовольствиеВоеннослужащих - ДенежноеСодержаниеПрокуроров - Матпомощь
						- МатпомощьПриРожденииРебенка - ДоговорыПодряда -  Авторские;  
						
				Если ОблагаетсяВзносами &lt;&gt;0 Тогда 
					
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ОблагаетсяВзносами, 
					0,
					"ОблагаетсяЦеликом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				    
				КонецЕсли;
			
				Если ДоговорыПодряда &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДоговорыПодряда, 
					0,
					"ДоговорыГПХ",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0));
				КонецЕсли;						
				Если Авторские &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Авторские, 
					СкидкаАвторские,
					"АвторскиеЛитературныеПроизведения",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;						
				Если ДенежноеДовольствиеВоеннослужащих &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеДовольствиеВоеннослужащих, 
					0,
					"ДенежноеДовольствиеВоеннослужащих",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0));
				КонецЕсли;						
				Если ДенежноеСодержаниеПрокуроров &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					ДенежноеСодержаниеПрокуроров, 
					0,
					"ДенежноеСодержаниеПрокуроров",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0));
				КонецЕсли;						
				Если Матпомощь &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					Матпомощь, 
					0,
					"Матпомощь",
					пЕНВД,
					ВидРасчета.МатПомощь,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если МатпомощьПриРожденииРебенка &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					МатпомощьПриРожденииРебенка, 
					СкидкаМатпомощьПриРожденииРебенка,
					"МатпомощьПриРожденииРебенка",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если НеЯвляетсяОбъектом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеЯвляетсяОбъектом, 
					0,
					"НеЯвляетсяОбъектом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если НеОблагаетсяЦеликом &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					НеОблагаетсяЦеликом, 
					0,
					"НеОблагаетсяЦеликом",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				Если РасходыЗаСчетФСС &lt;&gt; 0 Тогда
					ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
					Сотрудник, 
					Дата(Год,МесяцДохода,1), 
					РасходыЗаСчетФСС, 
					0,
					"ПособияЗаСчетФСС",
					пЕНВД,
					ВР,
					ЭтоЛетчик,
					ВремТаблицаСтраховыеВзносыСведенияОДоходах,
					ДокументОснование,
					?(ВидТарифа = 2,ЭтоФармацевт,0),
					?(ВидТарифа = 2,ЭтоМоряк,0),
					СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(МесяцДохода));
				КонецЕсли;
				
				
				Для Сч = МесяцДохода По 12 Цикл
					НомерТекущейСтрокиСотрудника = НомерСтрокиСотрудника+Сч;
					
					
					//прибавим из справочников:
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,2+НомерНачальнойКолонки)
					+НачисленоВсего);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,3+НомерНачальнойКолонки)
					+НеЯвляетсяОбъектом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,4+НомерНачальнойКолонки)
					+НеОблагаетсяЦеликом);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,5+НомерНачальнойКолонки)
					+РасходыЗаСчетФСС);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,6+НомерНачальнойКолонки)
					+ДенежноеДовольствиеВоеннослужащих);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,7+НомерНачальнойКолонки)
					+ДенежноеСодержаниеПрокуроров);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,10+НомерНачальнойКолонки)
					+Матпомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,11+НомерНачальнойКолонки)
					+СкидкаМатПомощь);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,8+НомерНачальнойКолонки)
					+МатпомощьПриРожденииРебенка); 
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,9+НомерНачальнойКолонки)
					+СкидкаМатПомощьПриРожденииРебенка);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,12+НомерНачальнойКолонки)
					+ДоговорыПодряда);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,13+НомерНачальнойКолонки)
					+Авторские);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерТекущейСтрокиСотрудника,14+НомерНачальнойКолонки)
					+СкидкаАвторские);
					
				КонецЦикла; 
				
			КонецЦикла;  // обхода по периодам действия/регистрации 
		КонецЦикла; // обход по видам тарифа
		
	КонецЕсли;
	
	// здесь собирается начисленные ранее страховые взносы - по периоду регистрации
	Если НалогиПоРегистрации = 1 Тогда 
		Пока ЗапросПоВзносам.Группировка("Регистрация")=1 Цикл
			Регистрация = ЗапросПоВзносам.Регистрация;
			МесяцДохода=ДатаМесяц(Регистрация); 
			ЭтоИнвалид = Число(Сред(Инвалид,МесяцДохода,1)); 
			ЭтоМоряк     = Число(Сред(Моряк,МесяцДохода,1));
			ЭтоФармацевт = Число(Сред(Фармацевт,МесяцДохода,1));
			ЛьготныйТариф = ?((ЭтоМоряк =1) или (ЭтоФармацевт = 1),1,0);
			ИмяРаздела = ?(ЭтоИнвалид = 1, "Инвалид", ?(ЛьготныйТариф=1,"ЛТ",""));
			Пока ЗапросПоВзносам.Группировка("ВР")=1 Цикл
				ВР = ЗапросПоВзносам.ВР;
				СуммаРез=ЗапросПоВзносам.РезультатВР;
				ИмяКолонки="";
				Если (ВР=ВидРасчета.ФФОМСс2010)  Тогда
					ИмяКолонки = "ИсчисленоФФОМС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ФССс2010)  Тогда
					ИмяКолонки = "ИсчисленоФСС" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРПоСуммарномуТарифу)  Тогда
					ИмяКолонки = "ИсчисленоПФР" + ИмяРаздела;
				ИначеЕсли (ВР=ВидРасчета.ПФРПоДополнительномуТарифу)  Тогда
					ИмяКолонки = "ИсчисленоДопТариф";
				ИначеЕсли (ВР=ВидРасчета.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)  Тогда
					ИмяКолонки = "ИсчисленоПФРЗаЗанятыхНаПодземныхИВредныхРаботах";	
				ИначеЕсли (ВР=ВидРасчета.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)  Тогда
					ИмяКолонки = "ИсчисленоПФРЗаЗанятыхНаТяжелыхИПрочихРаботах";	                                 
				ИначеЕсли (ВР=ВидРасчета.ФСС_НС)  Тогда
					ИмяКолонки = "ИсчисленоФСС_НС";	
				КонецЕсли;
				
				// занесем налоги в таблицу по сотруднику
				Если ИмяКолонки &lt;&gt; "" Тогда
					
					ОтразитьДоходВТаблицах(ДоходыВычетыНалогиСотрудников, НомерСтрокиСотрудника, МесяцДохода, ИмяКолонки, СуммаРез);
					
				КонецЕсли;
			КонецЦикла;  // обхода видов расчета
		КонецЦикла;  // обхода по месяцам
	КонецЕсли;
	       
	Для Сч = 1 По 4 Цикл 
		
		БазаПФР[Сч] = 0;             // база без дохода иностранца
		БазаПФРТекущийМесяц[Сч] = 0;
		НалоговаяБазаПФРПоПредыдущийМесяц[Сч] = 0; // вся база, включая доходы иностранца
		ОграниченнаяБазаПФР[Сч] = 0; 
		
		БазаФОМС[Сч] = 0;
		БазаФОМСТекущийМесяц[Сч] = 0;
		НалоговаяБазаФОМСПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФОМС[Сч] = 0;
		
		БазаФСС[Сч] = 0;
		БазаФССТекущийМесяц[Сч] = 0;
		НалоговаяБазаФССПоПредыдущийМесяц[Сч] = 0;
		ОграниченнаяБазаФСС[Сч] = 0;
		
		БазаФСС_НС[Сч] = 0;
		БазаФСС_НСТекущийМесяц[Сч] = 0;
		НалоговаяБазаФСС_НСПоПредыдущийМесяц[Сч] = 0;
		
	КонецЦикла; 
	
	Для Сч = 1 По 2 Цикл
		
		БазаПФРДопТарифы[Сч] = 0;
		БазаПФРПоПредыдущийМесяцДопТарифы[Сч] = 0;
		
	КонецЦикла;
	
	МатпомощьВсегоПоТекущийМесяцСкорр = 0;
	Для Сч = 1 По 12 Цикл  
		
		ЭтоПрокурор = Число(Сред(Прокурор,Сч,1));
		ЭтоМоряк     = Число(Сред(Моряк,МесяцДохода,1));
		ЭтоФармацевт = Число(Сред(Фармацевт,МесяцДохода,1));
		ЭтоИнвалид 	 = Число(Сред(ИнвалидТаб,Сч,1));
		ТарифИнвалид = Число(Сред(Инвалид,Сч,1));
		
		ЭтоРаботникСДосрочнойПенсией = Число(Сред(РаботникСДосрочнойПенсией,Сч,1));
		
		СтрокаТаблицы = НомерСтрокиСотрудника+Сч; 

		КоэфПФР = Число(Сред(ВзиматьВзносыПФР,Сч,1));
		КоэфФОМСиФСС = Число(Сред(ВзиматьВзносыФОМСиФСС,Сч,1));
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ВзиматьВзносыПФРиФСС",КоэфПФР); 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ВзиматьВзносыФОМСиФСС",КоэфФОМСиФСС);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ТарифИнвалид",ТарифИнвалид);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"Инвалид",ЭтоИнвалид);  
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ЛьготныйТариф",?(ЭтоМоряк=1,1,?(ЭтоФармацевт=1,2,0)));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ВидРаботСДосрочнойПенсией", СписокВидыРаботСДосрочнойПенсией.ПолучитьЗначение(Сч)); 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"СтатусИГ",СписокСтатусИГ.ПолучитьЗначение(Сч));
		
		// рассчитаем скидку к доходу Матпомощь
		МатпомощьПоТекущийМесяц 	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10);
		МатпомощьИнвалидПоТекущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+13);
		МатпомощьЕНВДПоТекущийМесяц	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+26); 
		МатпомощьЛТПоТекущийМесяц	   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+39);
		МатпомощьВсегоПоТекущийМесяц   = МатпомощьПоТекущийМесяц + МатпомощьИнвалидПоТекущийМесяц + МатпомощьЕНВДПоТекущийМесяц + МатпомощьЛТПоТекущийМесяц;
		
		Если Сч = 1 Тогда
			
			МатпомощьПоПредыдущийМесяц 	      = 0;
			МатпомощьИнвалидПоПредыдущийМесяц = 0;
			МатпомощьЕНВДПоПредыдущийМесяц	  = 0;
			МатпомощьЛТПоПредыдущийМесяц	  = 0;
			МатпомощьВсегоПоПредыдущийМесяц   = 0;
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= 0;
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = 0;
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= 0;
			СкидкаМатПомощьЛТПоПредыдущийМесяц	    = 0;
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = 0;
			
		Иначе  
			
			СкидкаМатПомощьПоПредыдущийМесяц 		= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11);
			СкидкаМатПомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+13);
			СкидкаМатПомощьЕНВДПоПредыдущийМесяц	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+26);
			СкидкаМатПомощьЛТПоПредыдущийМесяц	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,11+39);
			СкидкаМатПомощьВсегоПоПредыдущийМесяц   = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьЕНВДПоПредыдущийМесяц + СкидкаМатПомощьЛТПоПредыдущийМесяц; 

			МатпомощьПоПредыдущийМесяц 	   	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10);
			МатпомощьИнвалидПоПредыдущийМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+13);
			МатпомощьЕНВДПоПредыдущийМесяц	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+26);
			МатпомощьЛТПоПредыдущийМесяц	  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,10+39);
			МатпомощьВсегоПоПредыдущийМесяц   = МатпомощьПоПредыдущийМесяц + МатпомощьИнвалидПоПредыдущийМесяц + МатпомощьЕНВДПоПредыдущийМесяц + МатпомощьЛТПоПредыдущийМесяц;
			
		КонецЕсли; 
		
		МатПомощьТекущийМесяц         = (МатпомощьПоТекущийМесяц - МатпомощьПоПредыдущийМесяц);
		МатПомощьИнвалидаТекущийМесяц = (МатпомощьИнвалидПоТекущийМесяц - МатпомощьИнвалидПоПредыдущийМесяц);
		МатПомощьЕНВДТекущийМесяц     = (МатпомощьЕНВДПоТекущийМесяц - МатпомощьЕНВДПоПредыдущийМесяц);
		МатПомощьЛТТекущийМесяц       = (МатпомощьЛТПоТекущийМесяц - МатпомощьЛТПоПредыдущийМесяц);
		МатпомощьВсегоТекущийМесяц 	  = МатПомощьТекущийМесяц + МатПомощьИнвалидаТекущийМесяц + МатПомощьЕНВДТекущийМесяц + МатПомощьЛТТекущийМесяц; 
		
		МатпомощьВсегоПоПредыдущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр;
		МатпомощьВсегоПоТекущийМесяцСкорр = МатпомощьВсегоПоТекущийМесяцСкорр + МатпомощьВсегоТекущийМесяц;
		
		// Скидка текущего месяца
		СкидкаМатПомощьВсегоТекущийМесяц = Мин(МатпомощьВсегоПоТекущийМесяцСкорр, РазмерСкидкаМатпомощь) - СкидкаМатПомощьВсегоПоПредыдущийМесяц;
		
		// вычислим месячную долю, которая учавствует в расчете
		// это для месяца, в котором превысили предел РазмерСкидкаМатпомощь 
		Если СкидкаМатПомощьВсегоТекущийМесяц &gt;= 0 Тогда 
			
			Если (МатпомощьВсегоТекущийМесяц = 0) или (МатпомощьВсегоПоПредыдущийМесяцСкорр &gt;= РазмерСкидкаМатпомощь)  Тогда
				// предел превышен
				КоэффициентБазы = 0;
			ИначеЕсли МатпомощьВсегоПоТекущийМесяцСкорр &lt;= РазмерСкидкаМатпомощь  Тогда
				//не достигли предела
				КоэффициентБазы = 1;
			Иначе
				КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			КонецЕсли; 
			
		Иначе // сторно скидуки
			 
			КоэффициентБазы = СкидкаМатПомощьВсегоТекущийМесяц / МатпомощьВсегоТекущийМесяц;
			
		КонецЕсли;
		
		СкидкаМатПомощьТекущийМесяц 		= МатПомощьТекущийМесяц  * КоэффициентБазы; // по основному тарифу
		СкидкаМатПомощьИнвалидаТекущийМесяц = МатПомощьИнвалидаТекущийМесяц * КоэффициентБазы; // база инвалида 
		СкидкаМатПомощьЕНВДТекущийМесяц  	= МатПомощьЕНВДТекущийМесяц * КоэффициентБазы; // база ЕНВД 
		СкидкаМатПомощьЛТТекущийМесяц    	= МатПомощьЛТТекущийМесяц * КоэффициентБазы; 
		
		
		СкидкаМатПомощьПоТекущийМесяц        = СкидкаМатПомощьПоПредыдущийМесяц + СкидкаМатПомощьТекущийМесяц;
		СкидкаМатПомощьИнвалидПоТекущийМесяц = СкидкаМатПомощьИнвалидПоПредыдущийМесяц + СкидкаМатПомощьИнвалидаТекущийМесяц;
		СкидкаМатПомощьЕНВДПоТекущийМесяц    = СкидкаМатПомощьЕНВДПоПредыдущийМесяц + СкидкаМатПомощьЕНВДТекущийМесяц;
		СкидкаМатПомощьЛТПоТекущийМесяц      = СкидкаМатПомощьЛТПоПредыдущийМесяц + СкидкаМатПомощьЛТТекущийМесяц;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11,СкидкаМатПомощьПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+13,СкидкаМатПомощьИнвалидПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+26,СкидкаМатПомощьЕНВДПоТекущийМесяц);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,11+39,СкидкаМатПомощьЛТПоТекущийМесяц);
		
		Если ЭтоПрокурор=1 Тогда 
			
			ДоляМатпомощьПрокурор = МатпомощьПоТекущийМесяц-СкидкаМатПомощьПоТекущийМесяц;
			ДоляМатпомощьПрокурорИнвалид = МатпомощьИнвалидПоТекущийМесяц-СкидкаМатПомощьИнвалидПоТекущийМесяц;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7)+ДоляМатпомощьПрокурор);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,7+13,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7+13)+ДоляМатпомощьПрокурорИнвалид);
			
		КонецЕсли;
	
		Если СкидкаМатПомощьТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			0,
			0);
		КонецЕсли; 
		
		Если СкидкаМатПомощьИнвалидаТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьИнвалидаТекущийМесяц,
			"Матпомощь",
			0,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			0,
			0);
		КонецЕсли;  
		
		Если СкидкаМатПомощьЕНВДТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьЕНВДТекущийМесяц,
			"Матпомощь",
			1,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			0,
			0);
		КонецЕсли;
		
		Если СкидкаМатПомощьЛТТекущийМесяц &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуСтраховыеВзносыСведенияОДоходах(
			Сотрудник, 
			Дата(Год,Сч,1), 
			0, 
			СкидкаМатПомощьЕНВДТекущийМесяц,
			"Матпомощь",
			1,
			ВидРасчета.МатПомощь,
			ЭтоЛетчик,
			ВремТаблицаСтраховыеВзносыСведенияОДоходах,
			"",
			ЭтоФармацевт,
			ЭтоМоряк);
		КонецЕсли;
		
		Если ИскатьЕНВД = 1 Тогда
			
			ТаблицаБазаОсновнойТариф = СоздатьОбъект("ТаблицаЗначений"); 
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаПФР","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФСС","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("БазаФОМС","Число",15,2);
			ТаблицаБазаОсновнойТариф.НоваяКолонка("ВидТарифа"); 
			
			Для СчТарифов = 1 по 4 Цикл
				
				РазлелТаблицы = (СчТарифов-1) * 13;
				ИмяРаздела = ?(СчТарифов = 1,"",?(СчТарифов = 2,"Инвалид",?(СчТарифов = 3,"ЕНВД","ЛТ")));
				
				НачисленоВсего                    = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,2+РазлелТаблицы);
				НеЯвляетсяОбъектом                = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,3+РазлелТаблицы);
				НеОблагаетсяЦеликом               = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,4+РазлелТаблицы);
				РасходыЗаСчетФСС                  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,5+РазлелТаблицы);
				ДенежноеДовольствиеВоеннослужащих = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,6+РазлелТаблицы);
				ДенежноеСодержаниеПрокуроров      = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,7+РазлелТаблицы);
				Матпомощь                         = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,10+РазлелТаблицы);
				СкидкаМатПомощь                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,11+РазлелТаблицы);
				МатпомощьПриРожденииРебенка       = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,8+РазлелТаблицы);
				СкидкаМатПомощьПриРожденииРебенка = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,9+РазлелТаблицы);
				ДоговорыПодряда                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,12+РазлелТаблицы);
				Авторские                         = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,13+РазлелТаблицы);
				СкидкаАвторские                   = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,14+РазлелТаблицы); 
				
				НалоговаяБазаФОМС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- СкидкаАвторские;
				
				НалоговаяБазаПФР = НалоговаяБазаФОМС
				- ДенежноеСодержаниеПрокуроров;
				
				НалоговаяБазаФСС = НачисленоВсего
				- НеЯвляетсяОбъектом
				- НеОблагаетсяЦеликом
				- РасходыЗаСчетФСС
				- ДенежноеДовольствиеВоеннослужащих
				- СкидкаМатПомощь
				- СкидкаМатПомощьПриРожденииРебенка
				- ДоговорыПодряда
				- Авторские;
				
				
				БазаПФРТекущийМесяц[СчТарифов] = 0;
				БазаФССТекущийМесяц[СчТарифов] = 0;
				БазаФОМСТекущийМесяц[СчТарифов] = 0;
				Если КоэфПФР = 1 Тогда  // учтем флажок страховых взносов
					БазаПФРТекущийМесяц[СчТарифов]  = НалоговаяБазаПФР - НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов];
				КонецЕсли;
				Если КоэфФОМСиФСС = 1 Тогда
					БазаФССТекущийМесяц[СчТарифов]  = НалоговаяБазаФСС - НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов];
					БазаФОМСТекущийМесяц[СчТарифов] = НалоговаяБазаФОМС - НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов];
				КонецЕсли;
				НалоговаяБазаПФРПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаПФР;
				НалоговаяБазаФССПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС;
				НалоговаяБазаФОМСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФОМС;
				
				
				БазаФСС_НСТекущийМесяц[СчТарифов] = НалоговаяБазаФСС - НалоговаяБазаФСС_НСПоПредыдущийМесяц[СчТарифов]; 
				НалоговаяБазаФСС_НСПоПредыдущийМесяц[СчТарифов] = НалоговаяБазаФСС;
				
				БазаПФР[СчТарифов]    = БазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов];
				БазаФСС[СчТарифов]    = БазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов];
				БазаФОМС[СчТарифов]   = БазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов]; 
				БазаФСС_НС[СчТарифов] = БазаФСС_НС[СчТарифов] + БазаФСС_НСТекущийМесяц[СчТарифов];
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаПФР"+ИмяРаздела,БазаПФР[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФСС"+ИмяРаздела,БазаФСС[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФОМС"+ИмяРаздела,БазаФОМС[СчТарифов]);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"БазаФСС_НС"+ИмяРаздела,БазаФСС_НС[СчТарифов]);
				
			КонецЦикла; // цикл по тарифам
			
			//******************************************************************************
			// Расчет облагаемой базы, с учетом ограничения сверху
			
			БазаПФРВсегоПоТекущийМесяц    = БазаПФР[1] + БазаПФР[2] + БазаПФР[3] + БазаПФР[4];
			БазаПФРВсегоТекущийМесяц      = БазаПФРТекущийМесяц[1] + БазаПФРТекущийМесяц[2] + БазаПФРТекущийМесяц[3] + БазаПФРТекущийМесяц[4];
			БазаПФРВсегоПоПредыдущийМесяц = БазаПФРВсегоПоТекущийМесяц - БазаПФРВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаПФРВсегоТекущийМесяц = Мин(БазаПФРВсегоПоТекущийМесяц, ПределДоходов) - БазаПФРВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаПФРВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаПФРВсегоПоТекущийМесяц &gt;= ПределДоходов) Тогда 
				// предел превышен в прошлом периоде
				КоэффициентБазыПФР = 0;
			ИначеЕсли (БазаПФРВсегоПоТекущийМесяц &lt;= ПределДоходов)  Тогда 
				Если (БазаПФРВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыПФР = 1;
				ИначеЕсли ОблагаемаяБазаПФРВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыПФР = (БазаПФРВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаПФРВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыПФР = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыПФР = ОблагаемаяБазаПФРВсегоТекущийМесяц / БазаПФРВсегоТекущийМесяц;
			КонецЕсли; 
			
			
			БазаФОМСВсегоПоТекущийМесяц    = БазаФОМС[1] + БазаФОМС[2] + БазаФОМС[3] + БазаФОМС[4];
			БазаФОМСВсегоТекущийМесяц      = БазаФОМСТекущийМесяц[1] + БазаФОМСТекущийМесяц[2] + БазаФОМСТекущийМесяц[3] + БазаФОМСТекущийМесяц[4];
			БазаФОМСВсегоПоПредыдущийМесяц = БазаФОМСВсегоПоТекущийМесяц - БазаФОМСВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаФОМСВсегоТекущийМесяц = Мин(БазаФОМСВсегоПоТекущийМесяц, ПределДоходов) - БазаФОМСВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаФОМСВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаФОМСВсегоПоТекущийМесяц &gt;= ПределДоходов) Тогда 
				// предел превышен
				КоэффициентБазыФОМС = 0;
			ИначеЕсли БазаФОМСВсегоПоТекущийМесяц &lt;= ПределДоходов  Тогда
				//не достигли предела, вся база входит в облагаемую
				Если (БазаФОМСВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыФОМС = 1;
				ИначеЕсли ОблагаемаяБазаФОМСВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыФОМС = (БазаФОМСВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаФОМСВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыФОМС = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыФОМС = ОблагаемаяБазаФОМСВсегоТекущийМесяц / БазаФОМСВсегоТекущийМесяц;
			КонецЕсли;
			
			
			БазаФССВсегоПоТекущийМесяц    = БазаФСС[1] + БазаФСС[2] + БазаФСС[3] + БазаФСС[4];
			БазаФССВсегоТекущийМесяц      = БазаФССТекущийМесяц[1] + БазаФССТекущийМесяц[2] + БазаФССТекущийМесяц[3] + БазаФССТекущийМесяц[4];
			БазаФССВсегоПоПредыдущийМесяц = БазаФССВсегоПоТекущийМесяц - БазаФССВсегоТекущийМесяц;
			
			// Вся облагаемая база текущего месяца, с учетом ограничения сверху
			ОблагаемаяБазаФССВсегоТекущийМесяц = Мин(БазаФССВсегоПоТекущийМесяц, ПределДоходов) - БазаФССВсегоПоПредыдущийМесяц;
			
			// вычислим месячную долю базы, которая учавствует в расчете
			// это для месяца, в котором превысили предел
			Если (БазаФССВсегоПоПредыдущийМесяц &gt;= ПределДоходов) и (БазаФССВсегоПоТекущийМесяц &gt;= ПределДоходов)  Тогда 
				// предел превышен
				КоэффициентБазыФСС = 0;
			ИначеЕсли БазаФССВсегоПоТекущийМесяц &lt;= ПределДоходов  Тогда
				//не достигли предела, вся база входит в облагаемую
				Если (БазаФССВсегоПоПредыдущийМесяц &lt; ПределДоходов) Тогда
					//не достигли предела, вся база входит в облагаемую
					КоэффициентБазыФСС = 1;
				ИначеЕсли ОблагаемаяБазаФССВсегоТекущийМесяц &lt;&gt; 0 Тогда //предел был достигнут в прошлом месяце
					КоэффициентБазыФСС = (БазаФССВсегоПоТекущийМесяц - ПределДоходов) / ОблагаемаяБазаФССВсегоТекущийМесяц;
				Иначе
					КоэффициентБазыФСС = 0;
				КонецЕсли;
			Иначе
				КоэффициентБазыФСС = ОблагаемаяБазаФССВсегоТекущийМесяц / БазаФССВсегоТекущийМесяц;
			КонецЕсли;
			
			ТаблицаОсновныхТарифов.ПолучитьСтрокуПоНомеру(Сч);
			ОсновнойТариф = ТаблицаОсновныхТарифов.ВидТарифа;
			
			Для СчТарифов = 1 по 4 Цикл
				
				ИмяРаздела = ?(СчТарифов = 1,"",?(СчТарифов = 2,"Инвалид",?(СчТарифов = 3,"ЕНВД","ЛТ")));
				
				Если СчТарифов = 1 Тогда 
					
					Если Сч = 1 Тогда 
						//первый месяц
						ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
						ТаблицаБазаОсновнойТариф.ВидТарифа			= ОсновнойТариф;
						ТаблицаБазаОсновнойТариф.БазаПФР			= БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
						ТаблицаБазаОсновнойТариф.БазаФСС			= БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
						ТаблицаБазаОсновнойТариф.БазаФОМС			= БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
						
					Иначе
						ТаблицаБазаОсновнойТариф.Загрузить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБаза"));
						НомерСтрокиТаблицы = "";
						Если ТаблицаБазаОсновнойТариф.НайтиЗначение(ОсновнойТариф,НомерСтрокиТаблицы,"ВидТарифа") = 1 Тогда
							ТаблицаБазаОсновнойТариф.ПолучитьСтрокуПоНомеру(НомерСтрокиТаблицы); 
							ТаблицаБазаОсновнойТариф.ВидТарифа			= ОсновнойТариф;
							ТаблицаБазаОсновнойТариф.БазаПФР			= ТаблицаБазаОсновнойТариф.БазаПФР  + БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
							ТаблицаБазаОсновнойТариф.БазаФСС			= ТаблицаБазаОсновнойТариф.БазаФСС  + БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
							ТаблицаБазаОсновнойТариф.БазаФОМС			= ТаблицаБазаОсновнойТариф.БазаФОМС + БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
							
						Иначе
							ТаблицаБазаОсновнойТариф.НоваяСтрока(); 
							ТаблицаБазаОсновнойТариф.ВидТарифа			= ОсновнойТариф;
							ТаблицаБазаОсновнойТариф.БазаПФР			= БазаПФРТекущийМесяц[1] * КоэффициентБазыПФР;
							ТаблицаБазаОсновнойТариф.БазаФСС			= БазаФССТекущийМесяц[1] * КоэффициентБазыФСС;
							ТаблицаБазаОсновнойТариф.БазаФОМС			= БазаФОМСТекущийМесяц[1] * КоэффициентБазыФОМС;
							
						КонецЕсли;
						
					КонецЕсли;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБаза",ТаблицаБазаОсновнойТариф);
					
				Иначе
					
					ОграниченнаяБазаПФР[СчТарифов] = ОграниченнаяБазаПФР[СчТарифов] + БазаПФРТекущийМесяц[СчТарифов] * КоэффициентБазыПФР;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаПФР"+ИмяРаздела,ОграниченнаяБазаПФР[СчТарифов]);
					
					ОграниченнаяБазаФОМС[СчТарифов] = ОграниченнаяБазаФОМС[СчТарифов] + БазаФОМСТекущийМесяц[СчТарифов] * КоэффициентБазыФОМС;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФОМС"+ИмяРаздела,ОграниченнаяБазаФОМС[СчТарифов]); 
					
					ОграниченнаяБазаФСС[СчТарифов] = ОграниченнаяБазаФСС[СчТарифов] + БазаФССТекущийМесяц[СчТарифов] * КоэффициентБазыФСС;
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФСС"+ИмяРаздела,ОграниченнаяБазаФСС[СчТарифов]);
					
				КонецЕсли;
				
			КонецЦикла;
			
			ИсчисленоПФР = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФР");
			ИсчисленоПФРЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоПФРЕНВД");
			ИсчисленоФФОМС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМС");
			ИсчисленоФФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМСЕНВД");
			ИсчисленоФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФСС");
			ИсчисленоФССЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ИсчисленоФССЕНВД");
			
			
			ОблагаемаяБазаПФРЕНВД  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаПФРЕНВД");
			ОблагаемаяБазаФОМСЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФОМСЕНВД");
			ОблагаемаяБазаФССЕНВД  = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБазаФССЕНВД");
			
			ОблагаемаяБазаПФР = 0;
			ОблагаемаяБазаФОМС = 0;
			ОблагаемаяБазаФСС = 0;
			ОблагаемаяБазаПоТекущийМесяцТаблица	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы,"ОграниченнаяБаза");
			ОблагаемаяБазаПоТекущийМесяцТаблица.ВыбратьСтроки();
			Пока ОблагаемаяБазаПоТекущийМесяцТаблица.ПолучитьСтроку()=1 Цикл
				// цикл по всем тарифам, которые использовались в организации
				ОблагаемаяБазаПФР  = ОблагаемаяБазаПФР  + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаПФР;
				ОблагаемаяБазаФОМС = ОблагаемаяБазаФОМС + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФОМС;
				ОблагаемаяБазаФСС  = ОблагаемаяБазаФСС + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФСС;
			КонецЦикла;
			
			Если Сч&gt;1 Тогда
				
				ИсчисленоПФР = ИсчисленоПФР - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФР");
				ИсчисленоПФРЕНВД = ИсчисленоПФРЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРЕНВД");
				ИсчисленоФФОМС = ИсчисленоФФОМС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМС");
				ИсчисленоФФОМСЕНВД = ИсчисленоФФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМСЕНВД"); 
				ИсчисленоФСС = ИсчисленоФСС - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФСС");
				ИсчисленоФССЕНВД = ИсчисленоФССЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФССЕНВД");
				
				ОблагаемаяБазаПФРЕНВД  = ОблагаемаяБазаПФРЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаПФРЕНВД");
				ОблагаемаяБазаФОМСЕНВД = ОблагаемаяБазаФОМСЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаФОМСЕНВД");
				ОблагаемаяБазаФССЕНВД  = ОблагаемаяБазаФССЕНВД - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБазаФССЕНВД");
				
				ОблагаемаяБазаПФР1 = 0;
				ОблагаемаяБазаФОМС1 = 0;
				ОблагаемаяБазаФСС1 = 0;
				ОблагаемаяБазаПоТекущийМесяцТаблица	= ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ОграниченнаяБаза");
				ОблагаемаяБазаПоТекущийМесяцТаблица.ВыбратьСтроки();
				Пока ОблагаемаяБазаПоТекущийМесяцТаблица.ПолучитьСтроку()=1 Цикл
					// цикл по всем тарифам, которые использовались в организации
					ОблагаемаяБазаПФР1  = ОблагаемаяБазаПФР1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаПФР;
					ОблагаемаяБазаФОМС1 = ОблагаемаяБазаФОМС1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФОМС;
					ОблагаемаяБазаФСС1 = ОблагаемаяБазаФСС1 + ОблагаемаяБазаПоТекущийМесяцТаблица.БазаФСС;
				КонецЦикла;  
				ОблагаемаяБазаПФР  = ОблагаемаяБазаПФР  - ОблагаемаяБазаПФР1;
				ОблагаемаяБазаФОМС = ОблагаемаяБазаФОМС - ОблагаемаяБазаФОМС1;
				ОблагаемаяБазаФСС  = ОблагаемаяБазаФСС - ОблагаемаяБазаФСС1;
				
			КонецЕсли; 
			
			
			КоэфЕНВД_ПФР = ?((ОблагаемаяБазаПФРЕНВД+ОблагаемаяБазаПФР)=0,0,ОблагаемаяБазаПФРЕНВД/(ОблагаемаяБазаПФРЕНВД+ОблагаемаяБазаПФР));
			КоэфЕНВД_ФОМС = ?((ОблагаемаяБазаФОМСЕНВД+ОблагаемаяБазаФОМС)=0,0,ОблагаемаяБазаФОМСЕНВД/(ОблагаемаяБазаФОМСЕНВД+ОблагаемаяБазаФОМС));
			КоэфЕНВД_ФСС = ?((ОблагаемаяБазаФССЕНВД+ОблагаемаяБазаФСС)=0,0,ОблагаемаяБазаФССЕНВД/(ОблагаемаяБазаФССЕНВД+ОблагаемаяБазаФСС));
			
			ИсчисленоПФР = ИсчисленоПФР + ИсчисленоПФРЕНВД; 
			ИсчисленоПФРЕНВД = Окр(ИсчисленоПФР*КоэфЕНВД_ПФР,2);
			ИсчисленоПФР = ИсчисленоПФР - ИсчисленоПФРЕНВД;
			
			ИсчисленоФФОМС = ИсчисленоФФОМС + ИсчисленоФФОМСЕНВД; 
			ИсчисленоФФОМСЕНВД = Окр(ИсчисленоФФОМС*КоэфЕНВД_ФОМС,2);
			ИсчисленоФФОМС = ИсчисленоФФОМС - ИсчисленоФФОМСЕНВД;
			
			ИсчисленоФСС = ИсчисленоФСС + ИсчисленоФССЕНВД; 
			ИсчисленоФССЕНВД = Окр(ИсчисленоФСС*КоэфЕНВД_ФСС,2);
			ИсчисленоФСС = ИсчисленоФСС - ИсчисленоФССЕНВД;
			
			Если Сч&gt;1 Тогда 
				
				ИсчисленоПФР = ИсчисленоПФР + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФР");
				ИсчисленоПФРЕНВД = ИсчисленоПФРЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоПФРЕНВД");
				ИсчисленоФФОМС = ИсчисленоФФОМС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМС");
				ИсчисленоФФОМСЕНВД = ИсчисленоФФОМСЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФФОМСЕНВД");
				ИсчисленоФСС = ИсчисленоФСС + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФСС");
				ИсчисленоФССЕНВД = ИсчисленоФССЕНВД + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаТаблицы-1,"ИсчисленоФССЕНВД");
				
			КонецЕсли;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФР",ИсчисленоПФР);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоПФРЕНВД",ИсчисленоПФРЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМС",ИсчисленоФФОМС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФФОМСЕНВД",ИсчисленоФФОМСЕНВД);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФСС",ИсчисленоФСС);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаТаблицы,"ИсчисленоФССЕНВД",ИсчисленоФССЕНВД);
			
		КонецЕсли;
		
	КонецЦикла; // цикл по месяцам 

	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Сортировать("Физлицо, Период");   
	
	ВремТаблицаЕСННачисления.Сортировать("Сотрудник, ПериодРегистрации"); 
	
	ВремТаблицаСтраховыеВзносыСведенияОДоходах.Свернуть("Период,Физлицо,ВидДохода,ОблагаетсяЕНВД,ВидРасчета,ДокументОснование,ОблагаетсяПоДополнительномуТарифу,ЯвляетсяДоходомФармацевта,ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ,ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаСтраховыеВзносыСведенияОДоходах, ТаблицаСтраховыеВзносыСведенияОДоходах);
	
	ВремТаблицаЕСННачисления.Свернуть("Сотрудник,Физлицо,ПериодРегистрации,ПериодДействия,ПериодДействияНачало,ПериодДействияКонец,КодДоходаЕСН,ВидРасчета,ОблагаетсяЕНВД,ГрафикРаботы,ВидУчетаВремени,ДокументОснование,НомерСтрокиДокумента,Сторно","Результат,Скидка");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаЕСННачисления,ТаблицаЕСННачисления); 
	
КонецЦикла; // обхода сотров и физлиц									

ВремТаблицаСтраховыеВзносыСведенияОДоходах = 0;
ВремТаблицаЕСННачисления = 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьВидПВР" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР = ИсходящиеДанные;

Если ПустоеЗначение(ВР) = 1 Тогда
	Возврат "ОсновныеНачисления";
КонецЕсли;

Если ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержания) = 1 Тогда
	Возврат "Удержания";
КонецЕсли;
	
Если (ВР = ВидРасчета.ОплатаПоДоговору)
 ИЛИ (ВР = ВидРасчета.Авторские)
 ИЛИ (ВР = ВидРасчета.КомпенсацияОтпуска)
 ИЛИ (ВР = ВидРасчета.КомпенсацияОтпускаСверх28дней)
 ИЛИ (ВР = ВидРасчета.ВыходноеПособие)
 ИЛИ (ВР = ВидРасчета.ЕдиновременныеПособияИзСоцстраха)
 ИЛИ (ВР = ВидРасчета.СохраняемыйЗаработокНаВремяТрудоустройства)
 ИЛИ (ВР = ВидРасчета.ДивидендыСотрудников)
 ИЛИ (ВР = ВидРасчета.ДивидендыУчредителей)
 ИЛИ (ВР = ВидРасчета.ЛицензионныеВыплаты)
 ИЛИ (ВР = ВидРасчета.ВыплатыЗаОтчуждениеИсключительныхПрав)
Тогда
	Возврат "ДополнительныеНачисления"; // Эти ВР в ЗУП/ЗБУ хранятся в доп. начислениях
КонецЕсли;
	
Если (ВР = ВидРасчета.КосвенноСдельная) Тогда
	Возврат "ОсновныеНачисления"; // Эти ВР в ЗУП/ЗБУ хранятся в осн. начислениях
КонецЕсли;
	
Если ВР.ВходитВГруппу(ГруппаРасчетов.НерегистрируемыеВНачисленииУдержании) = 1 Тогда
	Возврат "ДополнительныеНачисления";
КонецЕсли;

Если ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1 Тогда
	Если глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет", ВР, 1) = 1 Тогда
		Порядок = глСпрВидыРасчетов.ПорядокРасчета;
		
		Если (Порядок &lt;&gt; Перечисление.ХарактерНачисления.Суммой)
		   И (Порядок &lt;&gt; Перечисление.ХарактерНачисления.СуммойПоЧасам)
		   И (Порядок &lt;&gt; Перечисление.ХарактерНачисления.ПоРазрядуЕТС)
		   И (глСпрВидыРасчетов.РазовоеНачисление = 1) Тогда
			Возврат "ДополнительныеНачисления";
		КонецЕсли; 
	КонецЕсли;
КонецЕсли;
	
Возврат "ОсновныеНачисления";</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьВРОрганизацииПоПростою" ИспользуетсяПриЗагрузке="false">
			<Текст>ФормаТруда		= ИсходящиеДанные;
ТЗВидаРасчета	= ВходящиеДанные;
ВР				= Источник;

ТЗВидаРасчета.ВР	= ВР;

// Заполним значения по умолчанию
ЗаполнитьТЗПВРПоУмолчанию(ТЗВидаРасчета, ВР);

Если (ФормаТруда = Перечисление.ФормыТруда.ПоврПодневнОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.КомиссОкладВыручка) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПодневнОкладОтОбратного) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПремПодневнОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ТабельПодневнОклад) Тогда
	ТЗВидаРасчета.Наименование								= "ПростойОкладПоДням";
	ТЗВидаРасчета.СпособРасчета								= "ПоМесячнойТарифнойСтавкеПоДням";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Простой";
	
ИначеЕсли (ФормаТруда = Перечисление.ФормыТруда.ПоврПочасОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПремПочасОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ТабельПочасОклад) Тогда
	ТЗВидаРасчета.Наименование								= "ПростойОкладПоЧасам";
	ТЗВидаРасчета.СпособРасчета								= "ПоМесячнойТарифнойСтавкеПоЧасам";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Простой";
	
ИначеЕсли (ФормаТруда = Перечисление.ФормыТруда.ПоврПочасТариф) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПремПочасТариф) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ТабельПочасТариф) Тогда
	ТЗВидаРасчета.Наименование								= "ПростойТарифЧасовой";
	ТЗВидаРасчета.СпособРасчета								= "ПоЧасовойТарифнойСтавке";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Простой";
	
Иначе
	ТЗВидаРасчета.Наименование								= "ПростойТарифДневной";
	ТЗВидаРасчета.СпособРасчета								= "ПоДневнойТарифнойСтавке";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Простой";
	
КонецЕсли;

// Запомним, какое начисление по простою выгружали
ВыгруженныеНачисленияПоПростою = Параметры.ВыгруженныеНачисленияПоПростою;
Если ВыгруженныеНачисленияПоПростою.НайтиЗначение(ТЗВидаРасчета.Наименование, 0, "Наименование") = 0 Тогда
	ВыгруженныеНачисленияПоПростою.НоваяСтрока();
	ВыгруженныеНачисленияПоПростою.Наименование	= ТЗВидаРасчета.Наименование;
	ВыгруженныеНачисленияПоПростою.ВР			= ТЗВидаРасчета.ВР;
КонецЕсли;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьВРОрганизацииПоФормеТруда" ИспользуетсяПриЗагрузке="false">
			<Текст>ФормаТруда		= ИсходящиеДанные;
ТЗВидаРасчета	= ВходящиеДанные;
ВР				= Источник;
ТипВидОклада	= Приемник;

ТЗВидаРасчета.ВР	= ВР;

// Заполним значения по умолчанию
ЗаполнитьТЗПВРПоУмолчанию(ТЗВидаРасчета, ВР);

Если (ПустоеЗначение(ФормаТруда) = 1) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПодневнОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПодневнОкладОтОбратного) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПремПодневнОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ТабельПодневнОклад) Тогда
	
	Если (ТипВидОклада = "Справочник.ТарифныеРазряды") Или (ТипВидОклада = "Справочник.ЕТС") Тогда
		ТЗВидаРасчета.Наименование								= "Оклад по дням (по тарифному разряду)";
		ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
		ТЗВидаРасчета.СпособРасчета								= "ПоМесячнойТарифнойСтавкеПоДням";
		ТЗВидаРасчета.ТребуетВводаТарифногоРазряда				= 1;
		ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
		ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
		ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";
		
	Иначе
		ТЗВидаРасчета.Наименование								= "ОкладПоДням";
		ТЗВидаРасчета.СпособРасчета								= "ПоМесячнойТарифнойСтавкеПоДням";
		ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
		ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
		
	КонецЕсли;
	
ИначеЕсли (ФормаТруда = Перечисление.ФормыТруда.ПоврПочасОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ПоврПремПочасОклад) ИЛИ
	(ФормаТруда = Перечисление.ФормыТруда.ТабельПочасОклад) Тогда
	
	Если (ТипВидОклада = "Справочник.ТарифныеРазряды") Или (ТипВидОклада = "Справочник.ЕТС") Тогда
		ТЗВидаРасчета.Наименование								= "Оклад по часам (по тарифному разряду)";
		ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
		ТЗВидаРасчета.СпособРасчета								= "ПоМесячнойТарифнойСтавкеПоЧасам";
		ТЗВидаРасчета.ТребуетВводаТарифногоРазряда				= 1;
		ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
		ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
		ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";
		
	Иначе
		ТЗВидаРасчета.Наименование								= "ОкладПоЧасам";
		ТЗВидаРасчета.СпособРасчета								= "ПоМесячнойТарифнойСтавкеПоЧасам";
		ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
		ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
		
	КонецЕсли;
	
ИначеЕсли (ФормаТруда = Перечисление.ФормыТруда.ПоврПочасТариф)
	ИЛИ (ФормаТруда = Перечисление.ФормыТруда.ПоврПремПочасТариф)
	ИЛИ (ФормаТруда = Перечисление.ФормыТруда.ТабельПочасТариф)
	ИЛИ (ФормаТруда = Перечисление.ФормыТруда.Аккордная) Тогда
	
	Если (ТипВидОклада = "Справочник.ТарифныеРазряды") Или (ТипВидОклада = "Справочник.ЕТС") Тогда
		ТЗВидаРасчета.Наименование								= "Оплата по часовому тарифу (по тарифному разряду)";
		ТЗВидаРасчета.КатегорияРасчета							= "Первичное";
		ТЗВидаРасчета.СпособРасчета								= "ПоЧасовойТарифнойСтавке";
		ТЗВидаРасчета.ТребуетВводаТарифногоРазряда				= 1;
		ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
		ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
		ТЗВидаРасчета.ВидСтажаСЗВ4								= "ВключаетсяВСтажДляДосрочногоНазначенияПенсии";
		
	Иначе
		ТЗВидаРасчета.Наименование								= "ТарифЧасовой";
		ТЗВидаРасчета.СпособРасчета								= "ПоЧасовойТарифнойСтавке";
		ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
		ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
		
	КонецЕсли;
	
ИначеЕсли (ФормаТруда = Перечисление.ФормыТруда.СдельнаяПрямая)
	ИЛИ (ФормаТруда = Перечисление.ФормыТруда.СдельноПремиальная)
	ИЛИ (ФормаТруда = Перечисление.ФормыТруда.СдельноПрогрессивная)
	ИЛИ (ФормаТруда = Перечисление.ФормыТруда.КосвенноСдельная) Тогда
	ТЗВидаРасчета.Наименование								= "СдельнаяОплата";
	ТЗВидаРасчета.СпособРасчета								= "СдельныйЗаработок";
	ТЗВидаРасчета.ВидВремени								= "ОтработанноеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
	
ИначеЕсли ФормаТруда = Перечисление.ФормыТруда.КомиссВыручка Тогда		// На комиссионной основе (% выручки)
	ТЗВидаРасчета = ЗаполнитьВРНаКоммисионнойОснове(ТЗВидаРасчета)
	
ИначеЕсли ФормаТруда = Перечисление.ФормыТруда.КомиссВыручкаОклад Тогда	// На комиссионной основе (% выручки, не менее оклада)
	ТЗВидаРасчета = ЗаполнитьВРНаКомиссионнойОсновеДоОклада(ТЗВидаРасчета)

ИначеЕсли ФормаТруда = Перечисление.ФормыТруда.КомиссОкладВыручка Тогда	// На комиссионной основе (оклад + % выручки)
	ТЗВидаРасчета = ЗаполнитьВРНаКомиссионнойОсновеСОкладом(ТЗВидаРасчета)

КонецЕсли;

// Запомним, какое основное начисление выгружали
ВыгруженныеНачисленияПоФормеТруда = Параметры.ВыгруженныеНачисленияПоФормеТруда;
Если ВыгруженныеНачисленияПоФормеТруда.НайтиЗначение(ТЗВидаРасчета.Наименование, 0, "Наименование") = 0 Тогда
	ВыгруженныеНачисленияПоФормеТруда.НоваяСтрока();
	ВыгруженныеНачисленияПоФормеТруда.Наименование	= ТЗВидаРасчета.Наименование;
	ВыгруженныеНачисленияПоФормеТруда.ВР			= ТЗВидаРасчета.ВР;
КонецЕсли;

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОпределитьПериодРегистрацииДокумента" ИспользуетсяПриЗагрузке="false">
			<Текст>ПроверяемыйДокумент = ИсходящиеДанные;

ПроведенВПрошлом = 0;

Если ПроверяемыйДокумент.Вид() = "Исправление" Тогда
	Если ПроверяемыйДокумент.ИсправлениеЗаднимЧислом=0 Тогда
		ПроверяемыйДокумент.ВыбратьСтроки();
		Пока ПроверяемыйДокумент.ПолучитьСтроку()=1 Цикл
			Если (ПроверяемыйДокумент.Результат&lt;&gt;ПроверяемыйДокумент.ИсправленныйРезультат)или(ПроверяемыйДокумент.Дни&lt;&gt;ПроверяемыйДокумент.ИсправленныеДни)или(ПроверяемыйДокумент.Часы&lt;&gt;ПроверяемыйДокумент.ИсправленныеЧасы) Тогда
				ЖурналЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
				ЖурналЗарплата.ВыбратьЗаписиПоОбъекту(ПроверяемыйДокумент.Сотрудник,ПроверяемыйДокумент.ДатаНачала,ПроверяемыйДокумент.ДатаОкончания);
				Пока ЖурналЗарплата.ПолучитьЗапись() = 1 Цикл
					Если ЖурналЗарплата.РодительскийДокумент = ПроверяемыйДокумент Тогда
						Если ЖурналЗарплата.ПериодРегистрации.ДатаНачала &lt; ЖурналЗарплата.НачалоТекущегоПериода() Тогда
							ПроведенВПрошлом = 1;
						КонецЕсли;
						Прервать
					КонецЕсли;
				КонецЦикла;
				Прервать
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
ИначеЕсли ПроверяемыйДокумент.Вид() = "Сторно" Тогда
	ЖурналЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата"); 
	ЖурналЗарплата.ВыбратьЗаписиПоДокументу(ПроверяемыйДокумент.СторнируемыйДокумент);
	Пока ЖурналЗарплата.ПолучитьЗапись() = 1 Цикл
		Если ЖурналЗарплата.РодительскийДокумент = ПроверяемыйДокумент Тогда
			Если ЖурналЗарплата.ПериодРегистрации.ДатаНачала &lt; ЖурналЗарплата.НачалоТекущегоПериода() Тогда
				ПроведенВПрошлом = 1; 
				Прервать
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;	
Иначе
	Для Сч=1 По Метаданные.ЖурналРасчетов() Цикл
		ЖурналЗарплата = СоздатьОбъект("ЖурналРасчетов."+Метаданные.ЖурналРасчетов(Сч).Идентификатор);
		Если ЖурналЗарплата.ВыбратьЗаписиПоДокументу(ПроверяемыйДокумент)=1 Тогда
			Если ЖурналЗарплата.ПериодРегистрации.ДатаНачала &lt; ЖурналЗарплата.НачалоТекущегоПериода() Тогда
				ПроведенВПрошлом = 1;
				Прервать
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

Если ПроведенВПрошлом = 1 Тогда
	Возврат ЖурналЗарплата.ПериодРегистрации.ДатаНачала;
КонецЕсли;

Возврат Дата(1,1,1);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОсновныеНачисленияОрганизацийПоляПоиска" ИспользуетсяПриЗагрузке="true">
			<Текст>НаименованиеВР = СвойстваПоиска.Получить("Наименование");

Если НомерВариантаПоиска = 1 Тогда
	Если Найти(НаименованиеВР, " ") = 0 Тогда
		СсылкаНаОбъект = одНайтиОбъектПоСвойству(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, "{ИмяПредопределенногоЭлемента}", НаименованиеВР);
	КонецЕсли;
	
ИначеЕсли НомерВариантаПоиска = 2 Тогда
	СсылкаНаОбъект = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций, НаименованиеВР);
	
Иначе
	СтрокаИменСвойствПоиска = "Наименование";
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОтражениеЗарплатыВРеглУчетеПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
			<Текст>НачатьТранзакцию();
Объект.ОбменДанными.Загрузка = Ложь;
Объект.Записать();

Объект.АвтозаполнениеПроводок();

Если Объект.ОтражениеВУчете.Количество() = 0 Тогда
	ОтменитьТранзакцию();
	Отказ = Истина;
	
Иначе
	Объект.Записать();
	Попытка
		Объект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение КонецПопытки;
	ЗафиксироватьТранзакцию();
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ОтразитьДоходВТаблицах" ИспользуетсяПриЗагрузке="false">
			<Текст>ДоходыВычетыНалогиСотрудников	= ИсходящиеДанные;
НомерСтрокиСотрудника			= ВходящиеДанные;
МесяцДохода						= Источник;
Куда							= Приемник;
Сколько							= ТипПриемника;

Для Сч = МесяцДохода По 12 Цикл
	ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,Куда,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,Куда)+Сколько);
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПереписатьВычетыВТаблицу" ИспользуетсяПриЗагрузке="false">
			<Текст>ВремТаблицаНДФЛСведенияОДоходах	= ИсходящиеДанные;
ТаблицаВычетовКДоходам			= ВходящиеДанные; 

ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");

ТаблицаВычетовКДоходам.Свернуть("КодДохода, КодВычета, МесяцНалоговогоПериода", "СуммаВычета");
ТаблицаВычетовКДоходам.Сортировать("КодДохода, МесяцНалоговогоПериода");

ТаблицаВычетовКДоходам.ВыбратьСтроки();
Пока ТаблицаВычетовКДоходам.ПолучитьСтроку()=1 Цикл

	КодДохода = ТаблицаВычетовКДоходам.КодДохода; 
	КодВычета = ТаблицаВычетовКДоходам.КодВычета;
	МесяцНалоговогоПериода = ТаблицаВычетовКДоходам.МесяцНалоговогоПериода;
	СуммаВычета = ТаблицаВычетовКДоходам.СуммаВычета;
	
	ВремТаблицаНДФЛСведенияОДоходах.Выгрузить(ТаблицаРаспределения);
	ТаблицаРаспределения.НоваяКолонка("НомерСтрокиОсновнойТаблицы");
	
	КоличествоСтрок = ТаблицаРаспределения.КоличествоСтрок();
	Для Номер=1 По КоличествоСтрок Цикл
		ТаблицаРаспределения.ПолучитьСтрокуПоНомеру(КоличествоСтрок - Номер + 1);
		Если (ТаблицаРаспределения.КодДохода = КодДохода) и (ТаблицаРаспределения.Период = МесяцНалоговогоПериода) Тогда
			ТаблицаРаспределения.НомерСтрокиОсновнойТаблицы = КоличествоСтрок - Номер + 1;
		Иначе
			ТаблицаРаспределения.УдалитьСтроку(КоличествоСтрок - Номер + 1);
		КонецЕсли;	
	КонецЦикла;	
	
	СуммаДохода = ТаблицаРаспределения.Итог("СуммаДохода");
	ОсталосьРаспределить = СуммаВычета;
	КоличествоСтрок = ТаблицаРаспределения.КоличествоСтрок();
	Для Номер=1 По КоличествоСтрок Цикл
		ТаблицаРаспределения.ПолучитьСтрокуПоНомеру(Номер);
		ВремТаблицаНДФЛСведенияОДоходах.ПолучитьСтрокуПоНомеру(ТаблицаРаспределения.НомерСтрокиОсновнойТаблицы);
		ВремТаблицаНДФЛСведенияОДоходах.КодВычета = КодВычета;
		Если Номер = КоличествоСтрок Тогда
			ВремТаблицаНДФЛСведенияОДоходах.СуммаВычета = ОсталосьРаспределить;	
		Иначе
			СуммаВычетаДоля = Окр(ТаблицаРаспределения.СуммаДохода/СуммаДохода * СуммаВычета, 2);
			ВремТаблицаНДФЛСведенияОДоходах.СуммаВычета = СуммаВычетаДоля;
			ОсталосьРаспределить = ОсталосьРаспределить - СуммаВычетаДоля;
		КонецЕсли;	
	КонецЦикла;
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВидАвторскогоДоговора" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР = ИсходящиеДанные;

Если ВР = ВидРасчета.Авторские Тогда
	Возврат "АвторскогоЗаказа";
	
ИначеЕсли ВР = ВидРасчета.ЛицензионныеВыплаты Тогда
	Возврат "Лицензионный";
	
ИначеЕсли ВР = ВидРасчета.ВыплатыЗаОтчуждениеИсключительныхПрав Тогда
	Возврат "ОбОтчужденииИсключительныхПрав";
	
КонецЕсли;

Возврат "";</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВидНачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>ПараметрВидРасчета = ИсходящиеДанные;

Если глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет",ПараметрВидРасчета,1)=1  Тогда
	Если глСпрВидыРасчетов.ВидНачисленияДляНалогаНаПрибыль.Выбран() = 1 Тогда
		Возврат глСпрВидыРасчетов.ВидНачисленияДляНалогаНаПрибыль
	КонецЕсли;
КонецЕсли; 

Если (ПараметрВидРасчета = ВидРасчета.ОплатаПоНаряду) 
	 или (ПараметрВидРасчета = ВидРасчета.КосвенноСдельная) 
	 или (ПараметрВидРасчета = ВидРасчета.СдельныйНаряд) 
	 или (ПараметрВидРасчета = ВидРасчета.ОплатаПоТарифу) 
	 или (ПараметрВидРасчета = ВидРасчета.ОплатаПраздничных) 
	 или (ПараметрВидРасчета = ВидРасчета.ОплатаПоТабелю) 
	 или (ПараметрВидРасчета = ВидРасчета.ОплатаПоОкладу) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп1ст255    
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.ЕжемесячнаяПремия)
	 или (ПараметрВидРасчета.ВходитВГруппу(ГруппаРасчетов.ПремииКвартальные)=1) 
	 или (ПараметрВидРасчета = ВидРасчета.ПремияМесячная) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп2ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.ДоплатаЗаВечерниеЧасы) 
	 или (ПараметрВидРасчета = ВидРасчета.ДоплатаЗаВечерниеЧасыПоТабелю) 
	 или (ПараметрВидРасчета = ВидРасчета.ДоплатаЗаВредность) 
	 или (ПараметрВидРасчета = ВидРасчета.ДоплатаЗаНочныеЧасы) 
	 или (ПараметрВидРасчета = ВидРасчета.ДоплатаЗаНочныеЧасыПоТабелю) 
	 или (ПараметрВидРасчета = ВидРасчета.ДоплатаЗаПраздничные) 
	 или (ПараметрВидРасчета = ВидРасчета.ОплатаСверхурочныхЧасов) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп3ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.ОплатаПоСреднемуЗаработку) 
	 или (ПараметрВидРасчета = ВидРасчета.Простой) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп6ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.ОтпускДополнительный) 
	 или (ПараметрВидРасчета = ВидРасчета.КомпенсацияОтпускаСверх28дней) 
	 или (ПараметрВидРасчета = ВидРасчета.ОтпускОчередной) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп7ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.КомпенсацияОтпуска) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп8ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.СохраняемыйЗаработокНаВремяТрудоустройства) 
	 или (ПараметрВидРасчета = ВидРасчета.ВыходноеПособие) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп9ст255 	
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.НадбавкаЗаВыслугуЛет) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп10ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.РайонныйКоэффициент) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп11ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.СевернаяНадбавка) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп12ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.ОтпускУчебный) Тогда
	Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп13ст255
	
ИначеЕсли (ПараметрВидРасчета = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2004)
	  или (ПараметрВидРасчета = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2005)
	  или (ПараметрВидРасчета = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2007)
	  или (ПараметрВидРасчета = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2010)
	  или (ПараметрВидРасчета = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2011) Тогда
	Возврат ""
	
Иначе
	
КонецЕсли;

Возврат Перечисление.ВидыНачисленийПоОплатеТруда.пп25ст255</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВидРаботыСотрудника" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник	= ИсходящиеДанные;
Документ	= ВходящиеДанные;
ДатаСобытия = Источник;

Если (Документ.Вид() = "БольничныйЛист") или (Документ.Вид() = "ОтпускПоУходуЗаРебенком") Тогда
	
	Если Документ.Вид() = "БольничныйЛист" Тогда
		ДатаНачалаСобытия = Документ.Начало;
		Если Документ.ПервичныйБольничный.Выбран() = 1 Тогда 
			//сначала поищем самый первый день самого первого больничного:
			ПредыдущийПервичный = Документ.ПервичныйБольничный;
			Пока ПредыдущийПервичный.ПервичныйБольничный.Выбран() = 1  Цикл
				ПредыдущийПервичный = ПредыдущийПервичный.ПервичныйБольничный;
			КонецЦикла;
			ДатаНачалаСобытия = ПредыдущийПервичный.Начало;
		КонецЕсли; 
		
	ИначеЕсли ПустаяСтрока(ДатаСобытия) = 1 Тогда
		Возврат 1; 
		
	Иначе
		ДатаНачалаСобытия = НачМесяца(ДатаСобытия);
		
	КонецЕсли;
	
	СостояниеСотрудника = Сотрудник.СостояниеФизлица.Получить(ДатаНачалаСобытия-1);
	Если СостояниеСотрудника = Перечисление.СостояниеФизлица.СотрудникНеосновной Тогда
		Возврат 2;
		
	ИначеЕсли (СостояниеСотрудника = Перечисление.СостояниеФизлица.СотрудникОсновной) Или (СостояниеСотрудника = Перечисление.СостояниеФизлица.Госслужащий) Тогда 	
		Возврат 1;
		
	ИначеЕсли (ПустоеЗначение(СостояниеСотрудника) = 1) Или (СостояниеСотрудника = Перечисление.СостояниеФизлица.ВременноНеРаботает) Тогда
		
		ДокументПриказОПриеме = глПриказПоСотруднику(Сотрудник, ДатаНачалаСобытия, "ПриказОПриемеНаРаботу");
		
		Если ДокументПриказОПриеме.Выбран() = 0 Тогда
			Возврат 1;
		
		ИначеЕсли ДокументПриказОПриеме.ВидРаботы = 0 Тогда
			Возврат 2;    
			
		Иначе
			Возврат 1;
			
		КонецЕсли;
		
	Иначе
		Возврат 1;
		
	КонецЕсли; 
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВидРасчетаПоТипуДоговора" ИспользуетсяПриЗагрузке="false">
			<Текст>ТипДоговора = ИсходящиеДанные;

ВР = "";
Если ТипДоговора = Перечисление.ТипДоговора.АвторскийДоговор Тогда
	ВР	= ВидРасчета.Авторские;
ИначеЕсли ТипДоговора = Перечисление.ТипДоговора.ДоговорПодряда Тогда
	ВР	= ВидРасчета.ОплатаПоДоговору;
ИначеЕсли ТипДоговора = Перечисление.ТипДоговора.ЛицензионныйДоговор Тогда
	ВР	= ВидРасчета.ЛицензионныеВыплаты;
ИначеЕсли ТипДоговора = Перечисление.ТипДоговора.ОбОтчужденииИсключительныхПрав Тогда
	ВР	= ВидРасчета.ВыплатыЗаОтчуждениеИсключительныхПрав;
КонецЕсли;

Возврат ВР;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВидУчетаВремени" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета	= ИсходящиеДанные;
ГрафикРаботы	= ВходящиеДанные;

СпособРасчета								= ТЗВидаРасчета.СпособРасчета;
Если ОпределитьВидПВР(ТЗВидаРасчета.ВР) = "ОсновныеНачисления" Тогда
	ВидВремени								= ТЗВидаРасчета.ВидВремени;
	НачислениеВидУчетаВремени				= ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени;
	ВР										= ТЗВидаРасчета.ВР;
Иначе
	ВидВремени								= "";
	НачислениеВидУчетаВремени				= "";
	ВР										= "";
КонецЕсли;

СуммированныйУчетРабочегоВремени			= 0;
Если ПустоеЗначение(ГрафикРаботы) = 0 Тогда
	Если ГрафикРаботы.ТипГрафика = Перечисление.ГрафикРаботы.СуммированноеВремя Тогда
		СуммированныйУчетРабочегоВремени	= 1;
	КонецЕсли;
КонецЕсли;

// вид учета времени определяется по способу расчета

Если (ВР = ВидРасчета.ДоплатаЗаПраздничные)
	или (ВР = ВидРасчета.ОплатаПраздничных)
	или (ВР = ВидРасчета.ОплатаСверхурочныхЧасов) Тогда
	
	ВидУчетаВремени = "ПоЧасам";
		
ИначеЕсли (СпособРасчета = "ПоМесячнойТарифнойСтавкеПоЧасам")
	или (СпособРасчета = "ОтСтажаПоМесячнойТарифнойСтавкеПоЧасам")
	или (СпособРасчета = "ПоЧасовойТарифнойСтавке")
	или (СпособРасчета = "ОтСтажаПоЧасовойТарифнойСтавке")
	или (СпособРасчета = "СдельныйЗаработок")
	или (ВидВремени = "ЧасовоеНеотработанное")
	или (ВидВремени = "ЧасовоеОтработанноеВПределахНормы") Тогда
	
	ВидУчетаВремени = "ПоЧасам";
		
ИначеЕсли (СуммированныйУчетРабочегоВремени = 1) и ((СпособРасчета = "ДоплатаДоСреднегоЗаработка")
	или (СпособРасчета = "ПоСреднемуЗаработку")
	или (СпособРасчета = "ПоСреднемуЗаработкуФСС")) Тогда 
	
	ВидУчетаВремени = "ПоЧасам";
	
ИначеЕсли СпособРасчета = "ДоплатаЗаВечерниеЧасы" Тогда
	ВидУчетаВремени = "ПоВечернимЧасам";
	
ИначеЕсли СпособРасчета = "ДоплатаЗаНочныеЧасы" Тогда	
	ВидУчетаВремени = "ПоНочнымЧасам";
	
Иначе
	Если (СпособРасчета = "ПроизвольнаяФормула") И (ПустоеЗначение(НачислениеВидУчетаВремени) = 0) Тогда
		Если НачислениеВидУчетаВремени = "РаботаВечерниеЧасы" Тогда
			ВидУчетаВремени = "ПоВечернимЧасам";
			
		ИначеЕсли НачислениеВидУчетаВремени = "РаботаНочныеЧасы" Тогда
			ВидУчетаВремени = "ПоНочнымЧасам";
			
		Иначе
			ВидУчетаВремени = "ПоДням";
			
		КонецЕсли;
	Иначе
		ВидУчетаВремени = "ПоДням";
		
	КонецЕсли;
	
КонецЕсли;

Возврат ВидУчетаВремени;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВРизСправочника" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР = ИсходящиеДанные;

Если глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет", ВР, 1) = 1 Тогда
	Возврат глСпрВидыРасчетов.ТекущийЭлемент()
Иначе
	Возврат глСпрВидыРасчетов
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьВхождениеВБазуСреднего" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР									= ИсходящиеДанные;
ВходитВСреднийЗаработокКак			= ВходящиеДанные;
ВходитВСреднийЗаработокБЛКак		= Источник;
ВходитВСреднийЗаработокБЛ2010Как	= Приемник;

// В переменные ВходитВСреднийЗаработокБЛКак и ВходитВСреднийЗаработокКак
// устанавливаем стрку - имя предопределенного элемента ПВР.СреднийЗаработок
// если пустое значение, значит не входит в средний

СписокНеИндексируемыхВР = СоздатьОбъект("СписокЗначений");
СпрВР = СоздатьОбъект("Справочник.ВидыРасчетов");
СпрВР.ВыбратьЭлементы();
Пока СпрВР.ПолучитьЭлемент()=1 Цикл
	Если СпрВР.НеИндексировать = 1 Тогда
		СписокНеИндексируемыхВР.ДобавитьЗначение(СпрВР.Расчет);    
	КонецЕсли;
КонецЦикла;

// вхождение в средний
Если (ВР=ВидРасчета.ПремияРазовая) Тогда
	
	Если (глВходитВБазу(ВР, ВидРасчета.ОплатаПоСреднемуЗаработку, ГруппаРасчетов.БазаРасчетовОплатыПоСреднему) = 1) Тогда
		ВходитВСреднийЗаработокКак			= "ПоФиксПремиямНеИндексируемые";
	КонецЕсли;
	
	Если глВходитВБазу(ВР, ВидРасчета.ОплатаБЛс2007, ГруппаРасчетов.БазаРасчетовБольничногоЛистаС2007) = 1 Тогда
		ВходитВСреднийЗаработокБЛКак		= "ПоПремиямПособий";
	КонецЕсли;
	
	Если глВходитВБазу(ВР, ВидРасчета.ОплатаБЛс2010, ГруппаРасчетов.БазаРасчетовБольничногоЛистаС2010) = 1 Тогда
		ВходитВСреднийЗаработокБЛ2010Как	= "ПоПремиямПособийС2010";
	КонецЕсли;
	
ИначеЕсли (ВР=ВидРасчета.ПремияПоИтогамГода) Тогда          
	
	ВходитВСреднийЗаработокКак			= "ПоГодовойПремииНеИндексируемые";
	ВходитВСреднийЗаработокБЛКак		= "ПоПремиямПособий";
	ВходитВСреднийЗаработокБЛ2010Как	= "ПоПремиямПособийС2010";
	
ИначеЕсли (ВР=ВидРасчета.ПремияПоИтогамГодаСуммой) Тогда
	
	ВходитВСреднийЗаработокКак			= "ПоФиксГодовойПремииНеИндексируемые";
	ВходитВСреднийЗаработокБЛКак		= "ПоПремиямПособий";
	ВходитВСреднийЗаработокБЛ2010Как	= "ПоПремиямПособийС2010";
	
ИначеЕсли (ВР.ВходитВГруппу(ГруппаРасчетов.ПремииКвартальные)=1) Тогда
	
	Если (ВР=ВидРасчета.ПремияКвартальная) Тогда
		ВходитВСреднийЗаработокКак		= "ПоПремиямНеИндексируемые";
	Иначе
		ВходитВСреднийЗаработокКак		= "ПоФиксПремиямНеИндексируемые";
	КонецЕсли; 
	ВходитВСреднийЗаработокБЛКак		= "ПоПремиямПособий";
	ВходитВСреднийЗаработокБЛ2010Как	= "ПоПремиямПособийС2010";
	
Иначе   
	
	Если глВходитВБазу(ВР, ВидРасчета.ОплатаПоСреднемуЗаработку, ГруппаРасчетов.БазаРасчетовОплатыПоСреднему) = 1 Тогда
		
		Если СписокНеИндексируемыхВР.НайтиЗначение(ВР)=0 Тогда 
			ВходитВСреднийЗаработокКак		= "ПоЗаработкуИндексируемые";
		Иначе
			ВходитВСреднийЗаработокКак		= "ПоЗаработкуНеИндексируемые";	
		КонецЕсли;
		
	КонецЕсли;
	
	Если глВходитВБазу(ВР, ВидРасчета.ОплатаБЛс2007, ГруппаРасчетов.БазаРасчетовБольничногоЛистаС2007) = 1 Тогда
		ВходитВСреднийЗаработокБЛКак		= "ПоЗаработкуПособий";
	КонецЕсли;
	
	Если глВходитВБазу(ВР, ВидРасчета.ОплатаБЛс2010, ГруппаРасчетов.БазаРасчетовБольничногоЛистаС2010) = 1 Тогда
		ВходитВСреднийЗаработокБЛ2010Как	= "ПоЗаработкуПособийС2010";
	КонецЕсли;
	
КонецЕсли;

ВходящиеДанные	= ВходитВСреднийЗаработокКак;
Источник		= ВходитВСреднийЗаработокБЛКак;
Приемник		= ВходитВСреднийЗаработокБЛ2010Как;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьДатуНачалаСобытия" ИспользуетсяПриЗагрузке="false">
			<Текст>Докум = ИсходящиеДанные;

ДатаНачалаСобытия = '  .  .  ';

Если Докум.Вид()="БольничныйЛист" Тогда
	ДатаНачалаСобытия = Докум.Начало;
	Если Докум.ПервичныйБольничный.Выбран() = 1 Тогда 
		//сначала поищем самый первый день самого первого больничного:
		ПредыдущийПервичный = Докум.ПервичныйБольничный;
		Пока ПредыдущийПервичный.ПервичныйБольничный.Выбран() = 1  Цикл
			ПредыдущийПервичный = ПредыдущийПервичный.ПервичныйБольничный;
		КонецЦикла;
		ДатаНачалаСобытия = ПредыдущийПервичный.Начало;
	КонецЕсли;
	
	Если ПустоеЗначение(ДатаНачалаСобытия)=1 Тогда
		ДатаНачалаСобытия = Докум.ДатаДок;
	КонецЕсли;    
КонецЕсли;

Возврат ДатаНачалаСобытия;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьОтражениеВУчетеЗаписи" ИспользуетсяПриЗагрузке="false">
			<Текст>ЗаписьЖР						= ИсходящиеДанные;
Результат						= ВходящиеДанные;
ДоходыВычетыНалогиСотрудников	= Источник;

//в функцию передаем записи журнала расчетов
// начисления, удержания 

// вспомогательная таблица - для распределения результатов по счетам
ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);
ТаблицаРаспределенияННП ="";
ТаблицаРаспределенияЕСН = "";

ТаблицаШаблоновПроводок=0;
глПолучитьРаспределениеРезультата(ЗаписьЖР,ТаблицаРаспределения,ТаблицаРаспределенияННП,ТаблицаРаспределенияЕСН,,,ДоходыВычетыНалогиСотрудников, Результат);
ТаблицаШаблоновПроводок=0;


Если ТаблицаРаспределения.КоличествоСтрок() = 0 Тогда
	// нет данных о распределении
	ТаблицаРаспределения.НоваяСтрока();
	ТаблицаРаспределения.Сумма = Результат;
КонецЕсли;

Возврат ТаблицаРаспределения;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьОтражениеИзШаблона" ИспользуетсяПриЗагрузке="false">
			<Текст>ШаблонПроводки	= ИсходящиеДанные;
КодДохода		= ВходящиеДанные;
ВР				= Источник;

// проверим шаблон проводки, можно-ли из него получить данные
Если ПустоеЗначение(ШаблонПроводки) = 1 Тогда
	//будем использовать шаблон по умолчанию 
	ШаблонПроводки = Константа.ПроводкаПоУмолчанию;
КонецЕсли;

СтатьяФинансирования	= СоздатьТЗСтатьяФинансирования();
СтатьяФинансирования.НоваяСтрока();

//значения по умолчанию, когда нет данных
СтатьяФинансирования.Наименование			= "Бюджетное финансирование";
СтатьяФинансирования.КВД					= 1;
СтатьяФинансирования.ПодпадаетПодЕНВД		= 0;
СтатьяФинансирования.Баланс					= ПолучитьПустоеЗначение("Справочник.Балансодержатели");
СтатьяФинансирования.КОСГУ					= "211";
СтатьяФинансирования.КБК		        	= "00000000000000000";
	
//определим СтатьяФинансирования.КОСГУ по виду расчета или коду дохода
УточнятьКОСГУ = 0;
Если ПустаяСтрока(КодДохода) = 0 Тогда
	Если КодДохода = "2300" Тогда
		СтатьяФинансирования.КОСГУ			= "213";
		
	ИначеЕсли (Лев(КодДохода,2) = "22") или (КодДохода = "2010") Тогда
		// авторские или договора подряда будем смотреть в проводку
		// но если там нет данных, то 226
		СтатьяФинансирования.КОСГУ			= "226";
		УточнятьКОСГУ = 1;
	КонецЕсли;
	
ИначеЕсли ПустаяСтрока(ВР) = 0 Тогда // определяем по виду расчета	
	Если ВР.ВходитВГруппу(ГруппаРасчетов.РасходыЗаСчетФСС) = 1 Тогда  
		СтатьяФинансирования.КОСГУ			= "213"; 
		
	ИначеЕсли ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ) = 1 Тогда
		// авторские или договора подряда будем смотреть в проводку
		// но если там нет данных, то 226
		СтатьяФинансирования.КОСГУ			= "226"; 
		УточнятьКОСГУ = 1;
		
	ИначеЕсли ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1 Тогда 
		Если глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет", ВР, 1) = 0 Тогда
			// вид расчета не зарегистрирован с справочние
			// нет информации, во что его конвертировать
			
		Иначе
			Если (глСпрВидыРасчетов.РасходыЗаСчетФСС = 1) или (глСпрВидыРасчетов.РасходыЗаСчетФСС_НС = 1) Тогда
				СтатьяФинансирования.КОСГУ	= "213";    
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;

СчетДебета			= ШаблонПроводки.СчетДебета;
Субконто1Дебета		= ШаблонПроводки.Субконто1Дебета;
Субконто2Дебета		= ШаблонПроводки.Субконто2Дебета;
ПодпадаетПодЕНВД	= ШаблонПроводки.ПодпадаетПодЕНВД;
	

// проверим шаблон проводки, мож но ли из него получить данные
СообщениеОбОшибке = "";
Если ПустоеЗначение(ШаблонПроводки) = 1 Тогда
	СообщениеОбОшибке = "Не заполнен шаблон проводки!";
	
ИначеЕсли ПустоеЗначение(СчетДебета) = 1 Тогда
	СообщениеОбОшибке =  "Ошибка в шаблоне проводки! Не заполнен счет дебета";
	
ИначеЕсли СчетДебета.ЭтоГруппа() = 1 Тогда
	СообщениеОбОшибке =  "Ошибка в шаблоне проводки! Счет дебета не может быть группой";
	
ИначеЕсли ПустоеЗначение(СчетДебета.ИсточникФинансирования) = 1 Тогда
	СообщениеОбОшибке =  "Ошибка в шаблоне проводки! У счета не указан источник финансирования";
	
КонецЕсли; 

Если ПустоеЗначение(СообщениеОбОшибке) = 0 Тогда
	//в шаблоне нет информации, больше ничего не уточняем
	Возврат СтатьяФинансирования;
КонецЕсли; 

// шаблон проводки не совсем плохой, возьмем из него часть данных 
КВД = СчетДебета.ИсточникФинансирования.Код;
Если Число(КВД) &gt; 1 Тогда
	СтатьяФинансирования.Наименование		= "Внебюджетное финансирование"; 
КонецЕсли;
СтатьяФинансирования.КВД					= СчетДебета.ИсточникФинансирования.Код; 
СтатьяФинансирования.ПодпадаетПодЕНВД		= ПодпадаетПодЕНВД;

// проверим субконто
// Субконто1Дебета - КБК

// уточняем КБК, КВД и Баланс
Если ПустоеЗначение(Субконто1Дебета) = 1 Тогда
	СообщениеОбОшибке = "Не КБК!";
	
ИначеЕсли ТипЗначения(Субконто1Дебета) &lt;&gt; 11 Тогда
	// субконто не справочник
	СообщениеОбОшибке =  "Не КБК!";
	
ИначеЕсли Субконто1Дебета.Вид() &lt;&gt; "ЗначенияСубконто" Тогда
	// субконто не тот справочник
	СообщениеОбОшибке =  "Не КБК!";
	
ИначеЕсли СокрЛП(Субконто1Дебета.Владелец.Наименование) &lt;&gt; "КБК" Тогда
	// субконто не того вида
	СообщениеОбОшибке =  "Не КБК!";
	
КонецЕсли; 

Если ПустоеЗначение(СообщениеОбОшибке) = 0 Тогда
	//в шаблоне нет информации о КБК, прекращаем работу 
	Возврат СтатьяФинансирования;
КонецЕсли; 

// КБК используем для создания Статьи финансирования
СтатьяФинансирования.Наименование			= СокрЛП(Субконто1Дебета.Наименование);

КБК = Лев(СтатьяФинансирования.Наименование, 17);
Если ПустаяСтрока(КБК) = 0 Тогда
	СтатьяФинансирования.КБК				= КБК; 	
КонецЕсли;

// дальше анализируем, е
Если УточнятьКОСГУ = 0 Тогда
	// нет необходимости уточнять СтатьяФинансирования.КОСГУ
	Возврат СтатьяФинансирования;	
КонецЕсли;	
	
// для договоров надо уточнить СтатьяФинансирования.КОСГУ по проводке 
// Субконто2Дебета - СтатьяФинансирования.КОСГУ 
Если ПустоеЗначение(Субконто2Дебета) = 1 Тогда
	СообщениеОбОшибке = "Ошибка в шаблоне проводки! Не заполнено КОСГУ дебета";
	
ИначеЕсли ТипЗначения(Субконто2Дебета) &lt;&gt; 11 Тогда
	// субконто не справочник
	СообщениеОбОшибке = "Ошибка в шаблоне проводки! Субконто не содержит КОСГУ";
	
ИначеЕсли Субконто2Дебета.Вид() &lt;&gt; "ЗначенияСубконто" Тогда
	// субконто не тот справочник
	СообщениеОбОшибке = "Ошибка в шаблоне проводки! Субконто не содержит КОСГУ";
	
ИначеЕсли СокрЛП(Субконто2Дебета.Владелец.Наименование) &lt;&gt; "КОСГУ" Тогда
	// субконто не того вида
	СообщениеОбОшибке = "Ошибка в шаблоне проводки! Субконто не содержит КОСГУ";
	
КонецЕсли;

Если ПустоеЗначение(СообщениеОбОшибке) = 0 Тогда
	//в шаблоне нет информации о СтатьяФинансирования.КОСГУ, прекращаем работу 
	Возврат СтатьяФинансирования;
КонецЕсли;                            

КОСГУ = СокрЛП(Субконто2Дебета.Код);
СтатьяФинансирования.КОСГУ					= ?(Лев(КОСГУ, 1) = "2",КОСГУ,"211");

Возврат СтатьяФинансирования;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьПоказатель" ИспользуетсяПриЗагрузке="false">
			<Текст>Наименование = ИсходящиеДанные;

Показатель = СоздатьТЗПоказатель();
Показатель.Установить("Наименование",				Наименование);

Если Наименование = "ВремяВДнях" Тогда
	
ИначеЕсли Наименование = "ВремяВЧасах" Тогда
	
ИначеЕсли Наименование = "ВремяВКалендарныхДнях" Тогда
	
ИначеЕсли Наименование = "ЕстьСупруга" Тогда
	
ИначеЕсли Наименование = "НормаВремениВДнях" Тогда
	
ИначеЕсли Наименование = "НормаВремениВЧасах" Тогда
	
ИначеЕсли Наименование = "Количество должностных окладов" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Количество иждивенцев" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Количество ОДС" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Количество ОДС для разовых выплат" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Ежемесячно");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Комиссионная выручка" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Ежемесячно");
	Показатель.Установить("ТипПоказателя",			"Денежный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Коэффициент косвенно-сдельной оплаты" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Процентный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "ОВД" Тогда
	
ИначеЕсли Наименование = "Надбавка за командование" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "ОВЗ" Тогда
	
ИначеЕсли Наименование = "ОкладЗаКлассныйЧин" Тогда
	
ИначеЕсли Наименование = "Оклад по 10-му тарифному разряду" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Оплачиваемых прыжков" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Ежемесячно");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "ОтработаноВремениВДнях" Тогда
	
ИначеЕсли Наименование = "ОтработаноВремениВЧасах" Тогда
	
ИначеЕсли Наименование = "ОтработаноМесяцев" Тогда
	
ИначеЕсли Наименование = "Процент" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Процентный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Процент ежемесячный" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Ежемесячно");
	Показатель.Установить("ТипПоказателя",			"Процентный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Процент за усложнение" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Процентный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Размер МРОТ" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Периодически");
	Показатель.Установить("ТипПоказателя",			"Денежный");
	Показатель.Установить("ВидПоказателя",			"ДляВсехОрганизаций");
	
ИначеЕсли Наименование = "Разряд ЕТС" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"ТарифныйРазряд");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "РасчетнаяБаза" Тогда
	
ИначеЕсли Наименование = "Суточная стоимость продовольственного пайка" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Периодически");
	Показатель.Установить("ТипПоказателя",			"Числовой");
	Показатель.Установить("ВидПоказателя",			"ДляВсехОрганизаций");
	
ИначеЕсли Наименование = "ТарифнаяСтавкаМесячная" Тогда
	
ИначеЕсли Наименование = "Фактический заработок основных рабочих бригады" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Ежемесячно");
	Показатель.Установить("ТипПоказателя",			"Денежный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Фиксированная сумма" Тогда
	Показатель.Установить("ВозможностьИзменения",	"Ежемесячно");
	Показатель.Установить("ТипПоказателя",			"Денежный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
ИначеЕсли Наименование = "Фиксированная сумма для разовых начислений" Тогда
	Показатель.Установить("ВозможностьИзменения",	"НеИзменяется");
	Показатель.Установить("ТипПоказателя",			"Денежный");
	Показатель.Установить("ВидПоказателя",			"Индивидуальный");
	
Иначе
	ТекстОшибки		= "Недоработка в правилах переноса данных, неизвестный показатель: " + Наименование + ".";
	ТекстДействия	= "Обратитесь в техническую поддержку.";
	
	Сообщить(ТекстОшибки + " " + ТекстДействия, "!");
	ЗафиксироватьОшибку(ТекстОшибки + "|" + ТекстДействия + "|Не останавливать перенос");
КонецЕсли;

Возврат Показатель</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСоответствиеВРкодамДоходовЕСН" ИспользуетсяПриЗагрузке="false">
			<Текст>// чтобы не обращаться лишний раз в информационную базу,
// составим таблицу соответствия видов расчета из облагаемой базы ЕСН
// и придуманных нами типов дохода по ЕСН
СоответствиеВРкодамДоходовЕСН = СоздатьОбъект("ТаблицаЗначений");
СоответствиеВРкодамДоходовЕСН.НоваяКолонка("ВР",			"ВидРасчета");
СоответствиеВРкодамДоходовЕСН.НоваяКолонка("КодДоходаЕСН");
СоответствиеВРкодамДоходовЕСН.НоваяКолонка("ДД",			"Строка",1);

СправочникВР = СоздатьОбъект("Справочник.ВидыРасчетов");
СправочникРасчетнойБазы = СоздатьОбъект("Справочник.ВидыРасчетовБаза");
Если СправочникВР.НайтиПоРеквизиту("Расчет",ВидРасчета.ПФР,1)=1  Тогда
	СправочникРасчетнойБазы.ИспользоватьВладельца(СправочникВР.ТекущийЭлемент());
КонецЕсли; 

НалоговаяБазаИсправленаПользователем=0;
Если (СправочникРасчетнойБазы.ВыбратьЭлементы(1)=1) и (СправочникВР.Выбран()=1) Тогда 
	НалоговаяБазаИсправленаПользователем=1;
КонецЕсли;

ВсегоВР=ГруппаРасчетов.ВсеНачисления.Количество();
Для Сч = 1 По ВсегоВР Цикл
	ВР=ГруппаРасчетов.ВсеНачисления.ПолучитьРасчет(Сч);
	ВходитВБазу=?(НалоговаяБазаИсправленаПользователем=1,СправочникРасчетнойБазы.НайтиПоРеквизиту("Расчет",ВР,0),ВР.ВходитВГруппу(ГруппаРасчетов.ОблагаетсяЕСН));
	ВидРасчетаНастроенПользователем = СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
	// не будем включать в налоговую базу те в.р., которые пользователь еще не описал
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 0) или (ВидРасчетаНастроенПользователем = 1) Тогда
		НомерСтроки="";
		Если СоответствиеВРкодамДоходовЕСН.НайтиЗначение(ВР,НомерСтроки,1)=0 Тогда 
			СоответствиеВРкодамДоходовЕСН.НоваяСтрока();
			НомерСтроки=СоответствиеВРкодамДоходовЕСН.КоличествоСтрок();
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,1,ВР);
			НомерДоходаПоНДФЛ = СправочникВР.ВидДохода.Код;
			
			Если (ВР = ВидРасчета.ОплатаПоДоговору) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ДоговораГПХ");
				
			ИначеЕсли  (ВР = ВидРасчета.Авторские) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ДоговораАвторские"); 
				
			ИначеЕсли (ВР = ВидРасчета.ЛицензионныеВыплаты) или (НомерДоходаПоНДФЛ = "1300") Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ДоговораЛицензионные"); 
				
			ИначеЕсли (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВД) или (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2004)
			или (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2005) или (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2007)
			или (ВР = ВидРасчета.ОплатаБЛПоТекущемуМесяцуВозмещаемаяФССприЕНВД)
			или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВД) или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2004)
			или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005) или (ВР = ВидРасчета.ОтпускПоБеременностиПоТекущемуМесяцуВозмещаемыйФССприЕНВД)
			или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ПособияЗаСчетФСС"); 
				
			ИначеЕсли (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ПособияЗаСчетФСС");
				
			ИначеЕсли ВР=ВидРасчета.МатПомощьПриРожденииРебенка	Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"МатпомощьПриРожденииРебенка");
				
			ИначеЕсли (ВР.ВходитВГруппу(ГруппаРасчетов.РасходыЗаСчетФСС) = 1) или (СправочникВР.РасходыЗаСчетФСС = 1) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ПособияЗаСчетФСС");
				
			ИначеЕсли (СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.НеЯвляетсяОбъектомЕСН) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеЯвляетсяОбъектом");
				
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЗаСчетПрибыли Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,СправочникВР.ТипДоходаДляЕСН);
				
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЦеликомОблагаемый Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"");
				
			ИначеЕсли ВходитВБазу = 1 Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,СправочникВР.ТипДоходаДляЕСН);
				
			Иначе // остались невходящие в налоговую базу в.р.; из них надо выделить объект налогообложения
				Если СправочникВР.РасходыЗаСчетФСС = 1 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ПособияЗаСчетФСС");
					
				ИначеЕсли Найти(",4000,4600,3010,3020,2800,2900,2400,2640,",","+НомерДоходаПоНДФЛ+",") &gt; 0 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеЯвляетсяОбъектом");
					
				ИначеЕсли (Лев(НомерДоходаПоНДФЛ,2)="15") Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеЯвляетсяОбъектом");
					
				Иначе // остальное не облагается по разным пунктам ст. 238 НК РФ
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеОблагаетсяЦеликом");
					
				КонецЕсли;
				
			КонецЕсли;
			
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,3,?(СправочникВР.Выбран()=1,Строка(СправочникВР.ДовольствиеВС),"1"));
		КонецЕсли;
	КонецЕсли;
КонецЦикла;   // конец перебора ВР  ВсеНачисления

ВсегоВР=ГруппаРасчетов.ДоходыВНатуральнойФорме.Количество();
Для Сч = 1 По ВсегоВР Цикл
	ВР=ГруппаРасчетов.ДоходыВНатуральнойФорме.ПолучитьРасчет(Сч);
	ВходитВБазу=?(НалоговаяБазаИсправленаПользователем=1,СправочникРасчетнойБазы.НайтиПоРеквизиту("Расчет",ВР,0),ВР.ВходитВГруппу(ГруппаРасчетов.ОблагаетсяЕСН));
	ВидРасчетаНастроенПользователем=0;
	Если ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1 Тогда
		ВидРасчетаНастроенПользователем = СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
	КонецЕсли;
	// не будем включать в налоговую базу те в.р., которые пользователь еще не описал
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 0) или (ВидРасчетаНастроенПользователем = 1) Тогда
		НомерСтроки="";
		Если СоответствиеВРкодамДоходовЕСН.НайтиЗначение(ВР,НомерСтроки,1)=0 Тогда 
			Если ВидРасчетаНастроенПользователем = 0 Тогда
				СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
			КонецЕсли;
			СоответствиеВРкодамДоходовЕСН.НоваяСтрока();
			НомерСтроки=СоответствиеВРкодамДоходовЕСН.КоличествоСтрок();
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,1,ВР);
			
			Если СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.НеЯвляетсяОбъектомЕСН Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеЯвляетсяОбъектом");
				
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЗаСчетПрибыли Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,СправочникВР.ТипДоходаДляЕСН);
				
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЦеликомОблагаемый Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"");
				
			ИначеЕсли ВходитВБазу = 1 Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,СправочникВР.ТипДоходаДляЕСН);
				
			Иначе // остались невходящие в налоговую базу в.р.; из них надо выделить объект налогообложения
				НомерДоходаПоНДФЛ = СправочникВР.ВидДохода.Код;
				Если СправочникВР.РасходыЗаСчетФСС = 1 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"ПособияЗаСчетФСС");
					
				ИначеЕсли Найти(",4000,4600,3010,3020,2800,2900,2400,2640,",","+НомерДоходаПоНДФЛ+",") &gt; 0 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеЯвляетсяОбъектом");
					
				ИначеЕсли (Лев(НомерДоходаПоНДФЛ,2)="15") Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеЯвляетсяОбъектом");
					
				Иначе // остальное не облагается по разным пунктам ст. 238 НК РФ
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"НеОблагаетсяЦеликом");
					
				КонецЕсли;
				
			КонецЕсли;
			
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,3,?(СправочникВР.Выбран()=1,Строка(СправочникВР.ДовольствиеВС),"1"));
		КонецЕсли;
	КонецЕсли;
КонецЦикла;  // конец перебора ВР  ДоходыВНатуральнойФорме

Возврат СоответствиеВРкодамДоходовЕСН;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСписокБазовыхВР" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР			= ИсходящиеДанные;

ТаблицаВР = СоздатьОбъект("ТаблицаЗначений");
Параметры.ВыгруженныеВидыРасчета.Выгрузить(ТаблицаВР, , , "Наименование, ВР");

ТаблицаБазовыеВР = СоздатьОбъект("ТаблицаЗначений");
ТаблицаБазовыеВР.НоваяКолонка("Наименование");
ТаблицаБазовыеВР.НоваяКолонка("ВР");

Если ВР = ВидРасчета.ПНВЛ Тогда
	глПереписатьИзТаблицыВТаблицу(Параметры.ВыгруженныеНачисленияПоФормеТруда, ТаблицаБазовыеВР);
	
	ТаблицаБазовыеВР.НоваяСтрока();
	ТаблицаБазовыеВР.Наименование	= "ОВЗ";
	ТаблицаБазовыеВР.ВР				= ВидРасчета.ОкладПоЗваниюНадбавкаЗаРазряд;
	
ИначеЕсли ВР = ВидРасчета.БанковскиеИздержки Тогда
	ТаблицаБазовыеВР.НоваяСтрока();
	ТаблицаБазовыеВР.Наименование	= "Перечисление в банк";
	ТаблицаБазовыеВР.ВР				= ВидРасчета.ПеречислениеВБанк;
	
Иначе
	// Для расчета процентом от периодических реквизитов заполним базу в зависимости от порядка расчета
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1) И (глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет", ВР, 1) = 1) И (глСпрВидыРасчетов.ПорядокРасчета = Перечисление.ХарактерНачисления.Процентом) И (глПолучитьХарактерРасчетаБазы(ВР) &lt;&gt; 1) Тогда
		СоставБазы = СоздатьОбъект("СписокЗначений");
		СпрВидыРасчетовБаза = СоздатьОбъект("Справочник.ВидыРасчетовБаза");
		СпрВидыРасчетовБаза.ИспользоватьВладельца(глСпрВидыРасчетов.ТекущийЭлемент());
		СпрВидыРасчетовБаза.ВыбратьЭлементы(1);            
		Если СпрВидыРасчетовБаза.ВыбратьЭлементы(1) = 1 тогда
			Пока СпрВидыРасчетовБаза.ПолучитьЭлемент() = 1 Цикл
				СоставБазы.ДобавитьЗначение(СпрВидыРасчетовБаза.Реквизит);
			КонецЦикла;
		Иначе
			// если нет элементов в справочнике базы, тогда наполним базу по умолчанию
			Для инд = 1 по Перечисление.ХарактерРасчетаБазы.КоличествоЗначений() Цикл
				ЗначениеПеречисления = Перечисление.ХарактерРасчетаБазы.ЗначениеПоНомеру(инд);
				Если глВходитВБазу(ЗначениеПеречисления, глСпрВидыРасчетов.Расчет) = 1 Тогда
					СоставБазы.ДобавитьЗначение(ЗначениеПеречисления);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КолвоЗначений = СоставБазы.РазмерСписка();
		Для индСписка = 1 по КолвоЗначений Цикл
			ЭлементБазы = СоставБазы.ПолучитьЗначение(индСписка);
			
			Если ЭлементБазы = Перечисление.ХарактерРасчетаБазы.Оклад Тогда
				глПереписатьИзТаблицыВТаблицу(Параметры.ВыгруженныеНачисленияПоФормеТруда, ТаблицаБазовыеВР);
				
			ИначеЕсли ЭлементБазы = Перечисление.ХарактерРасчетаБазы.ПроцентЕжемесПремии Тогда
				ТаблицаБазовыеВР.НоваяСтрока();
				ТаблицаБазовыеВР.ВР				= ВидРасчета.ЕжемесячнаяПремия;
				ТаблицаБазовыеВР.Наименование	= ?(Константа.РасчетМесячнойПремии = 0, "Ежемесячная премия по текущему месяцу", "Ежемесячная премия по предыдущему месяцу");
				
			ИначеЕсли ЭлементБазы = Перечисление.ХарактерРасчетаБазы.РазрядыЧиныЗванияГосслужащих Тогда
				ТаблицаБазовыеВР.НоваяСтрока();
				ТаблицаБазовыеВР.ВР				= ВидРасчета.ЕжемесячнаяПремия;
				ТаблицаБазовыеВР.Наименование	= "Оклад за классный чин";
				
			ИначеЕсли ЭлементБазы = Перечисление.ХарактерРасчетаБазы.ДоплатыПоДолжности Тогда
				// Этот вариант в ЗУП/ЗБУ реализовать одним ВР нельзя
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		СоставБазы = глПолучитьГруппу(ВР);
		
		ТаблицаВР.ВыбратьСтроки();
		Пока ТаблицаВР.ПолучитьСтроку() = 1 Цикл
			Если глВходитВБазу(ТаблицаВР.ВР, ВР, СоставБазы) = 1 Тогда
				// Если начисление основное, то запишем в качестве базовых те, которые мы выгружали
				Если	(ТаблицаВР.ВР = ВидРасчета.ОплатаПоОкладу)
					ИЛИ (ТаблицаВР.ВР = ВидРасчета.ОплатаПоТабелю)
					ИЛИ (ТаблицаВР.ВР = ВидРасчета.ОплатаПоТарифу)
				Тогда
					глПереписатьИзТаблицыВТаблицу(Параметры.ВыгруженныеНачисленияПоФормеТруда, ТаблицаБазовыеВР);
					
				Иначе
					ТаблицаБазовыеВР.НоваяСтрока();
					ТаблицаБазовыеВР.ВР				= ТаблицаВР.ВР;
					ТаблицаБазовыеВР.Наименование	= ТаблицаВР.Наименование;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	

		Если глВходитВБазу(Перечисление.ХарактерРасчетаБазы.Оклад, ВР, СоставБазы) = 1 Тогда
			глПереписатьИзТаблицыВТаблицу(Параметры.ВыгруженныеНачисленияПоФормеТруда, ТаблицаБазовыеВР);
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;

ТаблицаБазовыеВР.Свернуть("Наименование,ВР", "");

Возврат ТаблицаБазовыеВР;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСписокСтандартныхВычетов" ИспользуетсяПриЗагрузке="false">
			<Текст>ФизЛицо							= ИсходящиеДанные;
ДоходыВычетыНалогиСотрудников	= ВходящиеДанные;
СтрокаИтоговойТаблицы			= Источник;
Год								= Приемник;
ПоследнийМесяц					= ТипПриемника;


СписокПредоставленныхВычетов = СоздатьОбъект("СписокЗначений");

ОкончаниеГода = Дата(Год,12,31);
Резидент = глПолучитьСтатусРезидентаРасчет(ФизЛицо,ОкончаниеГода); 

ПоследнийМесяц = 1;
СписокПредыдущегоМесяца = ""; 
Для Месяц=1 По 12 Цикл
	
	// во 2 колонке - таблица доходов
	ТаблицаДоходов = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Месяц,2);
	
	Если ТипЗначения(ТаблицаДоходов) &lt;&gt; 100 Тогда  // доходов не было
		Продолжить
	КонецЕсли;
	
	СписокДляСравнения = СоздатьОбъект("СписокЗначений");
	ТаблицаДоходов.Выгрузить(СписокДляСравнения,,,"1,2,3,4"); 
	СписокДляСравнения.ДобавитьЗначение(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Месяц,4));
	Для Сч = 10 По 12 Цикл
		СписокДляСравнения.ДобавитьЗначение(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+Месяц,Сч));
	КонецЦикла; 
	
	Если Месяц&gt;1  Тогда
		Если  глСпискиИдентичны(СписокДляСравнения,СписокПредыдущегоМесяца) = 1 Тогда
			Продолжить;
		КонецЕсли;
	КонецЕсли;
	
	СписокПредыдущегоМесяца = СписокДляСравнения; 
	ПоследнийМесяц = Месяц;
	
КонецЦикла; 

ТаблицаВычетов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаВычетов.НоваяКолонка("Месяц");
ТаблицаВычетов.НоваяКолонка("КодВычета");
ТаблицаВычетов.НоваяКолонка("СуммаВычета");

СписокВычетовПраво=ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+ПоследнийМесяц,3).ПолучитьЗначение(7);

Для СчМесяцев=1 по ПоследнийМесяц Цикл 
	
	СписокВычетов = СоздатьОбъект("СписокЗначений");
	
	//вычеты предоставленные 
	СписокВычетовПредоставленных=ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМесяцев,3).ПолучитьЗначение(1);
	СписокВычетовПредоставленных.Выгрузить(СписокВычетов);
	
	Если СчМесяцев&gt;1 Тогда 
		
		//вычеты предоставленные
		СписокВычетовПредоставленныхПрошлМесяц=ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы+СчМесяцев-1,3).ПолучитьЗначение(1);
		
		Для СчВычетов = 1 По СписокВычетовПраво.РазмерСписка() Цикл
			
			КодВычета = "";
			СписокВычетовПраво.ПолучитьЗначение(СчВычетов,КодВычета);
			
			РазмерВычета = Число(СписокВычетов.Получить(КодВычета)); 
			
			РазмерВычетаПрошлМесяц = Число(СписокВычетовПредоставленныхПрошлМесяц.Получить(КодВычета));
			РазмерВычета = РазмерВычета - РазмерВычетаПрошлМесяц;    
			СписокВычетов.Установить(КодВычета,РазмерВычета);
			
		КонецЦикла;
		
	КонецЕсли; 
	
	Для СчВычетов = 1 По СписокВычетов.РазмерСписка() Цикл
		
		КодВычета = "";
		РазмерВычета = СписокВычетов.ПолучитьЗначение(СчВычетов,КодВычета);
		
		Если РазмерВычета&lt;&gt;0 Тогда
			ТаблицаВычетов.НоваяСтрока();
			ТаблицаВычетов.Месяц = СчМесяцев;
			ТаблицаВычетов.КодВычета = КодВычета;
			ТаблицаВычетов.СуммаВычета = РазмерВычета;
		КонецЕсли;
		
	КонецЦикла;
	
КонецЦикла;	

ТаблицаВычетов.Свернуть("Месяц, КодВычета","СуммаВычета");

СписокВычетов = СоздатьОбъект("СписокЗначений");
КолСтрок = ТаблицаВычетов.КоличествоСтрок();
Для Сч =0 По КолСтрок-1 Цикл
	
	Ном = КолСтрок - Сч;
	ТаблицаВычетов.ПолучитьСтрокуПоНомеру(Ном);
	КодВычета = ТаблицаВычетов.КодВычета;
	СуммаВычета = ТаблицаВычетов.СуммаВычета;
	
	Если СуммаВычета&lt;0 Тогда
		СписокВычетов.Установить(КодВычета,-СуммаВычета + Число(СписокВычетов.Получить(КодВычета)));
		ТаблицаВычетов.СуммаВычета = 0;
	Иначе
		СуммаВычетаЛишняя = Число(СписокВычетов.Получить(КодВычета));
		СуммаВычетаНовая = Макс(0,СуммаВычета-СуммаВычетаЛишняя);
		СуммаВычетаЛишняяНовая = Макс(0,СуммаВычетаЛишняя - СуммаВычета + СуммаВычетаНовая);
		ТаблицаВычетов.СуммаВычета = СуммаВычетаНовая;
		СписокВычетов.Установить(КодВычета,СуммаВычетаЛишняяНовая);
	КонецЕсли;  
	
	Если ТаблицаВычетов.СуммаВычета = 0 Тогда
		ТаблицаВычетов.УдалитьСтроку(Ном);    
	КонецЕсли;
	
КонецЦикла; 

ТаблицаВычетов.Сортировать("Месяц");

ТипПриемника = ПоследнийМесяц;

Возврат ТаблицаВычетов;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьСпособОтраженияПоШаблону" ИспользуетсяПриЗагрузке="false">
			<Текст>ШаблонПроводки	= ИсходящиеДанные;
ЭтоУдержание	= ВходящиеДанные;

Если ПустоеЗначение(ШаблонПроводки) = 1 Тогда
	Если ЭтоУдержание = 1 Тогда
		СпособОтражения = СоздатьОбъект("СписокЗначений");
		СпособОтражения.ДобавитьЗначение("Отражение удержаний по умолчанию",		"Наименование");
		СпособОтражения.ДобавитьЗначение("70",										"СчетДт"); 
		СпособОтражения.ДобавитьЗначение("",										"СубконтоДт1");
		СпособОтражения.ДобавитьЗначение("",										"СубконтоДт2");
		СпособОтражения.ДобавитьЗначение("",										"СубконтоДт3");
		СпособОтражения.ДобавитьЗначение("90.01",									"СчетКт");
		СпособОтражения.ДобавитьЗначение("",										"СубконтоКт1");
		СпособОтражения.ДобавитьЗначение("",										"СубконтоКт2");
		СпособОтражения.ДобавитьЗначение("",										"СубконтоКт3");
		СпособОтражения.ДобавитьЗначение("",										"ОтражениеВУСН");
		
	Иначе
		СпособОтражения = "";
		
	КонецЕсли;
Иначе
	ТаблицаШаблонов = Параметры.ТаблицаШаблонов;
	НомерСтроки = 0;
	Если ТаблицаШаблонов.НайтиЗначение(ШаблонПроводки.Код,НомерСтроки,"КодШаблона") = 1 Тогда
		Возврат ТаблицаШаблонов.ПолучитьЗначение(НомерСтроки, "СпособОтражения");     
	КонецЕсли;

	Если ШаблонПроводки.Наименование = "Не отражать в бухгалтерском учете" Тогда
		СпособОтражения = СоздатьОбъект("СписокЗначений");
		СпособОтражения.ДобавитьЗначение("НеОтражатьВБухучете",						"Наименование");
		
	ИначеЕсли ШаблонПроводки.Наименование = "Распределять пропорционально расчетной базе" Тогда
		СпособОтражения = "";
		
	Иначе
		ПрограммаБухучета 	 = Константа.ПрограммаБухучета;
		Если ПустоеЗначение(ПрограммаБухучета) = 1 Тогда
			ПрограммаБухучета = Перечисление.ДругаяХозрасчетная;
		КонецЕсли;   

		Если (ПрограммаБухучета = Перечисление.БухгалтерскиеПрограммы.Бухгалтерия16)
			или (ПрограммаБухучета = Перечисление.БухгалтерскиеПрограммы.Бухгалтерия80) Тогда
			
			СчетДт = СокрЛП(ШаблонПроводки.СчетДебета.Код);
			СчетКт = СокрЛП(ШаблонПроводки.СчетКредита.Код);
				
			СпособОтражения = СоздатьОбъект("СписокЗначений");
			СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Наименование,			"Наименование"); 
			СпособОтражения.ДобавитьЗначение(СчетДт,								"СчетДт"); 
			СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Субконто1Дебета,		"СубконтоДт1");
			СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Субконто2Дебета,		"СубконтоДт2");
			СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Субконто3Дебета,		"СубконтоДт3");
			СпособОтражения.ДобавитьЗначение(СчетКт,								"СчетКт");
			СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Субконто1Кредита,		"СубконтоКт1");
			СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Субконто2Кредита,		"СубконтоКт2");
			СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Субконто3Кредита,		"СубконтоКт3"); 
			
			Если ШаблонПроводки.ПодпадаетПодЕНВД = 0 Тогда
				СпособОтражения.ДобавитьЗначение("Принимаются","ОтражениеВУСН");	
			Иначе
				СпособОтражения.ДобавитьЗначение("НеПринимаются","ОтражениеВУСН");	
			КонецЕсли;
			
		Иначе
			Если ЭтоУдержание = 1 Тогда
				СпособОтражения = СоздатьОбъект("СписокЗначений");
				Если ШаблонПроводки.ПодпадаетПодЕНВД = 1 Тогда
					СпособОтражения.ДобавитьЗначение("Отражение удержаний по умолчанию (ЕНВД)",	"Наименование");
				Иначе
					СпособОтражения.ДобавитьЗначение("Отражение удержаний по умолчанию",		"Наименование");
				КонецЕсли;
				СпособОтражения.ДобавитьЗначение("70",											"СчетДт"); 
				СпособОтражения.ДобавитьЗначение("",											"СубконтоДт1");
				СпособОтражения.ДобавитьЗначение("",											"СубконтоДт2");
				СпособОтражения.ДобавитьЗначение("",											"СубконтоДт3");
				СпособОтражения.ДобавитьЗначение("90.01",										"СчетКт");
				СпособОтражения.ДобавитьЗначение("",											"СубконтоКт1");
				СпособОтражения.ДобавитьЗначение("",											"СубконтоКт2");
				СпособОтражения.ДобавитьЗначение("",											"СубконтоКт3");
				СпособОтражения.ДобавитьЗначение("",											"ОтражениеВУСН");
				
			Иначе
				СпособОтражения = СоздатьОбъект("СписокЗначений");
				СчетДтПроводки = "26";
				
				СчетДт = СокрЛП(ШаблонПроводки.СчетДебета.Код);
				Если СчетДт = "69.1" Тогда
					СчетДтПроводки = "69.01";
					СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Наименование,						"Наименование");
				ИначеЕсли Найти(СчетДт, "69")&gt;0 Тогда
					СчетДтПроводки = СчетДт; 
					СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Наименование,						"Наименование");
				ИначеЕсли Найти(СчетДт, "68")&gt;0 Тогда	
					СчетДтПроводки = "68.11"; 
					СпособОтражения.ДобавитьЗначение(ШаблонПроводки.Наименование,						"Наименование");
				Иначе
					Если ШаблонПроводки.ПодпадаетПодЕНВД = 1 Тогда
						СпособОтражения.ДобавитьЗначение("Отражение начислений по умолчанию (ЕНВД)",	"Наименование");
						СпособОтражения.ДобавитьЗначение("НеПринимаются",								"ОтражениеВУСН");
					Иначе
						СпособОтражения.ДобавитьЗначение("ОтражениеНачисленийПоУмолчанию",				"Наименование");
						СпособОтражения.ДобавитьЗначение("Принимаются",									"ОтражениеВУСН");
					КонецЕсли;
				КонецЕсли; 
			
				СпособОтражения.ДобавитьЗначение(СчетДтПроводки,										"СчетДт"); 
				СпособОтражения.ДобавитьЗначение("",													"СубконтоДт1");
				СпособОтражения.ДобавитьЗначение("",													"СубконтоДт2");
				СпособОтражения.ДобавитьЗначение("",													"СубконтоДт3");
				СпособОтражения.ДобавитьЗначение("70",													"СчетКт");
				СпособОтражения.ДобавитьЗначение("",													"СубконтоКт1");
				СпособОтражения.ДобавитьЗначение("",													"СубконтоКт2");
				СпособОтражения.ДобавитьЗначение("",													"СубконтоКт3");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаШаблонов.НоваяСтрока();
	ТаблицаШаблонов.КодШаблона		= ШаблонПроводки.Код;
	ТаблицаШаблонов.СпособОтражения	= СпособОтражения;
КонецЕсли;

Возврат СпособОтражения;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПолучитьТаблицуЭтаповВыгрузки" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("ИспользуемыеПравила");
ТЗ.НоваяКолонка("Представление");
ТЗ.НоваяКолонка("ДатаНачалаВыгрузки");
ТЗ.НоваяКолонка("ДатаОкончанияВыгрузки");

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "Константы,Организация";
ТЗ.Представление			= "Сведения об организации";

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "КадровыеДанные,Отклонения,ФактическиеОтпуска";
ТЗ.Представление			= "Кадровые данные";

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "ШтатноеРасписание,ПлановыеНачисленияИУдержания,КомиссионнаяВыручка";
ТЗ.Представление			= "Сведения о плановых начислениях и удержаниях";

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "ДоговорЗаймаСРаботником,ПогашениеЗаймовРаботниками";
ТЗ.Представление			= "Займы работников";

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "КоэффициентИндексацииЗаработка";
ТЗ.Представление			= "Индексация заработка";

Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл
	Если ТекущийГод = ДатаГод(ДатаНачала) Тогда
		ДатаНачалаТекущегоГода		= ДатаНачала;
	Иначе
		ДатаНачалаТекущегоГода		= Дата(ТекущийГод, 1, 1);
	КонецЕсли;
	
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ДатаОкончанияТекущегоГода	= ДатаОкончания;
	Иначе
		ДатаОкончанияТекущегоГода	= Дата(ТекущийГод, 12, 31);
	КонецЕсли;
	
	Для ТекущийМесяц = ДатаМесяц(ДатаНачалаТекущегоГода) По ДатаМесяц(ДатаОкончанияТекущегоГода) Цикл
		ТЗ.НоваяСтрока();
		ТЗ.ИспользуемыеПравила		= "ФактическиеНачисленияИУдержания,ДозаполнениеВидовРасчета";
		ТЗ.Представление			= "Результаты начислений и удержаний за " + Формат(Дата(ТекущийГод, ТекущийМесяц, 1), "ДММММГГГГ");
		ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, ТекущийМесяц, 1);
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ТЗ.ДатаНачалаВыгрузки);
	КонецЦикла;
КонецЦикла;
	
Для ТекущийГод = Макс(2006, ДатаГод(ДатаНачала) - 1) По ДатаГод(ДатаОкончания) + 1 Цикл
	ТЗ.НоваяСтрока();
	ТЗ.ИспользуемыеПравила		= "НДФЛ";
	ТЗ.Представление			= "НДФЛ за " + ТекущийГод + "г.";
	ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, 1, 1);
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);
	Иначе
		ТЗ.ДатаОкончанияВыгрузки	= КонГода(ТЗ.ДатаНачалаВыгрузки);
	КонецЕсли;
КонецЦикла;

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "ОстаткиВзаиморасчетов";
ТЗ.Представление			= "Остатки взаиморасчетов";

Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл
	ТЗ.НоваяСтрока();
	ТЗ.ИспользуемыеПравила		= "ВыплатыВозвраты";
	ТЗ.Представление			= "Выплаты / возвраты за " + ТекущийГод + "г.";
	ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, 1, 1);
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);
	Иначе
		ТЗ.ДатаОкончанияВыгрузки	= КонГода(ТЗ.ДатаНачалаВыгрузки);
	КонецЕсли;
КонецЦикла;

Для ТекущийГод = ДатаГод(ДатаНачала) По Мин(ДатаГод(ДатаОкончания), 2009) Цикл
	ТЗ.НоваяСтрока();
	ТЗ.ИспользуемыеПравила		= "ЕСН_ПФР_ЕНВД";
	ТЗ.Представление			= "ЕСН за " + ТекущийГод + "г.";
	ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, 1, 1);
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);
	Иначе
		ТЗ.ДатаОкончанияВыгрузки	= КонГода(ТЗ.ДатаНачалаВыгрузки);
	КонецЕсли;
КонецЦикла;

Для ТекущийГод = Макс(ДатаГод(ДатаНачала), 2010) По ДатаГод(ДатаОкончания) Цикл
	ТЗ.НоваяСтрока();
	ТЗ.ИспользуемыеПравила		= "СтраховыеВзносы";
	ТЗ.Представление			= "Страховые взносы за " + ТекущийГод + "г.";
	ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, 1, 1);
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);
	Иначе
		ТЗ.ДатаОкончанияВыгрузки	= КонГода(ТЗ.ДатаНачалаВыгрузки);
	КонецЕсли;
КонецЦикла;

Для ТекущийГод = Макс(ДатаГод(ДатаНачала), 2010) По ДатаГод(ДатаОкончания) Цикл
	ТЗ.НоваяСтрока();
	ТЗ.ИспользуемыеПравила		= "НачисленияДляСтраховыхВзносов";
	ТЗ.Представление			= "Начисления для страховых взносов за " + ТекущийГод + "г.";
	ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, 1, 1);
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);
	Иначе
		ТЗ.ДатаОкончанияВыгрузки	= КонГода(ТЗ.ДатаНачалаВыгрузки);
	КонецЕсли;
КонецЦикла;

Для ТекущийГод = Макс(ДатаГод(ДатаНачала), 2010) По ДатаГод(ДатаОкончания) Цикл
	ТЗ.НоваяСтрока();
	ТЗ.ИспользуемыеПравила		= "РасчетыПоСтраховымВзносам";
	ТЗ.Представление			= "Расчеты по страховым взносам за " + ТекущийГод + "г.";
	ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, 1, 1);
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);
	Иначе
		ТЗ.ДатаОкончанияВыгрузки	= КонГода(ТЗ.ДатаНачалаВыгрузки);
	КонецЕсли;
КонецЦикла;

Для ТекущийГод = ДатаГод(ДатаНачала) По ДатаГод(ДатаОкончания) Цикл
	ТЗ.НоваяСтрока();
	ТЗ.ИспользуемыеПравила		= "ФСС";
	ТЗ.Представление			= "Пособия по ФСС за " + ТекущийГод + "г.";
	ТЗ.ДатаНачалаВыгрузки		= Дата(ТекущийГод, 1, 1);
	Если ТекущийГод = ДатаГод(ДатаОкончания) Тогда
		ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);
	Иначе
		ТЗ.ДатаОкончанияВыгрузки	= КонГода(ТЗ.ДатаНачалаВыгрузки);
	КонецЕсли;
КонецЦикла;

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "ФизическиеЛица,УчетОсновногоЗаработкаПодразделенияОрганизации";
ТЗ.Представление			= "Физические лица, подразделения";
	
ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "ОтражениеЗарплатыВРеглУчете";
ТЗ.Представление			= "Отражение зарплаты в учете";
ТЗ.ДатаНачалаВыгрузки		= ?(ДатаГод(ДатаНачала) = ДатаГод(ДатаОкончания), НачМесяца(ДатаНачала), НачГода(ДатаОкончания));
ТЗ.ДатаОкончанияВыгрузки	= КонМесяца(ДатаОкончания);

ТЗ.НоваяСтрока();
ТЗ.ИспользуемыеПравила		= "КонтрольныеДанные";
ТЗ.Представление			= "Контрольные данные";
	
Возврат ЗначениеВСтрокуВнутр(ТЗ);</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПослеВыгрузкиФизическихЛицВФайл" ИспользуетсяПриЗагрузке="false">
			<Текст>ПериодЗаполненияДанных = ?(ПустоеЗначение(ДатаНачала) = 0, ДатаНачала, Дата(1980, 1, 1));

// Регистр "ФИОФизЛиц"
Стр			= Источник.Наименование;
Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложить(Стр, " ");
	РазмерСписка = СпРазбора.РазмерСписка();
	
	Фамилия  		= СпРазбора.ПолучитьЗначение(1);
	Имя = "";
	Если РазмерСписка &gt; 1 Тогда
		Имя			= СпРазбора.ПолучитьЗначение(2);
	КонецЕсли;
	Отчество = "";
	Если РазмерСписка &gt; 2 Тогда
		Отчество	= СпРазбора.ПолучитьЗначение(3);
	КонецЕсли;
	
	Период = ?(ПустоеЗначение(Источник.ДатаРождения) = 0, Источник.ДатаРождения, ПериодЗаполненияДанных);
	
	ФИОФизлица = СоздатьОбъект("СписокЗначений");
	ФИОФизлица.Установить("ФизЛицо",	Источник);
	ФИОФизлица.Установить("Фамилия",	Фамилия);
	ФИОФизлица.Установить("Имя",		Имя);
	ФИОФизлица.Установить("Отчество",	Отчество);
	ФИОФизлица.Установить("Период",		Период);
	
	ВыгрузитьПоПравилу(ФИОФизлица, , , , "ФИОФизЛиц");

КонецЕсли;

// Регистр "ПаспортныеДанныеФизЛиц"
Стр			= Источник.ДокументУдЛичность;
Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложитьДокУдостоверяющийЛичность(Стр);
	РазмерСписка = СпРазбора.РазмерСписка();

	ВидДокумента = СпРазбора.ПолучитьЗначение(1);
	Если ПустаяСтрока(ВидДокумента) = 1 Тогда
		ВидДокумента = "Паспорт гражданина России";
	КонецЕсли;
	СпрДокументыУдЛичность = СоздатьОбъект("Справочник.ДокументыУдостоверяющиеЛичность");
	СпрДокументыУдЛичность.НайтиПоНаименованию(ВидДокумента);
	ДокументВид	= СпрДокументыУдЛичность.ТекущийЭлемент();
	
	ДокументСерия = "";
	Если РазмерСписка &gt; 1 Тогда
		ДокументСерия	= СпРазбора.ПолучитьЗначение(2);
	КонецЕсли;  
	
	ДокументНомер = "";
	Если РазмерСписка &gt; 2 Тогда
		ДокументНомер	= СпРазбора.ПолучитьЗначение(3);
	КонецЕсли;

	Если РазмерСписка &gt; 3 Тогда
		ДатаВыдачи = СпРазбора.ПолучитьЗначение(4);
	КонецЕсли;
	
	Если (ПустоеЗначение(ДатаВыдачи) = 1) ИЛИ (ДатаВыдачи = ".  .") Тогда
		ДатаВыдачи = ''
	Иначе
		Д = Лев(ДатаВыдачи,2);
		М = Сред(ДатаВыдачи,4,2);
		Г = СокрЛП(Сред(ДатаВыдачи,7));
		Если СтрДлина(Г) = 2 Тогда
			Если Число(Г) &lt; 10 Тогда
				Г = "20" + Г;
			Иначе	
				Г = "19" + Г;
			КонецЕсли;	
		КонецЕсли;	
		ДатаВыдачи = Дата(Г, М, Д);
	КонецЕсли;
	
	ДокументДатаВыдачи = ?(ПустоеЗначение(ДатаВыдачи) = 0, ДатаВыдачи, ПериодЗаполненияДанных);
	
	ДокументКемВыдан = "";
	Если РазмерСписка &gt; 4 Тогда
		ДокументКемВыдан   = СокрЛП(СпРазбора.ПолучитьЗначение(5));
	КонецЕсли;
	
	Если ПустоеЗначение(Источник.ДатаРождения) = 1 Тогда
		Период = ПериодЗаполненияДанных
	Иначе
		Исполнение14Лет = ДобавитьМесяц(Источник.ДатаРождения,14*12); // 14 лет
		Период = ?(Исполнение14Лет &lt; РабочаяДата(), Исполнение14Лет, Источник.ДатаРождения)
	КонецЕсли;
	
	ПаспортныеДанные = СоздатьОбъект("СписокЗначений");
	ПаспортныеДанные.Установить("Период",							Период);
	ПаспортныеДанные.Установить("ФизЛицо",							Источник);
	ПаспортныеДанные.Установить("ДокументВид",						ДокументВид);
	ПаспортныеДанные.Установить("ДокументСерия",					ДокументСерия);
	ПаспортныеДанные.Установить("ДокументНомер",					ДокументНомер);
	ПаспортныеДанные.Установить("ДокументДатаВыдачи",				ДокументДатаВыдачи);
	ПаспортныеДанные.Установить("ДокументКемВыдан",					ДокументКемВыдан);
	ПаспортныеДанные.Установить("ДатаРегистрацииПоМестуЖительства",	Источник.ДатаРегистрации);
	
	ВыгрузитьПоПравилу(ПаспортныеДанные, , , , "ПаспортныеДанныеФизЛиц");

КонецЕсли;

// Регистр "ГражданствоФизЛиц"
Если ПустоеЗначение(Источник.Страна) = 1 Тогда
	Страна = "РОССИЯ";
Иначе
	Страна = Источник.Страна;
КонецЕсли;

ТаблицаГражданство = СоздатьОбъект("ТаблицаЗначений");
ТаблицаГражданство.НоваяКолонка("Физлицо");
ТаблицаГражданство.НоваяКолонка("Страна");
ТаблицаГражданство.НоваяКолонка("Период");
ТаблицаГражданство.НоваяКолонка("НеИмеетПравоНаПенсию");
ТаблицаГражданство.НоваяКолонка("ВидЗастрахованногоЛица");

// Поиск документа с указанием прав на ПФР.
ДокСведенияДляРасчетаЕСН = СоздатьОбъект("Документ.СведенияДляРасчетаЕСН");
ДокСведенияДляРасчетаЕСН.ОбратныйПорядок(1);
ДокСведенияДляРасчетаЕСН.УстановитьФильтр(1,0);
ДокСведенияДляРасчетаЕСН.ВыбратьДокументы(, Дата(2009, 12, 31));
Пока ДокСведенияДляРасчетаЕСН.ПолучитьДокумент() = 1 Цикл
	ТекДок = ДокСведенияДляРасчетаЕСН.ТекущийДокумент();
	
	Если ТекДок.Сотрудник &lt;&gt; Источник Тогда
		Продолжить;
	КонецЕСли;	
	
	НомерСтроки = 0;
	Если ТаблицаГражданство.НайтиЗначение(ТекДок.ДатаДок, НомерСтроки, "Период") = 1 Тогда
		ТаблицаГражданство.ПолучитьСтрокуПоНомеру(НомерСтроки);
	Иначе
		ТаблицаГражданство.НоваяСтрока();
		ТаблицаГражданство.Период	= ТекДок.ДатаДок;
		ТаблицаГражданство.Физлицо	= Источник;
		ТаблицаГражданство.Страна	= Страна;
	КонецЕсли;
	
	ТаблицаГражданство.НеИмеетПравоНаПенсию					= ?(ТекДок.ВзиматьНаСтрахПФР = 1, 1, 0);
КонецЦикла;

ДокСведенияДляРасчетаСтраховыхВзносов = СоздатьОбъект("Документ.СведенияДляРасчетаСтраховыхВзносов");
ДокСведенияДляРасчетаСтраховыхВзносов.ОбратныйПорядок(1);
ДокСведенияДляРасчетаСтраховыхВзносов.УстановитьФильтр(1,0);
ДокСведенияДляРасчетаСтраховыхВзносов.ВыбратьДокументы(Дата(2010, 1, 1), );
Пока ДокСведенияДляРасчетаСтраховыхВзносов.ПолучитьДокумент() = 1 Цикл
	ТекДок = ДокСведенияДляРасчетаСтраховыхВзносов.ТекущийДокумент();
	
	Если ТекДок.Сотрудник &lt;&gt; Источник Тогда
		Продолжить;
	КонецЕсли;	
	
	НомерСтроки = 0;
	Если ТаблицаГражданство.НайтиЗначение(ТекДок.ДатаДок, НомерСтроки, "Период") = 1 Тогда
		ТаблицаГражданство.ПолучитьСтрокуПоНомеру(НомерСтроки);
	Иначе
		ТаблицаГражданство.НоваяСтрока();
		ТаблицаГражданство.Период	= ТекДок.ДатаДок;
		ТаблицаГражданство.Физлицо	= Источник;
		ТаблицаГражданство.Страна	= Страна;
	КонецЕсли;
	
	ТаблицаГражданство.НеИмеетПравоНаПенсию		= ТекДок.НеВзиматьВзносыПФРиФСС;
	ТаблицаГражданство.ВидЗастрахованногоЛица	= ТекДок.ВидЗастрахованногоЛица;
КонецЦикла;

Если (ПустоеЗначение(Источник.Страна) = 0) И (ТаблицаГражданство.КоличествоСтрок() = 0) Тогда
	ТаблицаГражданство.НоваяСтрока();
	ТаблицаГражданство.Период	= ПериодЗаполненияДанных;
	ТаблицаГражданство.Физлицо	= Источник;
	ТаблицаГражданство.Страна	= Страна;
КонецЕсли;

ТаблицаГражданство.ВыбратьСтроки();
Пока ТаблицаГражданство.ПолучитьСтроку() = 1 Цикл
	ВыгрузитьПоПравилу(ТаблицаГражданство, , , , "ГражданствоФизЛиц");
КонецЦикла;

// Статус физического лица как налогоплательщика НДФЛ
ТаблицаСтатусНалогоплательщикаНДФЛ = СоздатьОбъект("ТаблицаЗначений");
ТаблицаСтатусНалогоплательщикаНДФЛ.НоваяКолонка("Период");
ТаблицаСтатусНалогоплательщикаНДФЛ.НоваяКолонка("Физлицо");
ТаблицаСтатусНалогоплательщикаНДФЛ.НоваяКолонка("Статус");

ПерРеквизит = СоздатьОбъект("Периодический");
ПерРеквизит.ИспользоватьОбъект("СтатусНеРезидента", Источник);
Если ПерРеквизит.ВыбратьЗначения() = 1 Тогда
	Пока ПерРеквизит.ПолучитьЗначение() = 1 Цикл
		Период = ?(ПустоеЗначение(ПерРеквизит.ДатаЗнач) = 0, ПерРеквизит.ДатаЗнач, ПериодЗаполненияДанных);
		
		НомерСтроки = 0;
		Если ТаблицаСтатусНалогоплательщикаНДФЛ.НайтиЗначение(Период, НомерСтроки, "Период") = 1 Тогда
			ТаблицаСтатусНалогоплательщикаНДФЛ.ПолучитьСтрокуПоНомеру(НомерСтроки);
			
		Иначе
			ТаблицаСтатусНалогоплательщикаНДФЛ.НоваяСтрока();
			ТаблицаСтатусНалогоплательщикаНДФЛ.Период	= Период;
			ТаблицаСтатусНалогоплательщикаНДФЛ.Физлицо	= Источник;
			
		КонецЕсли;
		
		Если ПерРеквизит.Значение = 1 Тогда
			ТаблицаСтатусНалогоплательщикаНДФЛ.Статус		= "НеРезидент";
		ИначеЕсли ПерРеквизит.Значение = 2 Тогда
			ТаблицаСтатусНалогоплательщикаНДФЛ.Статус		= "ЧленЭкипажаСуднаПодФлагомРФ";
		ИначеЕсли ПерРеквизит.Значение = 3 Тогда
			ТаблицаСтатусНалогоплательщикаНДФЛ.Статус		= "УчастникПрограммыПоПереселениюСоотечественников";
		ИначеЕсли ПерРеквизит.Значение = 4 Тогда
			ТаблицаСтатусНалогоплательщикаНДФЛ.Статус		= "Беженец";
		ИначеЕсли ПерРеквизит.Значение = 5 Тогда
			ТаблицаСтатусНалогоплательщикаНДФЛ.Статус		= "НерезидентРаботающийНаОснованииПатента";
		ИначеЕсли ПерРеквизит.Значение = 6 Тогда
			ТаблицаСтатусНалогоплательщикаНДФЛ.Статус		= "ГражданинСтраныЕАЭС";	
		Иначе
			ТаблицаСтатусНалогоплательщикаНДФЛ.Статус		= "Резидент";
		КонецЕсли;    
	КонецЦикла;
КонецЕсли;

ТаблицаСтатусНалогоплательщикаНДФЛ.ВыбратьСтроки();
Пока ТаблицаСтатусНалогоплательщикаНДФЛ.ПолучитьСтроку() = 1 Цикл
	ВыгрузитьПоПравилу(ТаблицаСтатусНалогоплательщикаНДФЛ, , , , "СтатусФизЛицКакНалогоплательщиковНДФЛ");
КонецЦикла;

// Регистр "СемейноеПоложениеФизЛиц"
Если ПустоеЗначение(Источник.СемейноеПоложение) = 0 Тогда
	СемейноеПоложение = СоздатьОбъект("СписокЗначений");
	СемейноеПоложение.Установить("ФизЛицо",				Источник);
	СемейноеПоложение.Установить("СемейноеПоложение",	Источник.СемейноеПоложение);
	СемейноеПоложение.Установить("Период",				ПериодЗаполненияДанных);
	
	ВыгрузитьПоПравилу(СемейноеПоложение, , , , "СемейноеПоложениеФизЛиц_Регистр");
КонецЕсли;	

ТаблицаИнвалидности = СоздатьОбъект("ТаблицаЗначений");
ТаблицаИнвалидности.НоваяКолонка("Физлицо");
ТаблицаИнвалидности.НоваяКолонка("Период");
ТаблицаИнвалидности.НоваяКолонка("Инвалидность");
ТаблицаИнвалидности.НоваяКолонка("СерияСправки");
ТаблицаИнвалидности.НоваяКолонка("НомерСправки");
ТаблицаИнвалидности.НоваяКолонка("ДатаВыдачи");
ТаблицаИнвалидности.НоваяКолонка("СрокДействияСправки");
ТаблицаИнвалидности.НоваяКолонка("ГруппаИнвалидности");

// Регистр "СведенияОбИнвалидностиФизлиц"
ДокСправкаМСЭК = СоздатьОбъект("Документ.СправкаМСЭК");
ДокСправкаМСЭК.УстановитьФильтр(1,0);
ДокСправкаМСЭК.ВыбратьДокументы();
Пока ДокСправкаМСЭК.ПолучитьДокумент() = 1 Цикл
	ТекДок = ДокСправкаМСЭК.ТекущийДокумент();
	Если ТекДок.Сотрудник &lt;&gt; Источник Тогда
		Продолжить;
	КонецЕСли;
	
	НомерСтроки = 0;
	Если ТаблицаИнвалидности.НайтиЗначение(ТекДок.Начало, НомерСтроки, "Период") = 1 Тогда
		ТаблицаИнвалидности.ПолучитьСтрокуПоНомеру(НомерСтроки);
	Иначе
		ТаблицаИнвалидности.НоваяСтрока();
		ТаблицаИнвалидности.Физлицо					= ТекДок.Сотрудник;
		ТаблицаИнвалидности.Период					= ТекДок.Начало;
	КонецЕсли;
	
	Если  ТекДок.Группа = Перечисление.ГруппыИнвалидности.Первая Тогда
		ГруппаИнвалидности  = "I"
	ИначеЕсли	ТекДок.Группа = Перечисление.ГруппыИнвалидности.Вторая Тогда
		ГруппаИнвалидности  = "II"
	ИначеЕсли	ТекДок.Группа = Перечисление.ГруппыИнвалидности.Третья Тогда
		ГруппаИнвалидности  = "III"
	Иначе
		ГруппаИнвалидности  =  ""
	КонецЕсли;
	
	ТаблицаИнвалидности.Инвалидность			= 1;
	ТаблицаИнвалидности.СерияСправки			= СокрЛП(ТекДок.Серия);
	ТаблицаИнвалидности.НомерСправки			= СокрЛП(ТекДок.НомерДок);
	ТаблицаИнвалидности.ДатаВыдачи				= ТекДок.ДатаДок;
	ТаблицаИнвалидности.СрокДействияСправки		= ТекДок.Окончание;
	ТаблицаИнвалидности.ГруппаИнвалидности		= ГруппаИнвалидности;
	
	Если ПустоеЗначение(ТекДок.Окончание) = 0 Тогда
		НомерСтроки = 0;
		Если ТаблицаИнвалидности.НайтиЗначение(ТекДок.Окончание+1, НомерСтроки, "Период") = 1 Тогда
			ТаблицаИнвалидности.ПолучитьСтрокуПоНомеру(НомерСтроки);
		Иначе
			ТаблицаИнвалидности.НоваяСтрока();
			ТаблицаИнвалидности.Физлицо					= ТекДок.Сотрудник;
			ТаблицаИнвалидности.Период					= ТекДок.Окончание+1;
		КонецЕсли;
		ТаблицаИнвалидности.Инвалидность			= 0;
		ТаблицаИнвалидности.СерияСправки			= "";
		ТаблицаИнвалидности.НомерСправки			= "";
		ТаблицаИнвалидности.ДатаВыдачи				= "";
		ТаблицаИнвалидности.СрокДействияСправки		= "";
		ТаблицаИнвалидности.ГруппаИнвалидности		= "";
	КонецЕсли;
КонецЦикла;

ТаблицаИнвалидности.ВыбратьСтроки();
Пока ТаблицаИнвалидности.ПолучитьСтроку() = 1 Цикл
	ВыгрузитьПоПравилу(ТаблицаИнвалидности, , , , "СведенияОбИнвалидностиФизлиц");
КонецЦикла;

// Регистр "ВоинскийУчет"
Стр			= Источник.ВоинскийУчет;
Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложить(Стр, Симв(9));
	РазмерСписка = СпРазбора.РазмерСписка();

	Если ПустоеЗначение(Источник.ДатаРождения) = 1 Тогда
		Период = ПериодЗаполненияДанных
	Иначе
		Исполнение17Лет = ДобавитьМесяц(Источник.ДатаРождения,17*12); // 17 лет
		Период = ?(Исполнение17Лет &lt; РабочаяДата(), Исполнение17Лет, Источник.ДатаРождения)
	КонецЕсли;
	
	ОтношениеКВоинскойОбязанности = "";
	
	КатегорияЗапаса = "";
	Если РазмерСписка &gt; 0 Тогда
		КатегорияЗапаса = СпРазбора.ПолучитьЗначение(1);
		Если		КатегорияЗапаса = "1" Тогда
			КатегорияЗапаса = "До45лет";
		ИначеЕсли	КатегорияЗапаса = "2" Тогда
			КатегорияЗапаса = "До50лет";
		Иначе
			КатегорияЗапаса = "";
		КонецЕсли;
	КонецЕсли;
	
	Звание = "";
	Если РазмерСписка &gt; 1 Тогда
		Звание = СпРазбора.ПолучитьЗначение(2);
	КонецЕсли;
	
	Состав = "";
	Если РазмерСписка &gt; 2 Тогда
		Состав = СпРазбора.ПолучитьЗначение(3);
	КонецЕсли;
	
	ВУС = "";
	Если РазмерСписка &gt; 3 Тогда
		ВУС = СпРазбора.ПолучитьЗначение(4);
	КонецЕсли;

	Годность = "";
	Если РазмерСписка &gt; 4 Тогда
		Годность = СпРазбора.ПолучитьЗначение(5);
	КонецЕсли;

	Военкомат = "";
	Если РазмерСписка &gt; 5 Тогда
		Военкомат = СпРазбора.ПолучитьЗначение(6);
	КонецЕсли;

	ОтношениеКВоинскомуУчету = "";

	НаличиеМобпредписания = "";

	НомерКомандыПартии = "";
	Если РазмерСписка &gt; 6 Тогда
		НомерКомандыПартии = СпРазбора.ПолучитьЗначение(7);
	КонецЕсли;

	ВоинскийУчет = СоздатьОбъект("СписокЗначений");
	ВоинскийУчет.Установить("Физлицо",							Источник);
	ВоинскийУчет.Установить("Период",							Период);
	ВоинскийУчет.Установить("ОтношениеКВоинскойОбязанности",	ОтношениеКВоинскойОбязанности);
	ВоинскийУчет.Установить("КатегорияЗапаса",					КатегорияЗапаса);
	ВоинскийУчет.Установить("Звание",							Звание);
	ВоинскийУчет.Установить("Состав",							Состав);
	ВоинскийУчет.Установить("ВУС",								ВУС);
	ВоинскийУчет.Установить("Годность",							Годность);
	ВоинскийУчет.Установить("Военкомат",						Военкомат);
	ВоинскийУчет.Установить("ОтношениеКВоинскомуУчету",			ОтношениеКВоинскомуУчету);
	ВоинскийУчет.Установить("НаличиеМобпредписания",			НаличиеМобпредписания);
	ВоинскийУчет.Установить("НомерКомандыПартии",				НомерКомандыПартии);
	
	ВыгрузитьПоПравилу(ВоинскийУчет, , , , "ВоинскийУчет");
КонецЕсли;

// Регистр "КонтактнаяИнформация", адрес по регистрации
Стр	= СокрЛП(Источник.АдресПрописка);
АдресПоРегистрации = Стр;

Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложить(Стр);
	
	Представление = "";
	Если СпРазбора.РазмерСписка() = 10 Тогда
		Для Индекс = 2 По СпРазбора.РазмерСписка() Цикл
			Если ПустоеЗначение(СпРазбора.ПолучитьЗначение(Индекс)) = 0 Тогда
				Представление = Представление + ?(ПустоеЗначение(Представление) = 1, "", ", ")
				+?(Индекс = 8, "дом № ",
				?(Индекс = 9, "корпус ",
				?(Индекс = 10,"кв.", "")))
				+ СпРазбора.ПолучитьЗначение(Индекс);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Представление = Стр;
	КонецЕсли;
	
	КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
	КонтактнаяИнформация.Установить("Объект",			Источник);
	КонтактнаяИнформация.Установить("Тип",				"Адрес");
	КонтактнаяИнформация.Установить("Вид",				"ЮрАдресФизЛица");
	Если СпРазбора.РазмерСписка() = 10 Тогда
		КонтактнаяИнформация.Установить("Поле1",			СпРазбора.ПолучитьЗначение(2));
		КонтактнаяИнформация.Установить("Поле2",			СпРазбора.ПолучитьЗначение(3));
		КонтактнаяИнформация.Установить("Поле3",			СпРазбора.ПолучитьЗначение(4));
		КонтактнаяИнформация.Установить("Поле4",			СпРазбора.ПолучитьЗначение(5));
		КонтактнаяИнформация.Установить("Поле5",			СпРазбора.ПолучитьЗначение(6));
		КонтактнаяИнформация.Установить("Поле6",			СпРазбора.ПолучитьЗначение(7));
		КонтактнаяИнформация.Установить("Поле7",			СпРазбора.ПолучитьЗначение(8));
		КонтактнаяИнформация.Установить("Поле8",			СпРазбора.ПолучитьЗначение(9));
		КонтактнаяИнформация.Установить("Поле9",			СпРазбора.ПолучитьЗначение(10));
	КонецЕсли;
	КонтактнаяИнформация.Установить("Представление",	Представление);
	КонтактнаяИнформация.Установить("ТипОбъекта",		"ФЛ");
	
	ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
КонецЕсли;	

// Регистр "КонтактнаяИнформация", адрес фактического проживания 		
Стр			= СокрЛП(Источник.АдресФакт);
АдресПоФакту = Стр;

Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложить(Стр);
	
	Представление = "";
	Если СпРазбора.РазмерСписка() = 10 Тогда
		Для Индекс = 2 По СпРазбора.РазмерСписка() Цикл
			Если ПустоеЗначение(СпРазбора.ПолучитьЗначение(Индекс)) = 0 Тогда
				Представление = Представление + ?(ПустоеЗначение(Представление) = 1, "", ", ")
				+?(Индекс = 8, "дом № ",
				?(Индекс = 9, "корпус ",
				?(Индекс = 10,"кв.", "")))
				+ СпРазбора.ПолучитьЗначение(Индекс);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Представление = Стр;
	КонецЕсли;
	
	КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
	КонтактнаяИнформация.Установить("Объект",			Источник);
	КонтактнаяИнформация.Установить("Тип",				"Адрес");
	КонтактнаяИнформация.Установить("Вид",				"ФактАдресФизЛица");
	Если СпРазбора.РазмерСписка() = 10 Тогда
		КонтактнаяИнформация.Установить("Поле1",			СпРазбора.ПолучитьЗначение(2));
		КонтактнаяИнформация.Установить("Поле2",			СпРазбора.ПолучитьЗначение(3));
		КонтактнаяИнформация.Установить("Поле3",			СпРазбора.ПолучитьЗначение(4));
		КонтактнаяИнформация.Установить("Поле4",			СпРазбора.ПолучитьЗначение(5));
		КонтактнаяИнформация.Установить("Поле5",			СпРазбора.ПолучитьЗначение(6));
		КонтактнаяИнформация.Установить("Поле6",			СпРазбора.ПолучитьЗначение(7));
		КонтактнаяИнформация.Установить("Поле7",			СпРазбора.ПолучитьЗначение(8));
		КонтактнаяИнформация.Установить("Поле8",			СпРазбора.ПолучитьЗначение(9));
		КонтактнаяИнформация.Установить("Поле9",			СпРазбора.ПолучитьЗначение(10));
	КонецЕсли;
	КонтактнаяИнформация.Установить("Представление",	Представление);
	КонтактнаяИнформация.Установить("ТипОбъекта",		"ФЛ");
	
	ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
КонецЕсли;

// Регистр "КонтактнаяИнформация", адрес для информирования
Если ПустаяСтрока(АдресПоФакту) = 0 Тогда
	Стр		= АдресПоФакту;
ИначеЕсли ПустаяСтрока(АдресПоРегистрации) = 0 Тогда
	Стр		= АдресПоРегистрации;
Иначе
	Стр		= "";
КонецЕсли;

Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложить(Стр);
	
	Представление = "";
	Если СпРазбора.РазмерСписка() = 10 Тогда
		Для Индекс = 2 По СпРазбора.РазмерСписка() Цикл
			Если ПустоеЗначение(СпРазбора.ПолучитьЗначение(Индекс)) = 0 Тогда
				Представление = Представление + ?(ПустоеЗначение(Представление) = 1, "", ", ")
				+?(Индекс = 8, "дом № ",
				?(Индекс = 9, "корпус ",
				?(Индекс = 10,"кв.", "")))
				+ СпРазбора.ПолучитьЗначение(Индекс);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Представление = Стр;
	КонецЕсли;
	
	КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
	КонтактнаяИнформация.Установить("Объект",			Источник);
	КонтактнаяИнформация.Установить("Тип",				"Адрес");
	КонтактнаяИнформация.Установить("Вид",				"ИнформАдресФизЛица");
	Если СпРазбора.РазмерСписка() = 10 Тогда
		КонтактнаяИнформация.Установить("Поле1",			СпРазбора.ПолучитьЗначение(2));
		КонтактнаяИнформация.Установить("Поле2",			СпРазбора.ПолучитьЗначение(3));
		КонтактнаяИнформация.Установить("Поле3",			СпРазбора.ПолучитьЗначение(4));
		КонтактнаяИнформация.Установить("Поле4",			СпРазбора.ПолучитьЗначение(5));
		КонтактнаяИнформация.Установить("Поле5",			СпРазбора.ПолучитьЗначение(6));
		КонтактнаяИнформация.Установить("Поле6",			СпРазбора.ПолучитьЗначение(7));
		КонтактнаяИнформация.Установить("Поле7",			СпРазбора.ПолучитьЗначение(8));
		КонтактнаяИнформация.Установить("Поле8",			СпРазбора.ПолучитьЗначение(9));
		КонтактнаяИнформация.Установить("Поле9",			СпРазбора.ПолучитьЗначение(10));
	КонецЕсли;
	КонтактнаяИнформация.Установить("Представление",	Представление);
	КонтактнаяИнформация.Установить("ТипОбъекта",		"ФЛ");
	
	ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
КонецЕсли;

// Регистр "КонтактнаяИнформация", адрес проживания.
Стр			= СокрЛП(Источник.АдресВСтранеПроживания);

Если ПустаяСтрока(Стр) = 0 Тогда
	СпРазбора = глРазложить(Стр);
	
	Представление = "";
	Если СпРазбора.РазмерСписка() = 10 Тогда
		Для Индекс = 2 По СпРазбора.РазмерСписка() Цикл
			Если ПустоеЗначение(СпРазбора.ПолучитьЗначение(Индекс)) = 0 Тогда
				Представление = Представление + ?(ПустоеЗначение(Представление) = 1, "", ", ")+ СпРазбора.ПолучитьЗначение(Индекс);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Представление = Стр;
	КонецЕсли;
	
	Если СпРазбора.РазмерСписка() &gt; 1 Тогда
		СпрОКСМ=СоздатьОбъект("Справочник.ОКСМ");
		Если СпрОКСМ.НайтиПоНаименованию(СпРазбора.ПолучитьЗначение(1),0,1)=1 Тогда
			ВыгрузитьПоПравилу(СпрОКСМ, , , , "КлассификаторСтранМира");
		КонецЕсли; 
	КонецЕсли;		
	
	КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
	КонтактнаяИнформация.Установить("Объект",			Источник);
	КонтактнаяИнформация.Установить("Тип",				"Адрес");
	КонтактнаяИнформация.Установить("Вид",				"ИнострАдресФизЛица");
	Если СпРазбора.РазмерСписка() = 10 Тогда
		КонтактнаяИнформация.Установить("Поле1",			СпРазбора.ПолучитьЗначение(2));
		КонтактнаяИнформация.Установить("Поле2",			СпРазбора.ПолучитьЗначение(3));
		КонтактнаяИнформация.Установить("Поле3",			СпРазбора.ПолучитьЗначение(4));
		КонтактнаяИнформация.Установить("Поле4",			СпРазбора.ПолучитьЗначение(5));
		КонтактнаяИнформация.Установить("Поле5",			СпРазбора.ПолучитьЗначение(6));
		КонтактнаяИнформация.Установить("Поле6",			СпРазбора.ПолучитьЗначение(7));
		КонтактнаяИнформация.Установить("Поле7",			СпРазбора.ПолучитьЗначение(8));
		КонтактнаяИнформация.Установить("Поле8",			СпРазбора.ПолучитьЗначение(9));
		КонтактнаяИнформация.Установить("Поле9",			СпРазбора.ПолучитьЗначение(10));
	КонецЕсли;
	КонтактнаяИнформация.Установить("Представление",	Представление);
	КонтактнаяИнформация.Установить("ТипОбъекта",		"ФЛ");
	
	ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
КонецЕсли;

// Регистр "КонтактнаяИнформация", телефон
Стр = СокрЛП(Источник.Телефон);
Если ПустаяСтрока(Стр) = 0 Тогда
	КонтактнаяИнформация	= СоздатьОбъект("СписокЗначений");
	КонтактнаяИнформация.Установить("Объект",			Источник);
	КонтактнаяИнформация.Установить("Тип",				"Телефон");
	КонтактнаяИнформация.Установить("Вид",				"ТелефонФизЛица");
	КонтактнаяИнформация.Установить("Поле3",			СокрЛП(Стр));
	КонтактнаяИнформация.Установить("Представление",	СокрЛП(Стр));
	КонтактнаяИнформация.Установить("ТипОбъекта",		"ФЛ");
	
	ВыгрузитьПоПравилу(КонтактнаяИнформация, , , , "КонтактнаяИнформация");
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПреобразоватьВРвПВР" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗВидаРасчета				= ИсходящиеДанные;
ВР							= ВходящиеДанные;
Регистратор					= Источник;
ДополнительныйПараметр		= Приемник;
НомерСтрокиДокумента		= ТипПриемника;

ТЗВидаРасчета.ВР			= ВР;

ВидПВР						= ОпределитьВидПВР(ВР);
ЭлементСпрВР				= ПолучитьВРизСправочника(ВР);

// Заполним значения по умолчанию
ЗаполнитьТЗПВРПоУмолчанию(ТЗВидаРасчета, ВР);

СписокВРДоплатаПоБЛ = СоздатьОбъект("СписокЗначений");
СписокВРДоплатаПоБЛ.ДобавитьЗначение(ВидРасчета.ДоплатаПоБЛ);
СписокВРДоплатаПоБЛ.ДобавитьЗначение(ВидРасчета.ДоплатаПоБЛпоТекущемуМесяцу);
СписокВРДоплатаПоБЛ.ДобавитьЗначение(ВидРасчета.ДоплатаПоБЛс2004);

Если ВР = ВидРасчета.Авторские Тогда
	КодДохода = "";
	Если ПустоеЗначение(Регистратор) = 0 Тогда
		Если (Регистратор.Вид() = "ДоговорГраждПравХаракт")
			ИЛИ (Регистратор.Вид() = "НачисленияУдержанияСотрудника")
			ИЛИ (Регистратор.Вид() = "НачисленияУдержанияСписком") Тогда
			
			Если Регистратор.Вид() = "НачисленияУдержанияСписком" Тогда
				Регистратор.ПолучитьСтрокуПоНомеру(НомерСтрокиДокумента);
			КонецЕсли;
			
			Если ПустоеЗначение(Регистратор.ВидДохода) = 0 Тогда
				КодДохода = Регистратор.ВидДохода.Код;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТЗВидаРасчета = ЗаполнитьВРАвторские(ТЗВидаРасчета, КодДохода);

ИначеЕсли ВР = ВидРасчета.БанковскиеИздержки Тогда
	Если ПустоеЗначение(Регистратор) = 0 Тогда
		Если (Регистратор.Вид() = "ИсполнительныйЛист") Тогда
			ТЗВидаРасчета.Наименование		= "БанковскиеИздержкиПоИЛ";
		Иначе
			ТЗВидаРасчета.СпособРасчета		= "УдержаниеФиксированнойСуммой";
			ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
		КонецЕсли;
	Иначе
		ТЗВидаРасчета.СпособРасчета			= "УдержаниеФиксированнойСуммой";
		ТЗВидаРасчета.КатегорияРасчета		= "Первичное";
	КонецЕсли;
	
ИначеЕсли СписокВРДоплатаПоБЛ.НайтиЗначение(ВР) &gt; 0 Тогда // Этот ВР создается в ЗУП/ЗБУ при первом запуске
	ТЗВидаРасчета.Наименование								= "Доплата до среднего заработка";
	ТЗВидаРасчета.СпособРасчета								= "ДоплатаДоСреднегоЗаработка";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
		
ИначеЕсли ВР = ВидРасчета.ВыплатыЗаОтчуждениеИсключительныхПрав Тогда
	ТЗВидаРасчета = ЗаполнитьВРОтчуждениеАвторских(ТЗВидаРасчета);
	
ИначеЕсли ВР = ВидРасчета.ДоплатаЗаСекретность Тогда
	ТЗВидаРасчета = ЗаполнитьВРДоплатаЗаСекретность(ТЗВидаРасчета);
	
ИначеЕсли ВР = ВидРасчета.ЕдиновременныеПособияИзСоцстраха Тогда
	Если ДополнительныйПараметр = Перечисление.ТипыПособий.ПриРожденииРебенка Тогда
		ТЗВидаРасчета.Наименование = "ПриРожденииРебенка";
		
	ИначеЕсли ДополнительныйПараметр = Перечисление.ТипыПособий.ПриУсыновленииРебенка Тогда
		ТЗВидаРасчета.Наименование = "ПриУсыновленииРебенка";
		
	ИначеЕсли ДополнительныйПараметр = Перечисление.ТипыПособий.НаПогребение Тогда
		ТЗВидаРасчета.Наименование = "ВСвязиСоСмертью";
		
	ИначеЕсли ДополнительныйПараметр = Перечисление.ТипыПособий.Беременным Тогда
		ТЗВидаРасчета.Наименование = "ПриПостановкеНаУчетВРанниеСрокиБеременности";
		
	КонецЕсли;
	
ИначеЕсли ВР = ВидРасчета.ЕжемесячнаяПремия Тогда // Ежемесячная премия по текущему/прошлому месяцу
	ТЗВидаРасчета = ЗаполнитьВРЕжемесячнойПремии(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.КомпенсацияОтпуска Тогда
	Если ДополнительныйПараметр = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
		ТЗВидаРасчета.Наименование = "КомпенсацияОтпускаШестидневка";
	Иначе
		ТЗВидаРасчета.Наименование = "КомпенсацияОтпускаКалендарныеДни";
	КонецЕсли;
	
ИначеЕсли ВР = ВидРасчета.КомпенсацияОтпускаСверх28дней Тогда
	Если ДополнительныйПараметр = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
		ТЗВидаРасчета.Наименование = "КомпенсацияОтпускаШестидневкаБезУвольнения";
	Иначе
		ТЗВидаРасчета.Наименование = "КомпенсацияОтпускаКалендарныеДниБезУвольнения";
	КонецЕсли;
	
ИначеЕсли ВР = ВидРасчета.КосвенноСдельная Тогда // Косвенно-сдельная оплата труда
	ТЗВидаРасчета = ЗаполнитьВРКосвенноСдельной(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.МатПомощь Тогда
	ТЗВидаРасчета.СпособРасчета					= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
	ТЗВидаРасчета.ОтношениеКДенежномуСодержанию	= "МатериальнаяПомощь";
	
ИначеЕсли ВР = ВидРасчета.МатПомощьНеОблагаемая Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.МатПомощьПриРожденииРебенка Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ОплатаПоНаряду Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2011 Тогда
	ТЗВидаРасчета.Наименование = "ОплатаБолезниЗаСчетРаботодателя";
	
ИначеЕсли ВР = ВидРасчета.ОтпускДополнительный Тогда
	ТЗВидаРасчета = ЗаполнитьВРОтпускДополнительный(ТЗВидаРасчета, ДополнительныйПараметр)
	
ИначеЕсли ВР = ВидРасчета.ОтпускОчередной Тогда
	Если ДополнительныйПараметр = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
		ТЗВидаРасчета.Наименование							= "ОплатаПоСреднемуОтпШестидневка";
		ТЗВидаРасчета.СпособРасчета							= "ПоСреднемуЗаработкуДляОтпускаПоШестидневке";
	Иначе
		ТЗВидаРасчета.Наименование							= "ОплатаПоСреднемуОтпКалендарныеДни";
		ТЗВидаРасчета.СпособРасчета							= "ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням";
	КонецЕсли;
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "ОсновнойОтпуск";
	
ИначеЕсли ВР = ВидРасчета.ОтпускУчебный Тогда
	ТЗВидаРасчета = ЗаполнитьВРОтпускУчебный(ТЗВидаРасчета, ДополнительныйПараметр)
	
ИначеЕсли ВР = ВидРасчета.ПеречислениеВБанк Тогда
	ТЗВидаРасчета.СпособРасчета		= "УдержаниеФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ПогашениеСсуды Тогда
	ТЗВидаРасчета.СпособРасчета		= "УдержаниеФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ПремияКвартальная Тогда
	ТЗВидаРасчета = ЗаполнитьВРПремия(ТЗВидаРасчета, 3);
	
ИначеЕсли ВР = ВидРасчета.ПремияКвартальнаяСуммой Тогда
	ТЗВидаРасчета.ЧислоМесяцев		= 3;
	ТЗВидаРасчета.ВидПремии			= "Премия";
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ПремияМесячная Тогда
	ТЗВидаРасчета.СпособРасчета		= "Процентом";
	ТЗВидаРасчета.КатегорияРасчета	= "ЗависимоеПервогоУровня";
	ТЗВидаРасчета.НужнаБаза			= 1;
	ТЗВидаРасчета.ВидПремии			= "Премия";
	ТЗВидаРасчета.ЧислоМесяцев		= 1;
	
ИначеЕсли ВР = ВидРасчета.ПремияПоИтогамГода Тогда
	ТЗВидаРасчета = ЗаполнитьВРПремия(ТЗВидаРасчета, 12);
	
ИначеЕсли ВР = ВидРасчета.ПремияПоИтогамГодаСуммой Тогда
	ТЗВидаРасчета.ЧислоМесяцев		= 12;
	ТЗВидаРасчета.ВидПремии			= "ГодоваяПремия";
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ПремияРазовая Тогда
	ТЗВидаРасчета.ЧислоМесяцев		= 1;
	ТЗВидаРасчета.ВидПремии			= "Премия";
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли (ВР = ВидРасчета.Простой) И (ДополнительныйПараметр = 1) Тогда
	ТЗВидаРасчета.Наименование								= "ПочасовойПростойПоВинеРаботодателя";
	ТЗВидаРасчета.СпособРасчета								= "ПоСреднемуЗаработку";
	ТЗВидаРасчета.ВидВремени								= "ЧасовоеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "ПростойПоВинеРаботодателя";
	
ИначеЕсли ВР = ВидРасчета.ПрофВзносы Тогда
	ТЗВидаРасчета.СпособРасчета		= "Процентом";
	ТЗВидаРасчета.КатегорияРасчета	= "ЗависимоеПервогоУровня";
	ТЗВидаРасчета.НужнаБаза			= 1; 
	
ИначеЕсли ВР = ВидРасчета.РайонныйКоэффициент Тогда
	ТЗВидаРасчета.НужнаБаза			= 1; 
	
ИначеЕсли ВР = ВидРасчета.СверхнормативныеВыплаты Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.СдельныйНаряд Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.СевернаяНадбавка Тогда
	ТЗВидаРасчета.НужнаБаза			= 1; 
	
ИначеЕсли ВР = ВидРасчета.УдержаниеЗаНеотработанныйОтпуск Тогда
	Если ДополнительныйПараметр = Перечисление.ТипРасчетаОтпуска.ПоШестидневке Тогда
		ТЗВидаРасчета.Наименование = "УдержаниеЗаНеотработанныйОтпускШестидневка";
	Иначе
		ТЗВидаРасчета.Наименование = "УдержаниеЗаНеотработанныйОтпускКалендарныеДни";
	КонецЕсли;
	
ИначеЕсли ВР = ВидРасчета.УдержаниеПоИсполнительномуЛисту Тогда
	Если Регистратор.Вид() = "ИсполнительныйЛист" Тогда
		Если Регистратор.СпособРасчетаПоИЛ = 1 Тогда// Процентом
			Если Регистратор.ОблагатьБольничныеЛисты = 1 Тогда
				ТЗВидаРасчета.Наименование = ?(Регистратор.Сумма = 0, "ИЛПроцентом", "ИЛПроцентомДоПредела");
				
			Иначе // не учитываем БЛ
				ТЗВидаРасчета.Наименование = ?(Регистратор.Сумма = 0, "ИЛПроцентомБезБЛ", "ИЛПроцентомДоПределаБезБЛ");
				
			КонецЕсли;
			
		Иначе// Фикс суммой
			ТЗВидаРасчета.Наименование = ?(Регистратор.Сумма = 0, "ИЛФиксированнойСуммой", "ИЛФиксированнойСуммойДоПредела");
			
		КонецЕсли;
		
	Иначе
		ТЗВидаРасчета.Наименование = "ИЛФиксированнойСуммой";
		
	КонецЕсли;
	
// ***********************************************************************************
// Денежное довольствие

ИначеЕсли ВР = ВидРасчета.ВРИД Тогда	
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ДВК Тогда
	ТЗВидаРасчета = ЗаполнитьВРДВК(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ДДзаОО_ВОП Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ДенежноеВознаграждениеЗаПрыжки Тогда
	ТЗВидаРасчета = ЗаполнитьВРДенежноеВознаграждениеЗаПрыжки(ТЗВидаРасчета, ДополнительныйПараметр)
	
ИначеЕсли ВР = ВидРасчета.ДКВПП Тогда
	ТЗВидаРасчета = ЗаполнитьВРДКВПП(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ДКнаСКЛ Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ДоплатаЗаВредность Тогда
	ТЗВидаРасчета = ЗаполнитьВРДоплатаЗаВредность(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ЕДВзаДИДО Тогда
	ТЗВидаРасчета = ЗаполнитьВРЕДВзаДИДО(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ЕНВИВЮО Тогда
	ТЗВидаРасчета = ЗаполнитьВРЕНВИВЮО(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ЕНДД Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ЕНзаСРШО Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ЕНК Тогда
	ТЗВидаРасчета = ЗаполнитьВРЕНК(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ЕПК Тогда
	ТЗВидаРасчета = ЗаполнитьВРЕПК(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ЕПУ Тогда
	ТЗВидаРасчета = ЗаполнитьВРЕПУ(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ЕСП Тогда
	ТЗВидаРасчета = ЗаполнитьВРЕСП(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.НЗИЯ Тогда
	ТЗВидаРасчета = ЗаполнитьВРНЗИЯ(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.НООИВС Тогда
	ТЗВидаРасчета = ЗаполнитьВРНООИВС(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.НОУС Тогда
	ТЗВидаРасчета = ЗаполнитьВРНОУС(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.НОУС_ВОП Тогда
	ТЗВидаРасчета = ЗаполнитьВРНОУС_ВОП(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.НСН Тогда
	ТЗВидаРасчета = ЗаполнитьВРНСН(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.НУС Тогда
	ТЗВидаРасчета = ЗаполнитьВРНУС(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ОкладПоЗваниюНадбавкаЗаРазряд Тогда
	ТЗВидаРасчета = ЗаполнитьВРОкладПоЗваниюНадбавкаЗаРазряд(ТЗВидаРасчета, ДополнительныйПараметр)
	
ИначеЕсли ВР = ВидРасчета.ПБР Тогда
	ТЗВидаРасчета.Наименование = "ОтпускПоБеременностиВоеннослужащим";
	
ИначеЕсли ВР = ВидРасчета.ПИФЭ_ЕДВзаДИДО Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.ПН_за_СВМ Тогда
	ТЗВидаРасчета = ЗаполнитьВРПН_за_СВМ(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ПНВЛ Тогда
	ТЗВидаРасчета = ЗаполнитьВРПНВЛ(ТЗВидаРасчета, ДополнительныйПараметр)
	
ИначеЕсли ВР = ВидРасчета.ПНСУБР Тогда
	ТЗВидаРасчета = ЗаполнитьВРПНСУБР(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ПП Тогда
	ТЗВидаРасчета = ЗаполнитьВРПП(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ПремияКвартальнаяВоеннослужащего Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
	
// ***********************************************************************************
// Муниципальные и государственные служащие

ИначеЕсли ВР = ВидРасчета.ДоплатаЗаЗамещение Тогда
	ТЗВидаРасчета = ЗаполнитьВРДоплатаЗаЗамещение(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.ЕДП Тогда
	ТЗВидаРасчета = ЗаполнитьВРЕДП(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.МесячноеДенежноеСодержаниеГосслужащего Тогда
	ТЗВидаРасчета.СпособРасчета		= "МесячноеДенежноеСодержание";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
ИначеЕсли ВР = ВидРасчета.НадбавкаЗаВыслугуЛет Тогда
	ТЗВидаРасчета = ЗаполнитьВРНадбавкаЗаВыслугуЛет(ТЗВидаРасчета, ДополнительныйПараметр)
	
ИначеЕсли ВР = ВидРасчета.СохраняемоеДенежноеСодержаниеГосслужащего Тогда
	ТЗВидаРасчета = ЗаполнитьВРСохраняемоеДенежноеСодержание(ТЗВидаРасчета)
	
ИначеЕсли ВР = ВидРасчета.Стипендия Тогда
	ТЗВидаРасчета.СпособРасчета		= "ФиксированнойСуммой";
	ТЗВидаРасчета.КатегорияРасчета	= "Первичное";
	
	
// ***********************************************************************************
// Предопределенные ВР, необходимы для правильного вычисления реквизита ВидУчетаВремени

ИначеЕсли ВР = ВидРасчета.ОплатаПоСреднемуЗаработку Тогда
	ТЗВидаРасчета.СпособРасчета								= "ПоСреднемуЗаработку";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Командировка";
	
ИначеЕсли ВР = ВидРасчета.ОплатаПраздничных Тогда
	ТЗВидаРасчета.СпособРасчета								= "ФиксированнойСуммой";
	ТЗВидаРасчета.ВидВремени								= "ОтработанноеСверхНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Праздники";
	
ИначеЕсли ВР = ВидРасчета.ДоплатаЗаПраздничные Тогда
	ТЗВидаРасчета.СпособРасчета								= "ФиксированнойСуммой";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "";
	
ИначеЕсли ВР = ВидРасчета.ОплатаСверхурочныхЧасов Тогда
	ТЗВидаРасчета.СпособРасчета								= "ФиксированнойСуммой";
	ТЗВидаРасчета.ВидВремени								= "ОтработанноеСверхНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Сверхурочные";
	
ИначеЕсли (ВР = ВидРасчета.ДоплатаЗаВечерниеЧасы)
	ИЛИ (ВР = ВидРасчета.ДоплатаЗаВечерниеЧасыПоТабелю) Тогда
	ТЗВидаРасчета.СпособРасчета								= "ДоплатаЗаВечерниеЧасы";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "РаботаВечерниеЧасы";
	
ИначеЕсли (ВР = ВидРасчета.ДоплатаЗаНочныеЧасы)
	ИЛИ (ВР = ВидРасчета.ДоплатаЗаНочныеЧасыПоТабелю) Тогда
	ТЗВидаРасчета.СпособРасчета								= "ДоплатаЗаНочныеЧасы";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "РаботаНочныеЧасы";
	
ИначеЕсли (ВР = ВидРасчета.ОплатаБЛ)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВД)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2004)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2005)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2007)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2010)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателя)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2005)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2007)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2010)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2004)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2005)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2007)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2010)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛпоТекущемуМесяцу)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛПоТекущемуМесяцуВозмещаемаяФССприЕНВД)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛПоТекущемуМесяцуЗаСчетРаботодателя)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛс2004)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛс2005)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛс2007)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛс2010)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛс2011) Тогда
	ТЗВидаРасчета.СпособРасчета								= "ПоСреднемуЗаработкуФСС";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Болезнь";
	
ИначеЕсли ВР = ВидРасчета.ОтсутствиеПоБолезни Тогда
	ТЗВидаРасчета.СпособРасчета								= "НулеваяСумма";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Болезнь";
	
ИначеЕсли ВР = ВидРасчета.ОплатаЛьготныхДнейРодителей Тогда
	ТЗВидаРасчета.СпособРасчета								= "ПоСреднемуЗаработку";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "ДополнительныеВыходныеДниОплачиваемые";
	
ИначеЕсли (ВР = ВидРасчета.ОплатаБЛпоТравме)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛпоТравмеПоТекущемуМесяцу)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛпоТравмес2004)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛпоТравмес2005)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛпоТравмес2007)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛпоТравмес2010)
	ИЛИ (ВР = ВидРасчета.ОплатаБЛпоТравмес2011) Тогда
	ТЗВидаРасчета.СпособРасчета								= "ПоСреднемуЗаработкуФСС";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Болезнь";
	
ИначеЕсли (ВР = ВидРасчета.ОтпускПоБеременности)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВД)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2004)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2010)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностиПоТекущемуМесяцу)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностиПоТекущемуМесяцуВозмещаемыйФССприЕНВД)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностис2004)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностис2005)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностис2007)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностис2010)
	ИЛИ (ВР = ВидРасчета.ОтпускПоБеременностис2011) Тогда
	ТЗВидаРасчета.СпособРасчета								= "ПоСреднемуЗаработкуФСС";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "ОтпускПоБеременностиИРодам";
	
ИначеЕсли (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФСС)
	ИЛИ (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007) Тогда
	ТЗВидаРасчета.СпособРасчета								= "ПособиеПоУходуЗаРебенкомДо1_5Лет";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "";
	
ИначеЕсли ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007Военные Тогда
	ТЗВидаРасчета.Наименование = "ОтпускПоУходуЗаРебенкомВоеннослужащим";
	
ИначеЕсли ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФЗП Тогда
	ТЗВидаРасчета.СпособРасчета								= "ПособиеПоУходуЗаРебенкомДо3Лет";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "";
	
ИначеЕсли ВР = ВидРасчета.Невыход Тогда
	ТЗВидаРасчета.СпособРасчета								= "НулеваяСумма";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "НеявкиПоНевыясненнымПричинам";
	
ИначеЕсли (ВР = ВидРасчета.ОтпускЗаСвойСчетДолгосрочный)
	ИЛИ (ВР = ВидРасчета.ОтпускЗаСвойСчетКраткосрочный) Тогда
	ТЗВидаРасчета.СпособРасчета								= "НулеваяСумма";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "НеоплачиваемыйОтпускПоРазрешениюРаботодателя";
	
ИначеЕсли ВР = ВидРасчета.Прогул Тогда
	ТЗВидаРасчета.СпособРасчета								= "НулеваяСумма";
	ТЗВидаРасчета.ВидВремени								= "ЦелодневноеНеотработанное";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Прогулы";
	
ИначеЕсли ВР = ВидРасчета.РайонныйКоэффициент Тогда
	ТЗВидаРасчета.СпособРасчета								= "Процентом";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
	
ИначеЕсли ВР = ВидРасчета.СевернаяНадбавка Тогда
	ТЗВидаРасчета.СпособРасчета								= "СевернаяНадбавка";
	ТЗВидаРасчета.ВидВремени								= "ДополнительноОплачиваемоеВПределахНормы";
	ТЗВидаРасчета.ОбозначениеВТабелеУчетаРабочегоВремени	= "Работа";
	
	
// здесь обрабатываем все пользовательские виды расчетов, при условии, что они есть в справочнике видов расчета
ИначеЕсли ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1 Тогда
	Если (ПустоеЗначение(ЭлементСпрВР) = 0) И (ПустоеЗначение(Регистратор) = 0) Тогда
		Порядок = ЭлементСпрВР.ПорядокРасчета;
		
		Если Порядок = Перечисление.ХарактерНачисления.Суммой  Тогда
			// суммой, пропорционально отработанному времени... - с учетом дней 
			// произвольная формула расчета 
			
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			ТЗВидаРасчета.СпособРасчета					= "ПроизвольнаяФормула";
			ТЗВидаРасчета.ПроизвольнаяФормулаРасчета	= 1;
			ТЗВидаРасчета.НужнаБаза						= 1;
			
			ТЗВидаРасчета.ФормулаРасчета				= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 / ИсходныеДанные.Показатель3"; 
			
			ТЗВидаРасчета.Показатели 					= СоздатьТЗПоказатели();
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("Фиксированная сумма");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("ВремяВДнях");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("НормаВремениВДнях");
			  
		ИначеЕсли Порядок = Перечисление.ХарактерНачисления.СуммойПоЧасам Тогда
			// суммой, пропорционально отработанному времени... - с учетом часов 
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			ТЗВидаРасчета.СпособРасчета					= "ПроизвольнаяФормула";
			ТЗВидаРасчета.ПроизвольнаяФормулаРасчета	= 1;
			ТЗВидаРасчета.НужнаБаза						= 1;
			
			ТЗВидаРасчета.ФормулаРасчета				= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 / ИсходныеДанные.Показатель3";
			
			ТЗВидаРасчета.Показатели 					= СоздатьТЗПоказатели();
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("Фиксированная сумма");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("ВремяВЧасах");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("НормаВремениВЧасах");
			
		ИначеЕсли (Порядок = Перечисление.ХарактерНачисления.Процентом) Тогда
			ТЗВидаРасчета.КатегорияРасчета			= "ЗависимоеПервогоУровня";
			ТЗВидаРасчета.СпособРасчета				= "Процентом";
			ТЗВидаРасчета.НужнаБаза					= 1; 
			
			Если глСпрВидыРасчетов.НайтиПоРеквизиту("Расчет", ВР, 1) = 1 тогда
				ЭлСпрВидРасчета = глСпрВидыРасчетов.ТекущийЭлемент();
				
				Если (ЭлСпрВидРасчета.ВТекущемЗаИстекший = 1) И (ЭлСпрВидРасчета.РазовоеНачисление = 0) Тогда
					ТЗВидаРасчета.ПериодДействияБазовый	= 0;    
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли (Порядок = Перечисление.ХарактерУдержания.Процентом) Тогда 
			// это удержание процентом
			ТЗВидаРасчета.КатегорияРасчета				= "ЗависимоеПервогоУровня";
			ТЗВидаРасчета.СпособРасчета					= "Процентом";
			ТЗВидаРасчета.НужнаБаза						= 1;
			
		ИначеЕсли Порядок = Перечисление.ХарактерНачисления.ПоТарифу Тогда
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			ТЗВидаРасчета.СпособРасчета					= "ПроизвольнаяФормула";
			ТЗВидаРасчета.ПроизвольнаяФормулаРасчета	= 1;
			ТЗВидаРасчета.ФормулаРасчета				= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2";
			
			ТЗВидаРасчета.Показатели 					= СоздатьТЗПоказатели();
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("Фиксированная сумма");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("ОтработаноВремениВЧасах");
			
		ИначеЕсли Порядок = Перечисление.ХарактерНачисления.ФиксСумма Тогда
			// начисление с регламентированным способом расчета ФиксированнойСуммой
			ТЗВидаРасчета.КатегорияРасчета				= "ЗависимоеПервогоУровня";
			ТЗВидаРасчета.СпособРасчета					= "ФиксированнойСуммой";
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			
		ИначеЕсли Порядок = Перечисление.ХарактерУдержания.ФиксСумма Тогда
			// удержание с регламентированным способом расчета ФиксированнойСуммой
			ТЗВидаРасчета.КатегорияРасчета				= "ЗависимоеПервогоУровня";
			ТЗВидаРасчета.СпособРасчета					= "УдержаниеФиксированнойСуммой";
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			
		ИначеЕсли (Порядок = Перечисление.ХарактерНачисления.ММОТ) или (Порядок = Перечисление.ХарактерУдержания.ММОТ) Тогда
			// произвольный расчет 
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			ТЗВидаРасчета.СпособРасчета					= "ПроизвольнаяФормула";
			ТЗВидаРасчета.ПроизвольнаяФормулаРасчета	= 1;
			
			ТЗВидаРасчета.ФормулаРасчета				= "ИсходныеДанные.Показатель1";
			
			ТЗВидаРасчета.Показатели 					= СоздатьТЗПоказатели();
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("Размер МРОТ");
				
		ИначеЕсли Порядок = Перечисление.ХарактерНачисления.ПоРазрядуЕТС Тогда 
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			ТЗВидаРасчета.СпособРасчета					= "ПроизвольнаяФормула";
			ТЗВидаРасчета.ПроизвольнаяФормулаРасчета	= 1;
			ТЗВидаРасчета.НужнаБаза						= 1;
			
			ТЗВидаРасчета.ФормулаРасчета				= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2 / ИсходныеДанные.Показатель3";
			
			ТЗВидаРасчета.Показатели 					= СоздатьТЗПоказатели();
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("Разряд ЕТС");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("ВремяВДнях");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("НормаВремениВДнях");

		ИначеЕсли Порядок = Перечисление.ХарактерНачисления.ПроцентомОтСтажа Тогда               
			ТЗВидаРасчета.КатегорияРасчета				= "ЗависимоеПервогоУровня";
			ТЗВидаРасчета.СпособРасчета					= "ОтСтажаПоМесячнойТарифнойСтавкеПоДням";
			ТЗВидаРасчета.НужнаБаза						= 1;
			
		ИначеЕсли (Порядок = Перечисление.ХарактерНачисления.СуммойЗаДень) Тогда 
			ТЗВидаРасчета.КатегорияРасчета				= "Первичное";
			ТЗВидаРасчета.СпособРасчета					= "ПроизвольнаяФормула";
			ТЗВидаРасчета.ПроизвольнаяФормулаРасчета	= 1;
			ТЗВидаРасчета.ФормулаРасчета				= "ИсходныеДанные.Показатель1 * ИсходныеДанные.Показатель2";
			
			ТЗВидаРасчета.Показатели 					= СоздатьТЗПоказатели();
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("Фиксированная сумма");
			ТЗВидаРасчета.Показатели.НоваяСтрока();
			ТЗВидаРасчета.Показатели.Показатель			= ПолучитьПоказатель("ВремяВДнях");
				
			
		КонецЕсли;  
	КонецЕсли;
КонецЕсли;

// Заполним параметры отражения в учете
ЗаполнитьТЗПВРОтражениеВУчете(ТЗВидаРасчета, ВР);

Возврат ТЗВидаРасчета;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПреобразоватьКодВычетаНДФЛВСведенияхОДоходах" ИспользуетсяПриЗагрузке="false">
			<Текст>Таб = ИсходящиеДанные;
ТабКодов = ВходящиеДанные;
Год = Источник;

Если Год &gt;= 2015 Тогда
	ИмяКолонки = "Код2015";
ИначеЕсли Год &gt;= 2011 Тогда
	ИмяКолонки = "Код2011";
ИначеЕсли Год &gt;= 2009 Тогда
	ИмяКолонки = "Код2009";
ИначеЕсли Год &gt;= 2008 Тогда
	ИмяКолонки = "Код2008";
Иначе
	ИмяКолонки = "Код2017";
КонецЕсли;

Таб.ВыбратьСтроки();
Пока Таб.ПолучитьСтроку()=1 Цикл
	
	Если ПустоеЗначение(Таб.КодВычета)=1 Тогда
		Продолжить;
	КонецЕсли;     
	
	НовыйКод = "";
	НомСтроки = "";
	ТабКодов.НайтиЗначение(Таб.КодВычета,НомСтроки,ИмяКолонки);
	Если ПустоеЗначение(НомСтроки)&lt;&gt;1 Тогда
		НовыйКод = ТабКодов.ПолучитьЗначение(НомСтроки,"Код");
	КонецЕсли; 
	
	Таб.КодВычета = НовыйКод;
	
КонецЦикла;

Возврат 0;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПроверитьЕСНЗаМесяц" ИспользуетсяПриЗагрузке="true">
			<Текст>Если НЕ ПустаяСтрока(мОбработкаОбмена.Параметры.ЕСНЗаМесяц) Тогда
	МассивЕСН = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(мОбработкаОбмена.Параметры.ЕСНЗаМесяц, "|");
	
	ТаблицаЕСН = Новый ТаблицаЗначений;
	ТаблицаЕСН.Колонки.Добавить("ПериодРегистрации",	Новый ОписаниеТипов("Дата"));
	Для Номер = 2 По 30 Цикл
		ТаблицаЕСН.Колонки.Добавить("Колонка"+Номер,	Новый ОписаниеТипов("Число"));
	КонецЦикла;
	
	Для Каждого ЕСНЗаМесяц Из МассивЕСН Цикл
		ТекущийЕСН = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(ЕСНЗаМесяц, ";");
		
		Строка = ТаблицаЕСН.Добавить();
		Строка.ПериодРегистрации	= XMLЗначение(Тип("Дата"), ТекущийЕСН[0]);
		Для Номер = 2 По 30 Цикл
			Строка["Колонка"+Номер]	= ТекущийЕСН[Номер-1];
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТаблицаЕСН",		ТаблицаЕСН);
	Запрос.УстановитьПараметр("Организация",	мОбработкаОбмена.Параметры.Организация);
	Запрос.УстановитьПараметр("НачалоНП",		мОбработкаОбмена.ДатаНачала);
	Запрос.УстановитьПараметр("КонецНП",		мОбработкаОбмена.ДатаОкончания);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСН.ПериодРегистрации КАК ПериодРегистрации,
	|	КОНЕЦПЕРИОДА(ЕСН.ПериодРегистрации, МЕСЯЦ) КАК КонецМесяца,
	|	МЕСЯЦ(ЕСН.ПериодРегистрации) КАК Месяц,
	|	ГОД(ЕСН.ПериодРегистрации) КАК Год,
	|	ЕСН.Колонка2,
	|	ЕСН.Колонка3,
	|	ЕСН.Колонка4,
	|	ЕСН.Колонка5,
	|	ЕСН.Колонка6,
	|	ЕСН.Колонка7,
	|	ЕСН.Колонка8,
	|	ЕСН.Колонка9,
	|	ЕСН.Колонка10,
	|	ЕСН.Колонка11,
	|	ЕСН.Колонка12,
	|	ЕСН.Колонка13,
	|	ЕСН.Колонка14,
	|	ЕСН.Колонка15,
	|	ЕСН.Колонка16,
	|	ЕСН.Колонка17,
	|	ЕСН.Колонка18,
	|	ЕСН.Колонка19,
	|	ЕСН.Колонка20,
	|	ЕСН.Колонка21,
	|	ЕСН.Колонка22,
	|	ЕСН.Колонка23,
	|	ЕСН.Колонка24,
	|	ЕСН.Колонка25,
	|	ЕСН.Колонка26,
	|	ЕСН.Колонка27,
	|	ЕСН.Колонка28,
	|	ЕСН.Колонка29,
	|	ЕСН.Колонка30
	|ПОМЕСТИТЬ ВТЕСН
	|ИЗ
	|	&amp;ТаблицаЕСН КАК ЕСН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации,
	|	Месяц,
	|	Год,
	|	КонецМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСНСведенияОДоходах.ФизЛицо КАК ФизЛицо
	|ПОМЕСТИТЬ ВТФизлицаБезНалоговойБазы
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСНСведенияОДоходах
	|ГДЕ
	|	ЕСНСведенияОДоходах.Период МЕЖДУ &amp;НачалоНП И &amp;КонецНП
	|	И ЕСНСведенияОДоходах.Организация = &amp;Организация
	|	И (НЕ ЕСНСведенияОДоходах.ОблагаетсяЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСНСведенияОДоходах.ФизЛицо
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ЕСНСведенияОДоходах.КодДоходаЕСН.ВходитВБазуФОМС
	|				ТОГДА ЕСНСведенияОДоходах.Результат - ЕСНСведенияОДоходах.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) &lt; 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(ЕСННачисления.Период) КАК Месяц,
	|	ГОД(ЕСННачисления.Период) КАК Год,
	|	ЕСННачисления.ФизЛицо КАК ФизЛицо,
	|	ЕСННачисления.КодДоходаЕСН КАК КодДоходаЕСН,
	|	СУММА(ЕСННачисления.Результат) КАК Результат,
	|	СУММА(ЕСННачисления.Скидка) КАК Скидка
	|ПОМЕСТИТЬ ВТДоходыПоМесяцамКодам
	|ИЗ
	|	РегистрНакопления.ЕСНСведенияОДоходах КАК ЕСННачисления
	|ГДЕ
	|	ЕСННачисления.Период МЕЖДУ &amp;НачалоНП И &amp;КонецНП
	|	И ЕСННачисления.Организация = &amp;Организация
	|	И (НЕ ЕСННачисления.ОблагаетсяЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(ЕСННачисления.Период),
	|	ГОД(ЕСННачисления.Период),
	|	ЕСННачисления.ФизЛицо,
	|	ЕСННачисления.КодДоходаЕСН
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Год,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(Периоды.Период) КАК Месяц,
	|	ГОД(Периоды.Период) КАК Год,
	|	ГражданствоФизЛиц.ФизЛицо КАК Физлицо
	|ПОМЕСТИТЬ ВТДанныеОПравеНаПенсию
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ПериодРегистрации КАК Период,
	|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
	|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТЕСН КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|			ПО Периоды.КонецМесяца &gt;= ГражданствоФизЛиц.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ГражданствоФизЛиц.ФизЛицо,
	|		Периоды.ПериодРегистрации) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
	|		ПО Периоды.ПериодРегистра = ГражданствоФизЛиц.Период
	|			И Периоды.Физлицо = ГражданствоФизЛиц.ФизЛицо
	|			И (ГражданствоФизЛиц.НеИмеетПравоНаПенсию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Год,
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.Месяц КАК Месяц,
	|	Периоды.Год КАК Год,
	|	ЕСТЬNULL(ВЫБОР КОГДА УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ , ЛОЖЬ) КАК УСН
	|ПОМЕСТИТЬ ВТУчетнаяПолитикаНалоговыйУчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.Месяц КАК Месяц,
	|		Периоды.Год КАК Год,
	|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТЕСН КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|			ПО Периоды.КонецМесяца &gt;= УчетнаяПолитикаНалоговыйУчет.Период
	|				И (Периоды.Год = ГОД(УчетнаяПолитикаНалоговыйУчет.Период))
	|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &amp;Организация)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Периоды.Месяц,
	|		Периоды.Год) КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаНалоговыйУчет
	|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
	|			И (Периоды.Год = ГОД(УчетнаяПолитикаНалоговыйУчет.Период))
	|			И (УчетнаяПолитикаНалоговыйУчет.Организация = &amp;Организация)
	|			И (УчетнаяПолитикаНалоговыйУчет.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.Месяц КАК Месяц,
	|	Доходы.Год КАК Год,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|					И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА Доходы.Результат - Доходы.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалоговаяБазаФБ,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН.ВходитВБазуФедеральныйБюджет
	|					И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|					И Иностр.Физлицо ЕСТЬ NULL 
	|				ТОГДА Доходы.Результат - Доходы.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК БазаПФР,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|					И Доходы.КодДоходаЕСН.ВходитВБазуФСС
	|					И ФизлицаБезНалоговойБазы.ФизЛицо ЕСТЬ NULL 
	|				ТОГДА Доходы.Результат - Доходы.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НалоговаяБазаФСС,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ Доходы.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеЯвляетсяОбъектом), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеДовольствиеВоеннослужащих)))
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоВсего,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыплатыЗаСчетПрибыли,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом))
	|				ТОГДА Доходы.Результат
	|			КОГДА Доходы.КодДоходаЕСН В (ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораГПХ), ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораАвторские))
	|				ТОГДА 0
	|			ИНАЧЕ Доходы.Скидка
	|		КОНЕЦ) КАК НеОблагаетсяПоСт238КромеДоговоров,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораГПХ)
	|				ТОГДА Доходы.Результат
	|			КОГДА Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораАвторские)
	|				ТОГДА Доходы.Результат - Доходы.Скидка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыплатыПоДоговорам,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеДовольствиеВоеннослужащих)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ДенежноеДовольствиеВоеннослужащих,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеСодержаниеПрокуроров)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыплатыПрокуроров,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
	|				ТОГДА Доходы.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПособияЗаСчетФСС
	|ПОМЕСТИТЬ ВТПоказателиДоходовПоМесяцам
	|ИЗ
	|	ВТДоходыПоМесяцамКодам КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФизлицаБезНалоговойБазы КАК ФизлицаБезНалоговойБазы
	|		ПО Доходы.ФизЛицо = ФизлицаБезНалоговойБазы.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОПравеНаПенсию КАК Иностр
	|		ПО Доходы.Месяц = Иностр.Месяц
	|			И Доходы.Год = Иностр.Год
	|			И Доходы.ФизЛицо = Иностр.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО Доходы.Месяц = УчетнаяПолитикаНалоговыйУчетУСН.Месяц
	|			И Доходы.Год = УчетнаяПолитикаНалоговыйУчетУСН.Год
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Год,
	|	Доходы.Месяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(МесяцыНП.ПериодРегистрации) КАК Месяц,
	|	ГОД(МесяцыНП.ПериодРегистрации) КАК Год,
	|	СУММА(ПоказателиДоходов.НалоговаяБазаФБ) КАК НалоговаяБазаФБ,
	|	СУММА(ПоказателиДоходов.БазаПФР) КАК БазаПФР,
	|	СУММА(ПоказателиДоходов.НалоговаяБазаФСС) КАК НалоговаяБазаФСС,
	|	СУММА(ПоказателиДоходов.НачисленоВсего) КАК НачисленоВсего,
	|	СУММА(ПоказателиДоходов.ВыплатыЗаСчетПрибыли) КАК ВыплатыЗаСчетПрибыли,
	|	СУММА(ПоказателиДоходов.НеОблагаетсяПоСт238КромеДоговоров) КАК НеОблагаетсяПоСт238КромеДоговоров,
	|	СУММА(ПоказателиДоходов.ВыплатыПоДоговорам) КАК ВыплатыПоДоговорам,
	|	СУММА(ПоказателиДоходов.ПособияЗаСчетФСС) КАК ПособияЗаСчетФСС
	|ПОМЕСТИТЬ ВТПоказателиДоходовНарастающимИтогом
	|ИЗ
	|	ВТЕСН КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиДоходовПоМесяцам КАК ПоказателиДоходов
	|		ПО МесяцыНП.Месяц &gt;= ПоказателиДоходов.Месяц
	|			И МесяцыНП.Год = ПоказателиДоходов.Год
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(МесяцыНП.ПериодРегистрации),
	|	ГОД(МесяцыНП.ПериодРегистрации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(ЕСНИсчисленный.Период) КАК Месяц,
	|	ГОД(ЕСНИсчисленный.Период) КАК Год,
	|	СУММА(ЕСНИсчисленный.ФедеральныйБюджет) КАК ИсчисленоФБ,
	|	СУММА(ЕСНИсчисленный.ФСС) КАК ИсчисленоФСС,
	|	СУММА(ЕСНИсчисленный.ФФОМС) КАК ИсчисленоФФОМС,
	|	СУММА(ЕСНИсчисленный.ТФОМС) КАК ИсчисленоТФОМС,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФБ * (Ставки.ФедеральныйБюджетВПроцентах - Ставки.ПФРНакопительная1вПроцентах - Ставки.ПФРСтраховая1вПроцентах)) / 100 КАК НеПодлежитФБ,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФСС * Ставки.ФССвПроцентах / 100) КАК НеПодлежитФСС,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФОМС * Ставки.ФФОМСвПроцентах / 100) КАК НеПодлежитФФОМС,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФОМС * Ставки.ТФОМСвПроцентах / 100) КАК НеПодлежитТФОМС,
	|	СУММА(ЕСНИсчисленный.ФедеральныйБюджет - ЕСНИсчисленный.ПримененнаяЛьготаФБ * (Ставки.ФедеральныйБюджетВПроцентах - Ставки.ПФРНакопительная1вПроцентах - Ставки.ПФРСтраховая1вПроцентах) / 100 - ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД + ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоФБ,
	|	СУММА(ЕСНИсчисленный.ФСС - ЕСНИсчисленный.ПримененнаяЛьготаФСС * Ставки.ФССвПроцентах / 100) КАК НачисленоФСС,
	|	СУММА(ЕСНИсчисленный.ФФОМС - ЕСНИсчисленный.ПримененнаяЛьготаФОМС * Ставки.ФФОМСвПроцентах / 100) КАК НачисленоФФОМС,
	|	СУММА(ЕСНИсчисленный.ТФОМС - ЕСНИсчисленный.ПримененнаяЛьготаФОМС * Ставки.ТФОМСвПроцентах / 100) КАК НачисленоТФОМС,
	|	СУММА(ЕСНИсчисленный.ПримененнаяЛьготаФБ) КАК ПримененнаяЛьготаИнвалида,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоПФРНакопительная,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоПФРСтраховая,
	|	СУММА(ВЫБОР
	|			КОГДА УчетнаяПолитикаНалоговыйУчетУСН.УСН ЕСТЬ NULL 
	|				ТОГДА ЕСНИсчисленный.ПФРСтраховая - ЕСНИсчисленный.ПФРСтраховаяЕНВД + ЕСНИсчисленный.ПФРНакопительная - ЕСНИсчисленный.ПФРНакопительнаяЕНВД
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачисленоПФР
	|ПОМЕСТИТЬ ВТПоказателиНалоговПоМесяцам
	|ИЗ
	|	РегистрНакопления.ЕСНИсчисленный КАК ЕСНИсчисленный
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчетУСН
	|		ПО (МЕСЯЦ(ЕСНИсчисленный.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Месяц)
	|			И (ГОД(ЕСНИсчисленный.Период) = УчетнаяПолитикаНалоговыйУчетУСН.Год)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСтавкахЕСНиПФР КАК Ставки
	|		ПО (Ставки.Год = ГОД(ЕСНИсчисленный.Период))
	|			И (Ставки.НомерСтрокиСтавок = 1)
	|			И ЕСНИсчисленный.Организация.ВидСтавокЕСНиПФР = Ставки.ВидСтавокЕСНиПФР
	|ГДЕ
	|	ЕСНИсчисленный.Период МЕЖДУ &amp;НачалоНП И &amp;КонецНП
	|	И ЕСНИсчисленный.Организация = &amp;Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(ЕСНИсчисленный.Период),
	|	ГОД(ЕСНИсчисленный.Период),
	|	Ставки.ФедеральныйБюджетВПроцентах,
	|	Ставки.ПФРНакопительная1вПроцентах,
	|	Ставки.ПФРСтраховая1вПроцентах,
	|	Ставки.ФССвПроцентах,
	|	Ставки.ФФОМСвПроцентах,
	|	Ставки.ТФОМСвПроцентах
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МЕСЯЦ(МесяцыНП.ПериодРегистрации) КАК Месяц,
	|	ГОД(МесяцыНП.ПериодРегистрации) КАК Год,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.ИсчисленоФБ) КАК ЧИСЛО(15, 5)) КАК ИсчисленоФБ,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.ИсчисленоФСС) КАК ЧИСЛО(15, 5)) КАК ИсчисленоФСС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.ИсчисленоФФОМС) КАК ЧИСЛО(15, 5)) КАК ИсчисленоФФОМС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.ИсчисленоТФОМС) КАК ЧИСЛО(15, 5)) КАК ИсчисленоТФОМС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НеПодлежитФБ) КАК ЧИСЛО(15, 5)) КАК НеПодлежитФБ,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НеПодлежитФСС) КАК ЧИСЛО(15, 5)) КАК НеПодлежитФСС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НеПодлежитФФОМС) КАК ЧИСЛО(15, 5)) КАК НеПодлежитФФОМС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НеПодлежитТФОМС) КАК ЧИСЛО(15, 5)) КАК НеПодлежитТФОМС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоФБ) КАК ЧИСЛО(15, 5)) КАК НачисленоФБ,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоФСС) КАК ЧИСЛО(15, 5)) КАК НачисленоФСС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоФФОМС) КАК ЧИСЛО(15, 5)) КАК НачисленоФФОМС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоТФОМС) КАК ЧИСЛО(15, 5)) КАК НачисленоТФОМС,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.ПримененнаяЛьготаИнвалида) КАК ЧИСЛО(15, 5)) КАК ПримененнаяЛьготаИнвалида,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРНакопительная) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРНакопительная,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФРСтраховая) КАК ЧИСЛО(15, 5)) КАК НачисленоПФРСтраховая,
	|	ВЫРАЗИТЬ(СУММА(ПоказателиНалогов.НачисленоПФР) КАК ЧИСЛО(15, 5)) КАК НачисленоПФР
	|ПОМЕСТИТЬ ВТПоказателиНалоговНарастающимИтогом
	|ИЗ
	|	ВТЕСН КАК МесяцыНП
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговПоМесяцам КАК ПоказателиНалогов
	|		ПО МесяцыНП.Месяц &gt;= ПоказателиНалогов.Месяц
	|			И МесяцыНП.Год = ПоказателиНалогов.Год
	|
	|СГРУППИРОВАТЬ ПО
	|	МЕСЯЦ(МесяцыНП.ПериодРегистрации),
	|	ГОД(МесяцыНП.ПериодРегистрации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСН.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСН.Колонка2 - ЕСТЬNULL(ПоказателиДоходов.НачисленоВсего, 0) КАК РазностьСумм2,
	|	ЕСН.Колонка3 - ЕСТЬNULL(ПоказателиДоходов.ВыплатыЗаСчетПрибыли, 0) КАК РазностьСумм3,
	|	ЕСН.Колонка4 - ЕСТЬNULL(ПоказателиДоходов.НеОблагаетсяПоСт238КромеДоговоров, 0) КАК РазностьСумм4,
	|	ЕСН.Колонка5 - ЕСТЬNULL(ПоказателиДоходов.ВыплатыПоДоговорам, 0) КАК РазностьСумм5,
	|	0 КАК РазностьСумм6,
	|	ЕСН.Колонка7 - ЕСТЬNULL(ПоказателиДоходов.НалоговаяБазаФБ, 0) КАК РазностьСумм7,
	|	ЕСН.Колонка8 - ЕСТЬNULL(ПоказателиДоходов.НалоговаяБазаФСС, 0) КАК РазностьСумм8,
	|	ЕСН.Колонка9 - ЕСТЬNULL(ПоказателиДоходов.НалоговаяБазаФБ, 0) КАК РазностьСумм9,
	|	ЕСН.Колонка10 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.ИсчисленоФБ, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.ИсчисленоФБ, 0)) КАК РазностьСумм10,
	|	ЕСН.Колонка11 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.ИсчисленоФСС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.ИсчисленоФСС, 0)) КАК РазностьСумм11,
	|	ЕСН.Колонка12 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.ИсчисленоФФОМС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.ИсчисленоФФОМС, 0)) КАК РазностьСумм12,
	|	ЕСН.Колонка13 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.ИсчисленоТФОМС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.ИсчисленоТФОМС, 0)) КАК РазностьСумм13,
	|	ЕСН.Колонка14 - ЕСТЬNULL(ПоказателиДоходов.БазаПФР, 0) КАК РазностьСумм14,
	|	ЕСН.Колонка15 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФР, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФР, 0)) КАК РазностьСумм15,
	|	ЕСН.Колонка16 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРСтраховая, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРСтраховая, 0)) КАК РазностьСумм16,
	|	ЕСН.Колонка17 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоПФРНакопительная, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоПФРНакопительная, 0)) КАК РазностьСумм17,
	|	ЕСН.Колонка18 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.ПримененнаяЛьготаИнвалида, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.ПримененнаяЛьготаИнвалида, 0)) КАК РазностьСумм18,
	|	ЕСН.Колонка19 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НеПодлежитФБ, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НеПодлежитФБ, 0)) КАК РазностьСумм19,
	|	ЕСН.Колонка20 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НеПодлежитФСС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НеПодлежитФСС, 0)) КАК РазностьСумм20,
	|	ЕСН.Колонка21 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НеПодлежитФФОМС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НеПодлежитФФОМС, 0)) КАК РазностьСумм21,
	|	ЕСН.Колонка22 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НеПодлежитТФОМС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НеПодлежитТФОМС, 0)) КАК РазностьСумм22,
	|	ЕСН.Колонка23 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоФБ, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоФБ, 0)) КАК РазностьСумм23,
	|	ЕСН.Колонка24 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоФСС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоФСС, 0)) КАК РазностьСумм24,
	|	ЕСН.Колонка25 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоФФОМС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоФФОМС, 0)) КАК РазностьСумм25,
	|	ЕСН.Колонка26 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоТФОМС, 0) - ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоТФОМС, 0)) КАК РазностьСумм26,
	|	ЕСН.Колонка27 - ЕСТЬNULL(ПоказателиДоходов.ПособияЗаСчетФСС, 0) КАК РазностьСумм27,
	|	0 КАК РазностьСумм28,
	|	ЕСН.Колонка29 - (ЕСТЬNULL(ПоказателиНалоговНарастающимИтогом.НачисленоФСС, 0) - ЕСТЬNULL(ПоказателиДоходовНарастающимИтогом.ПособияЗаСчетФСС, 0) - (ЕСТЬNULL(ПоказателиНалоговПоПрошлыйМесяц.НачисленоФСС, 0) - ЕСТЬNULL(ПоказателиДоходовПоПрошлыйМесяц.ПособияЗаСчетФСС, 0))) КАК РазностьСумм29,
	|	0 КАК РазностьСумм30
	|ИЗ
	|	ВТЕСН КАК ЕСН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиДоходовПоМесяцам КАК ПоказателиДоходов
	|		ПО ЕСН.Месяц = ПоказателиДоходов.Месяц
	|			И ЕСН.Год = ПоказателиДоходов.Год
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговПоМесяцам КАК ПоказателиНалогов
	|		ПО ЕСН.Месяц = ПоказателиНалогов.Месяц
	|			И ЕСН.Год = ПоказателиНалогов.Год
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиДоходовНарастающимИтогом КАК ПоказателиДоходовНарастающимИтогом
	|		ПО ЕСН.Месяц = ПоказателиДоходовНарастающимИтогом.Месяц
	|			И ЕСН.Год = ПоказателиДоходовНарастающимИтогом.Год
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговНарастающимИтогом КАК ПоказателиНалоговНарастающимИтогом
	|		ПО ЕСН.Месяц = ПоказателиНалоговНарастающимИтогом.Месяц
	|			И ЕСН.Год = ПоказателиНалоговНарастающимИтогом.Год
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиНалоговНарастающимИтогом КАК ПоказателиНалоговПоПрошлыйМесяц
	|		ПО (ЕСН.Месяц - 1 = ПоказателиНалоговПоПрошлыйМесяц.Месяц)
	|			И ЕСН.Год = ПоказателиНалоговПоПрошлыйМесяц.Год
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиДоходовНарастающимИтогом КАК ПоказателиДоходовПоПрошлыйМесяц
	|		ПО (ЕСН.Месяц - 1 = ПоказателиДоходовПоПрошлыйМесяц.Месяц)
	|			И ЕСН.Год = ПоказателиДоходовПоПрошлыйМесяц.Год
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	
	Выборка = Запрос.Выполнить().Выбрать();

	ТекстОшибки = "";
	
	Пока Выборка.Следующий() Цикл
		Для Номер = 2 По 30 Цикл
			РазностьСумм = Выборка["РазностьСумм"+Номер];
			
			Если РазностьСумм &lt;&gt; 0 Тогда
				Если РазностьСумм &gt; 0 Тогда
					ТекстОшибки		= ТекстОшибки + Символы.ВК + "- ЕСН за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " по колонке " + Номер + " меньше на " + РазностьСумм;
				Иначе
					ТекстОшибки		= ТекстОшибки + Символы.ВК + "- ЕСН за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " по колонке " + Номер + " больше на " + (-РазностьСумм);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ТекстОшибки		= "Расхождение в сводной карточке учета ЕСН между старой и новой программой:" + ТекстОшибки;
		ТекстПричины	=
		"Для определения причины расхождения необходимо сформировать сводную карточку учета ЕСН в старой и новой программам и сравнить суммы за месяц, в котором есть расхождения.";

		ЗафиксироватьОшибку(мЭтапКонвертации, ТекстОшибки, ТекстПричины);
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПроверитьОтражениеВУчетеЗаМесяц" ИспользуетсяПриЗагрузке="true">
			<Текст>Если НЕ ПустаяСтрока(мОбработкаОбмена.Параметры.ОтражениеВУчетеЗаМесяц) Тогда
	МассивОтраженийВУчете = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(мОбработкаОбмена.Параметры.ОтражениеВУчетеЗаМесяц, "|");

	ТаблицаОтраженийВУчете = Новый ТаблицаЗначений;
	ТаблицаОтраженийВУчете.Колонки.Добавить("ПериодРегистрации",	Новый ОписаниеТипов("Дата"));
	ТаблицаОтраженийВУчете.Колонки.Добавить("СчетКредита",			Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаОтраженийВУчете.Колонки.Добавить("Сумма",				Новый ОписаниеТипов("Число"));

	СписокНеправильныхСчетов = "";
	
	Для Каждого ОтражениеВУчетеЗаМесяц Из МассивОтраженийВУчете Цикл
		ТекущееОтражениеВУчете = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(ОтражениеВУчетеЗаМесяц, ";");
		
		Для КоличествоСчетов = 1 По (ТекущееОтражениеВУчете.Количество() - 1) / 2 Цикл
			КодСчета = ТекущееОтражениеВУчете[КоличествоСчетов*2-1];
			
			Счет = ПланыСчетов.Хозрасчетный.НайтиПоКоду(КодСчета);
			Если Счет.Пустая() Тогда
				Если ЗначениеЗаполнено(СписокНеправильныхСчетов) Тогда
					СписокНеправильныхСчетов = СписокНеправильныхСчетов + ", ";
				КонецЕсли;
				СписокНеправильныхСчетов = СписокНеправильныхСчетов + КодСчета;
			КонецЕсли;
			
			Строка = ТаблицаОтраженийВУчете.Добавить();
			Строка.ПериодРегистрации	= XMLЗначение(Тип("Дата"), ТекущееОтражениеВУчете[0]);
			Строка.СчетКредита			= Счет;
			Строка.Сумма				= ТекущееОтражениеВУчете[КоличествоСчетов*2];
		КонецЦикла;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СписокНеправильныхСчетов) Тогда
		ЗафиксироватьОшибку(мЭтапКонвертации, "В программе отсутствуют следующие счета: """ + СписокНеправильныхСчетов + """", "План счетов в программе Зарплата+Кадры не соответствует плану счетов из программы бухучета, указанной в настройках программы.");
	КонецЕсли;
	
	Запрос = Новый Запрос;

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("ТаблицаОтраженийВУчете",	ТаблицаОтраженийВУчете);
	Запрос.УстановитьПараметр("Организация",			мОбработкаОбмена.Параметры.Организация);
	Запрос.УстановитьПараметр("ДатаОкончания",			мОбработкаОбмена.ДатаОкончания);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтраженияВУчете.ПериодРегистрации КАК ПериодРегистрации,
	|	ОтраженияВУчете.СчетКредита,
	|	ОтраженияВУчете.Сумма
	|ПОМЕСТИТЬ ВТОтраженияВУчете77
	|ИЗ
	|	&amp;ТаблицаОтраженийВУчете КАК ОтраженияВУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	СУММА(ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТОтраженияВУчете8
	|ИЗ
	|	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплатыВРеглУчетеОтражениеВУчете
	|ГДЕ
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(&amp;ДатаОкончания, ГОД) И КОНЕЦПЕРИОДА(&amp;ДатаОкончания, МЕСЯЦ)
	|	И (НЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПометкаУдаления)
	|	И ВЫБОР
	|			КОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Ссылка.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация
	|			ИНАЧЕ ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.Организация.ГоловнаяОрганизация
	|		КОНЕЦ = &amp;Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.СчетКт,
	|	ОтражениеЗарплатыВРеглУчетеОтражениеВУчете.Ссылка.ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОтраженияВУчете.ПериодРегистрации КАК ПериодРегистрации,
	|	ВТОтраженияВУчете.СчетКредита КАК СчетКредита,
	|	ВТОтраженияВУчете.СчетКредита КАК КодСчета,
	|	ЕСТЬNULL(ВТОтраженияВУчете.Сумма, 0) - ЕСТЬNULL(ВТОтраженияВУчете8.Сумма, 0) + ЕСТЬNULL(ОшибкиОкругления.Погрешность, 0) КАК РазностьСумм
	|ИЗ
	|	ВТОтраженияВУчете77 КАК ВТОтраженияВУчете
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтраженияВУчете8 КАК ВТОтраженияВУчете8
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВТОтраженияВУчете8.ПериодРегистрации КАК ПериодРегистрации,
	|				ВТОтраженияВУчете8.СчетКт КАК СчетКт,
	|				ВЫБОР
	|					КОГДА ВТОтраженияВУчете8.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|						ТОГДА ЕСТЬNULL(ВТОтраженияВУчете8.Сумма - (ВЫРАЗИТЬ(ЕСНИсчисленный.ФСС КАК ЧИСЛО(15, 2))), 0)
	|					КОГДА ВТОтраженияВУчете8.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЕСН_ФБ)
	|						ТОГДА ЕСТЬNULL(ВТОтраженияВУчете8.Сумма - (ВЫРАЗИТЬ(ЕСНИсчисленный.ФБ КАК ЧИСЛО(15, 2))), 0)
	|					КОГДА ВТОтраженияВУчете8.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФФОМС)
	|						ТОГДА ЕСТЬNULL(ВТОтраженияВУчете8.Сумма - (ВЫРАЗИТЬ(ЕСНИсчисленный.ФФОМС КАК ЧИСЛО(15, 2))), 0)
	|					КОГДА ВТОтраженияВУчете8.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТФОМС)
	|						ТОГДА ЕСТЬNULL(ВТОтраженияВУчете8.Сумма - (ВЫРАЗИТЬ(ЕСНИсчисленный.ТФОМС КАК ЧИСЛО(15, 2))), 0)
	|					КОГДА ВТОтраженияВУчете8.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_нак)
	|						ТОГДА ЕСТЬNULL(ВТОтраженияВУчете8.Сумма - (ВЫРАЗИТЬ(ЕСНИсчисленный.ПФРНакопительная КАК ЧИСЛО(15, 2))), 0)
	|					КОГДА ВТОтраженияВУчете8.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_страх)
	|						ТОГДА ЕСТЬNULL(ВТОтраженияВУчете8.Сумма - (ВЫРАЗИТЬ(ЕСНИсчисленный.ПФРСтраховая КАК ЧИСЛО(15, 2))), 0)
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК Погрешность
	|			ИЗ
	|				ВТОтраженияВУчете8 КАК ВТОтраженияВУчете8
	|					ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ЕСНИсчисленный.Период КАК Период,
	|						СУММА(ЕСНИсчисленный.ФедеральныйБюджетОборот - ЕСНИсчисленный.ПФРНакопительнаяОборот - ЕСНИсчисленный.ПФРСтраховаяОборот) КАК ФБ,
	|						СУММА(ЕСНИсчисленный.ФССОборот) КАК ФСС,
	|						СУММА(ЕСНИсчисленный.ФФОМСОборот) КАК ФФОМС,
	|						СУММА(ЕСНИсчисленный.ТФОМСОборот) КАК ТФОМС,
	|						СУММА(ЕСНИсчисленный.ПФРНакопительнаяОборот) КАК ПФРНакопительная,
	|						СУММА(ЕСНИсчисленный.ПФРСтраховаяОборот) КАК ПФРСтраховая
	|					ИЗ
	|						РегистрНакопления.ЕСНИсчисленный.Обороты(НАЧАЛОПЕРИОДА(&amp;ДатаОкончания, ГОД), КОНЕЦПЕРИОДА(&amp;ДатаОкончания, МЕСЯЦ), Месяц, Организация = &amp;Организация) КАК ЕСНИсчисленный
	|					
	|					СГРУППИРОВАТЬ ПО
	|						ЕСНИсчисленный.Период) КАК ЕСНИсчисленный
	|					ПО ВТОтраженияВУчете8.ПериодРегистрации = ЕСНИсчисленный.Период) КАК ОшибкиОкругления
	|			ПО ВТОтраженияВУчете8.СчетКт = ОшибкиОкругления.СчетКт
	|				И ВТОтраженияВУчете8.ПериодРегистрации = ОшибкиОкругления.ПериодРегистрации
	|		ПО ВТОтраженияВУчете.ПериодРегистрации = ВТОтраженияВУчете8.ПериодРегистрации
	|			И ВТОтраженияВУчете.СчетКредита = ВТОтраженияВУчете8.СчетКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	КодСчета";

	Выборка = Запрос.Выполнить().Выбрать();

	ТекстОшибки = "";

	Пока Выборка.Следующий() Цикл
		Если Выборка.РазностьСумм &lt;&gt; 0 Тогда
			Если Выборка.РазностьСумм &gt; 0 Тогда
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- отражение в учете за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " по Кт " + Выборка.СчетКредита + " меньше на " + Выборка.РазностьСумм;
			Иначе
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- отражение в учете за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " по Кт " + Выборка.СчетКредита + " больше на " + (-Выборка.РазностьСумм);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ТекстОшибки		= "Расхождение в отражении в учете между старой и новой программой:" + ТекстОшибки;
		ТекстПричины	=
		"Для определения причины расхождения необходимо сформировать свод проводок в старой программе и отчет по отражению в регл. учете новой программе и сравнить суммы по кредиту счета за месяц, в котором есть расхождения.";

		ЗафиксироватьОшибку(мЭтапКонвертации, ТекстОшибки, ТекстПричины);
	КонецЕсли;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПроверитьСводЗаМесяц" ИспользуетсяПриЗагрузке="true">
			<Текст>Если НЕ ПустаяСтрока(мОбработкаОбмена.Параметры.СводЗаМесяц) Тогда
	МассивСводов = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(мОбработкаОбмена.Параметры.СводЗаМесяц, "|");

	ТаблицаСводов = Новый ТаблицаЗначений;
	ТаблицаСводов.Колонки.Добавить("ПериодРегистрации",	Новый ОписаниеТипов("Дата"));
	ТаблицаСводов.Колонки.Добавить("Начисления",		Новый ОписаниеТипов("Число"));
	ТаблицаСводов.Колонки.Добавить("НатуральныеДоходы",	Новый ОписаниеТипов("Число"));
	ТаблицаСводов.Колонки.Добавить("Удержания",			Новый ОписаниеТипов("Число"));
	ТаблицаСводов.Колонки.Добавить("Выплаты",			Новый ОписаниеТипов("Число"));

	Для Каждого СводЗаМесяц Из МассивСводов Цикл
		ТекущийСвод = ОбщегоНазначенияЗК.РазложитьСтрокуВМассивПодстрок(СводЗаМесяц, ";");
		
		Строка = ТаблицаСводов.Добавить();
		Строка.ПериодРегистрации	= XMLЗначение(Тип("Дата"), ТекущийСвод[0]);
		Строка.Начисления			= ТекущийСвод[1];
		Строка.НатуральныеДоходы	= ТекущийСвод[2];
		Строка.Удержания			= ТекущийСвод[3];
		Строка.Выплаты				= ТекущийСвод[4];
	КонецЦикла;

	Запрос = Новый Запрос;

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("ТаблицаСводов",	ТаблицаСводов);
	Запрос.УстановитьПараметр("Организация",	мОбработкаОбмена.Параметры.Организация);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Своды.ПериодРегистрации КАК ПериодРегистрации,
	|	Своды.Начисления,
	|	Своды.НатуральныеДоходы,
	|	Своды.Удержания,
	|	Своды.Выплаты
	|ПОМЕСТИТЬ ВТСводы
	|ИЗ
	|	&amp;ТаблицаСводов КАК Своды
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Своды.ПериодРегистрации КАК ПериодРегистрации,
	|	Своды.Начисления - ЕСТЬNULL(ЗапросПоНачислениям.Результат, 0) КАК РазницаНачислений,
	|	Своды.НатуральныеДоходы - ЕСТЬNULL(ЗапросПоНатуральнымДоходам.Результат, 0) КАК РазницаНатуральныхДоходов,
	|	Своды.Удержания - ЕСТЬNULL(ЗапросПоУдержаниям.Результат, 0) КАК РазницаУдержаний,
	|	Своды.Выплаты - ЕСТЬNULL(ЗапросПоВыплатам.Результат, 0) КАК РазницаВыплат
	|ИЗ
	|	ВТСводы КАК Своды
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|			СУММА(Начисления.Результат) КАК Результат
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|				СУММА(ОсновныеНачисления.Результат) КАК Результат
	|			ИЗ
	|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|			ГДЕ
	|				(НЕ ОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|				И ОсновныеНачисления.Организация = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ОсновныеНачисления.ПериодРегистрации
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ДополнительныеНачисления.ПериодРегистрации,
	|				СУММА(ДополнительныеНачисления.Результат)
	|			ИЗ
	|				РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|			ГДЕ
	|				(НЕ ДополнительныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме)
	|				И ДополнительныеНачисления.Организация = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДополнительныеНачисления.ПериодРегистрации) КАК Начисления
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Начисления.ПериодРегистрации) КАК ЗапросПоНачислениям
	|		ПО Своды.ПериодРегистрации = ЗапросПоНачислениям.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Начисления.ПериодРегистрации КАК ПериодРегистрации,
	|			СУММА(Начисления.Результат) КАК Результат
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|				СУММА(ОсновныеНачисления.Результат) КАК Результат
	|			ИЗ
	|				РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
	|			ГДЕ
	|				ОсновныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				И ОсновныеНачисления.Организация = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ОсновныеНачисления.ПериодРегистрации
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ДополнительныеНачисления.ПериодРегистрации,
	|				СУММА(ДополнительныеНачисления.Результат)
	|			ИЗ
	|				РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисления
	|			ГДЕ
	|				ДополнительныеНачисления.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме
	|				И ДополнительныеНачисления.Организация = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДополнительныеНачисления.ПериодРегистрации
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				НДФЛСведенияОДоходах.ПериодРегистрации,
	|				СУММА(НДФЛСведенияОДоходах.СуммаДохода)
	|			ИЗ
	|				РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|			ГДЕ
	|				НДФЛСведенияОДоходах.КодДохода В (ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2610ПоСтавке13), ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2610ПоСтавке35))
	|				И НДФЛСведенияОДоходах.ИсчисленоИзЗарплаты
	|				И НДФЛСведенияОДоходах.СуммаДохода &lt;&gt; 0
	|				И НДФЛСведенияОДоходах.Организация = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				НДФЛСведенияОДоходах.ПериодРегистрации) КАК Начисления
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Начисления.ПериодРегистрации) КАК ЗапросПоНатуральнымДоходам
	|		ПО Своды.ПериодРегистрации = ЗапросПоНатуральнымДоходам.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Удержания.ПериодРегистрации КАК ПериодРегистрации,
	|			СУММА(Удержания.Результат) КАК Результат
	|		ИЗ
	|			(ВЫБРАТЬ
	|				Удержания.ПериодРегистрации КАК ПериодРегистрации,
	|				СУММА(Удержания.Результат) КАК Результат
	|			ИЗ
	|				РегистрРасчета.УдержанияРаботниковОрганизаций КАК Удержания
	|			ГДЕ
	|				Удержания.Организация = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Удержания.ПериодРегистрации
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ),
	|				СУММА(НДФЛРасчетыСБюджетом.Налог)
	|			ИЗ
	|				РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|			ГДЕ
	|				НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|				И НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
	|				И НДФЛРасчетыСБюджетом.Организация = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ)
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Период, МЕСЯЦ),
	|				СУММА(ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты)
	|			ИЗ
	|				РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
	|			ГДЕ
	|				ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты
	|				И ВЫБОР
	|						КОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|							ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация
	|						ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|					КОНЕЦ = &amp;Организация
	|			
	|			СГРУППИРОВАТЬ ПО
	|				НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Период, МЕСЯЦ)) КАК Удержания
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Удержания.ПериодРегистрации) КАК ЗапросПоУдержаниям
	|		ПО Своды.ПериодРегистрации = ЗапросПоУдержаниям.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Выплаты.ПериодРегистрации КАК ПериодРегистрации,
	|			СУММА(Выплаты.Результат) КАК Результат
	|		ИЗ
	|			(ВЫБРАТЬ
	|				НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.Период, МЕСЯЦ) КАК ПериодРегистрации,
	|				СУММА(ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетов) КАК Результат
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
	|			ГДЕ
	|				ВЫБОР
	|						КОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|							ТОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация
	|						ИНАЧЕ ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|					КОНЕЦ = &amp;Организация
	|				И ВзаиморасчетыСРаботникамиОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.Период, МЕСЯЦ)) КАК Выплаты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Выплаты.ПериодРегистрации) КАК ЗапросПоВыплатам
	|		ПО Своды.ПериодРегистрации = ЗапросПоВыплатам.ПериодРегистрации
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";

	Выборка = Запрос.Выполнить().Выбрать();

	ТекстОшибки = "";
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.РазницаНачислений &lt;&gt; 0 Тогда
			Если Выборка.РазницаНачислений &gt; 0 Тогда
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- начисления за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " меньше на " + Выборка.РазницаНачислений;
			Иначе
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- начисления за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " больше на " + (-Выборка.РазницаНачислений);
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.РазницаНатуральныхДоходов &lt;&gt; 0 Тогда
			Если Выборка.РазницаНатуральныхДоходов &gt; 0 Тогда
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- натуральные доходы за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " меньше на " + Выборка.РазницаНатуральныхДоходов;
			Иначе
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- натуральные доходы за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " больше на " + (-Выборка.РазницаНатуральныхДоходов);
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.РазницаУдержаний &lt;&gt; 0 Тогда
			Если Выборка.РазницаУдержаний &gt; 0 Тогда
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- удержания за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " меньше на " + Выборка.РазницаУдержаний;
			Иначе
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- удержания за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " больше на " + (-Выборка.РазницаУдержаний);
			КонецЕсли;
		КонецЕсли;
		
		Если Выборка.РазницаВыплат &lt;&gt; 0 Тогда
			Если Выборка.РазницаВыплат &gt; 0 Тогда
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- выплаты за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " меньше на " + Выборка.РазницаВыплат;
			Иначе
				ТекстОшибки		= ТекстОшибки + Символы.ВК + "- выплаты за " + Формат(Выборка.ПериодРегистрации, "ДФ='ММММ гггг ""г.""'") + " больше на " + (-Выборка.РазницаВыплат);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ТекстОшибки		= "Расхождение в своде начисленной зарплаты между старой и новой программой:" + ТекстОшибки;
		ТекстПричины	=
		"Для определения причины расхождения необходимо сформировать свод начисленной зарплаты в старой и новой программе и сравнить суммы по сводам за месяц, в котором есть расхождения.
		|ВНИМАНИЕ! Выплаты физическим лицам - не сотрудникам, в своде не отображаются.";
	
		ЗафиксироватьОшибку(мЭтапКонвертации, ТекстОшибки, ТекстПричины);
	КонецЕсли;
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПроверкаНаПреобразованиеВЧисло" ИспользуетсяПриЗагрузке="false">
			<Текст>ПроверяемоеЗначение = ИсходящиеДанные;

ВозможноПреобразоватьВЧисло = 1;
Попытка
	ПроверяемоеЗначениеЧисло = Число(ПроверяемоеЗначение)
Исключение
	ВозможноПреобразоватьВЧисло = 0
КонецПопытки;

Возврат ВозможноПреобразоватьВЧисло</Текст>
		</Алгоритм>
		<Алгоритм Имя="РазделитьСотрудниковНаПорции" ИспользуетсяПриЗагрузке="false">
			<Текст>ПереноситьТолькоСотрудников	= ИсходящиеДанные;
ВключатьСовместителей		= ВходящиеДанные;

СписокСотрудников = СоздатьОбъект("СписокЗначений");

ПорцияСотрудников = СоздатьОбъект("СписокЗначений");
КоличествоСотрудников = 0;

СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
СпрСотрудники.ВыбратьЭлементы();
Пока СпрСотрудники.ПолучитьЭлемент() = 1 Цикл
	Если СпрСотрудники.ЭтоГруппа() = 1 Тогда
		Продолжить;
	КонецЕсли;
	Если (ВключатьСовместителей &lt;&gt; 1) И (СпрСотрудники.ОсновнойЭлемент &lt;&gt; СпрСотрудники.ТекущийЭлемент()) Тогда
		Продолжить;
	КонецЕсли;
	Если (ПустоеЗначение(Параметры.ФизическоеЛицоДляОтладкиВыгрузки) = 0) И (Параметры.ФизическоеЛицоДляОтладкиВыгрузки &lt;&gt; СпрСотрудники.ОсновнойЭлемент) Тогда
		Продолжить;
	КонецЕсли;
	
	Если ПереноситьТолькоСотрудников = 1 Тогда
		Если ПустоеЗначение(глРаботалСотрудник(СпрСотрудники.ТекущийЭлемент(), ДатаНачала, ДатаОкончания)) = 1 Тогда
			АвторскийДоговор	= ДействуетАвторскийДоговор(СпрСотрудники.ТекущийЭлемент(), ДатаНачала, ДатаОкончания);
			ДоговорПодряда		= ?(глВидРасчетаДействует(СпрСотрудники.ТекущийЭлемент(), ВидРасчета.ОплатаПоДоговору, ДатаНачала, ДатаОкончания) = 1, 1, 0);
			
			Если (АвторскийДоговор = 0) И (ДоговорПодряда = 0) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если КоличествоСотрудников = 100 Тогда
		ПорцияСотрудников.Сортировать();
		СписокСотрудников.ДобавитьЗначение(ПорцияСотрудников);
		ПорцияСотрудников = СоздатьОбъект("СписокЗначений");
		КоличествоСотрудников = 0;
	КонецЕсли;
	
	ПорцияСотрудников.ДобавитьЗначение(СпрСотрудники.ТекущийЭлемент());
	КоличествоСотрудников = КоличествоСотрудников + 1;
КонецЦикла;
Если ПорцияСотрудников.РазмерСписка() &gt; 0 Тогда
	СписокСотрудников.ДобавитьЗначение(ПорцияСотрудников);
КонецЕсли;

Возврат СписокСотрудников;</Текст>
		</Алгоритм>
		<Алгоритм Имя="РаспределитьВзаиморасчетыПоИФ" ИспользуетсяПриЗагрузке="true">
			<Текст>// В ЗУП действий не требуется</Текст>
		</Алгоритм>
		<Алгоритм Имя="РаспрОсновногоЗаработкаРаботниковПослеЗагрузки" ИспользуетсяПриЗагрузке="true">
			<Текст>Объект.ТаблицаРегистровСведений.Очистить();

Строка = Объект.ТаблицаРегистровСведений.Добавить();
Строка.Имя				= "РаспределениеОсновногоЗаработкаРаботниковОрганизаций";
Строка.Представление	= "Распределение основного заработка работников";

// Выгрузим данные и свернем, что бы не было дублей
ТаблицаРаспределения = Объект.Движения.РаспределениеОсновногоЗаработкаРаботниковОрганизаций.Выгрузить();
ТаблицаРаспределения.Свернуть("ПериодРегистрации,Сотрудник,Организация,СпособОтраженияВБухучете,ПодпадаетПодЕНВД", "ДоляСпособаОтражения");
Объект.Движения.РаспределениеОсновногоЗаработкаРаботниковОрганизаций.Загрузить(ТаблицаРаспределения);</Текст>
		</Алгоритм>
		<Алгоритм Имя="РассчитатьДниЧасыПоПятидневке" ИспользуетсяПриЗагрузке="true">
			<Текст>Объект.Записать();

МД = Метаданные.РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций;
МассивРеквизитов = Новый Массив;
Для Каждого Измерение Из МД.Измерения Цикл
	МассивРеквизитов.Добавить(Измерение.Имя);
КонецЦикла;
Для Каждого Ресурс Из МД.Ресурсы Цикл
	Если Ресурс.Имя = "ОтработаноДнейПоПятидневке" Или Ресурс.Имя = "ОтработаноЧасовПоПятидневке"
	 Или Ресурс.Имя = "НормаДнейПоПятидневке" Или Ресурс.Имя = "НормаЧасовПоПятидневке" Тогда
		Продолжить;
	КонецЕсли;
	МассивРеквизитов.Добавить(Ресурс.Имя);
КонецЦикла;
Для Каждого Реквизит Из МД.Реквизиты Цикл
	МассивРеквизитов.Добавить(Реквизит.Имя);
КонецЦикла;

Запрос = Новый Запрос;
Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);

Запрос.Текст = "ВЫБРАТЬ
|	ОсновныеНачисления.ПериодРегистрации,
|	ОсновныеНачисления.Регистратор,
|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
|	ОсновныеНачисления.ВидРасчета,
|	ОсновныеНачисления.ПериодДействия,
|	ОсновныеНачисления.ПериодДействияНачало,
|	ОсновныеНачисления.ПериодДействияКонец,
|	ОсновныеНачисления.БазовыйПериодНачало,
|	ОсновныеНачисления.БазовыйПериодКонец,
|	ОсновныеНачисления.Активность,
|	ОсновныеНачисления.Сторно,
|	СУММА(ВЫБОР
|			КОГДА ОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени И НЕ (ОсновныеНачисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных), ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных)))
|				ТОГДА ПроизводственныйКалендарь.Пятидневка * ВЫБОР КОГДА ОсновныеНачисления.Сторно ТОГДА -1 ИНАЧЕ 1 КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ) КАК ОтработаноДнейПоПятидневке,
|	СУММА(ВЫБОР
|			КОГДА ОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени И НЕ (ОсновныеНачисления.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаСверхурочных), ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных)))
|				ТОГДА ПроизводственныйКалендарь.Пятидневка * 8 * ВЫБОР КОГДА ОсновныеНачисления.Сторно ТОГДА -1 ИНАЧЕ 1 КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ) КАК ОтработаноЧасовПоПятидневке,
|	СУММА(ВЫБОР
|			КОГДА ОсновныеНачисления.ВидРасчета.ЗачетНормыВремени
|				ТОГДА ПроизводственныйКалендарь.Пятидневка * ВЫБОР КОГДА ОсновныеНачисления.Сторно ТОГДА -1 ИНАЧЕ 1 КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ) КАК НормаДнейПоПятидневке,
|	СУММА(ВЫБОР
|			КОГДА ОсновныеНачисления.ВидРасчета.ЗачетНормыВремени
|				ТОГДА ПроизводственныйКалендарь.Пятидневка * 8 * ВЫБОР КОГДА ОсновныеНачисления.Сторно ТОГДА -1 ИНАЧЕ 1 КОНЕЦ
|			ИНАЧЕ 0
|		КОНЕЦ) КАК НормаЧасовПоПятидневке";
Для Каждого Реквизит Из МассивРеквизитов Цикл
	Запрос.Текст = Запрос.Текст + ",
	|	ОсновныеНачисления." + Реквизит;
КонецЦикла;
Запрос.Текст = Запрос.Текст + "
|ИЗ
|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисления
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(Регистратор = &amp;Регистратор) КАК ОсновныеНачисленияФПД
|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК ПроизводственныйКалендарь
|			ПО (ПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ ОсновныеНачисленияФПД.ПериодДействияНачало И ОсновныеНачисленияФПД.ПериодДействияКонец)
|		ПО ОсновныеНачисления.Регистратор = ОсновныеНачисленияФПД.Регистратор
|			И ОсновныеНачисления.ПериодРегистрации = ОсновныеНачисленияФПД.ПериодРегистрации
|			И ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияФПД.НомерСтроки
|			И ОсновныеНачисления.ВидРасчета = ОсновныеНачисленияФПД.ВидРасчета
|			И ОсновныеНачисления.Сторно = ОсновныеНачисленияФПД.Сторно
|			И ОсновныеНачисления.Сотрудник = ОсновныеНачисленияФПД.Сотрудник
|ГДЕ
|	ОсновныеНачисления.Регистратор = &amp;Регистратор
|
|СГРУППИРОВАТЬ ПО
|	ОсновныеНачисления.ПериодРегистрации,
|	ОсновныеНачисления.Регистратор,
|	ОсновныеНачисления.НомерСтроки,
|	ОсновныеНачисления.ВидРасчета,
|	ОсновныеНачисления.ПериодДействия,
|	ОсновныеНачисления.ПериодДействияНачало,
|	ОсновныеНачисления.ПериодДействияКонец,
|	ОсновныеНачисления.БазовыйПериодНачало,
|	ОсновныеНачисления.БазовыйПериодКонец,
|	ОсновныеНачисления.Активность,
|	ОсновныеНачисления.Сторно";
Для Каждого Реквизит Из МассивРеквизитов Цикл
	Запрос.Текст = Запрос.Текст + ",
	|	ОсновныеНачисления." + Реквизит;
КонецЦикла;
Запрос.Текст = Запрос.Текст + "
|
|УПОРЯДОЧИТЬ ПО
|	НомерСтроки";
Объект.Движения.ОсновныеНачисленияРаботниковОрганизаций.Загрузить(Запрос.Выполнить().Выгрузить());</Текст>
		</Алгоритм>
		<Алгоритм Имя="РассчитатьОтпускПоУходу" ИспользуетсяПриЗагрузке="false">
			<Текст>Дни1					= ИсходящиеДанные;
Дни2					= ВходящиеДанные;
Дни						= Источник;
Сумма1					= Приемник;
Сумма2					= ТипПриемника;
Сумма					= Значение;
Документ				= Выражение;
ДатаНачалаПериода		= Пусто;
ДатаОкончанияПериода	= ВыборкаДанных;
Сотрудник				= Объект;

СреднемесячноеЧислоКадлендарныхДней = 30.4;
ДанныеОтпуска = Документ.ДанныеОтпускаПоУходуЗаРебенком;
СреднедневнойЗаработок = ДанныеОтпуска.СреднийЗаработок;
ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(ДанныеОтпуска,ДатаНачалаПериода,ДатаОкончанияПериода,"КоличествоДетей,ЕстьПервыйРебенок"); 

КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
Для Номер = 1 по КоличествоСтрок Цикл 
	
	ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
	СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1, ДатаОкончанияПериода); // дата окончания действия значения находящегося в первой строке
	
	// т.к. значений может быть несколько, берем последнее значение на дату
	Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), ДатаОкончанияПериода)) Тогда
		Продолжить;
	КонецЕсли;
	
	Начало = ТаблицаРеквизитов.Дата;
	Окончание = СледующаяДата;
	КоличествоДетей = ТаблицаРеквизитов.КоличествоДетей;
	ЕстьПервыйРебенок = ТаблицаРеквизитов.ЕстьПервыйРебенок;
	
	ДнейОплаты = Окончание - Начало + 1;
	
	Если ЕстьПервыйРебенок = 0 Тогда
		//нет первого ребенка
		Дни2 = 1;
	Иначе
		//есть первый ребенок и есть не первый ребенок
		Дни1 = 1;
		Дни2 = КоличествоДетей - 1;
	КонецЕсли;
	
	Если ЕстьПервыйРебенок=1 Тогда
		
		Если КоличествоДетей &gt; 1 Тогда
			
			//посчитаем сумму пособия на первого ребенка
			
			КалендарныхДнейВМесяце= КонМесяца(Окончание) - НачМесяца(Окончание) +1;
			
			//получим ограничения пособий
			РК = Макс(глПолучитьРеквизитДляОтчета(Сотрудник,"РайонныйКоэффициентРФ",Окончание),1);
			КонстантаМинимумПервый 	= Константа.ПособиеПоУходуДоПолутораЛетМинимумПервый.Получить(Окончание);
			КонстантаМинимумВторой 	= Константа.ПособиеПоУходуДоПолутораЛетМинимумВторой.Получить(Окончание);
			КонстантаМаксимум 		= Константа.ПособиеПоУходуДоПолутораЛетМаксимум.Получить(Окончание);
			
			ПроцентОплаты = Мин(40 * КоличествоДетей,100); 
			
			ОграничениеПособияСнизу = (КонстантаМинимумПервый  + КонстантаМинимумВторой * (КоличествоДетей - 1)) * РК;
			ОграничениеПособияСверху = КонстантаМаксимум * КоличествоДетей * РК;     
			
			
			Если ДнейОплаты &lt; КалендарныхДнейВМесяце Тогда 
				СуммаПособия = Окр(ДнейОплаты * СреднедневнойЗаработок * ПроцентОплаты / 100,2);
				Если СуммаПособия &lt;= Окр(ОграничениеПособияСнизу / СреднемесячноеЧислоКадлендарныхДней * ДнейОплаты,2) Тогда 
					//применили ограничение снизу
					Сумма1 = Сумма1 + Окр(КонстантаМинимумПервый * РК / СреднемесячноеЧислоКадлендарныхДней * ДнейОплаты,2);
				ИначеЕсли СуммаПособия &gt;= Окр(ОграничениеПособияСверху / СреднемесячноеЧислоКадлендарныхДней * ДнейОплаты,2) Тогда  
					//применили ограничение сверху 
					Сумма1 = Сумма1 + Окр(КонстантаМаксимум * РК / СреднемесячноеЧислоКадлендарныхДней * ДнейОплаты,2);
				Иначе
					Сумма1 = Сумма1 + Окр(ДнейОплаты * СреднедневнойЗаработок * 40 / 100,2);
				КонецЕсли;
			Иначе 
				СуммаПособия = Окр(СреднемесячноеЧислоКадлендарныхДней * СреднедневнойЗаработок * ПроцентОплаты / 100,2);
				Если СуммаПособия &lt;= ОграничениеПособияСнизу Тогда 
					//применили ограничение снизу
					Сумма1 = Сумма1 + Окр(КонстантаМинимумПервый * РК,2);
				ИначеЕсли СуммаПособия &gt;= ОграничениеПособияСверху Тогда  
					//применили ограничение сверху 
					Сумма1 = Сумма1 + Окр(КонстантаМаксимум * РК,2);
				Иначе
					Сумма1 = Сумма1 + Окр(СреднемесячноеЧислоКадлендарныхДней * СреднедневнойЗаработок * 40 / 100,2);
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе //есть только первый ребенок  
			Сумма1 = Сумма;
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;	

Сумма2	= Сумма - Сумма1;
Дни		= Дни1 + Дни2;

ИсходящиеДанные	= Дни1;
ВходящиеДанные	= Дни2;
Источник		= Дни;
Приемник		= Сумма1;
ТипПриемника	= Сумма2;
Значение		= Сумма;</Текст>
		</Алгоритм>
		<Алгоритм Имя="РассчитатьОтпускПоУходу2010" ИспользуетсяПриЗагрузке="false">
			<Текст>Дни1					= ИсходящиеДанные;
Дни2					= ВходящиеДанные;
Дни						= Источник;
Сумма1					= Приемник;
Сумма2					= ТипПриемника;
Сумма					= Значение;
Документ				= Выражение;
ДатаНачалаПериода		= Пусто;
ДатаОкончанияПериода	= ВыборкаДанных;
Сотрудник				= Объект;
НомерРелизаИБ			= Число(КоллекцияОбъектов);

СреднемесячноеЧислоКадлендарныхДней = 30.4;
ДанныеОтпуска = Документ.ДанныеОтпускаПоУходуЗаРебенком;
СреднедневнойЗаработок = Макс(ДанныеОтпуска.СреднийЗаработок, ДанныеОтпуска.СреднедневнойЗаработокПереходногоПериода2010);
ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(ДанныеОтпуска,ДатаНачалаПериода,ДатаОкончанияПериода,"КоличествоДетей,ЕстьПервыйРебенок");

Если НомерРелизаИБ &gt;= 770309 Тогда
	Если Документ.РасчетПоПравилам2010Года=1 Тогда 
		ПредельнаяВеличинаБазы = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода('15.12.2010'));
	Иначе
		ПредельнаяВеличинаБазы = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода(ДатаНачалаПериода));
	КонецЕсли;
Иначе
	ПредельнаяВеличинаБазы = Константа.ПредельнаяВеличинаБазыСтраховыхВзносов.Получить(КонГода(ДатаНачалаПериода));
КонецЕсли;

КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
Для Номер = 1 по КоличествоСтрок Цикл 
	
	ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
	СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1, ДатаОкончанияПериода); // дата окончания действия значения находящегося в первой строке
	
	// т.к. значений может быть несколько, берем последнее значение на дату
	Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), ДатаОкончанияПериода)) Тогда
		Продолжить;
	КонецЕсли;
	
	Начало = ТаблицаРеквизитов.Дата;
	Окончание = СледующаяДата;
	КоличествоДетей = ТаблицаРеквизитов.КоличествоДетей;
	ЕстьПервыйРебенок = ТаблицаРеквизитов.ЕстьПервыйРебенок;
	
	ДнейОплаты = Окончание - Начало + 1;
	
	//получим ограничения пособий
	РК = Макс(глПолучитьРеквизитДляОтчета(Сотрудник,"РайонныйКоэффициентРФ",Окончание),1);
	КонстантаМинимумПервый 	= Константа.ПособиеПоУходуДоПолутораЛетМинимумПервый.Получить(Окончание);
	КонстантаМинимумВторой 	= Константа.ПособиеПоУходуДоПолутораЛетМинимумВторой.Получить(Окончание);
	
	Если ЕстьПервыйРебенок = 0 Тогда
		//нет первого ребенка
		Дни2 = 1;
	Иначе
		//есть первый ребенок и есть не первый ребенок
		Дни1 = 1;
		Дни2 = КоличествоДетей - 1;
	КонецЕсли;
	
	Если ЕстьПервыйРебенок=1 Тогда
		
		Если КоличествоДетей &gt; 1 Тогда
			
			//посчитаем долю пособия на первого ребенка
			
			КалендарныхДнейВМесяце= КонМесяца(Окончание) - НачМесяца(Окончание) +1;
			ПроцентОплаты = Мин(40 * КоличествоДетей,100);
			
			ОграничениеПособияСнизу = (КонстантаМинимумПервый * ЕстьПервыйРебенок 
										+ КонстантаМинимумВторой * (КоличествоДетей - ЕстьПервыйРебенок)) * РК;
			
			СреднийЗаработок = Окр(СреднедневнойЗаработок * 30.4, 2);
			
			//ограничение сверху
			РазмерОграничения = Окр(ПредельнаяВеличинаБазы / 12, 2);
			РазмерПособия     = Окр(Мин(СреднийЗаработок,РазмерОграничения) * ПроцентОплаты / 100, 2);
			
			// пособие за месяц с учетом ограничений
			ОрганиченныйРазмер = Макс(РазмерПособия, ОграничениеПособияСнизу);
			
			Если ДнейОплаты &lt; КалендарныхДнейВМесяце Тогда 
				СуммаПособия = Окр(ОрганиченныйРазмер / КалендарныхДнейВМесяце * ДнейОплаты, 2);
				Если РазмерПособия &lt;= ОграничениеПособияСнизу Тогда 
					//применили ограничение снизу
					Сумма1 = Сумма1 + Окр(КонстантаМинимумПервый * РК / СреднемесячноеЧислоКадлендарныхДней * ДнейОплаты,2);
				ИначеЕсли СреднийЗаработок &gt;= РазмерОграничения Тогда  
					//применили ограничение сверху 
					Сумма1 = Сумма1 + Окр(РазмерОграничения * 0.4 / СреднемесячноеЧислоКадлендарныхДней * ДнейОплаты,2);
				Иначе
					Сумма1 = Сумма1 + Окр(СреднедневнойЗаработок * 0.4 * ДнейОплаты,2);
				КонецЕсли;
			Иначе 
				СуммаПособия = ОрганиченныйРазмер;
				Если РазмерПособия &lt;= ОграничениеПособияСнизу Тогда 
					//применили ограничение снизу
					Сумма1 = Сумма1 + Окр(КонстантаМинимумПервый * РК,2);
				ИначеЕсли РазмерПособия &gt;= РазмерОграничения Тогда  
					//применили ограничение сверху 
					Сумма1 = Сумма1 + РазмерОграничения;
				Иначе
					Сумма1 = Сумма1 + Окр(СреднедневнойЗаработок * 0.4 * СреднемесячноеЧислоКадлендарныхДней,2);
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе //есть только первый ребенок  
			Сумма1 = Сумма;
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;	

Сумма2 = Сумма - Сумма1;
Дни = Дни1 + Дни2;

ИсходящиеДанные	= Дни1;
ВходящиеДанные	= Дни2;
Источник		= Дни;
Приемник		= Сумма1;
ТипПриемника	= Сумма2;
Значение		= Сумма;</Текст>
		</Алгоритм>
		<Алгоритм Имя="РассчитатьОтпускПоУходу2011" ИспользуетсяПриЗагрузке="false">
			<Текст>Дни1					= ИсходящиеДанные;
Дни2					= ВходящиеДанные;
Дни						= Источник;
Сумма1					= Приемник;
Сумма2					= ТипПриемника;
Сумма					= Значение;
Документ				= Выражение;
ДатаНачалаПериода		= Пусто;
ДатаОкончанияПериода	= ВыборкаДанных;
Сотрудник				= Объект;

СреднемесячноеЧислоКадлендарныхДней = 30.4;
ДанныеОтпуска = Документ.ДанныеОтпускаПоУходуЗаРебенком;
СреднедневнойЗаработок = Макс(ДанныеОтпуска.СреднийЗаработок, ДанныеОтпуска.СреднедневнойЗаработокПереходногоПериода2010);
ТаблицаРеквизитов = глПолучитьТаблицуИсторииРеквизитов(ДанныеОтпуска,ДатаНачалаПериода,ДатаОкончанияПериода,"КоличествоДетей,ЕстьПервыйРебенок");

КоличествоСтрок = ТаблицаРеквизитов.КоличествоСтрок();
Для Номер = 1 по КоличествоСтрок Цикл 
	
	ТаблицаРеквизитов.ПолучитьСтрокуПоНомеру(Номер);
	СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер+1,"Дата")-1, ДатаОкончанияПериода); // дата окончания действия значения находящегося в первой строке
	
	// т.к. значений может быть несколько, берем последнее значение на дату
	Если (Номер &lt; КоличествоСтрок) и (ТаблицаРеквизитов.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаРеквизитов.ПолучитьЗначение(Номер + 1, "Дата"), ДатаОкончанияПериода)) Тогда
		Продолжить;
	КонецЕсли;
	
	Начало = ТаблицаРеквизитов.Дата;
	Окончание = СледующаяДата;
	КоличествоДетей = ТаблицаРеквизитов.КоличествоДетей;
	ЕстьПервыйРебенок = ТаблицаРеквизитов.ЕстьПервыйРебенок;
	
	ДнейОплаты = Окончание - Начало + 1;
	
	//получим ограничения пособий
	РК = Макс(глПолучитьРеквизитДляОтчета(Сотрудник,"РайонныйКоэффициентРФ",Окончание),1);
	КонстантаМинимумПервый 	= Константа.ПособиеПоУходуДоПолутораЛетМинимумПервый.Получить(Окончание);
	КонстантаМинимумВторой 	= Константа.ПособиеПоУходуДоПолутораЛетМинимумВторой.Получить(Окончание);
	
	Если ЕстьПервыйРебенок = 0 Тогда
		//нет первого ребенка
		Дни2 = 1;
	Иначе
		//есть первый ребенок и есть не первый ребенок
		Дни1 = 1;
		Дни2 = КоличествоДетей - 1;
	КонецЕсли;
	
	Если ЕстьПервыйРебенок=1 Тогда
		
		Если КоличествоДетей &gt; 1 Тогда
			
			//посчитаем долю пособия на первого ребенка
			
			КалендарныхДнейВМесяце= КонМесяца(Окончание) - НачМесяца(Окончание) +1;
			ПроцентОплаты = Мин(40 * КоличествоДетей,100);
			
			ОграничениеПособияСнизу = (КонстантаМинимумПервый * ЕстьПервыйРебенок 
										+ КонстантаМинимумВторой * (КоличествоДетей - ЕстьПервыйРебенок)) * РК;
			
			СреднийЗаработок = Окр(СреднедневнойЗаработок * 30.4, 2);
			
			РазмерПособия     = Окр(СреднийЗаработок * ПроцентОплаты / 100, 2);
			
			// пособие за месяц с учетом ограничений
			ОрганиченныйРазмер = Макс(РазмерПособия, ОграничениеПособияСнизу);
			
			Если ДнейОплаты &lt; КалендарныхДнейВМесяце Тогда 
				СуммаПособия = Окр(ОрганиченныйРазмер / КалендарныхДнейВМесяце * ДнейОплаты, 2);
				Если РазмерПособия &lt;= ОграничениеПособияСнизу Тогда 
					//применили ограничение снизу
					Сумма1 = Сумма1 + Окр(КонстантаМинимумПервый * РК / СреднемесячноеЧислоКадлендарныхДней * ДнейОплаты,2);
				Иначе
					Сумма1 = Сумма1 + Окр(СреднедневнойЗаработок * 0.4 * ДнейОплаты,2);
				КонецЕсли;
			Иначе 
				СуммаПособия = ОрганиченныйРазмер;
				Если РазмерПособия &lt;= ОграничениеПособияСнизу Тогда 
					//применили ограничение снизу
					Сумма1 = Сумма1 + Окр(КонстантаМинимумПервый * РК,2);
				Иначе
					Сумма1 = Сумма1 + Окр(СреднедневнойЗаработок * 0.4 * СреднемесячноеЧислоКадлендарныхДней,2);
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе //есть только первый ребенок  
			Сумма1 = Сумма;
		КонецЕсли;
		
	КонецЕсли;
	
КонецЦикла;	

Сумма2 = Сумма - Сумма1;
Дни = Дни1 + Дни2;

ИсходящиеДанные	= Дни1;
ВходящиеДанные	= Дни2;
Источник		= Дни;
Приемник		= Сумма1;
ТипПриемника	= Сумма2;
Значение		= Сумма;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляЕСН" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаЕСНСведенияОДоходах	= ИсходящиеДанные;
ТаблицаЕСННачисления		= ВходящиеДанные;
ОбобщенныйСотрудник			= Источник;
ДатаАктуальности			= Приемник;

Год = ДатаГод(ДатаАктуальности);
Месяц = ДатаМесяц(ДатаАктуальности);

ДатаОтменыЕСНприЕНВД = глДатаУчетаЕНВД;

// далее в запросах будем использовать список сотрудников
Если ТипЗначения(ОбобщенныйСотрудник)=11  Тогда //здесь был передан элемент справочника - добавим его в только что созданный список
	Сотрудники=СоздатьОбъект("СписокЗначений");
	Сотрудники.ДобавитьЗначение(ОбобщенныйСотрудник);
Иначе //а здесь был передан список элементов - будем использовать непосредственно его
	Сотрудники=ОбобщенныйСотрудник; 
КонецЕсли;
ВсегоСотров = Сотрудники.РазмерСписка();  

// подготовим к сбору данных запросами: начало и окончание периодов 
// осмотра ж.р. по налогам с ФОТ и ручных корректировок в справочнике
ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");

ПервыйМесяц = 1;
ПоследнийМесяц = Месяц;
НачалоГода = ЖрнЗарплата.НачалоПериодаПоДате(НачГода(ДатаАктуальности)+15);
КонецПериодаОсмотра = ДатаАктуальности;
Январь=Строка(Год*100+1);
Декабрь=Строка(Год*100 + Месяц);

// запрос к ж.р. по налогам с ФОТ - собираем суммы уже начисленного налога
ЗапросПоЕСН=СоздатьОбъект("Запрос");

ТекстЗапроса="//{{ЗАПРОС(ПоЕСН)
|С НачалоГода по КонецПериодаОсмотра;
|Объект = ЖурналРасчетов.НалогиСФОТ.Объект;
|ВР = ЖурналРасчетов.НалогиСФОТ.ВидРасч;
|Результат = ЖурналРасчетов.НалогиСФОТ.Результат;
|Регистрация = ЖурналРасчетов.НалогиСФОТ.ДатаОкончания;
|Функция РезультатВР = Сумма(Результат);
|Группировка Объект Без Групп Без Упорядочивания;
|Группировка Регистрация;
|Группировка ВР;";
Если ВсегоСотров = 0 Тогда
ИначеЕсли ВсегоСотров = 1 Тогда
	СотрудникВЗапрос = Сотрудники.ПолучитьЗначение(1);
	ТекстЗапроса=ТекстЗапроса+"
	|Условие(Объект = СотрудникВЗапрос);";
Иначе
	ТекстЗапроса=ТекстЗапроса+"
	|Условие(Объект в Сотрудники);";
КонецЕсли;
ТекстЗапроса=ТекстЗапроса+"
|Условие(Результат &lt;&gt; 0);
|"//}}ЗАПРОС
;

Если ЗапросПоЕСН.Выполнить(ТекстЗапроса)=0 Тогда
	Возврат 0;
КонецЕсли;

// чтобы не обращаться лишний раз в информационную базу,
// составим таблицу соответствия видов расчета из облагаемой базы ЕСН
// и придуманных нами типов дохода по ЕСН
СоответствиеВРкодамДоходовЕСН = СоздатьОбъект("ТаблицаЗначений");
СоответствиеВРкодамДоходовЕСН.НоваяКолонка(,"ВидРасчета");
СоответствиеВРкодамДоходовЕСН.НоваяКолонка(,"Строка",100);
СоответствиеВРкодамДоходовЕСН.НоваяКолонка(,"Строка",1);

СправочникВР = СоздатьОбъект("Справочник.ВидыРасчетов");
СправочникРасчетнойБазы = СоздатьОбъект("Справочник.ВидыРасчетовБаза");
Если СправочникВР.НайтиПоРеквизиту("Расчет",ВидРасчета.ПФР,1)=1  Тогда
	СправочникРасчетнойБазы.ИспользоватьВладельца(СправочникВР.ТекущийЭлемент());
КонецЕсли; 

НалоговаяБазаИсправленаПользователем=0;
Если (СправочникРасчетнойБазы.ВыбратьЭлементы(1)=1) и (СправочникВР.Выбран()=1) Тогда 
	НалоговаяБазаИсправленаПользователем=1;
КонецЕсли;
ВсегоВР=ГруппаРасчетов.ВсеНачисления.Количество();
Для Сч = 1 По ВсегоВР Цикл
	ВР=ГруппаРасчетов.ВсеНачисления.ПолучитьРасчет(Сч);
	ВходитВБазу=?(НалоговаяБазаИсправленаПользователем=1,СправочникРасчетнойБазы.НайтиПоРеквизиту("Расчет",ВР,0),ВР.ВходитВГруппу(ГруппаРасчетов.ОблагаетсяЕСН));
	ВидРасчетаНастроенПользователем = СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
	// не будем включать в налоговую базу те в.р., которые пользователь еще не описал
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 0) или (ВидРасчетаНастроенПользователем = 1) Тогда
		НомерСтроки="";
		Если СоответствиеВРкодамДоходовЕСН.НайтиЗначение(ВР,НомерСтроки,1)=0 Тогда 
			СоответствиеВРкодамДоходовЕСН.НоваяСтрока();
			НомерСтроки=СоответствиеВРкодамДоходовЕСН.КоличествоСтрок();
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,1,ВР);
			НомерДоходаПоНДФЛ = СправочникВР.ВидДохода.Код;
			Если (ВР = ВидРасчета.ОплатаПоДоговору) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Договора подряда");
				
			ИначеЕсли  (ВР = ВидРасчета.Авторские) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Авторские договора"); 
				
			ИначеЕсли (ВР = ВидРасчета.ЛицензионныеВыплаты) или (НомерДоходаПоНДФЛ = "1300") Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Лицензионные договора"); 
				
			ИначеЕсли (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВД) или (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2004)
			или (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2005) или (ВР = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2007)
			или (ВР = ВидРасчета.ОплатаБЛПоТекущемуМесяцуВозмещаемаяФССприЕНВД)
			или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВД) или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2004)
			или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005) или (ВР = ВидРасчета.ОтпускПоБеременностиПоТекущемуМесяцуВозмещаемыйФССприЕНВД)
			или (ВР = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Возмещаемые ФСС"); 
				
			ИначеЕсли (ВР = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Расходы за счет ФСС особые");
				
			ИначеЕсли ВР=ВидРасчета.МатПомощьПриРожденииРебенка	Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"МатпомощьПриРожденииРебенка");
				
			ИначеЕсли (ВР.ВходитВГруппу(ГруппаРасчетов.РасходыЗаСчетФСС) = 1) или (СправочникВР.РасходыЗаСчетФСС = 1) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Расходы за счет ФСС");
				
			ИначеЕсли (СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.НеЯвляетсяОбъектомЕСН) Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Не является объектом по ЕСН");
				
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЗаСчетПрибыли Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,Строка(СправочникВР.ТипДоходаДляЕСН));
				
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЦеликомОблагаемый Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"");
				
			ИначеЕсли ВходитВБазу = 1 Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,Строка(СправочникВР.ТипДоходаДляЕСН));
				
			Иначе // остались невходящие в налоговую базу в.р.; из них надо выделить объект налогообложения
				Если СправочникВР.РасходыЗаСчетФСС = 1 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Расходы за счет ФСС");
					
				ИначеЕсли Найти(",4000,4600,3010,3020,2800,2900,2400,2640,",","+НомерДоходаПоНДФЛ+",") &gt; 0 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Не является объектом по ЕСН");
					
				ИначеЕсли (Лев(НомерДоходаПоНДФЛ,2)="15") Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Не является объектом по ЕСН");
					
				Иначе // остальное не облагается по разным пунктам ст. 238 НК РФ
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"-1");
					
				КонецЕсли;
			КонецЕсли;
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,3,?(СправочникВР.Выбран()=1,Строка(СправочникВР.ДовольствиеВС),"1"));
		КонецЕсли;
	КонецЕсли;
КонецЦикла;   // конец перебора ВР  ВсеНачисления
ВсегоВР=ГруппаРасчетов.ДоходыВНатуральнойФорме.Количество();
Для Сч = 1 По ВсегоВР Цикл
	ВР=ГруппаРасчетов.ДоходыВНатуральнойФорме.ПолучитьРасчет(Сч);
	ВходитВБазу=?(НалоговаяБазаИсправленаПользователем=1,СправочникРасчетнойБазы.НайтиПоРеквизиту("Расчет",ВР,0),ВР.ВходитВГруппу(ГруппаРасчетов.ОблагаетсяЕСН));
	ВидРасчетаНастроенПользователем=0;
	Если ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1 Тогда
		ВидРасчетаНастроенПользователем = СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
	КонецЕсли;
	// не будем включать в налоговую базу те в.р., которые пользователь еще не описал
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 0) или (ВидРасчетаНастроенПользователем = 1) Тогда
		НомерСтроки="";
		Если СоответствиеВРкодамДоходовЕСН.НайтиЗначение(ВР,НомерСтроки,1)=0 Тогда 
			Если ВидРасчетаНастроенПользователем = 0 Тогда
				СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
			КонецЕсли;
			СоответствиеВРкодамДоходовЕСН.НоваяСтрока();
			НомерСтроки=СоответствиеВРкодамДоходовЕСН.КоличествоСтрок();
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,1,ВР);
			Если СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.НеЯвляетсяОбъектомЕСН Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Не является объектом по ЕСН");
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЗаСчетПрибыли Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,Строка(СправочникВР.ТипДоходаДляЕСН));
			ИначеЕсли СправочникВР.ТипДоходаДляЕСН = Перечисление.ТипыДоходовДляЕСН.ЦеликомОблагаемый Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"");
			ИначеЕсли ВходитВБазу = 1 Тогда
				СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,Строка(СправочникВР.ТипДоходаДляЕСН));
			Иначе // остались невходящие в налоговую базу в.р.; из них надо выделить объект налогообложения
				НомерДоходаПоНДФЛ = СправочникВР.ВидДохода.Код;
				Если СправочникВР.РасходыЗаСчетФСС = 1 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Расходы за счет ФСС");
				ИначеЕсли Найти(",4000,4600,3010,3020,2800,2900,2400,2640,",","+НомерДоходаПоНДФЛ+",") &gt; 0 Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Не является объектом по ЕСН");
				ИначеЕсли (Лев(НомерДоходаПоНДФЛ,2)="15") Тогда
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"Не является объектом по ЕСН");
				Иначе // остальное не облагается по разным пунктам ст. 238 НК РФ
					СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,2,"-1");
				КонецЕсли;
			КонецЕсли;
			СоответствиеВРкодамДоходовЕСН.УстановитьЗначение(НомерСтроки,3,?(СправочникВР.Выбран()=1,Строка(СправочникВР.ДовольствиеВС),"1"));
		КонецЕсли;
	КонецЕсли;
КонецЦикла;  // конец перебора ВР  ДоходыВНатуральнойФорме

//  проинициализируем выходную таблицу значений
ДоходыВычетыНалогиСотрудников=СоздатьОбъект("ТаблицаЗначений");

//  1-ая колонка (строка, 12) - ключевое поле для поиска данных; 
//	состоит из 10 символов табельного номера сотрудника и 2-х символов месяца. 
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",12); 

ПорядокИсчисленияЕСН = Константа.ПорядокИсчисленияЕСН;

//2-ЕСНОблагаемаяПФР. с 2002 года - федеральный бюджет (размер зависит от галочки "НеВзиматьЕСНвПФР" у сотрудника)
//3-ЕСНОблагаемаяОМС
//4-ЕСНОблагаемаяФСС
//5-ПФРУд
//6-0ФФОМСУд
//7-0ТФОМСУд
//8-ФССУд                          
//9-ПособийЗаСчетФСС 
//10-НачисленоВсего
//11-ДенежноеДовольствие
//12-ЛьготаПоЕСНп1ст236, в 2002 году - пп. 14 п.1 ст.238
//13-НачисленоЗаСчетПрибыли
//14-ЛьготаПоЕСНп2ст238абз2
//15-ЛьготаПоЕСНп2ст238абз3
//16-ЛьготаПоЕСНпп13п1ст238
//17-ПрочихЛьготПоСт238
//18-ДоговораПодряда (кроме лицензионных)
//19-ДенежноеСодержаниеПрокуроров
//20-Льгота инвалидам
//21-Взносы на страховую пенсию
//22-Взносы на накопительную пенсию
//23-Облагаемая по страховым взносам в ПФР
//24-Лицензионные договора
//25-объект налогообложения ЕСН по видам деятельности, "подпадающим" под ЕНВД
//
// отдельно для взносов в ПФР
//26-ЛьготаПоЕСНп1ст236, в 2002 году - пп. 14 п.1 ст.238
//27-ЛьготаПоЕСНп2ст238абз2
//28-ЛьготаПоЕСНп2ст238абз3
//29-ЛьготаПоЕСНпп13п1ст238
//30-ПрочихЛьготПоСт238
//31-ПособийЗаСчетФСС 
Для Сч = 2 По 4 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
КонецЦикла;
	// ПФРУд,ФФОМСУд,ТФОМСУд,ФССУд                          
Для Сч = 5 По 8 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",18,5);
КонецЦикла;

Для Сч = 9 По 20 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
КонецЦикла;

// Взносы на страховую пенсию, Взносы на накопительную пенсию
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",18,5);
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",18,5);

Для Сч = 23 По 31 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
КонецЦикла;
  

// колонка с "иностранной" облагаемой базой
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИностраннаяБаза","Число",15,2);	// 33 колонка
// колонка с "иностранной" облагаемой базой инвалида
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИностраннаяБазаИнвалида","Число",15,2);	// 34 колонка		
//с 35 по 37 - Льгота инвалидам по фондам
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ЛьготаИнвалидуФдБ","Число",15,2);	// 35 колонка
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ЛьготаИнвалидуОМС","Число",15,2);	// 36 колонка
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ЛьготаИнвалидуФСС","Число",15,2);	// 37 колонка

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОблагаемаяВзносамиПФР_ЕНВД","Число",15,2);			// 38 колонка	
ДоходыВычетыНалогиСотрудников.НоваяКолонка("УдержаноПФРнаСтраховуюПенсиюЕНВД","Число",18,5);	// 39 колонка	
ДоходыВычетыНалогиСотрудников.НоваяКолонка("УдержаноПФРнаНакопительнуюПенсиюЕНВД","Число",18,5);// 40 колонка		

// запрос к справочнику - данные о ручных корректировках, внесенных
// форму индивидуальной карточки по ЕСН
ЗапросПоЕСНкСправочникам=СоздатьОбъект("Запрос");

ТекстЗапроса="//{{ЗАПРОС(ПоЕСНкСправочникам)
|Сотр = Справочник.СЗВиЕСНДоходы.Владелец.ОсновнойЭлемент;
|ГодоМесяц = Справочник.СЗВиЕСНДоходы.ГодМесяц;
|УдержаноПФР = Справочник.СЗВиЕСНДоходы.УдержаноПФР;
|УдержаноФФОМС = Справочник.СЗВиЕСНДоходы.УдержаноФФОМС;
|УдержаноТФОМС = Справочник.СЗВиЕСНДоходы.УдержаноТФОМС;
|УдержаноФСС = Справочник.СЗВиЕСНДоходы.УдержаноФСС;
|УдержаноПФРнаСтраховуюПенсию = Справочник.СЗВиЕСНДоходы.УдержаноПФРнаСтраховуюПенсию;
|УдержаноПФРнаНакопительнуюПенсию = Справочник.СЗВиЕСНДоходы.УдержаноПФРнаНакопительнуюПенсию;
|НачисленоВсего = Справочник.СЗВиЕСНДоходы.НачисленоВсего;
|БЛзаСчетФСС = Справочник.СЗВиЕСНДоходы.БЛзаСчетФСС;
|ПрочиеРасходыЗаСчетФСС = Справочник.СЗВиЕСНДоходы.ПрочиеРасходыЗаСчетФСС;
|ст238п2а2 = Справочник.СЗВиЕСНДоходы.ст238п2а2;
|ст238п2а2_ПФР = Справочник.СЗВиЕСНДоходы.ст238п2а2_ПФР;
|РасходыЗаСчетФСС_ПФР = Справочник.СЗВиЕСНДоходы.РасходыЗаСчетФСС_ПФР;";
Если Год &lt; 2005 Тогда
	ТекстЗапроса= ТекстЗапроса + "
	|ст236п1 = Справочник.СЗВиЕСНДоходы.ст236п1;		
	|ст238п2а3 = Справочник.СЗВиЕСНДоходы.ст238п2а3;
	|ст238п1пп13 = Справочник.СЗВиЕСНДоходы.ст238п1пп13;	
	|ст236п1_ПФР = Справочник.СЗВиЕСНДоходы.ст236п1_ПФР;
	|ст238п2а3_ПФР = Справочник.СЗВиЕСНДоходы.ст238п2а3_ПФР;
	|ст238п1пп13_ПФР = Справочник.СЗВиЕСНДоходы.ст238п1пп13_ПФР;";
КонецЕсли;
ТекстЗапроса = ТекстЗапроса + "
|ПрочиеНеоблагаемыеДоходы_ПФР = Справочник.СЗВиЕСНДоходы.ПрочиеНеоблагаемыеДоходы_ПФР;
|ОбъектЕСНпоЕНВД = Справочник.СЗВиЕСНДоходы.ОбъектЕСНпоЕНВД;
|Стипендия = Справочник.СЗВиЕСНДоходы.Стипендия;
|Авторские = Справочник.СЗВиЕСНДоходы.Авторские;
|Лицензионные = Справочник.СЗВиЕСНДоходы.Лицензионные;
|ДенежноеДовольствиеВоенных = Справочник.СЗВиЕСНДоходы.ДенежноеДовольствиеВоенных;
|ДенежноеСодержаниеПрокуроров = Справочник.СЗВиЕСНДоходы.ДенежноеСодержаниеПрокуроров;
|НачисленияЗаСчетПрибыли = Справочник.СЗВиЕСНДоходы.НачисленияЗаСчетПрибыли;
|ПрочиеНеоблагаемыеДоходы = Справочник.СЗВиЕСНДоходы.ПрочиеНеоблагаемыеДоходы;
|Группировка Сотр без упорядочивания без групп;";

ТекстЗапроса=ТекстЗапроса+"
|Группировка ГодоМесяц;
|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));";  

Если ВсегоСотров &gt; 0 Тогда
	ТекстЗапроса=ТекстЗапроса+"
	|Условие(Сотр в Сотрудники);";
КонецЕсли;
ТекстЗапроса=ТекстЗапроса+"
|"//}}ЗАПРОС
;

Если ЗапросПоЕСНкСправочникам.Выполнить(ТекстЗапроса)=0 Тогда
	Возврат 0;
КонецЕсли;

Если ВсегоСотров = 0 Тогда // по всем сотрудникам - получим их список для построения выходной таблицы
	ТекстЗапроса =
	"//{{ЗАПРОС(ПодборСотрудников)
	|Сотрудник = Справочник.Сотрудники.ОсновнойЭлемент;
	|Группировка Сотрудник без групп;
	|"//}}ЗАПРОС
	;
	Запрос = СоздатьОбъект("Запрос");
	ПопытокВыполненияЗапроса = 10;
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если Запрос.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		Возврат 0;
	КонецЕсли;
	// выгрузим запрос в таблицу, а затем в список
	ВременнаяТаблица = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ВременнаяТаблица,,0);
	ВременнаяТаблица.Выгрузить(Сотрудники,,,"Сотрудник");
	ВременнаяТаблица = "";
	ВсегоСотров = Сотрудники.РазмерСписка()
КонецЕсли;

ИскатьЕНВД = Константа.ЕстьЕНВД;
ИскатьВоенных = Константа.ЕстьВоенные;

ОрганизацияИнвалидов = "000000000000"; 
КонстантаОрганизацияИнвалидов = Константа.ОрганизацияИнвалидов;
Для Сч = ПервыйМесяц По ПоследнийМесяц Цикл
	ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
	Если КонстантаОрганизацияИнвалидов.Получить(ДатаМесяца) = 1 Тогда
		ОрганизацияИнвалидов = ?(Сч=1,"",Лев(ОрганизацияИнвалидов,Сч-1))+"1"+?(Сч=12,"",Прав(ОрганизацияИнвалидов,12-Сч));
	КонецЕсли;
КонецЦикла;

// вспомогательные таблицы - для распределения результатов по счетам
ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределения.НоваяКолонка("Шаблон","Перечисление.ТипыДоходовДляЕСН",,,,,,);
ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);

// и выделения сумм, подпадающих под налогобложение ЕНВД
ТаблицаРаспределенияПоШаблПроводок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределенияПоШаблПроводок.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ТаблицаРаспределенияПоШаблПроводок.НоваяКолонка("Сумма","Число",15,2,,);

Если ИскатьЕНВД = 1 Тогда
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2); // для точного учета пособий за счет ФСС
КонецЕсли;
КолонкаПособийКРаспределению = ДоходыВычетыНалогиСотрудников.КоличествоКолонок();
Если ИскатьЕНВД = 1 Тогда
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2); // для точного учета пособий за счет ФСС
КонецЕсли; 

ДоходыВычетыНалогиСотрудников.НоваяКолонка("СкидкиАвторские","Число",15,2); //запоминаем сумму скидки по авторскому договору, для индивид. карточки ЕСН
		
ОбходСотрудниковДляЕСН(
	ТаблицаЕСНСведенияОДоходах,
	ТаблицаЕСННачисления,
	ВсегоСотров,
	Сотрудники,
	ЗапросПоЕСН,
	ЗапросПоЕСНкСправочникам,
	ДоходыВычетыНалогиСотрудников,
	ЖрнЗарплата,
	Год,
	ПервыйМесяц,
	ПоследнийМесяц,
	ОрганизацияИнвалидов,
	ИскатьВоенных,
	ТаблицаРаспределенияПоШаблПроводок,
	ТаблицаРаспределения,
	ИскатьЕНВД,
	КолонкаПособийКРаспределению,
	ДатаОтменыЕСНприЕНВД,
	СоответствиеВРкодамДоходовЕСН);
	
Возврат ДоходыВычетыНалогиСотрудников;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляНДФЛ2005" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем СуммыВычетов[20]; 
Перем ВычетыТекущие[20]; 
Перем ЗачтеноПоДивидендам[12];

Перем СуммыВычетовП[20]; 
Перем ВычетыТекущиеП[20];

ОбобщенныйСотрудник									= ИсходящиеДанные;
ДатаАктуальности									= ВходящиеДанные;
ТаблицаНДФЛСведенияОДоходах							= Источник;
ТаблицаНДФЛИмущественныеВычетыФизлиц				= Приемник;

ПорядокРасчетаНДФЛ	= Константа.УчетнаяПолитикаПоНДФЛ.Получить(КонГода(ДатаАктуальности));
НомерРелизаИБ		= Число(СтрЗаменить(Константа.НомерРелиза, ".",""));

Год = ДатаГод(ДатаАктуальности);
Если Год &lt; 2005 Тогда //сообщим, что расчеты до 2005 года не поддерживаются
	ТекстОшибки		= "Выгрузка ранее " + Год + " года не поддерживается.";
	ТекстДействия	= "При выгрузке НДФЛ укажите период с " + Год + " года.";
	
	Сообщить(ТекстОшибки + " " + ТекстДействия, "!");
	ЗафиксироватьОшибку(ТекстОшибки + "|" + ТекстДействия + "|Не останавливать перенос");
	Возврат 0
КонецЕсли;

ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
КонецПериодаОсмотра = ЖрнЗарплата.КонецТекущегоПериода();
НачалоГода = ЖрнЗарплата.НачалоПериодаПоДате(НачГода(ДатаАктуальности)+15);
ОкончаниеГода = ЖрнЗарплата.КонецПериодаПоДате(КонГода(ДатаАктуальности)-10); 

ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);

// скопируем структуру таблицы
ВремТаблицаНДФЛСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаНДФЛСведенияОДоходах.Загрузить(ТаблицаНДФЛСведенияОДоходах); 

// скопируем структуру таблицы
ВремТаблицаНДФЛИмущественныеВычетыФизлиц = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Загрузить(ТаблицаНДФЛИмущественныеВычетыФизлиц);

ФизЛица = СоздатьОбъект("СписокЗначений");
Если ТипЗначения(ОбобщенныйСотрудник) = 11  Тогда //здесь был передан элемент справочника - добавим его в только что созданный список
	ФизЛица.ДобавитьЗначение(ОбобщенныйСотрудник);
Иначе //а здесь был передан список элементов - будем использовать непосредственно его
	ФизЛица = ОбобщенныйСотрудник;
КонецЕсли;

ПорядокПредоставленияВычетов=СоздатьОбъект("СписокЗначений"); 
Если (Год &gt;=2009) и (НомерРелизаИБ &gt;= 770286) Тогда
	ПорядокПредоставленияВычетов.ДобавитьЗначение("108");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("110");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("111");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("109");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("112");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("113");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("103");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("104");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("105");
Иначе
	ПорядокПредоставленияВычетов.ДобавитьЗначение("101");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("102");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("106");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("107");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("103");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("104");
	ПорядокПредоставленияВычетов.ДобавитьЗначение("105");	
КонецЕсли;


//  проинициализируем выходную таблицу значений
ДоходыВычетыНалогиСотрудников=СоздатьОбъект("ТаблицаЗначений");
//  1-ая колонка (строка, 12) - ключевое поле для поиска данных; 
//	состоит из 10 символов табельного номера сотрудника и 2-х символов месяца. 
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",12);
//	2-ая колонка содержит таблицу доходов  
//	имеет 7 колонок: код дохода, размер дохода, код вычета, размер вычета,размер дохода из справочника, размер вычета из справочника и
//	в седьмой колонке - таблица сумм "СписокСуммПоВР", из которых собрана сумма текущего дохода (первая колонка - сумма, вторая колонка - ВР)
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"ТаблицаЗначений");
//  3-ая колонка содержит список значений из трех значений: 
//	первое значение		- список сумм стандартных вычетов, за месяц, указанный в первой колонке "верхней" таблицы, нарастающим итогом с начала года; в представлении содержится код вычета.
//	второе значение		- суммы облагаемой базы нарастающим итогом с начала года без учета имущественных вычетов ("бывшая" колонка 13)
//	третье значение		- размер примененных имущественных вычетов с кодом 313\311 нарастающим итогом с начала года, за месяц, указанный в первой колонке "верхней" таблицы;
//	четвертое значение	- размер примененных имущественных вычетов с кодом 312 нарастающим итогом с начала года, за месяц, указанный в первой колонке "верхней" таблицы;
//  
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"СписокЗначений");
//  4,5  колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду действия.
//  7,8  колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду регистрации.
//  10,11 колонки содержат суммы НДФЛ удержанного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду регистрации.
//  13,14 колонки содержат суммы облагаемой базы (обычная и дивиденты),
//	нарастающим итогом с начала года.
//  16,17 колонки содержат суммы переданные на взыскание в ИМНС 
//	нарастающим итогом с начала года. 
//  6-ая, 9-ая, 12-ая, 15-ая, 18-ая - это строки из 4-х чисел
Для Сч = 1 По 5 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	//строка из 4-х чисел Формата 15.2, разделенных ";" 4* ((15+1(для "точки")+2)+1(для "точки с запятой")) = 76
	//6-ая кол 	Сч=1: 4 величины НДФЛ исчисл. по ставке 35% по периоду действия
	//9-ая кол 	Сч=2: 4 величины НДФЛ исчисл. по ставке 35% по периоду рег.
	//12-ая кол Сч=3: 4 величины НДФЛ уд. по ставке 35% по периоду действия
	//15-ая кол Сч=4: 4 величины облагаемой базы по ставке 35%
	//18-ая кол Сч=5: 4 величины НДФЛ по ставке 35%, переданных на взыскание в ИМНС
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76);
КонецЦикла;
//  19-ая колонка содержит совокупный доход для исчисления вычетов
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
//  20-ая колонка содержит сумму вычетов, неиспользованных с начала года по текущий месяц (для расчетов от обратного)
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
//  21,22 и 23-я колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года - исчисленного для налоговой отчетности
//  23-я - это строка из 4-х чисел
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76); //23-я колонка - строка из 4-х чисел
//  4+20,5+20 и 6+20-ая колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  7+20,8+20 и 9+20-ая колонки содержат суммы НДФЛ исч по периоду регистрации (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  10+20,11+20 и 12+20-ая колонки содержат суммы НДФЛ уд (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).

//  33,34 и 35-ая колонки (аналог 21,22 и 23) содержат суммы НДФЛ исч. для отч-ти (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  16+20,17+20 и 18+20-ая колонки содержат суммы на взыскание (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  39,40 и 41-ая колонки содержат суммы облагаемой базы (по трем ставкам),
//	нарастающим итогом с начала года по данным, введенным в карточку вручную.
Для Сч = 1 По 6 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	//строка из 4-х чисел Формата 15.2, разделенных ";" 4* ((15+1(для "точки")+2)+1(для "точки с запятой")) = 76
	//6+20-ая кол 	Сч=1: 4 величины НДФЛ исчисл. по ставке 35% по периоду действия 	по справочникам
	//9+20-ая кол 	Сч=2: 4 величины НДФЛ исчисл. по ставке 35% по периоду рег. 		по справочникам
	//12+20-ая кол 	Сч=3: 4 величины НДФЛ уд. по ставке 35% по периоду действия 		по справочникам
	//35-ая кол 	Сч=4: 4 величины НДФЛ исч. по ставке 35% для отчетности     		по справочникам
	//18+20-ая кол  Сч=5: 4 величины НДФЛ по ставке 35%, переданных на взыскание в ИМНС по справочникам
	//41-ая кол  	Сч=6: 4 величины облагаемой базы по ставке 35%		 				по справочникам
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76);
КонецЦикла; 

// 42 (3 раздел) строка "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
// 43(4 раздел) строка "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
// 44(5 раздел) строка, стрка из 4-чисел "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76); 
// 45, список значений с периодами регистрации НДФЛ по ставке 13%
ДоходыВычетыНалогиСотрудников.НоваяКолонка("НР","СписокЗначений");

ДоходыВычетыНалогиСотрудников.НоваяКолонка("Подразделение","Справочник.Подразделения");
СписокПодразделений = СоздатьОбъект("СписокЗначений");
ПустоеПодразделение = ПолучитьПустоеЗначение("Справочник.Подразделения");
Для Сч = 1 По 12 Цикл
	СписокПодразделений.ДобавитьЗначение(ПустоеПодразделение);
КонецЦикла;


// соберем данные о вычетах сотрудников

// Для начала заполним таблицу всех вычетов
ТаблицаВычетов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаВычетов.НоваяКолонка("Код","Строка",3);
ТаблицаВычетов.НоваяКолонка("Наименование","Строка",96);
ТаблицаВычетов.НоваяКолонка("Сумма","Число",15);
ТаблицаВычетов.НоваяКолонка("ПределДоходов","Число",15);

ВидыВычетов = СоздатьОбъект("Справочник.ВидыВычетов");
ВидыВычетов.ИспользоватьДату(ОкончаниеГода,1);
ВидыВычетов.ВыбратьЭлементы();
Пока ВидыВычетов.ПолучитьЭлемент() = 1 Цикл
	ТаблицаВычетов.НоваяСтрока();	

	Если НомерРелизаИБ &gt;= 770286 Тогда 
		Если Год &gt;= 2010 Тогда
			КодВычета = ВидыВычетов.КодДляОтчетности2010;
		ИначеЕсли Год =2009 Тогда
			КодВычета = ВидыВычетов.КодДляОтчетности2009;
		ИначеЕсли Год = 2008 Тогда 	
			КодВычета = ВидыВычетов.КодДляОтчетности2008;    
		Иначе
			КодВычета = ВидыВычетов.КодДляОтчетности2007;
		КонецЕсли;
		Если КодВычета = "-" Тогда
			Продолжить;
		КонецЕсли;
		
	Иначе
		КодВычета = ВидыВычетов.Код;
		
	КонецЕсли;
	
	ТаблицаВычетов.Код			= КодВычета;
	ТаблицаВычетов.Наименование	= ВидыВычетов.Наименование;
	ТаблицаВычетов.Сумма		= ВидыВычетов.Сумма;
	ТаблицаВычетов.ПределДоходов= ВидыВычетов.ПределДоходов;
КонецЦикла;

ПустаяДата='  .  .  ';

ТекстЗапроса = "//{{ЗАПРОС(ПоВычетам)
|Объект = Справочник.ВычетыСотрудниковПоНДФЛ.Владелец;
|Элемент = Справочник.ВычетыСотрудниковПоНДФЛ.ТекущийЭлемент;
|ДатаНачала = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаНачала;
|ДатаОкончания = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаОкончания;";
Если НомерРелизаИБ &gt;= 770286 Тогда
	Если Год &gt;=2010 Тогда
		ТекстЗапроса = ТекстЗапроса + "ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2010;";
	ИначеЕсли Год =2009 Тогда
		ТекстЗапроса = ТекстЗапроса + "ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2009;";
	ИначеЕсли Год =2008 Тогда 	
		ТекстЗапроса = ТекстЗапроса + "ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2008;";    
	Иначе
		ТекстЗапроса = ТекстЗапроса + "ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2007;";
	КонецЕсли;
Иначе 
	ТекстЗапроса = ТекстЗапроса + "ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.Код;";
КонецЕсли;
ТекстЗапроса = ТекстЗапроса + "
|Размер = Справочник.ВычетыСотрудниковПоНДФЛ.Сумма;
|НомерУведомления = Справочник.ВычетыСотрудниковПоНДФЛ.НомерУведомления;
|ДатаУведомления = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаУведомления;
|КодФНС = Справочник.ВычетыСотрудниковПоНДФЛ.КодФНС;
|Группировка Объект;
|Группировка Элемент;
|Условие(Объект в ФизЛица);
|Условие((ДатаНачала &lt;= ОкончаниеГода) и ((ДатаОкончания &gt;= НачалоГода) или (ДатаОкончания = ПустаяДата)));
|"//}}ЗАПРОС
;

ЗапросПоВычетам=СоздатьОбъект("Запрос");
Если ЗапросПоВычетам.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

// чтобы не обращаться лишний раз в информационную базу,
// составим таблицу соответствия видов расчета из облагаемой базы НДФЛ
// и кодов дохода по НДФЛ
глСтатусСтрока(Форма,"Подготовка таблицы соответствия видов расчета и кодов дохода по НДФЛ");
СоответствиеВРкодамДоходовНДФЛ = СоздатьОбъект("ТаблицаЗначений");
СоответствиеВРкодамДоходовНДФЛ.НоваяКолонка(,"ВидРасчета");
СоответствиеВРкодамДоходовНДФЛ.НоваяКолонка(,"Строка",4);
СоответствиеВРкодамДоходовНДФЛ.НоваяКолонка(,"Строка",1);
СправочникВР = СоздатьОбъект("Справочник.ВидыРасчетов");
СправочникРасчетнойБазы = СоздатьОбъект("Справочник.ВидыРасчетовБаза");
Если СправочникВР.НайтиПоРеквизиту("Расчет",ВидРасчета.НДФЛ,1)=1  Тогда
	СправочникРасчетнойБазы.ИспользоватьВладельца(СправочникВР.ТекущийЭлемент());
КонецЕсли;
Если (СправочникРасчетнойБазы.ВыбратьЭлементы(1)=1) и (СправочникВР.Выбран()=1) Тогда
	Пока СправочникРасчетнойБазы.ПолучитьЭлемент()=1  Цикл 
		ВР=СправочникРасчетнойБазы.Расчет; 
		НомерСтроки="";
		Если СоответствиеВРкодамДоходовНДФЛ.НайтиЗначение(ВР,НомерСтроки,1)=0 Тогда 
			СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
			СоответствиеВРкодамДоходовНДФЛ.НоваяСтрока();
			НомерСтроки=СоответствиеВРкодамДоходовНДФЛ.КоличествоСтрок();
			СоответствиеВРкодамДоходовНДФЛ.УстановитьЗначение(НомерСтроки,1,ВР);
			СоответствиеВРкодамДоходовНДФЛ.УстановитьЗначение(НомерСтроки,2,?(СправочникВР.ВидДохода.Выбран()=1,СправочникВР.ВидДохода.Код,"2000"));
			СоответствиеВРкодамДоходовНДФЛ.УстановитьЗначение(НомерСтроки,3,?(СправочникВР.Выбран()=1,Строка(СправочникВР.ДовольствиеВС),"1"));
		КонецЕсли;
	КонецЦикла; 
Иначе
	ВсегоВР=ГруппаРасчетов.ОблагаетсяНДФЛ.Количество();
	Для Сч = 1 По ВсегоВР Цикл
		ВР=ГруппаРасчетов.ОблагаетсяНДФЛ.ПолучитьРасчет(Сч);
		ВидРасчетаНастроенПользователем=0;
		Если ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 1 Тогда
			ВидРасчетаНастроенПользователем = СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
		КонецЕсли;
		// не будем включать в налоговую базу те в.р., которые пользователь еще не описал
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.НастраиваемыеВидыРасчета) = 0) или (ВидРасчетаНастроенПользователем = 1) Тогда
			НомерСтроки="";
			Если СоответствиеВРкодамДоходовНДФЛ.НайтиЗначение(ВР,НомерСтроки,1)=0 Тогда 
				Если ВидРасчетаНастроенПользователем = 0 Тогда
					СправочникВР.НайтиПоРеквизиту("Расчет",ВР,1);
				КонецЕсли;
				СоответствиеВРкодамДоходовНДФЛ.НоваяСтрока();
				НомерСтроки=СоответствиеВРкодамДоходовНДФЛ.КоличествоСтрок();
				СоответствиеВРкодамДоходовНДФЛ.УстановитьЗначение(НомерСтроки,1,ВР);
				СоответствиеВРкодамДоходовНДФЛ.УстановитьЗначение(НомерСтроки,2,?(СправочникВР.ВидДохода.Выбран()=1,СправочникВР.ВидДохода.Код,"2000"));
				СоответствиеВРкодамДоходовНДФЛ.УстановитьЗначение(НомерСтроки,3,?(СправочникВР.Выбран()=1,Строка(СправочникВР.ДовольствиеВС),"1"));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецЕсли;

СписокВРПоПериодуДействия=СоздатьОбъект("СписокЗначений");
СписокВРПоПериодуРегистрации=СоздатьОбъект("СписокЗначений");
СоответствиеВРкодамДоходовНДФЛ.ВыбратьСтроки();
Для НомСтроки=1 По СоответствиеВРкодамДоходовНДФЛ.КоличествоСтрок() Цикл 
	КодДохода=Сокрлп(СоответствиеВРкодамДоходовНДФЛ.ПолучитьЗначение(НомСтроки,2));
	ВР=СоответствиеВРкодамДоходовНДФЛ.ПолучитьЗначение(НомСтроки,1);
	Если (КодДохода="2000") ИЛИ (КодДохода="2012") Тогда                                               
		СписокВРПоПериодуДействия.ДобавитьЗначение(ВР);	
	Иначе
		СписокВРПоПериодуРегистрации.ДобавитьЗначение(ВР);
	КонецЕсли;	
КонецЦикла; 

глСтатусСтрока(Форма,"Подготовка данных из журнала расчетов");

ПопытокВыполненияЗапроса = 10;

Январь=Строка(Год*100+1);
Декабрь=Строка(Год*100+12);


ТекстЗапроса = "//{{ЗАПРОС(ПоСоциальнымВычетам)
|ГодоМесяц = Справочник.НКСоциальныеВычеты.ГодМесяц;
|Объект = Справочник.НКСоциальныеВычеты.Владелец; 
|СтатусНеРезидента = Справочник.НКСоциальныеВычеты.Владелец.СтатусНеРезидента;
|Вычет = Справочник.НКСоциальныеВычеты.Вычет;
|ВидВычета = Справочник.НКСоциальныеВычеты.ВидВычета.Код;
|ТекущийЭлемент = Справочник.НКСоциальныеВычеты.ТекущийЭлемент;
|Группировка Объект без групп;
|Группировка ГодоМесяц;
|Группировка ТекущийЭлемент без упорядочивания;
|Условие(Объект в ФизЛица);
|Условие(Вычет &lt;&gt; 0);
|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
|"//}}ЗАПРОС
;

ЗапросКсправочникуСоциальныеВычеты=СоздатьОбъект("Запрос");
Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
	Если ЗапросКсправочникуСоциальныеВычеты.Выполнить(ТекстЗапроса) = 1 Тогда
		Прервать
	КонецЕсли;
КонецЦикла;               
Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
	Возврат 0;
КонецЕсли;


Справочник = СоздатьОбъект("Справочник.НКДоходы");
Если Справочник.ВыбратьЭлементы(0) = 1 Тогда
	ТекстЗапроса = "//{{ЗАПРОС(КсправочникуДоходов)
	|ГодоМесяц = Справочник.НКДоходы.ГодМесяц;
	|Объект = Справочник.НКДоходы.Владелец;
	|Код = Справочник.НКДоходы.Владелец.Код;
	|СтатусНеРезидента = Справочник.НКДоходы.Владелец.СтатусНеРезидента;
	|Имя = Справочник.НКДоходы.Владелец.Наименование;
	|ВидДохода = Справочник.НКДоходы.ВидДохода.Код;
	|НомерРазделаНК = Справочник.НКДоходы.НомерРазделаНК;
	|Доход = Справочник.НКДоходы.Доход;
	|ВидВычета = Справочник.НКДоходы.ВидВычета.Код;
	|Вычет = Справочник.НКДоходы.Вычет;
	|ТекущийЭлемент = Справочник.НКДоходы.ТекущийЭлемент;
	|Группировка Объект без групп;
	|Группировка ГодоМесяц;
	|Группировка ТекущийЭлемент без упорядочивания;
	|Условие(Объект в ФизЛица);
	|Условие((Доход &lt;&gt; 0) или (Вычет &lt;&gt; 0));
	|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
	|"//}}ЗАПРОС
	;
	
	глСтатусСтрока(Форма,"Подготовка данных из справочников");
	ЗапросКсправочникуДоходов=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросКсправочникуДоходов.Выполнить(ТекстЗапроса) = 1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;               
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о доходах из справочников!", , , );
		Возврат 0;
	КонецЕсли; 
КонецЕсли; 

Справочник = СоздатьОбъект("Справочник.НКИтоги");
Если Справочник.ВыбратьЭлементы(0) = 1 Тогда
	
	ТекстЗапроса = "//{{ЗАПРОС(КсправочникуИтогов)
	|ГодоМесяц = Справочник.НКИтоги.Код;
	|Объект = Справочник.НКИтоги.Владелец;
	|Код = Справочник.НКИтоги.Владелец.Код;
	|СтатусНеРезидента = Справочник.НКИтоги.Владелец.СтатусНеРезидента;
	|Имя = Справочник.НКИтоги.Владелец.Наименование;
	|НДФЛ13исчисленный = Справочник.НКИтоги.Р3Исчислено;
	|НДФЛ13удержанный = Справочник.НКИтоги.Р3Удержано;
	|НДФЛ13КВзысканию = Справочник.НКИтоги.Р3КВзысканию;			
	|НДФЛ13Возвращено = Справочник.НКИтоги.Р3Возвращено;			
	|НДФЛ35исчисленный_1 = Справочник.НКИтоги.Р5Исчислено;
	|НДФЛ35исчисленный_2 = Справочник.НКИтоги.Р5Исчислено2;
	|НДФЛ35исчисленный_3 = Справочник.НКИтоги.Р5Исчислено3;
	|НДФЛ35исчисленный_4 = Справочник.НКИтоги.Р5Исчислено4;
	|НДФЛ35удержанный_1 = Справочник.НКИтоги.Р5Удержано;
	|НДФЛ35удержанный_2 = Справочник.НКИтоги.Р5Удержано2;
	|НДФЛ35удержанный_3 = Справочник.НКИтоги.Р5Удержано3;
	|НДФЛ35удержанный_4 = Справочник.НКИтоги.Р5Удержано4;
	|НДФЛ35КВзысканию_1 = Справочник.НКИтоги.Р5КВзысканию;
	|НДФЛ35КВзысканию_2 = Справочник.НКИтоги.Р5КВзысканию2;
	|НДФЛ35КВзысканию_3 = Справочник.НКИтоги.Р5КВзысканию3;
	|НДФЛ35КВзысканию_4 = Справочник.НКИтоги.Р5КВзысканию4; 			
	|НДФЛ35Возвращено_1 = Справочник.НКИтоги.Р5Возвращено;
	|НДФЛ35Возвращено_2 = Справочник.НКИтоги.Р5Возвращено2;
	|НДФЛ35Возвращено_3 = Справочник.НКИтоги.Р5Возвращено3;
	|НДФЛ35Возвращено_4 = Справочник.НКИтоги.Р5Возвращено4;			
	|НДФЛдивидендыИсчисленный = Справочник.НКИтоги.Р4Исчислено;
	|НДФЛдивидендыУдержанный = Справочник.НКИтоги.Р4Удержано;
	|НДФЛдивидендыКВзысканию = Справочник.НКИтоги.Р4КВзысканию;   			
	|НДФЛдивидендыВозвращено = Справочник.НКИтоги.Р4Возвращено;   			
	|Группировка Объект;
	|Группировка ГодоМесяц;
	|Условие(Объект в ФизЛица);
	|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
	|"//}}ЗАПРОС
	;
	
	глСтатусСтрока(Форма,"Подготовка данных из справочников");
	ЗапросКсправочникуИтогов=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросКсправочникуИтогов.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о налогах из справочников!", , , );
		Возврат 0;
	КонецЕсли;
КонецЕсли;

Справочник = СоздатьОбъект("Справочник.НКИтогиПоГоду");
Если Справочник.НайтиПоКоду(Строка(Год),0) = 1 Тогда
	
	ТекущийГод=Строка(Год);
	
	ТекстЗапроса = "//{{ЗАПРОС(СправкиСПредыдМР)
	|Объект = Справочник.НКИтогиПоГоду.Владелец;
	|ГодИзСпр = Справочник.НКИтогиПоГоду.Код;
	|СД1 = Справочник.НКИтогиПоГоду.СД1;
	|СД10 = Справочник.НКИтогиПоГоду.СД10;
	|СД11 = Справочник.НКИтогиПоГоду.СД11;
	|СД12 = Справочник.НКИтогиПоГоду.СД12;
	|СД2 = Справочник.НКИтогиПоГоду.СД2;
	|СД3 = Справочник.НКИтогиПоГоду.СД3;
	|СД4 = Справочник.НКИтогиПоГоду.СД4;
	|СД5 = Справочник.НКИтогиПоГоду.СД5;
	|СД6 = Справочник.НКИтогиПоГоду.СД6;
	|СД7 = Справочник.НКИтогиПоГоду.СД7;
	|СД8 = Справочник.НКИтогиПоГоду.СД8;
	|СД9 = Справочник.НКИтогиПоГоду.СД9;
	|Группировка Объект;
	|Условие(Объект в ФизЛица);
	|Условие(ГодИзСпр = ТекущийГод);
	|"//}}ЗАПРОС
	;
	
	ЗапросПоСправкамСПредМР=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросПоСправкамСПредМР.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		Возврат 0;
	КонецЕсли;
КонецЕсли;

// вспомогательная таблица доходов
Доходы = СоздатьОбъект("ТаблицаЗначений");
//  1-ая колонка - код дохода (пятый символ для матвыгоды по заемным средствам, которая может облагаться по разным ставкам)
Доходы.НоваяКолонка(,"Строка",5);
//  со 2-ой по 13-ую колонки - размер дохода по месяцам нарастающим итогом с начала года
Для Сч = 1 По 12 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);	
КонецЦикла;
//  14-ая колонка - код вычета 
Доходы.НоваяКолонка(,"Строка",3);
//  с 15-ой по 26-ую колонки - размер вычета по месяцам нарастающим итогом с начала года
Для Сч = 1 По 12 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);
КонецЦикла;
//  с 27-ой по 38-ую колонки - размер дохода по месяцам нарастающим итогом с начала года введенный в карточку вручную (сумма корректировки)
//  с 39-ой по 50-ую колонки - размер вычета по месяцам нарастающим итогом с начала года введенный в карточку вручную (сумма корректировки)
Для Сч = 1 По 24 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);	
КонецЦикла;

//  ТаблицаСписковВР - вспомогательная таблица для получения списка ВР по каждому коду дохода в каждом месяце
//  1-ая колонка - код дохода (пятый символ для матвыгоды по заемным средствам, которая может облагаться по разным ставкам)
ТаблицаСписковВР = СоздатьОбъект("ТаблицаЗначений");

ИскатьВоенных = Константа.ЕстьВоенные;
ТекущиеДоходыПо35 = СоздатьОбъект("СписокЗначений");
ДоходыПо35ЗаГод = СоздатьОбъект("СписокЗначений");
ТекущиеДоходыПо35Спр = СоздатьОбъект("СписокЗначений");
ДоходыПо35ЗаГодСпр = СоздатьОбъект("СписокЗначений");

ВсегоСотров = ФизЛица.РазмерСписка();
ДоходыВычетыНалогиСотрудников.КоличествоСтрок(ВсегоСотров*12);


ЖрнЗарплатаДляСторно	= СоздатьОбъект("ЖурналРасчетов.Зарплата");
НачалоПериодаОсмотра	= ЖрнЗарплата.НачалоПериодаПоДате(НачГода(НачГода(ДатаАктуальности)-15));
ОкончаниеПериодаОсмотра	= ЖрнЗарплата.КонецПериодаПоДате(КонГода(КонГода(ДатаАктуальности)+15));

// определим месяц по который заполняем стандартные вычеты
ГодТекущегоПериода = ДатаГод(ЖрнЗарплата.КонецТекущегоПериода());
Если ГодТекущегоПериода &gt; Год Тогда
	ПоследнийМесяцДляВычетов = 12;
Иначе
	ПоследнийМесяцДляВычетов = ДатаМесяц(ЖрнЗарплата.КонецТекущегоПериода()) - 1;	
КонецЕсли;


СтрокаКолонок = " 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13";
СтрокаКолонокДоходов = " 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13";
СтрокаКолонокВычетов = " 1,15,16,17,18,19,20,21,22,23,24,25,26";

ТабВычетовСотрудника=СоздатьОбъект("ТаблицаЗначений");
ТабВычетовСотрудника.НоваяКолонка("Порядок");
ТабВычетовСотрудника.НоваяКолонка("ВидВычета");
ТабВычетовСотрудника.НоваяКолонка("ОписаниеВычета");

ТабСоциальныхВычетовСотрудника=СоздатьОбъект("ТаблицаЗначений");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Месяц");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("КодВычета");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Размер");

// обход списка сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл  
	
	ВремТаблицаНДФЛСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаНДФЛИмущественныеВычетыФизлиц.УдалитьСтроки();
	
	Сотрудник = ФизЛица.ПолучитьЗначение(СчСотров);
	
	КодСотра="";
	ИмяСотра="";
	СтатусНеРезидента="";
	ПростоДоходы=0;
	ОсобыеДоходы=0;
	ДоходыПоРегистрации=0;
	НалогиПоРегистрации=0;
	ДанныеИзСправочникаДоходов=0;
	ДанныеИзСправочникаИтогов=0;
	ВычетыИзСправочников=0;
	СоциальныеВычетыИзСправочников = 0;
	
	Если ТипЗначения(ЗапросКсправочникуДоходов) &lt;&gt; 0 Тогда
		ЗапросКсправочникуДоходов.вНачалоВыборки();
		Если ЗапросКсправочникуДоходов.Получить(Сотрудник,,)=1 Тогда
			ДанныеИзСправочникаДоходов=1;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗначения(ЗапросКсправочникуИтогов) &lt;&gt; 0 Тогда
		ЗапросКсправочникуИтогов.вНачалоВыборки();
		Если ЗапросКсправочникуИтогов.Получить(Сотрудник,)=1 Тогда 
			ДанныеИзСправочникаИтогов = 1;
		КонецЕсли;
	КонецЕсли;
	
	ЗапросПоВычетам.вНачалоВыборки();
	Если ЗапросПоВычетам.Получить(Сотрудник,) = 1 Тогда
		ВычетыИзСправочников = 1;   // именно у этого сотрудника есть что-то в справочнике вычетов
	КонецЕсли;
	
	Если ТипЗначения(ЗапросКсправочникуСоциальныеВычеты) &lt;&gt; 0 Тогда
		ЗапросКсправочникуСоциальныеВычеты.вНачалоВыборки();
		Если ЗапросКсправочникуСоциальныеВычеты.Получить(Сотрудник,,) = 1 Тогда
			СоциальныеВычетыИзСправочников = 1;   // именно у этого сотрудника есть что-то в справочнике вычетов
		КонецЕсли;
	КонецЕсли;
	
	КодСотра=СОКРЛП(Сотрудник.Код);
	ИмяСотра=СОКРЛП(Сотрудник.Наименование);
	
	глСтатусСтрока(Форма,"Обрабатываются доходы ("+Окр(СчСотров/ВсегоСотров*100)+"%): "+ИмяСотра);
	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = (СчСотров - 1) * 12;
	
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,1,КодСотраВтаблице+глДополнитьСтроку(Сч,2));
		СписокВычетов = СоздатьОбъект("СписокЗначений");
		// заготовим "пустые" значения в списке вычетов для сотрудника
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));
		СписокВычетов.ДобавитьЗначение(0);  // база НДФЛ не учитывая имущественные вычеты
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 313\311
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 312
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 313\311
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 312 
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // список ст. вычетов, на которые сотрудник имел право
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 318
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 318
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетов);
		
		СписокПериодовНДФЛ = СоздатьОбъект("СписокЗначений");
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"НР",СписокПериодовНДФЛ);
	КонецЦикла;
	
	
	// выясним, является ли сотрудник налоговым резидентом РФ
	СтатусНеРезидента = Сотрудник.СтатусНеРезидента.Получить(ОкончаниеГода);
	Резидент = ?((ПустоеЗначение(СтатусНеРезидента) = 1) ИЛИ (СтатусНеРезидента&lt;&gt;1), 1, 0);
	
	// подготовим таблицу доходов к работе с очередным сотрудником
	Доходы.УдалитьСтроки();
	Доходы.НоваяСтрока();
	Доходы.УстановитьЗначение(1,1,"2000 "); 
	
	// подготовим список вычетов, на которые имеет право данный сотрудник  
	СписокВычетовСотра=СоздатьОбъект("СписокЗначений");
	
	ТабСоциальныхВычетовСотрудника.УдалитьСтроки();
	Если (СоциальныеВычетыИзСправочников = 1) и (Резидент = 1) Тогда
		Пока ЗапросКсправочникуСоциальныеВычеты.Группировка("ГодоМесяц")=1 Цикл
			МесяцВычета = Число(ЗапросКсправочникуСоциальныеВычеты.ГодоМесяц) % 100;
			Пока ЗапросКсправочникуСоциальныеВычеты.Группировка("ТекущийЭлемент")=1 Цикл
				
				РезВычета=ЗапросКсправочникуСоциальныеВычеты.Вычет;
				КодВычета=Лев(ЗапросКсправочникуСоциальныеВычеты.ВидВычета,3);
				
				ТабСоциальныхВычетовСотрудника.НоваяСтрока();
				ТабСоциальныхВычетовСотрудника.Месяц = МесяцВычета;
				ТабСоциальныхВычетовСотрудника.КодВычета = КодВычета;
				ТабСоциальныхВычетовСотрудника.Размер = РезВычета;
				
			КонецЦикла; 
		КонецЦикла;
		
		Если ТабСоциальныхВычетовСотрудника.КоличествоСтрок()&gt;0 Тогда
			СписокВычетовСотра.ДобавитьЗначение("319","319");    
		КонецЕсли;
		
	КонецЕсли;
	
	ТабВычетовСотрудника.УдалитьСтроки();
	
	Если (ВычетыИзСправочников = 1) и (Резидент = 1) Тогда
		Пока ЗапросПоВычетам.Группировка("Элемент")=1 Цикл
			ВидВычета=СОКРЛП(ЗапросПоВычетам.ВидВычета);  //код вычета из справочника
			Если ВидВычета = "-" Тогда
				Продолжить;
			КонецЕсли;
			РазмерИмущЗатрат = ЗапросПоВычетам.Размер; // сумма может быть указана в справочнике только у имущ. вычетов
			Д1=ЗапросПоВычетам.ДатаНачала;
			Д2=ЗапросПоВычетам.ДатаОкончания;
			
			Если (ВидВычета="313") или (ВидВычета="311") или (ВидВычета="312") или (ВидВычета="318") Тогда
				Если (Д1 &gt; ОкончаниеГода) или (Д1 &lt; НачалоГода) Тогда
					Продолжить;    
				КонецЕсли;
			КонецЕсли;
			
			НомерУведомления=ЗапросПоВычетам.НомерУведомления;
			ДатаУведомления= ЗапросПоВычетам.ДатаУведомления;
			КодФНС=ЗапросПоВычетам.КодФНС;
			ОписаниеВычета=СоздатьОбъект("СписокЗначений");
			ОписаниеВычета.ДобавитьЗначение(Д1);
			ОписаниеВычета.ДобавитьЗначение(Д2);
			ОписаниеВычета.ДобавитьЗначение(РазмерИмущЗатрат);
			ОписаниеВычета.ДобавитьЗначение(НомерУведомления);
			ОписаниеВычета.ДобавитьЗначение(ДатаУведомления);
			ОписаниеВычета.ДобавитьЗначение(КодФНС);
			
			ТабВычетовСотрудника.НоваяСтрока();
			ТабВычетовСотрудника.ВидВычета=ВидВычета;
			ТабВычетовСотрудника.ОписаниеВычета=ОписаниеВычета;
			Порядок=ПорядокПредоставленияВычетов.НайтиЗначение(ВидВычета);
			Порядок=?(Порядок=0,100,Порядок);
			ТабВычетовСотрудника.Порядок=Порядок;
		КонецЦикла;
		
		ТабВычетовСотрудника.Сортировать("Порядок+"); 
		ТабВычетовСотрудника.ВыбратьСтроки();
		Пока ТабВычетовСотрудника.ПолучитьСтроку()=1 Цикл
			СписокВычетовСотра.ДобавитьЗначение(ТабВычетовСотрудника.ОписаниеВычета,ТабВычетовСотрудника.ВидВычета);
		КонецЦикла;
		
	КонецЕсли;
	ВсегоВычетовСотра=СписокВычетовСотра.РазмерСписка(); 
	
	
	ВоеннослужащийПоПризыву = "0000000000000";
	МесяцСменыСтатуса = 0;
	
	Если ИскатьВоенных = 1 Тогда
		Для Сч = 1 По 12 Цикл
			ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
			СостояниеФЗ1 = Сотрудник.СостояниеФизлица.Получить(ДатаМесяца);
			СостояниеФЗ2 = Сотрудник.СостояниеФизлица.Получить(НачМесяца(ДатаМесяца));
			Если (СостояниеФЗ1 = Перечисление.СостояниеФизлица.ВоеннослужащийПоПризыву) или (СостояниеФЗ2 = Перечисление.СостояниеФизлица.ВоеннослужащийПоПризыву) Тогда
				ВоеннослужащийПоПризыву = ?(Сч=1,"",Лев(ВоеннослужащийПоПризыву,Сч-1))+"1"+?(Сч=12,"",Прав(ВоеннослужащийПоПризыву,12-Сч));
				Если СостояниеФЗ1 &lt;&gt; СостояниеФЗ2 Тогда
					МесяцСменыСтатуса = Сч // !!!
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	//заполним подразделене сотрудника по месяцам
	Для Сч = 1 По 12 Цикл
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
		СписокПодразделений.УстановитьЗначение(Сч,Сотрудник.Подразделение.Получить(ДатаМесяца));
	КонецЦикла;  
	
	//получим строку месяцев работы, для правильного определения подразделения, если есть договор подряда
	ТаблицаИстории = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,НачалоГода,ОкончаниеГода,"СостояниеФизлица");
	
	КоличествоСтрок = ТаблицаИстории.КоличествоСтрок();
	СтрокаМесяцевРаботы = "000000000000"; 
	
	Для Номер = 1 по КоличествоСтрок Цикл
		ТаблицаИстории.ПолучитьСтрокуПоНомеру(Номер);
		СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаИстории.ПолучитьЗначение(Номер+1,"Дата")-1,ОкончаниеГода);
		
		// т.к. значений может быть несколько, берем последнее значение на дату
		Если (Номер &lt; КоличествоСтрок) и (ТаблицаИстории.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаИстории.ПолучитьЗначение(Номер + 1, "Дата"), ОкончаниеГода)) Тогда
			Продолжить
		КонецЕсли;
		
		Если (ПустоеЗначение(ТаблицаИстории.СостояниеФизлица) = 0) и (ТаблицаИстории.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботает) и (ТаблицаИстории.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботаетВоеннослужащий) Тогда
			Для Сч = ДатаМесяц(ТаблицаИстории.Дата) По ДатаМесяц(СледующаяДата) Цикл
				СтрокаМесяцевРаботы = ?(Сч=1,"",Лев(СтрокаМесяцевРаботы,Сч-1))+"1"+?(Сч=12,"",Прав(СтрокаМесяцевРаботы,12-Сч));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	
	МесяцСообщений = ДатаМесяц(ДатаАктуальности);
	
	
	ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,НачалоПериодаОсмотра,ОкончаниеПериодаОсмотра); 
	
	СписокВидовДокументов=",НачислениеДивидендов,НачисленияУдержанияСписком,СсудаПредприятия,ДоговорГраждПравХаракт,НачисленияУдержанияСотрудника,";
	ПервыйМесяцРасчетов = 13;
	Пока ЖрнЗарплата.ПолучитьЗапись()=1 Цикл  
		
		Результат=ЖрнЗарплата.Результат;
		Если Результат=0 Тогда
			Продолжить;
		КонецЕсли; 
		
		КодВычета					= "";
		Скидка						= 0;
		ПростоДоходы				= 0;
		ОсобыеДоходы				= 0;
		ДоходыПоРегистрации			= 0;
		ДоходыПоРегистрацииСторно	= 0;
		НалогиПоРегистрации			= 0;
		
		ВР = ЖрнЗарплата.ВидРасч; 
		ПериодДействия=ЖрнЗарплата.НачалоПериодаПоДате(ЖрнЗарплата.ДатаНачала);
		ПериодРегистрации=ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
		
		
		Если ((ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержанныеНДФЛ)=1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ)=1))
		и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//налоги
			НалогиПоРегистрации=1;  
		КонецЕсли;
		
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=1)
		и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода)
		и (ПериодРегистрации &lt;= КонецПериодаОсмотра) Тогда 
			//особые доходы
			ОсобыеДоходы=1;	
		ИначеЕсли (((ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=0) и (СписокВРПоПериодуДействия.Принадлежит(ВР)=1)) или ((ВР.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ)=1)))
		и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//доходы по периоду регистрации
			ПростоДоходы=1; 
		ИначеЕсли (ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=0) и (СписокВРПоПериодуРегистрации.Принадлежит(ВР)=1) Тогда 
			Если ЖрнЗарплата.Сторно=1 Тогда 
				//это сторно запись 
				ДоходыПоРегистрацииСторно=1;
				
			Иначе
				//не сторно запись
				//Выбираем только те записи, которые зарегистрированы в текущем налоговом периода
				Если (ПериодРегистрации&gt;=НачалоГода) и (ПериодРегистрации&lt;=ОкончаниеГода) Тогда  
					Если (Год=2005) и (ПериодДействия &lt; НачалоГода) Тогда
						Продолжить;
					КонецЕсли;
					ДоходыПоРегистрации=1;
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли; 	
		КонецЕсли;
		
		
		Если ОсобыеДоходы = 1 Тогда
			// здесь собираются доходы, вычеты или коды дохода которых зависят от конкретного документа-основания записи в ж.р.
			МесяцДохода=ДатаМесяц(ПериодДействия);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			Док = ЖрнЗарплата.Документ;
			ВидДокумента=Док.Вид();
			СуммаРез = ЖрнЗарплата.Результат;
			Скидка = 0; НазваниеЛьготы = "";
			КодДохода = Строка(КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ));		
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				НазваниеЛьготы = ": к зачету по дивидендам ";
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
				Если Резидент = 1 Тогда 
					Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку()=1 Цикл
							Если Док.Сотрудник.ОсновнойЭлемент=Сотрудник Тогда
								Скидка=Док.КЗачетуАкционера;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если СуммаРез&gt;0 Тогда
							Скидка=Мин(Скидка,СуммаРез);
						Иначе
							Скидка=Макс(-1*Скидка,СуммаРез);
						КонецЕсли;
						
						Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1));    
						
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ВР=ВидРасчета.МатВыгодаПоСсудам Тогда
				Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда 
					Если Док.ИсточникСредств = 2 Тогда  // в документе указано, что это кредит - будет облагаться по 13%
						Если Год&lt;2010 Тогда
							КодДохода ="2620";
						Иначе                 
							КодДохода ="2641";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1)); 
			Иначе // договора гр-правового характера и авторские договора
				Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда 
					Если ВидДокумента="НачисленияУдержанияСписком" Тогда
						СтрокаДокумента=ЖрнЗарплата.НомерСтрокиДокумента;
						Док.ПолучитьСтрокуПоНомеру(СтрокаДокумента); 
					ИначеЕсли ВидДокумента&lt;&gt;"НачисленияУдержанияСотрудника" Тогда
						ПодразделениеДокумента = Док.Подразделение;
						Если ПустоеЗначение(ПодразделениеДокумента)=0 Тогда
							Если Сред(СтрокаМесяцевРаботы,МесяцДохода,1)="0" Тогда
								//сотрудник не работал в этом месяце, установим в списке подразделений подразделение из документа
								СписокПодразделений.УстановитьЗначение(МесяцДохода,ПодразделениеДокумента);	
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					КодДохода = Док.ВидДохода.Код; 
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Если Резидент = 1 Тогда
						КодВычета = Док.ВидВычета.Код;
						НазваниеЛьготы = ": профессиональный вычет (код "+КодВычета+")";
						Если КодВычета = "405" Тогда // норматив затрат по авторским договорам - см. пп. 3 ст. 221 НК РФ
							Норматив = 0;
							Если КодДохода = "2206" Тогда
								Норматив = 25
							ИначеЕсли (Найти(",2201,2207,2208,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 20
							ИначеЕсли (Найти(",2202,2204,2209,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 30
							ИначеЕсли (Найти(",2203,2205,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 40
							КонецЕсли; 
							Расходы = Окр(СуммаРез * Норматив / 100,2);
						Иначе // фактические расходы
							Если ЖрнЗарплата.Сторно=1 Тогда
								Расходы = -1*Док.Вычет;
							Иначе
								Расходы = Док.Вычет;	
							КонецЕсли;
						КонецЕсли;
						
						Если ЖрнЗарплата.Сторно=1 Тогда
							Скидка = Макс(Расходы,СуммаРез);	
						Иначе         
							Скидка = Мин(Расходы,СуммаРез);
						КонецЕсли;
						
						Если Скидка &lt;&gt; 0 Тогда
							Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
							Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1));
						КонецЕсли;
					КонецЕсли;
				Иначе
					СуммаРез = 0
				КонецЕсли;
			КонецЕсли;
			
			ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ИсчисленоИзЗарплаты			= ?(ВР = ВидРасчета.МатВыгодаПоСсудам, 1, 0);
			
			ЗаполнитьТаблицуСведенийОДоходах(
				Сотрудник,
				ЖрнЗарплата,
				ТаблицаРаспределения,
				ПериодРегистрацииДохода,
				ПодразделениеОрганизации,
				МесяцНалоговогоПериода,
				КодДохода,
				СуммаРез,
				КодВычета,
				Скидка,
				0,
				ВремТаблицаНДФЛСведенияОДоходах,
				ИсчисленоИзЗарплаты);
			
		КонецЕсли;
		
		Если  ПростоДоходы=1 Тогда
			// здесь собираются налоги исчисленные и доходы, код и вычеты которых не зависят от документа, которым они зарегистрированы 
			МесяцДохода=ДатаМесяц(ПериодДействия);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			
			СуммаРез=ЖрнЗарплата.Результат;
			НомерКолонки = 0;
			Если (ВР=ВидРасчета.НДФЛ) Тогда
				НомерКолонки = 4
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендов) Тогда
				НомерКолонки = 5
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентов) Тогда
				НомерКолонки = 6
			Иначе
				КодДохода=КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
				Если КодДохода&gt;0 Тогда
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1)); 
					
					ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
					ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода); 
					МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
					
					ЗаполнитьТаблицуСведенийОДоходах(
						Сотрудник,
						ЖрнЗарплата,
						ТаблицаРаспределения,
						ПериодРегистрацииДохода,
						ПодразделениеОрганизации,
						МесяцНалоговогоПериода,
						Строка(КодДохода),
						СуммаРез,
						КодВычета,
						Скидка,
						0,
						ВремТаблицаНДФЛСведенияОДоходах,
						0);
				КонецЕсли;    
			КонецЕсли; 
			// занесем налоги исчисленные в таблицу по сотруднику во все месяцы, начиная с месяца, за который начислен налог
			Если НомерКолонки = 6 Тогда
				
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки &gt; 0 Тогда
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки)+СуммаРез);
				КонецЦикла; 
			КонецЕсли;
			
		КонецЕсли;	
		
		Если ДоходыПоРегистрации=1 Тогда
			// здесь собираются  доходы, по периоду регистрации
			МесяцДохода		= ДатаМесяц(ПериодРегистрации);
			МесяцСообщений	= Макс(МесяцСообщений,МесяцДохода);
			СуммаРез		= ЖрнЗарплата.Результат;
			КоличествоДетей	= 0;
			КодДохода		= КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
			Если КодДохода&gt;0 Тогда 
				
				Если ВР=ВидРасчета.МатПомощьПриРожденииРебенка Тогда
					Док = ЖрнЗарплата.Документ;
					КодДохода ="2762";
					КодВычета = "508";
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1, КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Скидка = Док.СуммаВычета;
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
					Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1)); 
					
				Иначе
					
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода); 
					Если Строка(КодДохода) = "2791" Тогда
						Доходы.УстановитьЗначение(НомерДохода,14,"509");    
					КонецЕсли;
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1));
					
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ЗаполнитьТаблицуСведенийОДоходах(
				Сотрудник,
				ЖрнЗарплата,
				ТаблицаРаспределения,
				ПериодРегистрацииДохода,
				ПодразделениеОрганизации,
				МесяцНалоговогоПериода,
				Строка(КодДохода),
				СуммаРез,
				КодВычета,
				Скидка,
				КоличествоДетей,
				ВремТаблицаНДФЛСведенияОДоходах,
				0);
		КонецЕсли;  
		
		Если ДоходыПоРегистрацииСторно=1 Тогда
			// здесь собираются  доходы, по периоду регистрации
			
			Док = ЖрнЗарплата.Документ;
			Если ЖрнЗарплатаДляСторно.ВыбратьЗаписиПоДокументу(Док)=1 Тогда
				ПериодРегистрацииЗаписи=ЖрнЗарплатаДляСторно.ПериодРегистрации.ДатаОкончания; 
				Если (ПериодРегистрацииЗаписи&lt;НачалоГода) или (ПериодРегистрацииЗаписи&gt;ОкончаниеГода) Тогда
					Продолжить;    
				КонецЕсли;
			КонецЕсли;
			
			МесяцДохода		= ДатаМесяц(ПериодРегистрацииЗаписи);
			МесяцСообщений	= Макс(МесяцСообщений,МесяцДохода);
			СуммаРез		= ЖрнЗарплата.Результат;
			КоличествоДетей	= 0;
			КодДохода		= КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
			Если КодДохода&gt;0 Тогда 
				
				Если ВР=ВидРасчета.МатПомощьПриРожденииРебенка Тогда
					КодДохода ="2762";
					КодВычета = "508";
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1, КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Скидка = Док.СуммаВычета;
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
					Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1)); 
					
				Иначе
					
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1));
					
				КонецЕсли;
				
			КонецЕсли; 
			
			ПериодРегистрацииДохода		= НачМесяца(ПериодРегистрацииЗаписи);
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ЗаполнитьТаблицуСведенийОДоходах(
				Сотрудник,
				ЖрнЗарплата,
				ТаблицаРаспределения,
				ПериодРегистрацииДохода,
				ПодразделениеОрганизации,
				МесяцНалоговогоПериода,
				Строка(КодДохода),
				СуммаРез,
				КодВычета,
				Скидка,
				КоличествоДетей,
				ВремТаблицаНДФЛСведенияОДоходах,
				0);
		КонецЕсли;
		
		// здесь собираются налоги (исчисленные и удержанные) - по периоду регистрации
		Если НалогиПоРегистрации = 1 Тогда 
			Если ПериодРегистрации &gt; ОкончаниеГода Тогда
				МесяцДохода = 12    
			ИначеЕсли ДатаГод(ПериодРегистрации) &lt; Год Тогда
				МесяцДохода = 1    
			Иначе
				МесяцДохода = ДатаМесяц(ПериодРегистрации); 
			КонецЕсли;
			ПервыйМесяцРасчетов = Мин(МесяцДохода,ПервыйМесяцРасчетов);
			СуммаРез=ЖрнЗарплата.Результат;
			НомерКолонки=0;
			Если (ВР=ВидРасчета.НДФЛ) Тогда
				НомерКолонки = 7
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендов)  Тогда
				НомерКолонки = 8
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентов)  Тогда
				НомерКолонки = 9
			ИначеЕсли (ВР=ВидРасчета.НДФЛУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛ) Тогда
				НомерКолонки = 10
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендовУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛсДивидендов) Тогда
				НомерКолонки = 11
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентовУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛпоСтавке35) Тогда
				НомерКолонки = 12
			КонецЕсли;
			// занесем налоги в таблицу по сотруднику 
			Если ВР = ВидРасчета.ВозвратНДФЛ Тогда
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42))-СуммаРез);
			ИначеЕсли ВР = ВидРасчета.ВозвратНДФЛСДивидендов Тогда
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,43,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,43))-СуммаРез);
			КонецЕсли;
			
			Если НомерКолонки = 9 Тогда
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки = 12 Тогда
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки &gt; 0 Тогда
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки)+СуммаРез);
				КонецЦикла; 
				
				Если НомерКолонки = 7 Тогда
					СписокПериодовНДФЛ = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,"НР");
					СписокПериодовНДФЛ.ДобавитьЗначение(ПериодРегистрации, СуммаРез);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,"НР",СписокПериодовНДФЛ);    
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;      
		
	КонецЦикла;  //обработка записей ЖР
	
	Если ПервыйМесяцРасчетов &gt; 1 Тогда
		Для Сч = 1 По ПервыйМесяцРасчетов - 1 Цикл
			Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,Дата(Год,Сч,15),Дата(Год,Сч,15)) = 1 Тогда
				ПервыйМесяцРасчетов = Сч;
				Прервать
			КонецЕсли;		    	
		КонецЦикла;
	КонецЕсли; 
	
	// закончена обработка расчетов в журнале расчетов
	
	// добавим доходы и налоги из справочников
	Если  ДанныеИзСправочникаДоходов = 1 Тогда
		Пока ЗапросКсправочникуДоходов.Группировка("ГодоМесяц")=1 Цикл
			МесяцДохода = Число(ЗапросКсправочникуДоходов.ГодоМесяц) % 100;
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			Пока ЗапросКсправочникуДоходов.Группировка("ТекущийЭлемент")=1 Цикл
				КодДохода = ЗапросКсправочникуДоходов.ВидДохода+?(ЗапросКсправочникуДоходов.НомерРазделаНК=0,"",Строка(ЗапросКсправочникуДоходов.НомерРазделаНК));
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				РезДохода=ЗапросКсправочникуДоходов.Доход;
				РезВычета=ЗапросКсправочникуДоходов.Вычет;
				КодВычета=Лев(ЗапросКсправочникуДоходов.ВидВычета,3);
				
				Если (Найти(",403,404,405,508,509,607,",","+КодВычета+",") &gt; 0) Тогда	
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
				КонецЕсли;  
				
				//плюс ведется отдельный учет данных о доходах и вычетах, введенных в справочник:
				Доходы.Заполнить(РезДохода,НомерДохода,НомерДохода,Сред("   2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,",МесяцДохода*3)+Сред("  27,28,29,30,31,32,33,34,35,36,37,38",МесяцДохода*3));
				Доходы.Заполнить(РезВычета,НомерДохода,НомерДохода,Сред("  15,16,17,18,19,20,21,22,23,24,25,26,",МесяцДохода*3)+Сред("  39,40,41,42,43,44,45,46,47,48,49,50",МесяцДохода*3));
				
				ПериодРегистрацииДохода		= Дата(Год,МесяцДохода,1);;
				ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода); 
				МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
				
				ЗаполнитьТаблицуСведенийОДоходах(
					Сотрудник,
					ЖрнЗарплата,
					ТаблицаРаспределения,
					ПериодРегистрацииДохода,
					ПодразделениеОрганизации,
					МесяцНалоговогоПериода,
					Строка(КодДохода),
					РезДохода,
					Строка(КодВычета),
					РезВычета,
					0,
					ВремТаблицаНДФЛСведенияОДоходах,
					0);
			КонецЦикла; // обхода видов дохода
		КонецЦикла;  // обхода по периодам действия/регистрации
	КонецЕсли;
	
	Доходы.Свернуть("1,14","2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,
	|27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50");  
	
	// рассчитаем оставшиеся вычеты к доходам
	ВсегоСтрок = Доходы.КоличествоСтрок();

	ТаблицаВычетовКДоходам = СоздатьТаблицуВычетовКДоходам();
		
	Для СчСтрок = 1 По ВсегоСтрок Цикл
		КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
		Если Найти(",2761,2720,2730,2740,2760,2770,2790,2791,1211,",","+КодДохода+",") &gt; 0 Тогда  // ст. 217 НК РФ
			КодВычета="";
			Если КодДохода = "2761" Тогда
				КодВычета="506"
			ИначеЕсли КодДохода = "2720" Тогда
				КодВычета="501"
			ИначеЕсли КодДохода = "2730"  Тогда
				КодВычета="502"
			ИначеЕсли КодДохода = "2740"  Тогда
				КодВычета="505"
			ИначеЕсли КодДохода = "2760"  Тогда
				КодВычета="503" 
			ИначеЕсли КодДохода = "2770"  Тогда
				КодВычета="504"
			ИначеЕсли КодДохода = "2790"  Тогда
				КодВычета="507"
			ИначеЕсли (КодДохода = "2791")  Тогда
				КодВычета="509"
			ИначеЕсли (КодДохода = "1211")  Тогда
				КодВычета="607"	
			Иначе
				
			КонецЕсли;
			
			Если КодВычета="509" Тогда 
				Для Сч = 1 По 12 Цикл
					Доходы.УстановитьЗначение(СчСтрок,Сч+14,Доходы.ПолучитьЗначение(СчСтрок,Сч+14));
				КонецЦикла;
			Иначе	
				СтрокаТабВычетов = "";
				Если ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код")=1 Тогда
					СуммаВычета=ТаблицаВычетов.ПолучитьЗначение(СтрокаТабВычетов,"Сумма");
				Иначе
					СуммаВычета=0;
				КонецЕсли;
				
				СуммаВычетаМесяца = 0;
				ВычетБыл = 0;
				
				Для Сч = 1 По 12 Цикл
					СуммаВычетаВТаблицу	= Макс(Мин(СуммаВычета,Доходы.ПолучитьЗначение(СчСтрок,Сч+1)),0);
					СуммаВычетаМесяца	= СуммаВычетаВТаблицу - ВычетБыл;
					ВычетБыл			= СуммаВычетаВТаблицу;
					
					Доходы.УстановитьЗначение(СчСтрок,Сч+14, СуммаВычетаВТаблицу);
					
					Если СуммаВычетаМесяца &lt;&gt; 0 Тогда
						ТаблицаВычетовКДоходам.НоваяСтрока();
						ТаблицаВычетовКДоходам.КодДохода				= КодДохода;
						ТаблицаВычетовКДоходам.КодВычета				= КодВычета;
						ТаблицаВычетовКДоходам.МесяцНалоговогоПериода	= Дата(Год,Сч,1);
						ТаблицаВычетовКДоходам.СуммаВычета				= СуммаВычетаМесяца;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			Доходы.УстановитьЗначение(СчСтрок,14,КодВычета);
			
		ИначеЕсли (((Лев(КодДохода,2)="15") и (КодДохода&lt;&gt;"1540")) или (КодДохода="2210") или (КодДохода="2220")) и (Резидент=1) Тогда  // резидентам имущественный вычет предоставить не можем - не облагаем вообще
			Для Сч = 1 По 12 Цикл
				Доходы.УстановитьЗначение(СчСтрок,Сч+14,Доходы.ПолучитьЗначение(СчСтрок,Сч+1));
			КонецЦикла;
			
		Иначе
			
		КонецЕсли; 
	КонецЦикла;  
	
	// рассчитаем стандартные и имущественные вычеты 
	Если ВсегоВычетовСотра &gt; 0  Тогда
		
		Если ПорядокРасчетаНДФЛ=Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
			
			// признак достижения предела  при исчислении вычетов:
			// 0 - доход до 20 000, 1 - доход свыше 20000			
			//// признак достижения предела  при исчислении имущественных вычетов:
			//// 0 - доход до 1 000 000, 1 - доход свыше 1 000 000
			//ДостиглиПределаДоходовИмущ = 0;
			
			// Суммы вычетов нарастающим итогом
			Для Сч = 1 По 20 Цикл
				СуммыВычетов[Сч]=0;
			КонецЦикла;
			
			НПимущ = НачалоГода;
			КПимущ = ОкончаниеГода;
			Для Сч = 1 По 12 Цикл
				
				НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
				КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15));
					
				//проверим накопленный доход для исчисления вычетов				
				СовокупныйДоходДляВычетов = 0;
				
				// доход на предыдущем месте работы 
				Если ТипЗначения(ЗапросПоСправкамСПредМР) &lt;&gt; 0 Тогда
					ЗапросПоСправкамСПредМР.вНачалоВыборки();
					Если ЗапросПоСправкамСПредМР.Получить(Сотрудник) = 1 Тогда
						Для Сч1 = 1 По Сч Цикл
							СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + ЗапросПоСправкамСПредМР.ПолучитьАтрибут("СД"+Строка(Сч1));
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				// доход на нашем предприятии
				Для СчСтрок = 1 По ВсегоСтрок Цикл
					КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
					Если Найти(",1210,2610,2740,3020,1010,1110,1120,4000,",","+КодДохода+",")=0 Тогда
						СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + Доходы.ПолучитьЗначение(СчСтрок,Сч+1) - Доходы.ПолучитьЗначение(СчСтрок,Сч+14)
					КонецЕсли;
				КонецЦикла;	                 
				
				// учтем социальные вычеты 
				СтрокаВычета = ""; 
				СуммаСоциальногоВычета = 0;
				Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Сч,СтрокаВычета,1) = 1 Тогда
					ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
					СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
					СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов - СуммаСоциальногоВычета;	
				КонецЕсли;
				
				// Суммы текущих вычетов
				Для Ссч = 1 По 20 Цикл
					ВычетыТекущие[Ссч]=0;
				КонецЦикла;
				
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					КодВычета = "";
					Вычет=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодВычета); 
				
					Если КодВычета="319" Тогда
						Номер = 19;	
						ПределДляВычетов	= 0;
						СуммаВычета			= СуммаСоциальногоВычета;
						СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
						Продолжить;
					КонецЕсли;
					
					СтрокаТабВычетов = "";
					ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код");
					Если СтрокаТабВычетов &gt; 0 Тогда
						ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
						ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
						СуммаВычета			= ТаблицаВычетов.Сумма;
					Иначе
						ПределДляВычетов	= 0;
						СуммаВычета			= 0;
					КонецЕсли;
					// собственно проверка предела дохода
					ДостиглиПределаДоходов = 0;
					Если ПределДляВычетов &gt; 0 Тогда
						Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
							ДостиглиПределаДоходов = 1
						КонецЕсли;
					КонецЕсли;
					
					ДатаНачалаВычета	= Вычет.ПолучитьЗначение(1);
					ДатаОкончанияВычета	= Вычет.ПолучитьЗначение(2);
					КодВычета			= Число(КодВычета);
					
					Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
						Номер=КодВычета-100;
						Если (КодВычета=103) и (ДостиглиПределаДоходов=0) Тогда // вычет предусмотрен пп. 3 п. 1 ст. 218
							Если (УчтенВычетФЛ=0) Тогда
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетов[Номер]=СуммыВычетов[Номер]+ВычетыТекущие[Номер];
								УчтенВычетФЛ=КодВычета;
							КонецЕсли;
						ИначеЕсли ((КодВычета=101) или (КодВычета=102) или (КодВычета=106) или (КодВычета=107)
						или (КодВычета=108) или (КодВычета=109) или (КодВычета=110) или (КодВычета=111) или (КодВычета=112) или (КодВычета=113)) и (ДостиглиПределаДоходов=0) Тогда 
							СуммыВычетов[Номер]		= СуммыВычетов[Номер] + СуммаВычета;
							ВычетыТекущие[Номер]	= ВычетыТекущие[Номер] + СуммаВычета;
							
						ИначеЕсли (КодВычета=104) или (КодВычета=105) Тогда  // вычеты предусмотрены пп. 1 и 2 п. 1 ст. 218
							Если УчтенВычетФЛ&lt;КодВычета Тогда // ранее встречались только меньшие вычеты, либо их не было вообще
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетов[Номер]=СуммыВычетов[Номер]+ВычетыТекущие[Номер];
								Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
									Номер=УчтенВычетФЛ-100;
									СуммыВычетов[Номер]=СуммыВычетов[Номер]-ВычетыТекущие[Номер];
									ВычетыТекущие[Номер]=0;
								КонецЕсли;
								УчтенВычетФЛ=КодВычета;
							КонецЕсли;
							
						Иначе // других кодов здесь не предусмотрено
						КонецЕсли;
					КонецЕсли;
				КонецЦикла; // обхода вычетов сотра
				
				// вычеты - в итоговую таблицу
				ВсегоВычетов = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				Для СчВычетов = 1 По 20  Цикл
					Если СуммыВычетов[СчВычетов] &gt; 0 Тогда
						ВсегоВычетов = ВсегоВычетов + СуммыВычетов[СчВычетов];
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммыВычетов[СчВычетов],Строка(СчВычетов+?(СчВычетов=19,300,100)));
					КонецЕсли;
				КонецЦикла;
				СписокВычетовОбщий = СоздатьОбъект("СписокЗначений");
				СписокВычетовОбщий = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,3);
				СписокВычетовОбщий.УстановитьЗначение(1,СписокВычетовДляТаблицы);
				СписокВычетовОбщий.УстановитьЗначение(7,СписокВычетовДляТаблицы);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетовОбщий);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,19,СовокупныйДоходДляВычетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,20,ВсегоВычетов);
				
			КонецЦикла;	// по месяцам расчета вычетов 
			
		Иначе  // порядок вычетов - помесячно
			
			// признак достижения предела  при исчислении вычетов:
			// 0 - доход до 20 000, 1 - доход свыше 20000			
			//// признак достижения предела  при исчислении имущественных вычетов:
			//// 0 - доход до 1 000 000, 1 - доход свыше 1 000 000
			//ДостиглиПределаДоходовИмущ = 0;
			
			// Суммы вычетов нарастающим итогом
			Для Сч = 1 По 20 Цикл
				СуммыВычетов[Сч]=0; 
				СуммыВычетовП[Сч]=0;
			КонецЦикла;
			
			НПимущ = НачалоГода;
			КПимущ = ОкончаниеГода;
			Для Сч = 1 По 12 Цикл
				
				НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
				КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15));
				
				//проверим накопленный доход для исчисления вычетов				
				СовокупныйДоходДляВычетов = 0;
				
				// доход на предыдущем месте работы 
				Если ТипЗначения(ЗапросПоСправкамСПредМР) &lt;&gt; 0 Тогда
					ЗапросПоСправкамСПредМР.вНачалоВыборки();
					Если ЗапросПоСправкамСПредМР.Получить(Сотрудник) = 1 Тогда
						Для Сч1 = 1 По Сч Цикл
							СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + ЗапросПоСправкамСПредМР.ПолучитьАтрибут("СД"+Строка(Сч1));
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				// доход на нашем предприятии
				Для СчСтрок = 1 По ВсегоСтрок Цикл
					КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
					Если Найти(",1210,2610,2740,3020,1010,1110,1120,4000,",","+КодДохода+",")=0 Тогда
						СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + Доходы.ПолучитьЗначение(СчСтрок,Сч+1) - Доходы.ПолучитьЗначение(СчСтрок,Сч+14)
					КонецЕсли;
				КонецЦикла;	
				
				
				// учтем социальные вычеты 
				СтрокаВычета = "";
				СуммаСоциальногоВычета = 0;
				Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Сч,СтрокаВычета,1) = 1 Тогда
					ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
					СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
					СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов - СуммаСоциальногоВычета;	
				КонецЕсли;
				
				Если Сч=1 Тогда
					СовокупныйДоходДляВычетовПоТекущийМесяц=СовокупныйДоходДляВычетов;
					ДоходТекущегоМесяцаДляВычетов=СовокупныйДоходДляВычетов;
				Иначе
					ДоходТекущегоМесяцаДляВычетов=СовокупныйДоходДляВычетов-СовокупныйДоходДляВычетовПоТекущийМесяц;
					СовокупныйДоходДляВычетовПоТекущийМесяц =СовокупныйДоходДляВычетов;
				КонецЕсли;
				
				
				// Суммы текущих вычетов
				Для Ссч = 1 По 20 Цикл
					ВычетыТекущие[Ссч]=0; 
				КонецЦикла;
				
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				ОсталосьДоходовДляВычетов=ДоходТекущегоМесяцаДляВычетов;
				Если ДоходТекущегоМесяцаДляВычетов&gt;0 Тогда
					//предоставляем вычеты если в месяце есть доходы
					
					Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
						КодВычета = "";
						Вычет=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодВычета); 
						
						Если КодВычета="319" Тогда
							Номер = 19;	
							ПределДляВычетов	= 0;
							СуммаВычета			= СуммаСоциальногоВычета;
							СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
							Продолжить;
						КонецЕсли;
						
						СтрокаТабВычетов = "";
						ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код");
						Если СтрокаТабВычетов &gt; 0 Тогда
							ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
							ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
							СуммаВычета			= ТаблицаВычетов.Сумма;
						Иначе
							ПределДляВычетов	= 0;
							СуммаВычета			= 0;
						КонецЕсли;
						// собственно проверка предела дохода
						ДостиглиПределаДоходов = 0;
						Если ПределДляВычетов &gt; 0 Тогда
							Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
								ДостиглиПределаДоходов = 1
							КонецЕсли;
						КонецЕсли;  
						
						СуммаВычетаНеОграниченная=СуммаВычета;
						СуммаВычетаП=СуммаВычета; //для сбора суммы вычетов на которые имели право
						СуммаВычета=Мин(ОсталосьДоходовДляВычетов,СуммаВычета); 
						
						//это сумма вычета, котору мы можем применить учитывая доход месяца
						Если СуммаВычета&gt;0 Тогда 
							ДатаНачалаВычета	= Вычет.ПолучитьЗначение(1);
							ДатаОкончанияВычета	= Вычет.ПолучитьЗначение(2);
							КодВычета			= Число(КодВычета);
							
							Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
								Номер=КодВычета-100;
								Если (КодВычета=103) и (ДостиглиПределаДоходов=0) Тогда // вычет предусмотрен пп. 3 п. 1 ст. 218
									Если (УчтенВычетФЛ=0) Тогда
										ВычетыТекущие[Номер]		= СуммаВычета;
										СуммыВычетов[Номер]			= СуммыВычетов[Номер]+ВычетыТекущие[Номер];
										УчтенВычетФЛ				= КодВычета;  
										ОсталосьДоходовДляВычетов	= ОсталосьДоходовДляВычетов-СуммаВычета;
										
									КонецЕсли;
								ИначеЕсли ((КодВычета=101) или (КодВычета=102) или (КодВычета=106) или (КодВычета=107)
									или (КодВычета=108) или (КодВычета=109) или (КодВычета=110) или (КодВычета=111) или (КодВычета=112) или (КодВычета=113)) и (ДостиглиПределаДоходов=0) Тогда 
									СуммыВычетов[Номер]			= СуммыВычетов[Номер]+СуммаВычета;
									ОсталосьДоходовДляВычетов	= ОсталосьДоходовДляВычетов-СуммаВычета;
									ВычетыТекущие[Номер]		= ВычетыТекущие[Номер] + СуммаВычета;
								
								ИначеЕсли (КодВычета=104) или (КодВычета=105) Тогда  // вычеты предусмотрены пп. 1 и 2 п. 1 ст. 218
									Если УчтенВычетФЛ&lt;КодВычета Тогда // ранее встречались только меньшие вычеты, либо их не было вообще 
										Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
											Номер = УчтенВычетФЛ-100;
											
											СуммыВычетов[Номер] = СуммыВычетов[Номер]-ВычетыТекущие[Номер];
											
											//вернем предоставленный вычет
											ОсталосьДоходовДляВычетов = ОсталосьДоходовДляВычетов+ВычетыТекущие[Номер];
											//еще раз рассчитаем сумму вычета, которую представляем с учетом месячного ограничения
											СуммаВычета = Мин(ОсталосьДоходовДляВычетов,СуммаВычетаНеОграниченная);
											
											ВычетыТекущие[Номер] = 0;
										КонецЕсли;
										
										ВычетыТекущие[Номер]		= СуммаВычета;
										СуммыВычетов[Номер]			= СуммыВычетов[Номер]+ВычетыТекущие[Номер];
										ОсталосьДоходовДляВычетов	= ОсталосьДоходовДляВычетов-СуммаВычета;
										
										УчтенВычетФЛ				= КодВычета;
									КонецЕсли;						
								Иначе // других кодов здесь не предусмотрено
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла; // обхода вычетов сотра 
				Иначе
					//в месяце нет дохода, вычеты не представляются
				КонецЕсли;  //не предоставляем вычеты в месяце без доходов  
				
				// вычеты - в итоговую таблицу
				ВсегоВычетов = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				Для СчВычетов = 1 По 20  Цикл
					Если СуммыВычетов[СчВычетов] &gt; 0 Тогда
						ВсегоВычетов = ВсегоВычетов + СуммыВычетов[СчВычетов];
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммыВычетов[СчВычетов],Строка(СчВычетов+?(СчВычетов=19,300,100)));
					КонецЕсли;
				КонецЦикла; 
				
				СписокВычетовОбщий = СоздатьОбъект("СписокЗначений");
				СписокВычетовОбщий = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,3);
				СписокВычетовОбщий.УстановитьЗначение(1,СписокВычетовДляТаблицы);
				
				//соберем вычетв на которые сотрудник имел право, необходимо для 2_НДФЛ 
				// Суммы текущих вычетов
				Для Ссч = 1 По 20 Цикл
					ВычетыТекущие[Ссч]=0; 
				КонецЦикла;
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					КодВычета = "";
					Вычет=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодВычета); 
					
					Если КодВычета="319" Тогда
						Номер = 19;	
						ВычетыТекущие[Номер]=СуммаСоциальногоВычета;
						СуммыВычетовП[Номер]=СуммыВычетовП[Номер]+ВычетыТекущие[Номер];
						Продолжить;
					КонецЕсли;
					
					СтрокаТабВычетов = "";
					ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код");
					Если СтрокаТабВычетов &gt; 0 Тогда
						ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
						ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
						СуммаВычета			= ТаблицаВычетов.Сумма;
					Иначе
						ПределДляВычетов	= 0;
						СуммаВычета			= 0;
					КонецЕсли;
					// собственно проверка предела дохода
					ДостиглиПределаДоходов = 0;
					Если ПределДляВычетов &gt; 0 Тогда
						Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
							ДостиглиПределаДоходов = 1
						КонецЕсли;
					КонецЕсли;
					
					ДатаНачалаВычета = Вычет.ПолучитьЗначение(1);
					ДатаОкончанияВычета = Вычет.ПолучитьЗначение(2);
					КодВычета=Число(КодВычета);
					Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
						Номер=КодВычета-100;
						Если (КодВычета=103) и (ДостиглиПределаДоходов=0) Тогда // вычет предусмотрен пп. 3 п. 1 ст. 218
							Если (УчтенВычетФЛ=0) Тогда
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетовП[Номер]=СуммыВычетовП[Номер]+ВычетыТекущие[Номер];
								УчтенВычетФЛ		=КодВычета;
							КонецЕсли;
							
						ИначеЕсли ((КодВычета=101) или (КодВычета=102) или (КодВычета=106) или (КодВычета=107)
								или (КодВычета=108) или (КодВычета=109) или (КодВычета=110) или (КодВычета=111) или (КодВычета=112) или (КодВычета=113)) и (ДостиглиПределаДоходов=0) Тогда	
							СуммыВычетовП[Номер]=СуммыВычетовП[Номер]+СуммаВычета;
							
						ИначеЕсли (КодВычета=104) или (КодВычета=105) Тогда  // вычеты предусмотрены пп. 1 и 2 п. 1 ст. 218
							Если УчтенВычетФЛ&lt;КодВычета Тогда // ранее встречались только меньшие вычеты, либо их не было вообще
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетовП[Номер]=СуммыВычетовП[Номер]+ВычетыТекущие[Номер];
								Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
									Номер=УчтенВычетФЛ-100;
									СуммыВычетовП[Номер]=СуммыВычетовП[Номер]-ВычетыТекущие[Номер];
									ВычетыТекущие[Номер]=0;
								КонецЕсли;
								УчтенВычетФЛ=КодВычета;
							КонецЕсли;
							
						Иначе // других кодов здесь не предусмотрено
						КонецЕсли;
					КонецЕсли;
				КонецЦикла; // обхода вычетов сотра
				
				ВсегоВычетовП = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				Для СчВычетов = 1 По 20  Цикл
					Если СуммыВычетовП[СчВычетов] &gt; 0 Тогда
						ВсегоВычетовП = ВсегоВычетовП + СуммыВычетовП[СчВычетов];
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммыВычетовП[СчВычетов],Строка(СчВычетов+?(СчВычетов=19,300,100)));
					КонецЕсли;
				КонецЦикла;

				СписокВычетовОбщий.УстановитьЗначение(7,СписокВычетовДляТаблицы);
				//собрали вычеты на которые сотрудник имел право

				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетовОбщий);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,19,СовокупныйДоходДляВычетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,20,ВсегоВычетов);
				
			КонецЦикла;	// по месяцам расчета вычетов
			
		КонецЕсли;
		
	Иначе  // пустой список вычетов  уже записан
	КонецЕсли;
	
	Применено311ВПрошломМесяце = 0;
	Применено312ВПрошломМесяце = 0;
	Применено318ВПрошломМесяце = 0;
	Для Сч = 1 По 12 Цикл
		
		// облагаемые базы по ставкам нарастающим итогом с начала года
		БазаПо13=0;
		БазаПо13Спр=0;
		ЗаМесяцПо35 = 0;
		БазаПоДивидендам=0;
		БазаПоДивидендамСпр=0;

		ТекущиеДоходыПо35.УдалитьВсе();
		ДоходыПо35ЗаГод.УдалитьВсе();
		ТекущиеДоходыПо35Спр.УдалитьВсе();
		ДоходыПо35ЗаГодСпр.УдалитьВсе();
		
		// переформируем таблицу доходов и подсчитаем доходы
		ТаблицаДоходовДляТаблицы = СоздатьОбъект("ТаблицаЗначений"); 
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Строка",5);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Число",15,2);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Строка",3);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Число",15,2);  
		
		Для СчСтрок = 1 По ВсегоСтрок Цикл
			
			СуммаДохода=Доходы.ПолучитьЗначение(СчСтрок,Сч+1);
			СуммаДоходаСпр=Доходы.ПолучитьЗначение(СчСтрок,Сч+26); //из справочника
			
			Если (СуммаДохода &lt;&gt; 0) или (СуммаДоходаСпр &lt;&gt; 0) Тогда

				КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
				КодВычета=Доходы.ПолучитьЗначение(СчСтрок,14);
				СуммаВычета=Доходы.ПолучитьЗначение(СчСтрок,Сч+14);
				
				СтрокаДоходаПрисутствует = 0;
				Если (КодДохода="2000") ИЛИ (КодДохода="2012") Тогда
					СтрокаТД="";
					СтрокаДоходаПрисутствует = ТаблицаДоходовДляТаблицы.НайтиЗначение(КодДохода,СтрокаТД,1);
					Если СтрокаДоходаПрисутствует = 1 Тогда
						ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,2,ТаблицаДоходовДляТаблицы.ПолучитьЗначение(СтрокаТД,2)+СуммаДохода);
						Если (ПустоеЗначение(КодВычета) = 0) и (СуммаВычета &lt;&gt; 0) Тогда
							ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,3,КодВычета);
							ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,4,ТаблицаДоходовДляТаблицы.ПолучитьЗначение(СтрокаТД,4)+СуммаВычета); 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрокаДоходаПрисутствует = 0 Тогда
					ТаблицаДоходовДляТаблицы.НоваяСтрока();
					СтрокаТД=ТаблицаДоходовДляТаблицы.КоличествоСтрок();
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,1,КодДохода);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,2,СуммаДохода);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,3,КодВычета);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,4,СуммаВычета); 
				КонецЕсли;
				
				Если КодДохода = "1010" Тогда
					БазаПоДивидендам = СуммаДохода - ?(Год &lt;= 2001, 0, СуммаВычета);
					БазаПоДивидендамСпр = СуммаДоходаСпр;
					ЗачтеноПоДивидендам[Сч] = СуммаВычета - ?(Сч=1,0,ЗачтеноПоДивидендам[Сч-1])
				ИначеЕсли (Найти(",2610,1210,3020,2740,",","+КодДохода+",")&gt;0)  Тогда
					БылоБазы = Число(ДоходыПо35ЗаГод.Получить(КодДохода));
					БылоБазыСпр = Число(ДоходыПо35ЗаГодСпр.Получить(КодДохода));
					ТекущиеДоходыПо35.ДобавитьЗначение(СуммаДохода - ?(КодДохода="2740",СуммаВычета,0),КодДохода);
					ДоходыПо35ЗаГод.Установить(КодДохода,БылоБазы + СуммаДохода - ?(КодДохода="2740",СуммаВычета,0));
					ТекущиеДоходыПо35Спр.ДобавитьЗначение(СуммаДоходаСпр - ?(КодДохода="2740",СуммаВычета,0),КодДохода);
					ДоходыПо35ЗаГодСпр.Установить(КодДохода,БылоБазыСпр + СуммаДоходаСпр - ?(КодДохода="2740",СуммаВычета,0)); 
					ЗаМесяцПо35 = ЗаМесяцПо35 + СуммаДохода - ?(КодДохода="2740",СуммаВычета,0);
				ИначеЕсли ((Лев(КодДохода,2)&lt;&gt;"15") или (КодДохода="1540")) и (Найти(",4000,4600,",","+КодДохода+",")=0) Тогда // кроме доходов от продажи имущества и предпринимательских доходов
					БазаПо13 = БазаПо13 + СуммаДохода - СуммаВычета;
					БазаПо13Спр = БазаПо13Спр + СуммаДоходаСпр - СуммаВычета;
				ИначеЕсли ((Лев(КодДохода,2)="15") и (КодДохода&lt;&gt;"1540")) и (Резидент=0) Тогда // у нерезидентов доходы от продажи имущества облагаются в полном объеме
					БазаПо13 = БазаПо13 + СуммаДохода;
					БазаПо13Спр = БазаПо13Спр + СуммаДоходаСпр;
				КонецЕсли;

			КонецЕсли;
		КонецЦикла;

		// доходы - в итоговую таблицу
		СтрокаИтоговойТаблицы=НомерСтрокиСотрудника+Сч; 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,2,ТаблицаДоходовДляТаблицы);
		ТаблицаДоходовДляТаблицы=""; 

		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,"Подразделение", СписокПодразделений.ПолучитьЗначение(Сч));

		// получим вычеты текущего месяца
		ВсегоВычетов=ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,20);
		БазаБезУчетаИмущВычетов = Макс(БазаПо13-ВсегоВычетов,0);
		// запись результатов
		СписокВТретьейКолонкеТекМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,3);
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(2,БазаБезУчетаИмущВычетов); // установим базу без имущественных вычетов
		
		// вычеты имущественные
		НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
		КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15));
		
		// 313\311
		ВЭтомГодуИзрасходовано = 0; //уже израсходовано имущ. вычетов
		
		Если Год =2008 Тогда
			Вычет311		= СписокВычетовСотра.Получить("313");
			КодВычета311	= "313";
		Иначе
			Вычет311		= СписокВычетовСотра.Получить("311");    
			КодВычета311	= "311";
		КонецЕсли;
		 
		Если ПустоеЗначение(Вычет311) = 0 Тогда
			ДатаНачалаВычета         = Вычет311.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет311.ПолучитьЗначение(2);
			
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
			и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				РазмерВычетаНачальный311 = Вычет311.ПолучитьЗначение(3);
			Иначе
				РазмерВычетаНачальный311 = 0;
			КонецЕсли;
			
			// израсходовано в этом году: 
			Если Сч &gt; 1 Тогда
				ВЭтомГодуИзрасходовано = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы - 1,3).ПолучитьЗначение(2); // возьмем базу без имущественных вычетов
			КонецЕсли;
		Иначе
			РазмерВычетаНачальный311 = 0;
		КонецЕсли;  
		ПредоставленоИмущНаНачалоГода311 = Макс(РазмерВычетаНачальный311,0); 
		ОстатокИмущественныхВычетов311 = Макс(РазмерВычетаНачальный311 - ВЭтомГодуИзрасходовано,0);
		ИтогоПрименено311 = Мин(БазаБезУчетаИмущВычетов,  ПредоставленоИмущНаНачалоГода311);
		
		Применено311ВМесяце			= ИтогоПрименено311 - Применено311ВПрошломМесяце;
		Применено311ВПрошломМесяце	= ИтогоПрименено311;
		
		Если Применено311ВМесяце &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
				Сотрудник,
				КодВычета311,
				Год,
				Дата(Год,Сч,1),
				Применено311ВМесяце,
				СписокПодразделений.ПолучитьЗначение(Сч),
				ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// 312                  
		Вычет312 = СписокВычетовСотра.Получить("312"); 
		Если ПустоеЗначение(Вычет312) = 0 Тогда
			ДатаНачалаВычета         = Вычет312.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет312.ПолучитьЗначение(2);
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
			и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				РазмерВычетаНачальный312 = Вычет312.ПолучитьЗначение(3);
				
				Если ПустоеЗначение(Вычет311) = 1 Тогда
					// израсходовано в этом году: 
					Если Сч &gt; 1 Тогда
						ВЭтомГодуИзрасходовано = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы - 1,3).ПолучитьЗначение(2); // возьмем базу без имущественных вычетов
					КонецЕсли;
				КонецЕсли; 
			Иначе
				РазмерВычетаНачальный312 = 0;
			КонецЕсли;
		Иначе 
			РазмерВычетаНачальный312 = 0;
		КонецЕсли;
		ПредоставленоИмущНаНачалоГода312 = Макс(РазмерВычетаНачальный312,0);
		ОстатокИмущественныхВычетов312 = Макс(РазмерВычетаНачальный312 - ВЭтомГодуИзрасходовано,0);
		ИтогоПрименено312 = Мин(БазаБезУчетаИмущВычетов-ИтогоПрименено311,  ПредоставленоИмущНаНачалоГода312); // применяем 312-й вычет после применения 311-го
		
		Применено312ВМесяце			= ИтогоПрименено312 - Применено312ВПрошломМесяце;
		Применено312ВПрошломМесяце	= ИтогоПрименено312;
		
		Если Применено312ВМесяце &lt;&gt; 0 Тогда
		ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
				Сотрудник,
				"312",
				Год,
				Дата(Год,Сч,1),
				Применено312ВМесяце,
				СписокПодразделений.ПолучитьЗначение(Сч),
				ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// 318                  
		Вычет318 = СписокВычетовСотра.Получить("318"); 
		Если ПустоеЗначение(Вычет318) = 0 Тогда
			ДатаНачалаВычета         = Вычет318.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет318.ПолучитьЗначение(2);
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
			и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				РазмерВычетаНачальный318 = Вычет318.ПолучитьЗначение(3);
				
				Если (ПустоеЗначение(Вычет311) = 1) и (ПустоеЗначение(Вычет312) = 1) Тогда
					// израсходовано в этом году: 
					Если Сч &gt; 1 Тогда
						ВЭтомГодуИзрасходовано = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы - 1,3).ПолучитьЗначение(2); // возьмем базу без имущественных вычетов
					КонецЕсли;
				КонецЕсли; 
			Иначе
				РазмерВычетаНачальный318 = 0;
			КонецЕсли;
		Иначе 
			РазмерВычетаНачальный318 = 0;
		КонецЕсли;
		ПредоставленоИмущНаНачалоГода318 = Макс(РазмерВычетаНачальный318,0);
		ОстатокИмущественныхВычетов318 = Макс(РазмерВычетаНачальный318 - ВЭтомГодуИзрасходовано,0);
		ИтогоПрименено318 = Мин(БазаБезУчетаИмущВычетов-ИтогоПрименено311-ИтогоПрименено312,  ПредоставленоИмущНаНачалоГода318);
		
		Применено318ВМесяце			= ИтогоПрименено318 - Применено318ВПрошломМесяце;
		Применено318ВПрошломМесяце	= ИтогоПрименено318;
		
		Если Применено318ВМесяце &lt;&gt; 0 Тогда
		ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
				Сотрудник,
				"318",
				Год,
				Дата(Год,Сч,1),
				Применено318ВМесяце,
				СписокПодразделений.ПолучитьЗначение(Сч),
				ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// облагаемые базы - в итоговую таблицу
		
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(3,ИтогоПрименено311); // установим сумму 311-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(4,ИтогоПрименено312); // установим сумму 312-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(5,Вычет311); // описание 311-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(6,Вычет312); // описание 312-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(8,Вычет318); // описание 318-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(9,ИтогоПрименено318); // установим сумму 318-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,20,Макс(ВсегоВычетов+ИтогоПрименено311+ИтогоПрименено312+ИтогоПрименено318-БазаПо13,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,13,Макс(БазаПо13-ВсегоВычетов-ИтогоПрименено311-ИтогоПрименено312-ИтогоПрименено318,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,39,Макс(БазаПо13Спр-ВсегоВычетов-ИтогоПрименено311-ИтогоПрименено312-ИтогоПрименено318,0));
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,3,СписокВТретьейКолонкеТекМесяц);
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,14,Макс(БазаПоДивидендам,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,40,Макс(БазаПоДивидендамСпр,0));

		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,15,""+Число(ДоходыПо35ЗаГод.Получить("2610"))+";"
																					+Число(ДоходыПо35ЗаГод.Получить("1210"))+";"
																					+Число(ДоходыПо35ЗаГод.Получить("3020"))+";"
																					+Число(ДоходыПо35ЗаГод.Получить("2740"))+";");
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,41,""+Число(ДоходыПо35ЗаГодСпр.Получить("2610"))+";"
																					+Число(ДоходыПо35ЗаГодСпр.Получить("1210"))+";"
																					+Число(ДоходыПо35ЗаГодСпр.Получить("3020"))+";"
																					+Число(ДоходыПо35ЗаГодСпр.Получить("2740"))+";");
		
		// разобьем налоги по ставке 35% по кодам доходов
		СчетчикДоходов = 0;
		Для СчДоходов = 1 По 4 Цикл
			КодДохода5Раздела = Сред("2610,1210,3020,2740",СчДоходов*5-4,4);
			СуммаДохода = Число(ДоходыПо35ЗаГод.Получить(КодДохода5Раздела));
			Если СуммаДохода &lt;&gt; 0 Тогда
				СчетчикДоходов = СчетчикДоходов + 1;
				НомерДохода = СчДоходов;
			КонецЕсли;
		КонецЦикла;
		
		Для ВидНалога = 1 По 3 Цикл
			НомерКолонки = 3 + ВидНалога*3;
			
			Если СчетчикДоходов = 1 Тогда  // если такой доход один - запишем все на него
				
				СтрокаНалога = "";
				Для СчДоходов = 1 По 4 Цикл
					Если СчДоходов = НомерДохода Тогда
						СтрокаНалога = СтрокаНалога + СокрЛП(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки));
					Иначе
						СтрокаНалога = СтрокаНалога + "0";
					КонецЕсли;
					СтрокаНалога = СтрокаНалога + ";";
				КонецЦикла;
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,СтрокаНалога);
				
			ИначеЕсли СчетчикДоходов &lt;&gt; 0 Тогда // разобьем суммы налогов пропорционально суммам доходов
			
				НалогаКРаспределению = Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки));
				Если НалогаКРаспределению - ?(Сч=1,0,глВСуммуИзСтроки_НДФЛ(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки))) = 0 Тогда
					Если (Сч &gt; 1) и (НалогаКРаспределению &gt; 0) Тогда
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки));
					КонецЕсли;
				Иначе
					СписокНалогов = СоздатьОбъект("СписокЗначений");
					НакопленоНалога = 0;
					Если ЗаМесяцПо35 &lt;&gt; 0 Тогда
						Коэф = НалогаКРаспределению / ЗаМесяцПо35;   
						Для СчДоходов = 1 По 4 Цикл
							КодДохода5Раздела = Сред("2610,1210,3020,2740",СчДоходов*5-4,4);
							СуммаДохода = ДоходыПо35ЗаГод.Получить(КодДохода5Раздела);
							Если СуммаДохода &lt;&gt; 0 Тогда
								Распределено = ?(НомерДохода = СчДоходов,НалогаКРаспределению-НакопленоНалога,Мин(НалогаКРаспределению-НакопленоНалога,Окр(СуммаДохода*Коэф)));
								СписокНалогов.Установить(КодДохода5Раздела,Распределено);
								НакопленоНалога = НакопленоНалога+Распределено;
							Иначе
								СписокНалогов.Установить(КодДохода5Раздела,0);
							КонецЕсли;
						КонецЦикла;
						СтрокаНалога = ""+Число(СписокНалогов.Получить("2610"))+";"
											+Число(СписокНалогов.Получить("1210"))+";"
											+Число(СписокНалогов.Получить("3020"))+";"
											+Число(СписокНалогов.Получить("2740"))+";";
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,СтрокаНалога);
					ИначеЕсли (Сч &gt; 1) и (НалогаКРаспределению &gt; 0) Тогда
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки));
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; // обхода месяцев
	
	Если  ДанныеИзСправочникаИтогов = 1 Тогда

		Пока ЗапросКсправочникуИтогов.Группировка("ГодоМесяц")=1 Цикл
			МесяцДохода = Число(ЗапросКсправочникуИтогов.ГодоМесяц) % 100;

			// налоги исчисленные
			Налог13и=ЗапросКсправочникуИтогов.НДФЛ13исчисленный;
			НалогДивИ=ЗапросКсправочникуИтогов.НДФЛдивидендыИсчисленный;
			Налог35и_1=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_1;
			Налог35и_2=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_2;
			Налог35и_3=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_3;
			Налог35и_4=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_4;

			// налоги удержанные                                                                                                                                                                         
			Налог13у=ЗапросКсправочникуИтогов.НДФЛ13удержанный;
			Налог35у_1=ЗапросКсправочникуИтогов.НДФЛ35удержанный_1;
			Налог35у_2=ЗапросКсправочникуИтогов.НДФЛ35удержанный_2;
			Налог35у_3=ЗапросКсправочникуИтогов.НДФЛ35удержанный_3;
			Налог35у_4=ЗапросКсправочникуИтогов.НДФЛ35удержанный_4;
			НалогДивУ=ЗапросКсправочникуИтогов.НДФЛдивидендыУдержанный;

			// налоги переданные к взысканию
			Налог13КВзысканию=ЗапросКсправочникуИтогов.НДФЛ13КВзысканию;
			Налог35КВзысканию_1=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_1;
			Налог35КВзысканию_2=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_2;
			Налог35КВзысканию_3=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_3;
			Налог35КВзысканию_4=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_4;
			Налог35КВзысканию = Налог35КВзысканию_1+Налог35КВзысканию_2+Налог35КВзысканию_3+Налог35КВзысканию_4;
			НалогДивКВзысканию=ЗапросКсправочникуИтогов.НДФЛдивидендыКВзысканию;
			
			// возвращены налоговым агентом излишне удержанные суммы налога
			Налог13Возвращено=ЗапросКсправочникуИтогов.НДФЛ13Возвращено;
			Налог35Возвращено_1=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_1;
			Налог35Возвращено_2=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_2;
			Налог35Возвращено_3=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_3;
			Налог35Возвращено_4=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_4;
			Налог35Возвращено = Налог35Возвращено_1+Налог35Возвращено_2+Налог35Возвращено_3+Налог35Возвращено_4;
			НалогДивВозвращено=ЗапросКсправочникуИтогов.НДФЛдивидендыВозвращено;

			Для Сч = МесяцДохода По 12 Цикл 
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИ);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИ);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);

				//разложим и сложим строку в шестой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				//разложим и сложим строку в девятой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				//разложим и сложим строку в 23 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);

				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,10,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,10)+Налог13у);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,11,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,11)+НалогДивУ);

				//разложим и сложим строку в 12 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,12,Налог35у_1,Налог35у_2,Налог35у_3,Налог35у_4,СтрокаМесяца);

				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,16,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,16)+Налог13КВзысканию);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,17,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,17)+НалогДивКВзысканию);

				//разложим и сложим строку в 18 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,18,Налог35КВзысканию_1,Налог35КВзысканию_2,Налог35КВзысканию_3,Налог35КВзысканию_4,СтрокаМесяца);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,42,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,42)+Налог13Возвращено);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,43,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,43)+НалогДивВозвращено);

				//разложим и сложим строку в 44 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,44,Налог35Возвращено_1,Налог35Возвращено_2,Налог35Возвращено_3,Налог35Возвращено_4,СтрокаМесяца);

			КонецЦикла; 
		КонецЦикла; // обхода по периодам действия/регистрации
	КонецЕсли;  // обработка данных из справочников
	
	// посчитаем налоги
	МесяцДоРасчетов = ПервыйМесяцРасчетов - 1;
	
	Ставка1 = ?(Резидент = 1,Константа.СтавкаНДФЛсЗарплатыРезидентов.Получить(ОкончаниеГода),Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода))/100;
	Ставка2 = ?(Резидент = 1,Константа.СтавкаНДФЛсДивидендов.Получить(ОкончаниеГода),Константа.СтавкаНДФЛсДивидендовНеРезидентов.Получить(ОкончаниеГода))/100;
	Ставка3 = ?(Резидент = 1,Константа.СтавкаНДФЛсПрочихДоходовРезидентов.Получить(ОкончаниеГода),Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода))/100;
	
	НалогДивИ = 0;
	Налог35и_1 = 0;
	Налог35и_2 = 0;
	Налог35и_3 = 0;
	Налог35и_4 = 0;
	Налог13и = 0;
	НалогДивИСпр = 0;
	Налог35иСпр_1 = 0;
	Налог35иСпр_2 = 0;
	Налог35иСпр_3 = 0;
	Налог35иСпр_4 = 0;
	Налог13иСпр = 0;
	
	//если до начала расчетов в журнале зарплаты есть доходы (введенные в налоговую карточку) тогда их надо учесть:
	Если МесяцДоРасчетов &gt; 0 Тогда
		Для Сч = 1 По МесяцДоРасчетов Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
						- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
			//по справочникам:
			БазаПоДивидендамСпр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,40)
						- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,40));

			Если Резидент = 1 Тогда
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
				Налог13и = Окр(БазаПо13 * Ставка1);
			Иначе
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
							- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
			КонецЕсли;
			
			Если Год &lt;= 2001 Тогда
				НалогДивИ = НалогДивИ + Макс(Окр(БазаПоДивидендам * Ставка2) - ЗачтеноПоДивидендам[Сч],0);
			Иначе
				НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
			КонецЕсли;
			
			//разложим :
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";");
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;

			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			//по справочникам:
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,41), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,41), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;

			БазаПо35Спр_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35Спр_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35Спр_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35Спр_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
			
			//по справочникам:
			Если Резидент = 1 Тогда
				БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39);
				Налог13иСпр = Окр(БазаПо13Спр * Ставка1);
			Иначе
				БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)
							- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,39));
				Налог13иСпр = Налог13иСпр + Окр(БазаПо13Спр * Ставка1);
			КонецЕсли;
			
			Если Год &lt;= 2001 Тогда
				НалогДивИСпр = НалогДивИСпр + Макс(Окр(БазаПоДивидендамСпр * Ставка2) - ЗачтеноПоДивидендам[Сч],0);
			Иначе
				НалогДивИСпр = НалогДивИСпр + Окр(БазаПоДивидендамСпр * Ставка2);
			КонецЕсли;

			Налог35иСпр_1 = Налог35иСпр_1 + Окр(БазаПо35Спр_1 * Ставка3);
			Налог35иСпр_2 = Налог35иСпр_2 + Окр(БазаПо35Спр_2 * Ставка3);
			Налог35иСпр_3 = Налог35иСпр_3 + Окр(БазаПо35Спр_3 * Ставка3);
			Налог35иСпр_4 = Налог35иСпр_4 + Окр(БазаПо35Спр_4 * Ставка3);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);

			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
		КонецЦикла;
	КонецЕсли;
	
	Налог13иЗаМесяцДоРасчетов = Налог13иСпр;
	НалогДивИЗаМесяцДоРасчетов = НалогДивИСпр;
	Налог35иЗаМесяцДоРасчетов_1 = Налог35иСпр_1;
	Налог35иЗаМесяцДоРасчетов_2 = Налог35иСпр_2;
	Налог35иЗаМесяцДоРасчетов_3 = Налог35иСпр_3;
	Налог35иЗаМесяцДоРасчетов_4 = Налог35иСпр_4;

	Для Сч = МесяцДоРасчетов+1 По 12 Цикл
		
		СтрокаМесяца=НомерСтрокиСотрудника+Сч;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИЗаМесяцДоРасчетов);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИЗаМесяцДоРасчетов);
		
		//разложим и сложим строку в шестой колонке
		ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
		//разложим и сложим строку в девятой колонке
		ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
		
		БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));

		Если Резидент = 1 Тогда
			БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
			Налог13и = Окр(БазаПо13 * Ставка1);
		Иначе
			БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
						- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
			Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
		КонецЕсли;
		
		Если Год &lt;= 2001 Тогда
			НалогДивИ = НалогДивИ + Макс(Окр(БазаПоДивидендам * Ставка2) - ЗачтеноПоДивидендам[Сч],0);
		Иначе
			НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
		КонецЕсли;
		СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";") ;
		РазмерСписка = СписокИзЧетырех.РазмерСписка();
		Если Сч &lt;&gt; 1 Тогда
			СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
			РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
		КонецЕсли;

		БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
		
		БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
		
		БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
		
		БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
						- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
		
		Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
		
		Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
		
		Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
		
		Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
			
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
		//разложим и сложим строку в 23 колонке
		ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
	КонецЦикла;  

	ВремТаблицаНДФЛСведенияОДоходах.Сортировать("Физлицо, Период");
	
	ВремТаблицаНДФЛСведенияОДоходах.Свернуть("Период,ПериодРегистрации,ПодразделениеОрганизации,Физлицо,КодДохода,КодВычета,СФ_Наименование,СФ_КВД,СФ_ПодпадаетПодЕНВД,СФ_Баланс,СФ_КБК,КОСГУ,ИсчисленоИзЗарплаты,КПП,КодПоОКАТО,КодПоОКТМО,КоличествоДетей,ДатаПолученияДохода","СуммаДохода,СуммаВычета");
	Если ТаблицаВычетовКДоходам.КоличествоСтрок() &gt; 0 Тогда
		ПереписатьВычетыВТаблицу(ВремТаблицаНДФЛСведенияОДоходах, ТаблицаВычетовКДоходам);	
	КонецЕсли;
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаНДФЛСведенияОДоходах,ТаблицаНДФЛСведенияОДоходах);
	
	ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Свернуть("ФизЛицо,Период,КодВычетаИмущественный,Год,КодПоОКАТО,КодПоОКТМО,КПП,ПодразделениеОрганизации", "Размер");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаНДФЛИмущественныеВычетыФизлиц,ТаблицаНДФЛИмущественныеВычетыФизлиц);
	
КонецЦикла; // обхода сотров и физлиц

ВремТаблицаНДФЛСведенияОДоходах = 0;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц = 0;

Возврат ДоходыВычетыНалогиСотрудников;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляНДФЛ2011" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем СуммыВычетов[31]; 
Перем ВычетыТекущие[31]; 
Перем ЗачтеноПоДивидендам[12];

Перем СуммыВычетовП[31]; 
Перем ВычетыТекущиеП[31];

ОбобщенныйСотрудник									= ИсходящиеДанные;
ДатаАктуальности									= ВходящиеДанные;
ТаблицаНДФЛСведенияОДоходах							= Источник;
ТаблицаНДФЛИмущественныеВычетыФизлиц				= Приемник;

ПорядокРасчетаНДФЛ	= Константа.УчетнаяПолитикаПоНДФЛ.Получить(КонГода(ДатаАктуальности));
НомерРелизаИБ		= Число(СтрЗаменить(Константа.НомерРелиза, ".",""));

Год = ДатаГод(ДатаАктуальности);

ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
КонецПериодаОсмотра = ЖрнЗарплата.КонецТекущегоПериода();
НачалоГода = ЖрнЗарплата.НачалоПериодаПоДате(НачГода(ДатаАктуальности)+15);
ОкончаниеГода = ЖрнЗарплата.КонецПериодаПоДате(КонГода(ДатаАктуальности)-10); 

ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);

// скопируем структуру таблицы
ВремТаблицаНДФЛСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаНДФЛСведенияОДоходах.Загрузить(ТаблицаНДФЛСведенияОДоходах); 

// скопируем структуру таблицы
ВремТаблицаНДФЛИмущественныеВычетыФизлиц = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Загрузить(ТаблицаНДФЛИмущественныеВычетыФизлиц);

ФизЛица = СоздатьОбъект("СписокЗначений");
Если ТипЗначения(ОбобщенныйСотрудник) = 11  Тогда //здесь был передан элемент справочника - добавим его в только что созданный список
	ФизЛица.ДобавитьЗначение(ОбобщенныйСотрудник);
Иначе //а здесь был передан список элементов - будем использовать непосредственно его
	ФизЛица = ОбобщенныйСотрудник;
КонецЕсли;

ПорядокПредоставленияВычетов="";
СтрокаСписокВычетовНаДетей = "";
глПолучитьПорядокВычетов(ПорядокПредоставленияВычетов,СтрокаСписокВычетовНаДетей);


//  проинициализируем выходную таблицу значений
ДоходыВычетыНалогиСотрудников=СоздатьОбъект("ТаблицаЗначений");
//  1-ая колонка (строка, 12) - ключевое поле для поиска данных; 
//	состоит из 10 символов табельного номера сотрудника и 2-х символов месяца. 
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",12);
//	2-ая колонка содержит таблицу доходов  
//	имеет 7 колонок: код дохода, размер дохода, код вычета, размер вычета,размер дохода из справочника, размер вычета из справочника и
//	в седьмой колонке - таблица сумм "СписокСуммПоВР", из которых собрана сумма текущего дохода (первая колонка - сумма, вторая колонка - ВР)
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"ТаблицаЗначений");
//  3-ая колонка содержит список значений из трех значений: 
//	первое значение		- список сумм стандартных вычетов, за месяц, указанный в первой колонке "верхней" таблицы, нарастающим итогом с начала года; в представлении содержится код вычета.
//	второе значение		- суммы облагаемой базы нарастающим итогом с начала года без учета имущественных вычетов ("бывшая" колонка 13)
//	третье значение		- размер примененных имущественных вычетов с кодом 313\311 нарастающим итогом с начала года, за месяц, указанный в первой колонке "верхней" таблицы;
//	четвертое значение	- размер примененных имущественных вычетов с кодом 312 нарастающим итогом с начала года, за месяц, указанный в первой колонке "верхней" таблицы;
//  
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"СписокЗначений");
//  4,5  колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду действия.
//  7,8  колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду регистрации.
//  10,11 колонки содержат суммы НДФЛ удержанного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду регистрации.
//  13,14 колонки содержат суммы облагаемой базы (обычная и дивиденты),
//	нарастающим итогом с начала года.
//  16,17 колонки содержат суммы переданные на взыскание в ИМНС 
//	нарастающим итогом с начала года. 
//  6-ая, 9-ая, 12-ая, 15-ая, 18-ая - это строки из 4-х чисел
Для Сч = 1 По 5 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	//строка из 4-х чисел Формата 15.2, разделенных ";" 4* ((15+1(для "точки")+2)+1(для "точки с запятой")) = 76
	//6-ая кол 	Сч=1: 4 величины НДФЛ исчисл. по ставке 35% по периоду действия
	//9-ая кол 	Сч=2: 4 величины НДФЛ исчисл. по ставке 35% по периоду рег.
	//12-ая кол Сч=3: 4 величины НДФЛ уд. по ставке 35% по периоду действия
	//15-ая кол Сч=4: 4 величины облагаемой базы по ставке 35%
	//18-ая кол Сч=5: 4 величины НДФЛ по ставке 35%, переданных на взыскание в ИМНС
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76);
КонецЦикла;
//  19-ая колонка содержит совокупный доход для исчисления вычетов
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
//  20-ая колонка содержит сумму вычетов, неиспользованных с начала года по текущий месяц (для расчетов от обратного)
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
//  21,22 и 23-я колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года - исчисленного для налоговой отчетности
//  23-я - это строка из 4-х чисел
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76); //23-я колонка - строка из 4-х чисел
//  4+20,5+20 и 6+20-ая колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  7+20,8+20 и 9+20-ая колонки содержат суммы НДФЛ исч по периоду регистрации (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  10+20,11+20 и 12+20-ая колонки содержат суммы НДФЛ уд (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).

//  33,34 и 35-ая колонки (аналог 21,22 и 23) содержат суммы НДФЛ исч. для отч-ти (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  16+20,17+20 и 18+20-ая колонки содержат суммы на взыскание (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  39,40 и 41-ая колонки содержат суммы облагаемой базы (по трем ставкам),
//	нарастающим итогом с начала года по данным, введенным в карточку вручную.
Для Сч = 1 По 6 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	//строка из 4-х чисел Формата 15.2, разделенных ";" 4* ((15+1(для "точки")+2)+1(для "точки с запятой")) = 76
	//6+20-ая кол 	Сч=1: 4 величины НДФЛ исчисл. по ставке 35% по периоду действия 	по справочникам
	//9+20-ая кол 	Сч=2: 4 величины НДФЛ исчисл. по ставке 35% по периоду рег. 		по справочникам
	//12+20-ая кол 	Сч=3: 4 величины НДФЛ уд. по ставке 35% по периоду действия 		по справочникам
	//35-ая кол 	Сч=4: 4 величины НДФЛ исч. по ставке 35% для отчетности     		по справочникам
	//18+20-ая кол  Сч=5: 4 величины НДФЛ по ставке 35%, переданных на взыскание в ИМНС по справочникам
	//41-ая кол  	Сч=6: 4 величины облагаемой базы по ставке 35%		 				по справочникам
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76);
КонецЦикла; 

// 42 (3 раздел) строка "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
// 43(4 раздел) строка "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
// 44(5 раздел) строка, стрка из 4-чисел "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76); 
// 45, список значений с периодами регистрации НДФЛ по ставке 13%
ДоходыВычетыНалогиСотрудников.НоваяКолонка("НР","СписокЗначений");

ДоходыВычетыНалогиСотрудников.НоваяКолонка("Подразделение","Справочник.Подразделения");
СписокПодразделений = СоздатьОбъект("СписокЗначений");
ПустоеПодразделение = ПолучитьПустоеЗначение("Справочник.Подразделения");
Для Сч = 1 По 12 Цикл
	СписокПодразделений.ДобавитьЗначение(ПустоеПодразделение);
КонецЦикла;

ДоходыВычетыНалогиСотрудников.НоваяКолонка("МесяцСменыСтатусаРезидента","Число",2,0);


// с этого месяца налог рассчитывается по ставке 13% без пересчета прошлых месяцев 
ДоходыВычетыНалогиСотрудников.НоваяКолонка("МесяцСменыСтатусаНеРезидента","Число",2,0);


// налог удержанный по ст. 13% по периоду действия, для отчетности
ДоходыВычетыНалогиСотрудников.НоваяКолонка("НУ1","Число",15,2);


ДоходыВычетыНалогиСотрудников.НоваяКолонка("ЗачтеноАвансаПоНДФЛ","Число",15,2);
// аванса по НДФЛ, нарастающим итогом
ДоходыВычетыНалогиСотрудников.НоваяКолонка("АвансПоНДФЛ","Число",15,2);

// аванса по НДФЛ, нарастающим итогом
ДоходыВычетыНалогиСотрудников.НоваяКолонка("УведомлениеНаУменьшениеНДФЛ","СписокЗначений");


// соберем данные о вычетах сотрудников

// Для начала заполним таблицу всех вычетов
ТаблицаВычетов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаВычетов.НоваяКолонка("Код","Строка",3);
ТаблицаВычетов.НоваяКолонка("Наименование","Строка",96);
ТаблицаВычетов.НоваяКолонка("Сумма","Число",15);
ТаблицаВычетов.НоваяКолонка("ПределДоходов","Число",15);

ВидыВычетов = СоздатьОбъект("Справочник.ВидыВычетов");
ВидыВычетов.ИспользоватьДату(ОкончаниеГода,1);
ВидыВычетов.ВыбратьЭлементы();
Пока ВидыВычетов.ПолучитьЭлемент() = 1 Цикл
	
	Если Год&gt;=2015 Тогда
		КодВычета = ВидыВычетов.КодДляОтчетности2015;
	Иначе
		КодВычета = ВидыВычетов.КодДляОтчетности2011;	
	КонецЕсли;
	
	Если КодВычета = "-" Тогда
		Продолжить;
	КонецЕсли;
	ТаблицаВычетов.НоваяСтрока();
	ТаблицаВычетов.Код = КодВычета;
	Если Год&gt;=2015 Тогда
		ТаблицаВычетов.Наименование	= ВидыВычетов.Наименование2015;
	Иначе
		ТаблицаВычетов.Наименование	= ВидыВычетов.Наименование2011;	
	КонецЕсли;
	
	ТаблицаВычетов.Сумма		= ВидыВычетов.Сумма;
	ТаблицаВычетов.ПределДоходов= ВидыВычетов.ПределДоходов;
КонецЦикла;

ПустаяДата='  .  .  ';

ТекстЗапроса = "//{{ЗАПРОС(ПоВычетам)
|Объект = Справочник.ВычетыСотрудниковПоНДФЛ.Владелец;
|Элемент = Справочник.ВычетыСотрудниковПоНДФЛ.ТекущийЭлемент;
|ДатаНачала = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаНачала;
|ДатаОкончания = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаОкончания;";
Если Год &gt;=2015 Тогда
	ТекстЗапроса = ТекстЗапроса + "ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2015;";
Иначе
	ТекстЗапроса = ТекстЗапроса + "ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2011;";
КонецЕсли;
ТекстЗапроса = ТекстЗапроса + "
|Размер = Справочник.ВычетыСотрудниковПоНДФЛ.Сумма;
|НомерУведомления = Справочник.ВычетыСотрудниковПоНДФЛ.НомерУведомления;
|ДатаУведомления = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаУведомления;
|КодФНС = Справочник.ВычетыСотрудниковПоНДФЛ.КодФНС;
|Группировка Объект;
|Группировка Элемент;
|Условие(Объект в ФизЛица);
|Условие((ДатаНачала &lt;= ОкончаниеГода) и ((ДатаОкончания &gt;= НачалоГода) или (ДатаОкончания = ПустаяДата)));
|"//}}ЗАПРОС
;

ЗапросПоВычетам=СоздатьОбъект("Запрос");
Если ЗапросПоВычетам.Выполнить(ТекстЗапроса) = 0 Тогда
	Возврат 0;
КонецЕсли;

// чтобы не обращаться лишний раз в информационную базу,
// составим таблицу соответствия видов расчета из облагаемой базы НДФЛ
// и кодов дохода по НДФЛ
глСтатусСтрока(Форма,"Подготовка таблицы соответствия видов расчета и кодов дохода по НДФЛ");

СоответствиеВРкодамДоходовНДФЛ = "";
СписокВРПоПериодуДействия2011 = "";
СписокВРПоПериодуРегистрации2011 = "";
СписокВРПоПериодуДействия2012 = "";
СписокВРПоПериодуРегистрации2012 = "";
глПолучитьСписокиВРДляРасчетаНДФЛ(СоответствиеВРкодамДоходовНДФЛ,СписокВРПоПериодуДействия2011,СписокВРПоПериодуРегистрации2011,СписокВРПоПериодуДействия2012,СписокВРПоПериодуРегистрации2012);

глСтатусСтрока(Форма,"Подготовка данных из журнала расчетов");

ПопытокВыполненияЗапроса = 10;

Январь=Строка(Год*100+1);
Декабрь=Строка(Год*100+12);


ТекстЗапроса = "//{{ЗАПРОС(ПоСоциальнымВычетам)
|ГодоМесяц = Справочник.НКСоциальныеВычеты.ГодМесяц;
|Объект = Справочник.НКСоциальныеВычеты.Владелец; 
|СтатусНеРезидента = Справочник.НКСоциальныеВычеты.Владелец.СтатусНеРезидента;
|Вычет = Справочник.НКСоциальныеВычеты.Вычет;
|ВидВычета = Справочник.НКСоциальныеВычеты.ВидВычета.КодДляОтчетности2011;
|ВидВычетаКод = Справочник.НКСоциальныеВычеты.ВидВычета.Код;
|ТекущийЭлемент = Справочник.НКСоциальныеВычеты.ТекущийЭлемент;
|Группировка Объект без групп;
|Группировка ГодоМесяц;
|Группировка ТекущийЭлемент без упорядочивания;
|Условие(Объект в ФизЛица);
|Условие(Вычет &lt;&gt; 0);
|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
|"//}}ЗАПРОС
;

ЗапросКсправочникуСоциальныеВычеты=СоздатьОбъект("Запрос");
Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
	Если ЗапросКсправочникуСоциальныеВычеты.Выполнить(ТекстЗапроса) = 1 Тогда
		Прервать
	КонецЕсли;
КонецЦикла;               
Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
	Возврат 0;
КонецЕсли;


Справочник = СоздатьОбъект("Справочник.НКДоходы");
Если Справочник.ВыбратьЭлементы(0) = 1 Тогда
	ТекстЗапроса = "//{{ЗАПРОС(КсправочникуДоходов)
	|ГодоМесяц = Справочник.НКДоходы.ГодМесяц;
	|Объект = Справочник.НКДоходы.Владелец;
	|Код = Справочник.НКДоходы.Владелец.Код;
	|СтатусНеРезидента = Справочник.НКДоходы.Владелец.СтатусНеРезидента;
	|Имя = Справочник.НКДоходы.Владелец.Наименование;
	|ВидДохода = Справочник.НКДоходы.ВидДохода.Код;
	|НомерРазделаНК = Справочник.НКДоходы.НомерРазделаНК;
	|Доход = Справочник.НКДоходы.Доход;
	|ВидВычета = Справочник.НКДоходы.ВидВычета.КодДляОтчетности2011;
	|Вычет = Справочник.НКДоходы.Вычет;
	|ТекущийЭлемент = Справочник.НКДоходы.ТекущийЭлемент;
	|Группировка Объект без групп;
	|Группировка ГодоМесяц;
	|Группировка ТекущийЭлемент без упорядочивания;
	|Условие(Объект в ФизЛица);
	|Условие((Доход &lt;&gt; 0) или (Вычет &lt;&gt; 0));
	|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
	|"//}}ЗАПРОС
	;
	
	глСтатусСтрока(Форма,"Подготовка данных из справочников");
	ЗапросКсправочникуДоходов=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросКсправочникуДоходов.Выполнить(ТекстЗапроса) = 1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;               
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о доходах из справочников!", , , );
		Возврат 0;
	КонецЕсли; 
КонецЕсли; 

Справочник = СоздатьОбъект("Справочник.НКИтоги");
Если Справочник.ВыбратьЭлементы(0) = 1 Тогда
	
	ТекстЗапроса = "//{{ЗАПРОС(КсправочникуИтогов)
	|ГодоМесяц = Справочник.НКИтоги.Код;
	|Объект = Справочник.НКИтоги.Владелец;
	|Код = Справочник.НКИтоги.Владелец.Код;
	|СтатусНеРезидента = Справочник.НКИтоги.Владелец.СтатусНеРезидента;
	|Имя = Справочник.НКИтоги.Владелец.Наименование;
	|НДФЛ13исчисленный = Справочник.НКИтоги.Р3Исчислено;
	|НДФЛ13удержанный = Справочник.НКИтоги.Р3Удержано;
	|НДФЛ13КВзысканию = Справочник.НКИтоги.Р3КВзысканию;			
	|НДФЛ13Возвращено = Справочник.НКИтоги.Р3Возвращено;			
	|НДФЛ35исчисленный_1 = Справочник.НКИтоги.Р5Исчислено;
	|НДФЛ35исчисленный_2 = Справочник.НКИтоги.Р5Исчислено2;
	|НДФЛ35исчисленный_3 = Справочник.НКИтоги.Р5Исчислено3;
	|НДФЛ35исчисленный_4 = Справочник.НКИтоги.Р5Исчислено4;
	|НДФЛ35удержанный_1 = Справочник.НКИтоги.Р5Удержано;
	|НДФЛ35удержанный_2 = Справочник.НКИтоги.Р5Удержано2;
	|НДФЛ35удержанный_3 = Справочник.НКИтоги.Р5Удержано3;
	|НДФЛ35удержанный_4 = Справочник.НКИтоги.Р5Удержано4;
	|НДФЛ35КВзысканию_1 = Справочник.НКИтоги.Р5КВзысканию;
	|НДФЛ35КВзысканию_2 = Справочник.НКИтоги.Р5КВзысканию2;
	|НДФЛ35КВзысканию_3 = Справочник.НКИтоги.Р5КВзысканию3;
	|НДФЛ35КВзысканию_4 = Справочник.НКИтоги.Р5КВзысканию4; 			
	|НДФЛ35Возвращено_1 = Справочник.НКИтоги.Р5Возвращено;
	|НДФЛ35Возвращено_2 = Справочник.НКИтоги.Р5Возвращено2;
	|НДФЛ35Возвращено_3 = Справочник.НКИтоги.Р5Возвращено3;
	|НДФЛ35Возвращено_4 = Справочник.НКИтоги.Р5Возвращено4;			
	|НДФЛдивидендыИсчисленный = Справочник.НКИтоги.Р4Исчислено;
	|НДФЛдивидендыУдержанный = Справочник.НКИтоги.Р4Удержано;
	|НДФЛдивидендыКВзысканию = Справочник.НКИтоги.Р4КВзысканию;   			
	|НДФЛдивидендыВозвращено = Справочник.НКИтоги.Р4Возвращено;   			
	|Группировка Объект;
	|Группировка ГодоМесяц;
	|Условие(Объект в ФизЛица);
	|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
	|"//}}ЗАПРОС
	;
	
	глСтатусСтрока(Форма,"Подготовка данных из справочников");
	ЗапросКсправочникуИтогов=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросКсправочникуИтогов.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о налогах из справочников!", , , );
		Возврат 0;
	КонецЕсли;
КонецЕсли;

Справочник = СоздатьОбъект("Справочник.НКИтогиПоГоду");
Если Справочник.НайтиПоКоду(Строка(Год),0) = 1 Тогда
	
	ТекущийГод=Строка(Год);
	
	ТекстЗапроса = "//{{ЗАПРОС(СправкиСПредыдМР)
	|Объект = Справочник.НКИтогиПоГоду.Владелец;
	|ГодИзСпр = Справочник.НКИтогиПоГоду.Код;
	|СД1 = Справочник.НКИтогиПоГоду.СД1;
	|СД10 = Справочник.НКИтогиПоГоду.СД10;
	|СД11 = Справочник.НКИтогиПоГоду.СД11;
	|СД12 = Справочник.НКИтогиПоГоду.СД12;
	|СД2 = Справочник.НКИтогиПоГоду.СД2;
	|СД3 = Справочник.НКИтогиПоГоду.СД3;
	|СД4 = Справочник.НКИтогиПоГоду.СД4;
	|СД5 = Справочник.НКИтогиПоГоду.СД5;
	|СД6 = Справочник.НКИтогиПоГоду.СД6;
	|СД7 = Справочник.НКИтогиПоГоду.СД7;
	|СД8 = Справочник.НКИтогиПоГоду.СД8;
	|СД9 = Справочник.НКИтогиПоГоду.СД9;
	|Группировка Объект;
	|Условие(Объект в ФизЛица);
	|Условие(ГодИзСпр = ТекущийГод);
	|"//}}ЗАПРОС
	;
	
	ЗапросПоСправкамСПредМР=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросПоСправкамСПредМР.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		Возврат 0;
	КонецЕсли;
КонецЕсли;

НалоговыйПериод = Год;
ОкончаниеВыборки = ДобавитьМесяц(ОкончаниеГода,12);
ТекстЗапроса = 
"//{{ЗАПРОС(АвансыПоНДФЛ) 
|Период с НачалоГода по ОкончаниеГода;
|НалоговыйПериод = Документ.АвансовыйПлатежИностранцаПоНДФЛ.НалоговыйПериод;
|Сотрудник = Документ.АвансовыйПлатежИностранцаПоНДФЛ.Сотрудник;
|СуммаАванса = Документ.АвансовыйПлатежИностранцаПоНДФЛ.Сумма;
|ДатаОперации = Документ.АвансовыйПлатежИностранцаПоНДФЛ.ДатаОперации;
|Функция Сумма = Сумма(СуммаАванса);
|Группировка Сотрудник без групп;
|Группировка ДатаОперации;
|Условие(НалоговыйПериод = НалоговыйПериод);
|Условие(Сотрудник в ФизЛица);
|"//}}ЗАПРОС
;    

ТабАвансыПоНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ТабАвансыПоНДФЛ.НоваяКолонка("Сумма");
ТабАвансыПоНДФЛ.НоваяКолонка("Сотрудник");
ТабАвансыПоНДФЛ.НоваяКолонка("ДатаОперации");
ЗапросАвансыПоНДФЛ=СоздатьОбъект("Запрос");
Если ЗапросАвансыПоНДФЛ.Выполнить(ТекстЗапроса)=1 Тогда
	ЗапросАвансыПоНДФЛ.Выгрузить(ТабАвансыПоНДФЛ,,0);
КонецЕсли;
ТабАвансыПоНДФЛ.НоваяКолонка("Месяц");
ТабАвансыПоНДФЛ.ВыбратьСтроки();
Пока ТабАвансыПоНДФЛ.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(ТабАвансыПоНДФЛ.ДатаОперации) = 1 Тогда
		// не учитываем
	Иначе
		ТабАвансыПоНДФЛ.Месяц = ДатаМесяц(ТабАвансыПоНДФЛ.ДатаОперации);
	КонецЕсли;
КонецЦикла; 
ТабАвансыПоНДФЛ.Свернуть("Сотрудник,Месяц","Сумма");
ТабАвансыПоНДФЛ.Сортировать("Сотрудник,Месяц"); 


НалоговыйПериод = Год;
ОкончаниеВыборки = ДобавитьМесяц(ОкончаниеГода,12);
ТекстЗапроса = 
"//{{ЗАПРОС(УведомлениеНаУменьшениеНДФЛ) 
|Период с НачалоГода по ОкончаниеГода;
|НалоговыйПериод = Документ.УведомлениеНаУменьшениеНДФЛ.НалоговыйПериод;
|Сотрудник = Документ.УведомлениеНаУменьшениеНДФЛ.Сотрудник;
|НомерУведомления = Документ.УведомлениеНаУменьшениеНДФЛ.НомерУведомления;
|ДатаУведомления = Документ.УведомлениеНаУменьшениеНДФЛ.ДатаУведомления;
|КодФНС = Документ.УведомлениеНаУменьшениеНДФЛ.КодФНС;
|Условие(НалоговыйПериод = НалоговыйПериод);
|Условие(Сотрудник в ФизЛица);
|"//}}ЗАПРОС
;    

ТабУведомленияНаУменьшениеНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("Сотрудник");
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("НомерУведомления");
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("ДатаУведомления"); 
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("КодФНС");
ЗапросУведомленияНаУменьшениеНДФЛ=СоздатьОбъект("Запрос");
Если ЗапросУведомленияНаУменьшениеНДФЛ.Выполнить(ТекстЗапроса)=1 Тогда
	ЗапросУведомленияНаУменьшениеНДФЛ.Выгрузить(ТабУведомленияНаУменьшениеНДФЛ,"Сотрудник,НомерУведомления,ДатаУведомления,КодФНС",0);
КонецЕсли;

// вспомогательная таблица доходов
Доходы = СоздатьОбъект("ТаблицаЗначений");
//  1-ая колонка - код дохода (пятый символ для матвыгоды по заемным средствам, которая может облагаться по разным ставкам)
Доходы.НоваяКолонка(,"Строка",5);
//  со 2-ой по 13-ую колонки - размер дохода по месяцам нарастающим итогом с начала года
Для Сч = 1 По 12 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);	
КонецЦикла;
//  14-ая колонка - код вычета 
Доходы.НоваяКолонка(,"Строка",3);
//  с 15-ой по 26-ую колонки - размер вычета по месяцам нарастающим итогом с начала года
Для Сч = 1 По 12 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);
КонецЦикла;
//  с 27-ой по 38-ую колонки - размер дохода по месяцам нарастающим итогом с начала года введенный в карточку вручную (сумма корректировки)
//  с 39-ой по 50-ую колонки - размер вычета по месяцам нарастающим итогом с начала года введенный в карточку вручную (сумма корректировки)
Для Сч = 1 По 24 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);	
КонецЦикла;

//  ТаблицаСписковВР - вспомогательная таблица для получения списка ВР по каждому коду дохода в каждом месяце
//  1-ая колонка - код дохода (пятый символ для матвыгоды по заемным средствам, которая может облагаться по разным ставкам)
ТаблицаСписковВР = СоздатьОбъект("ТаблицаЗначений");

ИскатьВоенных = Константа.ЕстьВоенные;
ТекущиеДоходыПо35 = СоздатьОбъект("СписокЗначений");
ДоходыПо35ЗаГод = СоздатьОбъект("СписокЗначений");
ТекущиеДоходыПо35Спр = СоздатьОбъект("СписокЗначений");
ДоходыПо35ЗаГодСпр = СоздатьОбъект("СписокЗначений");

ВсегоСотров = ФизЛица.РазмерСписка();
ДоходыВычетыНалогиСотрудников.КоличествоСтрок(ВсегоСотров*12);


ЖрнЗарплатаДляСторно	= СоздатьОбъект("ЖурналРасчетов.Зарплата");
НачалоПериодаОсмотра	= ЖрнЗарплата.НачалоПериодаПоДате(НачГода(НачГода(ДатаАктуальности)-15));
ОкончаниеПериодаОсмотра	= ЖрнЗарплата.КонецПериодаПоДате(КонГода(КонГода(ДатаАктуальности)+15));

// определим месяц по который заполняем стандартные вычеты
ГодТекущегоПериода = ДатаГод(ЖрнЗарплата.КонецТекущегоПериода());
Если ГодТекущегоПериода &gt; Год Тогда
	ПоследнийМесяцДляВычетов = 12;
Иначе
	ПоследнийМесяцДляВычетов = ДатаМесяц(ЖрнЗарплата.КонецТекущегоПериода()) - 1;	
КонецЕсли;

// значение - 0, 1
// представление - год строкой
СписокПорядокУчетаДоходов = глСписокПорядокУчетаДоходов(ДатаГод(НачалоПериодаОсмотра),ДатаГод(ОкончаниеПериодаОсмотра));

СтрокаКолонок = " 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13";
СтрокаКолонокДоходов = " 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13";
СтрокаКолонокВычетов = " 1,15,16,17,18,19,20,21,22,23,24,25,26";

ТабВычетовСотрудника=СоздатьОбъект("ТаблицаЗначений");
ТабВычетовСотрудника.НоваяКолонка("Порядок");
ТабВычетовСотрудника.НоваяКолонка("ВидВычета"); 
ТабВычетовСотрудника.НоваяКолонка("ВидВычетаКод");
ТабВычетовСотрудника.НоваяКолонка("ОписаниеВычета");

ТабСоциальныхВычетовСотрудника=СоздатьОбъект("ТаблицаЗначений");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Месяц");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("КодВычета");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Размер");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Ключ");

// в списке 13 значений, статус резидента на каждый месяц
СписокСтатусРезидента = СоздатьОбъект("СписокЗначений");

// обход списка сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл  
	
	ВремТаблицаНДФЛСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаНДФЛИмущественныеВычетыФизлиц.УдалитьСтроки();
	
	Сотрудник = ФизЛица.ПолучитьЗначение(СчСотров);
	
	КодСотра="";
	ИмяСотра="";
	СтатусНеРезидента="";
	ПростоДоходы=0;
	ОсобыеДоходы=0;
	ДоходыПоРегистрации=0;
	НалогиПоРегистрации=0;
	ДанныеИзСправочникаДоходов=0;
	ДанныеИзСправочникаИтогов=0;
	ВычетыИзСправочников=0;
	СоциальныеВычетыИзСправочников = 0;
	
	Если ТипЗначения(ЗапросКсправочникуДоходов) &lt;&gt; 0 Тогда
		ЗапросКсправочникуДоходов.вНачалоВыборки();
		Если ЗапросКсправочникуДоходов.Получить(Сотрудник,,)=1 Тогда
			ДанныеИзСправочникаДоходов=1;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗначения(ЗапросКсправочникуИтогов) &lt;&gt; 0 Тогда
		ЗапросКсправочникуИтогов.вНачалоВыборки();
		Если ЗапросКсправочникуИтогов.Получить(Сотрудник,)=1 Тогда 
			ДанныеИзСправочникаИтогов = 1;
		КонецЕсли;
	КонецЕсли;
	
	ЗапросПоВычетам.вНачалоВыборки();
	Если ЗапросПоВычетам.Получить(Сотрудник,) = 1 Тогда
		ВычетыИзСправочников = 1;   // именно у этого сотрудника есть что-то в справочнике вычетов
	КонецЕсли;
	
	Если ТипЗначения(ЗапросКсправочникуСоциальныеВычеты) &lt;&gt; 0 Тогда
		ЗапросКсправочникуСоциальныеВычеты.вНачалоВыборки();
		Если ЗапросКсправочникуСоциальныеВычеты.Получить(Сотрудник,,) = 1 Тогда
			СоциальныеВычетыИзСправочников = 1;   // именно у этого сотрудника есть что-то в справочнике вычетов
		КонецЕсли;
	КонецЕсли;
	
	КодСотра=СОКРЛП(Сотрудник.Код);
	ИмяСотра=СОКРЛП(Сотрудник.Наименование);
	
	глСтатусСтрока(Форма,"Обрабатываются доходы ("+Окр(СчСотров/ВсегоСотров*100)+"%): "+ИмяСотра);
	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = (СчСотров - 1) * 12;
	
	МесяцСменыСтатусаРезидента = 0; //месяц, в котором меняется статус с нерезидента на резидента
	СписокСтатусРезидента.УдалитьВсе();
	
	// выясним, является ли сотрудник налоговым резидентом РФ на конец года
	Резидент = глСотрудникЯвляетсяНалоговымРезидентом(Сотрудник,ОкончаниеГода);
	
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,1,КодСотраВтаблице+глДополнитьСтроку(Сч,2));
		СписокВычетов = СоздатьОбъект("СписокЗначений");
		// заготовим "пустые" значения в списке вычетов для сотрудника
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));
		СписокВычетов.ДобавитьЗначение(0);  // база НДФЛ не учитывая имущественные вычеты
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 313\311
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 312
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 313\311
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 312 
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // список ст. вычетов, на которые сотрудник имел право
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 318
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 318
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений")); //
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетов);
		
		СписокПериодовНДФЛ = СоздатьОбъект("СписокЗначений");
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"НР",СписокПериодовНДФЛ);
		
		РезидентМесяца = глСотрудникЯвляетсяНалоговымРезидентом(Сотрудник, КонМесяца(Дата(Год,Сч,14)));
		СписокСтатусРезидента.ДобавитьЗначение(РезидентМесяца);
		Если РезидентМесяца = 0 Тогда
			МесяцСменыСтатусаРезидента = Сч;
		КонецЕсли;
	КонецЦикла;
	
	
	Если Резидент=0 Тогда
		//не стал резидентом
		МесяцСменыСтатусаРезидента = 0;
	ИначеЕсли МесяцСменыСтатусаРезидента &gt; 0 Тогда
		//была смена статуса
		МесяцСменыСтатусаРезидента = МесяцСменыСтатусаРезидента +1;
	КонецЕсли; 
	
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"МесяцСменыСтатусаРезидента",МесяцСменыСтатусаРезидента);
	КонецЦикла;
	
	МесяцСменыСтатусаНеРезидента = 0;
	Если (Резидент = 0) И (Год &gt;= 2015) Тогда
		
		СтатусНеРезидента = глПолучитьСтатусНеРезидента(Сотрудник, КонМесяца(Дата(Год,1,14)));
		
		Если СтатусНеРезидента = 1 Тогда 
			// сотрудник не резидент, проверим была ли смена статуса
			
			Для Сч = 1 По 12 Цикл 
				
				СтатусНеРезидента = глПолучитьСтатусНеРезидента(Сотрудник, КонМесяца(Дата(Год,Сч,14)));
				
				Если СтатусНеРезидента = 1 Тогда
					МесяцСменыСтатусаНеРезидента = Сч;
				КонецЕсли;
				
			КонецЦикла;
			
			Если СтатусНеРезидента = 1 Тогда
				//не стал резидентом
				МесяцСменыСтатусаНеРезидента = 0;
			ИначеЕсли МесяцСменыСтатусаНеРезидента &gt; 0 Тогда
				//была смена статуса
				МесяцСменыСтатусаНеРезидента = МесяцСменыСтатусаНеРезидента +1;  
			КонецЕсли; 
			
			Для Сч = 1 По 12 Цикл
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"МесяцСменыСтатусаНеРезидента",МесяцСменыСтатусаНеРезидента);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// подготовим таблицу доходов к работе с очередным сотрудником
	Доходы.УдалитьСтроки();
	Доходы.НоваяСтрока();
	Доходы.УстановитьЗначение(1,1,"2000 "); 
	
	// подготовим список вычетов, на которые имеет право данный сотрудник  
	СписокВычетовСотра=СоздатьОбъект("СписокЗначений");
	СписокКодовВычетовСотра=СоздатьОбъект("СписокЗначений");// список кодов вычетов, на которые есть право, в порядке предоставления
	
	ТабСоциальныхВычетовСотрудника.УдалитьСтроки();
	Если (СоциальныеВычетыИзСправочников = 1) и (Резидент = 1) Тогда
		Пока ЗапросКсправочникуСоциальныеВычеты.Группировка("ГодоМесяц")=1 Цикл
			МесяцВычета = Число(ЗапросКсправочникуСоциальныеВычеты.ГодоМесяц) % 100;
			Пока ЗапросКсправочникуСоциальныеВычеты.Группировка("ТекущийЭлемент")=1 Цикл
				
				РезВычета=ЗапросКсправочникуСоциальныеВычеты.Вычет;
				КодВычета=Лев(ЗапросКсправочникуСоциальныеВычеты.ВидВычетаКод,3);
				
				ТабСоциальныхВычетовСотрудника.НоваяСтрока();
				ТабСоциальныхВычетовСотрудника.Месяц = МесяцВычета;
				ТабСоциальныхВычетовСотрудника.КодВычета = КодВычета;
				ТабСоциальныхВычетовСотрудника.Размер = РезВычета;
				ТабСоциальныхВычетовСотрудника.Ключ = Формат(""+МесяцВычета+"-"+КодВычета,"С10");
				
			КонецЦикла; 
		КонецЦикла;
		
		КодДляСписка = Строка(КодВычета);
		
		Если СписокВычетовСотра.НайтиЗначение(КодДляСписка)=0 Тогда
			СписокВычетовСотра.ДобавитьЗначение(КодДляСписка,КодДляСписка);
			СписокКодовВычетовСотра.ДобавитьЗначение(КодДляСписка,КодДляСписка);    
		КонецЕсли;
		
	КонецЕсли;
	
	ТабВычетовСотрудника.УдалитьСтроки();
	
	Если (ВычетыИзСправочников = 1) и (Резидент = 1) Тогда
		Пока ЗапросПоВычетам.Группировка("Элемент")=1 Цикл
			ВидВычета=СОКРЛП(ЗапросПоВычетам.ВидВычета);  //код вычета из справочника
			Если ВидВычета = "-" Тогда
				Продолжить;
			КонецЕсли;
			РазмерИмущЗатрат = ЗапросПоВычетам.Размер; // сумма может быть указана в справочнике только у имущ. вычетов
			Д1=ЗапросПоВычетам.ДатаНачала;
			Д2=ЗапросПоВычетам.ДатаОкончания;
			
			Если (ВидВычета="313") или (ВидВычета="311") или (ВидВычета="312") или (ВидВычета="318") Тогда
				Если (Д1 &gt; ОкончаниеГода) или (Д1 &lt; НачалоГода) Тогда
					Продолжить;    
				КонецЕсли;
			КонецЕсли;
			
			НомерУведомления=ЗапросПоВычетам.НомерУведомления;
			ДатаУведомления= ЗапросПоВычетам.ДатаУведомления;
			КодФНС=ЗапросПоВычетам.КодФНС;
			ОписаниеВычета=СоздатьОбъект("СписокЗначений");
			ОписаниеВычета.ДобавитьЗначение(Д1);
			ОписаниеВычета.ДобавитьЗначение(Д2);
			ОписаниеВычета.ДобавитьЗначение(РазмерИмущЗатрат);
			ОписаниеВычета.ДобавитьЗначение(НомерУведомления);
			ОписаниеВычета.ДобавитьЗначение(ДатаУведомления);
			ОписаниеВычета.ДобавитьЗначение(КодФНС);
			
			ТабВычетовСотрудника.НоваяСтрока();
			ТабВычетовСотрудника.ВидВычета=ВидВычета;
			ТабВычетовСотрудника.ОписаниеВычета=ОписаниеВычета;
			Порядок=ПорядокПредоставленияВычетов.НайтиЗначение(ВидВычета);
			Порядок=?(Порядок=0,100,Порядок);
			ТабВычетовСотрудника.Порядок=Порядок;
		КонецЦикла;
		
		ТабВычетовСотрудника.Сортировать("Порядок+"); 
		ТабВычетовСотрудника.ВыбратьСтроки();
		Пока ТабВычетовСотрудника.ПолучитьСтроку()=1 Цикл
			СписокВычетовСотра.ДобавитьЗначение(ТабВычетовСотрудника.ОписаниеВычета,ТабВычетовСотрудника.ВидВычета);
			
			Если (ТабВычетовСотрудника.ВидВычета="313") или (ТабВычетовСотрудника.ВидВычета="311") или (ТабВычетовСотрудника.ВидВычета="312") или (ТабВычетовСотрудника.ВидВычета="318") Тогда
				Продолжить;
			КонецЕсли;	
			Если СписокКодовВычетовСотра.НайтиЗначение(ТабВычетовСотрудника.ВидВычета)=0 Тогда
				СписокКодовВычетовСотра.ДобавитьЗначение(ТабВычетовСотрудника.ВидВычета,ТабВычетовСотрудника.ВидВычета);    
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	ВсегоВычетовСотра=СписокВычетовСотра.РазмерСписка(); 
	
	
	ВоеннослужащийПоПризыву = "0000000000000";
	МесяцСменыСтатуса = 0;
	
	Если ИскатьВоенных = 1 Тогда
		Для Сч = 1 По 12 Цикл
			ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
			СостояниеФЗ1 = Сотрудник.СостояниеФизлица.Получить(ДатаМесяца);
			СостояниеФЗ2 = Сотрудник.СостояниеФизлица.Получить(НачМесяца(ДатаМесяца));
			Если (СостояниеФЗ1 = Перечисление.СостояниеФизлица.ВоеннослужащийПоПризыву) или (СостояниеФЗ2 = Перечисление.СостояниеФизлица.ВоеннослужащийПоПризыву) Тогда
				ВоеннослужащийПоПризыву = ?(Сч=1,"",Лев(ВоеннослужащийПоПризыву,Сч-1))+"1"+?(Сч=12,"",Прав(ВоеннослужащийПоПризыву,12-Сч));
				Если СостояниеФЗ1 &lt;&gt; СостояниеФЗ2 Тогда
					МесяцСменыСтатуса = Сч // !!!
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	//заполним подразделене сотрудника по месяцам
	Для Сч = 1 По 12 Цикл
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
		СписокПодразделений.УстановитьЗначение(Сч,Сотрудник.Подразделение.Получить(ДатаМесяца));
	КонецЦикла;  
	
	//получим строку месяцев работы, для правильного определения подразделения, если есть договор подряда
	ТаблицаИстории = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,НачалоГода,ОкончаниеГода,"СостояниеФизлица");
	
	КоличествоСтрок = ТаблицаИстории.КоличествоСтрок();
	СтрокаМесяцевРаботы = "000000000000"; 
	
	Для Номер = 1 по КоличествоСтрок Цикл
		ТаблицаИстории.ПолучитьСтрокуПоНомеру(Номер);
		СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаИстории.ПолучитьЗначение(Номер+1,"Дата")-1,ОкончаниеГода);
		
		// т.к. значений может быть несколько, берем последнее значение на дату
		Если (Номер &lt; КоличествоСтрок) и (ТаблицаИстории.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаИстории.ПолучитьЗначение(Номер + 1, "Дата"), ОкончаниеГода)) Тогда
			Продолжить
		КонецЕсли;
		
		Если (ПустоеЗначение(ТаблицаИстории.СостояниеФизлица) = 0) и (ТаблицаИстории.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботает) и (ТаблицаИстории.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботаетВоеннослужащий) Тогда
			Для Сч = ДатаМесяц(ТаблицаИстории.Дата) По ДатаМесяц(СледующаяДата) Цикл
				СтрокаМесяцевРаботы = ?(Сч=1,"",Лев(СтрокаМесяцевРаботы,Сч-1))+"1"+?(Сч=12,"",Прав(СтрокаМесяцевРаботы,12-Сч));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	
	МесяцСообщений = ДатаМесяц(ДатаАктуальности);
	
	
	ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,НачалоПериодаОсмотра,ОкончаниеПериодаОсмотра); 
	
	СписокВидовДокументов=",НачислениеДивидендов,НачисленияУдержанияСписком,СсудаПредприятия,ДоговорГраждПравХаракт,НачисленияУдержанияСотрудника,";
	ПервыйМесяцРасчетов = 13;
	Пока ЖрнЗарплата.ПолучитьЗапись()=1 Цикл  
		
		Результат=ЖрнЗарплата.Результат;
		Если Результат=0 Тогда
			Продолжить;
		КонецЕсли; 
		
		КодВычета					= "";
		Скидка						= 0;
		ПростоДоходы				= 0;
		ОсобыеДоходы				= 0;
		ДоходыПоРегистрации			= 0;
		ДоходыПоРегистрацииСторно	= 0;
		НалогиПоРегистрации			= 0;
		ЗачтеноАвансаПоНДФЛ=0;
		
		ВР = ЖрнЗарплата.ВидРасч; 
		ПериодДействия=ЖрнЗарплата.НачалоПериодаПоДате(ЖрнЗарплата.ДатаНачала);
		ПериодРегистрации=ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;
		
		ОтпускПоПериодуРегистрации = СписокПорядокУчетаДоходов.Получить(Строка(ДатаГод(ПериодРегистрации)));
		
		Если ОтпускПоПериодуРегистрации=1 Тогда
			СписокВРПоПериодуРегистрации = СписокВРПоПериодуРегистрации2012; 
			СписокВРПоПериодуДействия = СписокВРПоПериодуДействия2012;
		Иначе
			СписокВРПоПериодуРегистрации = СписокВРПоПериодуРегистрации2011; 
			СписокВРПоПериодуДействия = СписокВРПоПериодуДействия2011;
		КонецЕсли;
		
		Если ((ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержанныеНДФЛ)=1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ)=1))
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//налоги
			НалогиПоРегистрации=1;  
		КонецЕсли;
		
		Если (ВР = ВидРасчета.НДФЛЗачтеноАванса)
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//налоги
			ЗачтеноАвансаПоНДФЛ=1;  
		КонецЕсли;
		
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=1)
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода)
			и (ПериодРегистрации &lt;= КонецПериодаОсмотра) Тогда 
			//особые доходы
			ОсобыеДоходы=1;	
		ИначеЕсли (((ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=0) и (СписокВРПоПериодуДействия.Принадлежит(ВР)=1)) или ((ВР.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ)=1)))
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//доходы по периоду регистрации
			ПростоДоходы=1; 
		ИначеЕсли (ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=0) и (СписокВРПоПериодуРегистрации.Принадлежит(ВР)=1) Тогда 
			Если ЖрнЗарплата.Сторно=1 Тогда 
				//это сторно запись 
				ДоходыПоРегистрацииСторно=1;
				
			Иначе
				//не сторно запись
				//Выбираем только те записи, которые зарегистрированы в текущем налоговом периода
				Если (ПериодРегистрации&gt;=НачалоГода) и (ПериодРегистрации&lt;=ОкончаниеГода) Тогда  
					Если (Год=2005) и (ПериодДействия &lt; НачалоГода) Тогда
						Продолжить;
					КонецЕсли;
					ДоходыПоРегистрации=1;
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли; 	
		КонецЕсли;
		
		
		Если ОсобыеДоходы = 1 Тогда
			// здесь собираются доходы, вычеты или коды дохода которых зависят от конкретного документа-основания записи в ж.р.
			МесяцДохода=ДатаМесяц(ПериодДействия);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			Док = ЖрнЗарплата.Документ;
			ВидДокумента=Док.Вид();
			СуммаРез = ЖрнЗарплата.Результат;
			Скидка = 0; НазваниеЛьготы = "";
			КодДохода = Строка(КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ));		
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				НазваниеЛьготы = ": к зачету по дивидендам ";
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
				Если (Резидент = 1) и (СписокСтатусРезидента.ПолучитьЗначение(МесяцДохода) = 1) Тогда
					Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку()=1 Цикл
							Если Док.Сотрудник.ОсновнойЭлемент=Сотрудник Тогда
								Скидка=Док.КЗачетуАкционера;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если СуммаРез&gt;0 Тогда
							Скидка=Мин(Скидка,СуммаРез);
						Иначе
							Скидка=Макс(-1*Скидка,СуммаРез);
						КонецЕсли;
						
						Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1));    
						
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ВР=ВидРасчета.МатВыгодаПоСсудам Тогда
				Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда 
					Если Док.ИсточникСредств = 2 Тогда  // в документе указано, что это кредит - будет облагаться по 13%
						КодДохода ="2641";
					КонецЕсли;
				КонецЕсли;
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1)); 
			Иначе // договора гр-правового характера и авторские договора
				Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда 
					Если ВидДокумента="НачисленияУдержанияСписком" Тогда
						СтрокаДокумента=ЖрнЗарплата.НомерСтрокиДокумента;
						Док.ПолучитьСтрокуПоНомеру(СтрокаДокумента); 
					ИначеЕсли ВидДокумента&lt;&gt;"НачисленияУдержанияСотрудника" Тогда
						ПодразделениеДокумента = Док.Подразделение;
						Если ПустоеЗначение(ПодразделениеДокумента)=0 Тогда
							Если Сред(СтрокаМесяцевРаботы,МесяцДохода,1)="0" Тогда
								//сотрудник не работал в этом месяце, установим в списке подразделений подразделение из документа
								СписокПодразделений.УстановитьЗначение(МесяцДохода,ПодразделениеДокумента);	
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					КодДохода = Док.ВидДохода.Код; 
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Если (Резидент = 1) Тогда
						КодВычета = Док.ВидВычета.Код;
						НазваниеЛьготы = ": профессиональный вычет (код "+КодВычета+")";
						Если КодВычета = "405" Тогда // норматив затрат по авторским договорам - см. пп. 3 ст. 221 НК РФ
							Норматив = 0;
							Если КодДохода = "2206" Тогда
								Норматив = 25
							ИначеЕсли (Найти(",2201,2207,2208,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 20
							ИначеЕсли (Найти(",2202,2204,2209,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 30
							ИначеЕсли (Найти(",2203,2205,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 40
							КонецЕсли; 
							Расходы = Окр(СуммаРез * Норматив / 100,2);
						Иначе // фактические расходы
							Если ЖрнЗарплата.Сторно=1 Тогда
								Расходы = -1*Док.Вычет;
							Иначе
								Расходы = Док.Вычет;	
							КонецЕсли;
						КонецЕсли;
						
						Если ЖрнЗарплата.Сторно=1 Тогда
							Скидка = Макс(Расходы,СуммаРез);	
						Иначе         
							Скидка = Мин(Расходы,СуммаРез);
						КонецЕсли;
						
						Если Скидка &lt;&gt; 0 Тогда
							Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
							Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1));
						КонецЕсли;
					КонецЕсли;
				Иначе
					СуммаРез = 0
				КонецЕсли;
			КонецЕсли;
			
			ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ИсчисленоИзЗарплаты			= ?(ВР = ВидРасчета.МатВыгодаПоСсудам, 1, 0);
			
			ЗаполнитьТаблицуСведенийОДоходах(
			Сотрудник,
			ЖрнЗарплата,
			ТаблицаРаспределения,
			ПериодРегистрацииДохода,
			ПодразделениеОрганизации,
			МесяцНалоговогоПериода,
			КодДохода,
			СуммаРез,
			КодВычета,
			Скидка,
			0,
			ВремТаблицаНДФЛСведенияОДоходах,
			ИсчисленоИзЗарплаты);
			
		КонецЕсли;
		
		Если  ПростоДоходы=1 Тогда
			// здесь собираются налоги исчисленные и доходы, код и вычеты которых не зависят от документа, которым они зарегистрированы 
			МесяцДохода=ДатаМесяц(ПериодДействия);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			
			СуммаРез=ЖрнЗарплата.Результат;
			НомерКолонки = 0;
			Если (ВР=ВидРасчета.НДФЛ) Тогда
				НомерКолонки = 4
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендов) Тогда
				НомерКолонки = 5
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентов) Тогда
				НомерКолонки = 6
			Иначе
				КодДохода=КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
				Если КодДохода&gt;0 Тогда
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1)); 
					
					ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
					ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода); 
					МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
					
					ЗаполнитьТаблицуСведенийОДоходах(
					Сотрудник,
					ЖрнЗарплата,
					ТаблицаРаспределения,
					ПериодРегистрацииДохода,
					ПодразделениеОрганизации,
					МесяцНалоговогоПериода,
					Строка(КодДохода),
					СуммаРез,
					КодВычета,
					Скидка,
					0,
					ВремТаблицаНДФЛСведенияОДоходах,
					0);
				КонецЕсли;    
			КонецЕсли; 
			// занесем налоги исчисленные в таблицу по сотруднику во все месяцы, начиная с месяца, за который начислен налог
			Если НомерКолонки = 6 Тогда
				
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки &gt; 0 Тогда
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки)+СуммаРез);
				КонецЦикла; 
			КонецЕсли;
			
		КонецЕсли;	
		
		Если ДоходыПоРегистрации=1 Тогда
			// здесь собираются  доходы, по периоду регистрации
			МесяцДохода		= ДатаМесяц(ПериодРегистрации);
			МесяцСообщений	= Макс(МесяцСообщений,МесяцДохода);
			СуммаРез		= ЖрнЗарплата.Результат;
			КоличествоДетей	= 0;
			КодДохода		= КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
			Если КодДохода&gt;0 Тогда 
				
				Если ВР=ВидРасчета.МатПомощьПриРожденииРебенка Тогда
					Док = ЖрнЗарплата.Документ;
					КодДохода ="2762";
					КодВычета = "508";
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1, КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Скидка = Док.СуммаВычета;
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
					Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1)); 
					
				Иначе
					
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода); 
					Если Строка(КодДохода) = "2791" Тогда
						Доходы.УстановитьЗначение(НомерДохода,14,"509");    
					КонецЕсли;
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1));
					
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ЗаполнитьТаблицуСведенийОДоходах(
			Сотрудник,
			ЖрнЗарплата,
			ТаблицаРаспределения,
			ПериодРегистрацииДохода,
			ПодразделениеОрганизации,
			МесяцНалоговогоПериода,
			Строка(КодДохода),
			СуммаРез,
			КодВычета,
			Скидка,
			КоличествоДетей,
			ВремТаблицаНДФЛСведенияОДоходах,
			0);
		КонецЕсли;  
		
		Если ДоходыПоРегистрацииСторно=1 Тогда
			// здесь собираются  доходы, по периоду регистрации
			
			Док = ЖрнЗарплата.Документ;
			Если ЖрнЗарплатаДляСторно.ВыбратьЗаписиПоДокументу(Док)=1 Тогда
				ПериодРегистрацииЗаписи=ЖрнЗарплатаДляСторно.ПериодРегистрации.ДатаОкончания; 
				Если (ПериодРегистрацииЗаписи&lt;НачалоГода) или (ПериодРегистрацииЗаписи&gt;ОкончаниеГода) Тогда
					Продолжить;    
				КонецЕсли;
			КонецЕсли;
			
			МесяцДохода		= ДатаМесяц(ПериодРегистрацииЗаписи);
			МесяцСообщений	= Макс(МесяцСообщений,МесяцДохода);
			СуммаРез		= ЖрнЗарплата.Результат;
			КоличествоДетей	= 0;
			КодДохода		= КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
			Если КодДохода&gt;0 Тогда 
				
				Если ВР=ВидРасчета.МатПомощьПриРожденииРебенка Тогда
					КодДохода ="2762";
					КодВычета = "508";
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1, КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Скидка = Док.СуммаВычета;
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
					Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1)); 
					
				Иначе
					
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1));
					
				КонецЕсли;
				
			КонецЕсли; 
			
			ПериодРегистрацииДохода		= НачМесяца(ПериодРегистрацииЗаписи);
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ЗаполнитьТаблицуСведенийОДоходах(
			Сотрудник,
			ЖрнЗарплата,
			ТаблицаРаспределения,
			ПериодРегистрацииДохода,
			ПодразделениеОрганизации,
			МесяцНалоговогоПериода,
			Строка(КодДохода),
			СуммаРез,
			КодВычета,
			Скидка,
			КоличествоДетей,
			ВремТаблицаНДФЛСведенияОДоходах,
			0);
		КонецЕсли;
		
		// здесь собираются налоги (исчисленные и удержанные) - по периоду регистрации
		Если НалогиПоРегистрации = 1 Тогда 
			Если ПериодРегистрации &gt; ОкончаниеГода Тогда
				МесяцДохода = 12    
			ИначеЕсли ДатаГод(ПериодРегистрации) &lt; Год Тогда
				МесяцДохода = 1    
			Иначе
				МесяцДохода = ДатаМесяц(ПериодРегистрации); 
			КонецЕсли;
			ПервыйМесяцРасчетов = Мин(МесяцДохода,ПервыйМесяцРасчетов);
			СуммаРез=ЖрнЗарплата.Результат;
			НомерКолонки=0;
			Если (ВР=ВидРасчета.НДФЛ) Тогда
				НомерКолонки = 7
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендов)  Тогда
				НомерКолонки = 8
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентов)  Тогда
				НомерКолонки = 9
			ИначеЕсли (ВР=ВидРасчета.НДФЛУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛ) Тогда
				НомерКолонки = 10
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендовУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛсДивидендов) Тогда
				НомерКолонки = 11
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентовУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛпоСтавке35) Тогда
				НомерКолонки = 12
			КонецЕсли;
			// занесем налоги в таблицу по сотруднику 
			Если ВР = ВидРасчета.ВозвратНДФЛ Тогда
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42))-СуммаРез);
			ИначеЕсли ВР = ВидРасчета.ВозвратНДФЛСДивидендов Тогда
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,43,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,43))-СуммаРез);
			КонецЕсли;
			
			Если НомерКолонки = 9 Тогда
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки = 12 Тогда
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки &gt; 0 Тогда
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки)+СуммаРез);
				КонецЦикла; 
				
				Если НомерКолонки = 7 Тогда
					СписокПериодовНДФЛ = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,"НР");
					СписокПериодовНДФЛ.ДобавитьЗначение(ПериодРегистрации, СуммаРез);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,"НР",СписокПериодовНДФЛ);    
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли; 
		
		
		Если ЗачтеноАвансаПоНДФЛ = 1 Тогда
			
			Если ПериодРегистрации &gt; ОкончаниеГода Тогда
				МесяцДохода = 12    
			ИначеЕсли ДатаГод(ПериодРегистрации) &lt; Год Тогда
				МесяцДохода = 1    
			Иначе
				МесяцДохода = ДатаМесяц(ПериодРегистрации); 
			КонецЕсли;
			
			СуммаРез=ЖрнЗарплата.Результат;
			
			Для Сч = МесяцДохода По 12 Цикл
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"ЗачтеноАвансаПоНДФЛ",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,"ЗачтеноАвансаПоНДФЛ")+СуммаРез);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;  //обработка записей ЖР  
	
	НомСтроки = 0;
	ТабАвансыПоНДФЛ.НайтиЗначение(Сотрудник,НомСтроки,"Сотрудник");
	Если НомСтроки &lt;&gt; 0 Тогда
		Для СчСотр = НомСтроки По ТабАвансыПоНДФЛ.КоличествоСтрок() Цикл
			
			ТабАвансыПоНДФЛ.ПолучитьСтрокуПоНомеру(СчСотр);
			Если ТабАвансыПоНДФЛ.Сотрудник &lt;&gt; Сотрудник Тогда
				Прервать;
			КонецЕсли;
			
			Для Сч = ТабАвансыПоНДФЛ.Месяц По 12 Цикл
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"АвансПоНДФЛ",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,"АвансПоНДФЛ")+ТабАвансыПоНДФЛ.Сумма);
			КонецЦикла;
			
			
		КонецЦикла;	
	КонецЕсли; 
	
	Уведомление = СоздатьОбъект("СписокЗначений");
	Уведомление.Установить("НомерУведомленияАванс","");
	Уведомление.Установить("ДатаУведомленияАванс","");
	Уведомление.Установить("КодФНСУведомленияАванс","");
	
	НомСтроки = 0;
	ТабУведомленияНаУменьшениеНДФЛ.НайтиЗначение(Сотрудник,НомСтроки,"Сотрудник");
	Если НомСтроки &lt;&gt; 0 Тогда 
		ТабУведомленияНаУменьшениеНДФЛ.ПолучитьСтрокуПоНомеру(НомСтроки);
		Уведомление = СоздатьОбъект("СписокЗначений");
		Уведомление.Установить("НомерУведомленияАванс",ТабУведомленияНаУменьшениеНДФЛ.НомерУведомления);
		Уведомление.Установить("ДатаУведомленияАванс",ТабУведомленияНаУменьшениеНДФЛ.ДатаУведомления);
		Уведомление.Установить("КодФНСУведомленияАванс",ТабУведомленияНаУменьшениеНДФЛ.КодФНС); 
	КонецЕсли; 
	
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"УведомлениеНаУменьшениеНДФЛ",Уведомление);
	КонецЦикла;
	
	Если ПервыйМесяцРасчетов &gt; 1 Тогда
		Для Сч = 1 По ПервыйМесяцРасчетов - 1 Цикл
			Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,Дата(Год,Сч,15),Дата(Год,Сч,15)) = 1 Тогда
				ПервыйМесяцРасчетов = Сч;
				Прервать
			КонецЕсли;		    	
		КонецЦикла;
	КонецЕсли; 
	
	// закончена обработка расчетов в журнале расчетов
	
	// добавим доходы и налоги из справочников
	Если  ДанныеИзСправочникаДоходов = 1 Тогда
		Пока ЗапросКсправочникуДоходов.Группировка("ГодоМесяц")=1 Цикл
			МесяцДохода = Число(ЗапросКсправочникуДоходов.ГодоМесяц) % 100;
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			Пока ЗапросКсправочникуДоходов.Группировка("ТекущийЭлемент")=1 Цикл
				КодДохода = ЗапросКсправочникуДоходов.ВидДохода+?(ЗапросКсправочникуДоходов.НомерРазделаНК=0,"",Строка(ЗапросКсправочникуДоходов.НомерРазделаНК));
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				РезДохода=ЗапросКсправочникуДоходов.Доход;
				РезВычета=ЗапросКсправочникуДоходов.Вычет;
				КодВычета=Лев(ЗапросКсправочникуДоходов.ВидВычета,3);
				
				Если (Найти(",403,404,405,508,509,607,",","+КодВычета+",") &gt; 0) Тогда	
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
				КонецЕсли;  
				
				//плюс ведется отдельный учет данных о доходах и вычетах, введенных в справочник:
				Доходы.Заполнить(РезДохода,НомерДохода,НомерДохода,Сред("   2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,",МесяцДохода*3)+Сред("  27,28,29,30,31,32,33,34,35,36,37,38",МесяцДохода*3));
				Доходы.Заполнить(РезВычета,НомерДохода,НомерДохода,Сред("  15,16,17,18,19,20,21,22,23,24,25,26,",МесяцДохода*3)+Сред("  39,40,41,42,43,44,45,46,47,48,49,50",МесяцДохода*3));
				
				ПериодРегистрацииДохода		= Дата(Год,МесяцДохода,1);;
				ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода); 
				МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
				
				ЗаполнитьТаблицуСведенийОДоходах(
				Сотрудник,
				ЖрнЗарплата,
				ТаблицаРаспределения,
				ПериодРегистрацииДохода,
				ПодразделениеОрганизации,
				МесяцНалоговогоПериода,
				Строка(КодДохода),
				РезДохода,
				Строка(КодВычета),
				РезВычета,
				0,
				ВремТаблицаНДФЛСведенияОДоходах,
				0);
			КонецЦикла; // обхода видов дохода
		КонецЦикла;  // обхода по периодам действия/регистрации
	КонецЕсли;
	
	Доходы.Свернуть("1,14","2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,
	|27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50");  
	
	// рассчитаем оставшиеся вычеты к доходам
	ВсегоСтрок = Доходы.КоличествоСтрок();
	
	ТаблицаВычетовКДоходам = СоздатьТаблицуВычетовКДоходам( ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,,,,,,,,,,,,,,,,,,,,,,,,,,, Отказ);
	
	Для СчСтрок = 1 По ВсегоСтрок Цикл
		КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
		Если Найти(",2761,2720,2730,2740,2760,2770,2790,2791,1211,",","+КодДохода+",") &gt; 0 Тогда  // ст. 217 НК РФ
			КодВычета="";
			Если КодДохода = "2761" Тогда
				КодВычета="506"
			ИначеЕсли КодДохода = "2720" Тогда
				КодВычета="501"
			ИначеЕсли КодДохода = "2730"  Тогда
				КодВычета="502"
			ИначеЕсли КодДохода = "2740"  Тогда
				КодВычета="505"
			ИначеЕсли КодДохода = "2760"  Тогда
				КодВычета="503" 
			ИначеЕсли КодДохода = "2770"  Тогда
				КодВычета="504"
			ИначеЕсли КодДохода = "2790"  Тогда
				КодВычета="507"
			ИначеЕсли (КодДохода = "2791")  Тогда
				КодВычета="509"
			ИначеЕсли (КодДохода = "1211")  Тогда
				КодВычета="607"	
			Иначе
				
			КонецЕсли;
			
			Если КодВычета="509" Тогда 
				Для Сч = 1 По 12 Цикл
					Доходы.УстановитьЗначение(СчСтрок,Сч+14,Доходы.ПолучитьЗначение(СчСтрок,Сч+14));
				КонецЦикла;
			Иначе	
				СтрокаТабВычетов = "";
				Если ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код")=1 Тогда
					СуммаВычета=ТаблицаВычетов.ПолучитьЗначение(СтрокаТабВычетов,"Сумма");
				Иначе
					СуммаВычета=0;
				КонецЕсли;
				
				СуммаВычетаМесяца = 0;
				ВычетБыл = 0;
				
				Для Сч = 1 По 12 Цикл
					СуммаВычетаВТаблицу	= Макс(Мин(СуммаВычета,Доходы.ПолучитьЗначение(СчСтрок,Сч+1)),0);
					СуммаВычетаМесяца	= СуммаВычетаВТаблицу - ВычетБыл;
					ВычетБыл			= СуммаВычетаВТаблицу;
					
					Доходы.УстановитьЗначение(СчСтрок,Сч+14, СуммаВычетаВТаблицу);
					
					Если СуммаВычетаМесяца &lt;&gt; 0 Тогда
						ТаблицаВычетовКДоходам.НоваяСтрока();
						ТаблицаВычетовКДоходам.КодДохода				= КодДохода;
						ТаблицаВычетовКДоходам.КодВычета				= КодВычета;
						ТаблицаВычетовКДоходам.МесяцНалоговогоПериода	= Дата(Год,Сч,1);
						ТаблицаВычетовКДоходам.СуммаВычета				= СуммаВычетаМесяца;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			Доходы.УстановитьЗначение(СчСтрок,14,КодВычета);
			
		ИначеЕсли (((Лев(КодДохода,2)="15") и (КодДохода&lt;&gt;"1540")) или (КодДохода="2210") или (КодДохода="2220")) и (Резидент=1) Тогда  // резидентам имущественный вычет предоставить не можем - не облагаем вообще
			Для Сч = 1 По 12 Цикл 
				Доходы.УстановитьЗначение(СчСтрок,Сч+14,Доходы.ПолучитьЗначение(СчСтрок,Сч+1)); 
			КонецЦикла;
			
		Иначе
			
		КонецЕсли; 
	КонецЦикла;  
	
	// рассчитаем стандартные и имущественные вычеты 
	Если ВсегоВычетовСотра &gt; 0  Тогда
		
		Если ПорядокРасчетаНДФЛ=Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
			
			// признак достижения предела  при исчислении вычетов:
			// 0 - доход до 20 000, 1 - доход свыше 20000			
			//// признак достижения предела  при исчислении имущественных вычетов:
			//// 0 - доход до 1 000 000, 1 - доход свыше 1 000 000
			//ДостиглиПределаДоходовИмущ = 0;
			
			// Суммы вычетов нарастающим итогом
			Для Сч = 1 По 31 Цикл
				СуммыВычетов[Сч]=0;
				СуммыВычетовП[Сч]=0;
			КонецЦикла;
			
			НПимущ = НачалоГода;
			КПимущ = ОкончаниеГода;
			ВсегоВычетовПредоставлено = 0;
			Для Сч = 1 По 12 Цикл
				
				НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
				КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15));
				
				//проверим накопленный доход для исчисления вычетов				
				СовокупныйДоходДляВычетов = 0;
				
				// доход на предыдущем месте работы 
				Если ТипЗначения(ЗапросПоСправкамСПредМР) &lt;&gt; 0 Тогда
					ЗапросПоСправкамСПредМР.вНачалоВыборки();
					Если ЗапросПоСправкамСПредМР.Получить(Сотрудник) = 1 Тогда
						Для Сч1 = 1 По Сч Цикл
							СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + ЗапросПоСправкамСПредМР.ПолучитьАтрибут("СД"+Строка(Сч1));
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				// доход на нашем предприятии
				Для СчСтрок = 1 По ВсегоСтрок Цикл
					КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
					Если Найти(",1210,2610,2740,3020,1010,1110,1120,4000,",","+КодДохода+",")=0 Тогда
						СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + Доходы.ПолучитьЗначение(СчСтрок,Сч+1) - Доходы.ПолучитьЗначение(СчСтрок,Сч+14);
					КонецЕсли;
				КонецЦикла;	                 
				
				// Суммы текущих вычетов
				Для Ссч = 1 По 31 Цикл
					ВычетыТекущие[Ссч]=0;
				КонецЦикла;
				
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					КодВычета = "";
					Вычет=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодВычета); 
					
					Если (КодВычета="319") или (КодВычета="327") Тогда
						
						СтрокаВычета = "";
						СуммаСоциальногоВычета = 0;  
						Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
						Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
							ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
							СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
						КонецЕсли;
						
						Номер = 30;	
						ПределДляВычетов	= 0;
						СуммаВычета			= СуммаСоциальногоВычета;
						СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
						ВычетыТекущие[Номер]=СуммаВычета;
						Продолжить;
						
					ИначеЕсли (КодВычета="320") или (КодВычета="328") Тогда
						
						СтрокаВычета = ""; 
						СуммаСоциальногоВычета = 0;  
						Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
						Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
							ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
							СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
						КонецЕсли;
						
						Номер = 31;	
						ПределДляВычетов	= 0;
						СуммаВычета			= СуммаСоциальногоВычета;
						СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
						ВычетыТекущие[Номер]=СуммаВычета;
						Продолжить;	
						
					КонецЕсли;
					
					СтрокаТабВычетов = "";
					ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код");
					Если СтрокаТабВычетов &gt; 0 Тогда
						ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
						ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
						СуммаВычета			= ТаблицаВычетов.Сумма;
					Иначе
						ПределДляВычетов	= 0;
						СуммаВычета			= 0;
					КонецЕсли;
					// собственно проверка предела дохода
					ДостиглиПределаДоходов = 0;
					Если ПределДляВычетов &gt; 0 Тогда
						Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
							ДостиглиПределаДоходов = 1
						КонецЕсли;
					КонецЕсли;
					
					ДатаНачалаВычета	= Вычет.ПолучитьЗначение(1);
					ДатаОкончанияВычета	= Вычет.ПолучитьЗначение(2);
					КодВычетаСтрока = КодВычета;
					КодВычета			= Число(КодВычета);
					
					Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
						Номер=КодВычета-100;
						Если (КодВычета=103) и (ДостиглиПределаДоходов=0) Тогда // вычет предусмотрен пп. 3 п. 1 ст. 218
							Если (УчтенВычетФЛ=0) Тогда
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетов[Номер]=СуммыВычетов[Номер]+ВычетыТекущие[Номер];
								УчтенВычетФЛ=КодВычета;
							КонецЕсли;
						ИначеЕсли (Найти(СтрокаСписокВычетовНаДетей,КодВычетаСтрока)&gt;0) и (ДостиглиПределаДоходов=0) Тогда 
							СуммыВычетов[Номер]		= СуммыВычетов[Номер] + СуммаВычета;
							ВычетыТекущие[Номер]	= ВычетыТекущие[Номер] + СуммаВычета;
							
						ИначеЕсли (КодВычета=104) или (КодВычета=105) Тогда  // вычеты предусмотрены пп. 1 и 2 п. 1 ст. 218
							Если УчтенВычетФЛ&lt;КодВычета Тогда // ранее встречались только меньшие вычеты, либо их не было вообще
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетов[Номер]=СуммыВычетов[Номер]+ВычетыТекущие[Номер];
								Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
									Номер=УчтенВычетФЛ-100;
									СуммыВычетов[Номер]=СуммыВычетов[Номер]-ВычетыТекущие[Номер];
									ВычетыТекущие[Номер]=0;
								КонецЕсли;
								УчтенВычетФЛ=КодВычета;
							КонецЕсли;
							
						Иначе // других кодов здесь не предусмотрено
						КонецЕсли;
					КонецЕсли;
				КонецЦикла; // обхода вычетов сотра
				
				// вычеты - в итоговую таблицу
				ВсегоВычетов = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений"); 
				СписокВычетовДляТаблицыФакт = СоздатьОбъект("СписокЗначений"); 
				ВсегоВычетовПредоставлено = 0;
				Для СчВычетов = 1 По СписокКодовВычетовСотра.РазмерСписка()  Цикл
					
					КодВычета = "";
					Вычет=СписокКодовВычетовСотра.ПолучитьЗначение(СчВычетов,КодВычета);
					Номер=?((КодВычета="319") или (КодВычета="327"),30,?((КодВычета="320") или (КодВычета="328"),31,Число(КодВычета)-100));
					
					Если СуммыВычетов[Номер] &gt; 0 Тогда
						ВсегоВычетов = ВсегоВычетов + СуммыВычетов[Номер];
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммыВычетов[Номер],КодВычета); 
						
						Если (КодВычета="319") или (КодВычета="320") или (КодВычета="327") или (КодВычета="328") Тогда
							СписокВычетовДляТаблицыФакт.ДобавитьЗначение(СуммыВычетов[Номер],КодВычета);
							ВсегоВычетовПредоставлено = ВсегоВычетовПредоставлено + СуммыВычетов[Номер];
						Иначе
							СуммаВычетаФакт = Мин(СуммыВычетов[Номер],СовокупныйДоходДляВычетов-ВсегоВычетовПредоставлено);
							Если СуммаВычетаФакт&gt;0 Тогда 
								СписокВычетовДляТаблицыФакт.ДобавитьЗначение(СуммаВычетаФакт,КодВычета);
								ВсегоВычетовПредоставлено = ВсегоВычетовПредоставлено + СуммаВычетаФакт;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли; 
					
				КонецЦикла;
				СписокВычетовОбщий = СоздатьОбъект("СписокЗначений");
				СписокВычетовОбщий = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,3);
				СписокВычетовОбщий.УстановитьЗначение(1,СписокВычетовДляТаблицыФакт);
				СписокВычетовОбщий.УстановитьЗначение(7,СписокВычетовДляТаблицы);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетовОбщий);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,19,СовокупныйДоходДляВычетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,20,ВсегоВычетов);
				
			КонецЦикла;	// по месяцам расчета вычетов 
			
		Иначе  // порядок вычетов - помесячно
			
			// признак достижения предела  при исчислении вычетов:
			// 0 - доход до 20 000, 1 - доход свыше 20000			
			//// признак достижения предела  при исчислении имущественных вычетов:
			//// 0 - доход до 1 000 000, 1 - доход свыше 1 000 000
			//ДостиглиПределаДоходовИмущ = 0;
			
			// Суммы вычетов нарастающим итогом
			Для Сч = 1 По 31 Цикл
				СуммыВычетов[Сч]=0; 
				СуммыВычетовП[Сч]=0;
			КонецЦикла;
			
			НПимущ = НачалоГода;
			КПимущ = ОкончаниеГода;
			Для Сч = 1 По 12 Цикл
				
				НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
				КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15));
				
				//проверим накопленный доход для исчисления вычетов				
				СовокупныйДоходДляВычетов = 0;
				
				// доход на предыдущем месте работы 
				Если ТипЗначения(ЗапросПоСправкамСПредМР) &lt;&gt; 0 Тогда
					ЗапросПоСправкамСПредМР.вНачалоВыборки();
					Если ЗапросПоСправкамСПредМР.Получить(Сотрудник) = 1 Тогда
						Для Сч1 = 1 По Сч Цикл
							СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + ЗапросПоСправкамСПредМР.ПолучитьАтрибут("СД"+Строка(Сч1));
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				// доход на нашем предприятии
				Для СчСтрок = 1 По ВсегоСтрок Цикл
					КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
					Если Найти(",1210,2610,2740,3020,1010,1110,1120,4000,",","+КодДохода+",")=0 Тогда
						СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + Доходы.ПолучитьЗначение(СчСтрок,Сч+1) - Доходы.ПолучитьЗначение(СчСтрок,Сч+14);
					КонецЕсли;
				КонецЦикла;	
				
				
				Если Сч=1 Тогда
					СовокупныйДоходДляВычетовПоТекущийМесяц=СовокупныйДоходДляВычетов;
					ДоходТекущегоМесяцаДляВычетов=СовокупныйДоходДляВычетов;
				Иначе
					ДоходТекущегоМесяцаДляВычетов=СовокупныйДоходДляВычетов-СовокупныйДоходДляВычетовПоТекущийМесяц;
					СовокупныйДоходДляВычетовПоТекущийМесяц =СовокупныйДоходДляВычетов;
				КонецЕсли;
				
				
				// Суммы текущих вычетов
				Для Ссч = 1 По 31 Цикл
					ВычетыТекущие[Ссч]=0; 
				КонецЦикла;
				
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				ОсталосьДоходовДляВычетов=ДоходТекущегоМесяцаДляВычетов;
				Если ДоходТекущегоМесяцаДляВычетов&gt;0 Тогда
					//предоставляем вычеты если в месяце есть доходы
					
					Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
						КодВычета = "";
						Вычет=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодВычета); 
						
						Если (КодВычета="319") или (КодВычета="327") Тогда  
							
							СтрокаВычета = ""; 
							СуммаСоциальногоВычета = 0;  
							Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
							Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
								ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
								СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
							КонецЕсли;
							
							Номер = 30;	
							ПределДляВычетов	= 0;
							СуммаВычета			= СуммаСоциальногоВычета;
							СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
							ВычетыТекущие[Номер]=СуммаВычета;
							Продолжить;  
							
						ИначеЕсли (КодВычета="320") или (КодВычета="328") Тогда
							
							СтрокаВычета = ""; 
							СуммаСоциальногоВычета = 0;  
							Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
							Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
								ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
								СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
							КонецЕсли;
							
							Номер = 31;	
							ПределДляВычетов	= 0;
							СуммаВычета			= СуммаСоциальногоВычета;
							СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
							ВычетыТекущие[Номер]=СуммаВычета;
							Продолжить;	 
							
						КонецЕсли;
						
						СтрокаТабВычетов = "";
						ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код");
						Если СтрокаТабВычетов &gt; 0 Тогда
							ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
							ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
							СуммаВычета			= ТаблицаВычетов.Сумма;
						Иначе
							ПределДляВычетов	= 0;
							СуммаВычета			= 0;
						КонецЕсли;
						// собственно проверка предела дохода
						ДостиглиПределаДоходов = 0;
						Если ПределДляВычетов &gt; 0 Тогда
							Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
								ДостиглиПределаДоходов = 1
							КонецЕсли;
						КонецЕсли;  
						
						СуммаВычетаНеОграниченная=СуммаВычета;
						СуммаВычетаП=СуммаВычета; //для сбора суммы вычетов на которые имели право
						СуммаВычета=Мин(ОсталосьДоходовДляВычетов,СуммаВычета); 
						
						//это сумма вычета, котору мы можем применить учитывая доход месяца
						Если СуммаВычета&gt;0 Тогда 
							ДатаНачалаВычета	= Вычет.ПолучитьЗначение(1);
							ДатаОкончанияВычета	= Вычет.ПолучитьЗначение(2);
							КодВычетаСтрока = КодВычета;
							КодВычета			= Число(КодВычета);
							
							Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
								Номер=КодВычета-100;
								Если (КодВычета=103) и (ДостиглиПределаДоходов=0) Тогда // вычет предусмотрен пп. 3 п. 1 ст. 218
									Если (УчтенВычетФЛ=0) Тогда
										ВычетыТекущие[Номер]		= СуммаВычета;
										СуммыВычетов[Номер]			= СуммыВычетов[Номер]+ВычетыТекущие[Номер];
										УчтенВычетФЛ				= КодВычета;  
										ОсталосьДоходовДляВычетов	= ОсталосьДоходовДляВычетов-СуммаВычета;
										
									КонецЕсли;
									
								ИначеЕсли (Найти(СтрокаСписокВычетовНаДетей,КодВычетаСтрока)&gt;0) и (ДостиглиПределаДоходов=0) Тогда 
									
									СуммыВычетов[Номер]			= СуммыВычетов[Номер]+СуммаВычета;
									ОсталосьДоходовДляВычетов	= ОсталосьДоходовДляВычетов-СуммаВычета;
									ВычетыТекущие[Номер]		= ВычетыТекущие[Номер] + СуммаВычета;
									
								ИначеЕсли (КодВычета=104) или (КодВычета=105) Тогда  // вычеты предусмотрены пп. 1 и 2 п. 1 ст. 218
									Если УчтенВычетФЛ&lt;КодВычета Тогда // ранее встречались только меньшие вычеты, либо их не было вообще 
										Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
											Номер = УчтенВычетФЛ-100;
											
											СуммыВычетов[Номер] = СуммыВычетов[Номер]-ВычетыТекущие[Номер];
											
											//вернем предоставленный вычет
											ОсталосьДоходовДляВычетов = ОсталосьДоходовДляВычетов+ВычетыТекущие[Номер];
											//еще раз рассчитаем сумму вычета, которую представляем с учетом месячного ограничения
											СуммаВычета = Мин(ОсталосьДоходовДляВычетов,СуммаВычетаНеОграниченная);
											
											ВычетыТекущие[Номер] = 0;
										КонецЕсли;
										
										ВычетыТекущие[Номер]		= СуммаВычета;
										СуммыВычетов[Номер]			= СуммыВычетов[Номер]+ВычетыТекущие[Номер];
										ОсталосьДоходовДляВычетов	= ОсталосьДоходовДляВычетов-СуммаВычета;
										
										УчтенВычетФЛ				= КодВычета;
									КонецЕсли;						
								Иначе // других кодов здесь не предусмотрено
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла; // обхода вычетов сотра 
				Иначе
					//в месяце нет дохода, вычеты не представляются
				КонецЕсли;  //не предоставляем вычеты в месяце без доходов  
				
				// вычеты - в итоговую таблицу
				ВсегоВычетов = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				Для СчВычетов = 1 По 31  Цикл
					Если СуммыВычетов[СчВычетов] &gt; 0 Тогда
						ВсегоВычетов = ВсегоВычетов + СуммыВычетов[СчВычетов];
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммыВычетов[СчВычетов],?(СчВычетов=30,"319",Строка(СчВычетов+100)));
					КонецЕсли;
				КонецЦикла; 
				
				СписокВычетовОбщий = СоздатьОбъект("СписокЗначений");
				СписокВычетовОбщий = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,3);
				СписокВычетовОбщий.УстановитьЗначение(1,СписокВычетовДляТаблицы);
				
				//соберем вычетв на которые сотрудник имел право, необходимо для 2_НДФЛ 
				// Суммы текущих вычетов
				Для Ссч = 1 По 10 Цикл
					ВычетыТекущие[Ссч]=0; 
				КонецЦикла;
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					КодВычета = "";
					Вычет=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодВычета); 
					
					Если (КодВычета="319") или (КодВычета="327") Тогда  
						
						СтрокаВычета = ""; 
						СуммаСоциальногоВычета = 0;  
						Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
						Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
							ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
							СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
						КонецЕсли;
						
						Номер = 30;	
						ПределДляВычетов	= 0;
						СуммаВычета			= СуммаСоциальногоВычета;
						СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
						ВычетыТекущие[Номер]=СуммаВычета;
						Продолжить;  
						
					ИначеЕсли (КодВычета="320")  или (КодВычета="328") Тогда
						
						СтрокаВычета = ""; 
						СуммаСоциальногоВычета = 0;  
						Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
						Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
							ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
							СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
						КонецЕсли;
						
						Номер = 31;	
						ПределДляВычетов	= 0;
						СуммаВычета			= СуммаСоциальногоВычета;
						СуммыВычетов[Номер]=СуммыВычетов[Номер]+СуммаВычета;
						ВычетыТекущие[Номер]=СуммаВычета;
						Продолжить;	 
						
					КонецЕсли;
					
					СтрокаТабВычетов = "";
					ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"Код");
					Если СтрокаТабВычетов &gt; 0 Тогда
						ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
						ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
						СуммаВычета			= ТаблицаВычетов.Сумма;
					Иначе
						ПределДляВычетов	= 0;
						СуммаВычета			= 0;
					КонецЕсли;
					// собственно проверка предела дохода
					ДостиглиПределаДоходов = 0;
					Если ПределДляВычетов &gt; 0 Тогда
						Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
							ДостиглиПределаДоходов = 1
						КонецЕсли;
					КонецЕсли;
					
					ДатаНачалаВычета = Вычет.ПолучитьЗначение(1);
					ДатаОкончанияВычета = Вычет.ПолучитьЗначение(2);
					КодВычетаСтрока = КодВычета;
					КодВычета=Число(КодВычета);
					Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
						Номер=КодВычета-100;
						Если (КодВычета=103) и (ДостиглиПределаДоходов=0) Тогда // вычет предусмотрен пп. 3 п. 1 ст. 218
							Если (УчтенВычетФЛ=0) Тогда
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетовП[Номер]=СуммыВычетовП[Номер]+ВычетыТекущие[Номер];
								УчтенВычетФЛ		=КодВычета;
							КонецЕсли;
							
						ИначеЕсли (Найти(СтрокаСписокВычетовНаДетей,КодВычетаСтрока)&gt;0) и (ДостиглиПределаДоходов=0) Тогда
							
							СуммыВычетовП[Номер]=СуммыВычетовП[Номер]+СуммаВычета;
							
						ИначеЕсли (КодВычета=104) или (КодВычета=105) Тогда  // вычеты предусмотрены пп. 1 и 2 п. 1 ст. 218
							Если УчтенВычетФЛ&lt;КодВычета Тогда // ранее встречались только меньшие вычеты, либо их не было вообще
								ВычетыТекущие[Номер]=СуммаВычета;
								СуммыВычетовП[Номер]=СуммыВычетовП[Номер]+ВычетыТекущие[Номер];
								Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
									Номер=УчтенВычетФЛ-100;
									СуммыВычетовП[Номер]=СуммыВычетовП[Номер]-ВычетыТекущие[Номер];
									ВычетыТекущие[Номер]=0;
								КонецЕсли;
								УчтенВычетФЛ=КодВычета;
							КонецЕсли;
							
						Иначе // других кодов здесь не предусмотрено
						КонецЕсли;
					КонецЕсли;
				КонецЦикла; // обхода вычетов сотра
				
				ВсегоВычетовП = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				Для СчВычетов = 1 По 31  Цикл
					Если СуммыВычетовП[СчВычетов] &gt; 0 Тогда
						ВсегоВычетовП = ВсегоВычетовП + СуммыВычетовП[СчВычетов];
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммыВычетовП[СчВычетов],?(СчВычетов=30,"319",?(СчВычетов=31,"320",Строка(СчВычетов+100))));
					КонецЕсли;
				КонецЦикла;
				
				СписокВычетовОбщий.УстановитьЗначение(7,СписокВычетовДляТаблицы);
				//собрали вычеты на которые сотрудник имел право
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетовОбщий);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,19,СовокупныйДоходДляВычетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,20,ВсегоВычетов);
				
			КонецЦикла;	// по месяцам расчета вычетов
			
		КонецЕсли;
		
	Иначе  // пустой список вычетов  уже записан
	КонецЕсли;
	
	Применено311ВПрошломМесяце = 0;
	Применено312ВПрошломМесяце = 0;
	Применено318ВПрошломМесяце = 0;
	
	Для Сч = 1 По 12 Цикл
		
		// облагаемые базы по ставкам нарастающим итогом с начала года
		БазаПо13=0;
		БазаПо13Спр=0;
		ЗаМесяцПо35 = 0;
		БазаПоДивидендам=0;
		БазаПоДивидендамСпр=0;
		
		ТекущиеДоходыПо35.УдалитьВсе();
		ДоходыПо35ЗаГод.УдалитьВсе();
		ТекущиеДоходыПо35Спр.УдалитьВсе();
		ДоходыПо35ЗаГодСпр.УдалитьВсе();
		
		// переформируем таблицу доходов и подсчитаем доходы
		ТаблицаДоходовДляТаблицы = СоздатьОбъект("ТаблицаЗначений"); 
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Строка",5);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Число",15,2);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Строка",3);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Число",15,2);  
		
		Для СчСтрок = 1 По ВсегоСтрок Цикл
			
			СуммаДохода=Доходы.ПолучитьЗначение(СчСтрок,Сч+1);
			СуммаДоходаСпр=Доходы.ПолучитьЗначение(СчСтрок,Сч+26); //из справочника
			
			Если (СуммаДохода &lt;&gt; 0) или (СуммаДоходаСпр &lt;&gt; 0) Тогда
				
				КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
				КодВычета=Доходы.ПолучитьЗначение(СчСтрок,14);
				СуммаВычета=Доходы.ПолучитьЗначение(СчСтрок,Сч+14);
				СуммаВычетаСпр=Доходы.ПолучитьЗначение(СчСтрок,Сч+38); //из справочника
				
				СтрокаДоходаПрисутствует = 0;
				Если (КодДохода="2000") ИЛИ (КодДохода="2012") Тогда
					СтрокаТД="";
					СтрокаДоходаПрисутствует = ТаблицаДоходовДляТаблицы.НайтиЗначение(КодДохода,СтрокаТД,1);
					Если СтрокаДоходаПрисутствует = 1 Тогда
						ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,2,ТаблицаДоходовДляТаблицы.ПолучитьЗначение(СтрокаТД,2)+СуммаДохода);
						Если (ПустоеЗначение(КодВычета) = 0) и (СуммаВычета &lt;&gt; 0) Тогда
							ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,3,КодВычета);
							ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,4,ТаблицаДоходовДляТаблицы.ПолучитьЗначение(СтрокаТД,4)+СуммаВычета); 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрокаДоходаПрисутствует = 0 Тогда
					ТаблицаДоходовДляТаблицы.НоваяСтрока();
					СтрокаТД=ТаблицаДоходовДляТаблицы.КоличествоСтрок();
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,1,КодДохода);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,2,СуммаДохода);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,3,КодВычета);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,4,СуммаВычета); 
				КонецЕсли;
				
				Если КодДохода = "1010" Тогда
					БазаПоДивидендам = СуммаДохода - СуммаВычета;
					БазаПоДивидендамСпр = СуммаДоходаСпр - СуммаВычетаСпр;
					ЗачтеноПоДивидендам[Сч] = СуммаВычета - ?(Сч=1,0,ЗачтеноПоДивидендам[Сч-1])
				ИначеЕсли (Найти(",2610,1210,3020,2740,",","+КодДохода+",")&gt;0)  Тогда
					БылоБазы = Число(ДоходыПо35ЗаГод.Получить(КодДохода));
					БылоБазыСпр = Число(ДоходыПо35ЗаГодСпр.Получить(КодДохода));
					ТекущиеДоходыПо35.ДобавитьЗначение(СуммаДохода - ?(КодДохода="2740",СуммаВычета,0),КодДохода);
					ДоходыПо35ЗаГод.Установить(КодДохода,БылоБазы + СуммаДохода - ?(КодДохода="2740",СуммаВычета,0));
					ТекущиеДоходыПо35Спр.ДобавитьЗначение(СуммаДоходаСпр - ?(КодДохода="2740",СуммаВычета,0),КодДохода);
					ДоходыПо35ЗаГодСпр.Установить(КодДохода,БылоБазыСпр + СуммаДоходаСпр - ?(КодДохода="2740",СуммаВычета,0)); 
					ЗаМесяцПо35 = ЗаМесяцПо35 + СуммаДохода - ?(КодДохода="2740",СуммаВычета,0);
				ИначеЕсли ((Лев(КодДохода,2)&lt;&gt;"15") или (КодДохода="1540")) и (Найти(",4000,4600,",","+КодДохода+",")=0) Тогда // кроме доходов от продажи имущества и предпринимательских доходов
					БазаПо13 = БазаПо13 + СуммаДохода - СуммаВычета;
					БазаПо13Спр = БазаПо13Спр + СуммаДоходаСпр - СуммаВычета;
				ИначеЕсли ((Лев(КодДохода,2)="15") и (КодДохода&lt;&gt;"1540")) и (Резидент=0) Тогда // у нерезидентов доходы от продажи имущества облагаются в полном объеме
					БазаПо13 = БазаПо13 + СуммаДохода;
					БазаПо13Спр = БазаПо13Спр + СуммаДоходаСпр;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		// доходы - в итоговую таблицу
		СтрокаИтоговойТаблицы=НомерСтрокиСотрудника+Сч; 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,2,ТаблицаДоходовДляТаблицы);
		ТаблицаДоходовДляТаблицы=""; 
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,"Подразделение", СписокПодразделений.ПолучитьЗначение(Сч));
		
		// получим вычеты текущего месяца
		ВсегоВычетов=ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,20);
		БазаБезУчетаИмущВычетов = Макс(БазаПо13-ВсегоВычетов,0);
		// запись результатов
		СписокВТретьейКолонкеТекМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,3);
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(2,БазаБезУчетаИмущВычетов); // установим базу без имущественных вычетов
		
		// вычеты имущественные
		НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
		КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15));
		
		// 313\311
		БазаДляИмВычетов = 0;
		Вычет311 = СписокВычетовСотра.Получить("311");
		РазмерВычетаНачальный311 = 0; 
		ПредоставленоИмущНаНачалоГода311 = 0; 
		ИтогоПрименено311 = 0; 
		ОстатокИмущественныхВычетов311 = 0;
		Если ПустоеЗначение(Вычет311) = 0 Тогда
			
			ДатаНачалаВычета         = Вычет311.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет311.ПолучитьЗначение(2);
			МесяцНачалаПримененияВычета = ДатаМесяц(ДатаНачалаВычета);
			
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
				и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				
				РазмерВычетаНачальный311 = Вычет311.ПолучитьЗначение(3); 
				
				Если Сч &gt;= МесяцНачалаПримененияВычета Тогда 
					БазаДляИмВычетов = БазаБезУчетаИмущВычетов
					-?(МесяцНачалаПримененияВычета=1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцНачалаПримененияВычета-1,3).ПолучитьЗначение(2));
				КонецЕсли;
				
			КонецЕсли; 
			
			ПредоставленоИмущНаНачалоГода311 = Макс(РазмерВычетаНачальный311,0); 
			ИтогоПрименено311 = Мин(БазаДляИмВычетов,  ПредоставленоИмущНаНачалоГода311);
			ОстатокИмущественныхВычетов311 = Макс(РазмерВычетаНачальный311 - ИтогоПрименено311,0);
			
		КонецЕсли; 
		
		Применено311ВМесяце			= ИтогоПрименено311 - Применено311ВПрошломМесяце;
		Применено311ВПрошломМесяце	= ИтогоПрименено311;
		
		Если Применено311ВМесяце &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
			Сотрудник,
			"311",
			Год,
			Дата(Год,Сч,1),
			Применено311ВМесяце,
			СписокПодразделений.ПолучитьЗначение(Сч),
			ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// 312                  
		БазаДляИмВычетов = 0;
		Вычет312 = СписокВычетовСотра.Получить("312");
		РазмерВычетаНачальный312 = 0;
		ПредоставленоИмущНаНачалоГода312 = 0; 
		ИтогоПрименено312 = 0; 
		ОстатокИмущественныхВычетов312 = 0;
		Если ПустоеЗначение(Вычет312) = 0 Тогда 
			
			
			ДатаНачалаВычета         = Вычет312.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет312.ПолучитьЗначение(2);
			МесяцНачалаПримененияВычета = ДатаМесяц(ДатаНачалаВычета);
			
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
				и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				
				РазмерВычетаНачальный312 = Вычет312.ПолучитьЗначение(3); 
				
				Если Сч &gt;= МесяцНачалаПримененияВычета Тогда 
					БазаДляИмВычетов = БазаБезУчетаИмущВычетов
					-?(МесяцНачалаПримененияВычета=1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцНачалаПримененияВычета-1,3).ПолучитьЗначение(2));
				КонецЕсли;
				
			КонецЕсли; 
			
			
			ПредоставленоИмущНаНачалоГода312 = Макс(РазмерВычетаНачальный312,0);
			ИтогоПрименено312 = Мин(БазаДляИмВычетов-ИтогоПрименено311,  ПредоставленоИмущНаНачалоГода312); // применяем 312-й вычет после применения 311-го
			ОстатокИмущественныхВычетов312 = Макс(РазмерВычетаНачальный312 - ИтогоПрименено312,0);
			
		КонецЕсли;
		
		Применено312ВМесяце			= ИтогоПрименено312 - Применено312ВПрошломМесяце;
		Применено312ВПрошломМесяце	= ИтогоПрименено312;
		
		Если Применено312ВМесяце &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
			Сотрудник,
			"312",
			Год,
			Дата(Год,Сч,1),
			Применено312ВМесяце,
			СписокПодразделений.ПолучитьЗначение(Сч),
			ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// 318                  
		БазаДляИмВычетов = 0;
		Вычет318 = СписокВычетовСотра.Получить("318");
		РазмерВычетаНачальный318 = 0; 
		ПредоставленоИмущНаНачалоГода318 = 0; 
		ИтогоПрименено318 = 0; 
		ОстатокИмущественныхВычетов318 = 0;
		Если ПустоеЗначение(Вычет318) = 0 Тогда
			
			
			ДатаНачалаВычета         = Вычет318.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет318.ПолучитьЗначение(2);
			МесяцНачалаПримененияВычета = ДатаМесяц(ДатаНачалаВычета);
			
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
				и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				
				РазмерВычетаНачальный318 = Вычет318.ПолучитьЗначение(3); 
				
				Если Сч &gt;= МесяцНачалаПримененияВычета Тогда 
					БазаДляИмВычетов = БазаБезУчетаИмущВычетов
					-?(МесяцНачалаПримененияВычета=1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцНачалаПримененияВычета-1,3).ПолучитьЗначение(2));
				КонецЕсли;
				
			КонецЕсли; 
			
			
			ПредоставленоИмущНаНачалоГода318 = Макс(РазмерВычетаНачальный318,0);
			ИтогоПрименено318 = Мин(БазаДляИмВычетов-ИтогоПрименено311 - ИтогоПрименено312,  ПредоставленоИмущНаНачалоГода318); // применяем 318-й вычет после применения 311-го и 312
			ОстатокИмущественныхВычетов318 = Макс(РазмерВычетаНачальный318 - ИтогоПрименено318,0);
			
		КонецЕсли;
		
		Применено318ВМесяце			= ИтогоПрименено318 - Применено318ВПрошломМесяце;
		Применено318ВПрошломМесяце	= ИтогоПрименено318;
		
		Если Применено318ВМесяце &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
			Сотрудник,
			"318",
			Год,
			Дата(Год,Сч,1),
			Применено318ВМесяце,
			СписокПодразделений.ПолучитьЗначение(Сч),
			ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// облагаемые базы - в итоговую таблицу
		
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(3,ИтогоПрименено311); // установим сумму 311-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(4,ИтогоПрименено312); // установим сумму 312-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(5,Вычет311); // описание 311-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(6,Вычет312); // описание 312-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(8,Вычет318); // описание 318-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(9,ИтогоПрименено318); // установим сумму 318-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,20,Макс(ВсегоВычетов+ИтогоПрименено311+ИтогоПрименено312+ИтогоПрименено318-БазаПо13,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,13,Макс(БазаПо13-ВсегоВычетов-ИтогоПрименено311-ИтогоПрименено312-ИтогоПрименено318,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,39,Макс(БазаПо13Спр-ВсегоВычетов-ИтогоПрименено311-ИтогоПрименено312-ИтогоПрименено318,0));
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,3,СписокВТретьейКолонкеТекМесяц);
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,14,Макс(БазаПоДивидендам,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,40,Макс(БазаПоДивидендамСпр,0));
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,15,""+Число(ДоходыПо35ЗаГод.Получить("2610"))+";"
		+Число(ДоходыПо35ЗаГод.Получить("1210"))+";"
		+Число(ДоходыПо35ЗаГод.Получить("3020"))+";"
		+Число(ДоходыПо35ЗаГод.Получить("2740"))+";");
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,41,""+Число(ДоходыПо35ЗаГодСпр.Получить("2610"))+";"
		+Число(ДоходыПо35ЗаГодСпр.Получить("1210"))+";"
		+Число(ДоходыПо35ЗаГодСпр.Получить("3020"))+";"
		+Число(ДоходыПо35ЗаГодСпр.Получить("2740"))+";");
		
		// разобьем налоги по ставке 35% по кодам доходов
		СчетчикДоходов = 0;
		Для СчДоходов = 1 По 4 Цикл
			КодДохода5Раздела = Сред("2610,1210,3020,2740",СчДоходов*5-4,4);
			СуммаДохода = Число(ДоходыПо35ЗаГод.Получить(КодДохода5Раздела));
			Если СуммаДохода &lt;&gt; 0 Тогда
				СчетчикДоходов = СчетчикДоходов + 1;
				НомерДохода = СчДоходов;
			КонецЕсли;
		КонецЦикла;
		
		Для ВидНалога = 1 По 3 Цикл
			НомерКолонки = 3 + ВидНалога*3;
			
			Если СчетчикДоходов = 1 Тогда  // если такой доход один - запишем все на него
				
				СтрокаНалога = "";
				Для СчДоходов = 1 По 4 Цикл
					Если СчДоходов = НомерДохода Тогда
						СтрокаНалога = СтрокаНалога + СокрЛП(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки));
					Иначе
						СтрокаНалога = СтрокаНалога + "0";
					КонецЕсли;
					СтрокаНалога = СтрокаНалога + ";";
				КонецЦикла;
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,СтрокаНалога);
				
			ИначеЕсли СчетчикДоходов &lt;&gt; 0 Тогда // разобьем суммы налогов пропорционально суммам доходов
				
				НалогаКРаспределению = Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки));
				Если НалогаКРаспределению - ?(Сч=1,0,глВСуммуИзСтроки_НДФЛ(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки))) = 0 Тогда
					Если (Сч &gt; 1) и (НалогаКРаспределению &gt; 0) Тогда
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки));
					КонецЕсли;
				Иначе
					СписокНалогов = СоздатьОбъект("СписокЗначений");
					НакопленоНалога = 0;
					Если ЗаМесяцПо35 &lt;&gt; 0 Тогда
						Коэф = НалогаКРаспределению / ЗаМесяцПо35;   
						Для СчДоходов = 1 По 4 Цикл
							КодДохода5Раздела = Сред("2610,1210,3020,2740",СчДоходов*5-4,4);
							СуммаДохода = ДоходыПо35ЗаГод.Получить(КодДохода5Раздела);
							Если СуммаДохода &lt;&gt; 0 Тогда
								Распределено = ?(НомерДохода = СчДоходов,НалогаКРаспределению-НакопленоНалога,Мин(НалогаКРаспределению-НакопленоНалога,Окр(СуммаДохода*Коэф)));
								СписокНалогов.Установить(КодДохода5Раздела,Распределено);
								НакопленоНалога = НакопленоНалога+Распределено;
							Иначе
								СписокНалогов.Установить(КодДохода5Раздела,0);
							КонецЕсли;
						КонецЦикла;
						СтрокаНалога = ""+Число(СписокНалогов.Получить("2610"))+";"
						+Число(СписокНалогов.Получить("1210"))+";"
						+Число(СписокНалогов.Получить("3020"))+";"
						+Число(СписокНалогов.Получить("2740"))+";";
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,СтрокаНалога);
					ИначеЕсли (Сч &gt; 1) и (НалогаКРаспределению &gt; 0) Тогда
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки));
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; // обхода месяцев
	
	Если  ДанныеИзСправочникаИтогов = 1 Тогда
		
		Пока ЗапросКсправочникуИтогов.Группировка("ГодоМесяц")=1 Цикл
			МесяцДохода = Число(ЗапросКсправочникуИтогов.ГодоМесяц) % 100;
			
			// налоги исчисленные
			Налог13и=ЗапросКсправочникуИтогов.НДФЛ13исчисленный;
			НалогДивИ=ЗапросКсправочникуИтогов.НДФЛдивидендыИсчисленный;
			Налог35и_1=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_1;
			Налог35и_2=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_2;
			Налог35и_3=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_3;
			Налог35и_4=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_4;
			
			// налоги удержанные                                                                                                                                                                         
			Налог13у=ЗапросКсправочникуИтогов.НДФЛ13удержанный;
			Налог35у_1=ЗапросКсправочникуИтогов.НДФЛ35удержанный_1;
			Налог35у_2=ЗапросКсправочникуИтогов.НДФЛ35удержанный_2;
			Налог35у_3=ЗапросКсправочникуИтогов.НДФЛ35удержанный_3;
			Налог35у_4=ЗапросКсправочникуИтогов.НДФЛ35удержанный_4;
			НалогДивУ=ЗапросКсправочникуИтогов.НДФЛдивидендыУдержанный;
			
			// налоги переданные к взысканию
			Налог13КВзысканию=ЗапросКсправочникуИтогов.НДФЛ13КВзысканию;
			Налог35КВзысканию_1=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_1;
			Налог35КВзысканию_2=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_2;
			Налог35КВзысканию_3=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_3;
			Налог35КВзысканию_4=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_4;
			Налог35КВзысканию = Налог35КВзысканию_1+Налог35КВзысканию_2+Налог35КВзысканию_3+Налог35КВзысканию_4;
			НалогДивКВзысканию=ЗапросКсправочникуИтогов.НДФЛдивидендыКВзысканию;
			
			// возвращены налоговым агентом излишне удержанные суммы налога
			Налог13Возвращено=ЗапросКсправочникуИтогов.НДФЛ13Возвращено;
			Налог35Возвращено_1=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_1;
			Налог35Возвращено_2=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_2;
			Налог35Возвращено_3=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_3;
			Налог35Возвращено_4=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_4;
			Налог35Возвращено = Налог35Возвращено_1+Налог35Возвращено_2+Налог35Возвращено_3+Налог35Возвращено_4;
			НалогДивВозвращено=ЗапросКсправочникуИтогов.НДФЛдивидендыВозвращено;
			
			
			Для Сч = МесяцДохода По 12 Цикл 
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИ);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИ);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
				
				//разложим и сложим строку в шестой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				//разложим и сложим строку в девятой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				//разложим и сложим строку в 23 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,10,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,10)+Налог13у);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,11,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,11)+НалогДивУ);
				
				//разложим и сложим строку в 12 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,12,Налог35у_1,Налог35у_2,Налог35у_3,Налог35у_4,СтрокаМесяца);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,16,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,16)+Налог13КВзысканию);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,17,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,17)+НалогДивКВзысканию);
				
				//разложим и сложим строку в 18 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,18,Налог35КВзысканию_1,Налог35КВзысканию_2,Налог35КВзысканию_3,Налог35КВзысканию_4,СтрокаМесяца);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,42,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,42)+Налог13Возвращено);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,43,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,43)+НалогДивВозвращено);
				
				//разложим и сложим строку в 44 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,44,Налог35Возвращено_1,Налог35Возвращено_2,Налог35Возвращено_3,Налог35Возвращено_4,СтрокаМесяца);
				
			КонецЦикла; 
		КонецЦикла; // обхода по периодам действия/регистрации
	КонецЕсли;  // обработка данных из справочников
	
	// посчитаем налоги
	МесяцДоРасчетов = ПервыйМесяцРасчетов - 1;
	
	Если (МесяцСменыСтатусаРезидента=0) И (МесяцСменыСтатусаНеРезидента =0) Тогда
		//статус резидента не изменялся, для всего периода применяем одну ставку НДФД
		
		СтатусНеРезидента = глПолучитьСтатусНеРезидента(Сотрудник,ОкончаниеГода);
		
		Ставка1 = глСтавкаНалогаПоСтатусуНеРезидента(СтатусНеРезидента,ОкончаниеГода,1)/100;
		Ставка2 = глСтавкаНалогаПоСтатусуНеРезидента(СтатусНеРезидента,ОкончаниеГода,2)/100;
		Ставка3 = глСтавкаНалогаПоСтатусуНеРезидента(СтатусНеРезидента,ОкончаниеГода,3)/100;
		
		НалогДивИ = 0;
		Налог35и_1 = 0;
		Налог35и_2 = 0;
		Налог35и_3 = 0;
		Налог35и_4 = 0;
		Налог13и = 0;
		НалогДивИСпр = 0;
		Налог35иСпр_1 = 0;
		Налог35иСпр_2 = 0;
		Налог35иСпр_3 = 0;
		Налог35иСпр_4 = 0;
		Налог13иСпр = 0;
		
		//если до начала расчетов в журнале зарплаты есть доходы (введенные в налоговую карточку) тогда их надо учесть:
		Если МесяцДоРасчетов &gt; 0 Тогда
			Для Сч = 1 По МесяцДоРасчетов Цикл
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
				//по справочникам:
				БазаПоДивидендамСпр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,40)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,40));
				
				Если Резидент = 1 Тогда
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
					Налог13и = Окр(БазаПо13 * Ставка1);
				Иначе
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
					Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
				КонецЕсли;
				
				НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
				
				//разложим :
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";");
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				//по справочникам:
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,41), ";") ;
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,41), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35Спр_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35Спр_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35Спр_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35Спр_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				
				Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
				Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
				Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
				Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
				
				//по справочникам:
				Если Резидент = 1 Тогда
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39);
					Налог13иСпр = Окр(БазаПо13Спр * Ставка1);
				Иначе
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,39));
					Налог13иСпр = Налог13иСпр + Окр(БазаПо13Спр * Ставка1);
				КонецЕсли;
				
				НалогДивИСпр = НалогДивИСпр + Окр(БазаПоДивидендамСпр * Ставка2);
				
				Налог35иСпр_1 = Налог35иСпр_1 + Окр(БазаПо35Спр_1 * Ставка3);
				Налог35иСпр_2 = Налог35иСпр_2 + Окр(БазаПо35Спр_2 * Ставка3);
				Налог35иСпр_3 = Налог35иСпр_3 + Окр(БазаПо35Спр_3 * Ставка3);
				Налог35иСпр_4 = Налог35иСпр_4 + Окр(БазаПо35Спр_4 * Ставка3);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
				
				//разложим и сложим строку в шестой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в девятой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в 23 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
			КонецЦикла;
		КонецЕсли;
		
		Налог13иЗаМесяцДоРасчетов = Налог13иСпр;
		НалогДивИЗаМесяцДоРасчетов = НалогДивИСпр;
		Налог35иЗаМесяцДоРасчетов_1 = Налог35иСпр_1;
		Налог35иЗаМесяцДоРасчетов_2 = Налог35иСпр_2;
		Налог35иЗаМесяцДоРасчетов_3 = Налог35иСпр_3;
		Налог35иЗаМесяцДоРасчетов_4 = Налог35иСпр_4;
		
		Для Сч = МесяцДоРасчетов+1 По 12 Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИЗаМесяцДоРасчетов);
			
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
			
			Если Резидент = 1 Тогда
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
				Налог13и = Окр(БазаПо13 * Ставка1);
			Иначе
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
			КонецЕсли;
			
			Если Год &lt;= 2001 Тогда
				НалогДивИ = НалогДивИ + Макс(Окр(БазаПоДивидендам * Ставка2) - ЗачтеноПоДивидендам[Сч],0);
			Иначе
				НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
			КонецЕсли;
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
			
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
			
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
			
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
		КонецЦикла;  
		
	ИначеЕсли МесяцСменыСтатусаРезидента &lt;&gt; 0 Тогда
		//	была смена статуса на резидента, все зарплатные доходы с начала года по ставке 13%, остальные доходы по ставке не резидента
		// МесяцСменыСтатусаРезидента от 2 до 12 
		
		//
		Ставка30 = Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка9  = Константа.СтавкаНДФЛсДивидендов.Получить(ОкончаниеГода)/100;
		Ставка15 = Константа.СтавкаНДФЛсДивидендовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка35 = Константа.СтавкаНДФЛсПрочихДоходовРезидентов.Получить(ОкончаниеГода)/100;  
		
		Ставка1 = ?(Резидент = 1,Константа.СтавкаНДФЛсЗарплатыРезидентов.Получить(ОкончаниеГода),Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода))/100;
		
		
		НалогДивИ = 0;
		Налог35и_1 = 0;
		Налог35и_2 = 0;
		Налог35и_3 = 0;
		Налог35и_4 = 0;
		Налог13и = 0;
		НалогДивИСпр = 0;
		Налог35иСпр_1 = 0;
		Налог35иСпр_2 = 0;
		Налог35иСпр_3 = 0;
		Налог35иСпр_4 = 0;
		Налог13иСпр = 0;
		
		//если до начала расчетов в журнале зарплаты есть доходы (введенные в налоговую карточку) тогда их надо учесть:
		Если МесяцДоРасчетов &gt; 0 Тогда
			Для Сч = 1 По МесяцДоРасчетов Цикл
				
				Ставка2 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка9,Ставка15);
				Ставка3 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка35,Ставка30);
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
				//по справочникам:
				БазаПоДивидендамСпр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,40)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,40)); 
				
				НалогДивИ    = НалогДивИ    + Окр(БазаПоДивидендам * Ставка2); 
				НалогДивИСпр = НалогДивИСпр + Окр(БазаПоДивидендамСпр * Ставка2);
				
				Если Резидент = 1 Тогда
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
					Налог13и = Окр(БазаПо13 * Ставка1);
				Иначе
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
					Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
				КонецЕсли;
				
				//по справочникам:
				Если Резидент = 1 Тогда
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39);
					Налог13иСпр = Окр(БазаПо13Спр * Ставка1);
				Иначе
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,39));
					Налог13иСпр = Налог13иСпр + Окр(БазаПо13Спр * Ставка1);
				КонецЕсли;
				
				
				//разложим :
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";");
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				//по справочникам:
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,41), ";") ;
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,41), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35Спр_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35Спр_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35Спр_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35Спр_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				
				Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
				Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
				Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
				Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
				
				Налог35иСпр_1 = Налог35иСпр_1 + Окр(БазаПо35Спр_1 * Ставка3);
				Налог35иСпр_2 = Налог35иСпр_2 + Окр(БазаПо35Спр_2 * Ставка3);
				Налог35иСпр_3 = Налог35иСпр_3 + Окр(БазаПо35Спр_3 * Ставка3);
				Налог35иСпр_4 = Налог35иСпр_4 + Окр(БазаПо35Спр_4 * Ставка3);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
				//разложим и сложим строку в шестой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в девятой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в 23 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
			КонецЦикла;
		КонецЕсли;
		
		Налог13иЗаМесяцДоРасчетов   = Налог13иСпр;
		НалогДивИЗаМесяцДоРасчетов  = НалогДивИСпр;
		Налог35иЗаМесяцДоРасчетов_1 = Налог35иСпр_1;
		Налог35иЗаМесяцДоРасчетов_2 = Налог35иСпр_2;
		Налог35иЗаМесяцДоРасчетов_3 = Налог35иСпр_3;
		Налог35иЗаМесяцДоРасчетов_4 = Налог35иСпр_4;
		
		Для Сч = МесяцДоРасчетов+1 По 12 Цикл
			
			Ставка2 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка9,Ставка15);
			Ставка3 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка35,Ставка30);
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИЗаМесяцДоРасчетов);
			
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14)); 
			НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
			
			Если Резидент = 1 Тогда
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
				Налог13и = Окр(БазаПо13 * Ставка1);
			Иначе
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
			КонецЕсли;
			
			
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
			
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
			
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
			
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
		КонецЦикла;
		
		
	Иначе // МесяцСменыСтатусаНеРезидента &lt;&gt; 0
		
		// менялся статус с не резидента на прочий статус
		// все зарплатные доходы с месяца изменения статуса по ставке 13%
		// прочие доходы по ставке не резидента
		// МесяцСменыСтатусаНеРезидента от 2 до 12 
		
		Ставка30 = Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка15 = Константа.СтавкаНДФЛсДивидендовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка13 = Константа.СтавкаНДФЛсЗарплатыРезидентов.Получить(ОкончаниеГода)/100;
		
		НалогДивИ = 0;
		Налог35и_1 = 0;
		Налог35и_2 = 0;
		Налог35и_3 = 0;
		Налог35и_4 = 0;
		Налог13и = 0;
		НалогДивИСпр = 0;
		Налог35иСпр_1 = 0;
		Налог35иСпр_2 = 0;
		Налог35иСпр_3 = 0;
		Налог35иСпр_4 = 0;
		Налог13иСпр = 0;   
		
		// обработаем прочие доходы и дивиденнды
		Для Сч = 1 По МесяцДоРасчетов Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
			//по справочникам:
			БазаПоДивидендамСпр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,40)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,40));
			
			НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка15);
			
			//разложим :
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";");
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			//по справочникам:
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,41), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,41), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35Спр_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35Спр_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35Спр_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35Спр_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка30);
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка30);
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка30);
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка30);
			
			НалогДивИСпр = НалогДивИСпр + Окр(БазаПоДивидендамСпр * Ставка15);
			
			Налог35иСпр_1 = Налог35иСпр_1 + Окр(БазаПо35Спр_1 * Ставка30);
			Налог35иСпр_2 = Налог35иСпр_2 + Окр(БазаПо35Спр_2 * Ставка30);
			Налог35иСпр_3 = Налог35иСпр_3 + Окр(БазаПо35Спр_3 * Ставка30);
			Налог35иСпр_4 = Налог35иСпр_4 + Окр(БазаПо35Спр_4 * Ставка30);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
			
		КонецЦикла;
		
		
		НалогДивИЗаМесяцДоРасчетов = НалогДивИСпр;
		Налог35иЗаМесяцДоРасчетов_1 = Налог35иСпр_1;
		Налог35иЗаМесяцДоРасчетов_2 = Налог35иСпр_2;
		Налог35иЗаМесяцДоРасчетов_3 = Налог35иСпр_3;
		Налог35иЗаМесяцДоРасчетов_4 = Налог35иСпр_4;
		
		Для Сч = МесяцДоРасчетов+1 По 12 Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИЗаМесяцДоРасчетов);
			
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
			
			НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка15);
			
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка30);
			
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка30);
			
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка30);
			
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка30);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
		КонецЦикла;
		
		// обработаем зарплатные доходы		
		
		МесяцДоРасчетовУточненный = МесяцДоРасчетов;
		Если МесяцДоРасчетов &gt; 0 Тогда
			
			Если МесяцСменыСтатусаНеРезидента &lt;= МесяцДоРасчетов Тогда
				МесяцДоРасчетовУточненный = МесяцСменыСтатусаНеРезидента - 1;
			КонецЕсли;
			
			
			Для Сч = 1 По МесяцДоРасчетовУточненный Цикл
				// сотрудник не резиден, т.к. была смена статуса 
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка30);
				
				БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,39));
				Налог13иСпр = Налог13иСпр + Окр(БазаПо13Спр * Ставка30);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				
				
				
			КонецЦикла; 
			
			Налог13иДоСменыСтатуса = Налог13и;
			Налог13иСпрДоСменыСтатуса = Налог13иСпр;
			
			Если МесяцДоРасчетовУточненный &lt;&gt; МесяцДоРасчетов Тогда 
				
				//	расчет по ставке 13%
				Для Сч = МесяцСменыСтатусаНеРезидента По МесяцДоРасчетов Цикл
					
					СтрокаМесяца=НомерСтрокиСотрудника+Сч; 
					
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцДоРасчетовУточненный,13);
					Налог13и = Налог13иДоСменыСтатуса + Окр(БазаПо13 * Ставка13);
					
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцДоРасчетовУточненный,39);
					Налог13иСпр = Налог13иСпрДоСменыСтатуса + Окр(БазаПо13Спр * Ставка13);
					
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
					
					
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Налог13иЗаМесяцДоРасчетов = Налог13иСпр;
		
		ПоследнийМесяц = 12;
		СтатусРезидента = 1;
		СтатусМенялся = 0;
		Если МесяцДоРасчетовУточненный = МесяцДоРасчетов Тогда
			// статус поменялся в периоде за который есть расчеты в жр
			ПоследнийМесяц = МесяцСменыСтатусаНеРезидента - 1;
			СтатусРезидента = 0; //в этом периоде считаем налог по ставке 30%
			СтатусМенялся = 1;
		КонецЕсли;
		
		Для Сч = МесяцДоРасчетов+1 По ПоследнийМесяц Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
			
			Если СтатусРезидента = 1 Тогда
				
				БазаПо30 = ?(СтатусМенялся=0,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцСменыСтатусаНеРезидента-1 ,13)); 
				
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)- БазаПо30;
				Налог13и = Окр(БазаПо13 * Ставка13);
			Иначе
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка30);
			КонецЕсли;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
			
		КонецЦикла;
		
		Налог13иДоСменыСтатуса = Налог13и;
		
		Если СтатусМенялся = 1 Тогда
			
			Для Сч = ПоследнийМесяц+1 По 12 Цикл
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
				
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13) - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцСменыСтатусаНеРезидента-1 ,13);
				Налог13и = Налог13иДоСменыСтатуса + Окр(БазаПо13 * Ставка13);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				
			КонецЦикла;
			
			
		КонецЕсли;	
		
	КонецЕсли;
	
	Налог13уВсего = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+12,10);
	
	Для Сч = 1 По 12 Цикл
		
		СтрокаМесяца=НомерСтрокиСотрудника+Сч;
		
		Налог13и = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21);
		Налог13у = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,10);
		Если Сч&gt;1 Тогда
			Налог13и = Макс(0,Налог13и - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,21));
			Налог13у = Макс(0,Налог13у - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,10));
		КонецЕсли;
		
		
		Налог13у = Мин(Налог13и,Налог13уВсего);
		Налог13уВсего = Налог13уВсего - Налог13у; 
		
		Если Сч&gt;1 Тогда
			Налог13у = Налог13у + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,"НУ1");
			
		КонецЕсли;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,"НУ1",Налог13у);
		
	КонецЦикла;
	
	ВремТаблицаНДФЛСведенияОДоходах.Сортировать("Физлицо, Период");
	
	ВремТаблицаНДФЛСведенияОДоходах.Свернуть("Период,ПериодРегистрации,ПодразделениеОрганизации,Физлицо,КодДохода,КодВычета,СФ_Наименование,СФ_КВД,СФ_ПодпадаетПодЕНВД,СФ_Баланс,СФ_КБК,КОСГУ,ИсчисленоИзЗарплаты,КПП,КодПоОКАТО,КодПоОКТМО,КоличествоДетей,ДатаПолученияДохода","СуммаДохода,СуммаВычета");
	Если ТаблицаВычетовКДоходам.КоличествоСтрок() &gt; 0 Тогда
		ПереписатьВычетыВТаблицу(ВремТаблицаНДФЛСведенияОДоходах, ТаблицаВычетовКДоходам);	
	КонецЕсли;
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаНДФЛСведенияОДоходах,ТаблицаНДФЛСведенияОДоходах);
	
	ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Свернуть("ФизЛицо,Период,КодВычетаИмущественный,Год,КодПоОКАТО,КодПоОКТМО,КПП,ПодразделениеОрганизации", "Размер");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаНДФЛИмущественныеВычетыФизлиц,ТаблицаНДФЛИмущественныеВычетыФизлиц);
	
КонецЦикла; // обхода сотров и физлиц

ВремТаблицаНДФЛСведенияОДоходах = 0;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц = 0;

Возврат ДоходыВычетыНалогиСотрудников;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляНДФЛ2016" ИспользуетсяПриЗагрузке="false">
			<Текст>Перем ЗачтеноПоДивидендам[12];

ОбобщенныйСотрудник									= ИсходящиеДанные;
ДатаАктуальности									= ВходящиеДанные;
ТаблицаНДФЛСведенияОДоходах							= Источник;
ТаблицаНДФЛИмущественныеВычетыФизлиц				= Приемник;

ПорядокРасчетаНДФЛ=Константа.УчетнаяПолитикаПоНДФЛ.Получить(КонГода(ДатаАктуальности));

Год = ДатаГод(ДатаАктуальности);
ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");
КонецПериодаОсмотра = ЖрнЗарплата.КонецТекущегоПериода();
НачалоГода = ЖрнЗарплата.НачалоПериодаПоДате(НачГода(ДатаАктуальности)+15);
ОкончаниеГода = ЖрнЗарплата.КонецПериодаПоДате(КонГода(ДатаАктуальности)-10);

ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);

// скопируем структуру таблицы
ВремТаблицаНДФЛСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаНДФЛСведенияОДоходах.Загрузить(ТаблицаНДФЛСведенияОДоходах); 

// скопируем структуру таблицы
ВремТаблицаНДФЛИмущественныеВычетыФизлиц = СоздатьОбъект("ТаблицаЗначений");
ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Загрузить(ТаблицаНДФЛИмущественныеВычетыФизлиц);

ФизЛица = СоздатьОбъект("СписокЗначений");
Если ТипЗначения(ОбобщенныйСотрудник) = 11  Тогда //здесь был передан элемент справочника - добавим его в только что созданный список
	ФизЛица.ДобавитьЗначение(ОбобщенныйСотрудник);
Иначе //а здесь был передан список элементов - будем использовать непосредственно его
	ФизЛица = ОбобщенныйСотрудник;
КонецЕсли;

ПорядокПредоставленияВычетов="";
СтрокаСписокВычетовНаДетей = "";
глПолучитьПорядокВычетов(ПорядокПредоставленияВычетов,СтрокаСписокВычетовНаДетей);

//  проинициализируем выходную таблицу значений
ДоходыВычетыНалогиСотрудников=СоздатьОбъект("ТаблицаЗначений");
//  1-ая колонка (строка, 12) - ключевое поле для поиска данных; 
//	состоит из 10 символов табельного номера сотрудника и 2-х символов месяца. 
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",12);
//	2-ая колонка содержит таблицу доходов  
//	имеет 7 колонок: код дохода, размер дохода, код вычета, размер вычета,размер дохода из справочника, размер вычета из справочника и
//	в седьмой колонке - таблица сумм "СписокСуммПоВР", из которых собрана сумма текущего дохода (первая колонка - сумма, вторая колонка - ВР)
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"ТаблицаЗначений");
//  3-ая колонка содержит список значений из пяти значений: 
//	первое значение		- список сумм стандартных вычетов, за месяц, указанный в первой колонке "верхней" таблицы, нарастающим итогом с начала года; в представлении содержится код вычета.
//	второе значение		- суммы облагаемой базы нарастающим итогом с начала года без учета имущественных вычетов ("бывшая" колонка 13)
//	третье значение		- размер примененных имущественных вычетов с кодом 311 нарастающим итогом с начала года, за месяц, указанный в первой колонке "верхней" таблицы;
//	четвертое значение	- размер примененных имущественных вычетов с кодом 312 нарастающим итогом с начала года, за месяц, указанный в первой колонке "верхней" таблицы; 
//	пятое значение	    - описание вычета 311;
//  шестое значение     - описание вычета 312;
//  седьмое значение    - список сумм стандартных вычетов право, , за месяц, указанный в первой колонке "верхней" таблицы, нарастающим итогом с начала года; в представлении содержится код вычета.
//	восьмое значение	- зарезирвировано описание вычета 318, для совместимости;
//	девятое значение	- зарезирвировано для вычета 318, для совместимости;
//  десятое значение    - список сумм социальных вычетов на основании налогового уведомления, в представлении содержится код вычета
//  одинадцатое значение    - описания социальных вычетов,  в представлении содержится код вычета
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"СписокЗначений");
//  4,5  колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду действия.
//  7,8  колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду регистрации.
//  10,11 колонки содержат суммы НДФЛ удержанного (по трем ставкам),
//	нарастающим итогом с начала года, собранного по периоду регистрации.
//  13,14 колонки содержат суммы облагаемой базы (обычная и дивиденты),
//	нарастающим итогом с начала года.
//  16,17 колонки содержат суммы переданные на взыскание в ИМНС 
//	нарастающим итогом с начала года. 
//  6-ая, 9-ая, 12-ая, 15-ая, 18-ая - это строки из 4-х чисел
Для Сч = 1 По 5 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	//строка из 4-х чисел Формата 15.2, разделенных ";" 4* ((15+1(для "точки")+2)+1(для "точки с запятой")) = 76
	//6-ая кол 	Сч=1: 4 величины НДФЛ исчисл. по ставке 35% по периоду действия
	//9-ая кол 	Сч=2: 4 величины НДФЛ исчисл. по ставке 35% по периоду рег.
	//12-ая кол Сч=3: 4 величины НДФЛ уд. по ставке 35% по периоду действия
	//15-ая кол Сч=4: 4 величины облагаемой базы по ставке 35%
	//18-ая кол Сч=5: 4 величины НДФЛ по ставке 35%, переданных на взыскание в ИМНС
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76);
КонецЦикла;
//  19-ая колонка содержит совокупный доход для исчисления вычетов
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
//  20-ая колонка содержит сумму вычетов, неиспользованных с начала года по текущий месяц (для расчетов от обратного)
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
//  21,22 и 23-я колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года - исчисленного для налоговой отчетности
//  23-я - это строка из 4-х чисел
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76); //23-я колонка - строка из 4-х чисел
//  4+20,5+20 и 6+20-ая колонки содержат суммы НДФЛ исчисленного (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  7+20,8+20 и 9+20-ая колонки содержат суммы НДФЛ исч по периоду регистрации (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  10+20,11+20 и 12+20-ая колонки содержат суммы НДФЛ уд (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).

//  33,34 и 35-ая колонки (аналог 21,22 и 23) содержат суммы НДФЛ исч. для отч-ти (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  16+20,17+20 и 18+20-ая колонки содержат суммы на взыскание (по трем ставкам),
//	нарастающим итогом с начала года, собранного только из справочников(чтобы иметь суммы,введенные непосредственно в карточку).
//  39,40 и 41-ая колонки содержат суммы облагаемой базы (по трем ставкам),
//	нарастающим итогом с начала года по данным, введенным в карточку вручную.
Для Сч = 1 По 6 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	//строка из 4-х чисел Формата 15.2, разделенных ";" 4* ((15+1(для "точки")+2)+1(для "точки с запятой")) = 76
	//6+20-ая кол 	Сч=1: 4 величины НДФЛ исчисл. по ставке 35% по периоду действия 	по справочникам
	//9+20-ая кол 	Сч=2: 4 величины НДФЛ исчисл. по ставке 35% по периоду рег. 		по справочникам
	//12+20-ая кол 	Сч=3: 4 величины НДФЛ уд. по ставке 35% по периоду действия 		по справочникам
	//35-ая кол 	Сч=4: 4 величины НДФЛ исч. по ставке 35% для отчетности     		по справочникам
	//18+20-ая кол  Сч=5: 4 величины НДФЛ по ставке 35%, переданных на взыскание в ИМНС по справочникам
	//41-ая кол  	Сч=6: 4 величины облагаемой базы по ставке 35%		 				по справочникам
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76);
КонецЦикла; 

// 42 (3 раздел) строка "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
// 43(4 раздел) строка "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
// 44(5 раздел) строка, стрка из 4-чисел "Возвращена налоговым агентом излишне удержанная сумма налога"
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",76);

// 45, список значений с периодами регистрации НДФЛ по ставке 13%
ДоходыВычетыНалогиСотрудников.НоваяКолонка("НР","СписокЗначений");

ДоходыВычетыНалогиСотрудников.НоваяКолонка("Подразделение","Справочник.Подразделения");
СписокПодразделений = СоздатьОбъект("СписокЗначений");
ПустоеПодразделение = ПолучитьПустоеЗначение("Справочник.Подразделения");
Для Сч = 1 По 12 Цикл
	СписокПодразделений.ДобавитьЗначение(ПустоеПодразделение);
КонецЦикла;

// месяц в котором изменился статус на резидента, для расчета налогов по ставке 9 и 35
ДоходыВычетыНалогиСотрудников.НоваяКолонка("МесяцСменыСтатусаРезидента","Число",2,0);

// используется с 2015 года, месяц в котором изменился статус налогового резидента
// с этого месяца налог рассчитывается по ставке 13% без пересчета прошлых месяцев 
ДоходыВычетыНалогиСотрудников.НоваяКолонка("МесяцСменыСтатусаНеРезидента","Число",2,0);

// налог удержанный по ст. 13% по периоду действия, для отчетности до 2015 года
ДоходыВычетыНалогиСотрудников.НоваяКолонка("НУ1","Число",15,2);

// налог зачтено аванса по НДФЛ, нарастающим итогом
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ЗачтеноАвансаПоНДФЛ","Число",15,2);
// аванса по НДФЛ, нарастающим итогом
ДоходыВычетыНалогиСотрудников.НоваяКолонка("АвансПоНДФЛ","Число",15,2);

// аванса по НДФЛ, нарастающим итогом
ДоходыВычетыНалогиСотрудников.НоваяКолонка("УведомлениеНаУменьшениеНДФЛ","СписокЗначений");

// соберем данные о вычетах сотрудников

// Для начала заполним таблицу всех вычетов
ТаблицаВычетов = СоздатьОбъект("ТаблицаЗначений");
ТаблицаВычетов.НоваяКолонка("ВидВычета");
ТаблицаВычетов.НоваяКолонка("КодВычета","Строка",3); // код для отчетности
ТаблицаВычетов.НоваяКолонка("Наименование","Строка",96);
ТаблицаВычетов.НоваяКолонка("Сумма","Число",15);
ТаблицаВычетов.НоваяКолонка("ПределДоходов","Число",15);

ВидыВычетов = СоздатьОбъект("Справочник.ВидыВычетов");
ВидыВычетов.ИспользоватьДату(ОкончаниеГода,1);
ВидыВычетов.ВыбратьЭлементы();
Пока ВидыВычетов.ПолучитьЭлемент() = 1 Цикл
	
	КодВычета = ВидыВычетов.КодДляОтчетности2015;
	Если КодВычета = "-" Тогда
		Продолжить;
	КонецЕсли;  
	
	ТаблицаВычетов.НоваяСтрока();
	ТаблицаВычетов.ВидВычета = ВидыВычетов.ТекущийЭлемент();
	ТаблицаВычетов.КодВычета = КодВычета;
	ТаблицаВычетов.Наименование	= ВидыВычетов.Наименование2015;
	ТаблицаВычетов.Сумма		= ВидыВычетов.Сумма;
	ТаблицаВычетов.ПределДоходов= ВидыВычетов.ПределДоходов;
	
КонецЦикла;

ПустаяДата='  .  .  ';

ТекстЗапроса = "//{{ЗАПРОС(ПоВычетам)
|Объект = Справочник.ВычетыСотрудниковПоНДФЛ.Владелец;
|Элемент = Справочник.ВычетыСотрудниковПоНДФЛ.ТекущийЭлемент;
|ДатаНачала = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаНачала;
|ДатаОкончания = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаОкончания;
|ВидВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета;
|КодВычета = Справочник.ВычетыСотрудниковПоНДФЛ.ВидВычета.КодДляОтчетности2015;
|Размер = Справочник.ВычетыСотрудниковПоНДФЛ.Сумма;
|НомерУведомления = Справочник.ВычетыСотрудниковПоНДФЛ.НомерУведомления;
|ДатаУведомления = Справочник.ВычетыСотрудниковПоНДФЛ.ДатаУведомления;
|КодФНС = Справочник.ВычетыСотрудниковПоНДФЛ.КодФНС;
|Группировка Объект;
|Группировка Элемент;
|Условие(Объект в ФизЛица);
|Условие((ДатаНачала &lt;= ОкончаниеГода) и ((ДатаОкончания &gt;= НачалоГода) или (ДатаОкончания = ПустаяДата)));
|"//}}ЗАПРОС
;

ЗапросПоВычетам=СоздатьОбъект("Запрос");
Если ЗапросПоВычетам.Выполнить(ТекстЗапроса) = 0 Тогда
	глСообщениеТрассировки(глСообщенияТрассировки, "Не удалось обработать данные из справочников", 1, 1);
	Возврат 0;
КонецЕсли;


// чтобы не обращаться лишний раз в информационную базу,
// составим таблицу соответствия видов расчета из облагаемой базы НДФЛ
// и кодов дохода по НДФЛ
глСтатусСтрока(Форма,"Подготовка таблицы соответствия видов расчета и кодов дохода по НДФЛ");

СоответствиеВРкодамДоходовНДФЛ = "";
СписокВРПоПериодуДействия2011 = "";
СписокВРПоПериодуРегистрации2011 = "";
СписокВРПоПериодуДействия2012 = "";
СписокВРПоПериодуРегистрации2012 = "";
глПолучитьСписокиВРДляРасчетаНДФЛ(СоответствиеВРкодамДоходовНДФЛ,СписокВРПоПериодуДействия2011,СписокВРПоПериодуРегистрации2011,СписокВРПоПериодуДействия2012,СписокВРПоПериодуРегистрации2012);

глСтатусСтрока(Форма,"Подготовка данных из журнала расчетов");

ПопытокВыполненияЗапроса = 10;


Январь=Строка(Год*100+1);
Декабрь=Строка(Год*100+12); 

ТекстЗапроса = "//{{ЗАПРОС(ПоСоциальнымВычетам)
|ГодоМесяц = Справочник.НКСоциальныеВычеты.ГодМесяц;
|Объект = Справочник.НКСоциальныеВычеты.Владелец; 
|СтатусНеРезидента = Справочник.НКСоциальныеВычеты.Владелец.СтатусНеРезидента;
|Вычет = Справочник.НКСоциальныеВычеты.Вычет;
|ВидВычета = Справочник.НКСоциальныеВычеты.ВидВычета;
|КодВычета = Справочник.НКСоциальныеВычеты.ВидВычета.КодДляОтчетности2015;
|ТекущийЭлемент = Справочник.НКСоциальныеВычеты.ТекущийЭлемент;
|Группировка Объект без групп;
|Группировка ГодоМесяц;
|Группировка ТекущийЭлемент без упорядочивания;
|Условие(Объект в ФизЛица);
|Условие(Вычет &lt;&gt; 0);
|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
|"//}}ЗАПРОС
;

глСтатусСтрока(Форма,"Подготовка данных из справочников");
ЗапросКсправочникуСоциальныеВычеты=СоздатьОбъект("Запрос");
Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
	Если ЗапросКсправочникуСоциальныеВычеты.Выполнить(ТекстЗапроса) = 1 Тогда
		Прервать
	КонецЕсли;
КонецЦикла;               
Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
	глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о социальных вычетах из справочников!", , , );
	Возврат 0;
КонецЕсли;


ПопытокВыполненияЗапроса = 10;
Справочник = СоздатьОбъект("Справочник.НКДоходы");
Если Справочник.ВыбратьЭлементы(0) = 1 Тогда
	ТекстЗапроса = "//{{ЗАПРОС(КсправочникуДоходов)
	|ГодоМесяц = Справочник.НКДоходы.ГодМесяц;
	|Объект = Справочник.НКДоходы.Владелец;
	|Код = Справочник.НКДоходы.Владелец.Код;
	|СтатусНеРезидента = Справочник.НКДоходы.Владелец.СтатусНеРезидента;
	|Имя = Справочник.НКДоходы.Владелец.Наименование;
	|ВидДохода = Справочник.НКДоходы.ВидДохода.Код;
	|НомерРазделаНК = Справочник.НКДоходы.НомерРазделаНК;
	|Доход = Справочник.НКДоходы.Доход; 
	|ВидВычета = Справочник.НКДоходы.ВидВычета;
	|КодВычета = Справочник.НКДоходы.ВидВычета.КодДляОтчетности2015;
	|Вычет = Справочник.НКДоходы.Вычет;
	|ТекущийЭлемент = Справочник.НКДоходы.ТекущийЭлемент;
	|Группировка Объект без групп;
	|Группировка ГодоМесяц;
	|Группировка ТекущийЭлемент без упорядочивания;
	|Условие(Объект в ФизЛица);
	|Условие((Доход &lt;&gt; 0) или (Вычет &lt;&gt; 0));
	|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
	|"//}}ЗАПРОС
	;
	
	глСтатусСтрока(Форма,"Подготовка данных из справочников");
	ЗапросКсправочникуДоходов=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросКсправочникуДоходов.Выполнить(ТекстЗапроса) = 1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;               
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о доходах из справочников!", , , );
		Возврат 0;
	КонецЕсли; 
КонецЕсли; 

Справочник = СоздатьОбъект("Справочник.НКИтоги");
Если Справочник.ВыбратьЭлементы(0) = 1 Тогда
	
	ТекстЗапроса = "//{{ЗАПРОС(КсправочникуИтогов)
	|ГодоМесяц = Справочник.НКИтоги.Код;
	|Объект = Справочник.НКИтоги.Владелец;
	|Код = Справочник.НКИтоги.Владелец.Код;
	|СтатусНеРезидента = Справочник.НКИтоги.Владелец.СтатусНеРезидента;
	|Имя = Справочник.НКИтоги.Владелец.Наименование;
	|НДФЛ13исчисленный = Справочник.НКИтоги.Р3Исчислено;
	|НДФЛ13удержанный = Справочник.НКИтоги.Р3Удержано;
	|НДФЛ13КВзысканию = Справочник.НКИтоги.Р3КВзысканию;			
	|НДФЛ13Возвращено = Справочник.НКИтоги.Р3Возвращено;			
	|НДФЛ35исчисленный_1 = Справочник.НКИтоги.Р5Исчислено;
	|НДФЛ35исчисленный_2 = Справочник.НКИтоги.Р5Исчислено2;
	|НДФЛ35исчисленный_3 = Справочник.НКИтоги.Р5Исчислено3;
	|НДФЛ35исчисленный_4 = Справочник.НКИтоги.Р5Исчислено4;
	|НДФЛ35удержанный_1 = Справочник.НКИтоги.Р5Удержано;
	|НДФЛ35удержанный_2 = Справочник.НКИтоги.Р5Удержано2;
	|НДФЛ35удержанный_3 = Справочник.НКИтоги.Р5Удержано3;
	|НДФЛ35удержанный_4 = Справочник.НКИтоги.Р5Удержано4;
	|НДФЛ35КВзысканию_1 = Справочник.НКИтоги.Р5КВзысканию;
	|НДФЛ35КВзысканию_2 = Справочник.НКИтоги.Р5КВзысканию2;
	|НДФЛ35КВзысканию_3 = Справочник.НКИтоги.Р5КВзысканию3;
	|НДФЛ35КВзысканию_4 = Справочник.НКИтоги.Р5КВзысканию4; 			
	|НДФЛ35Возвращено_1 = Справочник.НКИтоги.Р5Возвращено;
	|НДФЛ35Возвращено_2 = Справочник.НКИтоги.Р5Возвращено2;
	|НДФЛ35Возвращено_3 = Справочник.НКИтоги.Р5Возвращено3;
	|НДФЛ35Возвращено_4 = Справочник.НКИтоги.Р5Возвращено4;			
	|НДФЛдивидендыИсчисленный = Справочник.НКИтоги.Р4Исчислено;
	|НДФЛдивидендыУдержанный = Справочник.НКИтоги.Р4Удержано;
	|НДФЛдивидендыКВзысканию = Справочник.НКИтоги.Р4КВзысканию;   			
	|НДФЛдивидендыВозвращено = Справочник.НКИтоги.Р4Возвращено;   			
	|Группировка Объект;
	|Группировка ГодоМесяц;
	|Условие(Объект в ФизЛица);
	|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));
	|"//}}ЗАПРОС
	;
	
	глСтатусСтрока(Форма,"Подготовка данных из справочников");
	ЗапросКсправочникуИтогов=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросКсправочникуИтогов.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о налогах из справочников!", , , );
		Возврат 0;
	КонецЕсли;
КонецЕсли;


Справочник = СоздатьОбъект("Справочник.НКИтогиПоГоду");
Если Справочник.НайтиПоКоду(Строка(Год),0) = 1 Тогда
	
	ТекущийГод=Строка(Год);
	
	ТекстЗапроса = "//{{ЗАПРОС(СправкиСПредыдМР)
	|Объект = Справочник.НКИтогиПоГоду.Владелец;
	|ГодИзСпр = Справочник.НКИтогиПоГоду.Код;
	|СД1 = Справочник.НКИтогиПоГоду.СД1;
	|СД10 = Справочник.НКИтогиПоГоду.СД10;
	|СД11 = Справочник.НКИтогиПоГоду.СД11;
	|СД12 = Справочник.НКИтогиПоГоду.СД12;
	|СД2 = Справочник.НКИтогиПоГоду.СД2;
	|СД3 = Справочник.НКИтогиПоГоду.СД3;
	|СД4 = Справочник.НКИтогиПоГоду.СД4;
	|СД5 = Справочник.НКИтогиПоГоду.СД5;
	|СД6 = Справочник.НКИтогиПоГоду.СД6;
	|СД7 = Справочник.НКИтогиПоГоду.СД7;
	|СД8 = Справочник.НКИтогиПоГоду.СД8;
	|СД9 = Справочник.НКИтогиПоГоду.СД9;
	|Группировка Объект;
	|Условие(Объект в ФизЛица);
	|Условие(ГодИзСпр = ТекущийГод);
	|"//}}ЗАПРОС
	;
	
	ЗапросПоСправкамСПредМР=СоздатьОбъект("Запрос");
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если ЗапросПоСправкамСПредМР.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		глДобавитьСообщение(глОбработчикСообщений, "Не удалось обработать данные о доходах с пред. м.р. из справочников!", , , );
		Возврат 0;
	КонецЕсли;
КонецЕсли;

НалоговыйПериод = Год;
ОкончаниеВыборки = ДобавитьМесяц(ОкончаниеГода,12);
ТекстЗапроса = 
"//{{ЗАПРОС(АвансыПоНДФЛ) 
|Период с НачалоГода по ОкончаниеГода;
|НалоговыйПериод = Документ.АвансовыйПлатежИностранцаПоНДФЛ.НалоговыйПериод;
|Сотрудник = Документ.АвансовыйПлатежИностранцаПоНДФЛ.Сотрудник;
|СуммаАванса = Документ.АвансовыйПлатежИностранцаПоНДФЛ.Сумма;
|ДатаОперации = Документ.АвансовыйПлатежИностранцаПоНДФЛ.ДатаОперации;
|Функция Сумма = Сумма(СуммаАванса);
|Группировка Сотрудник без групп;
|Группировка ДатаОперации;
|Условие(НалоговыйПериод = НалоговыйПериод);
|Условие(Сотрудник в ФизЛица);
|"//}}ЗАПРОС
;    

ТабАвансыПоНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ТабАвансыПоНДФЛ.НоваяКолонка("Сумма");
ТабАвансыПоНДФЛ.НоваяКолонка("Сотрудник");
ТабАвансыПоНДФЛ.НоваяКолонка("ДатаОперации");
ЗапросАвансыПоНДФЛ=СоздатьОбъект("Запрос");
Если ЗапросАвансыПоНДФЛ.Выполнить(ТекстЗапроса)=1 Тогда
	ЗапросАвансыПоНДФЛ.Выгрузить(ТабАвансыПоНДФЛ,,0);
КонецЕсли;
ТабАвансыПоНДФЛ.НоваяКолонка("Месяц");
ТабАвансыПоНДФЛ.ВыбратьСтроки();
Пока ТабАвансыПоНДФЛ.ПолучитьСтроку()=1 Цикл
	Если ПустоеЗначение(ТабАвансыПоНДФЛ.ДатаОперации) = 1 Тогда
		// не учитываем
	Иначе
		ТабАвансыПоНДФЛ.Месяц = ДатаМесяц(ТабАвансыПоНДФЛ.ДатаОперации);
	КонецЕсли;
КонецЦикла; 
ТабАвансыПоНДФЛ.Свернуть("Сотрудник,Месяц","Сумма");
ТабАвансыПоНДФЛ.Сортировать("Сотрудник,Месяц"); 


НалоговыйПериод = Год;
ОкончаниеВыборки = ДобавитьМесяц(ОкончаниеГода,12);
ТекстЗапроса = 
"//{{ЗАПРОС(УведомлениеНаУменьшениеНДФЛ) 
|Период с НачалоГода по ОкончаниеГода;
|НалоговыйПериод = Документ.УведомлениеНаУменьшениеНДФЛ.НалоговыйПериод;
|Сотрудник = Документ.УведомлениеНаУменьшениеНДФЛ.Сотрудник;
|НомерУведомления = Документ.УведомлениеНаУменьшениеНДФЛ.НомерУведомления;
|ДатаУведомления = Документ.УведомлениеНаУменьшениеНДФЛ.ДатаУведомления;
|КодФНС = Документ.УведомлениеНаУменьшениеНДФЛ.КодФНС;
|Условие(НалоговыйПериод = НалоговыйПериод);
|Условие(Сотрудник в ФизЛица);
|"//}}ЗАПРОС
;    

ТабУведомленияНаУменьшениеНДФЛ = СоздатьОбъект("ТаблицаЗначений"); 
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("Сотрудник");
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("НомерУведомления");
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("ДатаУведомления"); 
ТабУведомленияНаУменьшениеНДФЛ.НоваяКолонка("КодФНС");
ЗапросУведомленияНаУменьшениеНДФЛ=СоздатьОбъект("Запрос");
Если ЗапросУведомленияНаУменьшениеНДФЛ.Выполнить(ТекстЗапроса)=1 Тогда
	ЗапросУведомленияНаУменьшениеНДФЛ.Выгрузить(ТабУведомленияНаУменьшениеНДФЛ,"Сотрудник,НомерУведомления,ДатаУведомления,КодФНС",0);
КонецЕсли;


// вспомогательная таблица доходов
Доходы = СоздатьОбъект("ТаблицаЗначений");
//  1-ая колонка - код дохода (пятый символ для матвыгоды по заемным средствам, которая может облагаться по разным ставкам)
Доходы.НоваяКолонка(,"Строка",5);
//  со 2-ой по 13-ую колонки - размер дохода по месяцам нарастающим итогом с начала года
Для Сч = 1 По 12 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);	
КонецЦикла;
//  14-ая колонка - код вычета 
Доходы.НоваяКолонка(,"Строка",3);
//  с 15-ой по 26-ую колонки - размер вычета по месяцам нарастающим итогом с начала года
Для Сч = 1 По 12 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);
КонецЦикла;
//  с 27-ой по 38-ую колонки - размер дохода по месяцам нарастающим итогом с начала года введенный в карточку вручную (сумма корректировки)
//  с 39-ой по 50-ую колонки - размер вычета по месяцам нарастающим итогом с начала года введенный в карточку вручную (сумма корректировки)
Для Сч = 1 По 24 Цикл
	Доходы.НоваяКолонка(,"Число",18,5);	
КонецЦикла;

ИскатьВоенных = Константа.ЕстьВоенные;
ТекущиеДоходыПо35 = СоздатьОбъект("СписокЗначений");
ДоходыПо35ЗаГод = СоздатьОбъект("СписокЗначений");
ТекущиеДоходыПо35Спр = СоздатьОбъект("СписокЗначений");
ДоходыПо35ЗаГодСпр = СоздатьОбъект("СписокЗначений");

ВсегоСотров = ФизЛица.РазмерСписка();
ДоходыВычетыНалогиСотрудников.КоличествоСтрок(ВсегоСотров*12);


ЖрнЗарплатаДляСторно=СоздатьОбъект("ЖурналРасчетов.Зарплата");
НачалоПериодаОсмотра	= ЖрнЗарплата.НачалоПериодаПоДате(НачГода(НачГода(ДатаАктуальности)-15));
ОкончаниеПериодаОсмотра	= ЖрнЗарплата.КонецПериодаПоДате(КонГода(КонГода(ДатаАктуальности)+15));

// значение - 0, 1
// представление - год строкой
СписокПорядокУчетаДоходов = глСписокПорядокУчетаДоходов(ДатаГод(НачалоПериодаОсмотра),ДатаГод(ОкончаниеПериодаОсмотра));  

СтрокаКолонок = " 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13";
СтрокаКолонокДоходов = " 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13";
СтрокаКолонокВычетов = " 1,15,16,17,18,19,20,21,22,23,24,25,26";

ТабВычетовСотрудника=СоздатьОбъект("ТаблицаЗначений");
ТабВычетовСотрудника.НоваяКолонка("Порядок");
ТабВычетовСотрудника.НоваяКолонка("ВидВычета");
ТабВычетовСотрудника.НоваяКолонка("КодВычета");
ТабВычетовСотрудника.НоваяКолонка("ОписаниеВычета"); 

ТабСоциальныхВычетовСотрудника=СоздатьОбъект("ТаблицаЗначений");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Месяц"); 
ТабСоциальныхВычетовСотрудника.НоваяКолонка("ВидВычета");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("КодВычета");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Размер");
ТабСоциальныхВычетовСотрудника.НоваяКолонка("Ключ");

// в списке 13 значений, статус резидента на каждый месяц
СписокСтатусРезидента = СоздатьОбъект("СписокЗначений");

// обход списка сотрудников
Для СчСотров = 1 По ВсегоСотров Цикл 
	
	ВремТаблицаНДФЛСведенияОДоходах.УдалитьСтроки();
	ВремТаблицаНДФЛИмущественныеВычетыФизлиц.УдалитьСтроки();
	
	Сотрудник = ФизЛица.ПолучитьЗначение(СчСотров);
	
	КодСотра="";
	ИмяСотра="";
	СтатусНеРезидента="";
	ПростоДоходы=0;
	ОсобыеДоходы=0;
	ДоходыПоРегистрации=0;
	НалогиПоРегистрации=0;
	ДанныеИзСправочникаДоходов=0;
	ДанныеИзСправочникаИтогов=0;
	ВычетыИзСправочников=0;
	СоциальныеВычетыИзСправочников = 0; 
	
	Если ТипЗначения(ЗапросКсправочникуДоходов) &lt;&gt; 0 Тогда
		ЗапросКсправочникуДоходов.вНачалоВыборки();
		Если ЗапросКсправочникуДоходов.Получить(Сотрудник,,)=1 Тогда
			ДанныеИзСправочникаДоходов=1;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗначения(ЗапросКсправочникуИтогов) &lt;&gt; 0 Тогда
		ЗапросКсправочникуИтогов.вНачалоВыборки();
		Если ЗапросКсправочникуИтогов.Получить(Сотрудник,)=1 Тогда 
			ДанныеИзСправочникаИтогов = 1;
		КонецЕсли;
	КонецЕсли;
	
	ЗапросПоВычетам.вНачалоВыборки();
	Если ЗапросПоВычетам.Получить(Сотрудник,) = 1 Тогда
		ВычетыИзСправочников = 1;   // именно у этого сотрудника есть что-то в справочнике вычетов
	КонецЕсли;
	
	Если ТипЗначения(ЗапросКсправочникуСоциальныеВычеты) &lt;&gt; 0 Тогда
		ЗапросКсправочникуСоциальныеВычеты.вНачалоВыборки();
		Если ЗапросКсправочникуСоциальныеВычеты.Получить(Сотрудник,,) = 1 Тогда
			СоциальныеВычетыИзСправочников = 1;   // именно у этого сотрудника есть что-то в справочнике вычетов
		КонецЕсли;
	КонецЕсли;
	
	КодСотра=СОКРЛП(Сотрудник.Код);
	ИмяСотра=СОКРЛП(Сотрудник.Наименование);
	
	глСтатусСтрока(Форма,"Обрабатываются доходы ("+Окр(СчСотров/ВсегоСотров*100)+"%): "+ИмяСотра);
	КодСотраВтаблице=глПолучитьУникальныйКодСотрудника(КодСотра);
	
	// запомним номер строки, предшествующей данным сотрудника - чтобы потом не искать нужную строку
	НомерСтрокиСотрудника = (СчСотров - 1) * 12;
	
	МесяцСменыСтатусаРезидента = 0; //месяц, в котором меняется статус с нерезидента на резидента
	СписокСтатусРезидента.УдалитьВсе();
	
	// выясним, является ли сотрудник налоговым резидентом РФ на конец года
	Резидент = глСотрудникЯвляетсяНалоговымРезидентом(Сотрудник,ОкончаниеГода);
	
	// заготовим "пустые" строки в таблице для данных сотрудника
	Для Сч = 1 По 12 Цикл
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,1,КодСотраВтаблице+глДополнитьСтроку(Сч,2));
		СписокВычетов = СоздатьОбъект("СписокЗначений");
		// заготовим "пустые" значения в списке вычетов для сотрудника
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));
		СписокВычетов.ДобавитьЗначение(0);  // база НДФЛ не учитывая имущественные вычеты
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 311
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 312
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 311
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 312 
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // список ст. вычетов, на которые сотрудник имел право
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));  // описание вычет 318, для совместимости
		СписокВычетов.ДобавитьЗначение(0);  // имущественный вычет 318, для совместимости
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений")); //
		СписокВычетов.ДобавитьЗначение(СоздатьОбъект("СписокЗначений"));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетов);  
		
		РезидентМесяца = глСотрудникЯвляетсяНалоговымРезидентом(Сотрудник, КонМесяца(Дата(Год,Сч,14)));
		СписокСтатусРезидента.ДобавитьЗначение(РезидентМесяца);
		Если РезидентМесяца = 0 Тогда
			МесяцСменыСтатусаРезидента = Сч;
		КонецЕсли;   
		
		СписокПериодовНДФЛ = СоздатьОбъект("СписокЗначений");
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"НР",СписокПериодовНДФЛ);
		
	КонецЦикла; 
	
	Если Резидент=0 Тогда
		//не стал резидентом
		МесяцСменыСтатусаРезидента = 0;
	ИначеЕсли МесяцСменыСтатусаРезидента &gt; 0 Тогда
		//была смена статуса
		МесяцСменыСтатусаРезидента = МесяцСменыСтатусаРезидента +1;  
	КонецЕсли; 
	
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"МесяцСменыСтатусаРезидента",МесяцСменыСтатусаРезидента);
	КонецЦикла;
	
	МесяцСменыСтатусаНеРезидента = 0;
	Если (Резидент = 0) И (Год &gt;= 2015) Тогда
		
		СтатусНеРезидента = глПолучитьСтатусНеРезидента(Сотрудник, КонМесяца(Дата(Год,1,14)));
		
		Если СтатусНеРезидента = 1 Тогда 
			// сотрудник не резидент, проверим была ли смена статуса
			
			Для Сч = 1 По 12 Цикл 
				
				СтатусНеРезидента = глПолучитьСтатусНеРезидента(Сотрудник, КонМесяца(Дата(Год,Сч,14)));
				
				Если СтатусНеРезидента = 1 Тогда
					МесяцСменыСтатусаНеРезидента = Сч;
				КонецЕсли;
				
			КонецЦикла;
			
			Если СтатусНеРезидента = 1 Тогда
				//не стал резидентом
				МесяцСменыСтатусаНеРезидента = 0;
			ИначеЕсли МесяцСменыСтатусаНеРезидента &gt; 0 Тогда
				//была смена статуса
				МесяцСменыСтатусаНеРезидента = МесяцСменыСтатусаНеРезидента +1;  
			КонецЕсли; 
			
			Для Сч = 1 По 12 Цикл
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"МесяцСменыСтатусаНеРезидента",МесяцСменыСтатусаНеРезидента);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// подготовим таблицу доходов к работе с очередным сотрудником
	Доходы.УдалитьСтроки();
	Доходы.НоваяСтрока();
	Доходы.УстановитьЗначение(1,1,"2000 "); 
	
	// подготовим список вычетов, на которые имеет право данный сотрудник
	// стандартные и социальные вычеты, сортировка в порядке предоставления
	// представление - код элемента справочника, а не код для отчетности
	СписокВычетовСотра=СоздатьОбъект("СписокЗначений");
	СписокКодовВычетовСотра =СоздатьОбъект("СписокЗначений");
	
	ТабСоциальныхВычетовСотрудника.УдалитьСтроки();
	Если (СоциальныеВычетыИзСправочников = 1) и (Резидент = 1) Тогда
		Пока ЗапросКсправочникуСоциальныеВычеты.Группировка("ГодоМесяц")=1 Цикл
			МесяцВычета = Число(ЗапросКсправочникуСоциальныеВычеты.ГодоМесяц) % 100;
			Пока ЗапросКсправочникуСоциальныеВычеты.Группировка("ТекущийЭлемент")=1 Цикл
				
				ВидВычета = ЗапросКсправочникуСоциальныеВычеты.ВидВычета;
				КодВычета = ВидВычета.КодДляОтчетности2015;
				РазмерВычета=ЗапросКсправочникуСоциальныеВычеты.Вычет;
				
				ТабСоциальныхВычетовСотрудника.НоваяСтрока();
				ТабСоциальныхВычетовСотрудника.Месяц = МесяцВычета;
				ТабСоциальныхВычетовСотрудника.ВидВычета = ВидВычета;
				ТабСоциальныхВычетовСотрудника.КодВычета = КодВычета;
				ТабСоциальныхВычетовСотрудника.Размер = РазмерВычета; 
				ТабСоциальныхВычетовСотрудника.Ключ = Формат(""+МесяцВычета+"-"+КодВычета,"С10"); 
				
				Если ПустоеЗначение(СписокВычетовСотра.Получить(ВидВычета.Код))=1 Тогда
					
					ОписаниеВычета=СоздатьОбъект("СписокЗначений");
					ОписаниеВычета.ДобавитьЗначение(Дата(0));
					ОписаниеВычета.ДобавитьЗначение(Дата(0));
					ОписаниеВычета.ДобавитьЗначение(0);
					ОписаниеВычета.ДобавитьЗначение("");
					ОписаниеВычета.ДобавитьЗначение(Дата(0));
					ОписаниеВычета.ДобавитьЗначение("");
					ОписаниеВычета.ДобавитьЗначение(ВидВычета);
					
					СписокВычетовСотра.ДобавитьЗначение(ОписаниеВычета,ВидВычета.Код);
					
				КонецЕсли;
				
			КонецЦикла; 
		КонецЦикла;
		
	КонецЕсли;   
	
	ТабВычетовСотрудника.УдалитьСтроки();
	
	//имущественные вычеты и социальные на основании уведомления из НО
	// представление - код элемента справочника, а не код для отчетности
	СписокИмущВычетовСотра=СоздатьОбъект("СписокЗначений");
	СписокСоциальныхВычетовПоУведомлениюСотра=СоздатьОбъект("СписокЗначений");
	
	// проверим зарегистрированные вычеты, при условии, что на конец года статус - Резидент
	Если (ВычетыИзСправочников = 1) и (Резидент = 1) Тогда
		СдвигТрассировки = 0;
		Пока ЗапросПоВычетам.Группировка("Элемент")=1 Цикл
			
			ВидВычета=ЗапросПоВычетам.ВидВычета;
			КодВычета = ВидВычета.КодДляОтчетности2015;
			Если КодВычета = "-" Тогда
				Продолжить;
			КонецЕсли;
			РазмерИмущЗатрат = ЗапросПоВычетам.Размер; // сумма может быть указана в справочнике только у имущ. вычетов
			Д1=ЗапросПоВычетам.ДатаНачала;
			Д2=ЗапросПоВычетам.ДатаОкончания;
			
			Если (ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Имущественные) или (ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО) Тогда
				Если (Д1 &gt; ОкончаниеГода) или (Д1 &lt; НачалоГода) Тогда
					Продолжить;    
				КонецЕсли;
			КонецЕсли;
			
			НомерУведомления=ЗапросПоВычетам.НомерУведомления;
			ДатаУведомления= ЗапросПоВычетам.ДатаУведомления;
			КодФНС=ЗапросПоВычетам.КодФНС;
			ОписаниеВычета=СоздатьОбъект("СписокЗначений");
			ОписаниеВычета.ДобавитьЗначение(Д1);
			ОписаниеВычета.ДобавитьЗначение(Д2);
			ОписаниеВычета.ДобавитьЗначение(РазмерИмущЗатрат);
			ОписаниеВычета.ДобавитьЗначение(НомерУведомления);
			ОписаниеВычета.ДобавитьЗначение(ДатаУведомления);
			ОписаниеВычета.ДобавитьЗначение(КодФНС);
			ОписаниеВычета.ДобавитьЗначение(ВидВычета);
			
			ТабВычетовСотрудника.НоваяСтрока();
			ТабВычетовСотрудника.ВидВычета=ВидВычета;
			ТабВычетовСотрудника.ОписаниеВычета=ОписаниеВычета;
			Порядок=ПорядокПредоставленияВычетов.НайтиЗначение(КодВычета);
			Порядок=?(Порядок=0,100,Порядок);
			ТабВычетовСотрудника.Порядок=Порядок;
			
		КонецЦикла;  
		
		ТабВычетовСотрудника.Сортировать("Порядок+,ВидВычета"); 
		ТабВычетовСотрудника.ВыбратьСтроки();
		Пока ТабВычетовСотрудника.ПолучитьСтроку()=1 Цикл
			
			ВидВычета = ТабВычетовСотрудника.ВидВычета; 
			КодВычета = ВидВычета.КодДляОтчетности2015;
			
			Если ТабВычетовСотрудника.ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Имущественные Тогда
				СписокИмущВычетовСотра.ДобавитьЗначение(ТабВычетовСотрудника.ОписаниеВычета,КодВычета);
			ИначеЕсли ТабВычетовСотрудника.ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СоциальныеПоУведомлениюНО Тогда
				СписокСоциальныхВычетовПоУведомлениюСотра.ДобавитьЗначение(ТабВычетовСотрудника.ОписаниеВычета,КодВычета);	
			Иначе
				СписокВычетовСотра.ДобавитьЗначение(ТабВычетовСотрудника.ОписаниеВычета,ВидВычета.Код);
				Если ПустоеЗначение(СписокКодовВычетовСотра.Получить(ВидВычета.Код))=1 Тогда
					СписокКодовВычетовСотра.ДобавитьЗначение(ТабВычетовСотрудника.ОписаниеВычета,ВидВычета.Код);	    
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	ВсегоВычетовСотра=СписокВычетовСотра.РазмерСписка() + СписокИмущВычетовСотра.РазмерСписка() + СписокСоциальныхВычетовПоУведомлениюСотра.РазмерСписка(); 
	
	
	
	
	ВоеннослужащийПоПризыву = "0000000000000";
	МесяцСменыСтатуса = 0;
	
	Если ИскатьВоенных = 1 Тогда
		Для Сч = 1 По 12 Цикл
			ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
			СостояниеФЗ1 = Сотрудник.СостояниеФизлица.Получить(ДатаМесяца);
			СостояниеФЗ2 = Сотрудник.СостояниеФизлица.Получить(НачМесяца(ДатаМесяца));
			Если (СостояниеФЗ1 = Перечисление.СостояниеФизлица.ВоеннослужащийПоПризыву) или (СостояниеФЗ2 = Перечисление.СостояниеФизлица.ВоеннослужащийПоПризыву) Тогда
				ВоеннослужащийПоПризыву = ?(Сч=1,"",Лев(ВоеннослужащийПоПризыву,Сч-1))+"1"+?(Сч=12,"",Прав(ВоеннослужащийПоПризыву,12-Сч));
				Если СостояниеФЗ1 &lt;&gt; СостояниеФЗ2 Тогда
					МесяцСменыСтатуса = Сч // !!!
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	//заполним подразделене сотрудника по месяцам
	Для Сч = 1 По 12 Цикл
		ДатаМесяца=КонМесяца(Дата(Год,Сч,15));
		СписокПодразделений.УстановитьЗначение(Сч,Сотрудник.Подразделение.Получить(ДатаМесяца));
	КонецЦикла;  
	
	//получим строку месяцев работы, для правильного определения подразделения, если есть договор подряда
	ТаблицаИстории = глПолучитьТаблицуИсторииРеквизитов(Сотрудник,НачалоГода,ОкончаниеГода,"СостояниеФизлица");
	
	КоличествоСтрок = ТаблицаИстории.КоличествоСтрок();
	СтрокаМесяцевРаботы = "000000000000"; 
	
	Для Номер = 1 по КоличествоСтрок Цикл
		ТаблицаИстории.ПолучитьСтрокуПоНомеру(Номер);
		СледующаяДата = ?(Номер&lt;КоличествоСтрок,ТаблицаИстории.ПолучитьЗначение(Номер+1,"Дата")-1,ОкончаниеГода);
		
		// т.к. значений может быть несколько, берем последнее значение на дату
		Если (Номер &lt; КоличествоСтрок) и (ТаблицаИстории.Дата &gt;= ?(Номер&lt;КоличествоСтрок,ТаблицаИстории.ПолучитьЗначение(Номер + 1, "Дата"), ОкончаниеГода)) Тогда
			Продолжить
		КонецЕсли;
		
		Если (ПустоеЗначение(ТаблицаИстории.СостояниеФизлица) = 0) и (ТаблицаИстории.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботает) и (ТаблицаИстории.СостояниеФизлица &lt;&gt; Перечисление.СостояниеФизлица.ВременноНеРаботаетВоеннослужащий) Тогда
			Для Сч = ДатаМесяц(ТаблицаИстории.Дата) По ДатаМесяц(СледующаяДата) Цикл
				СтрокаМесяцевРаботы = ?(Сч=1,"",Лев(СтрокаМесяцевРаботы,Сч-1))+"1"+?(Сч=12,"",Прав(СтрокаМесяцевРаботы,12-Сч));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	
	
	МесяцСообщений = ДатаМесяц(ДатаАктуальности);
	
	ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,НачалоПериодаОсмотра,ОкончаниеПериодаОсмотра); 
	
	СписокВидовДокументов=",НачислениеДивидендов,НачисленияУдержанияСписком,СсудаПредприятия,ДоговорГраждПравХаракт,НачисленияУдержанияСотрудника,";
	ПервыйМесяцРасчетов = 13;
	Пока ЖрнЗарплата.ПолучитьЗапись()=1 Цикл  
		
		Результат=ЖрнЗарплата.Результат;
		Если Результат=0 Тогда
			Продолжить;
		КонецЕсли; 
		
		ПростоДоходы=0;
		ОсобыеДоходы=0;
		ДоходыПоРегистрации=0;
		ДоходыПоРегистрацииСторно=0;
		НалогиПоРегистрации=0;
		ЗачтеноАвансаПоНДФЛ=0;
 		КодВычета = "";
		
		ВР = ЖрнЗарплата.ВидРасч; 
		ПериодДействия=ЖрнЗарплата.НачалоПериодаПоДате(ЖрнЗарплата.ДатаНачала);
		ПериодРегистрации=ЖрнЗарплата.ПериодРегистрации.ДатаОкончания;  
		
		ОтпускПоПериодуРегистрации = СписокПорядокУчетаДоходов.Получить(Строка(ДатаГод(ПериодРегистрации)));
		
		Если ОтпускПоПериодуРегистрации=1 Тогда
			СписокВРПоПериодуРегистрации = СписокВРПоПериодуРегистрации2012; 
			СписокВРПоПериодуДействия = СписокВРПоПериодуДействия2012;
		Иначе
			СписокВРПоПериодуРегистрации = СписокВРПоПериодуРегистрации2011; 
			СписокВРПоПериодуДействия = СписокВРПоПериодуДействия2011;
		КонецЕсли;
		
		Если ((ВР.ВходитВГруппу(ГруппаРасчетов.ВсеУдержанныеНДФЛ)=1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ)=1))
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//налоги
			НалогиПоРегистрации=1;  
		КонецЕсли;
		
		Если (ВР = ВидРасчета.НДФЛЗачтеноАванса)
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//налоги
			ЗачтеноАвансаПоНДФЛ=1;  
		КонецЕсли;
		
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=1)
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода)
			и (ПериодРегистрации &lt;= КонецПериодаОсмотра) Тогда 
			//особые доходы
			ОсобыеДоходы=1;	
		ИначеЕсли (((ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=0) и (СписокВРПоПериодуДействия.Принадлежит(ВР)=1)) или ((ВР.ВходитВГруппу(ГруппаРасчетов.ВсеИсчисленныеНДФЛ)=1)))
			и (ПериодДействия&gt;=НачалоГода) и (ПериодДействия&lt;=ОкончаниеГода) Тогда
			//доходы по периоду регистрации
			ПростоДоходы=1; 
		ИначеЕсли (ВР.ВходитВГруппу(ГруппаРасчетов.ОсобоеИсчислениеНДФЛ)=0) и (СписокВРПоПериодуРегистрации.Принадлежит(ВР)=1) Тогда 
			Если ЖрнЗарплата.Сторно=1 Тогда 
				//это сторно запись 
				ДоходыПоРегистрацииСторно=1;
			Иначе
				//не сторно запись
				//Выбираем только те записи, которые зарегистрированы в текущем налоговом периода
				Если (ПериодРегистрации&gt;=НачалоГода) и (ПериодРегистрации&lt;=ОкончаниеГода) Тогда  
					Если (Год=2005) и (ПериодДействия &lt; НачалоГода) Тогда
						Продолжить;
					КонецЕсли;
					ДоходыПоРегистрации=1;
				Иначе
					Продолжить;
				КонецЕсли;
			КонецЕсли; 	
		КонецЕсли;
		
		Если ОсобыеДоходы = 1 Тогда
			// здесь собираются доходы, вычеты или коды дохода которых зависят от конкретного документа-основания записи в ж.р.
			МесяцДохода=ДатаМесяц(ПериодДействия);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			Док = ЖрнЗарплата.Документ;
			ВидДокумента=Док.Вид();
			СуммаРез = ЖрнЗарплата.Результат;
			Скидка = 0; НазваниеЛьготы = "";
			КодДохода		= Строка(КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ));
			Если (ВР = ВидРасчета.ДивидендыСотрудников) или (ВР = ВидРасчета.ДивидендыУчредителей) Тогда
				НазваниеЛьготы = ": к зачету по дивидендам ";
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
				Если (Резидент = 1) и (СписокСтатусРезидента.ПолучитьЗначение(МесяцДохода) = 1) Тогда 
					Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0  Тогда
						Док.ВыбратьСтроки();
						Пока Док.ПолучитьСтроку()=1 Цикл
							Если Док.Сотрудник.ОсновнойЭлемент=Сотрудник Тогда
								Скидка=Док.КЗачетуАкционера;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						Если СуммаРез&gt;0 Тогда
							Скидка=Мин(Скидка,СуммаРез);
						Иначе
							Скидка=Макс(-1*Скидка,СуммаРез);
						КонецЕсли;
						
						Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1));    
						
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ВР=ВидРасчета.МатВыгодаПоСсудам Тогда
				Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда 
					Если Док.ИсточникСредств = 2 Тогда  // в документе указано, что это кредит - будет облагаться по 13% 
						КодДохода ="2641";
					КонецЕсли;
				КонецЕсли;
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1)); 
			Иначе // договора гр-правового характера и авторские договора
				Если Найти(СписокВидовДокументов,","+ВидДокумента+",")&gt;0 Тогда 
					Если ВидДокумента="НачисленияУдержанияСписком" Тогда
						СтрокаДокумента=ЖрнЗарплата.НомерСтрокиДокумента;
						Док.ПолучитьСтрокуПоНомеру(СтрокаДокумента); 
					ИначеЕсли (ВидДокумента&lt;&gt;"НачисленияУдержанияСотрудника") Тогда
						ПодразделениеДокумента = Док.Подразделение;
						Если ПустоеЗначение(ПодразделениеДокумента)=0 Тогда
							Если Сред(СтрокаМесяцевРаботы,МесяцДохода,1)="0" Тогда
								//сотрудник не работал в этом месяце, установим в списке подразделений подразделение из документа
								СписокПодразделений.УстановитьЗначение(МесяцДохода,ПодразделениеДокумента);	
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					КодДохода = Док.ВидДохода.Код; 
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Если (Резидент = 1) Тогда
						КодВычета = Док.ВидВычета.Код;
						НазваниеЛьготы = ": профессиональный вычет (код "+КодВычета+")";
						Если КодВычета = "405" Тогда // норматив затрат по авторским договорам - см. пп. 3 ст. 221 НК РФ
							Норматив = 0;
							Если КодДохода = "2206" Тогда
								Норматив = 25
							ИначеЕсли (Найти(",2201,2207,2208,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 20
							ИначеЕсли (Найти(",2202,2204,2209,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 30
							ИначеЕсли (Найти(",2203,2205,","," + КодДохода + ",") &gt; 0)  Тогда
								Норматив = 40
							КонецЕсли; 
							Расходы = Окр(СуммаРез * Норматив / 100,2);
						Иначе // фактические расходы
							Если ЖрнЗарплата.Сторно=1 Тогда
								Расходы = -1*Док.Вычет;
							Иначе
								Расходы = Док.Вычет;	
							КонецЕсли;
						КонецЕсли;
						
						Если ЖрнЗарплата.Сторно=1 Тогда
							Скидка = Макс(Расходы,СуммаРез);	
						Иначе         
							Скидка = Мин(Расходы,СуммаРез);
						КонецЕсли;
						
						Если Скидка &lt;&gt; 0 Тогда
							Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
							Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1));
						КонецЕсли;
					КонецЕсли;
				Иначе
					СуммаРез = 0
				КонецЕсли;
			КонецЕсли;
			
			ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ИсчисленоИзЗарплаты			= ?(ВР = ВидРасчета.МатВыгодаПоСсудам, 1, 0);
			
			ЗаполнитьТаблицуСведенийОДоходах(
			Сотрудник,
			ЖрнЗарплата,
			ТаблицаРаспределения,
			ПериодРегистрацииДохода,
			ПодразделениеОрганизации,
			МесяцНалоговогоПериода,
			КодДохода,
			СуммаРез,
			КодВычета,
			Скидка,
			0,
			ВремТаблицаНДФЛСведенияОДоходах,
			ИсчисленоИзЗарплаты);
			
		КонецЕсли;
		
		Если  ПростоДоходы=1 Тогда
			// здесь собираются налоги исчисленные и доходы, код и вычеты которых не зависят от документа, которым они зарегистрированы 
			МесяцДохода=ДатаМесяц(ПериодДействия);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			
			СуммаРез=ЖрнЗарплата.Результат;
			НомерКолонки = 0;
			Если (ВР=ВидРасчета.НДФЛ) Тогда
				НомерКолонки = 4
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендов) Тогда
				НомерКолонки = 5
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентов) Тогда
				НомерКолонки = 6
			Иначе
				КодДохода		= КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
				Если КодДохода&gt;0 Тогда
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1));
					
					ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
					ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода); 
					МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
					
					ЗаполнитьТаблицуСведенийОДоходах(
					Сотрудник,
					ЖрнЗарплата,
					ТаблицаРаспределения,
					ПериодРегистрацииДохода,
					ПодразделениеОрганизации,
					МесяцНалоговогоПериода,
					Строка(КодДохода),
					СуммаРез,
					КодВычета,
					Скидка,
					0,
					ВремТаблицаНДФЛСведенияОДоходах,
					0);
					
				КонецЕсли;    
			КонецЕсли; 
			// занесем налоги исчисленные в таблицу по сотруднику во все месяцы, начиная с месяца, за который начислен налог
			Если НомерКолонки = 6 Тогда
				
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки &gt; 0 Тогда
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки)+СуммаРез);
				КонецЦикла; 
				
			КонецЕсли;
		КонецЕсли;	
		
		Если ДоходыПоРегистрации=1 Тогда
			// здесь собираются  доходы, по периоду регистрации
			МесяцДохода=ДатаМесяц(ПериодРегистрации);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			СуммаРез=ЖрнЗарплата.Результат;
			КоличествоДетей	= 0;
			КодДохода		= КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
			Если КодДохода&gt;0 Тогда 
				
				Если ВР=ВидРасчета.МатПомощьПриРожденииРебенка Тогда
					Док = ЖрнЗарплата.Документ;
					КодДохода ="2762";
					КодВычета = "508";
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1, КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Скидка = Док.СуммаВычета;
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
					Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1)); 
					
				Иначе
					
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1));
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПериодРегистрацииДохода		= ЖрнЗарплата.ПериодРегистрации.ДатаНачала;
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ЗаполнитьТаблицуСведенийОДоходах(
			Сотрудник,
			ЖрнЗарплата,
			ТаблицаРаспределения,
			ПериодРегистрацииДохода,
			ПодразделениеОрганизации,
			МесяцНалоговогоПериода,
			Строка(КодДохода),
			СуммаРез,
			КодВычета,
			Скидка,
			КоличествоДетей,
			ВремТаблицаНДФЛСведенияОДоходах,
			0);
			
		КонецЕсли;  
		
		Если ДоходыПоРегистрацииСторно=1 Тогда
			// здесь собираются  доходы, по периоду регистрации
			
			Док = ЖрнЗарплата.Документ;  
			Если ЖрнЗарплатаДляСторно.ВыбратьЗаписиПоДокументу(Док)=1 Тогда
				ПериодРегистрацииЗаписи=ЖрнЗарплатаДляСторно.ПериодРегистрации.ДатаОкончания; 
				Если (ПериодРегистрацииЗаписи&lt;НачалоГода) или (ПериодРегистрацииЗаписи&gt;ОкончаниеГода) Тогда
					Продолжить;    
				КонецЕсли;
			КонецЕсли;
			
			МесяцДохода=ДатаМесяц(ПериодРегистрацииЗаписи);
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			СдвигТрассировки = 0;
			СуммаРез=ЖрнЗарплата.Результат;
			
			КодДохода		= КодДоходаПоНДФЛ(ВР,Число(Сред(ВоеннослужащийПоПризыву,МесяцДохода,1)), СоответствиеВРкодамДоходовНДФЛ);
			Если КодДохода&gt;0 Тогда 
				
				Если ВР=ВидРасчета.МатПомощьПриРожденииРебенка Тогда
					КодДохода ="2762";
					КодВычета = "508";
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1, КодДохода);
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонокДоходов,МесяцДохода*3+1));
					Скидка = Док.СуммаВычета;
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
					Доходы.Заполнить(Скидка,НомерДохода,НомерДохода,Сред(СтрокаКолонокВычетов,МесяцДохода*3+1)); 
					
				Иначе
					
					Доходы.НоваяСтрока();
					НомерДохода=Доходы.КоличествоСтрок();
					Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
					
					// добавим найденную сумму во все месяцы, начиная с месяца, за который начислен доход
					Доходы.Заполнить(СуммаРез,НомерДохода,НомерДохода,Сред(СтрокаКолонок,МесяцДохода*3+1));
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПериодРегистрацииДохода		= НачМесяца(ПериодРегистрацииЗаписи);
			ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода);
			МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
			
			ЗаполнитьТаблицуСведенийОДоходах(
			Сотрудник,
			ЖрнЗарплата,
			ТаблицаРаспределения,
			ПериодРегистрацииДохода,
			ПодразделениеОрганизации,
			МесяцНалоговогоПериода,
			Строка(КодДохода),
			СуммаРез,
			КодВычета,
			Скидка,
			КоличествоДетей,
			ВремТаблицаНДФЛСведенияОДоходах,
			0);
			
		КонецЕсли;
		
		// здесь собираются налоги (исчисленные и удержанные) - по периоду регистрации
		Если НалогиПоРегистрации = 1 Тогда 
			Если ПериодРегистрации &gt; ОкончаниеГода Тогда
				МесяцДохода = 12    
			ИначеЕсли ДатаГод(ПериодРегистрации) &lt; Год Тогда
				МесяцДохода = 1    
			Иначе
				МесяцДохода = ДатаМесяц(ПериодРегистрации); 
			КонецЕсли;
			ПервыйМесяцРасчетов = Мин(МесяцДохода,ПервыйМесяцРасчетов);
			СдвигТрассировки = 0;
			СуммаРез=ЖрнЗарплата.Результат;
			НомерКолонки=0;
			Если (ВР=ВидРасчета.НДФЛ) Тогда
				НомерКолонки = 7
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендов)  Тогда
				НомерКолонки = 8
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентов)  Тогда
				НомерКолонки = 9
			ИначеЕсли (ВР=ВидРасчета.НДФЛУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛ) Тогда
				НомерКолонки = 10
			ИначеЕсли (ВР=ВидРасчета.НДФЛсДивидендовУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛсДивидендов) Тогда
				НомерКолонки = 11
			ИначеЕсли (ВР=ВидРасчета.НДФЛпо35процентовУдержанный) или (ВР=ВидРасчета.ВозвратНДФЛпоСтавке35) Тогда
				НомерКолонки = 12
			КонецЕсли;
			// занесем налоги в таблицу по сотруднику 
			Если ВР = ВидРасчета.ВозвратНДФЛ Тогда
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42))-СуммаРез);
			ИначеЕсли ВР = ВидРасчета.ВозвратНДФЛСДивидендов Тогда
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,43,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,43))-СуммаРез);
			КонецЕсли;
			
			Если НомерКолонки = 9 Тогда
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки = 12 Тогда
				//временно сложим в колонку числа
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки))+СуммаРез);
				КонецЦикла; 
				
			ИначеЕсли НомерКолонки &gt; 0 Тогда
				Для Сч = МесяцДохода По 12 Цикл
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,НомерКолонки)+СуммаРез);
				КонецЦикла;
				
				Если НомерКолонки = 7 Тогда
					СписокПериодовНДФЛ = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,"НР");
					СписокПериодовНДФЛ.ДобавитьЗначение(ПериодРегистрации, СуммаРез);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,"НР",СписокПериодовНДФЛ);    
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;  
		
		Если ЗачтеноАвансаПоНДФЛ = 1 Тогда
			
			Если ПериодРегистрации &gt; ОкончаниеГода Тогда
				МесяцДохода = 12    
			ИначеЕсли ДатаГод(ПериодРегистрации) &lt; Год Тогда
				МесяцДохода = 1    
			Иначе
				МесяцДохода = ДатаМесяц(ПериодРегистрации); 
			КонецЕсли;
			
			СуммаРез=ЖрнЗарплата.Результат;
			
			Для Сч = МесяцДохода По 12 Цикл
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"ЗачтеноАвансаПоНДФЛ",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,"ЗачтеноАвансаПоНДФЛ")+СуммаРез);
			КонецЦикла;
			
		КонецЕсли;
		
		
	КонецЦикла;  //обработка записей ЖР 
	
	НомСтроки = 0;
	ТабАвансыПоНДФЛ.НайтиЗначение(Сотрудник,НомСтроки,"Сотрудник");
	Если НомСтроки &lt;&gt; 0 Тогда
		Для СчСотр = НомСтроки По ТабАвансыПоНДФЛ.КоличествоСтрок() Цикл
			
			ТабАвансыПоНДФЛ.ПолучитьСтрокуПоНомеру(СчСотр);
			Если ТабАвансыПоНДФЛ.Сотрудник &lt;&gt; Сотрудник Тогда
				Прервать;
			КонецЕсли;
			
			Для Сч = ТабАвансыПоНДФЛ.Месяц По 12 Цикл
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"АвансПоНДФЛ",ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,"АвансПоНДФЛ")+ТабАвансыПоНДФЛ.Сумма);
			КонецЦикла;
			
			
		КонецЦикла;	
	КонецЕсли; 
	
	Уведомление = СоздатьОбъект("СписокЗначений");
	Уведомление.Установить("НомерУведомленияАванс","");
	Уведомление.Установить("ДатаУведомленияАванс","");
	Уведомление.Установить("КодФНСУведомленияАванс","");
	
	НомСтроки = 0;
	ТабУведомленияНаУменьшениеНДФЛ.НайтиЗначение(Сотрудник,НомСтроки,"Сотрудник");
	Если НомСтроки &lt;&gt; 0 Тогда 
		ТабУведомленияНаУменьшениеНДФЛ.ПолучитьСтрокуПоНомеру(НомСтроки);
		Уведомление = СоздатьОбъект("СписокЗначений");
		Уведомление.Установить("НомерУведомленияАванс",ТабУведомленияНаУменьшениеНДФЛ.НомерУведомления);
		Уведомление.Установить("ДатаУведомленияАванс",ТабУведомленияНаУменьшениеНДФЛ.ДатаУведомления);
		Уведомление.Установить("КодФНСУведомленияАванс",ТабУведомленияНаУменьшениеНДФЛ.КодФНС); 
	КонецЕсли; 
	
	Для Сч = 1 По 12 Цикл
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,"УведомлениеНаУменьшениеНДФЛ",Уведомление);
	КонецЦикла;
	
	
	Если ПервыйМесяцРасчетов &gt; 1 Тогда
		Для Сч = 1 По ПервыйМесяцРасчетов - 1 Цикл
			Если ЖрнЗарплата.ВыбратьПоЗначению("ОсновнойЭлемент",Сотрудник,Дата(Год,Сч,15),Дата(Год,Сч,15)) = 1 Тогда
				ПервыйМесяцРасчетов = Сч;
				Прервать
			КонецЕсли;		    	
		КонецЦикла;
	КонецЕсли; 
	
	// закончена обработка расчетов в журнале расчетов
	
	// добавим доходы и налоги из справочников
	Если  ДанныеИзСправочникаДоходов = 1 Тогда
		Пока ЗапросКсправочникуДоходов.Группировка("ГодоМесяц")=1 Цикл
			МесяцДохода = Число(ЗапросКсправочникуДоходов.ГодоМесяц) % 100;
			МесяцСообщений = Макс(МесяцСообщений,МесяцДохода);
			Пока ЗапросКсправочникуДоходов.Группировка("ТекущийЭлемент")=1 Цикл
				
				КодДохода = ЗапросКсправочникуДоходов.ВидДохода+?(ЗапросКсправочникуДоходов.НомерРазделаНК=0,"",Строка(ЗапросКсправочникуДоходов.НомерРазделаНК));
				Доходы.НоваяСтрока();
				НомерДохода=Доходы.КоличествоСтрок();
				Доходы.УстановитьЗначение(НомерДохода,1,КодДохода);
				РезДохода=ЗапросКсправочникуДоходов.Доход;
				РезВычета=ЗапросКсправочникуДоходов.Вычет;
				КодВычета=ЗапросКсправочникуДоходов.КодВычета;
				
				Если (Найти(",403,404,405,508,509,607,",","+КодВычета+",") &gt; 0) Тогда
					Доходы.УстановитьЗначение(НомерДохода,14,КодВычета);
				КонецЕсли;  
				
				//плюс ведется отдельный учет данных о доходах и вычетах, введенных в справочник:
				Доходы.Заполнить(РезДохода,НомерДохода,НомерДохода,Сред("   2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,",МесяцДохода*3)+Сред("  27,28,29,30,31,32,33,34,35,36,37,38",МесяцДохода*3));
				Доходы.Заполнить(РезВычета,НомерДохода,НомерДохода,Сред("  15,16,17,18,19,20,21,22,23,24,25,26,",МесяцДохода*3)+Сред("  39,40,41,42,43,44,45,46,47,48,49,50",МесяцДохода*3));
				
				ПериодРегистрацииДохода		= Дата(Год,МесяцДохода,1);;
				ПодразделениеОрганизации	= СписокПодразделений.ПолучитьЗначение(МесяцДохода); 
				МесяцНалоговогоПериода		= Дата(Год,МесяцДохода,1);
				
				ЗаполнитьТаблицуСведенийОДоходах(
				Сотрудник,
				ЖрнЗарплата,
				ТаблицаРаспределения,
				ПериодРегистрацииДохода,
				ПодразделениеОрганизации,
				МесяцНалоговогоПериода,
				Строка(КодДохода),
				РезДохода,
				Строка(КодВычета),
				РезВычета,
				0,
				ВремТаблицаНДФЛСведенияОДоходах,
				0);
				
			КонецЦикла; // обхода видов дохода
		КонецЦикла;  // обхода по периодам действия/регистрации
	КонецЕсли;
	
	
	Доходы.Свернуть("1,14","2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,
	|27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50");  
	
	
	// рассчитаем оставшиеся вычеты к доходам
	ВсегоСтрок = Доходы.КоличествоСтрок();
	
	ТаблицаВычетовКДоходам = СоздатьТаблицуВычетовКДоходам( ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,,,,,,,,,,,,,,,,,,,,,,,,,,, Отказ);  
	
	Для СчСтрок = 1 По ВсегоСтрок Цикл
		КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
		Если Найти(",2761,2720,2730,2740,2760,2770,2790,1211,",","+КодДохода+",") &gt; 0 Тогда  // ст. 217 НК РФ
			КодВычета="";
			Если КодДохода = "2761" Тогда
				КодВычета="506"
			ИначеЕсли КодДохода = "2720" Тогда
				КодВычета="501"
			ИначеЕсли (КодДохода = "2730")  Тогда
				КодВычета="502"
			ИначеЕсли (КодДохода = "2740")  Тогда
				КодВычета="505"
			ИначеЕсли (КодДохода = "2760")  Тогда
				КодВычета="503" 
			ИначеЕсли (КодДохода = "2770")  Тогда
				КодВычета="504"
			ИначеЕсли (КодДохода = "2790")  Тогда
				КодВычета="507"
			ИначеЕсли (КодДохода = "1211")  Тогда
				КодВычета="607"	
			Иначе
				
			КонецЕсли;
			
			Если КодВычета="509" Тогда 
				Для Сч = 1 По 12 Цикл
					Доходы.УстановитьЗначение(СчСтрок,Сч+14,Доходы.ПолучитьЗначение(СчСтрок,Сч+14));
				КонецЦикла;
			Иначе
				
				СтрокаТабВычетов = "";
				Если ТаблицаВычетов.НайтиЗначение(КодВычета,СтрокаТабВычетов,"КодВычета")=1 Тогда
					СуммаВычета=ТаблицаВычетов.ПолучитьЗначение(СтрокаТабВычетов,"Сумма");
				Иначе
					СуммаВычета=0;
				КонецЕсли;
				
				СуммаВычетаМесяца = 0;
				ВычетБыл = 0;
				
				Для Сч = 1 По 12 Цикл
					СуммаВычетаВТаблицу	= Макс(Мин(СуммаВычета,Доходы.ПолучитьЗначение(СчСтрок,Сч+1)),0);
					СуммаВычетаМесяца	= СуммаВычетаВТаблицу - ВычетБыл;
					ВычетБыл			= СуммаВычетаВТаблицу;
					
					Доходы.УстановитьЗначение(СчСтрок,Сч+14, СуммаВычетаВТаблицу);
					
					Если СуммаВычетаМесяца &lt;&gt; 0 Тогда
						ТаблицаВычетовКДоходам.НоваяСтрока();
						ТаблицаВычетовКДоходам.КодДохода				= КодДохода;
						ТаблицаВычетовКДоходам.КодВычета				= КодВычета;
						ТаблицаВычетовКДоходам.МесяцНалоговогоПериода	= Дата(Год,Сч,1);
						ТаблицаВычетовКДоходам.СуммаВычета				= СуммаВычетаМесяца;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			Доходы.УстановитьЗначение(СчСтрок,14,КодВычета);
		ИначеЕсли (((Лев(КодДохода,2)="15") и (КодДохода&lt;&gt;"1540")) или (КодДохода="2210") или (КодДохода="2220")) и (Резидент=1) Тогда  
			Для Сч = 1 По 12 Цикл 
				Доходы.УстановитьЗначение(СчСтрок,Сч+14,Доходы.ПолучитьЗначение(СчСтрок,Сч+1));    
			КонецЦикла;
		Иначе
			
		КонецЕсли; 
	КонецЦикла;  
	
	
	
	// рассчитаем стандартные и социальные вычеты
	ВсегоВычетовСотра = СписокВычетовСотра.РазмерСписка();
	Если ВсегоВычетовСотра &gt; 0  Тогда
		
		// Суммы вычетов нарастающим итогом
		СуммыВычетов  = СоздатьОбъект("СписокЗначений");
		ВычетыТекущие = СоздатьОбъект("СписокЗначений");
		Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
			КодЭлемента = "";
			СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
			СуммыВычетов.ДобавитьЗначение(0,КодЭлемента);
			ВычетыТекущие.ДобавитьЗначение(0,КодЭлемента);
		КонецЦикла;	
		
		Если ПорядокРасчетаНДФЛ=Перечисление.ОсобенностиИсчисленияНДФЛ.СтандартныеВычетыНарастающимИтогом Тогда
			
			
			НПимущ = НачалоГода;
			КПимущ = ОкончаниеГода;
			ВсегоВычетовПредоставлено = 0;
			Для Сч = 1 По 12 Цикл 
				
				НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
				КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15));
				
				//проверим накопленный доход для исчисления вычетов				
				СовокупныйДоходДляВычетов = 0;
				
				// доход на предыдущем месте работы 
				Если ТипЗначения(ЗапросПоСправкамСПредМР) &lt;&gt; 0 Тогда
					ЗапросПоСправкамСПредМР.вНачалоВыборки();
					Если ЗапросПоСправкамСПредМР.Получить(Сотрудник) = 1 Тогда
						Для Сч1 = 1 По Сч Цикл
							СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + ЗапросПоСправкамСПредМР.ПолучитьАтрибут("СД"+Строка(Сч1));
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				// доход на нашем предприятии
				Для СчСтрок = 1 По ВсегоСтрок Цикл
					КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
					Если Найти(",1210,2610,2740,3020,1010,1110,1120,4000,",","+КодДохода+",")=0 Тогда
						СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + Доходы.ПолучитьЗначение(СчСтрок,Сч+1) - Доходы.ПолучитьЗначение(СчСтрок,Сч+14);
					КонецЕсли;
				КонецЦикла;	
				
				
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					ВычетыТекущие.УстановитьЗначение(СчВычетов,0);
				КонецЦикла;
				
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				КодУчтенногоЭлемента = "";
				СдвигТрассировки = 0; 
				
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					
					КодЭлемента = ""; // код элемента справочника ВидыВычетов
					ОписаниеВычета=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
					
					ВидВычета = ОписаниеВычета.ПолучитьЗначение(7); 
					КодВычета = ВидВычета.КодДляОтчетности2015;
					
					Если ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Социальные Тогда 
						
						СтрокаВычета = ""; 
						СуммаСоциальногоВычета = 0;  
						Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
						Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
							ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
							СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
						КонецЕсли;
						
						СуммыВычетов.Установить(КодЭлемента,СуммыВычетов.Получить(КодЭлемента) + СуммаСоциальногоВычета);
						
					Иначе	
						
						СтрокаТабВычетов = "";
						ТаблицаВычетов.НайтиЗначение(ВидВычета,СтрокаТабВычетов,"ВидВычета");
						Если СтрокаТабВычетов &gt; 0 Тогда
							ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
							ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
							СуммаВычета			= ТаблицаВычетов.Сумма;
						Иначе
							Продолжить;
						КонецЕсли;	
						
						// собственно проверка предела дохода
						ДостиглиПределаДоходов = 0;
						Если ПределДляВычетов &gt; 0 Тогда
							Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
								ДостиглиПределаДоходов = 1
							КонецЕсли;
						КонецЕсли;
						
						ДатаНачалаВычета    = ОписаниеВычета.ПолучитьЗначение(1);
						ДатаОкончанияВычета = ОписаниеВычета.ПолучитьЗначение(2);
						
						КодВычетаСтрока = КодВычета;
						КодВычета=Число(КодВычета); 
						
						Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда 
							
							Если (ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей) и (ДостиглиПределаДоходов=0) Тогда
								
								СуммыВычетов.Установить(КодЭлемента,СуммыВычетов.Получить(КодЭлемента) + СуммаВычета);
								ВычетыТекущие.Установить(КодЭлемента,ВычетыТекущие.Получить(КодЭлемента) + СуммаВычета);
								
							Иначе  // вычеты предусмотрены пп. 1 и 2 п. 1 ст. 218
								
								Если УчтенВычетФЛ&lt;Число(КодВычета) Тогда // ранее встречались только меньшие вычеты, либо их не было вообще
									
									ВычетыТекущие.Установить(КодЭлемента,СуммаВычета);
									СуммыВычетов.Установить(КодЭлемента,СуммыВычетов.Получить(КодЭлемента) + СуммаВычета);
									
									
									Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
										
										
										СуммыВычетов.Установить(КодУчтенногоЭлемента, СуммыВычетов.Получить(КодУчтенногоЭлемента)-ВычетыТекущие.Получить(КодУчтенногоЭлемента));
										ВычетыТекущие.Установить(КодУчтенногоЭлемента,0);
										
									КонецЕсли; 
									
									УчтенВычетФЛ=Число(КодВычета);
									КодУчтенногоЭлемента = КодЭлемента;
									
								КонецЕсли;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла; // обхода вычетов сотра  
				
				// вычеты - в итоговую таблицу
				ВсегоВычетов = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				СписокВычетовДляТаблицыФакт = СоздатьОбъект("СписокЗначений"); 
				ВсегоВычетовПредоставлено = 0;
				Для СчВычетов = 1 По СписокКодовВычетовСотра.РазмерСписка() Цикл 
					
					КодЭлемента = ""; // код элемента справочника ВидыВычетов
					ОписаниеВычета=СписокКодовВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
					
					ВидВычета = ОписаниеВычета.ПолучитьЗначение(7); 
					КодВычета = ВидВычета.КодДляОтчетности2015;
					
					СуммаПоВычету = СуммыВычетов.Получить(КодЭлемента);
					
					Если СуммаПоВычету &gt; 0 Тогда
						
						ВсегоВычетов = ВсегоВычетов + СуммаПоВычету;
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммаПоВычету,КодВычета); 
						
						Если ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Социальные Тогда
							СписокВычетовДляТаблицыФакт.ДобавитьЗначение(СуммаПоВычету,КодВычета);
							ВсегоВычетовПредоставлено = ВсегоВычетовПредоставлено + СуммаПоВычету;
						Иначе
							СуммаВычетаФакт = Мин(СуммаПоВычету,СовокупныйДоходДляВычетов-ВсегоВычетовПредоставлено);
							Если СуммаВычетаФакт&gt;0 Тогда 
								СписокВычетовДляТаблицыФакт.ДобавитьЗначение(СуммаВычетаФакт,КодВычета);
								ВсегоВычетовПредоставлено = ВсегоВычетовПредоставлено + СуммаВычетаФакт;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла; 
				
				СписокВычетовОбщий = СоздатьОбъект("СписокЗначений");
				СписокВычетовОбщий = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,3);
				СписокВычетовОбщий.УстановитьЗначение(1,СписокВычетовДляТаблицыФакт);
				СписокВычетовОбщий.УстановитьЗначение(7,СписокВычетовДляТаблицы);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетовОбщий);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,19,СовокупныйДоходДляВычетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,20,ВсегоВычетов);
				
			КонецЦикла;	// по месяцам расчета вычетов 
			
		Иначе  // вычеты
			
			СуммыВычетовП  = СоздатьОбъект("СписокЗначений");
			Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
				КодЭлемента = "";
				СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
				СуммыВычетовП.ДобавитьЗначение(0,КодЭлемента);
			КонецЦикла;
			
			НПимущ = НачалоГода;
			КПимущ = ОкончаниеГода;
			Для Сч = 1 По 12 Цикл
				
				НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
				КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15)); 
				
				//проверим накопленный доход для исчисления вычетов				
				СовокупныйДоходДляВычетов = 0;
				
				// доход на предыдущем месте работы 
				Если ТипЗначения(ЗапросПоСправкамСПредМР) &lt;&gt; 0 Тогда
					ЗапросПоСправкамСПредМР.вНачалоВыборки();
					Если ЗапросПоСправкамСПредМР.Получить(Сотрудник) = 1 Тогда
						Для Сч1 = 1 По Сч Цикл
							СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + ЗапросПоСправкамСПредМР.ПолучитьАтрибут("СД"+Строка(Сч1));
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				// доход на нашем предприятии
				Для СчСтрок = 1 По ВсегоСтрок Цикл
					КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
					Если Найти(",1210,2610,2740,3020,1010,1110,1120,4000,",","+КодДохода+",")=0 Тогда
						СовокупныйДоходДляВычетов = СовокупныйДоходДляВычетов + Доходы.ПолучитьЗначение(СчСтрок,Сч+1) - Доходы.ПолучитьЗначение(СчСтрок,Сч+14);
					КонецЕсли;
				КонецЦикла;	
				
				Если Сч=1 Тогда
					СовокупныйДоходДляВычетовПоТекущийМесяц=СовокупныйДоходДляВычетов;
					ДоходТекущегоМесяцаДляВычетов=СовокупныйДоходДляВычетов;
				Иначе
					ДоходТекущегоМесяцаДляВычетов=СовокупныйДоходДляВычетов-СовокупныйДоходДляВычетовПоТекущийМесяц;
					СовокупныйДоходДляВычетовПоТекущийМесяц =СовокупныйДоходДляВычетов;
				КонецЕсли;
				
				
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					ВычетыТекущие.УстановитьЗначение(СчВычетов,0);
				КонецЦикла;
				
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				КодУчтенногоЭлемента = "";
				ОсталосьДоходовДляВычетов=ДоходТекущегоМесяцаДляВычетов;
				Если ДоходТекущегоМесяцаДляВычетов&gt;0 Тогда
					//предоставляем вычеты если в месяце есть доходы
					
					Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
						
						КодЭлемента = ""; // код элемента справочника ВидыВычетов
						ОписаниеВычета=СписокВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
						
						ВидВычета = ОписаниеВычета.ПолучитьЗначение(7); 
						КодВычета = ВидВычета.КодДляОтчетности2015;
						
						Если ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Социальные Тогда 
							
							СтрокаВычета = ""; 
							СуммаСоциальногоВычета = 0;  
							Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
							Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
								ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
								СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
							КонецЕсли;
							
							СуммыВычетов.Установить(КодЭлемента,СуммыВычетов.Получить(КодЭлемента) + СуммаСоциальногоВычета);
							
						Иначе
							
							СтрокаТабВычетов = "";
							ТаблицаВычетов.НайтиЗначение(ВидВычета,СтрокаТабВычетов,"ВидВычета");
							Если СтрокаТабВычетов &gt; 0 Тогда
								ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
								ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
								СуммаВычета			= ТаблицаВычетов.Сумма;
							Иначе
								Продолжить;
							КонецЕсли; 
							
							// собственно проверка предела дохода
							ДостиглиПределаДоходов = 0;
							Если ПределДляВычетов &gt; 0 Тогда
								Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
									ДостиглиПределаДоходов = 1
								КонецЕсли;
							КонецЕсли;  
							
							СуммаВычетаНеОграниченная=СуммаВычета;
							СуммаВычетаП=СуммаВычета; //для сбора суммы вычетов на которые имели право
							СуммаВычета=Мин(ОсталосьДоходовДляВычетов,СуммаВычета); 
							
							//это сумма вычета, котору мы можем применить учитывая доход месяца
							Если СуммаВычета&gt;0 Тогда 
								
								ДатаНачалаВычета = ОписаниеВычета.ПолучитьЗначение(1);
								ДатаОкончанияВычета = ОписаниеВычета.ПолучитьЗначение(2);
								
								Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
									
									Если (ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей) и (ДостиглиПределаДоходов=0) Тогда
										
										СуммыВычетов.Установить(КодЭлемента,СуммыВычетов.Получить(КодЭлемента) + СуммаВычета);
										ОсталосьДоходовДляВычетов=ОсталосьДоходовДляВычетов-СуммаВычета;
										
									Иначе
										
										Если УчтенВычетФЛ&lt;Число(КодВычета) Тогда // ранее встречались только меньшие вычеты, либо их не было вообще 
											
											Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
												
												СуммыВычетов.Установить(КодУчтенногоЭлемента,СуммыВычетов.Получить(КодУчтенногоЭлемента) - ВычетыТекущие.Получить(КодУчтенногоЭлемента));
												
												//вернем предоставленный вычет
												ОсталосьДоходовДляВычетов=ОсталосьДоходовДляВычетов+ВычетыТекущие.Получить(КодУчтенногоЭлемента);
												//еще раз рассчитаем сумму вычета, которую представляем с учетом месячного ограничения
												СуммаВычета=Мин(ОсталосьДоходовДляВычетов,СуммаВычетаНеОграниченная);
												
												ВычетыТекущие.Установить(КодУчтенногоЭлемента,0);
												
											КонецЕсли;
											
											ВычетыТекущие.Установить(КодЭлемента,СуммаВычета);
											СуммыВычетов.Установить(КодЭлемента,СуммыВычетов.Получить(КодЭлемента) + СуммаВычета);
											ОсталосьДоходовДляВычетов=ОсталосьДоходовДляВычетов-СуммаВычета;
											
											УчтенВычетФЛ=Число(КодВычета);
											КодУчтенногоЭлемента = КодЭлемента;
											
										КонецЕсли;						
										
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла; // обхода вычетов сотра
					
				Иначе
				КонецЕсли;  //не предоставляем вычеты в месяце без доходов  
				
				
				// вычеты - в итоговую таблицу
				ВсегоВычетов = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				Для СчВычетов = 1 По СписокКодовВычетовСотра.РазмерСписка() Цикл 
					
					КодЭлемента = ""; // код элемента справочника ВидыВычетов
					ОписаниеВычета=СписокКодовВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
					
					ВидВычета = ОписаниеВычета.ПолучитьЗначение(7); 
					КодВычета = ВидВычета.КодДляОтчетности2015;
					
					СуммаПоВычету = СуммыВычетов.Получить(КодЭлемента);
					
					Если СуммаПоВычету &gt; 0 Тогда                               
						ВсегоВычетов = ВсегоВычетов + СуммаПоВычету;
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммаПоВычету,КодВычета);
					КонецЕсли; 
					
				КонецЦикла; 
				
				СписокВычетовОбщий = СоздатьОбъект("СписокЗначений");
				СписокВычетовОбщий = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+Сч,3);
				СписокВычетовОбщий.УстановитьЗначение(1,СписокВычетовДляТаблицы);
				
				//соберем вычетв на которые сотрудник имел право, необходимо для 2_НДФЛ 
				// Суммы текущих вычетов
				Для СчВычетов = 1 По ВсегоВычетовСотра Цикл
					ВычетыТекущие.УстановитьЗначение(СчВычетов,0);
				КонецЦикла; 
				
				УчтенВычетФЛ=0; //запомним какой из вычетов, соответствующих пп. 1-3 п. 1 ст. 218 НК РФ мы уже нашли. Если попадется вычет в большем размере - меньший вычтем (см. п. 2 ст. 218).
				КодУчтенногоЭлемента = "";
				
				Для СчВычетов = 1 По СписокКодовВычетовСотра.РазмерСписка() Цикл 
					
					КодЭлемента = ""; // код элемента справочника ВидыВычетов
					ОписаниеВычета=СписокКодовВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
					
					ВидВычета = ОписаниеВычета.ПолучитьЗначение(7); 
					КодВычета = ВидВычета.КодДляОтчетности2015;
					
					Если ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.Социальные Тогда 
						
						СтрокаВычета = ""; 
						СуммаСоциальногоВычета = 0;  
						Ключ = Формат(""+Сч+"-"+КодВычета,"С10");
						Если ТабСоциальныхВычетовСотрудника.НайтиЗначение(Ключ,СтрокаВычета,"Ключ") = 1 Тогда
							ТабСоциальныхВычетовСотрудника.ПолучитьСтрокуПоНомеру(СтрокаВычета);
							СуммаСоциальногоВычета = ТабСоциальныхВычетовСотрудника.Размер;
						КонецЕсли;
						
						СуммыВычетовП.Установить(КодЭлемента,СуммыВычетовП.Получить(КодЭлемента) + СуммаСоциальногоВычета);
						
						
					Иначе
						
						СтрокаТабВычетов = "";
						ТаблицаВычетов.НайтиЗначение(ВидВычета,СтрокаТабВычетов,"ВидВычета");
						Если СтрокаТабВычетов &gt; 0 Тогда
							ТаблицаВычетов.ПолучитьСтрокуПоНомеру(СтрокаТабВычетов);
							ПределДляВычетов	= ТаблицаВычетов.ПределДоходов;
							СуммаВычета			= ТаблицаВычетов.Сумма;
						Иначе
							Продолжить;
						КонецЕсли;
						// собственно проверка предела дохода
						ДостиглиПределаДоходов = 0;
						Если ПределДляВычетов &gt; 0 Тогда
							Если (СовокупныйДоходДляВычетов &gt; ПределДляВычетов)  Тогда
								ДостиглиПределаДоходов = 1
							КонецЕсли;
						КонецЕсли;
						
						ДатаНачалаВычета = ОписаниеВычета.ПолучитьЗначение(1);
						ДатаОкончанияВычета = ОписаниеВычета.ПолучитьЗначение(2);
						
						Если (ДатаНачалаВычета &lt;= КП) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1)) Тогда
							
							Если (ВидВычета.ГруппаВычета = Перечисление.ГруппыВычетовПоНДФЛ.СтандартныеНаДетей) и (ДостиглиПределаДоходов=0) Тогда
								СуммыВычетовП.Установить(КодЭлемента,СуммыВычетовП.Получить(КодЭлемента) + СуммаВычета);
							Иначе
								Если УчтенВычетФЛ&lt;Число(КодВычета) Тогда // ранее встречались только меньшие вычеты, либо их не было вообще
									ВычетыТекущие.Установить(КодЭлемента,СуммаВычета);
									СуммыВычетовП.Установить(КодЭлемента,СуммыВычетовП.Получить(КодЭлемента) + СуммаВычета);
									Если УчтенВычетФЛ&gt;0  Тогда //уберем меньшие по размеру вычеты
										СуммыВычетовП.Установить(КодУчтенногоЭлемента,СуммыВычетовП.Получить(КодУчтенногоЭлемента) - ВычетыТекущие.Получить(КодУчтенногоЭлемента));
										ВычетыТекущие.Установить(КодУчтенногоЭлемента,0);
									КонецЕсли;
									УчтенВычетФЛ=Число(КодВычета);
									КодУчтенногоЭлемента = КодЭлемента;
								КонецЕсли;						
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла; // обхода вычетов сотра
				
				ВсегоВычетовП = 0;
				СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений");
				Для СчВычетов = 1 По СписокКодовВычетовСотра.РазмерСписка() Цикл
					
					КодЭлемента = ""; // код элемента справочника ВидыВычетов
					ОписаниеВычета=СписокКодовВычетовСотра.ПолучитьЗначение(СчВычетов,КодЭлемента);
					
					ВидВычета = ОписаниеВычета.ПолучитьЗначение(7); 
					КодВычета = ВидВычета.КодДляОтчетности2015;
					
					СуммаПоВычету = СуммыВычетовП.Получить(КодЭлемента);
					
					Если СуммаПоВычету &gt; 0 Тогда
						ВсегоВычетовП = ВсегоВычетовП + СуммаПоВычету;
						СписокВычетовДляТаблицы.ДобавитьЗначение(СуммаПоВычету,КодВычета);
					КонецЕсли;
				КонецЦикла;
				СписокВычетовОбщий.УстановитьЗначение(7,СписокВычетовДляТаблицы);
				//собрали вычеты на которые сотрудник имел право
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,3,СписокВычетовОбщий);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,19,СовокупныйДоходДляВычетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+Сч,20,ВсегоВычетов);
				
			КонецЦикла;	// по месяцам расчета вычетов
			
		КонецЕсли;
		
	Иначе  // пустой список вычетов  уже записан
	КонецЕсли; 
	
	Применено311ВПрошломМесяце = 0;
	Применено312ВПрошломМесяце = 0;
	ПримененоСоцВычетаВПрошломМесяце = СоздатьОбъект("СписокЗначений");
	
	Для Сч = 1 По 12 Цикл
		
		// облагаемые базы по ставкам нарастающим итогом с начала года
		БазаПо13=0;
		БазаПо13Спр=0;
		ЗаМесяцПо35 = 0;
		БазаПоДивидендам=0;
		БазаПоДивидендамСпр=0;
		
		ТекущиеДоходыПо35.УдалитьВсе();
		ДоходыПо35ЗаГод.УдалитьВсе();
		ТекущиеДоходыПо35Спр.УдалитьВсе();
		ДоходыПо35ЗаГодСпр.УдалитьВсе();
		
		// переформируем таблицу доходов и подсчитаем доходы
		ТаблицаДоходовДляТаблицы = СоздатьОбъект("ТаблицаЗначений"); 
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Строка",5);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Число",15,2);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Строка",3);
		ТаблицаДоходовДляТаблицы.НоваяКолонка(,"Число",15,2);  
		
		СдвигТрассировки = 0;
		Для СчСтрок = 1 По ВсегоСтрок Цикл
			
			СуммаДохода=Доходы.ПолучитьЗначение(СчСтрок,Сч+1);
			СуммаДоходаСпр=Доходы.ПолучитьЗначение(СчСтрок,Сч+26); //из справочника
			
			Если (СуммаДохода &lt;&gt; 0) или (СуммаДоходаСпр &lt;&gt; 0) Тогда
				
				КодДохода=СокрЛП(Доходы.ПолучитьЗначение(СчСтрок,1));
				КодВычета=Доходы.ПолучитьЗначение(СчСтрок,14);
				СуммаВычета=Доходы.ПолучитьЗначение(СчСтрок,Сч+14);
				СуммаВычетаСпр=Доходы.ПолучитьЗначение(СчСтрок,Сч+38); //из справочника
				
				
				СтрокаДоходаПрисутствует = 0;
				Если (КодДохода="2000") ИЛИ (КодДохода="2012") Тогда
					СтрокаТД="";
					СтрокаДоходаПрисутствует = ТаблицаДоходовДляТаблицы.НайтиЗначение(КодДохода,СтрокаТД,1);
					Если СтрокаДоходаПрисутствует = 1 Тогда
						ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,2,ТаблицаДоходовДляТаблицы.ПолучитьЗначение(СтрокаТД,2)+СуммаДохода);
						Если (ПустоеЗначение(КодВычета) = 0) и (СуммаВычета &lt;&gt; 0) Тогда
							ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,3,КодВычета);
							ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,4,ТаблицаДоходовДляТаблицы.ПолучитьЗначение(СтрокаТД,4)+СуммаВычета); 
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
				
				Если СтрокаДоходаПрисутствует = 0 Тогда
					ТаблицаДоходовДляТаблицы.НоваяСтрока();
					СтрокаТД=ТаблицаДоходовДляТаблицы.КоличествоСтрок();
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,1,КодДохода);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,2,СуммаДохода);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,3,КодВычета);
					ТаблицаДоходовДляТаблицы.УстановитьЗначение(СтрокаТД,4,СуммаВычета); 
					
				КонецЕсли;
				
				Если КодДохода = "1010" Тогда
					БазаПоДивидендам = СуммаДохода - СуммаВычета;
					БазаПоДивидендамСпр = СуммаДоходаСпр - СуммаВычетаСпр;
					ЗачтеноПоДивидендам[Сч] = СуммаВычета - ?(Сч=1,0,ЗачтеноПоДивидендам[Сч-1])
				ИначеЕсли (Найти(",2610,1210,3020,2740,",","+КодДохода+",")&gt;0)  Тогда
					БылоБазы = Число(ДоходыПо35ЗаГод.Получить(КодДохода));
					БылоБазыСпр = Число(ДоходыПо35ЗаГодСпр.Получить(КодДохода));
					ТекущиеДоходыПо35.ДобавитьЗначение(СуммаДохода - ?(КодДохода="2740",СуммаВычета,0),КодДохода);
					ДоходыПо35ЗаГод.Установить(КодДохода,БылоБазы + СуммаДохода - ?(КодДохода="2740",СуммаВычета,0));
					ТекущиеДоходыПо35Спр.ДобавитьЗначение(СуммаДоходаСпр - ?(КодДохода="2740",СуммаВычета,0),КодДохода);
					ДоходыПо35ЗаГодСпр.Установить(КодДохода,БылоБазыСпр + СуммаДоходаСпр - ?(КодДохода="2740",СуммаВычета,0)); 
					ЗаМесяцПо35 = ЗаМесяцПо35 + СуммаДохода - ?(КодДохода="2740",СуммаВычета,0);
				ИначеЕсли ((Лев(КодДохода,2)&lt;&gt;"15") или (КодДохода="1540")) и (Найти(",4000,4600,",","+КодДохода+",")=0) Тогда // кроме доходов от продажи имущества и предпринимательских доходов
					БазаПо13 = БазаПо13 + СуммаДохода - СуммаВычета;
					БазаПо13Спр = БазаПо13Спр + СуммаДоходаСпр - СуммаВычета;
				ИначеЕсли ((Лев(КодДохода,2)="15") и (КодДохода&lt;&gt;"1540")) и (Резидент=0) Тогда // у нерезидентов доходы от продажи имущества облагаются в полном объеме
					БазаПо13 = БазаПо13 + СуммаДохода;
					БазаПо13Спр = БазаПо13Спр + СуммаДоходаСпр;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		// доходы - в итоговую таблицу
		СтрокаИтоговойТаблицы=НомерСтрокиСотрудника+Сч; 
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,2,ТаблицаДоходовДляТаблицы);
		ТаблицаДоходовДляТаблицы=""; 
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,"Подразделение", СписокПодразделений.ПолучитьЗначение(Сч));
		
		
		// получим вычеты текущего месяца
		ВсегоВычетов=ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,20);
		БазаДляРасчетаВычетов = Макс(БазаПо13-ВсегоВычетов,0); //база без учета имущ и социальных вычетов по уведомлению
		// запись результатов
		СписокВТретьейКолонкеТекМесяц = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,3);
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(2,БазаДляРасчетаВычетов); // установим базу без имущественных вычетов
		
		// вычеты имущественные и социальные на основании уведомлений
		НП = ЖрнЗарплата.НачалоПериодаПоДате(Дата(Год,Сч,15));
		КП = ЖрнЗарплата.КонецПериодаПоДате(Дата(Год,Сч,15)); 
		
		ВсегоВычетовСоц = СписокСоциальныхВычетовПоУведомлениюСотра.РазмерСписка();
		СписокВычетовДляТаблицы = СоздатьОбъект("СписокЗначений"); 
		ИтогоПримененоСоцВычетов = 0;
		Для СчВыч = 1 По ВсегоВычетовСоц Цикл
			
			КодВычета = "";
			ОписаниеВычета = СписокСоциальныхВычетовПоУведомлениюСотра.ПолучитьЗначение(СчВыч, КодВычета);
			
			ДатаНачалаВычета         = ОписаниеВычета.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = ОписаниеВычета.ПолучитьЗначение(2);
			МесяцНачалаПримененияВычета = ДатаМесяц(ДатаНачалаВычета);
			
			РазмерВычетаНачальный = 0;
			БазаДляВычета = 0;
			
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				
				РазмерВычетаНачальный = Макс(ОписаниеВычета.ПолучитьЗначение(3),0);
				
				Если Сч &gt;= МесяцНачалаПримененияВычета Тогда 
					БазаДляВычета = БазаДляРасчетаВычетов
					-?(МесяцНачалаПримененияВычета=1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцНачалаПримененияВычета-1,3).ПолучитьЗначение(2));
				КонецЕсли;
				
			КонецЕсли; 
			
			ПримененоВычета = Макс(Мин(БазаДляВычета - ИтогоПримененоСоцВычетов,  РазмерВычетаНачальный),0);
			СписокВычетовДляТаблицы.ДобавитьЗначение(ПримененоВычета,КодВычета);
			
			ИтогоПримененоСоцВычетов = ИтогоПримененоСоцВычетов + ПримененоВычета; 
			
			ПримененоВПрошломМесяце = ПримененоСоцВычетаВПрошломМесяце.Получить(КодВычета);
			Если ПустоеЗначение(ПримененоВПрошломМесяце)=1 Тогда
				ПримененоВПрошломМесяце = 0;
			КонецЕсли;
			ПримененоСоцВычетаВПрошломМесяце.Установить(КодВычета,ПримененоВычета);
			ПримененоВМесяце = ПримененоВычета - ПримененоВПрошломМесяце;
			
			Если ПримененоВМесяце &lt;&gt; 0 Тогда
				ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
				Сотрудник,
				КодВычета,
				Год,
				Дата(Год,Сч,1),
				ПримененоВМесяце,
				СписокПодразделений.ПолучитьЗначение(Сч),
				ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
			КонецЕсли;
			
		КонецЦикла;
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(10,СписокВычетовДляТаблицы);
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(11,СписокСоциальныхВычетовПоУведомлениюСотра);
		
		
		// 311
		БазаДляИмВычетов = 0;
		Вычет311 = СписокИмущВычетовСотра.Получить("311");
		РазмерВычетаНачальный311 = 0; 
		ПредоставленоИмущНаНачалоГода311 = 0; 
		ИтогоПрименено311 = 0; 
		ОстатокИмущественныхВычетов311 = 0;
		Если ПустоеЗначение(Вычет311) = 0 Тогда
			
			ДатаНачалаВычета         = Вычет311.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет311.ПолучитьЗначение(2);
			МесяцНачалаПримененияВычета = ДатаМесяц(ДатаНачалаВычета);
			
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
				и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				
				РазмерВычетаНачальный311 = Вычет311.ПолучитьЗначение(3); 
				
				Если Сч &gt;= МесяцНачалаПримененияВычета Тогда 
					БазаДляИмВычетов = БазаДляРасчетаВычетов
					-?(МесяцНачалаПримененияВычета=1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцНачалаПримененияВычета-1,3).ПолучитьЗначение(2));
				КонецЕсли;
				
			КонецЕсли; 
			
			ПредоставленоИмущНаНачалоГода311 = Макс(РазмерВычетаНачальный311,0); 
			ИтогоПрименено311 = Макс(Мин(БазаДляИмВычетов - ИтогоПримененоСоцВычетов,  ПредоставленоИмущНаНачалоГода311),0);
			ОстатокИмущественныхВычетов311 = Макс(РазмерВычетаНачальный311 - ИтогоПрименено311,0);
			
		КонецЕсли;
		
		Применено311ВМесяце			= ИтогоПрименено311 - Применено311ВПрошломМесяце;
		Применено311ВПрошломМесяце	= ИтогоПрименено311;
		
		Если Применено311ВМесяце &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
			Сотрудник,
			"311",
			Год,
			Дата(Год,Сч,1),
			Применено311ВМесяце,
			СписокПодразделений.ПолучитьЗначение(Сч),
			ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// 312 
		БазаДляИмВычетов = 0;
		Вычет312 = СписокИмущВычетовСотра.Получить("312");
		РазмерВычетаНачальный312 = 0;
		ПредоставленоИмущНаНачалоГода312 = 0; 
		ИтогоПрименено312 = 0; 
		ОстатокИмущественныхВычетов312 = 0;
		Если ПустоеЗначение(Вычет312) = 0 Тогда 
			
			
			ДатаНачалаВычета         = Вычет312.ПолучитьЗначение(1);
			ДатаОкончанияВычета      = Вычет312.ПолучитьЗначение(2);
			МесяцНачалаПримененияВычета = ДатаМесяц(ДатаНачалаВычета);
			
			Если (ДатаНачалаВычета &lt;= КП) и (ДатаНачалаВычета &gt;= НачГода(КП)) 
				и ((ДатаОкончанияВычета &gt;= НП) или (ПустоеЗначение(ДатаОкончанияВычета) = 1))  Тогда
				
				РазмерВычетаНачальный312 = Вычет312.ПолучитьЗначение(3); 
				
				Если Сч &gt;= МесяцНачалаПримененияВычета Тогда 
					БазаДляИмВычетов = БазаДляРасчетаВычетов
					-?(МесяцНачалаПримененияВычета=1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцНачалаПримененияВычета-1,3).ПолучитьЗначение(2));
				КонецЕсли;
				
			КонецЕсли; 
			
			
			ПредоставленоИмущНаНачалоГода312 = Макс(РазмерВычетаНачальный312,0);
			ИтогоПрименено312 = Макс(Мин(БазаДляИмВычетов-ИтогоПримененоСоцВычетов-ИтогоПрименено311,  ПредоставленоИмущНаНачалоГода312),0); // применяем 312-й вычет после применения 311-го
			ОстатокИмущественныхВычетов312 = Макс(РазмерВычетаНачальный312 - ИтогоПрименено312,0);
			
		КонецЕсли;
		
		Применено312ВМесяце			= ИтогоПрименено312 - Применено312ВПрошломМесяце;
		Применено312ВПрошломМесяце	= ИтогоПрименено312;
		
		Если Применено312ВМесяце &lt;&gt; 0 Тогда
			ЗаполнитьТаблицуНДФЛИмущественныеВычетыФизлиц(
			Сотрудник,
			"312",
			Год,
			Дата(Год,Сч,1),
			Применено312ВМесяце,
			СписокПодразделений.ПолучитьЗначение(Сч),
			ВремТаблицаНДФЛИмущественныеВычетыФизлиц);
		КонецЕсли;
		
		// облагаемые базы - в итоговую таблицу
		
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(3,ИтогоПрименено311); // установим сумму 311-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(4,ИтогоПрименено312); // установим сумму 312-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(5,Вычет311); // описание 311-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(6,Вычет312); // описание 312-го имущественного вычета 
		
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(8,0); // описание 318-го имущественного вычета
		СписокВТретьейКолонкеТекМесяц.УстановитьЗначение(9,0); // установим сумму 318-го итого на текущий месяц имущественных вычетов нарастающим итогом за год
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,20,Макс(ВсегоВычетов+ИтогоПримененоСоцВычетов+ИтогоПрименено311+ИтогоПрименено312-БазаПо13,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,13,Макс(БазаПо13-ИтогоПримененоСоцВычетов-ВсегоВычетов-ИтогоПрименено311-ИтогоПрименено312,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,39,Макс(БазаПо13Спр-ВсегоВычетов-ИтогоПрименено311-ИтогоПрименено312-ИтогоПримененоСоцВычетов,0));
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,3,СписокВТретьейКолонкеТекМесяц);
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,14,Макс(БазаПоДивидендам,0));
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,40,Макс(БазаПоДивидендамСпр,0));
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,15,""+Число(ДоходыПо35ЗаГод.Получить("2610"))+";"
		+Число(ДоходыПо35ЗаГод.Получить("1210"))+";"
		+Число(ДоходыПо35ЗаГод.Получить("3020"))+";"
		+Число(ДоходыПо35ЗаГод.Получить("2740"))+";");
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,41,""+Число(ДоходыПо35ЗаГодСпр.Получить("2610"))+";"
		+Число(ДоходыПо35ЗаГодСпр.Получить("1210"))+";"
		+Число(ДоходыПо35ЗаГодСпр.Получить("3020"))+";"
		+Число(ДоходыПо35ЗаГодСпр.Получить("2740"))+";");
		
		// разобьем налоги по ставке 35% по кодам доходов
		СчетчикДоходов = 0;
		Для СчДоходов = 1 По 4 Цикл
			КодДохода5Раздела = Сред("2610,1210,3020,2740",СчДоходов*5-4,4);
			СуммаДохода = Число(ДоходыПо35ЗаГод.Получить(КодДохода5Раздела));
			Если СуммаДохода &lt;&gt; 0 Тогда
				СчетчикДоходов = СчетчикДоходов + 1;
				НомерДохода = СчДоходов;
			КонецЕсли;
		КонецЦикла;
		
		Для ВидНалога = 1 По 3 Цикл
			НомерКолонки = 3 + ВидНалога*3;
			
			Если СчетчикДоходов = 1 Тогда  // если такой доход один - запишем все на него
				
				СтрокаНалога = "";
				Для СчДоходов = 1 По 4 Цикл
					Если СчДоходов = НомерДохода Тогда
						СтрокаНалога = СтрокаНалога + СокрЛП(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки));
					Иначе
						СтрокаНалога = СтрокаНалога + "0";
					КонецЕсли;
					СтрокаНалога = СтрокаНалога + ";";
				КонецЦикла;
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,СтрокаНалога);
				
			ИначеЕсли СчетчикДоходов &lt;&gt; 0 Тогда // разобьем суммы налогов пропорционально суммам доходов
				
				НалогаКРаспределению = Число(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки));
				Если НалогаКРаспределению - ?(Сч=1,0,глВСуммуИзСтроки_НДФЛ(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки))) = 0 Тогда
					Если (Сч &gt; 1) и (НалогаКРаспределению &gt; 0) Тогда
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки));
					КонецЕсли;
				Иначе
					СписокНалогов = СоздатьОбъект("СписокЗначений");
					НакопленоНалога = 0;
					Если ЗаМесяцПо35 &lt;&gt; 0 Тогда
						Коэф = НалогаКРаспределению / ЗаМесяцПо35;   
						Для СчДоходов = 1 По 4 Цикл
							КодДохода5Раздела = Сред("2610,1210,3020,2740",СчДоходов*5-4,4);
							СуммаДохода = ДоходыПо35ЗаГод.Получить(КодДохода5Раздела);
							Если СуммаДохода &lt;&gt; 0 Тогда
								Распределено = ?(НомерДохода = СчДоходов,НалогаКРаспределению-НакопленоНалога,Мин(НалогаКРаспределению-НакопленоНалога,Окр(СуммаДохода*Коэф)));
								СписокНалогов.Установить(КодДохода5Раздела,Распределено);
								НакопленоНалога = НакопленоНалога+Распределено;
							Иначе
								СписокНалогов.Установить(КодДохода5Раздела,0);
							КонецЕсли;
						КонецЦикла;
						СтрокаНалога = ""+Число(СписокНалогов.Получить("2610"))+";"
						+Число(СписокНалогов.Получить("1210"))+";"
						+Число(СписокНалогов.Получить("3020"))+";"
						+Число(СписокНалогов.Получить("2740"))+";";
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,СтрокаНалога);
					ИначеЕсли (Сч &gt; 1) и (НалогаКРаспределению &gt; 0) Тогда
						ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы-1,НомерКолонки));
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла; // обхода месяцев
	
	Если  ДанныеИзСправочникаИтогов = 1 Тогда
		Пока ЗапросКсправочникуИтогов.Группировка("ГодоМесяц")=1 Цикл
			МесяцДохода = Число(ЗапросКсправочникуИтогов.ГодоМесяц) % 100;
			глСообщениеТрассировки(глСообщенияТрассировки, "За _П01:", 0, 1, Дата(Год,МесяцДохода,15), "ДММММГГГГ");
			// налоги исчисленные
			Налог13и=ЗапросКсправочникуИтогов.НДФЛ13исчисленный;
			НалогДивИ=ЗапросКсправочникуИтогов.НДФЛдивидендыИсчисленный;
			Налог35и_1=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_1;
			Налог35и_2=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_2;
			Налог35и_3=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_3;
			Налог35и_4=ЗапросКсправочникуИтогов.НДФЛ35исчисленный_4;
			глСообщениеТрассировки(глСообщенияТрассировки,"НДФЛ исчисленный по ставке 13% (для нерезидентов - 30%): "+Налог13и, 0, 1);
			глСообщениеТрассировки(глСообщенияТрассировки,"НДФЛ исчисленный с дивидендов: "+НалогДивИ, 0, 0);
			глСообщениеТрассировки(глСообщенияТрассировки,"НДФЛ исчисленный по ставке 35% (для нерезидентов - 30%): "+Формат(Налог35и_1,"Ч15.2")+"+"+Формат(Налог35и_2,"Ч15.2")+"+"+Формат(Налог35и_3,"Ч15.2")+"+"+Формат(Налог35и_4,"Ч15.2"), 0, 0);
			// налоги удержанные                                                                                                                                                                         
			Налог13у=ЗапросКсправочникуИтогов.НДФЛ13удержанный;
			Налог35у_1=ЗапросКсправочникуИтогов.НДФЛ35удержанный_1;
			Налог35у_2=ЗапросКсправочникуИтогов.НДФЛ35удержанный_2;
			Налог35у_3=ЗапросКсправочникуИтогов.НДФЛ35удержанный_3;
			Налог35у_4=ЗапросКсправочникуИтогов.НДФЛ35удержанный_4;
			НалогДивУ=ЗапросКсправочникуИтогов.НДФЛдивидендыУдержанный;
			глСообщениеТрассировки(глСообщенияТрассировки,"НДФЛ удержанный по ставке 13% (для нерезидентов - 30%): "+Налог13у, 0, 0);
			глСообщениеТрассировки(глСообщенияТрассировки,"НДФЛ удержанный с дивидендов: "+НалогДивУ, 0, 0);
			глСообщениеТрассировки(глСообщенияТрассировки,"НДФЛ удержанный по ставке 35% (для нерезидентов - 30%): "+Формат(Налог35у_1,"Ч15.2")+"+"+Формат(Налог35у_2,"Ч15.2")+"+"+Формат(Налог35у_3,"Ч15.2")+"+"+Формат(Налог35у_4,"Ч15.2"), 0, -2);
			// налоги переданные к взысканию
			Налог13КВзысканию=ЗапросКсправочникуИтогов.НДФЛ13КВзысканию;
			Налог35КВзысканию_1=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_1;
			Налог35КВзысканию_2=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_2;
			Налог35КВзысканию_3=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_3;
			Налог35КВзысканию_4=ЗапросКсправочникуИтогов.НДФЛ35КВзысканию_4;
			Налог35КВзысканию = Налог35КВзысканию_1+Налог35КВзысканию_2+Налог35КВзысканию_3+Налог35КВзысканию_4;
			НалогДивКВзысканию=ЗапросКсправочникуИтогов.НДФЛдивидендыКВзысканию;
			// возвращены налоговым агентом излишне удержанные суммы налога
			Налог13Возвращено=ЗапросКсправочникуИтогов.НДФЛ13Возвращено;
			Налог35Возвращено_1=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_1;
			Налог35Возвращено_2=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_2;
			Налог35Возвращено_3=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_3;
			Налог35Возвращено_4=ЗапросКсправочникуИтогов.НДФЛ35Возвращено_4;
			Налог35Возвращено = Налог35Возвращено_1+Налог35Возвращено_2+Налог35Возвращено_3+Налог35Возвращено_4;
			НалогДивВозвращено=ЗапросКсправочникуИтогов.НДФЛдивидендыВозвращено;
			Если Налог13КВзысканию +Налог35КВзысканию +НалогДивКВзысканию &lt;&gt; 0 Тогда
				глСообщениеТрассировки(глСообщенияТрассировки,"Передано на взыскание в ИФНС НДФЛ по ставке 13% (для нерезидентов - 30%): "+Налог13КВзысканию, 0, 0);
				глСообщениеТрассировки(глСообщенияТрассировки,"Передано на взыскание в ИФНС НДФЛ с дивидендов: "+НалогДивКВзысканию, 0, 0);
				глСообщениеТрассировки(глСообщенияТрассировки,"Передано на взыскание в ИФНС НДФЛ по ставке 35% (для нерезидентов - 30%): "+Налог35КВзысканию, 0, -2);
			КонецЕсли;
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцДохода,42)+Налог13Возвращено);
			Для Сч = МесяцДохода По 12 Цикл 
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИ);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИ);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
				//разложим и сложим строку в шестой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				//разложим и сложим строку в девятой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				//разложим и сложим строку в 23 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,10,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,10)+Налог13у);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,11,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,11)+НалогДивУ);
				
				//разложим и сложим строку в 12 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,12,Налог35у_1,Налог35у_2,Налог35у_3,Налог35у_4,СтрокаМесяца);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,16,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,16)+Налог13КВзысканию);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,17,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,17)+НалогДивКВзысканию);
				
				//разложим и сложим строку в 18 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,18,Налог35КВзысканию_1,Налог35КВзысканию_2,Налог35КВзысканию_3,Налог35КВзысканию_4,СтрокаМесяца);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,43,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,43)+НалогДивВозвращено);
				//разложим и сложим строку в 44 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,44,Налог35Возвращено_1,Налог35Возвращено_2,Налог35Возвращено_3,Налог35Возвращено_4,СтрокаМесяца);
				
				
			КонецЦикла; 
		КонецЦикла; // обхода по периодам действия/регистрации
	КонецЕсли;  // обработка данных из справочников
	
	// посчитаем налоги
	МесяцДоРасчетов = ПервыйМесяцРасчетов - 1;
	
	Если (МесяцСменыСтатусаРезидента=0) И (МесяцСменыСтатусаНеРезидента =0) Тогда
		//статус резидента не изменялся, для всего периода применяем одну ставку НДФД 
		
		СтатусНеРезидента = глПолучитьСтатусНеРезидента(Сотрудник,ОкончаниеГода);
		
		Ставка1 = глСтавкаНалогаПоСтатусуНеРезидента(СтатусНеРезидента,ОкончаниеГода,1)/100;
		Ставка2 = глСтавкаНалогаПоСтатусуНеРезидента(СтатусНеРезидента,ОкончаниеГода,2)/100;
		Ставка3 = глСтавкаНалогаПоСтатусуНеРезидента(СтатусНеРезидента,ОкончаниеГода,3)/100;
		
		НалогДивИ = 0;
		Налог35и_1 = 0;
		Налог35и_2 = 0;
		Налог35и_3 = 0;
		Налог35и_4 = 0;
		Налог13и = 0;
		НалогДивИСпр = 0;
		Налог35иСпр_1 = 0;
		Налог35иСпр_2 = 0;
		Налог35иСпр_3 = 0;
		Налог35иСпр_4 = 0;
		Налог13иСпр = 0;
		
		//если до начала расчетов в журнале зарплаты есть доходы (введенные в налоговую карточку) тогда их надо учесть:
		Если МесяцДоРасчетов &gt; 0 Тогда
			Для Сч = 1 По МесяцДоРасчетов Цикл
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
				//по справочникам:
				БазаПоДивидендамСпр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,40)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,40));
				
				Если Резидент = 1 Тогда
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
					Налог13и = Окр(БазаПо13 * Ставка1);
				Иначе
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
					Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
				КонецЕсли;
				
				НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
				
				//разложим :
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";");
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				//по справочникам:
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,41), ";") ;
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,41), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35Спр_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35Спр_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35Спр_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35Спр_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				
				Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
				Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
				Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
				Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
				
				//по справочникам:
				Если Резидент = 1 Тогда
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39);
					Налог13иСпр = Окр(БазаПо13Спр * Ставка1);
				Иначе
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,39));
					Налог13иСпр = Налог13иСпр + Окр(БазаПо13Спр * Ставка1);
				КонецЕсли;
				
				НалогДивИСпр = НалогДивИСпр + Окр(БазаПоДивидендамСпр * Ставка2);
				
				Налог35иСпр_1 = Налог35иСпр_1 + Окр(БазаПо35Спр_1 * Ставка3);
				Налог35иСпр_2 = Налог35иСпр_2 + Окр(БазаПо35Спр_2 * Ставка3);
				Налог35иСпр_3 = Налог35иСпр_3 + Окр(БазаПо35Спр_3 * Ставка3);
				Налог35иСпр_4 = Налог35иСпр_4 + Окр(БазаПо35Спр_4 * Ставка3);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
				//разложим и сложим строку в шестой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в девятой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в 23 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				
			КонецЦикла;
		КонецЕсли;
		
		Налог13иЗаМесяцДоРасчетов = Налог13иСпр;
		НалогДивИЗаМесяцДоРасчетов = НалогДивИСпр;
		Налог35иЗаМесяцДоРасчетов_1 = Налог35иСпр_1;
		Налог35иЗаМесяцДоРасчетов_2 = Налог35иСпр_2;
		Налог35иЗаМесяцДоРасчетов_3 = Налог35иСпр_3;
		Налог35иЗаМесяцДоРасчетов_4 = Налог35иСпр_4;
		
		Для Сч = МесяцДоРасчетов+1 По 12 Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИЗаМесяцДоРасчетов);
			
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
			
			Если Резидент = 1 Тогда
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
				Налог13и = Окр(БазаПо13 * Ставка1);
			Иначе
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
			КонецЕсли;
			
			Если Год &lt;= 2001 Тогда
				НалогДивИ = НалогДивИ + Макс(Окр(БазаПоДивидендам * Ставка2) - ЗачтеноПоДивидендам[Сч],0);
			Иначе
				НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
			КонецЕсли;
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
			
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
			
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
			
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
		КонецЦикла;
		
	ИначеЕсли МесяцСменыСтатусаРезидента &lt;&gt; 0 Тогда
		//	была смена статуса на резидента, все зарплатные доходы с начала года по ставке 13%, остальные доходы по ставке не резидента
		// МесяцСменыСтатусаРезидента от 2 до 12
		
		//
		Ставка30 = Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка9  = Константа.СтавкаНДФЛсДивидендов.Получить(ОкончаниеГода)/100;
		Ставка15 = Константа.СтавкаНДФЛсДивидендовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка35 = Константа.СтавкаНДФЛсПрочихДоходовРезидентов.Получить(ОкончаниеГода)/100;  
		
		Ставка1 = ?(Резидент = 1,Константа.СтавкаНДФЛсЗарплатыРезидентов.Получить(ОкончаниеГода),Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода))/100;
		
		НалогДивИ = 0;
		Налог35и_1 = 0;
		Налог35и_2 = 0;
		Налог35и_3 = 0;
		Налог35и_4 = 0;
		Налог13и = 0;
		НалогДивИСпр = 0;
		Налог35иСпр_1 = 0;
		Налог35иСпр_2 = 0;
		Налог35иСпр_3 = 0;
		Налог35иСпр_4 = 0;
		Налог13иСпр = 0;
		
		//если до начала расчетов в журнале зарплаты есть доходы (введенные в налоговую карточку) тогда их надо учесть:
		Если МесяцДоРасчетов &gt; 0 Тогда
			Для Сч = 1 По МесяцДоРасчетов Цикл
				
				Ставка2 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка9,Ставка15);
				Ставка3 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка35,Ставка30);
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
				//по справочникам:
				БазаПоДивидендамСпр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,40)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,40)); 
				
				НалогДивИ    = НалогДивИ    + Окр(БазаПоДивидендам * Ставка2); 
				НалогДивИСпр = НалогДивИСпр + Окр(БазаПоДивидендамСпр * Ставка2);
				
				Если Резидент = 1 Тогда
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
					Налог13и = Окр(БазаПо13 * Ставка1);
				Иначе
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
					Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
				КонецЕсли;
				
				//по справочникам:
				Если Резидент = 1 Тогда
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39);
					Налог13иСпр = Окр(БазаПо13Спр * Ставка1);
				Иначе
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)
					- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,39));
					Налог13иСпр = Налог13иСпр + Окр(БазаПо13Спр * Ставка1);
				КонецЕсли;
				
				//разложим :
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";");
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				//по справочникам:
				СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,41), ";") ;
				РазмерСписка = СписокИзЧетырех.РазмерСписка();
				Если Сч &lt;&gt; 1 Тогда
					СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,41), ";");
					РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
				КонецЕсли;
				
				БазаПо35Спр_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
				
				БазаПо35Спр_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
				
				БазаПо35Спр_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
				
				БазаПо35Спр_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
				- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
				
				
				Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
				Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
				Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
				Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
				
				Налог35иСпр_1 = Налог35иСпр_1 + Окр(БазаПо35Спр_1 * Ставка3);
				Налог35иСпр_2 = Налог35иСпр_2 + Окр(БазаПо35Спр_2 * Ставка3);
				Налог35иСпр_3 = Налог35иСпр_3 + Окр(БазаПо35Спр_3 * Ставка3);
				Налог35иСпр_4 = Налог35иСпр_4 + Окр(БазаПо35Спр_4 * Ставка3);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
				//разложим и сложим строку в шестой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в девятой колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
				//разложим и сложим строку в 23 колонке
				ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
				
			КонецЦикла;
		КонецЕсли;
		
		Налог13иЗаМесяцДоРасчетов   = Налог13иСпр;
		НалогДивИЗаМесяцДоРасчетов  = НалогДивИСпр;
		Налог35иЗаМесяцДоРасчетов_1 = Налог35иСпр_1;
		Налог35иЗаМесяцДоРасчетов_2 = Налог35иСпр_2;
		Налог35иЗаМесяцДоРасчетов_3 = Налог35иСпр_3;
		Налог35иЗаМесяцДоРасчетов_4 = Налог35иСпр_4;
		
		Для Сч = МесяцДоРасчетов+1 По 12 Цикл
			
			Ставка2 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка9,Ставка15);
			Ставка3 = ?(Сч&gt;=МесяцСменыСтатусаРезидента,Ставка35,Ставка30);
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИЗаМесяцДоРасчетов);
			
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14)); 
			НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка2);
			
			Если Резидент = 1 Тогда
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13);
				Налог13и = Окр(БазаПо13 * Ставка1);
			Иначе
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка1);
			КонецЕсли;
			
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка3);
			
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка3);
			
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка3);
			
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка3);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
		КонецЦикла; 
		
	Иначе // МесяцСменыСтатусаНеРезидента &lt;&gt; 0
		
		// менялся статус с не резидента на прочий статус
		// все зарплатные доходы с месяца изменения статуса по ставке 13%
		// прочие доходы по ставке не резидента
		// МесяцСменыСтатусаНеРезидента от 2 до 12 
		
		Ставка30 = Константа.СтавкаНДФЛсДоходовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка15 = Константа.СтавкаНДФЛсДивидендовНеРезидентов.Получить(ОкончаниеГода)/100;
		Ставка13 = Константа.СтавкаНДФЛсЗарплатыРезидентов.Получить(ОкончаниеГода)/100;
		
		НалогДивИ = 0;
		Налог35и_1 = 0;
		Налог35и_2 = 0;
		Налог35и_3 = 0;
		Налог35и_4 = 0;
		Налог13и = 0;
		НалогДивИСпр = 0;
		Налог35иСпр_1 = 0;
		Налог35иСпр_2 = 0;
		Налог35иСпр_3 = 0;
		Налог35иСпр_4 = 0;
		Налог13иСпр = 0;   
		
		// обработаем прочие доходы и дивиденнды
		Для Сч = 1 По МесяцДоРасчетов Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
			//по справочникам:
			БазаПоДивидендамСпр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,40)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,40));
			
			НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка15);
			
			//разложим :
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";");
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			//по справочникам:
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,41), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,41), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35Спр_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35Спр_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35Спр_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35Спр_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка30);
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка30);
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка30);
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка30);
			
			НалогДивИСпр = НалогДивИСпр + Окр(БазаПоДивидендамСпр * Ставка15);
			
			Налог35иСпр_1 = Налог35иСпр_1 + Окр(БазаПо35Спр_1 * Ставка30);
			Налог35иСпр_2 = Налог35иСпр_2 + Окр(БазаПо35Спр_2 * Ставка30);
			Налог35иСпр_3 = Налог35иСпр_3 + Окр(БазаПо35Спр_3 * Ставка30);
			Налог35иСпр_4 = Налог35иСпр_4 + Окр(БазаПо35Спр_4 * Ставка30);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИСпр);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иСпр_1,Налог35иСпр_2,Налог35иСпр_3,Налог35иСпр_4,СтрокаМесяца);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
			
		КонецЦикла;
		
		
		НалогДивИЗаМесяцДоРасчетов = НалогДивИСпр;
		Налог35иЗаМесяцДоРасчетов_1 = Налог35иСпр_1;
		Налог35иЗаМесяцДоРасчетов_2 = Налог35иСпр_2;
		Налог35иЗаМесяцДоРасчетов_3 = Налог35иСпр_3;
		Налог35иЗаМесяцДоРасчетов_4 = Налог35иСпр_4;
		
		Для Сч = МесяцДоРасчетов+1 По 12 Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,5,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,5)+НалогДивИЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,8,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,8)+НалогДивИЗаМесяцДоРасчетов);
			
			//разложим и сложим строку в шестой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,6,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			//разложим и сложим строку в девятой колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,9,Налог35иЗаМесяцДоРасчетов_1,Налог35иЗаМесяцДоРасчетов_2,Налог35иЗаМесяцДоРасчетов_3,Налог35иЗаМесяцДоРасчетов_4,СтрокаМесяца);
			
			БазаПоДивидендам = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,14)
			- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,14));
			
			НалогДивИ = НалогДивИ + Окр(БазаПоДивидендам * Ставка15);
			
			СписокИзЧетырех = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,15), ";") ;
			РазмерСписка = СписокИзЧетырех.РазмерСписка();
			Если Сч &lt;&gt; 1 Тогда
				СписокИзЧетырех_1 = глРазложить(ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,15), ";");
				РазмерСписка1 = СписокИзЧетырех_1.РазмерСписка();
			КонецЕсли;
			
			БазаПо35_1 = ?(РазмерСписка &lt; 1,0,Число(СписокИзЧетырех.ПолучитьЗначение(1)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 1,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(1))));
			
			БазаПо35_2 = ?(РазмерСписка &lt; 2,0,Число(СписокИзЧетырех.ПолучитьЗначение(2)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 2,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(2))));
			
			БазаПо35_3 = ?(РазмерСписка &lt; 3,0,Число(СписокИзЧетырех.ПолучитьЗначение(3)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 3,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(3))));
			
			БазаПо35_4 = ?(РазмерСписка &lt; 4,0,Число(СписокИзЧетырех.ПолучитьЗначение(4)))
			- ?(Сч = 1,0,?(РазмерСписка1 &lt; 4,0,Число(СписокИзЧетырех_1.ПолучитьЗначение(4))));
			
			
			Налог35и_1 = Налог35и_1 + Окр(БазаПо35_1 * Ставка30);
			
			Налог35и_2 = Налог35и_2 + Окр(БазаПо35_2 * Ставка30);
			
			Налог35и_3 = Налог35и_3 + Окр(БазаПо35_3 * Ставка30);
			
			Налог35и_4 = Налог35и_4 + Окр(БазаПо35_4 * Ставка30);
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,22,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,22)+НалогДивИ);
			//разложим и сложим строку в 23 колонке
			ОбработатьСтрокуВКолонке(ДоходыВычетыНалогиСотрудников,23,Налог35и_1,Налог35и_2,Налог35и_3,Налог35и_4,СтрокаМесяца);
		КонецЦикла;
		
		// обработаем зарплатные доходы		
		
		МесяцДоРасчетовУточненный = МесяцДоРасчетов;
		Если МесяцДоРасчетов &gt; 0 Тогда
			
			Если МесяцСменыСтатусаНеРезидента &lt;= МесяцДоРасчетов Тогда
				МесяцДоРасчетовУточненный = МесяцСменыСтатусаНеРезидента - 1;
			КонецЕсли;
			
			
			Для Сч = 1 По МесяцДоРасчетовУточненный Цикл
				// сотрудник не резиден, т.к. была смена статуса 
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка30);
				
				БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,39));
				Налог13иСпр = Налог13иСпр + Окр(БазаПо13Спр * Ставка30);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				
				
				
			КонецЦикла; 
			
			Налог13иДоСменыСтатуса = Налог13и;
			Налог13иСпрДоСменыСтатуса = Налог13иСпр;
			
			Если МесяцДоРасчетовУточненный &lt;&gt; МесяцДоРасчетов Тогда 
				
				//	расчет по ставке 13%
				Для Сч = МесяцСменыСтатусаНеРезидента По МесяцДоРасчетов Цикл
					
					СтрокаМесяца=НомерСтрокиСотрудника+Сч; 
					
					БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцДоРасчетовУточненный,13);
					Налог13и = Налог13иДоСменыСтатуса + Окр(БазаПо13 * Ставка13);
					
					БазаПо13Спр = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,39)- ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника + МесяцДоРасчетовУточненный,39);
					Налог13иСпр = Налог13иСпрДоСменыСтатуса + Окр(БазаПо13Спр * Ставка13);
					
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иСпр);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иСпр);
					ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
					
					
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Налог13иЗаМесяцДоРасчетов = Налог13иСпр;
		
		ПоследнийМесяц = 12;
		СтатусРезидента = 1;
		СтатусМенялся = 0;
		Если МесяцДоРасчетовУточненный = МесяцДоРасчетов Тогда
			// статус поменялся в периоде за который есть расчеты в жр
			ПоследнийМесяц = МесяцСменыСтатусаНеРезидента - 1;
			СтатусРезидента = 0; //в этом периоде считаем налог по ставке 30%
			СтатусМенялся = 1;
		КонецЕсли;
		
		Для Сч = МесяцДоРасчетов+1 По ПоследнийМесяц Цикл
			
			СтрокаМесяца=НомерСтрокиСотрудника+Сч;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
			
			Если СтатусРезидента = 1 Тогда
				
				БазаПо30 = ?(СтатусМенялся=0,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцСменыСтатусаНеРезидента-1 ,13)); 
				
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)- БазаПо30;
				Налог13и = Окр(БазаПо13 * Ставка13);
			Иначе
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13)
				- ?(Сч = 1,0,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,13));
				Налог13и = Налог13и + Окр(БазаПо13 * Ставка30);
			КонецЕсли;
			
			ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
			
		КонецЦикла;
		
		Налог13иДоСменыСтатуса = Налог13и;
		
		Если СтатусМенялся = 1 Тогда
			
			Для Сч = ПоследнийМесяц+1 По 12 Цикл
				
				СтрокаМесяца=НомерСтрокиСотрудника+Сч;
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,4,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,4)+Налог13иЗаМесяцДоРасчетов);
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,7,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,7)+Налог13иЗаМесяцДоРасчетов);
				
				БазаПо13 = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,13) - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+МесяцСменыСтатусаНеРезидента-1 ,13);
				Налог13и = Налог13иДоСменыСтатуса + Окр(БазаПо13 * Ставка13);
				
				ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,21,ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21)+Налог13и);
				
			КонецЦикла;
			
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Налог13уВсего = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(НомерСтрокиСотрудника+12,10);
	
	Для Сч = 1 По 12 Цикл
		
		СтрокаМесяца=НомерСтрокиСотрудника+Сч;
		
		Налог13и = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,21);
		Налог13у = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца,10);
		Если Сч&gt;1 Тогда
			Налог13и = Макс(0,Налог13и - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,21));
			Налог13у = Макс(0,Налог13у - ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,10));
		КонецЕсли;
		
		Налог13у = Мин(Налог13и,Налог13уВсего);
		Налог13уВсего = Налог13уВсего - Налог13у; 
		
		Если Сч&gt;1 Тогда
			Налог13у = Налог13у + ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаМесяца-1,"НУ1");
		КонецЕсли;
		
		ДоходыВычетыНалогиСотрудников.УстановитьЗначение(СтрокаМесяца,"НУ1",Налог13у);
		
	КонецЦикла;	
	
	ВремТаблицаНДФЛСведенияОДоходах.Сортировать("Физлицо, Период");
	
	ВремТаблицаНДФЛСведенияОДоходах.Свернуть("Период,ПериодРегистрации,ПодразделениеОрганизации,Физлицо,КодДохода,КодВычета,СФ_Наименование,СФ_КВД,СФ_ПодпадаетПодЕНВД,СФ_Баланс,СФ_КБК,КОСГУ,ИсчисленоИзЗарплаты,КПП,КодПоОКАТО,КодПоОКТМО,КоличествоДетей,ДатаПолученияДохода","СуммаДохода,СуммаВычета");
	Если ТаблицаВычетовКДоходам.КоличествоСтрок() &gt; 0 Тогда
		ПереписатьВычетыВТаблицу(ВремТаблицаНДФЛСведенияОДоходах, ТаблицаВычетовКДоходам);	
	КонецЕсли;
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаНДФЛСведенияОДоходах,ТаблицаНДФЛСведенияОДоходах);
	
	ВремТаблицаНДФЛИмущественныеВычетыФизлиц.Свернуть("ФизЛицо,Период,КодВычетаИмущественный,Год,КодПоОКАТО,КодПоОКТМО,КПП,ПодразделениеОрганизации", "Размер");
	глПереписатьИзТаблицыВТаблицу(ВремТаблицаНДФЛИмущественныеВычетыФизлиц,ТаблицаНДФЛИмущественныеВычетыФизлиц);
	
	
КонецЦикла; // обхода сотров и физлиц

ВремТаблицаНДФЛСведенияОДоходах = 0;
ВремТаблицаНДФЛИмущественныеВычетыФизлиц = 0;

Возврат ДоходыВычетыНалогиСотрудников;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляНДФЛВыбор" ИспользуетсяПриЗагрузке="false">
			<Текст>ДатаАктуальности	= ВходящиеДанные;			

Год = ДатаГод(ДатаАктуальности);

Если Год &gt;= 2016 Тогда
	
	Возврат СобратьДанныеДляНДФЛ2016(
	ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,
	Пусто, ВыборкаДанных, Объект, КоллекцияОбъектов, ОбъектКоллекции, ИмяПКО, ИмяПКОВидСубконто,
	НомерПКО, НомерПКС, Правило, КлючВыгружаемыхДанных, НеЗапоминатьВыгруженные, НеЗамещатьОбъектПриЗагрузке,
	ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки, РежимЗаписи, РежимПроведения, СтандартнаяОбработка,
	НеЗамещать, НеОчищать, УзелСсылки, УзелКоллекцииОбъектов, УзелОбъектаКоллекции, УзелСвойства,
	ВидСубконто, Субконто, Отказ);
	
ИначеЕсли Год &gt;= 2011 Тогда
	
	Возврат СобратьДанныеДляНДФЛ2011(
	ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,
	Пусто, ВыборкаДанных, Объект, КоллекцияОбъектов, ОбъектКоллекции, ИмяПКО, ИмяПКОВидСубконто,
	НомерПКО, НомерПКС, Правило, КлючВыгружаемыхДанных, НеЗапоминатьВыгруженные, НеЗамещатьОбъектПриЗагрузке,
	ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки, РежимЗаписи, РежимПроведения, СтандартнаяОбработка,
	НеЗамещать, НеОчищать, УзелСсылки, УзелКоллекцииОбъектов, УзелОбъектаКоллекции, УзелСвойства,
	ВидСубконто, Субконто, Отказ);
	
Иначе 
	
	Возврат СобратьДанныеДляНДФЛ2005(
	ИсходящиеДанные, ВходящиеДанные, Источник, Приемник, ТипПриемника, Значение, Выражение,
	Пусто, ВыборкаДанных, Объект, КоллекцияОбъектов, ОбъектКоллекции, ИмяПКО, ИмяПКОВидСубконто,
	НомерПКО, НомерПКС, Правило, КлючВыгружаемыхДанных, НеЗапоминатьВыгруженные, НеЗамещатьОбъектПриЗагрузке,
	ВсеОбъектыВыгружены, ТолькоПолучитьУзелСсылки, РежимЗаписи, РежимПроведения, СтандартнаяОбработка,
	НеЗамещать, НеОчищать, УзелСсылки, УзелКоллекцииОбъектов, УзелОбъектаКоллекции, УзелСвойства,
	ВидСубконто, Субконто, Отказ);
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляСтраховыхВзносов" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаСтраховыеВзносыСведенияОДоходах	= ИсходящиеДанные;
ТаблицаЕСННачисления					= ВходящиеДанные;
ОбобщенныйСотрудник						= Источник;
ДатаАктуальности						= Приемник;

Год = ДатаГод(ДатаАктуальности);
Месяц = ДатаМесяц(ДатаАктуальности);
Если Год &lt; 2010 Тогда //сообщим, что расчеты поддерживаются с 2010 года
	Сообщить("Страховые взносы введены с 1 января 2010 года!");
	ТекстОшибки		= "Страховые взносы введены с 1 января 2010 года.";
	ТекстДействия	= "Установите период выгрузки страховых взносов с 2010 года.";
	
	Сообщить(ТекстОшибки + " " + ТекстДействия, "!");
	ЗафиксироватьОшибку(ТекстОшибки + "|" + ТекстДействия + "|Не останавливать перенос");
	Возврат 0
КонецЕсли;

// далее в запросах будем использовать список сотрудников
Если ТипЗначения(ОбобщенныйСотрудник)=11  Тогда //здесь был передан элемент справочника - добавим его в только что созданный список
	Сотрудники=СоздатьОбъект("СписокЗначений");
	Сотрудники.ДобавитьЗначение(ОбобщенныйСотрудник);
Иначе //а здесь был передан список элементов - будем использовать непосредственно его
	Сотрудники=ОбобщенныйСотрудник; 
КонецЕсли;
ВсегоСотров = Сотрудники.РазмерСписка();  

// подготовим к сбору данных запросами: начало и окончание периодов 
// осмотра ж.р. по страховым взносам и ручных корректировок в справочнике
ЖрнЗарплата = СоздатьОбъект("ЖурналРасчетов.Зарплата");

ПервыйМесяц = 1;
ПоследнийМесяц = Месяц;
НачалоГода = ЖрнЗарплата.НачалоПериодаПоДате(НачГода(ДатаАктуальности)+15);
КонецПериодаОсмотра = ДатаАктуальности;
Январь=Строка(Год*100+1);
Декабрь=Строка(Год*100 + Месяц);

// запрос к ж.р. по страховым взносам - собираем суммы уже начисленных страховых взносов
глСтатусСтрока(Форма,"Подготовка данных по суммам уже начисленных страховых взносов");
ЗапросПоВзносам=СоздатьОбъект("Запрос");

ТекстЗапроса="//{{ЗАПРОС(ЗапросПоВзносам)
|С НачалоГода по КонецПериодаОсмотра;
|Объект = ЖурналРасчетов.СтраховыеВзносы.Объект;
|ВР = ЖурналРасчетов.СтраховыеВзносы.ВидРасч;
|Результат = ЖурналРасчетов.СтраховыеВзносы.Результат;
|Регистрация = ЖурналРасчетов.СтраховыеВзносы.ДатаОкончания;
|Функция РезультатВР = Сумма(Результат);
|Группировка Объект Без Групп Без Упорядочивания;
|Группировка Регистрация;
|Группировка ВР;";
Если ВсегоСотров = 0 Тогда
ИначеЕсли ВсегоСотров = 1 Тогда
	СотрудникВЗапрос = Сотрудники.ПолучитьЗначение(1);
	ТекстЗапроса=ТекстЗапроса+"
	|Условие(Объект = СотрудникВЗапрос);";
Иначе
	ТекстЗапроса=ТекстЗапроса+"
	|Условие(Объект в Сотрудники);";
КонецЕсли;
ТекстЗапроса=ТекстЗапроса+"
|Условие(Результат &lt;&gt; 0);
|"//}}ЗАПРОС
;

Если ЗапросПоВзносам.Выполнить(ТекстЗапроса)=0 Тогда
	Возврат 0;
КонецЕсли;

// чтобы не обращаться лишний раз в информационную базу,
// составим таблицу соответствия видов расчета из облагаемой базы страховых взносов
// и придуманных нами типов дохода по страховым взносам
глСтатусСтрока(Форма,"Подготовка таблицы соответствия видов расчета и видов дохода по страховым взносам");
СоответствиеВРкодамДоходовСВ = глПолучитьСоответствиеВРкодамДоходовСтраховыхВзносов();

СоответствиеКодСтраховыхВзносовПредставление = СоздатьОбъект("СписокЗначений");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Авторские договора", "Авторские");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Договора подряда", "ДоговорыПодряда");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Лицензионные договора", "Лицензионные");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Отчуждение авторских прав", "ОтчуждениеАвторскихПрав");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Возмещаемые ФСС", "ВозмещаемыеФСС");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Пособия до полутора лет", "ПособиеДоПолутораЛет");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("МатпомощьПриРожденииРебенка", "МатпомощьПриРожденииРебенка");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Материальная помощь", "Матпомощь");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Расходы на выплату страхового обеспечения", "РасходыЗаСчетФСС");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Не является объектом", "НеЯвляетсяОбъектом"); 
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Не облагается целиком", "НеОблагаетсяЦеликом");
СоответствиеКодСтраховыхВзносовПредставление.ДобавитьЗначение("Облагается целиком", "");

//  проинициализируем выходную таблицу значений
ДоходыВычетыНалогиСотрудников=СоздатьОбъект("ТаблицаЗначений");

//  1-ая колонка (строка, 12) - ключевое поле для поиска данных; 
//	состоит из 10 символов табельного номера сотрудника и 2-х символов месяца. 
ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Строка",12); 

// 22 колоноки по основному тарифу
//2-НачисленоВсего
//3-НеЯвляетсяОбъектом
//4-НеОблагаетсяЦеликом
//5-РасходыЗаСчетФСС
//6-ДенежноеДовольствиеВоеннослужащих
//7-ДенежноеСодержаниеПрокуроров
//8-МатпомощьПриРожденииРебенка 
//9-СкидкаМатпомощьПриРожденииРебенка
//10-Матпомощь
//11-СкидкаМатпомощь
//12-ДоговорыПодряда
//13-Авторские, договоры: авторские, лицензионные, отчуждение авторских прав
//14-СкидкаАвторские // скидка по авторским и матпомощи при рождении ребенка

// колоноки по тарифу для инвалидов с 15 по 27
// колоноки по тарифу ЕНВД, с 28 по 40

// с 2012 г колоноки по тарифу моряков или фармацевтов, с 41 по 53 

// с 2013 года колонки для двух доп. тарифов с 54 по 59
// 54...56: Данные для доп. тарифа, подземные и вредные работы
// 57...59: Данные для доп. тарифа, тяжелые условия труда

// точность исчисления налогов 2 знака
Для Сч = 2 По 40 Цикл
	ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
КонецЦикла;  

Если Год&gt;=2012 Тогда
	// добавим колонки для учета моряков и фармацевтов 
	Для Сч = 1 По 13 Цикл
		ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	КонецЦикла;
	
	// добавим колонки для учета доп. тарифов, используются с 2013 года
	Для Сч = 1 По 6 Цикл
		ДоходыВычетыНалогиСотрудников.НоваяКолонка(,"Число",15,2);
	КонецЦикла;
КонецЕсли;

ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаПФР","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаПФРИнвалид","Число",15,2);  
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаПФРЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаДопТариф","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФСС","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФССИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФССЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФОМС","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФОМСИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФОМСЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБаза","ТаблицаЗначений");

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаПФРИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаПФРЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаФССИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаФССЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаФОМСИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаФОМСЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФСС","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФССИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФССЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФФОМС","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФФОМСИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФФОМСЕНВД","Число",15,2);

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоТФОМС","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоТФОМСИнвалид","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоТФОМСЕНВД","Число",15,2);

Если Год &gt;= 2014 Тогда  
	
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФР","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРИнвалид","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРЕНВД","Число",15,2);
	
Иначе
	
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРНак","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРНакИнвалид","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРНакЕНВД","Число",15,2);
	
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРСтрах","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРСтрахИнвалид","Число",15,2);  
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРСтрахЕНВД","Число",15,2);
	
КонецЕсли;

ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоДопТариф","Число",15,2);  

Если Год&gt;=2012 Тогда 
	
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаПФРЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФССЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФОМСЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаПФРЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаФССЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ОграниченнаяБазаФОМСЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФССЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФФОМСЛТ","Число",15,2);
	ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоТФОМСЛТ","Число",15,2);
	Если Год &gt;= 2014 Тогда
		ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРЛТ","Число",15,2);	
	Иначе	
		ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРНакЛТ","Число",15,2);
		ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРСтрахЛТ","Число",15,2);
	КонецЕсли;
	
КонецЕсли;


ДоходыВычетыНалогиСотрудников.НоваяКолонка("ВзиматьВзносыПФРиФСС","Число",1,0);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ТарифИнвалид","Число",1,0); // применяется инвалидный тариф
ДоходыВычетыНалогиСотрудников.НоваяКолонка("Летчик","Число",1,0); 
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоФСС_НС","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФСС_НС","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФСС_НСЕНВД","Число",15,2);// для совместимости
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФСС_НСИнвалид","Число",15,2); 

//с 2012 года
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ВзиматьВзносыФОМСиФСС","Число",1,0);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("НомерШкалыВзносовПФР","Число",1,0);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ЛьготныйТариф","Число",1,0); // 1- моряки, 2- фармацевты
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаФСС_НСЛТ","Число",15,2); //для совместимости
ДоходыВычетыНалогиСотрудников.НоваяКолонка("Инвалид","Число",1,0); // информация об инвалидности, используется для ФСС_НС, с 2012 года Инвалид &lt;&gt; ТарифИнвалид
ДоходыВычетыНалогиСотрудников.НоваяКолонка("СтатусИГ","Строка"); // ВЖ или ВП
ДоходыВычетыНалогиСотрудников.НоваяКолонка("НеНачислятьПФРНак","Число",1,0);

// с 2013 года 
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаДопТарифТяжелыеИПрочиеРаботы","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("БазаДопТарифПодземныеИВредныеРаботы","Число",15,2);
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРЗаЗанятыхНаПодземныхИВредныхРаботах","Число",15,2);	 
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ИсчисленоПФРЗаЗанятыхНаТяжелыхИПрочихРаботах","Число",15,2); 
ДоходыВычетыНалогиСотрудников.НоваяКолонка("ВидРаботСДосрочнойПенсией","Перечисление.ВидыРаботСДосрочнойПенсией");
ДоходыВычетыНалогиСотрудников.НоваяКолонка("СтатусЗастрахованного","Число",1,0);
// 0 - Граждане РФ,
// 1 - ПостоянноПроживающиеИностранцы
// 2 - ВременноПроживающиеИностранцы
// 3 - ВременноПребывающиеИностранцы нет договора
// 4 - ВременноПребывающиеИностранцы есть договор


// запрос к справочнику - данные о ручных корректировках, внесенных
// форму индивидуальной карточки по страховым взносам
глСтатусСтрока(Форма,"Подготовка данных по ручным корректировкам");
ЗапросПоВзносамКСправочникам=СоздатьОбъект("Запрос");

ТекстЗапроса="//{{ЗАПРОС(ПоВзносамКСправочникам)
|Сотр = Справочник.СтраховыеВзносыДоходы.Владелец.ОсновнойЭлемент;
|ГодоМесяц = Справочник.СтраховыеВзносыДоходы.ГодМесяц;
|ВидТарифа = Справочник.СтраховыеВзносыДоходы.ВидТарифа;
|НачисленоВсего = Справочник.СтраховыеВзносыДоходы.НачисленоВсего;
|НеЯвляетсяОбъектом = Справочник.СтраховыеВзносыДоходы.НеЯвляетсяОбъектом;
|НеОблагаетсяЦеликом = Справочник.СтраховыеВзносыДоходы.НеОблагаетсяЦеликом;
|РасходыЗаСчетФСС = Справочник.СтраховыеВзносыДоходы.РасходыЗаСчетФСС;
|ДенежноеДовольствиеВоеннослужащих = Справочник.СтраховыеВзносыДоходы.ДенежноеДовольствиеВоеннослужащих;
|ДенежноеСодержаниеПрокуроров = Справочник.СтраховыеВзносыДоходы.ДенежноеСодержаниеПрокуроров;
|Матпомощь = Справочник.СтраховыеВзносыДоходы.Матпомощь;
|СкидкаМатпомощь = Справочник.СтраховыеВзносыДоходы.СкидкаМатпомощь;
|МатпомощьПриРожденииРебенка = Справочник.СтраховыеВзносыДоходы.МатпомощьПриРожденииРебенка;
|СкидкаМатпомощьПриРожденииРебенка = Справочник.СтраховыеВзносыДоходы.СкидкаМатпомощьПриРожденииРебенка;
|ДоговорыПодряда = Справочник.СтраховыеВзносыДоходы.ДоговорыПодряда;
|Авторские = Справочник.СтраховыеВзносыДоходы.Авторские;
|СкидкаАвторские = Справочник.СтраховыеВзносыДоходы.СкидкаАвторские;
|НачисленоПФРНак = Справочник.СтраховыеВзносыДоходы.ИсчисленоПФРНак;
|НачисленоПФРСтрах = Справочник.СтраховыеВзносыДоходы.ИсчисленоПФРСтрах;
|НачисленоФСС = Справочник.СтраховыеВзносыДоходы.ИсчисленоФСС;
|НачисленоФФОМС = Справочник.СтраховыеВзносыДоходы.ИсчисленоФФОМС;
|НачисленоТФОМС = Справочник.СтраховыеВзносыДоходы.ИсчисленоТФОМС;
|НачисленоДопТариф = Справочник.СтраховыеВзносыДоходы.ИсчисленоДопТариф;
|Группировка Сотр без упорядочивания без групп;
|Группировка ВидТарифа;
|Группировка ГодоМесяц;
|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));";
Если ВсегоСотров &gt; 0 Тогда
	ТекстЗапроса=ТекстЗапроса+"
	|Условие(Сотр в Сотрудники);";
КонецЕсли;
ТекстЗапроса=ТекстЗапроса+"
|"//}}ЗАПРОС
;

Если ЗапросПоВзносамКСправочникам.Выполнить(ТекстЗапроса)=0 Тогда
	Возврат 0;
КонецЕсли;

// запрос к справочнику - данные о ручных корректировках, доходов по доп. тарифам
глСтатусСтрока(Форма,"Подготовка данных по ручным корректировкам");
ЗапросПоДоходамКСправочникам=СоздатьОбъект("Запрос");

ТекстЗапроса="//{{ЗАПРОС(ПоДоходамКСправочникам)
|Сотр = Справочник.СтраховыеВзносыДоходыДопТарифы.Владелец.ОсновнойЭлемент;
|ГодоМесяц = Справочник.СтраховыеВзносыДоходыДопТарифы.ГодМесяц;
|ВидТарифа = Справочник.СтраховыеВзносыДоходыДопТарифы.ВидТарифа;
|НачисленоВсего = Справочник.СтраховыеВзносыДоходыДопТарифы.НачисленоВсего;
|НеОблагаетсяЦеликом = Справочник.СтраховыеВзносыДоходыДопТарифы.НеОблагаетсяЦеликом;
|Скидка = Справочник.СтраховыеВзносыДоходыДопТарифы.Скидка;
|Группировка Сотр без упорядочивания без групп;
|Группировка ВидТарифа;
|Группировка ГодоМесяц;
|Условие((ГодоМесяц &lt;= Декабрь) и (ГодоМесяц &gt;= Январь));";
Если ВсегоСотров &gt; 0 Тогда
	ТекстЗапроса=ТекстЗапроса+"
	|Условие(Сотр в Сотрудники);";
КонецЕсли;
ТекстЗапроса=ТекстЗапроса+"
|"//}}ЗАПРОС
;  

Если ЗапросПоДоходамКСправочникам.Выполнить(ТекстЗапроса)=0 Тогда
	Возврат 0;
КонецЕсли;

Если ВсегоСотров = 0 Тогда // по всем сотрудникам - получим их список для построения выходной таблицы
	ТекстЗапроса =
	"//{{ЗАПРОС(ПодборСотрудников)
	|Сотрудник = Справочник.Сотрудники.ОсновнойЭлемент;
	|Группировка Сотрудник без групп;
	|"//}}ЗАПРОС
	;
	Запрос = СоздатьОбъект("Запрос");
	глСтатусСтрока(Форма,"Обрабатывается справочник Сотрудники");
	ПопытокВыполненияЗапроса = 10;
	Для Сч = 1 По ПопытокВыполненияЗапроса Цикл
		Если Запрос.Выполнить(ТекстЗапроса)=1 Тогда
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если Сч = ПопытокВыполненияЗапроса + 1 Тогда
		Возврат 0;
	КонецЕсли;
	// выгрузим запрос в таблицу, а затем в список
	ВременнаяТаблица = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ВременнаяТаблица,,0);
	ВременнаяТаблица.Выгрузить(Сотрудники,,,"Сотрудник");
	ВременнаяТаблица = "";
	ВсегоСотров = Сотрудники.РазмерСписка()
КонецЕсли;

ИскатьЕНВД		= Константа.ЕстьЕНВД;
ИскатьВоенных	= Константа.ЕстьВоенные;

// и выделения сумм, подпадающих под налогобложение ЕНВД
ТаблицаРаспределенияПоШаблПроводок = СоздатьОбъект("ТаблицаЗначений");
ТаблицаРаспределенияПоШаблПроводок.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок",,,,,,);
ТаблицаРаспределенияПоШаблПроводок.НоваяКолонка("Сумма","Число",15,2,,); 
     
Если Год &gt;= 2014 Тогда 
	ОбходСотрудниковДляСтраховыхВзносов2014(
	ТаблицаСтраховыеВзносыСведенияОДоходах,
	ТаблицаЕСННачисления,
	ВсегоСотров,
	Сотрудники,
	ЗапросПоВзносам,
	ЗапросПоВзносамКСправочникам,
	ДоходыВычетыНалогиСотрудников,
	ЖрнЗарплата,
	Год,
	ПервыйМесяц,
	ПоследнийМесяц,
	ИскатьВоенных,
	ТаблицаРаспределенияПоШаблПроводок,
	ИскатьЕНВД,
	СоответствиеВРкодамДоходовСВ,
	ЗапросПоДоходамКСправочникам);
ИначеЕсли Год &gt;= 2012 Тогда 
	ОбходСотрудниковДляСтраховыхВзносов2012(
	ТаблицаСтраховыеВзносыСведенияОДоходах,
	ТаблицаЕСННачисления,
	ВсегоСотров,
	Сотрудники,
	ЗапросПоВзносам,
	ЗапросПоВзносамКСправочникам,
	ДоходыВычетыНалогиСотрудников,
	ЖрнЗарплата,
	Год,
	ПервыйМесяц,
	ПоследнийМесяц,
	ИскатьВоенных,
	ТаблицаРаспределенияПоШаблПроводок,
	ИскатьЕНВД,
	СоответствиеВРкодамДоходовСВ,
	ЗапросПоДоходамКСправочникам);

ИначеЕсли Год = 2011 Тогда 
	ОбходСотрудниковДляСтраховыхВзносов2011(
	ТаблицаСтраховыеВзносыСведенияОДоходах,
	ТаблицаЕСННачисления,
	ВсегоСотров,
	Сотрудники,
	ЗапросПоВзносам,
	ЗапросПоВзносамКСправочникам,
	ДоходыВычетыНалогиСотрудников,
	ЖрнЗарплата,
	Год,
	ПервыйМесяц,
	ПоследнийМесяц,
	ИскатьВоенных,
	ТаблицаРаспределенияПоШаблПроводок,
	ИскатьЕНВД,
	СоответствиеВРкодамДоходовСВ);
	
Иначе	
	ОбходСотрудниковДляСтраховыхВзносов2010(
		ТаблицаСтраховыеВзносыСведенияОДоходах,
		ТаблицаЕСННачисления,
		ВсегоСотров,
		Сотрудники,
		ЗапросПоВзносам,
		ЗапросПоВзносамКСправочникам,
		ДоходыВычетыНалогиСотрудников,
		ЖрнЗарплата,
		Год,
		ПервыйМесяц,
		ПоследнийМесяц,
		ИскатьВоенных,
		ТаблицаРаспределенияПоШаблПроводок,
		ИскатьЕНВД,
		СоответствиеВРкодамДоходовСВ);
		
КонецЕсли;	
		
Возврат ДоходыВычетыНалогиСотрудников;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляФСС" ИспользуетсяПриЗагрузке="false">
			<Текст>Год													= ИсходящиеДанные;
ТаблицаПособияПоУходуЗаРебенком						= ВходящиеДанные;
ТаблицаПособияСоциальномуСтрахованию				= Источник;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком	= Приемник;

// данные выгружаем не ранее 2007 года
Если Год &lt; 2007 Тогда
	Возврат 1;
КонецЕсли;

ДатаЗапросаС	= Дата(Год, 1, 1);
ДатаЗапросаПо	= ?(КонГода(ДатаЗапросаС) &lt; КонМесяца(ДатаОкончания), КонГода(ДатаЗапросаС), КонМесяца(ДатаОкончания));

СправочникВР = СоздатьОбъект("Справочник.ВидыРасчетов");
СписокПрочихВР = СоздатьОБъект("СписокЗначений");
СписокПрочихВРНС = СоздатьОбъект("СписокЗначений");
// Определяем налоговый режим.
ОсобыйПорядок = глОсобыйНалоговыйРежим(ДатаЗапросаПо);
//		0 - организация обычная
//		1 - организация с УСН, не уплачивающая доброволные взносы
//		2 - организация с ЕНВД, не уплачивающая доброволные взносы
//		3 - организация с УСН с ЕНВД, не уплачивающая доброволные взносы
//		10 - организация с УСН, уплачивающая доброволные взносы
//		20 - организация с ЕНВД, уплачивающая доброволные взносы
//		30 - организация с УСН с ЕНВД, уплачивающая доброволные взносы
ЕстьЕНВД = ?(((ОсобыйПорядок = 2)или(ОсобыйПорядок = 3)или(ОсобыйПорядок= 20)или(ОсобыйПорядок = 30)),1,0);
ЕстьУСН = ?(((ОсобыйПорядок = 1)или(ОсобыйПорядок = 3)или(ОсобыйПорядок = 10)или(ОсобыйПорядок=30)),1,0);
ИскатьЕНВД = ?(((ОсобыйПорядок = 2) или (ОсобыйПорядок= 20)),1,0); //для распределения пособий на ОСН и ЕНВД

ДоходыВычетыНалогиСотрудников = "";
НомерКолонки = 1;
Если ИскатьЕНВД =1 Тогда
	// получение списка сотрудников
	СписокСотрудников = СоздатьОбъект("СписокЗначений");
	СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
	СпрСотрудники.ВыбратьЭлементы();
	Пока СпрСотрудники.ПолучитьЭлемент()=1 Цикл
		Если СпрСотрудники.ЭтоГруппа()=0 Тогда
			Если СпрСотрудники.ОсновнойЭлемент=СпрСотрудники.ТекущийЭлемент() Тогда
				СписокСотрудников.ДобавитьЗначение(СпрСотрудники.ТекущийЭлемент());
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	СписокСотрудников.Сортировать();
	Если глСобратьДанныеДляЕСН(ДоходыВычетыНалогиСотрудников,СписокСотрудников,ДатаЗапросаПо,Контекст,,,,'01.01.2000') = 0 Тогда
		Возврат 1;
	КонецЕсли;  
	НомерКолонки = ДоходыВычетыНалогиСотрудников.КоличествоКолонок();    
КонецЕсли;

// Создаем список ВР обрабатываемых в данном отчете.
СправочникВР.ВыбратьЭлементы();
Пока СправочникВР.ПолучитьЭлемент() = 1 Цикл
	ВР = СправочникВР.Расчет;
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.РасходыЗаСчетФСС) = 0) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмеПоТекущемуМесяцу) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравме) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2004)
	и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2005) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2007) Тогда
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеНачисления) = 1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме) = 1) Тогда
			Если СправочникВР.РасходыЗаСчетФСС = 1 Тогда
				СписокПрочихВР.ДобавитьЗначение(ВР);
			ИначеЕсли (СправочникВР.РасходыЗаСчетФСС_НС = 1) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2005) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2007) Тогда
				СписокПрочихВРНС.ДобавитьЗначение(ВР);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
СправочникВР = ""; 

ДокБольничный="БольничныйЛист";
ТипБолезни = Перечисление.ТипБолезни;

ТекстЗапроса = "//{{ЗАПРОС(ФСС2007)	
|Период с ДатаЗапросаС по ДатаЗапросаПо;
|Сотрудник = ЖурналРасчетов.Зарплата.Объект;
|ВидРасч = ЖурналРасчетов.Зарплата.ВидРасч;
|Результат = ЖурналРасчетов.Зарплата.Результат;
|ПериодРегистрации = ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ДокументЗаписи = ЖурналРасчетов.Зарплата.ТекущийДокумент;
|Дни = ЖурналРасчетов.Зарплата.Дни; 

|Функция СуммаБЛ = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛс2005) или (ВидРасч = ВидРасчета.ОплатаБЛс2007));                                          
|Функция ДниБЛ = Сумма(Дни) Когда(ВидРасч = ВидРасчета.ОплатаБЛс2005);

|Функция СуммаЗаСчетРаботодателя = Сумма(Результат) когда((ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2005) или (ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2007)); 
|Функция ДниЗаСчетРаботодателя = Сумма(Дни) Когда (ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2005);

|Функция СуммаПоБеременностииРодам = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОтпускПоБеременностис2005) или (ВидРасч = ВидРасчета.ОтпускПоБеременностис2007));
|Функция ДниПоБеременностииРодам = Сумма(Дни) Когда (ВидРасч = ВидРасчета.ОтпускПоБеременностис2005);

|Функция СуммаБЛЕНВД = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2005) или (ВидРасч = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2007));
|Функция СуммаЗаСчетРаботодателяЕНВД = Сумма(Результат) Когда ((ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2005) или (ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2007));
|Функция СуммаПоБеременностииРодамЕНВД = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2005) или (ВидРасч = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007));

|Функция СуммаТравматизм = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛпоТравмес2005) или (ВидРасч = ВидРасчета.ОплатаБЛпоТравмес2007));
|Функция ДниТравматизм = Сумма(Дни) когда(ВидРасч = ВидРасчета.ОплатаБЛпоТравмес2005);

|Функция СуммаПоУходуДоПолутора = Сумма(Результат) когда ((ВидРасч = ВидРасчета.ПособиеПоУходуЗаРебенкомФСС) или (ВидРасч = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007));

|Функция СуммаНаПогребение = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.НаПогребение));
|Функция ДниНаПогребение = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.НаПогребение));

|Функция СуммаПоУходуЗаИнвалидами = Сумма(Результат) когда((ВидРасч = ВидРасчета.ОплатаЛьготныхДнейРодителей));
|Функция ДниПоУходуЗаИнвалидами = Сумма(Дни) когда((ВидРасч = ВидРасчета.ОплатаЛьготныхДнейРодителей));

|Функция СуммаВРанниеСрокиБеременности = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.Беременным));
|Функция ДниВРанниеСрокиБеременности = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.Беременным));

|Функция СуммаПриРожденииРебенка = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриРожденииРебенка));
|Функция ДниПриРожденииРебенка = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриРожденииРебенка));

|Функция СуммаПриУсыновленииРебенка = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриУсыновленииРебенка));
|Функция ДниПриУсыновленииРебенка = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриУсыновленииРебенка));" + 

?(СписокПрочихВР.РазмерСписка()&gt;0,"
|Функция ПрочиеРасходы = Сумма(Результат) когда (ВидРасч в СписокПрочихВР);","")+

?(СписокПрочихВРНС.РазмерСписка()&gt;0,"
|Функция ПрочиеРасходыНС = Сумма(Результат) когда (ВидРасч в СписокПрочихВРНС);","")+"  

|Группировка ПериодРегистрации;
|Группировка Сотрудник без групп;
|Группировка ДокументЗаписи;
|Условие((Результат&lt;&gt;0) или (Дни &lt;&gt; 0));
|"//}}ЗАПРОС
;

ЗапросФСС = СоздатьОбъект("Запрос");
Если ЗапросФСС.Выполнить(ТекстЗапроса) = 0 тогда
	Возврат 1;
КонецЕсли;    

ЖурналЗарплата=СоздатьОбъект("ЖурналРасчетов.Зарплата"); 

ТаблицаПоШаблонам=СоздатьОбъект("ТаблицаЗначений");
ТаблицаПоШаблонам.НоваяКолонка("Шаблон");
ТаблицаПоШаблонам.НоваяКолонка("Сумма","Число",15,2); 

СпрШаблонов = СоздатьОбъект("Справочник.ШаблоныПроводок");
СпрШаблонов.НайтиПоНаименованию("Не отражать в бухгалтерском учете"); 
НеРаспределять = СпрШаблонов.ТекущийЭлемент();   

СписокОбработанныхОтпусков = СоздатьОбъект("СписокЗначений");

Пока ЗапросФСС.Группировка(1) = 1 Цикл    

	Месяц = ДатаМесяц(ЗапросФСС.ПериодРегистрации.ДатаОкончания);
	ПериодРегистрации = ЗапросФСС.ПериодРегистрации.ДатаНачала;
	
	Пока ЗапросФСС.Группировка(2) = 1 Цикл
		
		РасходыЕНВД = 0;
		
		Сотрудник = ЗапросФСС.Сотрудник; 
		
		Если ИскатьЕНВД = 1 Тогда  
			
			СтрокаИтоговойТаблицы = ""; 
			ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(Сотрудник) + глДополнитьСтроку(Месяц,2),СтрокаИтоговойТаблицы,1);     
			
			БазаФСС = 0;
			НачисленоПоЕНВД = 0;
			Если СтрокаИтоговойТаблицы &lt;&gt; 0 Тогда
				БазаФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,4); 
				БазаНачисленоПоЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,НомерКолонки); 
			КонецЕсли;					                                                                        
			
			Если (БазаФСС=0) и (БазаНачисленоПоЕНВД&lt;&gt;0) Тогда
				РасходыЕНВД = 1;
			КонецЕсли;
			   
		КонецЕсли;
		
		
		Пока ЗапросФСС.Группировка(3)=1 Цикл 
			
			ДокументЗаписи = ЗапросФСС.ДокументЗаписи;
			ВидСотрудника = ПолучитьВидРаботыСотрудника(Сотрудник,ДокументЗаписи);
			ВидЗанятости = ?(ВидСотрудника = 2,"Совместительство","ОсновноеМестоРаботы");
			
			ДатаНачалаСобытия = ПолучитьДатуНачалаСобытия(ДокументЗаписи);
			НовыйСтраховойСлучай = 0;
			
			Если (ДокументЗаписи.Вид()="БольничныйЛист") Тогда
				Если ПустоеЗначение(ДокументЗаписи.ПервичныйБольничный)=1 Тогда
					НовыйСтраховойСлучай = 1;
				КонецЕсли;
			КонецЕсли;
			
			Если (ЗапросФСС.СуммаБЛ &lt;&gt; 0) или (ЗапросФСС.СуммаЗаСчетРаботодателя&lt;&gt;0) Тогда
				
				ДниРаботодателя = 0;
				ДниФСС = 0;
				Если ДокументЗаписи.Окончание &gt;= '01.01.2007' Тогда 
					
					ДнейОплаты = ДокументЗаписи.ДнейОплаты;
					Если (ДокументЗаписи.ТипБолезни = Перечисление.ТипБолезни.ОбщееЗаболевание) и 
					((ОсобыйПорядок=0) или (ОсобыйПорядок=2) или (ОсобыйПорядок=20)) и (ЗапросФСС.СуммаЗаСчетРаботодателя&lt;&gt;0)  Тогда
						
						Если ДокументЗаписи.ПервичныйБольничный.Выбран() = 1 Тогда
							
							ПервичныйБЛ = глПолучитьПервичныйБольничный(ДокументЗаписи);
							ДнейОплатыПервичныйБЛ = ПервичныйБЛ.ДнейОплаты;
							
							ДниРаботодателя = ?(ДнейОплатыПервичныйБЛ &gt; 2, 0, 2 - ДнейОплатыПервичныйБЛ);
							
						Иначе 
							
							ДниРаботодателя = Мин(2,ДнейОплаты);
							
						КонецЕсли;
				   
					КонецЕсли; 
					
					ДниФСС = ДнейОплаты - ДниРаботодателя;
					
					Если ЗапросФСС.СуммаБЛ&lt;0 Тогда
						ДниФСС = -1*ДниФСС;
					КонецЕсли;
					Если ЗапросФСС.СуммаЗаСчетРаботодателя&lt;0 Тогда
						ДниРаботодателя = -1*ДниРаботодателя;    
					КонецЕсли;
					
				Иначе  //больничный за 2006 год
					ДниФСС = ЗапросФСС.ДниБЛ;
					ДниРаботодателя = ЗапросФСС.ДниЗаСчетРаботодателя
				КонецЕсли;
				
				Если ДниФСС &lt;&gt;0 Тогда 
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"Нетрудоспособность",
						0,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниФСС,
						ЗапросФСС.СуммаБЛ,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию);
				КонецЕсли;
				
				Если ДниРаботодателя &lt;&gt;0 Тогда
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"",
						0,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниРаботодателя,
						ЗапросФСС.СуммаЗаСчетРаботодателя,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию);
				КонецЕсли;
				
			КонецЕсли;                   
			
			Если (ЗапросФСС.СуммаПоБеременностииРодам &lt;&gt; 0) Тогда 
				
				//посчитаем дни, до 2007 года рабочие дни из запроса
				//с 2007 года календарные дни из документа 
				ДниФСС = 0;
				Если ДокументЗаписи.Окончание &gt;= '01.01.2007' Тогда 
					ДниФСС = ДокументЗаписи.ДнейОплаты;
					Если ЗапросФСС.СуммаПоБеременностииРодам&lt;0 Тогда
						ДниФСС = -1*ДниФСС;    
					КонецЕсли;
				Иначе
					ДниФСС = ЗапросФСС.ДниПоБеременностииРодам;
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"БеременностьРоды",
					0,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаПоБеременностииРодам,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаБЛЕНВД &lt;&gt; 0 Тогда
				
				//посчитаем дни, до 2007 года рабочие дни из запроса
				//с 2007 года календарные дни из документа 
				ДниФСС = 0;
				Если ДокументЗаписи.Окончание &gt;= '01.01.2007' Тогда 
					
					ДниФСС = ДокументЗаписи.ДнейОплаты;
					Если (ЗапросФСС.СуммаБЛЕНВД&lt;0) или (ЗапросФСС.СуммаЗаСчетРаботодателяЕНВД&lt;0) Тогда
						ДниФСС = -1*ДниФСС;    
					КонецЕсли;
				Иначе
					ДниФСС = ЗапросФСС.ДниБЛ;
				КонецЕсли; 
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"Нетрудоспособность",
					1,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаБЛЕНВД,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
					
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"",
					1,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаЗаСчетРаботодателяЕНВД,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
				
			КонецЕсли;  
			
			Если ЗапросФСС.СуммаПоБеременностииРодамЕНВД &lt;&gt; 0 Тогда  
				
				СуммаПоБеременностииРодамЕНВД = СуммаПоБеременностииРодамЕНВД + ЗапросФСС.СуммаПоБеременностииРодамЕНВД; 
				
				//посчитаем дни, до 2007 года рабочие дни из запроса
				//с 2007 года календарные дни из документа 
				ДниФСС = 0;
				Если ДокументЗаписи.Окончание &gt;= '01.01.2007' Тогда 
					ДниФСС = ДокументЗаписи.ДнейОплаты;
					Если ЗапросФСС.СуммаПоБеременностииРодам&lt;0 Тогда
						ДниФСС = -1*ДниФСС;    
					КонецЕсли;
				Иначе
					ДниФСС = ЗапросФСС.ДниПоБеременностииРодам;
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"БеременностьРоды",
					1,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаПоБеременностииРодамЕНВД,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;	
			
			Если (ЗапросФСС.СуммаТравматизм &lt;&gt; 0) Тогда 
				
				СуммаТравматизм = СуммаТравматизм + ЗапросФСС.СуммаТравматизм;
				
				//посчитаем дни, до 2007 года рабочие дни из запроса
				//с 2007 года календарные дни из документа 
				ДниФСС = 0;
				Если ДокументЗаписи.Окончание &gt;= '01.01.2007' Тогда  
					ДниФСС = ДокументЗаписи.ДнейОплаты;
					Если ЗапросФСС.СуммаТравматизм &lt; 0 Тогда
						ДниФСС = -1*ДниФСС;    
					КонецЕсли;
				Иначе
					ДниФСС = ЗапросФСС.ДниТравматизм;
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"НетрудоспособностьНесчастныйСлучай",
					0,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаТравматизм,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
			Если ЗапросФСС.СуммаПоУходуДоПолутора&lt;&gt;0 Тогда 
				
				СуммаРез = ЗапросФСС.СуммаПоУходуДоПолутора;
				СуммаПодЕНВД = 0; 
				ДатаНачалаПериода=Дата(0);
				ДатаОкончанияПериода=Дата(0);
				Если ДокументЗаписи.Вид()="ОтпускПоУходуЗаРебенком" Тогда 
					ЖурналЗарплата.ВыбратьПериодПоОбъекту(ДокументЗаписи.Сотрудник,ЗапросФСС.ПериодРегистрации.ДатаОкончания);
					Пока ЖурналЗарплата.ПолучитьЗапись()=1 Цикл
						Если ЖурналЗарплата.Документ&lt;&gt;ДокументЗаписи Тогда
							Продолжить;
						Иначе
							Если ЖурналЗарплата.ВидРасч = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007 Тогда 
								ДатаНачалаПериода=ЖурналЗарплата.ДатаНачала;
								ДатаОкончанияПериода=ЖурналЗарплата.ДатаОкончания;
								глИзвлечьРаспределениеИзДокаОСреднем(ДокументЗаписи.Сотрудник,1,ДокументЗаписи,ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007,СуммаРез,ТаблицаПоШаблонам,НеРаспределять);
								Для Сч = 1 По ТаблицаПоШаблонам.КоличествоСтрок() Цикл
									ТаблицаПоШаблонам.ПолучитьСтрокуПоНомеру(Сч);
									Если ТаблицаПоШаблонам.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
										СуммаПодЕНВД = СуммаПодЕНВД + ТаблицаПоШаблонам.Сумма;
									КонецЕсли;
								КонецЦикла;
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				СуммаНеЕНВД = СуммаРез - СуммаПодЕНВД; 
				ДоляЕНВД    = СуммаПодЕНВД / СуммаРез;
				
				//дни - это количество случаев
				Дни1=0;
				Дни2=0;  
				Дни=0;
				Сумма1=0;
				Сумма2=0;			
				Если ДокументЗаписи.Вид()="ОтпускПоУходуЗаРебенком" Тогда 
					
					РассчитатьОтпускПоУходу(Дни1,Дни2,Дни,Сумма1,Сумма2,СуммаРез,ДокументЗаписи,ДатаНачалаПериода,ДатаОкончанияПериода,Сотрудник);
				
				КонецЕсли;	
				
				Если СуммаРез &gt; 0 Тогда 
					
					ДниПоУходуДоПолутора         = ДниПоУходуДоПолутора + Дни;
					ДниПоУходуДоПолутораПервый   = ДниПоУходуДоПолутораПервый + Дни1;
					ДниПоУходуДоПолутораВторой   = ДниПоУходуДоПолутораВторой + Дни2; 
					
					ДниПоУходуДоПолутораЕНВД         = ДниПоУходуДоПолутораЕНВД + ?(СуммаПодЕНВД=0,0,Дни);
					ДниПоУходуДоПолутораЕНВДПервый   = ДниПоУходуДоПолутораЕНВДПервый + ?(СуммаПодЕНВД=0,0,Дни1);
					ДниПоУходуДоПолутораЕНВДВторой   = ДниПоУходуДоПолутораЕНВДВторой + ?(СуммаПодЕНВД=0,0,Дни2);
					
					
				Иначе
					
					ДниПоУходуДоПолутора   = ДниПоУходуДоПолутора - Дни;
					ДниПоУходуДоПолутораПервый   = ДниПоУходуДоПолутораПервый - Дни1;
					ДниПоУходуДоПолутораВторой   = ДниПоУходуДоПолутораВторой - Дни2;
					
					ДниПоУходуДоПолутораЕНВД         = ДниПоУходуДоПолутораЕНВД - ?(СуммаПодЕНВД=0,0,Дни);
					ДниПоУходуДоПолутораЕНВДПервый   = ДниПоУходуДоПолутораЕНВДПервый - ?(СуммаПодЕНВД=0,0,Дни1);
					ДниПоУходуДоПолутораЕНВДВторой   = ДниПоУходуДоПолутораЕНВДВторой - ?(СуммаПодЕНВД=0,0,Дни2);
					
				КонецЕсли;
				
				Если ВидСотрудника = 3 Тогда
					//студент
				
				Иначе //работающий сотрудник
					
					ДниПоУходуДоПолутораРаботающий       = ДниПоУходуДоПолутораРаботающий + ?(СуммаНеЕНВД&gt;0,Дни,-1*Дни);
					СуммаПоУходуДоПолутораРаботающий     = СуммаПоУходуДоПолутораРаботающий + СуммаНеЕНВД;
					СуммаПоУходуДоПолутораЕНВДРаботающий = СуммаПоУходуДоПолутораЕНВДРаботающий + СуммаПодЕНВД;
					
					Сумма1ЕНВД = Окр(Сумма1 * ДоляЕНВД,2);
					СуммаПоУходуДоПолутораПервый     = СуммаПоУходуДоПолутораПервый + Сумма1 - Сумма1ЕНВД;
					СуммаПоУходуДоПолутораЕНВДПервый = СуммаПоУходуДоПолутораЕНВДПервый + Сумма1ЕНВД;
					
					Сумма2ЕНВД = Окр(Сумма2 * ДоляЕНВД,2);
					СуммаПоУходуДоПолутораВторой     = СуммаПоУходуДоПолутораВторой + Сумма2 - Сумма2ЕНВД;
					СуммаПоУходуДоПолутораЕНВДВторой = СуммаПоУходуДоПолутораЕНВДВторой + Сумма2ЕНВД;
					
					
					
				КонецЕсли;   
				
				Если СуммаНеЕНВД &lt;&gt; 0 Тогда 
					
					Если Дни1 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							0,
							1,
							?(СуммаРез &gt; 0,Дни1,-1*Дни1),
							Сумма1 - Сумма1ЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
					Если Дни2 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							0,
							0,
							?(СуммаРез &gt; 0,Дни2,-1*Дни2),
							Сумма2 - Сумма2ЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
				КонецЕсли;
				
				Если СуммаПодЕНВД &lt;&gt; 0 Тогда 
					
					Если Дни1 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							1,
							1,
							?(СуммаРез &gt; 0,Дни1,-1*Дни1),
							Сумма1ЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
					Если Дни2 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							1,
							0,
							?(СуммаРез &gt; 0,Дни2,-1*Дни2),
							Сумма2ЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
				КонецЕсли;
							
				Единица = ?(СуммаРез &gt; 0, 1 ,-1);  
				
				Если (ДокументЗаписи.Вид()="ОтпускПоУходуЗаРебенком") Тогда			
					
					Получатель = ДокументЗаписи.Сотрудник;
					
					Если (СписокОбработанныхОтпусков.НайтиЗначение(Получатель)=0) Тогда
						
						СписокОбработанныхОтпусков.ДобавитьЗначение(Получатель);
						//соберем списки среднего заработка
						
						ДанныеОтпуска = ДокументЗаписи.ДанныеОтпускаПоУходуЗаРебенком;
						СреднедневнойЗаработок = ДанныеОтпуска.СреднийЗаработок;
						СреднийЗаработок = Окр(СреднедневнойЗаработок*365/12,2); 
						
						Если ДоляЕНВД&lt;&gt;1 Тогда
							ЗаполнитьТаблицуЗаработкиПолучателейПособияПоУходу(
							ПериодРегистрации,
							0,
							Сотрудник,
							Сотрудник,
							СреднийЗаработок,
							ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком);
						КонецЕсли;  
						
						Если ДоляЕНВД&lt;&gt;0 Тогда
							ЗаполнитьТаблицуЗаработкиПолучателейПособияПоУходу(
							ПериодРегистрации,
							1,
							Сотрудник,
							Сотрудник,
							СреднийЗаработок,
							ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком);
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
															   
			Если ЗапросФСС.СуммаНаПогребение&lt;&gt;0 Тогда
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ВСвязиСоСмертью",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					ЗапросФСС.ДниНаПогребение,
					ЗапросФСС.СуммаНаПогребение,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаПоУходуЗаИнвалидами&lt;&gt;0 Тогда
				
				Если ЕстьЕНВД = 1 Тогда 
					СуммаПодЕНВД = 0; //сумма под ЕНВД 
					СуммаПособия = ЗапросФСС.СуммаПоУходуЗаИнвалидами;
					глИзвлечьРаспределениеИзДокаОСреднем(Сотрудник,1,ДокументЗаписи,ВидРасчета.ОплатаЛьготныхДнейРодителей,СуммаПособия,ТаблицаПоШаблонам,НеРаспределять);
					// получили таблицу ТаблицаПоШаблонам, в которой  СуммаСреднегоЗаработка уже распределена по шаблонам проводок. 
					// осталось выяснить какие из них подпадают под ЕНВД (остальные относятся к расходам, облагаемым ННП или УСН) 
					// разделим по проводкам среднедневной заработок
					Для Сч = 1 По ТаблицаПоШаблонам.КоличествоСтрок() Цикл
						ТаблицаПоШаблонам.ПолучитьСтрокуПоНомеру(Сч);
						Если ТаблицаПоШаблонам.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
							СуммаПодЕНВД = СуммаПодЕНВД + ТаблицаПоШаблонам.Сумма;
						КонецЕсли;
					КонецЦикла;
					ДоляЕНВД=?(СуммаПособия=0,0,ОКР(СуммаПодЕНВД/СуммаПособия,5));
					
					СуммаПособияЕНВД = СуммаПособия*ДоляЕНВД;
					СуммаПособияНеЕНВД = СуммаПособия - СуммаПособияЕНВД;
					
					Если СуммаПособияНеЕНВД&lt;&gt;0 Тогда 
						ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
							ПериодРегистрации,
							"ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами",
							0,
							ВидЗанятости,
							1,
							ЗапросФСС.ДниПоУходуЗаИнвалидами,
							СуммаПособияНеЕНВД,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияСоциальномуСтрахованию);
					КонецЕсли;		
							
					Если СуммаПособияЕНВД&lt;&gt;0 Тогда 
						ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
							ПериодРегистрации,
							"ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами",
							1,
							ВидЗанятости,
							1,
							ЗапросФСС.ДниПоУходуЗаИнвалидами,
							СуммаПособияЕНВД,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияСоциальномуСтрахованию);
					КонецЕсли;
					
				Иначе
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами",
						0,
						ВидЗанятости,
						1,
						ЗапросФСС.ДниПоУходуЗаИнвалидами,
						ЗапросФСС.СуммаПоУходуЗаИнвалидами,
						Сотрудник,
						ПериодРегистрации,
						ТаблицаПособияСоциальномуСтрахованию);
						
				КонецЕсли;
				
				
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаВРанниеСрокиБеременности&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаВРанниеСрокиБеременности&gt;0,ЗапросФСС.ДниВРанниеСрокиБеременности,-1*ЗапросФСС.ДниВРанниеСрокиБеременности);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриПостановкеНаУчетВРанниеСрокиБеременности",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаВРанниеСрокиБеременности,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаПриРожденииРебенка&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаПриРожденииРебенка&gt;0,ЗапросФСС.ДниПриРожденииРебенка,-1*ЗапросФСС.ДниПриРожденииРебенка);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриРожденииРебенка",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаПриРожденииРебенка,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
			Если ЗапросФСС.СуммаПриУсыновленииРебенка&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаПриУсыновленииРебенка&gt;0,ЗапросФСС.ДниПриУсыновленииРебенка,-1*ЗапросФСС.ДниПриУсыновленииРебенка);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриУсыновленииРебенка",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаПриУсыновленииРебенка,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляФСС2010" ИспользуетсяПриЗагрузке="false">
			<Текст>Год													= ИсходящиеДанные;
ТаблицаПособияПоУходуЗаРебенком						= ВходящиеДанные;
ТаблицаПособияСоциальномуСтрахованию				= Источник;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком	= Приемник;

ДатаЗапросаС	= Дата(Год, 1, 1);
ДатаЗапросаПо	= ?(КонГода(ДатаЗапросаС) &lt; КонМесяца(ДатаОкончания), КонГода(ДатаЗапросаС), КонМесяца(ДатаОкончания));

СправочникВР = СоздатьОбъект("Справочник.ВидыРасчетов");
СписокПрочихВР = СоздатьОБъект("СписокЗначений");
СписокПрочихВРНС = СоздатьОбъект("СписокЗначений");

ЕстьЕНВД = Константа.ЕстьЕНВД; 

ДоходыВычетыНалогиСотрудников = "";
Если ЕстьЕНВД = 1 Тогда
	// получение списка сотрудников
	СписокСотрудников = СоздатьОбъект("СписокЗначений");
	СпрСотрудники = СоздатьОбъект("Справочник.Сотрудники");
	СпрСотрудники.ВыбратьЭлементы();
	Пока СпрСотрудники.ПолучитьЭлемент()=1 Цикл
		Если СпрСотрудники.ЭтоГруппа()=0 Тогда
			Если СпрСотрудники.ОсновнойЭлемент=СпрСотрудники.ТекущийЭлемент() Тогда
				СписокСотрудников.ДобавитьЗначение(СпрСотрудники.ТекущийЭлемент());
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	СписокСотрудников.Сортировать();
	Если глСобратьДанныеДляСтраховыхВзносов(ДоходыВычетыНалогиСотрудников,СписокСотрудников,ДатаЗапросаПо,Контекст,,,,1) = 0 Тогда
		Возврат 0
	КонецЕсли;
КонецЕсли;

// Создаем список ВР обрабатываемых в данном отчете.
СправочникВР.ВыбратьЭлементы();
Пока СправочникВР.ПолучитьЭлемент() = 1 Цикл
	ВР = СправочникВР.Расчет;
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.РасходыЗаСчетФСС) = 0) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмеПоТекущемуМесяцу) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравме) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2004)
	и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2005) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2007)
	и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2010)
	и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2011) Тогда
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеНачисления) = 1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме) = 1) Тогда
			Если СправочникВР.РасходыЗаСчетФСС = 1 Тогда
				СписокПрочихВР.ДобавитьЗначение(ВР);
			ИначеЕсли (СправочникВР.РасходыЗаСчетФСС_НС = 1) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2005)
			и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2007) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2010)
			и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2011) Тогда
				СписокПрочихВРНС.ДобавитьЗначение(ВР);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
СправочникВР = ""; 

ДокБольничный="БольничныйЛист";
ТипБолезни = Перечисление.ТипБолезни;

ТекстЗапроса = "//{{ЗАПРОС(ФСС2010)	
|Период с ДатаЗапросаС по ДатаЗапросаПо;
|Сотрудник = ЖурналРасчетов.Зарплата.Объект;
|ВидРасч = ЖурналРасчетов.Зарплата.ВидРасч;
|Результат = ЖурналРасчетов.Зарплата.Результат;
|ПериодРегистрации = ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ДокументЗаписи = ЖурналРасчетов.Зарплата.ТекущийДокумент;
|Дни = ЖурналРасчетов.Зарплата.Дни; 

|Функция СуммаБЛ = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛс2010) или (ВидРасч = ВидРасчета.ОплатаБЛс2007));                                          

|Функция СуммаЗаСчетРаботодателя = Сумма(Результат) когда((ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2010) или (ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2007)); 

|Функция СуммаПоБеременностииРодам = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОтпускПоБеременностис2010) или (ВидРасч = ВидРасчета.ОтпускПоБеременностис2007));

|Функция СуммаБЛЕНВД = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2010) или (ВидРасч = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2007));
|Функция СуммаЗаСчетРаботодателяЕНВД = Сумма(Результат) Когда ((ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2010) или (ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2007));
|Функция СуммаПоБеременностииРодамЕНВД = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2010) или (ВидРасч = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2007));

|Функция СуммаТравматизм = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛпоТравмес2010) или (ВидРасч = ВидРасчета.ОплатаБЛпоТравмес2007));

|Функция СуммаПоУходуДоПолутора = Сумма(Результат) когда (ВидРасч = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007);

|Функция СуммаНаПогребение = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.НаПогребение));
|Функция ДниНаПогребение = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.НаПогребение));

|Функция СуммаПоУходуЗаИнвалидами = Сумма(Результат) когда((ВидРасч = ВидРасчета.ОплатаЛьготныхДнейРодителей));
|Функция ДниПоУходуЗаИнвалидами = Сумма(Дни) когда((ВидРасч = ВидРасчета.ОплатаЛьготныхДнейРодителей));

|Функция СуммаВРанниеСрокиБеременности = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.Беременным));
|Функция ДниВРанниеСрокиБеременности = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.Беременным));

|Функция СуммаПриРожденииРебенка = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриРожденииРебенка));
|Функция ДниПриРожденииРебенка = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриРожденииРебенка));

|Функция СуммаПриУсыновленииРебенка = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриУсыновленииРебенка));
|Функция ДниПриУсыновленииРебенка = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриУсыновленииРебенка));" + 

?(СписокПрочихВР.РазмерСписка()&gt;0,"
|Функция ПрочиеРасходы = Сумма(Результат) когда (ВидРасч в СписокПрочихВР);","")+

?(СписокПрочихВРНС.РазмерСписка()&gt;0,"
|Функция ПрочиеРасходыНС = Сумма(Результат) когда (ВидРасч в СписокПрочихВРНС);","")+"  

|Группировка ПериодРегистрации;
|Группировка Сотрудник без групп;
|Группировка ДокументЗаписи;
|Условие((Результат&lt;&gt;0) или (Дни &lt;&gt; 0));
|"//}}ЗАПРОС
;

ЗапросФСС = СоздатьОбъект("Запрос");
Если ЗапросФСС.Выполнить(ТекстЗапроса) = 0 тогда
	Возврат 1;
КонецЕсли;    

ЖурналЗарплата=СоздатьОбъект("ЖурналРасчетов.Зарплата"); 

ТаблицаПоШаблонам=СоздатьОбъект("ТаблицаЗначений");
ТаблицаПоШаблонам.НоваяКолонка("Шаблон");
ТаблицаПоШаблонам.НоваяКолонка("Сумма","Число",15,2); 

СпрШаблонов = СоздатьОбъект("Справочник.ШаблоныПроводок");
СпрШаблонов.НайтиПоНаименованию("Не отражать в бухгалтерском учете"); 
НеРаспределять = СпрШаблонов.ТекущийЭлемент();   

СписокОбработанныхОтпусков = СоздатьОбъект("СписокЗначений");

Пока ЗапросФСС.Группировка(1) = 1 Цикл    

	Месяц = ДатаМесяц(ЗапросФСС.ПериодРегистрации.ДатаОкончания);
	ПериодРегистрации = ЗапросФСС.ПериодРегистрации.ДатаНачала;
	
	Пока ЗапросФСС.Группировка(2) = 1 Цикл
		
		РасходыЕНВД = 0;
		
		Сотрудник = ЗапросФСС.Сотрудник; 
		
		Если ЕстьЕНВД = 1 Тогда  
			
			СтрокаИтоговойТаблицы = ""; 
			ДоходыВычетыНалогиСотрудников.НайтиЗначение(глПолучитьУникальныйКодСотрудника(Сотрудник) + глДополнитьСтроку(Месяц,2),СтрокаИтоговойТаблицы,1);     
			
			БазаФСС = 0;
			НачисленоПоЕНВД = 0;
			Если СтрокаИтоговойТаблицы &lt;&gt; 0 Тогда
				БазаФСС = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"БазаФСС")+ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"БазаФССИнвалид"); 
				БазаНачисленоПоЕНВД = ДоходыВычетыНалогиСотрудников.ПолучитьЗначение(СтрокаИтоговойТаблицы,"БазаФССЕНВД"); 
			КонецЕсли;					                                                                        
			
			Если (БазаФСС=0) и (БазаНачисленоПоЕНВД&lt;&gt;0) Тогда
				РасходыЕНВД = 1;
			КонецЕсли;
			   
		КонецЕсли;
		
		
		Пока ЗапросФСС.Группировка(3)=1 Цикл 
			
			ДокументЗаписи=ЗапросФСС.ДокументЗаписи;
			ВидСотрудника = ПолучитьВидРаботыСотрудника(Сотрудник,ДокументЗаписи, ПериодРегистрации);
			
			ВидЗанятости = ?(ВидСотрудника = 2,"Совместительство","ОсновноеМестоРаботы");
			
			ДатаНачалаСобытия = ПолучитьДатуНачалаСобытия(ДокументЗаписи);
			НовыйСтраховойСлучай = 0;
			
			Если (ДокументЗаписи.Вид()="БольничныйЛист") Тогда
				Если ПустоеЗначение(ДокументЗаписи.ПервичныйБольничный)=1 Тогда
					НовыйСтраховойСлучай = 1;
				КонецЕсли;
			КонецЕсли;
			
			Если (ЗапросФСС.СуммаБЛ &lt;&gt; 0) или (ЗапросФСС.СуммаЗаСчетРаботодателя&lt;&gt;0) Тогда
				
				ДниРаботодателя = 0;
				ДниФСС = 0;
					
				ДнейОплаты = ДокументЗаписи.ДнейОплаты;
				Если (ДокументЗаписи.ТипБолезни = Перечисление.ТипБолезни.ОбщееЗаболевание) и (ЗапросФСС.СуммаЗаСчетРаботодателя&lt;&gt;0)  Тогда
					
					Если ДокументЗаписи.ПервичныйБольничный.Выбран() = 1 Тогда
						
						ПервичныйБЛ = глПолучитьПервичныйБольничный(ДокументЗаписи);
						ДнейОплатыПервичныйБЛ = ПервичныйБЛ.ДнейОплаты;
						
						ДниРаботодателя = ?(ДнейОплатыПервичныйБЛ &gt; 2, 0, 2 - ДнейОплатыПервичныйБЛ);
						
					Иначе 
						
						ДниРаботодателя = Мин(2,ДнейОплаты);
						
					КонецЕсли;
					
				КонецЕсли; 
				
				ДниФСС = ДнейОплаты - ДниРаботодателя;
				
				Если ЗапросФСС.СуммаБЛ&lt;0 Тогда
					ДниФСС = -1*ДниФСС;
				КонецЕсли;
				Если ЗапросФСС.СуммаЗаСчетРаботодателя&lt;0 Тогда
					ДниРаботодателя = -1*ДниРаботодателя;    
				КонецЕсли;
				
				Если ДниФСС &lt;&gt;0 Тогда 
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"Нетрудоспособность",
						0,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниФСС,
						ЗапросФСС.СуммаБЛ,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию);
				КонецЕсли;
				
				Если ДниРаботодателя &lt;&gt;0 Тогда
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"",
						0,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниРаботодателя,
						ЗапросФСС.СуммаЗаСчетРаботодателя,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию);
				КонецЕсли;
				
			КонецЕсли;                   
			
			Если (ЗапросФСС.СуммаПоБеременностииРодам &lt;&gt; 0) Тогда 
				
				ДниФСС = 0;
				ДниФСС = ДокументЗаписи.ДнейОплаты;
				Если ЗапросФСС.СуммаПоБеременностииРодам&lt;0 Тогда
					ДниФСС = -1*ДниФСС;    
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"БеременностьРоды",
					0,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаПоБеременностииРодам,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаБЛЕНВД &lt;&gt; 0 Тогда
				
				ДниРаботодателя = 0;
				ДниФСС = 0;
					
				ДнейОплаты = ДокументЗаписи.ДнейОплаты;
				Если (ДокументЗаписи.ТипБолезни = Перечисление.ТипБолезни.ОбщееЗаболевание) и (ЗапросФСС.СуммаЗаСчетРаботодателяЕНВД&lt;&gt;0)  Тогда
					
					Если ДокументЗаписи.ПервичныйБольничный.Выбран() = 1 Тогда
						
						ПервичныйБЛ = глПолучитьПервичныйБольничный(ДокументЗаписи);
						ДнейОплатыПервичныйБЛ = ПервичныйБЛ.ДнейОплаты;
						
						ДниРаботодателя = ?(ДнейОплатыПервичныйБЛ &gt; 2, 0, 2 - ДнейОплатыПервичныйБЛ);
						
					Иначе 
						
						ДниРаботодателя = Мин(2,ДнейОплаты);
						
					КонецЕсли;
					
				КонецЕсли; 
				
				ДниФСС = ДнейОплаты - ДниРаботодателя;
				
				Если ЗапросФСС.СуммаБЛЕНВД&lt;0 Тогда
					ДниФСС = -1*ДниФСС;
				КонецЕсли;
				Если ЗапросФСС.СуммаЗаСчетРаботодателяЕНВД&lt;0 Тогда
					ДниРаботодателя = -1*ДниРаботодателя;    
				КонецЕсли; 
				
				Если ДниФСС &lt;&gt;0 Тогда
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"Нетрудоспособность",
						1,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниФСС,
						ЗапросФСС.СуммаБЛЕНВД,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию); 
				КонецЕсли;	
					
				Если ДниРаботодателя &lt;&gt;0 Тогда
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"",
						1,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниРаботодателя,
						ЗапросФСС.СуммаЗаСчетРаботодателяЕНВД,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию);
				КонецЕсли;
					
			КонецЕсли;  
			
			Если ЗапросФСС.СуммаПоБеременностииРодамЕНВД &lt;&gt; 0 Тогда  
				
				ДниФСС = 0;
				ДниФСС = ДокументЗаписи.ДнейОплаты;
				Если ЗапросФСС.СуммаПоБеременностииРодам&lt;0 Тогда
					ДниФСС = -1*ДниФСС;    
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"БеременностьРоды",
					1,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаПоБеременностииРодамЕНВД,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;	
			
			Если (ЗапросФСС.СуммаТравматизм &lt;&gt; 0) Тогда 
				
				ДниФСС = ДокументЗаписи.ДнейОплаты;
				Если ЗапросФСС.СуммаТравматизм &lt; 0 Тогда
					ДниФСС = -1*ДниФСС;    
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"НетрудоспособностьНесчастныйСлучай",
					0,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаТравматизм,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
			Если ЗапросФСС.СуммаПоУходуДоПолутора&lt;&gt;0 Тогда 
				
				СуммаРез = ЗапросФСС.СуммаПоУходуДоПолутора;
				СуммаПодЕНВД = 0; 
				ДатаНачалаПериода=Дата(0);
				ДатаОкончанияПериода=Дата(0);
				Если ДокументЗаписи.Вид()="ОтпускПоУходуЗаРебенком" Тогда 
					ЖурналЗарплата.ВыбратьПериодПоОбъекту(ДокументЗаписи.Сотрудник,ЗапросФСС.ПериодРегистрации.ДатаОкончания);
					Пока ЖурналЗарплата.ПолучитьЗапись()=1 Цикл
						Если ЖурналЗарплата.Документ&lt;&gt;ДокументЗаписи Тогда
							Продолжить;
						Иначе
							Если ЖурналЗарплата.ВидРасч = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007 Тогда 
								ДатаНачалаПериода=ЖурналЗарплата.ДатаНачала;
								ДатаОкончанияПериода=ЖурналЗарплата.ДатаОкончания;
								глИзвлечьРаспределениеИзДокаОСреднем(ДокументЗаписи.Сотрудник,1,ДокументЗаписи,ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007,СуммаРез,ТаблицаПоШаблонам,НеРаспределять,ДатаНачалаПериода);
								Для Сч = 1 По ТаблицаПоШаблонам.КоличествоСтрок() Цикл
									ТаблицаПоШаблонам.ПолучитьСтрокуПоНомеру(Сч);
									Если ТаблицаПоШаблонам.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
										СуммаПодЕНВД = СуммаПодЕНВД + ТаблицаПоШаблонам.Сумма;
									КонецЕсли;
								КонецЦикла;
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				СуммаНеЕНВД = СуммаРез - СуммаПодЕНВД; 
				ДоляЕНВД    = СуммаПодЕНВД / СуммаРез;
				
				//дни - это количество случаев
				Дни1=0;
				Дни2=0;  
				Дни=0;
				Сумма1=0;
				Сумма2=0;			
				Если ДокументЗаписи.Вид()="ОтпускПоУходуЗаРебенком" Тогда 
					
					РассчитатьОтпускПоУходу2010(Дни1,Дни2,Дни,Сумма1,Сумма2,СуммаРез,ДокументЗаписи,ДатаНачалаПериода,ДатаОкончанияПериода,Сотрудник);
				
				КонецЕсли;	
				
				Единица = ?(СуммаРез &gt; 0, 1 ,-1); 
				
				ДниНеЕНВД  = Единица * ?(СуммаНеЕНВД=0,0,Дни);
				ДниНеЕНВД1 =  Единица *?(СуммаНеЕНВД=0,0,Дни1);
				ДниНеЕНВД2 =  Единица *?(СуммаНеЕНВД=0,0,Дни2);
				
				ДниЕНВД  =  Единица *?(СуммаПодЕНВД=0,0,Дни);
				ДниЕНВД1 =  Единица *?(СуммаПодЕНВД=0,0,Дни1);
				ДниЕНВД2 =  Единица *?(СуммаПодЕНВД=0,0,Дни2);  
				
				Сумма1ЕНВД = Окр(Сумма1 * ДоляЕНВД,2);
				Сумма2ЕНВД = Окр(Сумма2 * ДоляЕНВД,2);
				
				Сумма1НеЕНВД = Сумма1-Сумма1ЕНВД;
				Сумма2НеЕНВД = Сумма2-Сумма2ЕНВД;   
				
				Если СуммаНеЕНВД &lt;&gt; 0 Тогда 
					
					Если Дни1 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							0,
							1,
							ДниНеЕНВД1,
							Сумма1НеЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
					Если Дни2 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							0,
							0,
							ДниНеЕНВД2,
							Сумма2НеЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
				КонецЕсли;
				
				Если СуммаПодЕНВД &lt;&gt; 0 Тогда 
					
					Если Дни1 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							1,
							1,
							ДниЕНВД1,
							Сумма1ЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
					Если Дни2 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							1,
							0,
							ДниЕНВД2,
							Сумма2ЕНВД,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
				КонецЕсли;
							
				
			КонецЕсли;
															   
			Если ЗапросФСС.СуммаНаПогребение&lt;&gt;0 Тогда
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ВСвязиСоСмертью",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					ЗапросФСС.ДниНаПогребение,
					ЗапросФСС.СуммаНаПогребение,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаПоУходуЗаИнвалидами&lt;&gt;0 Тогда
				
				Если ЕстьЕНВД = 1 Тогда 
					СуммаПодЕНВД = 0; //сумма под ЕНВД 
					СуммаПособия = ЗапросФСС.СуммаПоУходуЗаИнвалидами;
					глИзвлечьРаспределениеИзДокаОСреднем(Сотрудник,1,ДокументЗаписи,ВидРасчета.ОплатаЛьготныхДнейРодителей,СуммаПособия,ТаблицаПоШаблонам,НеРаспределять);
					// получили таблицу ТаблицаПоШаблонам, в которой  СуммаСреднегоЗаработка уже распределена по шаблонам проводок. 
					// осталось выяснить какие из них подпадают под ЕНВД (остальные относятся к расходам, облагаемым ННП или УСН) 
					// разделим по проводкам среднедневной заработок
					Для Сч = 1 По ТаблицаПоШаблонам.КоличествоСтрок() Цикл
						ТаблицаПоШаблонам.ПолучитьСтрокуПоНомеру(Сч);
						Если ТаблицаПоШаблонам.Шаблон.ПодпадаетПодЕНВД = 1 Тогда
							СуммаПодЕНВД = СуммаПодЕНВД + ТаблицаПоШаблонам.Сумма;
						КонецЕсли;
					КонецЦикла;
					ДоляЕНВД=?(СуммаПособия=0,0,ОКР(СуммаПодЕНВД/СуммаПособия,5));
					
					СуммаПособияЕНВД = СуммаПособия*ДоляЕНВД;
					СуммаПособияНеЕНВД = СуммаПособия - СуммаПособияЕНВД;
					
					Если СуммаПособияНеЕНВД&lt;&gt;0 Тогда 
						ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
							ПериодРегистрации,
							"ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами",
							0,
							ВидЗанятости,
							1,
							ЗапросФСС.ДниПоУходуЗаИнвалидами,
							СуммаПособияНеЕНВД,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияСоциальномуСтрахованию);
					КонецЕсли;		
							
					Если СуммаПособияЕНВД&lt;&gt;0 Тогда 
						ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
							ПериодРегистрации,
							"ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами",
							1,
							ВидЗанятости,
							1,
							ЗапросФСС.ДниПоУходуЗаИнвалидами,
							СуммаПособияЕНВД,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияСоциальномуСтрахованию);
					КонецЕсли;
					
				Иначе
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами",
						0,
						ВидЗанятости,
						1,
						ЗапросФСС.ДниПоУходуЗаИнвалидами,
						ЗапросФСС.СуммаПоУходуЗаИнвалидами,
						Сотрудник,
						ПериодРегистрации,
						ТаблицаПособияСоциальномуСтрахованию);
						
				КонецЕсли;
				
				
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаВРанниеСрокиБеременности&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаВРанниеСрокиБеременности&gt;0,ЗапросФСС.ДниВРанниеСрокиБеременности,-1*ЗапросФСС.ДниВРанниеСрокиБеременности);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриПостановкеНаУчетВРанниеСрокиБеременности",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаВРанниеСрокиБеременности,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаПриРожденииРебенка&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаПриРожденииРебенка&gt;0,ЗапросФСС.ДниПриРожденииРебенка,-1*ЗапросФСС.ДниПриРожденииРебенка);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриРожденииРебенка",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаПриРожденииРебенка,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
			Если ЗапросФСС.СуммаПриУсыновленииРебенка&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаПриУсыновленииРебенка&gt;0,ЗапросФСС.ДниПриУсыновленииРебенка,-1*ЗапросФСС.ДниПриУсыновленииРебенка);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриУсыновленииРебенка",
					РасходыЕНВД,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаПриУсыновленииРебенка,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СобратьДанныеДляФСС2011" ИспользуетсяПриЗагрузке="false">
			<Текст>Год													= ИсходящиеДанные;
ТаблицаПособияПоУходуЗаРебенком						= ВходящиеДанные;
ТаблицаПособияСоциальномуСтрахованию				= Источник;
ТаблицаЗаработкиПолучателейПособияПоУходуЗаРебенком	= Приемник;

ДатаЗапросаС	= Дата(Год, 1, 1);
ДатаЗапросаПо	= ?(КонГода(ДатаЗапросаС) &lt; КонМесяца(ДатаОкончания), КонГода(ДатаЗапросаС), КонМесяца(ДатаОкончания));

СправочникВР = СоздатьОбъект("Справочник.ВидыРасчетов");
СписокПрочихВР = СоздатьОБъект("СписокЗначений");
СписокПрочихВРНС = СоздатьОбъект("СписокЗначений");

// Создаем список ВР обрабатываемых в данном отчете.
СправочникВР.ВыбратьЭлементы();
Пока СправочникВР.ПолучитьЭлемент() = 1 Цикл
	ВР = СправочникВР.Расчет;
	Если (ВР.ВходитВГруппу(ГруппаРасчетов.РасходыЗаСчетФСС) = 0) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмеПоТекущемуМесяцу) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравме) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2004)
	и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2005) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2007)
	и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2010)
	и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2011) Тогда
		Если (ВР.ВходитВГруппу(ГруппаРасчетов.ВсеНачисления) = 1) или (ВР.ВходитВГруппу(ГруппаРасчетов.ДоходыВНатуральнойФорме) = 1) Тогда
			Если СправочникВР.РасходыЗаСчетФСС = 1 Тогда
				СписокПрочихВР.ДобавитьЗначение(ВР);
			ИначеЕсли (СправочникВР.РасходыЗаСчетФСС_НС = 1) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2005)
			и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2007) и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2010)
			и (ВР &lt;&gt; ВидРасчета.ОплатаБЛпоТравмес2011) Тогда
				СписокПрочихВРНС.ДобавитьЗначение(ВР);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЦикла;
СправочникВР = ""; 

ДокБольничный="БольничныйЛист";
ТипБолезни = Перечисление.ТипБолезни;

ТекстЗапроса = "//{{ЗАПРОС(ФСС2011)	
|Период с ДатаЗапросаС по ДатаЗапросаПо;
|Сотрудник = ЖурналРасчетов.Зарплата.Объект;
|ВидРасч = ЖурналРасчетов.Зарплата.ВидРасч;
|Результат = ЖурналРасчетов.Зарплата.Результат;
|ПериодРегистрации = ЖурналРасчетов.Зарплата.ПериодРегистрации;
|ДокументЗаписи = ЖурналРасчетов.Зарплата.ТекущийДокумент;
|Дни = ЖурналРасчетов.Зарплата.Дни; 

|Функция СуммаБЛ = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛс2010) или (ВидРасч = ВидРасчета.ОплатаБЛс2011) или (ВидРасч = ВидРасчета.ОплатаБЛВозмещаемаяФССприЕНВДс2010));                                          

|Функция СуммаЗаСчетРаботодателя = Сумма(Результат) когда((ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2010) или (ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяс2011) или (ВидРасч=ВидРасчета.ОплатаБЛЗаСчетРаботодателяЕНВДс2010)); 

|Функция СуммаПоБеременностииРодам = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОтпускПоБеременностис2010) или (ВидРасч = ВидРасчета.ОтпускПоБеременностис2011) или (ВидРасч = ВидРасчета.ОтпускПоБеременностиВозмещаемыйФССприЕНВДс2010));

|Функция СуммаТравматизм = Сумма(Результат) Когда ((ВидРасч = ВидРасчета.ОплатаБЛпоТравмес2010) или (ВидРасч = ВидРасчета.ОплатаБЛпоТравмес2011));

|Функция СуммаПоУходуДоПолутора = Сумма(Результат) когда (ВидРасч = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007);

|Функция СуммаНаПогребение = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.НаПогребение));
|Функция ДниНаПогребение = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.НаПогребение));

|Функция СуммаПоУходуЗаИнвалидами = Сумма(Результат) когда((ВидРасч = ВидРасчета.ОплатаЛьготныхДнейРодителей));
|Функция ДниПоУходуЗаИнвалидами = Сумма(Дни) когда((ВидРасч = ВидРасчета.ОплатаЛьготныхДнейРодителей));

|Функция СуммаВРанниеСрокиБеременности = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.Беременным));
|Функция ДниВРанниеСрокиБеременности = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.Беременным));

|Функция СуммаПриРожденииРебенка = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриРожденииРебенка));
|Функция ДниПриРожденииРебенка = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриРожденииРебенка));

|Функция СуммаПриУсыновленииРебенка = Сумма(Результат) когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриУсыновленииРебенка));
|Функция ДниПриУсыновленииРебенка = Счётчик() когда((ВидРасч = ВидРасчета.ЕдиновременныеПособияИзСоцстраха) и (ДокументЗаписи.Расчет = Перечисление.ТипыПособий.ПриУсыновленииРебенка));" + 

?(СписокПрочихВР.РазмерСписка()&gt;0,"
|Функция ПрочиеРасходы = Сумма(Результат) когда (ВидРасч в СписокПрочихВР);","")+

?(СписокПрочихВРНС.РазмерСписка()&gt;0,"
|Функция ПрочиеРасходыНС = Сумма(Результат) когда (ВидРасч в СписокПрочихВРНС);","")+"  

|Группировка ПериодРегистрации;
|Группировка Сотрудник без групп;
|Группировка ДокументЗаписи;
|Условие((Результат&lt;&gt;0) или (Дни &lt;&gt; 0));
|"//}}ЗАПРОС
;

ЗапросФСС = СоздатьОбъект("Запрос");
Если ЗапросФСС.Выполнить(ТекстЗапроса) = 0 тогда
	Возврат 1;
КонецЕсли;    

НомерРелизаИБ		= Число(СтрЗаменить(Константа.НомерРелиза, ".",""));

ЖурналЗарплата=СоздатьОбъект("ЖурналРасчетов.Зарплата"); 

Пока ЗапросФСС.Группировка(1) = 1 Цикл    

	Месяц = ДатаМесяц(ЗапросФСС.ПериодРегистрации.ДатаОкончания);
	ПериодРегистрации = ЗапросФСС.ПериодРегистрации.ДатаНачала;
	
	Пока ЗапросФСС.Группировка(2) = 1 Цикл
		
		Сотрудник = ЗапросФСС.Сотрудник; 
		
		Пока ЗапросФСС.Группировка(3)=1 Цикл 
			
			ДокументЗаписи=ЗапросФСС.ДокументЗаписи;
			ВидСотрудника = ПолучитьВидРаботыСотрудника(Сотрудник,ДокументЗаписи, ПериодРегистрации);
			
			ВидЗанятости = ?(ВидСотрудника = 2,"Совместительство","ОсновноеМестоРаботы");
			
			ДатаНачалаСобытия = ПолучитьДатуНачалаСобытия(ДокументЗаписи);
			НовыйСтраховойСлучай = 0;
			
			Если (ДокументЗаписи.Вид()="БольничныйЛист") Тогда
				Если ПустоеЗначение(ДокументЗаписи.ПервичныйБольничный)=1 Тогда
					НовыйСтраховойСлучай = 1;
				КонецЕсли;
			КонецЕсли;
			
			Если (ЗапросФСС.СуммаБЛ &lt;&gt; 0) или (ЗапросФСС.СуммаЗаСчетРаботодателя&lt;&gt;0) Тогда
				
				ДниРаботодателя = 0;
				ДниФСС = 0;
					
				ДнейОплаты = ДокументЗаписи.ДнейОплаты;
				Если (ДокументЗаписи.ТипБолезни = Перечисление.ТипБолезни.ОбщееЗаболевание) и (ЗапросФСС.СуммаЗаСчетРаботодателя&lt;&gt;0)  Тогда
					
					Если НомерРелизаИБ &gt;= 770309 Тогда
						ДнейЗаСчетРаботодателя = ДокументЗаписи.ДнейОплатыРаботодателем;
						ДнейЗаСчетРаботодателя = ?(ДнейЗаСчетРаботодателя = 0, 3, ДнейЗаСчетРаботодателя);
						
					Иначе 
						ДнейЗаСчетРаботодателя = 3;
						
					КонецЕсли;						
					
					Если ДокументЗаписи.ПервичныйБольничный.Выбран() = 1 Тогда
						
						ПервичныйБЛ = глПолучитьПервичныйБольничный(ДокументЗаписи);
						ДнейОплатыПервичныйБЛ = ПервичныйБЛ.ДнейОплаты;
						
						ДниРаботодателя = ?(ДнейОплатыПервичныйБЛ &gt; ДнейЗаСчетРаботодателя, 0, ДнейЗаСчетРаботодателя - ДнейОплатыПервичныйБЛ);
						
					Иначе 
						
						ДниРаботодателя = Мин(ДнейЗаСчетРаботодателя,ДнейОплаты);
						
					КонецЕсли;
					
				КонецЕсли; 
				
				ДниФСС = ДнейОплаты - ДниРаботодателя;
				
				Если ЗапросФСС.СуммаБЛ&lt;0 Тогда
					ДниФСС = -1*ДниФСС;
				КонецЕсли;
				Если ЗапросФСС.СуммаЗаСчетРаботодателя&lt;0 Тогда
					ДниРаботодателя = -1*ДниРаботодателя;    
				КонецЕсли;
				
				Если ДниФСС &lt;&gt;0 Тогда 
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"Нетрудоспособность",
						0,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниФСС,
						ЗапросФСС.СуммаБЛ,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию);
				КонецЕсли;
				
				Если ДниРаботодателя &lt;&gt;0 Тогда
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"",
						0,
						ВидЗанятости,
						НовыйСтраховойСлучай,
						ДниРаботодателя,
						ЗапросФСС.СуммаЗаСчетРаботодателя,
						Сотрудник,
						ДатаНачалаСобытия,
						ТаблицаПособияСоциальномуСтрахованию);
				КонецЕсли;
				
			КонецЕсли;                   
			
			Если (ЗапросФСС.СуммаПоБеременностииРодам &lt;&gt; 0) Тогда 
				
				ДниФСС = 0;
				ДниФСС = ДокументЗаписи.ДнейОплаты;
				Если ЗапросФСС.СуммаПоБеременностииРодам&lt;0 Тогда
					ДниФСС = -1*ДниФСС;    
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"БеременностьРоды",
					0,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаПоБеременностииРодам,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если (ЗапросФСС.СуммаТравматизм &lt;&gt; 0) Тогда 
				
				ДниФСС = ДокументЗаписи.ДнейОплаты;
				Если ЗапросФСС.СуммаТравматизм &lt; 0 Тогда
					ДниФСС = -1*ДниФСС;    
				КонецЕсли;
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"НетрудоспособностьНесчастныйСлучай",
					0,
					ВидЗанятости,
					НовыйСтраховойСлучай,
					ДниФСС,
					ЗапросФСС.СуммаТравматизм,
					Сотрудник,
					ДатаНачалаСобытия,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
			Если ЗапросФСС.СуммаПоУходуДоПолутора&lt;&gt;0 Тогда 
				
				СуммаРез = ЗапросФСС.СуммаПоУходуДоПолутора;
				
				//дни - это количество случаев
				Дни1=0;
				Дни2=0;  
				Дни=0;
				Сумма1=0;
				Сумма2=0;
				ДатаНачалаУхода=Дата(0);
				ДатаОкончанияУхода=Дата(0);
				
				Если ДокументЗаписи.Вид()="ОтпускПоУходуЗаРебенком" Тогда 
					ЖурналЗарплата.ВыбратьПериодПоОбъекту(ДокументЗаписи.Сотрудник,ЗапросФСС.ПериодРегистрации.ДатаОкончания);
					Пока ЖурналЗарплата.ПолучитьЗапись()=1 Цикл
						Если ЖурналЗарплата.Документ&lt;&gt;ДокументЗаписи Тогда
							Продолжить;
						Иначе
							Если ЖурналЗарплата.ВидРасч = ВидРасчета.ПособиеПоУходуЗаРебенкомФССс2007 Тогда 
								ДатаНачалаУхода=ЖурналЗарплата.ДатаНачала;
								ДатаОкончанияУхода=ЖурналЗарплата.ДатаОкончания;
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла; 
					
					Если ДокументЗаписи.РасчетПоПравилам2010Года=1 Тогда
						РассчитатьОтпускПоУходу2010(Дни1,Дни2,Дни,Сумма1,Сумма2,СуммаРез,ДокументЗаписи,ДатаНачалаУхода,ДатаОкончанияУхода,Сотрудник);
					Иначе	
						РассчитатьОтпускПоУходу2011(Дни1,Дни2,Дни,Сумма1,Сумма2,СуммаРез,ДокументЗаписи,ДатаНачалаУхода,ДатаОкончанияУхода,Сотрудник);
					КонецЕсли;
					
				КонецЕсли;
				
				Единица = ?(СуммаРез &gt; 0, 1 ,-1); 
				
				ДниУ  = Единица * ?(СуммаРез=0,0,Дни);
				ДниУ1 = Единица * ?(СуммаРез=0,0,Дни1);
				ДниУ2 = Единица * ?(СуммаРез=0,0,Дни2);
				
				Если СуммаРез &lt;&gt; 0 Тогда 
					
					Если Дни1 &lt;&gt; 0 Тогда 
						//уход за первым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							0,
							1,
							ДниУ1,
							Сумма1,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
					Если Дни2 &lt;&gt; 0 Тогда 
						//уход за вторым ребенком
						ЗаполнитьТаблицуПособияПоУходуЗаРебенком(
							ПериодРегистрации,
							0,
							0,
							ДниУ2,
							Сумма2,
							Сотрудник,
							Сотрудник,
							ПериодРегистрации,
							ТаблицаПособияПоУходуЗаРебенком);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
															   
			Если ЗапросФСС.СуммаНаПогребение&lt;&gt;0 Тогда
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ВСвязиСоСмертью",
					0,
					ВидЗанятости,
					1,
					ЗапросФСС.ДниНаПогребение,
					ЗапросФСС.СуммаНаПогребение,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаПоУходуЗаИнвалидами&lt;&gt;0 Тогда
				
					ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
						ПериодРегистрации,
						"ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами",
						0,
						ВидЗанятости,
						1,
						ЗапросФСС.ДниПоУходуЗаИнвалидами,
						ЗапросФСС.СуммаПоУходуЗаИнвалидами,
						Сотрудник,
						ПериодРегистрации,
						ТаблицаПособияСоциальномуСтрахованию);
						
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаВРанниеСрокиБеременности&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаВРанниеСрокиБеременности&gt;0,ЗапросФСС.ДниВРанниеСрокиБеременности,-1*ЗапросФСС.ДниВРанниеСрокиБеременности);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриПостановкеНаУчетВРанниеСрокиБеременности",
					0,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаВРанниеСрокиБеременности,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли; 
			
			Если ЗапросФСС.СуммаПриРожденииРебенка&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаПриРожденииРебенка&gt;0,ЗапросФСС.ДниПриРожденииРебенка,-1*ЗапросФСС.ДниПриРожденииРебенка);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриРожденииРебенка",
					0,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаПриРожденииРебенка,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
			Если ЗапросФСС.СуммаПриУсыновленииРебенка&lt;&gt;0 Тогда
				
				Дни = ?( ЗапросФСС.СуммаПриУсыновленииРебенка&gt;0,ЗапросФСС.ДниПриУсыновленииРебенка,-1*ЗапросФСС.ДниПриУсыновленииРебенка);
				
				ЗаполнитьТаблицуПособияСоциальномуСтрахованию(
					ПериодРегистрации,
					"ПриУсыновленииРебенка",
					0,
					ВидЗанятости,
					1,
					Дни,
					ЗапросФСС.СуммаПриУсыновленииРебенка,
					Сотрудник,
					ПериодРегистрации,
					ТаблицаПособияСоциальномуСтрахованию);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТаблицуВычетовКДоходам" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("КодДохода");
ТЗ.НоваяКолонка("КодВычета");
ТЗ.НоваяКолонка("МесяцНалоговогоПериода");
ТЗ.НоваяКолонка("СуммаВычета");

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗВзаиморасчеты" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("ПериодВзаиморасчетов");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("ВидДвижения");
ТЗ.НоваяКолонка("СуммаВзаиморасчетов");
ТЗ.НоваяКолонка("Ведомость");
ТЗ.НоваяКолонка("ХарактерВыплаты");
ТЗ.НоваяКолонка("СпособВыплаты");
Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("СФ_Наименование");
	ТЗ.НоваяКолонка("СФ_КВД");
	ТЗ.НоваяКолонка("СФ_ПодпадаетПодЕНВД");
	ТЗ.НоваяКолонка("СФ_Баланс");
	ТЗ.НоваяКолонка("СФ_КБК");
	ТЗ.НоваяКолонка("КОСГУ");
КонецЕсли;

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗДепоненты" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("ВидДвижения");
ТЗ.НоваяКолонка("Сумма");
ТЗ.НоваяКолонка("Ведомость");
Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("КОСГУ");
КонецЕсли;

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗДополнительныеНачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
// Общие колонки
ТЗ.НоваяКолонка("ПериодРегистрации");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ОбособленноеПодразделение");
ТЗ.НоваяКолонка("Сотрудник");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("ПодразделениеОрганизации");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("Показатель1");
ТЗ.НоваяКолонка("Показатель2");
ТЗ.НоваяКолонка("Показатель3");
ТЗ.НоваяКолонка("Результат");
ТЗ.НоваяКолонка("ДатаНачалаСобытия");
ТЗ.НоваяКолонка("Сторно");
ТЗ.НоваяКолонка("Авторасчет");

ТЗ.НоваяКолонка("БазовыйПериодНачало");
ТЗ.НоваяКолонка("БазовыйПериодКонец");

ТЗ.НоваяКолонка("ГрафикРаботы");
ТЗ.НоваяКолонка("ВидУчетаВремени");
ТЗ.НоваяКолонка("ОплаченоДнейЧасов");

ТЗ.НоваяКолонка("СторнируемыйДокумент");
ТЗ.НоваяКолонка("ДокументОснование");

ТЗ.НоваяКолонка("ЧислоМесяцев");

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("СтатьяРасходов");
	ТЗ.НоваяКолонка("КОСГУ");
	ТЗ.НоваяКолонка("ВидОперацииБУ");
	ТЗ.НоваяКолонка("ДокументРегистратор");
	ТЗ.НоваяКолонка("КодДоходаЕСН");
Иначе
	ТЗ.НоваяКолонка("СчетДт");
	ТЗ.НоваяКолонка("СубконтоДт1");
	ТЗ.НоваяКолонка("СубконтоДт2");
	ТЗ.НоваяКолонка("СубконтоДт3");
	ТЗ.НоваяКолонка("СчетКт");
	ТЗ.НоваяКолонка("СубконтоКт1");
	ТЗ.НоваяКолонка("СубконтоКт2");
	ТЗ.НоваяКолонка("СубконтоКт3");
	ТЗ.НоваяКолонка("ОтражениеВУСН");
КонецЕсли;

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗЕСНИсчисленный" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаЕСНИсчисленный = СоздатьОбъект("ТаблицаЗначений");
ТаблицаЕСНИсчисленный.НоваяКолонка("Период");
ТаблицаЕСНИсчисленный.НоваяКолонка("Физлицо");
ТаблицаЕСНИсчисленный.НоваяКолонка("ФедеральныйБюджет");
ТаблицаЕСНИсчисленный.НоваяКолонка("ПримененнаяЛьготаФБ");
ТаблицаЕСНИсчисленный.НоваяКолонка("ФСС");
ТаблицаЕСНИсчисленный.НоваяКолонка("ПримененнаяЛьготаФСС");
ТаблицаЕСНИсчисленный.НоваяКолонка("ФФОМС");
ТаблицаЕСНИсчисленный.НоваяКолонка("ТФОМС");
ТаблицаЕСНИсчисленный.НоваяКолонка("ПримененнаяЛьготаФОМС"); 
ТаблицаЕСНИсчисленный.НоваяКолонка("ПФРНакопительная");
ТаблицаЕСНИсчисленный.НоваяКолонка("ПФРНакопительнаяЕНВД");
ТаблицаЕСНИсчисленный.НоваяКолонка("ПФРСтраховая");
ТаблицаЕСНИсчисленный.НоваяКолонка("ПФРСтраховаяЕНВД");

Возврат ТаблицаЕСНИсчисленный;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗЕСННачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Сотрудник");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("ПериодРегистрации");
ТЗ.НоваяКолонка("ПериодДействия");
ТЗ.НоваяКолонка("ПериодДействияНачало");
ТЗ.НоваяКолонка("ПериодДействияКонец");
ТЗ.НоваяКолонка("Результат");
ТЗ.НоваяКолонка("Скидка");
ТЗ.НоваяКолонка("КодДоходаЕСН");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("ОблагаетсяЕНВД");
ТЗ.НоваяКолонка("ГрафикРаботы");
ТЗ.НоваяКолонка("ВидУчетаВремени");
ТЗ.НоваяКолонка("ДокументОснование");
ТЗ.НоваяКолонка("НомерСтрокиДокумента");
ТЗ.НоваяКолонка("Сторно");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ОбособленноеПодразделение");

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗЕСНСведенияОДоходах" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаЕСНСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений");
ТаблицаЕСНСведенияОДоходах.НоваяКолонка("Период");
ТаблицаЕСНСведенияОДоходах.НоваяКолонка("Физлицо");
ТаблицаЕСНСведенияОДоходах.НоваяКолонка("Результат");
ТаблицаЕСНСведенияОДоходах.НоваяКолонка("Скидка");
ТаблицаЕСНСведенияОДоходах.НоваяКолонка("КодДоходаЕСН");
ТаблицаЕСНСведенияОДоходах.НоваяКолонка("ОблагаетсяЕНВД");
ТаблицаЕСНСведенияОДоходах.НоваяКолонка("ДокументОснование");

Возврат ТаблицаЕСНСведенияОДоходах;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗЗанятыеШтатныеЕдиницыОрганизаций" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("ВидДвижения");
ТЗ.НоваяКолонка("ПодразделениеОрганизации");
ТЗ.НоваяКолонка("Должность");
ТЗ.НоваяКолонка("КоличествоСтавок");

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗКоэффициентСтажа" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");

ТЗ.НоваяКолонка("Наименование");
ТЗ.НоваяКолонка("Шкала");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗНДФЛИмущественныеВычеты" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаНДФЛИмущественныеВычетыФизлиц = СоздатьОбъект("ТаблицаЗначений");
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("Период");					//это период регистрации
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("ФизЛицо");
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("КодВычетаИмущественный");    
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("Год");
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("Размер");
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("ПодразделениеОрганизации");
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("КПП");
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("КодПоОКАТО");
ТаблицаНДФЛИмущественныеВычетыФизлиц.НоваяКолонка("КодПоОКТМО");

Возврат ТаблицаНДФЛИмущественныеВычетыФизлиц;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗНДФЛКЗачету" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаНДФЛКЗачету = СоздатьОбъект("ТаблицаЗначений");
ТаблицаНДФЛКЗачету.НоваяКолонка("Организация");
ТаблицаНДФЛКЗачету.НоваяКолонка("ФизЛицо");
ТаблицаНДФЛКЗачету.НоваяКолонка("Период");
ТаблицаНДФЛКЗачету.НоваяКолонка("СуммаНДФЛКЗачету");
ТаблицаНДФЛКЗачету.НоваяКолонка("СтавкаНалогообложенияРезидента");
ТаблицаНДФЛКЗачету.НоваяКолонка("ВидДвижения");

Возврат ТаблицаНДФЛКЗачету;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗНДФЛПредоставленныеСтандартныеВычеты" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц = СоздатьОбъект("ТаблицаЗначений");
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("Период");					//это период регистрации
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("МесяцНалоговогоПериода");
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("ПодразделениеОрганизации");    
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("Физлицо");
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("КодВычета");
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("ПримененныйВычет");
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("КПП");
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("КодПоОКАТО");
ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц.НоваяКолонка("КодПоОКТМО");

Возврат ТаблицаНДФЛПредоставленныеСтандартныеВычетыФизЛиц;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗНДФЛРасчетыСБюджетом" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаНДФЛРасчетыСБюджетом = СоздатьОбъект("ТаблицаЗначений");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("Период");		// это период регистрации
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("МесяцНалоговогоПериода");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("ПодразделениеОрганизации");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("Физлицо");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("ВидСтроки");	// ПеречислениеСсылка.НДФЛРасчетыСБюджетомВидСтроки
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("СтавкаНалогообложенияРезидента");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("КодДохода");	// заполняем для доходов по ставке 35%
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("Налог");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("СФ_Наименование");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("СФ_КВД");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("СФ_ПодпадаетПодЕНВД");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("СФ_Баланс");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("СФ_КБК");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("КОСГУ");     
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("ИсчисленоИзЗарплаты");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("КПП");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("КодПоОКАТО");
ТаблицаНДФЛРасчетыСБюджетом.НоваяКолонка("КодПоОКТМО");

Возврат ТаблицаНДФЛРасчетыСБюджетом;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗНДФЛСведенияОДоходах" ИспользуетсяПриЗагрузке="false">
			<Текст>ТаблицаНДФЛСведенияОДоходах = СоздатьОбъект("ТаблицаЗначений"); 
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("Период");						// это месяц налогового периода
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("ПериодРегистрации");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("ПодразделениеОрганизации");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("Физлицо");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("КодДохода");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СуммаДохода");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("КодВычета");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СуммаВычета");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СФ_Наименование");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СФ_КВД");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СФ_ПодпадаетПодЕНВД");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СФ_Баланс");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("СФ_КБК");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("КОСГУ");   
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("ИсчисленоИзЗарплаты"); 
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("КПП");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("КодПоОКАТО");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("КодПоОКТМО");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("КоличествоДетей");
ТаблицаНДФЛСведенияОДоходах.НоваяКолонка("ДатаПолученияДохода");

Возврат ТаблицаНДФЛСведенияОДоходах;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗОсновныеНачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
// Общие колонки
ТЗ.НоваяКолонка("ПериодРегистрации");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ОбособленноеПодразделение");
ТЗ.НоваяКолонка("Сотрудник");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("ПодразделениеОрганизации");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("Показатель1");
ТЗ.НоваяКолонка("Показатель2");
ТЗ.НоваяКолонка("Показатель3");
ТЗ.НоваяКолонка("Результат");
ТЗ.НоваяКолонка("ДатаНачалаСобытия");
ТЗ.НоваяКолонка("Сторно");
ТЗ.НоваяКолонка("Авторасчет");

ТЗ.НоваяКолонка("ПериодДействияНачало");
ТЗ.НоваяКолонка("ПериодДействияКонец");

ТЗ.НоваяКолонка("ОтработаноДней");
ТЗ.НоваяКолонка("ОтработаноЧасов");
ТЗ.НоваяКолонка("НормаДней");
ТЗ.НоваяКолонка("НормаЧасов");
ТЗ.НоваяКолонка("ОплаченоДнейЧасов");
ТЗ.НоваяКолонка("ДополнительныеДанные");

ТЗ.НоваяКолонка("ГрафикРаботы");
ТЗ.НоваяКолонка("ВидУчетаВремени");

ТЗ.НоваяКолонка("БазовыйПериодНачало");
ТЗ.НоваяКолонка("БазовыйПериодКонец");
ТЗ.НоваяКолонка("ПериодРасчетаСреднегоЗаработкаНачало");
ТЗ.НоваяКолонка("ПериодРасчетаСреднегоЗаработкаОкончание");

ТЗ.НоваяКолонка("СторнируемыйДокумент");
ТЗ.НоваяКолонка("ДокументОснование");

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("СтатьяРасходов");
	ТЗ.НоваяКолонка("КОСГУ");
	ТЗ.НоваяКолонка("ВидОперацииБУ");
	ТЗ.НоваяКолонка("ДокументРегистратор");
	ТЗ.НоваяКолонка("КодДоходаЕСН");
Иначе
	ТЗ.НоваяКолонка("СчетДт");
	ТЗ.НоваяКолонка("СубконтоДт1");
	ТЗ.НоваяКолонка("СубконтоДт2");
	ТЗ.НоваяКолонка("СубконтоДт3");
	ТЗ.НоваяКолонка("СчетКт");
	ТЗ.НоваяКолонка("СубконтоКт1");
	ТЗ.НоваяКолонка("СубконтоКт2");
	ТЗ.НоваяКолонка("СубконтоКт3");
	ТЗ.НоваяКолонка("ОтражениеВУСН");
КонецЕсли;

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПВРДополнительныеНачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("ВР");						// ВидРасчета в 7.7
ТЗ.НоваяКолонка("НужнаБаза");				// Нужно отдельно выгрузить базу
ТЗ.НоваяКолонка("ЗависитОтТарифнойСтавки");	// Если = 1, то при переносе в ЗУП/ЗБУ, необходимо величину переносить во второй показатель

ТЗ.НоваяКолонка("Наименование");

ТЗ.НоваяКолонка("КатегорияРасчета");
ТЗ.НоваяКолонка("СпособРасчета");
ТЗ.НоваяКолонка("ПроизвольнаяФормулаРасчета");
ТЗ.НоваяКолонка("ФормулаРасчета");
ТЗ.НоваяКолонка("Показатели");
ТЗ.НоваяКолонка("ВидПремии");
ТЗ.НоваяКолонка("ЧислоМесяцев");

ТЗ.НоваяКолонка("ЯвляетсяДоходомВНатуральнойФорме");
ТЗ.НоваяКолонка("СтратегияОтраженияВУчете");
ТЗ.НоваяКолонка("ОтнесениеРасходовКДеятельностиЕНВД");
ТЗ.НоваяКолонка("ОтношениеКДенежномуСодержанию");

ТЗ.НоваяКолонка("КодДоходаНДФЛ");
ТЗ.НоваяКолонка("КодДоходаЕСН");
ТЗ.НоваяКолонка("КодДоходаФСС_НС");

ТЗ.НоваяКолонка("КодДоходаСтраховыеВзносы");

ТЗ.НоваяКолонка("ВидНачисленияПоСт255НК");

Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	ТЗ.НоваяКолонка("СпособОтраженияВБухучете");
	
Иначе
	ТЗ.НоваяКолонка("ВидОперацииБУ");
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("СтатьяРасходов");
	ТЗ.НоваяКолонка("КОСГУ");
	
КонецЕсли;

ТЗ.НоваяКолонка("БазовыеВидыРасчета");
ТЗ.НоваяКолонка("ВедущиеВидыРасчета");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПВРОсновныеНачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("ВР");						// ВидРасчета в 7.7
ТЗ.НоваяКолонка("НужнаБаза");				// Нужно отдельно выгрузить базу
ТЗ.НоваяКолонка("ЗависитОтТарифнойСтавки");	// Если = 1, то при переносе в ЗУП/ЗБУ, необходимо величину переносить во второй показатель

ТЗ.НоваяКолонка("Наименование");

ТЗ.НоваяКолонка("КатегорияРасчета");
ТЗ.НоваяКолонка("СпособРасчета");
ТЗ.НоваяКолонка("ПорядокОпределенияРасчетногоПериодаСреднегоЗаработка");
ТЗ.НоваяКолонка("ПроизвольнаяФормулаРасчета");
ТЗ.НоваяКолонка("ФормулаРасчета");
ТЗ.НоваяКолонка("ВидСтажа");
ТЗ.НоваяКолонка("КоэффициентСтажа");
ТЗ.НоваяКолонка("Показатели");
ТЗ.НоваяКолонка("ТребуетВводаТарифногоРазряда");

ТЗ.НоваяКолонка("ВидВремени");
ТЗ.НоваяКолонка("ОбозначениеВТабелеУчетаРабочегоВремени");

ТЗ.НоваяКолонка("ВидЕжегодногоОтпуска");

ТЗ.НоваяКолонка("ВидСтажаСЗВ4");

ТЗ.НоваяКолонка("ЯвляетсяДоходомВНатуральнойФорме");
ТЗ.НоваяКолонка("СтратегияОтраженияВУчете");
ТЗ.НоваяКолонка("ОтнесениеРасходовКДеятельностиЕНВД");
ТЗ.НоваяКолонка("ОтношениеКДенежномуСодержанию");

ТЗ.НоваяКолонка("КодДоходаНДФЛ");
ТЗ.НоваяКолонка("КодДоходаЕСН");
ТЗ.НоваяКолонка("КодДоходаФСС_НС");

ТЗ.НоваяКолонка("КодДоходаСтраховыеВзносы");

ТЗ.НоваяКолонка("ПериодДействияБазовый");

ТЗ.НоваяКолонка("ВидНачисленияПоСт255НК");

Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	ТЗ.НоваяКолонка("СпособОтраженияВБухучете");
	
Иначе
	ТЗ.НоваяКолонка("ВидОперацииБУ");
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("СтатьяРасходов");
	ТЗ.НоваяКолонка("КОСГУ");
	
КонецЕсли;

ТЗ.НоваяКолонка("БазовыеВидыРасчета");
ТЗ.НоваяКолонка("ВедущиеВидыРасчета");
ТЗ.НоваяКолонка("ВытесняющиеВидыРасчета");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПВРСреднийЗаработок" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("ВР");		// ВидРасчета в 7.7

ТЗ.НоваяКолонка("Наименование");
ТЗ.НоваяКолонка("БазовыеВидыРасчета");
ТЗ.НоваяКолонка("ВедущиеВидыРасчета");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПВРУдержания" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("ВР");						// ВидРасчета в 7.7
ТЗ.НоваяКолонка("НужнаБаза");				// Нужно отдельно выгрузить базу
ТЗ.НоваяКолонка("ЗависитОтТарифнойСтавки");	// Если = 1, то при переносе в ЗУП/ЗБУ, необходимо величину переносить во второй показатель

ТЗ.НоваяКолонка("Наименование");

ТЗ.НоваяКолонка("КатегорияРасчета");
ТЗ.НоваяКолонка("СпособРасчета");
ТЗ.НоваяКолонка("ПроизвольнаяФормулаРасчета");
ТЗ.НоваяКолонка("ФормулаРасчета");
ТЗ.НоваяКолонка("Показатели");

ТЗ.НоваяКолонка("СтратегияОтраженияВУчете");

Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	ТЗ.НоваяКолонка("СпособОтраженияВБухучете");
	
Иначе
	ТЗ.НоваяКолонка("ВидОперацииБУ");
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("СтатьяРасходов");
	ТЗ.НоваяКолонка("КОСГУ");
	
КонецЕсли;

ТЗ.НоваяКолонка("БазовыеВидыРасчета");
ТЗ.НоваяКолонка("ВедущиеВидыРасчета");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПлановыеНачисления" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("Сотрудник");
ТЗ.НоваяКолонка("ДатаНачалаСобытия");
ТЗ.НоваяКолонка("Действие");
ТЗ.НоваяКолонка("ВидРасчетаИзмерение");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("Показатель1");
ТЗ.НоваяКолонка("Валюта1");
ТЗ.НоваяКолонка("ТарифныйРазряд1");
ТЗ.НоваяКолонка("Показатель2");
ТЗ.НоваяКолонка("Валюта2");
ТЗ.НоваяКолонка("Показатель3");
ТЗ.НоваяКолонка("ПериодЗавершения");
ТЗ.НоваяКолонка("ДействиеЗавершения");
ТЗ.НоваяКолонка("ДокументОснование");
ТЗ.НоваяКолонка("ПервичныйДокумент");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПлановыеУдержания" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
// Общие колонки
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("Действие");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("Показатель1");
ТЗ.НоваяКолонка("Валюта1");
ТЗ.НоваяКолонка("Показатель2");
ТЗ.НоваяКолонка("Валюта2");
ТЗ.НоваяКолонка("Показатель3");
ТЗ.НоваяКолонка("ПериодЗавершения");
ТЗ.НоваяКолонка("ДействиеЗавершения");

ТЗ.НоваяКолонка("ДокументОснование");
ТЗ.НоваяКолонка("Получатель");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПогашениеЗайма" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ФизЛицо");
ТЗ.НоваяКолонка("ОсновнойДолг");
ТЗ.НоваяКолонка("Проценты");
ТЗ.НоваяКолонка("УдержаноИзЗарплаты");
ТЗ.НоваяКолонка("ДоговорЗайма");
ТЗ.НоваяКолонка("ВидДвижения");

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПоказатели" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");

ТЗ.НоваяКолонка("Показатель");
ТЗ.НоваяКолонка("ЗапрашиватьПриКадровыхПеремещениях");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗПоказатель" ИспользуетсяПриЗагрузке="false">
			<Текст>СЗ = СоздатьОбъект("СписокЗначений");

СЗ.Установить("Наименование",			"");
СЗ.Установить("ВозможностьИзменения",	"");
СЗ.Установить("ТипПоказателя",			"");
СЗ.Установить("ВидПоказателя",			"");

Возврат СЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗРаботникиОрганизаций" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Сотрудник");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ОбособленноеПодразделение");
ТЗ.НоваяКолонка("ПодразделениеОрганизации");
ТЗ.НоваяКолонка("Должность");
ТЗ.НоваяКолонка("ГрафикРаботы");
ТЗ.НоваяКолонка("ЗанимаемыхСтавок");
ТЗ.НоваяКолонка("ПричинаИзмененияСостояния");
ТЗ.НоваяКолонка("ПервичныйДокумент");

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗРасчетыНалоговыхАгентовСБюджетомПоНДФЛ" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ФизЛицо");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("МесяцНалоговогоПериода");
ТЗ.НоваяКолонка("Сумма");
ТЗ.НоваяКолонка("Ставка");
ТЗ.НоваяКолонка("ОКАТО_КПП");
ТЗ.НоваяКолонка("ОКТМО_КПП");
ТЗ.НоваяКолонка("ВидДвижения");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗРасчетыПоСтраховымВзносам" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("ВидДвижения");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ВидПлатежа");
ТЗ.НоваяКолонка("МесяцРасчетногоПериода");
ТЗ.НоваяКолонка("ОблагаетсяЕНВД");
ТЗ.НоваяКолонка("ПФРСтраховая");
ТЗ.НоваяКолонка("ПФРНакопительная");
ТЗ.НоваяКолонка("ФСС");
ТЗ.НоваяКолонка("ФФОМС");
ТЗ.НоваяКолонка("ТФОМС");
ТЗ.НоваяКолонка("ПФРЗаЗанятыхНаПодземныхИВредныхРаботах");
ТЗ.НоваяКолонка("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах");
ТЗ.НоваяКолонка("ПФРПоСуммарномуТарифу");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗСотрудникаОрганизации" ИспользуетсяПриЗагрузке="false">
			<Текст>СЗ = СоздатьОбъект("СписокЗначений");
СЗ.Установить("Код",						"");
СЗ.Установить("Наименование",				"");
СЗ.Установить("ЭтоГруппа",					"");
СЗ.Установить("Актуальность",				"");
СЗ.Установить("Физлицо",					"");
СЗ.Установить("Организация",				"");
СЗ.Установить("ВидДоговора",				"");
СЗ.Установить("ПодразделениеОрганизации",	"");
СЗ.Установить("Должность",					"");
СЗ.Установить("ЗанимаемыхСтавок",			"");
СЗ.Установить("ДатаНачала",					"");
СЗ.Установить("ДатаОкончания",				"");
СЗ.Установить("ВидЗанятости",				"");
СЗ.Установить("ТарифнаяСтавка",				"");
СЗ.Установить("ВалютаТарифнойСтавки",		"");
СЗ.Установить("ГрафикРаботы",				"");
СЗ.Установить("НомерДоговора",				"");
СЗ.Установить("ДатаДоговора",				"");
СЗ.Установить("ОбособленноеПодразделение",	"");
СЗ.Установить("ВидРасчета",					"");

Возврат СЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗСтатьяФинансирования" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");

ТЗ.НоваяКолонка("Наименование");
ТЗ.НоваяКолонка("КВД");
ТЗ.НоваяКолонка("ПодпадаетПодЕНВД");
ТЗ.НоваяКолонка("Баланс");
ТЗ.НоваяКолонка("КОСГУ");
ТЗ.НоваяКолонка("КБК");

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗСтраховыеВзносыИсчисленные" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("ФСС");
ТЗ.НоваяКолонка("ФССЕНВД");
ТЗ.НоваяКолонка("ФССНесчастныеСлучаи");
ТЗ.НоваяКолонка("ФФОМС"); 
ТЗ.НоваяКолонка("ФФОМСЕНВД");
ТЗ.НоваяКолонка("ТФОМС");
ТЗ.НоваяКолонка("ТФОМСЕНВД");
ТЗ.НоваяКолонка("ПФРПоСуммарномуТарифу");
ТЗ.НоваяКолонка("ПФРПоСуммарномуТарифуЕНВД");
ТЗ.НоваяКолонка("ПФРНакопительная");
ТЗ.НоваяКолонка("ПФРНакопительнаяЕНВД");
ТЗ.НоваяКолонка("ПФРСтраховая");
ТЗ.НоваяКолонка("ПФРСтраховаяЕНВД");
ТЗ.НоваяКолонка("ПФРПоДополнительномуТарифу"); 
ТЗ.НоваяКолонка("ПФРЗаЗанятыхНаПодземныхИВредныхРаботах");
ТЗ.НоваяКолонка("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах");

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗСтраховыеВзносыСведенияОДоходах" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Результат");
ТЗ.НоваяКолонка("Скидка");
ТЗ.НоваяКолонка("ВидДохода");
ТЗ.НоваяКолонка("ОблагаетсяЕНВД");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("ОблагаетсяПоДополнительномуТарифу");
ТЗ.НоваяКолонка("ДокументОснование");
ТЗ.НоваяКолонка("ЯвляетсяДоходомФармацевта");
ТЗ.НоваяКолонка("ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ");
ТЗ.НоваяКолонка("ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией");

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗУдержания" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
// Общие колонки
ТЗ.НоваяКолонка("ПериодРегистрации");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("ОбособленноеПодразделение");
ТЗ.НоваяКолонка("Сотрудник");
ТЗ.НоваяКолонка("Физлицо");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("Показатель1");
ТЗ.НоваяКолонка("Показатель2");
ТЗ.НоваяКолонка("Показатель3");
ТЗ.НоваяКолонка("Результат");
ТЗ.НоваяКолонка("ДатаНачалаСобытия");
ТЗ.НоваяКолонка("Сторно");
ТЗ.НоваяКолонка("Авторасчет");

ТЗ.НоваяКолонка("БазовыйПериодНачало");
ТЗ.НоваяКолонка("БазовыйПериодКонец");

ТЗ.НоваяКолонка("ГрафикРаботы");
ТЗ.НоваяКолонка("ВидУчетаВремени");

ТЗ.НоваяКолонка("ДокументОснование");
ТЗ.НоваяКолонка("Получатель");

Если Параметры.РаспределятьПоИсточникамФинансирования = 1 Тогда
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("КОСГУ");
	ТЗ.НоваяКолонка("ВидОперацииБУ");
КонецЕсли;

Возврат ТЗ</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗУчетПлановыхНачислений" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ	= СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("Организация");
ТЗ.НоваяКолонка("Сотрудник");
ТЗ.НоваяКолонка("ВидРасчета");
ТЗ.НоваяКолонка("КодДоходаЕСН");
ТЗ.НоваяКолонка("ДокументОснование");
Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	ТЗ.НоваяКолонка("СпособОтраженияВБухучете");
	ТЗ.НоваяКолонка("ОтнесениеРасходовКДеятельностиЕНВД");
Иначе
	ТЗ.НоваяКолонка("СтатьяФинансирования");
	ТЗ.НоваяКолонка("СтатьяРасходов");
	ТЗ.НоваяКолонка("КОСГУ");
КонецЕсли;

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СоздатьТЗШтатноеРасписание" ИспользуетсяПриЗагрузке="false">
			<Текст>ТЗ = СоздатьОбъект("ТаблицаЗначений");
ТЗ.НоваяКолонка("ПодразделениеОрганизации");
ТЗ.НоваяКолонка("Должность");
ТЗ.НоваяКолонка("Период");
ТЗ.НоваяКолонка("ВалютаТарифнойСтавки");
ТЗ.НоваяКолонка("КоличествоСтавок");

Если Параметры.РаспределятьПоИсточникамФинансирования = 0 Тогда
	ТЗ.НоваяКолонка("ВидТарифнойСтавки");
	ТЗ.НоваяКолонка("МинимальнаяТарифнаяСтавка");
	ТЗ.НоваяКолонка("МаксимальнаяТарифнаяСтавка");
Иначе
	ТЗ.НоваяКолонка("Организация");
	ТЗ.НоваяКолонка("Порядок");
	ТЗ.НоваяКолонка("ВидРасчета");
	ТЗ.НоваяКолонка("МесячнаяСтавка");
КонецЕсли;

Возврат ТЗ;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СотрудникБезДоговора" ИспользуетсяПриЗагрузке="false">
			<Текст>Сотрудник = ИсходящиеДанные;

ВидДоговора = Сотрудник.Получить("ВидДоговора");

Если (ПустоеЗначение(ВидДоговора) = 1) ИЛИ (ВидДоговора = "ДоговорУправленческий") Тогда
	Возврат 1;
Иначе
	Возврат 0;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СреднийЗаработокПоляПоиска" ИспользуетсяПриЗагрузке="true">
			<Текст>НаименованиеВР = СвойстваПоиска.Получить("Наименование");

Если НомерВариантаПоиска = 1 Тогда
	Если Найти(НаименованиеВР, " ") = 0 Тогда
		СсылкаНаОбъект = одНайтиОбъектПоСвойству(ПланыВидовРасчета.СреднийЗаработок, "{ИмяПредопределенногоЭлемента}", НаименованиеВР);
	КонецЕсли;
	
ИначеЕсли НомерВариантаПоиска = 2 Тогда
	СсылкаНаОбъект = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.СреднийЗаработок, НаименованиеВР);
	
Иначе
	СтрокаИменСвойствПоиска = "Наименование";
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="СформироватьПроводкиПоНалоговомуУчету" ИспользуетсяПриЗагрузке="true">
			<Текст>Для Каждого СтрокаТЧ из Объект.Движения.БУОсновныеНачисления Цикл	
	
	Если СтрокаТЧ.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
		Продолжить;
	КонецЕсли;
	
	СтрокаТЧ.СчетДтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СтрокаТЧ.СчетДт));
	СтрокаТЧ.СубконтоДтНУ1 = СтрокаТЧ.СубконтоДт1;
	СтрокаТЧ.СубконтоДтНУ2 = СтрокаТЧ.СубконтоДт2;
	СтрокаТЧ.СубконтоДтНУ3 = СтрокаТЧ.СубконтоДт3;
	
	СтрокаТЧ.СчетКтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СтрокаТЧ.СчетКт));
	СтрокаТЧ.СубконтоКтНУ1 = СтрокаТЧ.СубконтоКт1;
	Если СтрокаТЧ.СчетКтНУ = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда 
		И ЗначениеЗаполнено(СтрокаТЧ.СубконтоКтНУ1) Тогда
		СтрокаТЧ.СубконтоКтНУ2 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп1ст255;
	Иначе
		СтрокаТЧ.СубконтоКтНУ2 = СтрокаТЧ.СубконтоКт2;
	КонецЕсли;
	СтрокаТЧ.СубконтоКтНУ3 = СтрокаТЧ.СубконтоКт3;
		
КонецЦикла;

Для Каждого СтрокаТЧ из Объект.Движения.БУДополнительныеНачисления Цикл	
	
	Если СтрокаТЧ.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда Тогда
		Продолжить
	КонецЕсли;

	СтрокаТЧ.СчетДтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СтрокаТЧ.СчетДт));
	СтрокаТЧ.СубконтоДтНУ1 = СтрокаТЧ.СубконтоДт1;
	СтрокаТЧ.СубконтоДтНУ2 = СтрокаТЧ.СубконтоДт2;
	СтрокаТЧ.СубконтоДтНУ3 = СтрокаТЧ.СубконтоДт3;
	
	СтрокаТЧ.СчетКтНУ = БухгалтерскийУчетДополнительный.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СтрокаТЧ.СчетКт));
	СтрокаТЧ.СубконтоКтНУ1 = СтрокаТЧ.СубконтоКт1;
	Если СтрокаТЧ.СчетКтНУ = ПланыСчетов.Налоговый.РасчетыСПерсоналомПоОплатеТруда 
		И ЗначениеЗаполнено(СтрокаТЧ.СубконтоКтНУ1) Тогда
		СтрокаТЧ.СубконтоКтНУ2 = Перечисления.ВидыНачисленийОплатыТрудаПоСт255НК.пп1ст255;
	Иначе
		СтрокаТЧ.СубконтоКтНУ2 = СтрокаТЧ.СубконтоКт2;
	КонецЕсли;
	СтрокаТЧ.СубконтоКтНУ3 = СтрокаТЧ.СубконтоКт3;
	
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ТаблицаПреобразованияКодовВычетов" ИспользуетсяПриЗагрузке="false">
			<Текст>Таб = СоздатьОбъект("ТаблицаЗначений");
Таб.НоваяКолонка("Код");
Таб.НоваяКолонка("Код2015");
Таб.НоваяКолонка("Код2011");
Таб.НоваяКолонка("Код2009");
Таб.НоваяКолонка("Код2008");
Таб.НоваяКолонка("Код2007"); 

ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"103","103","103","103","103","103");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"104","104","104","104","104","104");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"105","105","105","105","105","105");	
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"114","114","114","108","101","101");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"115","115","115","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"116","116","116","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"117 (о)","117","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"117","117","117","109","106","106");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"118","118","118","110","102","102");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"119","119","119","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"120","120","120","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"121 (о)","120","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"121","121","121","112","107","107");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"122","122","122","111","-","-");	
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"123","123","123","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"124","124","124","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"125(о)","125","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"125","125","125","113","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"201","201","201","307","307","307");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"202","202","202","308","308","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"203","203","203","309","309","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"204","-","204","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"205","205","205","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"206","206","206","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"207","207","207","305","305","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"208","-","208","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"209","209","209","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"210","210","210","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"211","211","211","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"212","-","212","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"213","213","213","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"214","-","214","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"215","215","215","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"216","216","216","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"217","217","217","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"218","218","218","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"219","219","219","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"220","220","220","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"221","221","221","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"222","222","222","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"223","223","223","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"224","224","224","-","-","-"); 
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"306","306","-","306","306","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"310","310","-","310","310","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"311","311","311","311","313","311");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"312","312","312","312","312","312");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"318","312","318","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"320","320","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"321","321","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"324","324","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"325","325","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"326","326","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"327/319","327","319","319","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"328/620","328","328","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"403","403","403","403","403","403");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"404","404","404","404","404","404");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"405","405","405","405","405","405");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"501","501","501","501","501","501");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"502","502","502","502","502","502");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"503","503","503","503","503","503");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"504","504","504","504","504","504");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"505","505","505","505","505","505"); 
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"506","506","506","506","506","506");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"507","507","507","507","507","507");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"508","508","508","508","508","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"509","509","509","509","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"510/607","510","607","607","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"601","601","601","601","601","601");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"617","617","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"618","618","-","-","-","-");
ДобавитьСтрокуВычетовНДФЛВТаблицу(Таб,"620","620","620","620","620","620");

Возврат Таб;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УдержанияОрганизацийПоляПоиска" ИспользуетсяПриЗагрузке="true">
			<Текст>НаименованиеВР = СвойстваПоиска.Получить("Наименование");

Если НомерВариантаПоиска = 1 Тогда
	Если Найти(НаименованиеВР, " ") = 0 Тогда
		СсылкаНаОбъект = одНайтиОбъектПоСвойству(ПланыВидовРасчета.УдержанияОрганизаций, "{ИмяПредопределенногоЭлемента}", НаименованиеВР);
	КонецЕсли;
	
ИначеЕсли НомерВариантаПоиска = 2 Тогда
	СсылкаНаОбъект = ОбщегоНазначенияЗК.ОсобыйЭлемент(ПланыВидовРасчета.УдержанияОрганизаций, НаименованиеВР);
	
Иначе
	СтрокаИменСвойствПоиска = "Наименование";
	
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьАктуальность" ИспользуетсяПриЗагрузке="true">
			<Текст>Если Объект.Метаданные().Реквизиты.Найти("Актуальность") &lt;&gt; Неопределено Тогда
	Объект.Актуальность = Истина;
КонецЕсли;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьЗначенияКонстант" ИспользуетсяПриЗагрузке="true">
			<Текст>// В ЗУП действий не требуется</Текст>
		</Алгоритм>
		<Алгоритм Имя="УстановитьНовуюКатегорию" ИспользуетсяПриЗагрузке="true">
			<Текст>Пока ВыборкаИзЗапроса.Следующий() Цикл
	ВидРасчетаОбъект = ВыборкаИзЗапроса.Ссылка.ПолучитьОбъект();
	ВидРасчетаОбъект.КатегорияРасчета		= КатегорияРасчета;
	ВидРасчетаОбъект.ОбменДанными.Загрузка	= Истина;
	ВидРасчетаОбъект.Записать();
КонецЦикла;</Текст>
		</Алгоритм>
		<Алгоритм Имя="УточнитьУчетПоСотруднику" ИспользуетсяПриЗагрузке="false">
			<Текст>ШаблонУчета		= ИсходящиеДанные;
Объект			= ВходящиеДанные;
ВР				= Источник;
Результат		= Приемник;
ДатаНач			= ТипПриемника;
ДатаКон			= Значение;

Если ШаблонУчета.Выбран() = 1 Тогда
	Возврат ШаблонУчета
КонецЕсли;

ТаблицаРаспределения = СоздатьОбъект("ТаблицаЗначений");
СпрШаблонов = СоздатьОбъект("Справочник.ШаблоныПроводок");
СпрШаблонов.НайтиПоНаименованию("Не отражать в бухгалтерском учете"); 
ШаблонПоУмолчанию = СпрШаблонов.ТекущийЭлемент(); 
ТаблицаРаспределения.НоваяКолонка("Шаблон","Справочник.ШаблоныПроводок");
ТаблицаРаспределения.НоваяКолонка("Сумма","Число",15,2,,);
ИмяРеквизитаУчета = "ШаблонПроводки"; 


ШаблонСотрудника = Объект.ПолучитьАтрибут(ИмяРеквизитаУчета).Получить(ДатаКон);
Если ШаблонСотрудника.Выбран() = 1 Тогда
	Возврат ШаблонСотрудника
КонецЕсли;

Подразделение = Объект.Подразделение.Получить(ДатаКон); 			
// при определении шаблона проводки по подразделению сначала поищем док. "Бухучет начислений..." с выбранным подразделением, 
// если не найдем, будем смотреть проводку подразделения в спр. подразделений

// поищем документы по распределению начислений подразделения
Документы = СоздатьОбъект("Документ.БухучетНачислений");
ДокРаспределение = ПолучитьПустоеЗначение("Документ.БухучетНачислений");
ДатаВыборки = КонМесяца(ДатаКон);
Если Документы.ВыбратьДокументы(ДатаВыборки,ДатаВыборки) = 1 Тогда
	Пока Документы.ПолучитьДокумент()=1 Цикл
		Если (Документы.Проведен() = 0) или (ПустоеЗначение(Документы.Сотрудник) = 1) или (Документы.ВидУчета &lt;&gt;1) Тогда
			Продолжить;
		КонецЕсли;
		Если Документы.Сотрудник &lt;&gt; Подразделение Тогда
			Продолжить;
		КонецЕсли;
		ДокРаспределение = Документы.ТекущийДокумент();
		Прервать
	КонецЦикла
КонецЕсли;
Если (ДокРаспределение.Выбран() = 1) Тогда
	// обнаружен документ - распределение
	ВсегоРазмерРаспределения = ДокРаспределение.Итог("РазмерРаспределения");
	Если ВсегоРазмерРаспределения &gt; 0 Тогда
		ВсегоСтрок = ДокРаспределение.КоличествоСтрок();
		Коэффициент = Результат / ВсегоРазмерРаспределения;
		НакопленоРаспределенногоРезультата = 0;
		Строк = 1;
		Пока ДокРаспределение.ПолучитьСтроку() = 1 Цикл
			Если Строк = ВсегоСтрок Тогда
				ТекущаяСумма = Результат - НакопленоРаспределенногоРезультата;
			Иначе
				ТекущаяСумма = ДокРаспределение.РазмерРаспределения * Коэффициент;
			КонецЕсли;
			Строк = Строк + 1;
			ШаблонУчета = УточнитьУчетПоСотруднику(ДокРаспределение.ПолучитьАтрибут(ИмяРеквизитаУчета),Объект,ПолучитьПустоеЗначение("ВидРасчета"),ТекущаяСумма,ДатаНач,ДатаКон);
		
			НакопленоРаспределенногоРезультата = НакопленоРаспределенногоРезультата + ТекущаяСумма;
			Если (ТипЗначения(ШаблонУчета) = 11) или (ТипЗначения(ШаблонУчета) = 10) Тогда
				ТаблицаРаспределения.НоваяСтрока();
				ТаблицаРаспределения.Сумма = ТекущаяСумма;
				ТаблицаРаспределения.Шаблон = ?(ШаблонУчета.Выбран() = 0,ШаблонПоУмолчанию,ШаблонУчета);
			ИначеЕсли ТипЗначения(ШаблонУчета) = 100 Тогда
				глПереписатьИзТаблицыВТаблицу(ШаблонУчета,ТаблицаРаспределения)
			КонецЕсли;
		КонецЦикла;
		Возврат ТаблицаРаспределения
	КонецЕсли;
КонецЕсли;

// проверим шаблон в спр. подразделений
Если Подразделение.ПолучитьАтрибут(ИмяРеквизитаУчета).Выбран() = 1 Тогда
	Возврат Подразделение.ПолучитьАтрибут(ИмяРеквизитаУчета)
ИначеЕсли Подразделение.Выбран() = 1 Тогда
	// в самом элементе шаблон проводок не заполнен, проверим его родителей 
	Если Подразделение.Уровень() &gt; 1 Тогда
		РгруппаПодразделения = Подразделение;
		Для Сч = -Подразделение.Уровень() По -2 Цикл  
			РгруппаПодразделения = РгруппаПодразделения.Родитель;
			Если РгруппаПодразделения.ПолучитьАтрибут(ИмяРеквизитаУчета).Выбран() = 1 Тогда
				Возврат РгруппаПодразделения.ПолучитьАтрибут(ИмяРеквизитаУчета)													
			КонецЕсли;												
		КонецЦикла;
	КонецЕсли;
КонецЕсли;

Возврат Константа.ПроводкаПоУмолчанию;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ШаблонПроводкиПоУмолчанию" ИспользуетсяПриЗагрузке="false">
			<Текст>ШаблонПроводки = Константа.ПроводкаПоУмолчанию;

Если ПустоеЗначение(ШаблонПроводки) = 1 Тогда
	СчетДебета = СоздатьОбъект("Справочник.ПланСчетов");
	Если СчетДебета.НайтиПоКоду("401.01.1") = 1 Тогда
		ШаблонПроводки = СоздатьОбъект("ТаблицаЗначений");
		ШаблонПроводки.НоваяКолонка("Код");
		ШаблонПроводки.НоваяКолонка("Наименование");
		ШаблонПроводки.НоваяКолонка("СчетДебета");
		ШаблонПроводки.НоваяКолонка("СчетКредита");
		ШаблонПроводки.НоваяКолонка("ПодпадаетПодЕНВД");
		ШаблонПроводки.НоваяКолонка("Субконто1Дебета");
		ШаблонПроводки.НоваяКолонка("Субконто2Дебета");
		ШаблонПроводки.НоваяКолонка("Субконто3Дебета");
		ШаблонПроводки.НоваяКолонка("Субконто4Дебета");
		ШаблонПроводки.НоваяКолонка("Субконто5Дебета");
		ШаблонПроводки.НоваяКолонка("Субконто6Дебета");
		ШаблонПроводки.НоваяКолонка("Субконто7Дебета");
		ШаблонПроводки.НоваяКолонка("Субконто1Кредита");
		ШаблонПроводки.НоваяКолонка("Субконто2Кредита");
		ШаблонПроводки.НоваяКолонка("Субконто3Кредита");
		ШаблонПроводки.НоваяКолонка("Субконто4Кредита");
		ШаблонПроводки.НоваяКолонка("ВидНачисления");
		ШаблонПроводки.НоваяКолонка("Балансодержатель");
		
		ШаблонПроводки.НоваяСтрока();
		ШаблонПроводки.Наименование	= СчетДебета.Наименование;
		ШаблонПроводки.СчетДебета	= СчетДебета;
	КонецЕсли;
КонецЕсли;

Возврат ШаблонПроводки;</Текст>
		</Алгоритм>
		<Алгоритм Имя="ЯвляетсяАвторскимДоговором" ИспользуетсяПриЗагрузке="false">
			<Текст>ВР = ИсходящиеДанные;

Возврат ?(
	(ВР = ВидРасчета.Авторские)
	Или (ВР = ВидРасчета.ЛицензионныеВыплаты)
	Или (ВР = ВидРасчета.ВыплатыЗаОтчуждениеИсключительныхПрав)
, 1, 0);</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>
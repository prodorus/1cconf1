
//#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСВызовСервера.ПриПолученииФормыРегистраСведений(
		"НастройкиОбменаЕГАИС",
		ВидФормы,
		Параметры,
		ВыбраннаяФорма,
		ДополнительнаяИнформация,
		СтандартнаяОбработка);
	
КонецПроцедуры

//#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////#Область ОбновлениеИнформационнойБазы

//// Регистрирует записи регистра с незаполненным таймаутом.
////
Функция ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиОбменаЕГАИС.ИдентификаторФСРАР КАК ИдентификаторФСРАР,
	|	НастройкиОбменаЕГАИС.УдалитьИзмерениеОрганизация КАК УдалитьИзмерениеОрганизация,
	|	НастройкиОбменаЕГАИС.УдалитьИзмерениеСклад КАК УдалитьИзмерениеСклад,
	|	НастройкиОбменаЕГАИС.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|ГДЕ
	|	НастройкиОбменаЕГАИС.Таймаут = 0";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Заполняет таймаут в зарегистрированных к обработке записях регистра.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(ТаблицаЗаписей) Экспорт
	
	Для Каждого ДанныеКОбработке Из ТаблицаЗаписей Цикл
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИдентификаторФСРАР", ДанныеКОбработке.ИдентификаторФСРАР);
		Запрос.УстановитьПараметр("УдалитьИзмерениеОрганизация", ДанныеКОбработке.УдалитьИзмерениеОрганизация);
		Запрос.УстановитьПараметр("УдалитьИзмерениеСклад", ДанныеКОбработке.УдалитьИзмерениеСклад);
		Запрос.УстановитьПараметр("РабочееМесто", ДанныеКОбработке.РабочееМесто);
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиОбменаЕГАИС.ИдентификаторФСРАР КАК ИдентификаторФСРАР,
		|	НастройкиОбменаЕГАИС.УдалитьИзмерениеОрганизация КАК УдалитьИзмерениеОрганизация,
		|	НастройкиОбменаЕГАИС.УдалитьИзмерениеСклад КАК УдалитьИзмерениеСклад,
		|	НастройкиОбменаЕГАИС.РабочееМесто КАК РабочееМесто,
		|	НастройкиОбменаЕГАИС.АдресУТМ КАК АдресУТМ,
		|	НастройкиОбменаЕГАИС.ПортУТМ КАК ПортУТМ,
		|	ВЫБОР
		|		КОГДА НастройкиОбменаЕГАИС.Таймаут = 0
		|			ТОГДА 60
		|		ИНАЧЕ НастройкиОбменаЕГАИС.Таймаут
		|	КОНЕЦ КАК Таймаут,
		|	НастройкиОбменаЕГАИС.ОбменНаСервере КАК ОбменНаСервере,
		|	НастройкиОбменаЕГАИС.ОбменНаКлиентеРасписание КАК ОбменНаКлиентеРасписание,
		|	НастройкиОбменаЕГАИС.ОбменНаКлиентеПоРасписанию КАК ОбменНаКлиентеПоРасписанию,
		|	НастройкиОбменаЕГАИС.ЗагружатьВходящиеДокументы КАК ЗагружатьВходящиеДокументы
		|ИЗ
		|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		|ГДЕ
		|	НастройкиОбменаЕГАИС.ИдентификаторФСРАР = &ИдентификаторФСРАР
		|	И НастройкиОбменаЕГАИС.РабочееМесто = &РабочееМесто
		|	И НастройкиОбменаЕГАИС.УдалитьИзмерениеОрганизация = &УдалитьИзмерениеОрганизация
		|	И НастройкиОбменаЕГАИС.УдалитьИзмерениеСклад = &УдалитьИзмерениеСклад";
		
		НаборЗаписей = РегистрыСведений.НастройкиОбменаЕГАИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторФСРАР.Установить(ДанныеКОбработке.ИдентификаторФСРАР);
		НаборЗаписей.Отбор.УдалитьИзмерениеОрганизация.Установить(ДанныеКОбработке.УдалитьИзмерениеОрганизация);
		НаборЗаписей.Отбор.УдалитьИзмерениеСклад.Установить(ДанныеКОбработке.УдалитьИзмерениеСклад);
		НаборЗаписей.Отбор.РабочееМесто.Установить(ДанныеКОбработке.РабочееМесто);
		
		НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры

////#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрСведений.НастройкиОбменаЕГАИС";
	
КонецФункции

//#КонецОбласти

#КонецЕсли
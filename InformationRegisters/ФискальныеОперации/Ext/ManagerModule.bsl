#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Область "Обновление"

Функция ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию() Экспорт
	
	//Сделать вычитку порциями
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналФискальныхОпераций.ДокументОснование КАК ДокументОснование,
	               |	ЖурналФискальныхОпераций.ИдентификаторЗаписи КАК ИдентификаторЗаписи
	               |ИЗ
	               |	РегистрСведений.ЖурналФискальныхОпераций КАК ЖурналФискальныхОпераций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	               |		ПО ЖурналФискальныхОпераций.ДокументОснование = ФискальныеОперации.ДокументОснование
	               |			И ЖурналФискальныхОпераций.ИдентификаторЗаписи = ФискальныеОперации.ИдентификаторЗаписи
	               |ГДЕ
	               |	ФискальныеОперации.ДокументОснование ЕСТЬ NULL";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию() Экспорт
	
	ЗаписиКОбработке = ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию();
	
	Если ЗаписиКОбработке.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖурналФискальныхОпераций.ДокументОснование КАК ДокументОснование,
	               |	ЖурналФискальныхОпераций.ИдентификаторЗаписи КАК ИдентификаторЗаписи,
	               |	ЖурналФискальныхОпераций.Дата КАК Дата,
	               |	ЖурналФискальныхОпераций.Организация КАК Организация,
	               |	ЖурналФискальныхОпераций.ТорговыйОбъект КАК ТорговыйОбъект,
	               |	"""" КАК ЗаводскойНомерФН,
	               |	"""" КАК РегистрационныйНомерККТ,
	               |	ВЫБОР ЖурналФискальныхОпераций.ТипОперации
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацииКассовогоУзла.ФискальнаяОперация)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФискальныхДокументовККТ.КассовыйЧек)
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацииКассовогоУзла.ВнесениеДенежныхСредств)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФискальныхДокументовККТ.Внесение)
	               |		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацииКассовогоУзла.ВыемкаДенежныхСредств)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыФискальныхДокументовККТ.Выемка)
	               |	КОНЕЦ КАК ТипДокумента,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияТипРасчета КАК ТипРасчета,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияНомерЧекаККМ КАК НомерЧекаККМ,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияНомерСменыККМ КАК НомерСменыККМ,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСумма КАК Сумма,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаОплатыНаличные КАК ОплатаНаличные,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаОплатыПлатежнаяКарта КАК ОплатаЭлектронно,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаПредоплаты КАК ОплатаПредоплата,
	               |	ЖурналФискальныхОпераций.ФискальнаяОперацияСуммаКредит КАК ОплатаПостоплата,
	               |	ЖурналФискальныхОпераций.Данные КАК ДанныеXML
	               |ИЗ
	               |	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналФискальныхОпераций КАК ЖурналФискальныхОпераций
	               |		ПО (ЖурналФискальныхОпераций.ДокументОснование = СсылкиДляОбработки.ДокументОснование)
	               |			И (ЖурналФискальныхОпераций.ИдентификаторЗаписи = СсылкиДляОбработки.ИдентификаторЗаписи)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	               |		ПО (ЖурналФискальныхОпераций.ТорговыйОбъект ССЫЛКА Справочник.КассыККМ)
	               |			И (КассыККМ.Ссылка = ЖурналФискальныхОпераций.ТорговыйОбъект)";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВТДляОбработкиСсылка", ЗаписиКОбработке);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ФискальныеОперации");
 			ЭлементБлокировки.УстановитьЗначение("ДокументОснование", Выборка.ДокументОснование);
 			ЭлементБлокировки.УстановитьЗначение("ИдентификаторЗаписи", Выборка.ИдентификаторЗаписи);
 			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.ФискальныеОперации.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументОснование.Установить(Выборка.ДокументОснование);
			НаборЗаписей.Отбор.ИдентификаторЗаписи.Установить(Выборка.ИдентификаторЗаписи);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

// Конец области "Обновление"

#КонецЕсли
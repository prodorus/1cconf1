#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура СформироватьОтчет(Знач СтруктураПараметров, АдресХранилища) Экспорт

	ПодготовитьОтчет(СтруктураПараметров);
	
	ПоместитьВоВременноеХранилище(СтруктураПараметров, АдресХранилища);
	
КонецПроцедуры

Процедура ПодготовитьОтчет(СтруктураПараметров)

	Если ЗначениеЗаполнено(СтруктураПараметров.КонтрагентДляОтбора)
		ИЛИ СтруктураПараметров.ВыводитьПокупателейПоАвансам
		ИЛИ СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтандартнаяФорма = Ложь;
	Иначе
		СтандартнаяФорма = УчетНДС.ПериодОтчетаСоответствуетНалоговому(
			СтруктураПараметров.Организация, СтруктураПараметров.НачалоПериода, СтруктураПараметров.КонецПериода);
	КонецЕсли;

	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме", СтандартнаяФорма);
	
	СписокОрганизаций = Новый СписокЗначений;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		СписокОрганизаций = СтруктураПараметров.СписокОрганизаций;
	ИначеЕсли НЕ СтруктураПараметров.ВключатьОбособленныеПодразделения Тогда
		СписокОрганизаций = Новый СписокЗначений;
		СписокОрганизаций.Добавить(СтруктураПараметров.Организация);
	Иначе
		СписокОрганизаций = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(
			СтруктураПараметров.Организация);
		СписокОрганизаций.Добавить(СтруктураПараметров.Организация);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	СтруктураПараметров.Вставить("ЗаписьДополнительногоЛиста", Ложь);
	СтруктураПараметров.Вставить("ПрефиксыРИБиОрганизации",
		ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(СтруктураПараметров.Организация));
		
	ИнициализироватьТаблицыДанныхНДС(СтруктураПараметров);
	
	СтруктураПараметров.СписокСформированныхЛистов.Очистить();
	СписокСообщений = Новый СписокЗначений();
		
	Если НЕ (СтруктураПараметров.ВыводитьТолькоДопЛисты И СтруктураПараметров.ФормироватьДополнительныеЛисты) Тогда
		
		СтруктураПараметров.Вставить("ВерсияПостановленияНДС1137", 
			УчетНДС.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериода));
		СтруктураПараметров.Вставить("Постановление1137_2019",
			УчетНДС.ПрименяетсяПостановление15(СтруктураПараметров.КонецПериода));
		
		Результат = ЗаписиКнигиПокупок(СтруктураПараметров);
	
		СформироватьОсновнойРаздел(СтруктураПараметров, Результат);
		
	КонецЕсли;
		
	// Проверка наличия дополнительных листов за текущий период
	СтруктураПараметров = ПроверитьНаличиеДопЛистовКнигиПокупок(СтруктураПараметров);
	
	Если СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод ИЛИ НЕ СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
				|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И НЕ СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
				|Построение дополнительных листов за текущий налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	Если НЕ СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод ИЛИ НЕ СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
				|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И НЕ СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
				|Построение дополнительных листов за корректируемый налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		
		СтруктураПараметров.ЗаписьДополнительногоЛиста = Истина;
		
		Если СтруктураПараметров.ЗаполнениеДокумента ИЛИ СтруктураПараметров.ЗаполнениеДекларации Тогда
			ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецНалоговогоПериода;
		Иначе
			ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецПериода;
		КонецЕсли;
		
		СтруктураПараметров.Вставить("ВерсияПостановленияНДС1137",
			УчетНДС.ВерсияПостановленияНДС1137(ДатаПроверкиПараметровУчета));
		СтруктураПараметров.Вставить("Постановление1137_2019",
			УчетНДС.ПрименяетсяПостановление15(ДатаПроверкиПараметровУчета));
		
		// Получение записей дополнительных листов
		Результат = ЗаписиКнигиПокупок(СтруктураПараметров);
		
		СформироватьДополнительныеЛисты(СтруктураПараметров, Результат);
		
	КонецЕсли;
	
	СтруктураПараметров.Вставить("СписокСообщений", СписокСообщений);
	
КонецПроцедуры

// Используется в электронном доп. листе книги покупок
Функция ПолучитьИтогиЗаПериодКнигаПокупок(СтруктураПараметров) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.ВсегоПокупок), 0) КАК ВсегоПокупок,
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаБезНДС18), 0) КАК СуммаБезНДС18,
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС18), 0) КАК НДС18,
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаБезНДС10), 0) КАК СуммаБезНДС10,
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС10), 0) КАК НДС10,
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС0), 0) КАК НДС0,
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.СуммаСовсемБезНДС), 0) КАК СуммаСовсемБезНДС,
	|	ЕСТЬNULL(СУММА(ИтогиКнигиПокупок.НДС), 0) КАК НДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот КАК ВсегоПокупок,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС0,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаСовсемБезНДС,
	|		НДСЗаписиКнигиПокупокОбороты.НДСОборот КАК НДС
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Период,
	|				Организация В (&Организация)
	|					И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И НЕ НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностей_Авансы)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|				&НачалоПериода,
	|				&МоментФормированияДопЛиста,
	|				Период,
	|				Организация В (&Организация)
	|					И ЗаписьДополнительногоЛиста
	|					И КорректируемыйПериод >= &НачалоПериода
	|					И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПокупокОбороты) КАК ИтогиКнигиПокупок";
	 
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НалоговыйПериод);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураПараметров.КонецНалоговогоПериода));
	Запрос.УстановитьПараметр("МоментФормированияДопЛиста", Новый Граница(НачалоДня(СтруктураПараметров.ДатаФормированияДопЛиста), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.СписокОрганизаций);

	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);

	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);

	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;

	Запрос.УстановитьПараметр("СтавкиНДС18",  СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10",  СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0",   СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	 
	ВидыЦенностей_Авансы = Новый Массив;
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	ВидыЦенностей_Авансы.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Авансы", ВидыЦенностей_Авансы);
	
	ИтогЗаПериод = Запрос.Выполнить();
	
	Если НЕ ИтогЗаПериод.Пустой() Тогда
		
		Возврат ИтогЗаПериод.Выгрузить()[0];
		
	Иначе
		
		ИтогЗаПериод = Новый Структура;
		ИтогЗаПериод.Вставить("ВсегоПокупок", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("СуммаБезНДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("НДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("СуммаБезНДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("НДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("НДС0", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("НДС",  ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("СуммаСовсемБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		
		Возврат ИтогЗаПериод;
		
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаРеквизитыСчетовФактурПостановление735()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры КАК ДокументОснованиеСчетаФактуры
	|ПОМЕСТИТЬ СписокДокументовОснований
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснованиеСчетаФактуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧПокупатели.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ТЧПокупатели
	|ГДЕ
	|	ТЧПокупатели.Ссылка.Проведен
	|	И НЕ ТЧПокупатели.Ссылка.ПометкаУдаления
	|	И ТЧПокупатели.Ссылка.Организация В(&Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТЧПокупатели.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|					И СчетФактураПолученный.Исправление
	|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|					И СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.АвансовыйОтчет
	|			ТОГДА СФПолученныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФПолученныйДокументыОснования.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.НомерВходящегоДокумента
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.ДатаВходящегоДокумента
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	СФПолученныйДокументыОснования.Ссылка КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ТОГДА ЕСТЬNULL(СФПолученныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДСАванса,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ТОГДА СчетФактураПолученный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	СчетФактураПолученный.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	СчетФактураПолученный.Исправление КАК Исправление,
	|	СчетФактураПолученный.Контрагент КАК Контрагент,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданныйПокупателюПоОтчетуКомиссионера,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.СводныйКорректировочный
	|			ТОГДА СФПолученныйДокументыОснования.НомерСтроки
	|		КОГДА СчетФактураПолученный.СводныйКомиссионный
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерСтроки,
	|	СчетФактураПолученный.СводныйКорректировочный КАК СводныйКорректировочный,
	|	СчетФактураПолученный.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ЛОЖЬ КАК ВозвратЧерезКомиссионера
	|ПОМЕСТИТЬ ВТ_СчетаФактурыДокументыПромежуточная
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СФПолученныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Авансы КАК СФПолученныйАвансы
	|		ПО СФПолученныйДокументыОснования.Ссылка = СФПолученныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО СФПолученныйДокументыОснования.ДокументОснование = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокСФОснований
	|		ПО СФПолученныйДокументыОснования.Ссылка = СписокСФОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СФПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|						И СчетФактураПолученный.Исправление
	|					ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|						И СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.АвансовыйОтчет
	|				ТОГДА СписокСФОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И СчетФактураПолученный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|				И (СчетФактураВыданный.Исправление
	|					ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|			ТОГДА СФВыданныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФВыданныйДокументыОснования.ДокументОснование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СчетФактураВыданный.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Номер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СчетФактураВыданный.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Дата
	|	КОНЕЦ,
	|	СФВыданныйДокументыОснования.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент)
	|			ТОГДА СчетФактураВыданный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ,
	|	СчетФактураВыданный.ВидСчетаФактуры,
	|	СчетФактураВыданный.Исправление,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.СводныйКомиссионный
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.Контрагент, СчетФактураВыданный.Контрагент)
	|		ИНАЧЕ СчетФактураВыданный.Контрагент
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера.СчетФактура ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.СводныйКомиссионный
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.НомерСтроки, СФВыданныйДокументыОснования.НомерСтроки)
	|		ИНАЧЕ СФВыданныйДокументыОснования.НомерСтроки
	|	КОНЕЦ,
	|	СчетФактураВыданный.СводныйКорректировочный,
	|	СчетФактураВыданный.СводныйКомиссионный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФВыданныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК СФВыданныйАвансы
	|		ПО СФВыданныйДокументыОснования.Ссылка = СФВыданныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера КАК ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера
	|		ПО СФВыданныйДокументыОснования.Ссылка = ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО СФВыданныйДокументыОснования.ДокументОснование = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокСФОснований
	|		ПО СФВыданныйДокументыОснования.Ссылка = СписокСФОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО СФВыданныйДокументыОснования.Ссылка = СчетФактураВыданный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|					И (СчетФактураВыданный.Исправление
	|						ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|				ТОГДА СписокСФОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И НЕ(СчетФактураВыданный.СводныйКомиссионный
	|				И СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс))
	|	И СчетФактураВыданный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Авансы.Ссылка,
	|	Авансы.Ссылка.Номер,
	|	Авансы.Ссылка.Дата,
	|	Авансы.Ссылка,
	|	Авансы.СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	Авансы.Ссылка.ВидСчетаФактуры,
	|	Авансы.Ссылка.Исправление,
	|	Авансы.Контрагент,
	|	ЛОЖЬ,
	|	Авансы.НомерСтроки,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураВыданный.Авансы КАК Авансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО Авансы.Ссылка = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|ГДЕ
	|	СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|	И Авансы.Ссылка.СводныйКомиссионный
	|	И Авансы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|	И Авансы.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.НомерГТД,
	|	ГТДИмпорт.Дата,
	|	ГТДИмпорт.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление),
	|	ЛОЖЬ,
	|	ГТДИмпорт.Контрагент,
	|	ЛОЖЬ,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО ГТДИмпорт.Ссылка = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|ГДЕ
	|	СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|	И ГТДИмпорт.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателя.НомерДокументаОтгрузки <> """"
	|			ТОГДА ВозвратТоваровОтПокупателя.НомерДокументаОтгрузки
	|		ИНАЧЕ ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателя.ДатаДокументаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВозвратТоваровОтПокупателя.ДатаДокументаОтгрузки
	|		ИНАЧЕ ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера
	|	КОНЕЦ,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление),
	|	ЛОЖЬ,
	|	ВозвратТоваровОтПокупателя.Контрагент,
	|	ЛОЖЬ,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|ГДЕ
	|	СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|	И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ВозвратТоваровОтПокупателя.НомерДокументаОтгрузки <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаДокументаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ВозвратТоваровОтПокупателя.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА НЕ СчетаФактурыДокументы.ДатаСчетаФактуры ЕСТЬ NULL
	|			ТОГДА СчетаФактурыДокументы.ДатаСчетаФактуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|				ИНАЧЕ ЗаписиКнигиПокупок.СчетФактура.Дата
	|			КОНЕЦ
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА НЕ СчетаФактурыДокументы.НомерСчетаФактуры ЕСТЬ NULL
	|			ТОГДА СчетаФактурыДокументы.НомерСчетаФактуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|				ИНАЧЕ ЗаписиКнигиПокупок.СчетФактура.Номер
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактурыДокументы.СчетФактураДокумент, ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры) КАК СчетФактураДокумент,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(СчетаФактурыДокументы.СтавкаНДСАванса, НЕОПРЕДЕЛЕНО) КАК СтавкаНДСАванса,
	|	ЕСТЬNULL(СчетаФактурыДокументы.ВидСчетаФактуры, ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)) КАК ВидСчетаФактуры,
	|	ЕСТЬNULL(СчетаФактурыДокументы.Исправление, ЛОЖЬ) КАК Исправление,
	|	СчетаФактурыДокументы.НомерСтроки КАК НомерСтроки,
	|	СчетаФактурыДокументы.СводныйКорректировочный КАК СводныйКорректировочный,
	|	СчетаФактурыДокументы.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ЗаписиКнигиПокупок.КонтрагентПоСчетуФактуре КАК Контрагент,
	|	ВЫБОР
	|		КОГДА СчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &КонецПериода >= ДАТАВРЕМЯ(2015, 1, 1)
	|						ТОГДА ""26""
	|					ИНАЧЕ ""01""
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперации,
	|	ЗаписиКнигиПокупок.ВозвратЧерезКомиссионера КАК ВозвратЧерезКомиссионера
	|ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументыПредварительная
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыДокументыПромежуточная КАК СчетаФактурыДокументы
	|		ПО ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры = СчетаФактурыДокументы.ДокументОснование
	|			И ЗаписиКнигиПокупок.КонтрагентПоСчетуФактуре = СчетаФактурыДокументы.Контрагент
	|			И ЗаписиКнигиПокупок.ДоговорКонтрагента = СчетаФактурыДокументы.ДоговорКонтрагента
	|			И ЗаписиКнигиПокупок.СтавкаНДСАванса = СчетаФактурыДокументы.СтавкаНДСАванса
	|			И ЗаписиКнигиПокупок.ВозвратЧерезКомиссионера = СчетаФактурыДокументы.ВозвратЧерезКомиссионера
	|ГДЕ
	|	НЕ(ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				И СчетаФактурыДокументы.ЭтоСчетФактураВыданныйПокупателюПоОтчетуКомиссионера)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСчетаФактурыДокументы.Контрагент КАК СчетФактураДокументКонтрагент,
	|	ТаблицаСчетаФактурыДокументы.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаСчетаФактурыДокументы.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	ТаблицаСчетаФактурыДокументы.Исправление КАК Исправление,
	|	ТаблицаСчетаФактурыДокументы.ДокументОснование КАК ДокументОснование,
	|	МАКСИМУМ(ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент,
	|	ТаблицаСчетаФактурыДокументы.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ТаблицаСчетаФактурыДокументы.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ТаблицаСчетаФактурыДокументы.КодВидаОперации КАК КодВидаОперации,
	|	ТаблицаСчетаФактурыДокументы.ВозвратЧерезКомиссионера КАК ВозвратЧерезКомиссионера
	|ПОМЕСТИТЬ ВТ_ОбъединениеСФ
	|ИЗ
	|	ТаблицаСчетаФактурыДокументыПредварительная КАК ТаблицаСчетаФактурыДокументы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСчетаФактурыДокументы.ДокументОснование,
	|	ТаблицаСчетаФактурыДокументы.Контрагент,
	|	ТаблицаСчетаФактурыДокументы.ДоговорКонтрагента,
	|	ТаблицаСчетаФактурыДокументы.ВидСчетаФактуры,
	|	ТаблицаСчетаФактурыДокументы.Исправление,
	|	ТаблицаСчетаФактурыДокументы.СводныйКорректировочный,
	|	ТаблицаСчетаФактурыДокументы.СводныйКомиссионный,
	|	ТаблицаСчетаФактурыДокументы.КодВидаОперации,
	|	ТаблицаСчетаФактурыДокументы.ВозвратЧерезКомиссионера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	СчетФактураДокументКонтрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСчетаФактурыДокументыПредварительная.ДокументОснование КАК ДокументОснование,
	|	ТаблицаСчетаФактурыДокументыПредварительная.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ТаблицаСчетаФактурыДокументыПредварительная.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ВТ_ОбъединениеСФ.СчетФактураДокумент КАК СчетФактураДокумент,
	|	ВТ_ОбъединениеСФ.СчетФактураДокументКонтрагент КАК КонтрагентПоСчетуФактуре,
	|	ТаблицаСчетаФактурыДокументыПредварительная.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаСчетаФактурыДокументыПредварительная.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ТаблицаСчетаФактурыДокументыПредварительная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСчетаФактурыДокументыПредварительная.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ТаблицаСчетаФактурыДокументыПредварительная.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ТаблицаСчетаФактурыДокументыПредварительная.КодВидаОперации КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ТаблицаСчетаФактурыДокументыПредварительная КАК ТаблицаСчетаФактурыДокументыПредварительная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбъединениеСФ КАК ВТ_ОбъединениеСФ
	|		ПО ТаблицаСчетаФактурыДокументыПредварительная.ДокументОснование = ВТ_ОбъединениеСФ.ДокументОснование
	|			И ТаблицаСчетаФактурыДокументыПредварительная.Контрагент = ВТ_ОбъединениеСФ.СчетФактураДокументКонтрагент
	|			И ТаблицаСчетаФактурыДокументыПредварительная.ДоговорКонтрагента = ВТ_ОбъединениеСФ.ДоговорКонтрагента
	|			И ТаблицаСчетаФактурыДокументыПредварительная.ВидСчетаФактуры = ВТ_ОбъединениеСФ.ВидСчетаФактуры
	|			И ТаблицаСчетаФактурыДокументыПредварительная.Исправление = ВТ_ОбъединениеСФ.Исправление
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактураДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Регистратор КАК Регистратор,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактураДокумент,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировки,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЖурналУчетаСчетовФактур.Продавец
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.Контрагент
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПродавецДляПечати,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЖурналУчетаСчетовФактур.Продавец.КПП
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.КППКонтрагента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППродавцаДляПечати,
	|	ВЫБОР
	|		КОГДА &ПравилаПостановления735
	|				И ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК ПосредникСсылка,
	|	ЖурналУчетаСчетовФактур.НомерСтроки КАК НомерСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.Валюта.Наименование КАК ВалютаНаименование,
	|	ЖурналУчетаСчетовФактур.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре
	|	КОНЕЦ КАК ВсегоПокупокВВалюте,
	|	ЖурналУчетаСчетовФактур.Валюта.Код КАК ВалютаКод,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ПОМЕСТИТЬ ВТ_РегистрацияСчетовФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.СчетФактура В
	|			(ВЫБРАТЬ
	|				ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	|			ИЗ
	|				ВТ_ТаблицаСчетаФактурыДокументы)
	|	И ЖурналУчетаСчетовФактур.Организация В(&Организация)
	|	И НЕ(ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ЖурналУчетаСчетовФактур.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЖурналУчетаСчетовФактур.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры) КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактураДокумент, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент,
	|	ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактурыСортировка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ КАК ДатаСчетаФактурыСортировка,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДокументОснование КАК ДокументОснованиеСчетаФактуры,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК СчетФактураДокументРасшифровка,
	|	ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировки,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.СчетФактураВыданный
	|				ИЛИ ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_РегистрацияСчетовФактур.СчетФактураДокумент ЕСТЬ NULL
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ПродавецДляПечати, ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре) КАК ПродавецДляПечати,
	|	ВТ_РегистрацияСчетовФактур.КПППродавцаДляПечати КАК КПППродавцаДляПечати,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ВТ_РегистрацияСчетовФактур.Валюта КАК Валюта,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименование КАК ВалютаНаименование,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	СУММА(ВТ_РегистрацияСчетовФактур.ВсегоПокупокВВалюте) КАК ВсегоПокупокВВалюте,
	|	ВТ_РегистрацияСчетовФактур.ВалютаКод КАК ВалютаКод,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.КодВидаОперации, ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации) КАК КодВидаОперации,
	|	ВТ_РегистрацияСчетовФактур.ПосредникСсылка КАК ПосредникСсылка
	|ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ВТ_ТаблицаСчетаФактурыДокументы КАК ВТ_ТаблицаСчетаФактурыДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент = ВТ_РегистрацияСчетовФактур.СчетФактураДокумент
	|			И (НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|					И НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный
	|				ИЛИ ВТ_ТаблицаСчетаФактурыДокументы.НомерСтроки = ВТ_РегистрацияСчетовФактур.НомерСтроки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДокументОснование,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры),
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры),
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактураДокумент, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент),
	|	ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорКонтрагента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент,
	|	ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправления,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправления,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.СчетФактураВыданный
	|				ИЛИ ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_РегистрацияСчетовФактур.СчетФактураДокумент ЕСТЬ NULL
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ПродавецДляПечати, ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре),
	|	ВТ_РегистрацияСчетовФактур.КПППродавцаДляПечати,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре,
	|	ВТ_РегистрацияСчетовФактур.Валюта,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименование,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименованиеПолное,
	|	ВТ_РегистрацияСчетовФактур.ВалютаКод,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.КодВидаОперации, ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации),
	|	ВТ_РегистрацияСчетовФактур.ПосредникСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснованиеСчетаФактуры,
	|	КонтрагентПоСчетуФактуре"
		+ УчетНДС.РазделительПакетаЗапросов();
	
КонецФункции

Функция ТекстЗапросаРеквизитыСчетовФактурПостановление981()
	
	// Для списка счетов-фактур получаем данные документов-оснований.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры КАК ДокументОснованиеСчетаФактуры
	|ПОМЕСТИТЬ СписокДокументовОснований
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснованиеСчетаФактуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧПокупатели.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ТЧПокупатели
	|ГДЕ
	|	ТЧПокупатели.Ссылка.Проведен
	|	И НЕ ТЧПокупатели.Ссылка.ПометкаУдаления
	|	И ТЧПокупатели.Ссылка.Организация В(&Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТЧПокупатели.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|					ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс))
	|					И СчетФактураПолученный.Исправление
	|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|					И СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.АвансовыйОтчет
	|			ТОГДА СФПолученныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФПолученныйДокументыОснования.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.НомерВходящегоДокумента
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.ДатаВходящегоДокумента
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	СФПолученныйДокументыОснования.Ссылка КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс)
	|			ТОГДА ЕСТЬNULL(СФПолученныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДСАванса,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс)
	|			ТОГДА СчетФактураПолученный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	СчетФактураПолученный.Исправление КАК Исправление,
	|	СчетФактураПолученный.Контрагент КАК Контрагент,
	|	СчетФактураПолученный.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	ЛОЖЬ КАК ЭтоСчетФактураВыданныйПокупателюПоОтчетуКомиссионера,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.СводныйКорректировочный
	|			ТОГДА СФПолученныйДокументыОснования.НомерСтроки
	|		КОГДА СчетФактураПолученный.СводныйКомиссионный
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерСтроки,
	|	СчетФактураПолученный.СводныйКорректировочный КАК СводныйКорректировочный,
	|	СчетФактураПолученный.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ЛОЖЬ КАК ВозвратЧерезКомиссионера
	|ПОМЕСТИТЬ ВТ_СчетаФактурыДокументыПромежуточная
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СФПолученныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Авансы КАК СФПолученныйАвансы
	|		ПО СФПолученныйДокументыОснования.Ссылка = СФПолученныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО СФПолученныйДокументыОснования.ДокументОснование = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокСФОснований
	|		ПО СФПолученныйДокументыОснования.Ссылка = СписокСФОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СФПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА (СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|						ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс))
	|						И СчетФактураПолученный.Исправление
	|					ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|						И СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.АвансовыйОтчет
	|				ТОГДА СписокСФОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И СчетФактураПолученный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|				И (СчетФактураВыданный.Исправление
	|					ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|			ТОГДА СФВыданныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФВыданныйДокументыОснования.ДокументОснование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СчетФактураВыданный.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Номер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СчетФактураВыданный.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Дата
	|	КОНЕЦ,
	|	СФВыданныйДокументыОснования.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент)
	|			ТОГДА СчетФактураВыданный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ,
	|	СчетФактураВыданный.Исправление,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.СводныйКомиссионный
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.Контрагент, СчетФактураВыданный.Контрагент)
	|		ИНАЧЕ СчетФактураВыданный.Контрагент
	|	КОНЕЦ,
	|	СчетФактураВыданный.ВидСчетаФактуры,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера.СчетФактура ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.СводныйКомиссионный
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.НомерСтроки, СФВыданныйДокументыОснования.НомерСтроки)
	|		ИНАЧЕ СФВыданныйДокументыОснования.НомерСтроки
	|	КОНЕЦ,
	|	СчетФактураВыданный.СводныйКорректировочный,
	|	СчетФактураВыданный.СводныйКомиссионный,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФВыданныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК СФВыданныйАвансы
	|		ПО СФВыданныйДокументыОснования.Ссылка = СФВыданныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера КАК ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера
	|		ПО СФВыданныйДокументыОснования.Ссылка = ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО СФВыданныйДокументыОснования.ДокументОснование = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокСФОснований
	|		ПО СФВыданныйДокументыОснования.Ссылка = СписокСФОснований.ДокументОснованиеСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО СФВыданныйДокументыОснования.Ссылка = СчетФактураВыданный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|					И (СчетФактураВыданный.Исправление
	|						ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|				ТОГДА СписокСФОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И НЕ(СчетФактураВыданный.СводныйКомиссионный
	|				И СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс))
	|	И СчетФактураВыданный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Авансы.Ссылка,
	|	Авансы.Ссылка.Номер,
	|	Авансы.Ссылка.Дата,
	|	Авансы.Ссылка,
	|	Авансы.СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	Авансы.Ссылка.Исправление,
	|	Авансы.Контрагент,
	|	Авансы.Ссылка.ВидСчетаФактуры,
	|	ЛОЖЬ,
	|	Авансы.НомерСтроки,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СчетФактураВыданный.Авансы КАК Авансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО Авансы.Ссылка = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|ГДЕ
	|	СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|	И Авансы.Ссылка.СводныйКомиссионный
	|	И Авансы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|	И Авансы.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.НомерГТД,
	|	ГТДИмпорт.Дата,
	|	ГТДИмпорт.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ГТДИмпорт.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление),
	|	ЛОЖЬ,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО ГТДИмпорт.Ссылка = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|ГДЕ
	|	СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|	И ГТДИмпорт.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателя.НомерДокументаОтгрузки <> """"
	|			ТОГДА ВозвратТоваровОтПокупателя.НомерДокументаОтгрузки
	|		ИНАЧЕ ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателя.ДатаДокументаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВозвратТоваровОтПокупателя.ДатаДокументаОтгрузки
	|		ИНАЧЕ ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера
	|	КОНЕЦ,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ВозвратТоваровОтПокупателя.Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление),
	|	ЛОЖЬ,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументовОснований КАК СписокДокументовОснований
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = СписокДокументовОснований.ДокументОснованиеСчетаФактуры
	|ГДЕ
	|	СписокДокументовОснований.ДокументОснованиеСчетаФактуры ЕСТЬ НЕ NULL 
	|	И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ВозвратТоваровОтПокупателя.НомерДокументаОтгрузки <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаДокументаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ВозвратТоваровОтПокупателя.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	КорректировкаРеализации.ДокументРеализации.Номер,
	|	КорректировкаРеализации.ДокументРеализации.Дата,
	|	КорректировкаРеализации.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	КорректировкаРеализации.Контрагент,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ
	|ИЗ
	|	СписокДокументовОснований КАК СписокДокументовОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|			ПО (СчетФактураВыданныйДокументыОснования.Ссылка.Проведен
	|					И КорректировкаРеализации.Ссылка = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|					И СчетФактураВыданныйДокументыОснования.Ссылка.ВидСчетаФактуры <> ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс))
	|		ПО СписокДокументовОснований.ДокументОснованиеСчетаФактуры = КорректировкаРеализации.Ссылка
	|			И (СписокДокументовОснований.ДокументОснованиеСчетаФактуры ССЫЛКА Документ.КорректировкаРеализации)
	|ГДЕ
	|	СчетФактураВыданныйДокументыОснования.ДокументОснование ЕСТЬ NULL
	|	И &Постановление1137_2019
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаФактурыИзПокупателейПоОтчетуКомиссионера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СписокДокументовОснований
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(СчетаФактурыДокументы.СчетФактураДокумент, ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры) КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА НЕ СчетаФактурыДокументы.ДатаСчетаФактуры ЕСТЬ NULL
	|			ТОГДА СчетаФактурыДокументы.ДатаСчетаФактуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|				ИНАЧЕ ЗаписиКнигиПокупок.СчетФактура.Дата
	|			КОНЕЦ
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА НЕ СчетаФактурыДокументы.НомерСчетаФактуры ЕСТЬ NULL
	|			ТОГДА СчетаФактурыДокументы.НомерСчетаФактуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПокупок.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|				ИНАЧЕ ЗаписиКнигиПокупок.СчетФактура.Номер
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры КАК ДокументОснованиеСчетаФактуры,
	|	ЗаписиКнигиПокупок.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ЕСТЬNULL(СчетаФактурыДокументы.Контрагент, ЗаписиКнигиПокупок.КонтрагентПоСчетуФактуре) КАК Контрагент,
	|	ЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЗаписиКнигиПокупок.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ЕСТЬNULL(СчетаФактурыДокументы.СводныйКорректировочный, ЛОЖЬ) КАК СводныйКорректировочный,
	|	ЕСТЬNULL(СчетаФактурыДокументы.СводныйКомиссионный, ЛОЖЬ) КАК СводныйКомиссионный,
	|	ВЫБОР
	|		КОГДА СчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL
	|			ТОГДА ""26""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперации,
	|	СчетаФактурыДокументы.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &Постановление1137_2019
	|				И СчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерКорректировки,
	|	ВЫБОР
	|		КОГДА &Постановление1137_2019
	|				И СчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры.Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаКорректировки
	|ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыДокументыПромежуточная КАК СчетаФактурыДокументы
	|		ПО ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры = СчетаФактурыДокументы.ДокументОснование
	|			И ЗаписиКнигиПокупок.КонтрагентПоСчетуФактуре = СчетаФактурыДокументы.Контрагент
	|			И ЗаписиКнигиПокупок.ДоговорКонтрагента = СчетаФактурыДокументы.ДоговорКонтрагента
	|			И ЗаписиКнигиПокупок.СтавкаНДСАванса = СчетаФактурыДокументы.СтавкаНДСАванса
	|			И ЗаписиКнигиПокупок.ВозвратЧерезКомиссионера = СчетаФактурыДокументы.ВозвратЧерезКомиссионера
	|ГДЕ
	|	НЕ(ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|				И СчетаФактурыДокументы.ЭтоСчетФактураВыданныйПокупателюПоОтчетуКомиссионера)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактураДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаФактурыДокументыПромежуточная";
	
	// Получаем дополнительную информацию из журнала учета счетов-фактур.
	
	ТекстЗапроса = ТекстЗапроса + УчетНДС.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Регистратор КАК Регистратор,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактураДокумент,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировки,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЖурналУчетаСчетовФактур.Продавец
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.Контрагент
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПродавецДляПечати,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЖурналУчетаСчетовФактур.Продавец.КПП
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.КППКонтрагента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КПППродавцаДляПечати,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК ПосредникСсылка,
	|	ЖурналУчетаСчетовФактур.НомерСтроки КАК НомерСтроки,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта,
	|	ЖурналУчетаСчетовФактур.Валюта.Наименование КАК ВалютаНаименование,
	|	ЖурналУчетаСчетовФактур.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И (ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|					ИЛИ ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс))
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре
	|	КОНЕЦ КАК ВсегоПокупокВВалюте,
	|	ЖурналУчетаСчетовФактур.Валюта.Код КАК ВалютаКод,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.Продавец КАК Продавец
	|ПОМЕСТИТЬ ВТ_РегистрацияСчетовФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.СчетФактура В
	|			(ВЫБРАТЬ
	|				ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	|			ИЗ
	|				ВТ_ТаблицаСчетаФактурыДокументы)
	|	И ЖурналУчетаСчетовФактур.Организация В(&Организация)
	|	И НЕ(ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ЖурналУчетаСчетовФактур.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактураДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РегистрацияСчетовФактур.СчетФактураДокумент КАК СчетФактураДокумент,
	|	СУММА(ВТ_РегистрацияСчетовФактур.ВсегоПокупокВВалюте) КАК ВсегоПокупокВВалюте
	|ПОМЕСТИТЬ СуммыПродажПоСчетамФактурам
	|ИЗ
	|	ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РегистрацияСчетовФактур.СчетФактураДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактураДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры)
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|	КОНЕЦ КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА """"
	|		ИНАЧЕ ВТ_РегистрацияСчетовФактур.НомерИсправления
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры
	|	КОНЕЦ КАК НомерСчетаФактурыСортировка,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|					КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ КАК ДатаСчетаФактурыСортировка,
	|	ВЫБОР
	|		КОГДА &Постановление1137_2019
	|				И ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|				И ВЫРАЗИТЬ(ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК Документ.ВозвратТоваровОтПокупателя).НомерДокументаОтгрузки <> """"
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК Документ.ВозвратТоваровОтПокупателя).Номер
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.НомерКорректировки <> """"
	|			ТОГДА ВТ_ТаблицаСчетаФактурыДокументы.НомерКорректировки
	|		ИНАЧЕ ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры
	|	КОНЕЦ КАК НомерКорректировки,
	|	ВЫБОР
	|		КОГДА &Постановление1137_2019
	|				И ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|				И ВЫРАЗИТЬ(ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК Документ.ВозвратТоваровОтПокупателя).НомерДокументаОтгрузки <> """"
	|			ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК Документ.ВозвратТоваровОтПокупателя).Дата
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.ДатаКорректировки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_ТаблицаСчетаФактурыДокументы.ДатаКорректировки
	|		ИНАЧЕ ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|	КОНЕЦ КАК ДатаКорректировки,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.КодВидаОперации, ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации) КАК КодВидаОперации,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДокументОснованиеСчетаФактуры КАК ДокументОснованиеСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактураДокумент, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент КАК СчетФактураДокументРасшифровка,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.СчетФактураВыданный
	|				ИЛИ ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_РегистрацияСчетовФактур.СчетФактураДокумент ЕСТЬ NULL
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ПродавецДляПечати, ВТ_ТаблицаСчетаФактурыДокументы.Контрагент) КАК ПродавецДляПечати,
	|	ВТ_РегистрацияСчетовФактур.КПППродавцаДляПечати КАК КПППродавцаДляПечати,
	|	ВТ_РегистрацияСчетовФактур.ПосредникСсылка КАК ПосредникСсылка,
	|	СуммыПродажПоСчетамФактурам.ВсегоПокупокВВалюте КАК ВсегоПокупокВВалюте,
	|	ВТ_РегистрацияСчетовФактур.Валюта КАК Валюта,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименование КАК ВалютаНаименование,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ВТ_РегистрацияСчетовФактур.ВалютаКод КАК ВалютаКод
	|ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ВТ_ТаблицаСчетаФактурыДокументы КАК ВТ_ТаблицаСчетаФактурыДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент = ВТ_РегистрацияСчетовФактур.СчетФактураДокумент
	|			И (НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|					И НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный
	|				ИЛИ ВТ_ТаблицаСчетаФактурыДокументы.НомерСтроки = ВТ_РегистрацияСчетовФактур.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыПродажПоСчетамФактурам КАК СуммыПродажПоСчетамФактурам
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент = СуммыПродажПоСчетамФактурам.СчетФактураДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснованиеСчетаФактуры,
	|	КонтрагентПоСчетуФактуре
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаСчетаФактурыДокументы"
		+ УчетНДС.РазделительПакетаЗапросов();
		
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура СформироватьОсновнойРаздел(СтруктураПараметров, Результат);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупок";
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;

	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериода);
	Если СтруктураПараметров.ВерсияПостановленияНДС1137 = 4 Тогда
		Макет = ПолучитьОбщийМакет("КнигаПокупок981");
	ИначеЕсли ВерсияПостановленияНДС1137 = 3 Тогда
		Если СтруктураПараметров.ЗаполнениеДекларации
		   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
			Макет = ПолучитьОбщийМакет("КнигаПокупок1137_2017");
		Иначе
			Макет = ПолучитьОбщийМакет("КнигаПокупок735");
		КонецЕсли;
	Иначе
		Макет = ПолучитьОбщийМакет("КнигаПокупок1137");
	КонецЕсли;
	
	СтруктураСекций = Новый Структура();
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		СтруктураСекций.Вставить("ШапкаРаздел8", Макет.ПолучитьОбласть("ШапкаРаздел8"));
		СтруктураСекций.Вставить("СтрокиДляПовтора", Макет.ПолучитьОбласть("СтрокиДляПовтора"));
		ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел8);
		ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
		
	Иначе
		
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
			Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
			СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
		НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, "ПолноеНаименование");
			
		Секция = Макет.ПолучитьОбласть("Шапка");
		Секция.Параметры.УстановленныйОтбор = "";
		Секция.Параметры.НачалоПериода = Формат(СтруктураПараметров.НачалоПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.КонецПериода = Формат(СтруктураПараметров.КонецПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		Секция.Параметры.ИННКППОрганизации = "" + СтруктураПараметров.Организация.ИНН 
			+ ?(НЕ ЗначениеЗаполнено(СтруктураПараметров.Организация.КПП), "", ("/" + СтруктураПараметров.Организация.КПП));
			
		Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
			Если ОбщегоНазначения.ОбъектЯвляетсяГруппой(СтруктураПараметров.КонтрагентДляОтбора) Тогда
				НадписьОтбор = НСтр("ru='Отбор: Контрагент в группе %1'");
			Иначе
				НадписьОтбор = НСтр("ru='Отбор: Контрагент = %1'");
			КонецЕсли;
			Секция.Параметры.УстановленныйОтбор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НадписьОтбор, СтруктураПараметров.КонтрагентДляОтбора);
		КонецЕсли;
	
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЕсли;
	
	Если Результат.Пустой() Тогда
		
		Секция = Макет.ПолучитьОбласть("Всего");
		ТабличныйДокумент.Вывести(Секция);
		
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
			И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
			ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
		КонецЕсли;

		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));

		СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
		
		Если СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
			Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
			ЛеваяКолонка = Область20Процентов.Лево;
			ПраваяКолонка = Область20Процентов.Право;
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
				ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
			КонецЕсли;
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураСекций.Вставить("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
		СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
	КонецЕсли;
	
	СтрокаИтогПоОрганизации = НоваяСтрокаИтоговКнигиПокупок();
	
	ПреобразоватьЗаписиКнигиПокупок(
		СтруктураПараметров,
		Результат,
		ТабличныйДокумент,
		СтрокаИтогПоОрганизации,
		СтруктураСекций,
		?(СтруктураПараметров.Свойство("ТабличнаяЧасть"),СтруктураПараметров.ТабличнаяЧасть, Неопределено));
	
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(СтрокаИтогПоОрганизации);
	ТабличныйДокумент.Вывести(Секция);
	
	Если НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
		ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	КонецЕсли;
	
	Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
		И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
		ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
	КонецЕсли;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		Если СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> 0
			И СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
			
			ПерваяСтрокаСегмента = СтруктураПараметров.Счетчик - СтруктураПараметров.СчетчикСтрокТекущегоСегмента + 1;
			
			РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел8",
				ПерваяСтрокаСегмента,
				СтруктураПараметров.ТаблицаРаздел8);
			
			РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел8",
				ПерваяСтрокаСегмента,
				ТабличныйДокумент);
				
		КонецЕсли;
		
		ИтогиРаздел8 = Новый Структура("СумНДСВсКПк");
		ИтогиРаздел8.СумНДСВсКПк = СтрокаИтогПоОрганизации.НДС;
		
		РегламентированнаяОтчетность.ЗаписатьИтогиРазделаДекларацииНДС(
			СтруктураПараметров.СсылкаНаДекларацию,
			"Раздел8",
			ИтогиРаздел8);
		
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		ОбщиеСведения = Новый Структура("СумНДСВыч");
		ОбщиеСведения.СумНДСВыч = СтрокаИтогПоОрганизации.НДС;
		
		СтруктураПараметров.ОбщиеСведения = ОбщиеСведения;
		
	ИначеЕсли СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
		
		Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
		ЛеваяКолонка = Область20Процентов.Лево;
		ПраваяКолонка = Область20Процентов.Право;
		ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));

	СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
	
КонецПроцедуры

Процедура СформироватьДополнительныеЛисты(СтруктураПараметров, Результат)
	
	Перем ТабличныйДокумент;
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НомерОтображаемогоПериода = 0;
	
	ИтогПоПериодам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
	СтруктураПараметров.Вставить("СчетчикСтрокДопЛиста", 0);
	СтруктураПараметров.Вставить("СчетчикСтрокТекущегоСегмента", 0);
	
	ИтогиРаздел81 = Новый Структура("СумНДСИтКПк,СумНДСИтП1Р8");

	ПараметрыПолученияИтогов = Новый Структура;
	ПараметрыПолученияИтогов.Вставить("НалоговыйПериод", НачалоКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("КонецНалоговогоПериода", КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("ДатаФормированияДопЛиста", КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("СписокОрганизаций", СтруктураПараметров.СписокОрганизаций);
	
	ИтогПоКнигеПокупок = ПолучитьИтогиЗаПериодКнигаПокупок(ПараметрыПолученияИтогов);
	ИтогиРаздел81.СумНДСИтКПк = ИтогПоКнигеПокупок.НДС;
	
	ДанныеОтчета = Новый Массив;
	
	Пока ИтогПоПериодам.Следующий() Цикл
		
		НомерЛиста = 0;
		
		// Добавление новой страницы панели разделов для вывода доп. листа
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(
			ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупокДопЛист";
		
		ИтогПоПериодамКорректировки = ИтогПоПериодам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ИтогПоПериодамКорректировки.Следующий() Цикл
			
			СтруктураСекций = Новый Структура();
			
			ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(
				ИтогПоПериодамКорректировки.КонецНалоговогоПериода);
				
			Если ВерсияПостановленияНДС1137 = 1 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок1137");
				СтруктураПараметров.ЗаполнениеДекларации = Ложь;
			ИначеЕсли ВерсияПостановленияНДС1137 = 2 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок952");
				СтруктураПараметров.ЗаполнениеДекларации = Ложь;
			ИначеЕсли ВерсияПостановленияНДС1137 = 3 Тогда 
				Если СтруктураПараметров.ЗаполнениеДекларации
				   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок1137_2017");
				Иначе
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок735");
				КонецЕсли;
				Если СтруктураПараметров.ЗаполнениеДекларации Тогда
					СтруктураСекций.Вставить("ШапкаРаздел81", Макет.ПолучитьОбласть("ШапкаРаздел81"));
					СтруктураСекций.Вставить("СтрокиДляПовтора", Макет.ПолучитьОбласть("СтрокиДляПовтора"));
				КонецЕсли;
			ИначеЕсли ВерсияПостановленияНДС1137 = 4 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок981");
			КонецЕсли;
			
			СтруктураСекций.Вставить("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
			
			Секция = Макет.ПолучитьОбласть("Строка");
			СтрокаИтого = Макет.ПолучитьОбласть("Итого");
			СтрокаВсего = Макет.ПолучитьОбласть("Всего");
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
				СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
			КонецЕсли;
			// Формирование шапки доп. листа
			ОкончаниеПредыдущегоРаздела = ТабличныйДокумент.ВысотаТаблицы;
			НомерЛиста = НомерЛиста + 1;
			
			СтруктураПараметров.Вставить("НалоговыйПериод", ИтогПоПериодамКорректировки.НалоговыйПериод);
			СтруктураПараметров.Вставить("КонецНалоговогоПериода", КонецКвартала(ИтогПоПериодамКорректировки.КонецНалоговогоПериода));
			СтруктураПараметров.Вставить("ДатаОформления", ИтогПоПериодамКорректировки.ДатаОформления);
			
			Если СтруктураПараметров.ЗаполнениеДекларации Тогда
				ВывестиШапкуРаздела81Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			Иначе
				УчетНДС.ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			КонецЕсли;
			
			СтруктураПараметров.ДатаФормированияДопЛиста = ИтогПоПериодамКорректировки.ДатаОформления;
			
			ИтогЗаПериод = ПолучитьИтогиЗаПериодКнигаПокупок(СтруктураПараметров);
			
			Если СтруктураПараметров.ЗаполнениеДокумента
				И СтруктураПараметров.ФорматПоПостановлению735 Тогда
				
				ОбщиеСведения = Новый Структура("НомерДопЛКнПок,Период,ОтчетГод,ДатаДопЛКнПок,Итого,Всего");
				
				ОбщиеСведения.НомерДопЛКнПок  = НомерЛиста;
				ОбщиеСведения.Период          = СтруктураПараметров.ПериодПоСКНП;
				ОбщиеСведения.ОтчетГод        = Строка(Формат(Год(ИтогПоПериодамКорректировки.НалоговыйПериод),"ЧГ=0"));
				ОбщиеСведения.ДатаДопЛКнПок   = Строка(Формат(ИтогПоПериодамКорректировки.ДатаОформления, "ДЛФ=Д"));
				
				Итого = Новый Структура("СумНДСВыч");
				Итого.СумНДСВыч = ИтогЗаПериод.НДС;
				
				ОбщиеСведения.Итого = Итого;
				
			КонецЕсли;
			
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаИтого);
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
				СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
			КонецЕсли;
			
			ПреобразоватьЗаписиДополнительногоЛистаКнигиПокупок(
				СтруктураПараметров,
				ИтогПоПериодамКорректировки,
				?(СтруктураПараметров.Свойство("РеквизитыДокумента"),СтруктураПараметров.РеквизитыДокумента, ИтогЗаПериод),
				ТабличныйДокумент,
				СтруктураСекций,
				?(СтруктураПараметров.Свойство("ТабличнаяЧасть"),СтруктураПараметров.ТабличнаяЧасть, Неопределено));
			
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
			
			Если СтруктураПараметров.ЗаполнениеДокумента
				И СтруктураПараметров.ФорматПоПостановлению735 Тогда
				
				Всего = Новый Структура("СумНДСВыч");
				Всего.СумНДСВыч = ИтогЗаПериод.НДС;
				
				ОбщиеСведения.Всего = Всего;
				
				СтруктураДанных = Новый Структура("ОбщиеСведения,Записи", ОбщиеСведения, СтруктураПараметров.Записи.Скопировать());
				СтруктураПараметров.Записи.Очистить();
				ДанныеОтчета.Добавить(СтруктураДанных);
				
			КонецЕсли;
			
			Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме 
				И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
				
				ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
				
			КонецЕсли;
			
			Если СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
				Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
				ЛеваяКолонка = Область20Процентов.Лево;
				ПраваяКолонка = Область20Процентов.Право;
				ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
					ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла; // ИтогПоПериодамКорректировки.Следующий()
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		СтруктураПараметров.СписокСформированныхЛистов.Добавить(
			ТабличныйДокумент, 
			Нстр("ru='Доп.листы за'") + " " + НалоговыйПериод);
			
	КонецЦикла; // ИтогПоПериодам.Следующий()
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		// Запишем последний сегмент
		
		Если СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> 0
			И СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
			
			// Записать сегменты
			ПерваяСтрокаСегмента = СтруктураПараметров.СчетчикСтрокДопЛиста - СтруктураПараметров.СчетчикСтрокТекущегоСегмента + 1;
			
			РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел8_Прил1",
				ПерваяСтрокаСегмента,
				СтруктураПараметров.ТаблицаРаздел81);
			
			РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел8_Прил1",
				ПерваяСтрокаСегмента,
				ТабличныйДокумент);
				
		КонецЕсли;
			
		ИтогиРаздел81.СумНДСИтП1Р8 = ИтогЗаПериод.НДС; // Итог с учетом всех дополнительных листов за налоговый период
	
		РегламентированнаяОтчетность.ЗаписатьИтогиРазделаДекларацииНДС(
			СтруктураПараметров.СсылкаНаДекларацию,
			"Раздел8_Прил1",
			ИтогиРаздел81);
			
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		СтруктураПараметров.ДанныеОтчета = ДанныеОтчета;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиШапкуРаздела81Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерДополнительногоЛиста)
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	Если НомерДополнительногоЛиста = 1 Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел81");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("ШапкаРаздел81НомерЛиста");
	Секция.Параметры.НомерЛиста = НомерДополнительногоЛиста;
	Секция.Параметры.ДатаСоставления = Формат(СтруктураПараметров.ДатаОформления, "ДФ=dd.MM.yyyy");
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть("СтрокиДляПовтора");
	ТабличныйДокумент.Вывести(Секция);
		
КонецПроцедуры

Процедура ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет)
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СписокПоказателей.Добавить("ФИО");
	
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода, СписокПоказателей);
	СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
	
	Если РегламентированнаяОтчетность.ЭтоПБОЮЛ(СтруктураПараметров.Организация) Тогда
		ИмяРук = "";
		ИмяОрг = СведенияОбОрганизации.ФИО;
		Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,");
	Иначе
		ИмяРук = СведенияОбОрганизации.ФИОРук;
		ИмяОрг = "";
		Свидетельство = "";
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяРук        = ИмяРук;
	Секция.Параметры.ИмяОрг        = ИмяОрг;
	Секция.Параметры.Свидетельство = Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ИнициализироватьТаблицыДанныхНДС(СтруктураПараметров)

	Если СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		Записи = Новый ТаблицаЗначений;
		
		Записи.Колонки.Добавить("НомПП", 				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
		Записи.Колонки.Добавить("НомерСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Записи.Колонки.Добавить("ДатаСчФ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НомИспрСчФ", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Записи.Колонки.Добавить("ДатаИспрСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НомерКСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Записи.Колонки.Добавить("ДатаКСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НомИспрКСчФ", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Записи.Колонки.Добавить("ДатаИспрКСчФ",			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НаимПрод", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Записи.Колонки.Добавить("ИННЮЛ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("КПП", 					Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(9)));
		Записи.Колонки.Добавить("ИННФЛ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12)));
		Записи.Колонки.Добавить("КодОКВ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		Записи.Колонки.Добавить("СтТовУчНалВсего", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		
		Записи.Колонки.Добавить("КодВидОпер",	Новый ОписаниеТипов("Массив"));
		Записи.Колонки.Добавить("СвДокУплНал",	Новый ОписаниеТипов("Массив"));
		Записи.Колонки.Добавить("ДатаПринУчет",	Новый ОписаниеТипов("Массив"));
		Записи.Колонки.Добавить("СвПосредн");
		Записи.Колонки.Добавить("НомерТД", 		Новый ОписаниеТипов("Массив"));
		Записи.Колонки.Добавить("СумНДСВыч", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		
		ОбщиеСведения = Новый Структура("СумНДСВыч");
		
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда 
			ОбщиеСведения = Новый Структура("НомерДопЛКнПок,Период,ОтчетГод,ДатаДопЛКнПок,Итого,Всего");
			СтруктураПараметров.Вставить("ДанныеОтчета");
		Иначе
			ОбщиеСведения = Новый Структура("СумНДСВыч");
		КонецЕсли;
		
		СтруктураПараметров.Вставить("Записи", 			Записи);
		СтруктураПараметров.Вставить("ОбщиеСведения", 	ОбщиеСведения);
		
	Иначе	
		
		Раздел8 = Новый ТаблицаЗначений;
		
		Раздел8.Колонки.Добавить("НомерПор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
		
		Раздел8.Колонки.Добавить("НомСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
		Раздел8.Колонки.Добавить("ДатаСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Раздел8.Колонки.Добавить("НомИспрСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Раздел8.Колонки.Добавить("ДатаИспрСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Раздел8.Колонки.Добавить("НомКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
		Раздел8.Колонки.Добавить("ДатаКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Раздел8.Колонки.Добавить("НомИспрКСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Раздел8.Колонки.Добавить("ДатаИспрКСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Если СтруктураПараметров.ЗаполнениеДекларации Тогда
			Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
				Раздел8.Колонки.Добавить("НомТД", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
				
			ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1"
					ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2019Кв1" Тогда
					
				Раздел8.Колонки.Добавить("РегНомТД", Новый ОписаниеТипов("Массив"));
				
			КонецЕсли;
		КонецЕсли;
		
		Раздел8.Колонки.Добавить("ОКВ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		
		Раздел8.Колонки.Добавить("СтоимПокупВ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел8.Колонки.Добавить("СумНДСВыч", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		
		Раздел8.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
		
		Раздел8.Колонки.Добавить("ДокПдтвУпл", Новый ОписаниеТипов("Массив"));
		Раздел8.Колонки.Добавить("ДатаУчТов", Новый ОписаниеТипов("Массив"));
		
		Раздел8.Колонки.Добавить("СвПрод", Новый ОписаниеТипов("Массив"));
		Раздел8.Колонки.Добавить("СвПос"); // Тип не задается
		
		Раздел81 = Раздел8.СкопироватьКолонки();
		Раздел81.Колонки.СумНДСВыч.Имя = "СумНДС";
		
		СтруктураПараметров.Вставить("ТаблицаРаздел8", Раздел8);
		СтруктураПараметров.Вставить("ТаблицаРаздел81", Раздел81);
		СтруктураПараметров.Вставить("ТабличныйДокументРаздел81");
		
		ИтогиРаздел8 = Новый Структура("СумНДСВсКПк");
		ИтогиРаздел81 = Новый Структура("СумНДСИтКПк,СумНДСИтП1Р8");
		
		СтруктураПараметров.Вставить("ИтогиРаздел8", ИтогиРаздел8);
		СтруктураПараметров.Вставить("ИтогиРаздел81", ИтогиРаздел81);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПреобразоватьЗаписиКнигиПокупок(
	СтруктураПараметров, 
	НаборЗаписей, 
	ТабличныйДокумент = Неопределено,
	СтрокаИтогПоОрганизации, 
	СтруктураСекций = Неопределено,
	ТаблицаДокумента = Неопределено) Экспорт
	
	ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
	
	ИтогПоОрганизации = НаборЗаписей.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); // Общий итог по организации
	ИтогПоОрганизации.Следующий();
	
	СтруктураПараметров.ЗаписьДополнительногоЛиста = Ложь;
	ДополнительнаяИнформация = ПолучитьДополнительнуюИнформациюПоСчетуФактуре(СтруктураПараметров);
	
	Если НЕ СтруктураПараметров.Свойство("ЗаполнениеДекларации") Тогда
		СтруктураПараметров.Вставить("ЗаполнениеДекларации", Ложь);
	ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации И СтруктураПараметров.КонецПериода < '20150101' Тогда
		СтруктураПараметров.ЗаполнениеДекларации = Ложь;
	КонецЕсли;
	
	Счетчик = 0; // Счетчик строк книги покупок
	СчетчикСтрокТекущегоСегмента = 0; // Используется для сегментирования разделов декларации по НДС
	
	// Запоминаем итоговые суммы по организации.
	ЗаполнитьЗначенияСвойств(СтрокаИтогПоОрганизации, ИтогПоОрганизации);
	
	Если НЕ СтруктураПараметров.ЗаполнениеДокумента
		И НЕ СтруктураПараметров.ЗаполнениеДекларации
		И СтруктураПараметров.ГруппироватьПоКонтрагентам 
		И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда // Только отчет по произвольной форме
		
		СтрокаИтогПоКонтрагенту = НоваяСтрокаИтоговКнигиПокупок();
		ИтогПоКонтрагенту = ИтогПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ИтогПоКонтрагенту.Следующий() Цикл
		
			// Запоминаем итоговые суммы по контрагенту.
			ЗаполнитьЗначенияСвойств(СтрокаИтогПоКонтрагенту, ИтогПоКонтрагенту);

			СтруктураСекций.СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Продавец;
			ТабличныйДокумент.Вывести(СтруктураСекций.СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
			
			ИтогПоДокументу = ИтогПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ИтогПоДокументу.Следующий() Цикл
			
				ИтогПоКоду = ИтогПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
				Пока ИтогПоКоду.Следующий() Цикл
				
					ЗаписьКниги = ИтогПоКоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
					Пока ЗаписьКниги.Следующий() Цикл
						
						Если ЗаписьКниги.СводныйКорректировочный
							И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4 Тогда
							
							ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
						
							Пока ДетальнаяЗапись.Следующий() Цикл
								
								Счетчик = Счетчик + 1;
								ПараметрыСтроки.Ном = Счетчик;
								
								ЗаполнитьСтрокуКнигиПокупок(
									ПараметрыСтроки, ДетальнаяЗапись, ДополнительнаяИнформация, СтруктураПараметров, Неопределено);
								
								ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							КонецЦикла; // ДетальнаяЗапись.Следующий()
							
						ИначеЕсли ЗаписьКниги.СводныйКомиссионный
							И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4 Тогда
						
							Счетчик = Счетчик + 1;
							
							Если СтруктураПараметров.ЗаполнениеДокумента 
								И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда
								ПараметрыСтроки = ТаблицаДокумента.Добавить();
							КонецЕсли;
							
							ПараметрыСтроки.Ном = Счетчик;
							
							ЗаполнитьСтрокуКнигиПокупокСводныйКомиссионный(
								ПараметрыСтроки, ЗаписьКниги, ДополнительнаяИнформация, СтруктураПараметров);
							
							ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
	
						Иначе
							
							ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
							ДетальнаяЗапись.Следующий();
							
							Счетчик = Счетчик + 1;
							ПараметрыСтроки.Ном = Счетчик;
							
							ЗаполнитьСтрокуКнигиПокупок(
								ПараметрыСтроки, ЗаписьКниги, ДополнительнаяИнформация, СтруктураПараметров, ДетальнаяЗапись);
							
							ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							
						КонецЕсли;
						
					КонецЦикла; // ЗаписьКниги.Следующий()
				
				КонецЦикла; // ИтогПоКоду.Следующий()
			
			КонецЦикла; // ИтогПоДокументу.Следующий()
			
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СтруктураСекций.СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СтруктураСекций.СекцияВсегоКонтрагент);
			
		КонецЦикла; // ИтогПоКонтрагенту.Следующий()
		
	Иначе
		
		ИтогПоДокументу = ИтогПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	
		Пока ИтогПоДокументу.Следующий() Цикл
		
			ИтогПоКоду = ИтогПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
			Пока ИтогПоКоду.Следующий() Цикл
			
				ЗаписьКниги = ИтогПоКоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ЗаписьКниги.Следующий() Цикл
					
					Если ЗаписьКниги.СводныйКорректировочный
						И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4 Тогда
					
						ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
					
						Пока ДетальнаяЗапись.Следующий() Цикл
							
							Если СтруктураПараметров.ЗаполнениеДокумента 
								И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда
								ПараметрыСтроки = ТаблицаДокумента.Добавить();
							КонецЕсли;
							
							Счетчик = Счетчик + 1;
							СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1; 
							
							ПараметрыСтроки.Ном = Счетчик;
							
							ЗаполнитьСтрокуКнигиПокупок(
								ПараметрыСтроки, ДетальнаяЗапись, ДополнительнаяИнформация, СтруктураПараметров);
									
							Если СтруктураПараметров.ЗаполнениеДекларации Тогда
								СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
								ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента 
								И СтруктураПараметров.ФорматПоПостановлению735 Тогда
								ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							ИначеЕсли НЕ СтруктураПараметров.ЗаполнениеДокумента Тогда
								СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
								ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							КонецЕсли;
							
							Если СтруктураПараметров.ЗаполнениеДекларации 
								И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
								
								// Запишем сегмент
								ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
								
								РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел8",
									ПерваяСтрокаСегмента,
									СтруктураПараметров.ТаблицаРаздел8);
									
								РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел8",
									ПерваяСтрокаСегмента,
									ТабличныйДокумент);
									
								// Очистим табличный документ и таблицу
								ТабличныйДокумент.Очистить();
								ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел8);
								ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
								
								СтруктураПараметров.ТаблицаРаздел8.Очистить();
								
								// Обнулим счетчик текущего сегмента
								СчетчикСтрокТекущегоСегмента = 0;
								
							КонецЕсли;
							
						КонецЦикла; // ДетальнаяЗапись.Следующий()
						
					ИначеЕсли ЗаписьКниги.СводныйКомиссионный
						И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4 Тогда
						
						Счетчик = Счетчик + 1;
						СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
						
						Если СтруктураПараметров.ЗаполнениеДокумента 
							И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда
							ПараметрыСтроки = ТаблицаДокумента.Добавить();
						КонецЕсли;
						
						ПараметрыСтроки.Ном = Счетчик;
						
						ЗаполнитьСтрокуКнигиПокупокСводныйКомиссионный(
							ПараметрыСтроки, ЗаписьКниги, ДополнительнаяИнформация, СтруктураПараметров);
						
						Если НЕ СтруктураПараметров.ЗаполнениеДокумента 
							ИЛИ (СтруктураПараметров.ЗаполнениеДокумента И СтруктураПараметров.ФорматПоПостановлению735) Тогда
							СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
							ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
						КонецЕсли;

						Если СтруктураПараметров.ЗаполнениеДекларации 
							И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
							
							// Запишем сегмент
							ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
							
							Если СтруктураПараметров.ЗаполнениеДекларации Тогда
								
								РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел8",
									ПерваяСтрокаСегмента,
									СтруктураПараметров.ТаблицаРаздел8);
								
								РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел8",
									ПерваяСтрокаСегмента,
									ТабличныйДокумент);

								СтруктураПараметров.ТаблицаРаздел8.Очистить();
									
							КонецЕсли;
							
							// Очистим табличный документ и таблицу
							ТабличныйДокумент.Очистить();
							Если СтруктураПараметров.ЗаполнениеДекларации Тогда
								ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел8);
							КонецЕсли;
							ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
							
							// Обнулим счетчик текущего сегмента
							СчетчикСтрокТекущегоСегмента = 0;
							СчетчикСегментов = СчетчикСегментов + 1;
							
						КонецЕсли;

					Иначе
						
						ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
						ДетальнаяЗапись.Следующий();
						
						Если СтруктураПараметров.ЗаполнениеДокумента 
							И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда
							ПараметрыСтроки = ТаблицаДокумента.Добавить();
						КонецЕсли;	
						
						Счетчик = Счетчик + 1;
						СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
						
						ПараметрыСтроки.Ном = Счетчик;
						
						ЗаполнитьСтрокуКнигиПокупок(
							ПараметрыСтроки, ЗаписьКниги, ДополнительнаяИнформация, СтруктураПараметров, ДетальнаяЗапись);
							
						Если СтруктураПараметров.ЗаполнениеДекларации Тогда
							СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
							ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
						ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента 
							И СтруктураПараметров.ФорматПоПостановлению735 Тогда
							ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
						ИначеЕсли НЕ СтруктураПараметров.ЗаполнениеДокумента Тогда
							СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
							ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
						КонецЕсли;
						
						Если СтруктураПараметров.ЗаполнениеДекларации 
							И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
							
							// Запишем сегмент
							ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
							
							РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
								СтруктураПараметров.СсылкаНаДекларацию,
								"Раздел8",
								ПерваяСтрокаСегмента,
								СтруктураПараметров.ТаблицаРаздел8);
							
							РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
								СтруктураПараметров.СсылкаНаДекларацию,
								"Раздел8",
								ПерваяСтрокаСегмента,
								ТабличныйДокумент);
							
							// Очистим табличный документ и таблицу
							ТабличныйДокумент.Очистить();
							ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел8);
							ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
							
							СтруктураПараметров.ТаблицаРаздел8.Очистить();
							
							// Обнулим счетчик текущего сегмента
							СчетчикСтрокТекущегоСегмента = 0;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла; // ЗаписьКниги.Следующий()
		
			КонецЦикла; // ИтогПоКоду.Следующий()
		
		КонецЦикла; // ИтогПоДокументу.Следующий()
		
		Если СтруктураПараметров.ЗаполнениеДекларации Тогда
			СтруктураПараметров.Вставить("СчетчикСтрокТекущегоСегмента", СчетчикСтрокТекущегоСегмента);
			СтруктураПараметров.Вставить("Счетчик",                      Счетчик);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПреобразоватьЗаписиДополнительногоЛистаКнигиПокупок(
	СтруктураПараметров,
	ИтогПоПериодамКорректировки,
	ИтогЗаПериод,
	ТабличныйДокумент = Неопределено,
	СтруктураСекций = Неопределено,
	ТаблицаДокумента = Неопределено) Экспорт
	
	ДополнительнаяИнформация = ПолучитьДополнительнуюИнформациюПоСчетуФактуре(СтруктураПараметров);
		
	Если НЕ СтруктураПараметров.Свойство("ЗаполнениеДекларации") Тогда
		СтруктураПараметров.Вставить("ЗаполнениеДекларации", Ложь);
	ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации И СтруктураПараметров.КонецПериода < '20150101' Тогда
		СтруктураПараметров.ЗаполнениеДекларации = Ложь;
	КонецЕсли;
	
	ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		Счетчик = СтруктураПараметров.СчетчикСтрокДопЛиста;
		СчетчикСтрокТекущегоСегмента = СтруктураПараметров.СчетчикСтрокТекущегоСегмента;
	Иначе
		Счетчик = 0;
		СчетчикСтрокТекущегоСегмента = 0;
	КонецЕсли; 

	Если НЕ СтруктураПараметров.ЗаполнениеДокумента
		И НЕ СтруктураПараметров.ЗаполнениеДекларации
		И СтруктураПараметров.ГруппироватьПоКонтрагентам 
		И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда // Только отчет по произвольной форме
		
		ИтогПоКонтрагенту = ИтогПоПериодамКорректировки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ИтогПоКонтрагенту.Следующий() Цикл
	
			СтруктураСекций.СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Продавец;
			ТабличныйДокумент.Вывести(СтруктураСекций.СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
			
			ИтогПоДокументу = ИтогПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ИтогПоДокументу.Следующий() Цикл
				ИтогПоДоговору = ИтогПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ИтогПоДоговору.Следующий() Цикл
					ИтогПоКоду = ИтогПоДоговору.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ИтогПоКоду.Следующий() Цикл
						ЗаписьКниги = ИтогПоКоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ЗаписьКниги.Следующий() Цикл
							
							ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
							ДетальнаяЗапись.Следующий();
							
							Счетчик = Счетчик + 1;
							ПараметрыСтроки.Ном = Счетчик;
							
							ЗаполнитьСтрокуКнигиПокупок(
								ПараметрыСтроки, ЗаписьКниги, ДополнительнаяИнформация, СтруктураПараметров, ДетальнаяЗапись);
							
							ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							
							ИтогЗаПериод.ВсегоПокупок = ИтогЗаПериод.ВсегоПокупок + ЗаписьКниги.ВсегоПокупок;
							ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
							ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
							ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
							ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
							ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
							ИтогЗаПериод.НДС  = ИтогЗаПериод.НДС + ЗаписьКниги.НДС;
							ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
							
						КонецЦикла; // ЗаписьКниги.Следующий()
					КонецЦикла; // ИтогПоКоду.Следующий()
				КонецЦикла; // ИтогПоДоговору.Следующий()
			КонецЦикла; // ИтогПоДокументу.Следующий()
			
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СтруктураСекций.СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СтруктураСекций.СекцияВсегоКонтрагент);
			
		КонецЦикла; // ИтогПоКонтрагенту.Следующий()
		
	Иначе
		
		ИтогПоДокументу = ИтогПоПериодамКорректировки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ИтогПоДокументу.Следующий() Цикл
			ИтогПоДоговору = ИтогПоДокументу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ИтогПоДоговору.Следующий() Цикл
				ИтогПоКоду = ИтогПоДоговору.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ИтогПоКоду.Следующий() Цикл
					ЗаписьКниги = ИтогПоКоду.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ЗаписьКниги.Следующий() Цикл
						
						ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
						ДетальнаяЗапись.Следующий();
						
						Если СтруктураПараметров.ЗаполнениеДокумента 
							И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда
							ПараметрыСтроки = ТаблицаДокумента.Добавить();
						КонецЕсли;
						
						Счетчик = Счетчик + 1;
						СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
						ПараметрыСтроки.Ном = Счетчик;
						
						ЗаполнитьСтрокуКнигиПокупок(
							ПараметрыСтроки, ЗаписьКниги, ДополнительнаяИнформация, СтруктураПараметров, ДетальнаяЗапись);
							
						Если СтруктураПараметров.ЗаполнениеДокумента 
							И СтруктураПараметров.ФорматПоПостановлению735
							ИЛИ НЕ СтруктураПараметров.ЗаполнениеДокумента Тогда
							СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
							ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
						КонецЕсли;
						
						Если СтруктураПараметров.ЗаполнениеДекларации 
							И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
							
							// Запишем сегмент
							ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
							
							РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
								СтруктураПараметров.СсылкаНаДекларацию,
								"Раздел8_Прил1",
								ПерваяСтрокаСегмента,
								СтруктураПараметров.ТаблицаРаздел81);
							
							РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
								СтруктураПараметров.СсылкаНаДекларацию,
								"Раздел8_Прил1",
								ПерваяСтрокаСегмента,
								ТабличныйДокумент);
							
							// Очистим табличный документ и таблицу
							ТабличныйДокумент.Очистить();
							ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел81);
							ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
							
							СтруктураПараметров.ТаблицаРаздел81.Очистить();
							
							// Обнулим счетчик текущего сегмента
							СчетчикСтрокТекущегоСегмента = 0;
							
						КонецЕсли;
						
						ИтогЗаПериод.ВсегоПокупок = ИтогЗаПериод.ВсегоПокупок + ЗаписьКниги.ВсегоПокупок;
						ИтогЗаПериод.СуммаБезНДС10 = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
						ИтогЗаПериод.НДС10 = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
						ИтогЗаПериод.СуммаБезНДС18 = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
						ИтогЗаПериод.НДС18 = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
						ИтогЗаПериод.НДС0 = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
						ИтогЗаПериод.НДС  = ИтогЗаПериод.НДС + ЗаписьКниги.НДС;
						ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
						
					КонецЦикла; // ЗаписьКниги.Следующий()
				КонецЦикла; // ИтогПоКоду.Следующий()
			КонецЦикла; // ИтогПоДоговору.Следующий()
		КонецЦикла; // ИтогПоДокументу.Следующий()
		
	КонецЕсли;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		СтруктураПараметров.СчетчикСтрокДопЛиста = Счетчик;
		СтруктураПараметров.СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПокупок(
	Секция, ЗаписьКниги, ДополнительнаяИнформация, СтруктураПараметров, ДетальнаяЗапись = Неопределено)

	Если ДетальнаяЗапись <> Неопределено Тогда
		ПараметрыЗаполнения = ДетальнаяЗапись;
	Иначе
		ПараметрыЗаполнения = ЗаписьКниги;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Секция, ПараметрыЗаполнения);
	
	ПредставлениеСФ = УчетНДС.ОпределитьДатуИНомерСчетаФактуры(ПараметрыЗаполнения, СтруктураПараметров);
	
	// Универсальная структура для заполнения книги по разным версиям постановления
	СоставСтроки = Новый Структура;
	
	СоставСтроки.Вставить("КодОперации", ПараметрыЗаполнения.КодВидаОперации);

	Если ПараметрыЗаполнения.СводныйКомиссионный
		И ТипЗнч(ПараметрыЗаполнения.СчетФактураДокумент) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		// Это вычет НДС после зачета полученного аванса, по которому оформлен сводный счет-фактура,
		// в этом случае особенности сводного счета-фактуры не применяются.
		СводныйКомиссионныйСчетФактура = Ложь;
	Иначе
		СводныйКомиссионныйСчетФактура = ПараметрыЗаполнения.СводныйКомиссионный;
	КонецЕсли;
	
	Если СводныйКомиссионныйСчетФактура Тогда
		// Начиная с отчетности за 4 квартал 2017 года (в соответствии с постановлением Правительства от 19.08.2017 №981)
		// при отражении вычета по счету-фактуре, составленному комиссионером, приобретающим товары (услуги) у двух
		// и более продавцов графы 9 и 10 не заполняются.
		Секция.Продавец = "";
		Секция.Графа10  = "";
		Графа9  = "";
		Графа10 = "";
	Иначе
		СоставСтроки.Вставить("ПродавецИНН", ПараметрыЗаполнения.ПродавецИНН);
		СоставСтроки.Вставить("ПродавецКПП", ПараметрыЗаполнения.ПродавецКПП);
		Графа10 = Строка(ПараметрыЗаполнения.ПродавецИНН) 
		+ ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПродавецКПП), "/" , "")
		+ Строка(ПараметрыЗаполнения.ПродавецКПП);
	КонецЕсли;
	
	// В соответствии с письмом ФНС России от 16.01.2018 N СД-4-3/480@ при регистрации корректировочных счетов-фактур в 
	// случае изменения стоимости отгрузок в сторону уменьшения по товарам п.8 ст.161 НК РФ (КВО 34)
	// в графе 16 ставится прочерк "-".
	Если ПараметрыЗаполнения.КодВидаОперации = "34" Тогда 
		ПараметрНДС = "-";
	Иначе
		ПараметрНДС = ЗаписьКниги.НДС;
	КонецЕсли;

	СоставСтроки.Вставить("Валюта", ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Валюта),
		"" + ПараметрыЗаполнения.Валюта + ", " + ПараметрыЗаполнения.ВалютаКод, ""));
	СоставСтроки.Вставить("ВсегоПокупок",      ЗаписьКниги.ВсегоПокупок);
	СоставСтроки.Вставить("СуммаБезНДС18",     ЗаписьКниги.СуммаБезНДС18);
	СоставСтроки.Вставить("НДС18",             ЗаписьКниги.НДС18);
	СоставСтроки.Вставить("СуммаБезНДС10",     ЗаписьКниги.СуммаБезНДС10);
	СоставСтроки.Вставить("НДС10",             ЗаписьКниги.НДС10);
	СоставСтроки.Вставить("НДС0",              ЗаписьКниги.НДС0);
	СоставСтроки.Вставить("НДС",               ПараметрНДС);
	СоставСтроки.Вставить("СуммаСовсемБезНДС", ЗаписьКниги.СуммаСовсемБезНДС);
	
	Если ПараметрыЗаполнения.КодВидаОперации = "18"
	 ИЛИ ПараметрыЗаполнения.СводныйКорректировочный Тогда
		// В соответствии с письмом ФНС России от 20.09.2016 N СД-4-3/17657@ (примеры отражения записей)
		// для корректировочного счет-фактуры на уменьшение стоимости реализованных ранее товаров
		// не предусмотрено заполнение графы 8 "Дата принятия товаров на учет".
		// Ориентируемся на код вида операции 18 или на признак "Сводный корректировочный" т.к. в этом случае 
		// используется КВО = "01".
		СоставСтроки.Вставить("ДатаОприходования",  "");
	Иначе
		СоставСтроки.Вставить("ДатаОприходования",  Формат(ЗаписьКниги.ДатаПринятияНаУчет, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
	СоставСтроки.Вставить("СчетФактура");
	
	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		СоставСтроки.Вставить("СчетФактура", ЗаписьКниги.СчетФактураДокумент);
	КонецЕсли;
	
	СоставСтроки.Вставить("ДатаНомер",                   ПредставлениеСФ.ДатаНомер);
	СоставСтроки.Вставить("НомерДата",                   ПредставлениеСФ.НомерДата);
	СоставСтроки.Вставить("НомерОтДата",                 ПредставлениеСФ.НомерОтДата);
	
	СоставСтроки.Вставить("НомерДатаИсправления",        ПредставлениеСФ.НомерДатаИсправленный);
	СоставСтроки.Вставить("НомерОтДатаИсправленный",     ПредставлениеСФ.НомерОтДатаИсправленный);
	
	СоставСтроки.Вставить("НомерДатаКорректировки",      ПредставлениеСФ.НомерДатаКорректировочный);
	СоставСтроки.Вставить("НомерОтДатаКорректировочный", ПредставлениеСФ.НомерОтДатаКорректировочный);
	
	СоставСтроки.Вставить("НомерДатаИсправленияКорректировки",
		ПредставлениеСФ.НомерДатаИсправленныйКорректировочный);
	СоставСтроки.Вставить("НомерОтДатаИсправленныйКорректировочный",
		ПредставлениеСФ.НомерОтДатаИсправленныйКорректировочный);
	
	ТекстОплаты = "";
	СписокДатОплат = Новый СписокЗначений();
	
	ТекстОплатыСНомером = "";
	ТекстНомерОтДатаОплаты = "";
	СписокНомеровИДатОплат = Новый СписокЗначений();
	
	// Массив документов оплаты НДС для декларации с 1 кв 2015 года
	МассивДокПдтвУпл = Новый Массив();
	// Массив регистрационных номеров таможенных деклараций для декларации с 1 кв 2017 года.
	МассивРегНомТД = Новый Массив();
	
	ТекстНомерГТД = "";
	ТекстСтранаНомерГТД = "";
	
	ТекстГрафа9 = "";
	ТекстГрафа10 = "";
	МассивСвПрод = Новый Массив();
	
	СуммаСНДС = 0;
	
	СчетаФактуры = Новый Массив();
	СчетаФактурыДокументы = Новый Массив();

	Если ДетальнаяЗапись = Неопределено Тогда
		
		Если ЗначениеЗаполнено(ЗаписьКниги.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", ","+Символы.ПС) + Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗаписьКниги.НомерДокументаОплаты) Тогда
			
			НомерДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1;%2'"), 
				ЗаписьКниги.НомерДокументаОплаты, Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
			НомерОтДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"), 
				ЗаписьКниги.НомерДокументаОплаты, Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
				
			Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено Тогда
				
				ТекстОплатыСНомером = ТекстОплатыСНомером 
					+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", "," + Символы.ПС) + НомерДатаОплаты;
				ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
					+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";" + Символы.ПС) + НомерОтДатаОплаты;
				
				СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
				
				Если СтруктураПараметров.ЗаполнениеДекларации Тогда
					СтруктураДокПдтвУпл = Новый Структура("НомДокПдтвУпл,ДатаДокПдтвУпл");
					СтруктураДокПдтвУпл.НомДокПдтвУпл = ЗаписьКниги.НомерДокументаОплаты;
					СтруктураДокПдтвУпл.ДатаДокПдтвУпл = Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
				Иначе
					СтруктураДокПдтвУпл = Новый Структура("НомерДокУплНал,ДатаДокУплНал");
					СтруктураДокПдтвУпл.НомерДокУплНал = ЗаписьКниги.НомерДокументаОплаты;
					СтруктураДокПдтвУпл.ДатаДокУплНал  = Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
				КонецЕсли;
				
				МассивДокПдтвУпл.Добавить(СтруктураДокПдтвУпл);
				
			КонецЕсли;
		КонецЕсли;
		
		СоставСтроки.СчетФактура = ЗаписьКниги.СчетФактураДокументРасшифровка;
	
		СчетаФактуры.Добавить(ЗаписьКниги.СчетФактура);
		СчетаФактурыДокументы.Добавить(ЗаписьКниги.СчетФактураДокумент);
		
	Иначе
		
		// Получаем новую выборку для обхода, ДетальнуюЗапись не используем, она всегда спозиционирована на первую строку.
		СтрокаЗаписи = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
		Пока СтрокаЗаписи.Следующий() Цикл
			
			Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
				Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено Тогда
					ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", "," 
						+ Символы.ПС) + Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
					СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗаписи.НомерДокументаОплаты) Тогда
				
				НомерДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1;%2'"), 
					СтрокаЗаписи.НомерДокументаОплаты, Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
				НомерОтДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"), 
					СтрокаЗаписи.НомерДокументаОплаты, Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));

				Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено тогда
					
					ТекстОплатыСНомером = ТекстОплатыСНомером 
						+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", ","+ Символы.ПС) + НомерДатаОплаты;
					ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
						+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";" + Символы.ПС) + НомерОтДатаОплаты;
						
					СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
					
					Если СтруктураПараметров.ЗаполнениеДекларации Тогда
						СтруктураДокПдтвУпл = Новый Структура("НомДокПдтвУпл,ДатаДокПдтвУпл");
						СтруктураДокПдтвУпл.НомДокПдтвУпл = СтрокаЗаписи.НомерДокументаОплаты;
						СтруктураДокПдтвУпл.ДатаДокПдтвУпл = Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					Иначе
						СтруктураДокПдтвУпл = Новый Структура("НомерДокУплНал,ДатаДокУплНал ");
						СтруктураДокПдтвУпл.НомерДокУплНал = СтрокаЗаписи.НомерДокументаОплаты;
						СтруктураДокПдтвУпл.ДатаДокУплНал  = Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					КонецЕсли;
					
					МассивДокПдтвУпл.Добавить(СтруктураДокПдтвУпл);
				КонецЕсли;
			КонецЕсли;
			
			СоставСтроки.СчетФактура = СтрокаЗаписи.СчетФактураДокументРасшифровка;
			
			СчетаФактуры.Добавить(СтрокаЗаписи.СчетФактура);
			СчетаФактурыДокументы.Добавить(СтрокаЗаписи.СчетФактураДокумент);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// ГТД и страна происхождения
	СчетаФактуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СчетаФактуры);
	
	Для Каждого СчетФактура Из СчетаФактуры Цикл
		
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СтрокаДополнительнойИнформации = ДополнительнаяИнформация.Найти(СчетФактура, "Ссылка"); 
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		Если СтрокаДополнительнойИнформации <> Неопределено Тогда
			
			Если СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана) <> "" Тогда
				ТекстСтранаНомерГТД = ТекстСтранаНомерГТД + ?(ТекстСтранаНомерГТД = "", "", ", ") 
					+ СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана);
				Если СтруктураПараметров.ВерсияПостановленияНДС1137 >= 4 Тогда
					ТекстНомерГТД = ТекстНомерГТД + ?(ТекстНомерГТД = "", "", ";") 
						+ СокрЛП(СтрокаДополнительнойИнформации.РегистрационныйНомерТД);
				Иначе
					ТекстНомерГТД = ТекстНомерГТД + ?(ТекстНомерГТД = "", "", ";") 
						+ СокрЛП(СтрокаДополнительнойИнформации.ГТД);
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;
	
	КонецЦикла;

	СоставСтроки.Вставить("НомерГТД",  ТекстСтранаНомерГТД);
	СоставСтроки.Вставить("НомерГТД_", ТекстНомерГТД);
		
	// Дополнительная информация по сводному комиссионному счету-фактуре (продавцы, платежно-расчетные документы)
	// в учете комитента-покупателя
	СчетаФактурыДокументы = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СчетаФактурыДокументы);
	
	Для Каждого СчетФактураДокумент Из СчетаФактурыДокументы Цикл
		
		Если ЗначениеЗаполнено(СчетФактураДокумент) Тогда
			СтрокаДополнительнойИнформации = ДополнительнаяИнформация.Найти(СчетФактураДокумент, "Ссылка");
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		
		Если СтрокаДополнительнойИнформации <> Неопределено Тогда
			
			РеквизитыПлатежныхДокументов = СтрокаДополнительнойИнформации.МассивПлатежныеДокументы;
			
			Для Каждого ПлатежныйДокумент Из РеквизитыПлатежныхДокументов Цикл
				
				НомерДатаОплаты = "" + ПлатежныйДокумент.НомерДокументаОплаты 
					+ ";" + Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
				НомерОтДатыОплаты = "" + ПлатежныйДокумент.НомерДокументаОплаты 
					+ " от " + Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
				Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено тогда
					ТекстОплатыСНомером = ТекстОплатыСНомером 
					+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", ","+ Символы.ПС) + НомерДатаОплаты;
					ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты
					+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";"+ Символы.ПС) + НомерОтДатыОплаты;
					СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
					
					Если СтруктураПараметров.ЗаполнениеДекларации Тогда
						СтруктураДокПдтвУпл = Новый Структура("НомДокПдтвУпл,ДатаДокПдтвУпл");
						СтруктураДокПдтвУпл.НомДокПдтвУпл = ПлатежныйДокумент.НомерДокументаОплаты;
						СтруктураДокПдтвУпл.ДатаДокПдтвУпл = Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					Иначе
						СтруктураДокПдтвУпл = Новый Структура("НомерДокУплНал,ДатаДокУплНал ");
						СтруктураДокПдтвУпл.НомерДокУплНал = ПлатежныйДокумент.НомерДокументаОплаты;
						СтруктураДокПдтвУпл.ДатаДокУплНал  = Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					КонецЕсли;
					
					МассивДокПдтвУпл.Добавить(СтруктураДокПдтвУпл);
				КонецЕсли;
				
			КонецЦикла;
			
			Если СтруктураПараметров.ВерсияПостановленияНДС1137 < 4
				И НЕ ПустаяСтрока(СокрЛП(СтрокаДополнительнойИнформации.Графа9)) Тогда
				// Начиная с отчетности за 4 квартал 2017 года (в соответствии с постановлением Правительства от 19.08.2017 №981)
				// при отражении вычета по счету-фактуре, составленному комиссионером, приобретающим товары (услуги) у двух
				// и более продавцов графы 9 и 10 не заполняются.
				ТекстГрафа9 = ТекстГрафа9 + ?(ПустаяСтрока(ТекстГрафа9), "", ", ")
					+ СтрокаДополнительнойИнформации.Графа9;
				ТекстГрафа10 = ТекстГрафа10 + ?(ПустаяСтрока(ТекстГрафа10), "", ", ")
					+ СтрокаДополнительнойИнформации.Графа10;
				МассивСвПрод = СтрокаДополнительнойИнформации.МассивСвПрод;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СоставСтроки.Вставить("ДатаОплаты",  ТекстОплаты); // Постановление 1137 до редакции 735
	СоставСтроки.Вставить("НомерДатаОплаты", ТекстОплатыСНомером);
	СоставСтроки.Вставить("НомерОтДатаОплаты", ТекстНомерОтДатаОплаты);
	СоставСтроки.Вставить("Графа10",         ?(ПустаяСтрока(ТекстГрафа9), Графа10, ТекстГрафа10));
	
	Если СводныйКомиссионныйСчетФактура Тогда
		СоставСтроки.Вставить("Продавец");
	Иначе
		СоставСтроки.Вставить("Продавец", ?(ПустаяСтрока(ТекстГрафа9), ПараметрыЗаполнения.Продавец, ТекстГрафа9));
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстГрафа9)
		ИЛИ СводныйКомиссионныйСчетФактура Тогда
		
		Посредник        = ПараметрыЗаполнения.Продавец;
		ПосредникИНН     = ПараметрыЗаполнения.ПродавецИНН;
		ПосредникКПП     = ПараметрыЗаполнения.ПродавецКПП;
		ПосредникИНН_КПП = Строка(ПараметрыЗаполнения.ПродавецИНН) 
			+ ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПродавецКПП), "/" + Строка(ПараметрыЗаполнения.ПродавецКПП), "");
		СоставСтроки.Вставить("Контрагент", ТекстГрафа9);

	ИначеЕсли ЗначениеЗаполнено(ПараметрыЗаполнения.Посредник) Тогда
		
		Посредник        = ПараметрыЗаполнения.Посредник;
		ПосредникИНН     = ПараметрыЗаполнения.ПосредникИНН;
		ПосредникКПП     = ПараметрыЗаполнения.ПосредникКПП;
		ПосредникИНН_КПП = Строка(ПараметрыЗаполнения.ПосредникИНН)
			+ ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПосредникКПП), "/" + Строка(ПараметрыЗаполнения.ПосредникКПП), "");
		
	Иначе
		
		Посредник = "";
		ПосредникИНН_КПП = "";
		ПосредникИНН = "";
		ПосредникКПП = "";
		
	КонецЕсли;
	
	СоставСтроки.Вставить("Посредник", Посредник);
	СоставСтроки.Вставить("ПосредникИНН_КПП", ПосредникИНН_КПП);
	
	ЗаполнитьЗначенияСвойств(Секция, СоставСтроки);
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		СоставСтроки.Вставить("НомерПор", Секция.Ном);
		
		СоставСтроки.Вставить("НомСчФПрод",   ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФПрод",  ПредставлениеСФ.Дата);
		
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		
		СоставСтроки.Вставить("НомКСчФПрод",  ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФПрод", ПредставлениеСФ.ДатаКорректировочный);
		
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);
		
		Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
			СоставСтроки.Вставить("НомТД", ТекстНомерГТД);
			
		ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1"
				ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2019Кв1" Тогда
				
			Если ЗначениеЗаполнено(ТекстНомерГТД) Тогда
				РегНомТДНеуникальные = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекстНомерГТД, ";");
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивРегНомТД, РегНомТДНеуникальные, Истина);
			КонецЕсли;
			
			СоставСтроки.Вставить("РегНомТД", МассивРегНомТД);
			
		КонецЕсли;
		
		СоставСтроки.Вставить("ОКВ", Строка(ПараметрыЗаполнения.ВалютаКод));
		
		СоставСтроки.Вставить("СтоимПокупВ", СоставСтроки.ВсегоПокупок);
		СоставСтроки.Вставить("СумНДСВыч", СоставСтроки.НДС);
		СоставСтроки.Вставить("СумНДС", СоставСтроки.НДС); // Для раздела 8.1
		
		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрыЗаполнения.КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);
		
		МассивДатаУчТов = Новый Массив();
		Если ЗначениеЗаполнено(ЗаписьКниги.ДатаПринятияНаУчет) Тогда
			МассивДатаУчТов.Добавить(Формат(ЗаписьКниги.ДатаПринятияНаУчет, "ДФ=dd.MM.yyyy"));
		КонецЕсли; 
		
		СоставСтроки.Вставить("ДатаУчТов", МассивДатаУчТов);
		
		СоставСтроки.Вставить("ДокПдтвУпл", МассивДокПдтвУпл);
		
		Если СтруктураПараметров.ПравилаЗаполнения = "2019Кв1"
			И ПараметрыЗаполнения.СводныйКомиссионный Тогда
			
			МассивСвПрод.Очистить();
			СоставСтроки.Вставить("СвПрод", МассивСвПрод);
			
			Если ЗначениеЗаполнено(ПараметрыЗаполнения.ПродавецИНН)
				ИЛИ ЗначениеЗаполнено(ПараметрыЗаполнения.ПродавецКПП) Тогда
				СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(
				ПараметрыЗаполнения.ПродавецИНН, ПараметрыЗаполнения.ПродавецКПП);
				СтруктураРеквизитовКонтрагента.Вставить("Контрагент", ПараметрыЗаполнения.Контрагент);
				СтруктураРеквизитовКонтрагента.Вставить("КонтрагентНаименование", ПараметрыЗаполнения.Продавец);
				СоставСтроки.Вставить("СвПос", СтруктураРеквизитовКонтрагента);
			КонецЕсли;
			
		Иначе
			
			Если МассивСвПрод.Количество() = 0
				И НЕ ПустаяСтрока(ПараметрыЗаполнения.ПродавецИНН) Тогда
				МассивСвПрод.Добавить(
				УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПродавецИНН, ПараметрыЗаполнения.ПродавецКПП));
			КонецЕсли;
			
			СоставСтроки.Вставить("СвПрод", МассивСвПрод);
			
			Если НЕ ПустаяСтрока(ПосредникИНН) Тогда
				СоставСтроки.Вставить("СвПос", 
				УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПосредникИНН, ПосредникКПП));
			КонецЕсли;
			
		КонецЕсли;
			
		Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел81.Добавить();
		Иначе
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел8.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
		
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		СоставСтроки.Вставить("НомПП",        Секция.Ном);
		СоставСтроки.Вставить("НомерСчФ",     ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФ",      ПредставлениеСФ.Дата);
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		СоставСтроки.Вставить("НомерКСчФ",    ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФ",     ПредставлениеСФ.ДатаКорректировочный);
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);
		
		МассивНомТД = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекстНомерГТД, ";");
		СоставСтроки.Вставить("НомерТД", МассивНомТД);
		СоставСтроки.Вставить("КодОКВ",  Строка(ПараметрыЗаполнения.ВалютаКод));
		
		СоставСтроки.Вставить("СтТовУчНалВсего", СоставСтроки.ВсегоПокупок);
		СоставСтроки.Вставить("СумНДСВыч", ?(СоставСтроки.НДС = 0, "без НДС", СоставСтроки.НДС));
		
		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрыЗаполнения.КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);
		
		МассивДатаПринУчет = Новый Массив();
		Если ЗначениеЗаполнено(ЗаписьКниги.ДатаПринятияНаУчет) Тогда
			МассивДатаПринУчет.Добавить(Формат(ЗаписьКниги.ДатаПринятияНаУчет, "ДФ=dd.MM.yyyy"));
		КонецЕсли; 
		
		СоставСтроки.Вставить("ДатаПринУчет", МассивДатаПринУчет);
		СоставСтроки.Вставить("СвДокУплНал", МассивДокПдтвУпл);
		
		СтруктураРеквизитовКонтрагента = Новый Структура();
		Если МассивСвПрод.Количество() = 0
			И НЕ ПустаяСтрока(ПараметрыЗаполнения.ПродавецИНН) Тогда
			СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПродавецИНН, ПараметрыЗаполнения.ПродавецКПП);
		ИначеЕсли МассивСвПрод.Количество() > 0 Тогда
			СтруктураРеквизитовКонтрагента = МассивСвПрод[0];
		КонецЕсли;
		
		Если СтруктураРеквизитовКонтрагента.Свойство("ИННФЛ") Тогда
			СоставСтроки.Вставить("ИННФЛ", СтруктураРеквизитовКонтрагента.ИННФЛ);
		ИначеЕсли СтруктураРеквизитовКонтрагента.Свойство("ИННЮЛ") Тогда
			СоставСтроки.Вставить("ИННЮЛ", СтруктураРеквизитовКонтрагента.ИННЮЛ);
			СоставСтроки.Вставить("КПП", СтруктураРеквизитовКонтрагента.КПП);
		КонецЕсли;

		МассивНаимПрод = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СоставСтроки.Продавец, ";");
		
		Если МассивНаимПрод.Количество() > 0 Тогда 
			СоставСтроки.Вставить("НаимПрод", МассивНаимПрод[0]);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ПосредникИНН) Тогда
			СоставСтроки.Вставить("СвПосредн", 
				УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПосредникИНН, ПосредникКПП, Посредник));
		КонецЕсли;
		
		СтрокаРаздела = СтруктураПараметров.Записи.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);

	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПокупокСводныйКомиссионный(
	Секция, ДетальнаяЗапись, ДополнительнаяИнформация, СтруктураПараметров)

	СоставСтроки = Новый Структура;
	ТекстОплаты = "";
	СписокДатОплат = Новый СписокЗначений();
	
	ТекстОплатыСНомером = "";
	ТекстНомерОтДатаОплаты = "";
	СписокНомеровИДатОплат = Новый СписокЗначений();
	
	МассивДокПдтвУпл = Новый Массив();
	
	// Массив регистрационных номеров таможенных деклараций для декларации с 1 кв 2017 года.
	МассивРегНомТД = Новый Массив();
	
	ТекстНомерГТД = "";
	ТекстСтранаНомерГТД = "";
	
	ТекстГрафа9 = "";
	ТекстГрафа10 = "";
	МассивСвПрод = Новый Массив();
	
	СуммаСНДС = 0;
	
	СчетаФактуры = Новый Массив();
	СчетаФактурыДокументы = Новый Массив();
	
	ЗаписьКнигиДетальная = ДетальнаяЗапись.Выбрать(ОбходРезультатаЗапроса.Прямой);
	КоличествоЗаписей = ЗаписьКнигиДетальная.Количество();
	ВсегоПокупок = 0;
	НДС = 0;
	СчетчикЗаписей = 0;
	
	Пока ЗаписьКнигиДетальная.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(Секция, ЗаписьКнигиДетальная);
		
		СчетчикЗаписей = СчетчикЗаписей + 1;
		
		// Произведем суммирование по контрагентам.
		Если ЗаписьКнигиДетальная.НаАванс Тогда 
			ВсегоПокупок = ВсегоПокупок + ЗаписьКнигиДетальная.ВсегоПокупок;
		ИначеЕсли ВсегоПокупок = 0 Тогда 
			ВсегоПокупок = ЗаписьКнигиДетальная.ВсегоПокупок;
		КонецЕсли;
		НДС = НДС + ЗаписьКнигиДетальная.НДС;
		
		Если КоличествоЗаписей = СчетчикЗаписей Тогда
			
			ВалютаКод = Строка(ЗаписьКнигиДетальная.ВалютаКод);
			ВалютаНаименование = ЗаписьКнигиДетальная.ВалютаНаименование;
			
			Если ЗначениеЗаполнено(ЗаписьКнигиДетальная.НомерДокументаОплаты) Тогда
				
				НомерДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1;%2'"), 
					ЗаписьКнигиДетальная.НомерДокументаОплаты, Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
				НомерОтДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"), 
					ЗаписьКнигиДетальная.НомерДокументаОплаты, Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
					
				Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено тогда
					
					ТекстОплатыСНомером = ТекстОплатыСНомером 
						+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", "," + Символы.ПС) + НомерДатаОплаты;
					ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
						+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", "," + Символы.ПС) + НомерОтДатаОплаты;
						
					СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
					
					Если СтруктураПараметров.ЗаполнениеДекларации Тогда
						СтруктураДокПдтвУпл = Новый Структура("НомДокПдтвУпл,ДатаДокПдтвУпл");
						СтруктураДокПдтвУпл.НомДокПдтвУпл = ЗаписьКнигиДетальная.НомерДокументаОплаты;
						СтруктураДокПдтвУпл.ДатаДокПдтвУпл = Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					Иначе
						СтруктураДокПдтвУпл = Новый Структура("НомерДокУплНал,ДатаДокУплНал");
						СтруктураДокПдтвУпл.НомерДокУплНал = ЗаписьКнигиДетальная.НомерДокументаОплаты;
						СтруктураДокПдтвУпл.ДатаДокУплНал  = Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					КонецЕсли;
					МассивДокПдтвУпл.Добавить(СтруктураДокПдтвУпл);
					
				КонецЕсли;
			КонецЕсли;
			
			СоставСтроки.Вставить("СчетФактура");
			СоставСтроки.СчетФактура = ЗаписьКнигиДетальная.СчетФактураДокументРасшифровка;

			СчетаФактуры.Добавить(ЗаписьКнигиДетальная.СчетФактура);
			СчетаФактурыДокументы.Добавить(ЗаписьКнигиДетальная.СчетФактураДокумент);
			
			ЗаполнитьЗначенияСвойств(Секция, ЗаписьКнигиДетальная);
			
			СоставСтроки.Вставить("КодОперации", ЗаписьКнигиДетальная.КодВидаОперации);
			СоставСтроки.Вставить("ПродавецИНН", ЗаписьКнигиДетальная.ПродавецИНН);
			СоставСтроки.Вставить("ПродавецКПП", ЗаписьКнигиДетальная.ПродавецКПП);
			
			ПредставлениеСФ = УчетНДС.ОпределитьДатуИНомерСчетаФактуры(ЗаписьКнигиДетальная, СтруктураПараметров);
			
			СоставСтроки.Вставить("ДатаНомер",                   ПредставлениеСФ.ДатаНомер);
			СоставСтроки.Вставить("НомерДата",                   ПредставлениеСФ.НомерДата);
			СоставСтроки.Вставить("НомерОтДата",                 ПредставлениеСФ.НомерОтДата);
			
			СоставСтроки.Вставить("НомерДатаИсправления",        ПредставлениеСФ.НомерДатаИсправленный);
			СоставСтроки.Вставить("НомерОтДатаИсправленный",     ПредставлениеСФ.НомерОтДатаИсправленный);
			
			СоставСтроки.Вставить("НомерДатаКорректировки",      ПредставлениеСФ.НомерДатаКорректировочный);
			СоставСтроки.Вставить("НомерОтДатаКорректировочный", ПредставлениеСФ.НомерОтДатаКорректировочный);
			
			СоставСтроки.Вставить("НомерДатаИсправленияКорректировки",
				ПредставлениеСФ.НомерДатаИсправленныйКорректировочный);
			СоставСтроки.Вставить("НомерОтДатаИсправленныйКорректировочный",
				ПредставлениеСФ.НомерОтДатаИсправленныйКорректировочный);
			
			Графа10 = Строка(ЗаписьКнигиДетальная.ПродавецИНН) 
				+ ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.ПродавецКПП), "/" , "")
				+ Строка(ЗаписьКнигиДетальная.ПродавецКПП);
			
			СоставСтроки.Вставить("Валюта", ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.Валюта),
				"" + ЗаписьКнигиДетальная.Валюта + ", " + ЗаписьКнигиДетальная.ВалютаКод, ""));
			
			СоставСтроки.Вставить("ВсегоПокупок",      ВсегоПокупок);
			СоставСтроки.Вставить("НДС",               НДС);
			СоставСтроки.Вставить("СуммаБезНДС18",     0);
			СоставСтроки.Вставить("НДС18",             0);
			СоставСтроки.Вставить("СуммаБезНДС10",     0);
			СоставСтроки.Вставить("НДС10",             0);
			СоставСтроки.Вставить("НДС0",              0);
			СоставСтроки.Вставить("СуммаСовсемБезНДС", 0);
			СоставСтроки.Вставить("ДатаОприходования", Формат(ЗаписьКнигиДетальная.ДатаПринятияНаУчет, "ДФ=dd.MM.yyyy"));
			
			// ГТД и страна происхождения
			СчетаФактуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СчетаФактуры);
			
			Для Каждого СчетФактура Из СчетаФактуры Цикл
				
				Если ЗначениеЗаполнено(СчетФактура) Тогда
					СтрокаДополнительнойИнформации = ДополнительнаяИнформация.Найти(СчетФактура, "Ссылка"); 
				Иначе
					СтрокаДополнительнойИнформации = Неопределено;
				КонецЕсли;
				
				Если НЕ СтрокаДополнительнойИнформации = Неопределено Тогда
					
					Если СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана) <> "" Тогда
						ТекстСтранаНомерГТД = ТекстСтранаНомерГТД + ?(ТекстСтранаНомерГТД = "", "", ", ") 
							+ СокрЛП(СтрокаДополнительнойИнформации.ГТДиСтрана);
						ТекстНомерГТД = ТекстНомерГТД + ?(ТекстНомерГТД = "", "", ", ") 
							+ СокрЛП(СтрокаДополнительнойИнформации.ГТД);
						МассивРегНомТД.Добавить(СокрЛП(СтрокаДополнительнойИнформации.ГТД));
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			СоставСтроки.Вставить("НомерГТД",  ТекстСтранаНомерГТД);
			СоставСтроки.Вставить("НомерГТД_", ТекстНомерГТД);
			
			// Дополнительная информация по сводному комиссионному счету-фактуре (продавцы, платежно-расчетные документы)
			// в учете комитента-покупателя
			СчетаФактурыДокументы = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СчетаФактурыДокументы);
			
			Для Каждого СчетФактураДокумент Из СчетаФактурыДокументы Цикл
				
				Если ЗначениеЗаполнено(СчетФактураДокумент) Тогда
					СтрокаДополнительнойИнформации = ДополнительнаяИнформация.Найти(СчетФактураДокумент, "Ссылка");
				Иначе
					СтрокаДополнительнойИнформации = Неопределено;
				КонецЕсли;
				
				Если СтрокаДополнительнойИнформации <> Неопределено Тогда
					
					РеквизитыПлатежныхДокументов = СтрокаДополнительнойИнформации.МассивПлатежныеДокументы;
					
					Для Каждого ПлатежныйДокумент Из РеквизитыПлатежныхДокументов Цикл
						
						НомерДатаОплаты = "" + ПлатежныйДокумент.НомерДокументаОплаты 
							+ ";" + Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
						НомерОтДатыОплаты = "" + ПлатежныйДокумент.НомерДокументаОплаты 
							+ " от " + Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
						
						Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено тогда
							
							ТекстОплатыСНомером = ТекстОплатыСНомером 
								+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", ","+ Символы.ПС) + НомерДатаОплаты;
								СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
							
							ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты
								+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";"+ Символы.ПС) + НомерОтДатыОплаты;
								СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
								
							Если СтруктураПараметров.ЗаполнениеДекларации Тогда
								СтруктураДокПдтвУпл = Новый Структура("НомДокПдтвУпл,ДатаДокПдтвУпл");
								СтруктураДокПдтвУпл.НомДокПдтвУпл = ПлатежныйДокумент.НомерДокументаОплаты;
								СтруктураДокПдтвУпл.ДатаДокПдтвУпл = Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
							Иначе
								СтруктураДокПдтвУпл = Новый Структура("НомерДокУплНал,ДатаДокУплНал ");
								СтруктураДокПдтвУпл.НомерДокУплНал = ПлатежныйДокумент.НомерДокументаОплаты;
								СтруктураДокПдтвУпл.ДатаДокУплНал  = Формат(ПлатежныйДокумент.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
							КонецЕсли;
							
							МассивДокПдтвУпл.Добавить(СтруктураДокПдтвУпл);
						КонецЕсли;
						
					КонецЦикла;
					
					Если НЕ ПустаяСтрока(СокрЛП(СтрокаДополнительнойИнформации.Графа9)) Тогда
						ТекстГрафа9 = ТекстГрафа9 + ?(ПустаяСтрока(ТекстГрафа9), "", ", ")
						+ СтрокаДополнительнойИнформации.Графа9;
						ТекстГрафа10 = ТекстГрафа10 + ?(ПустаяСтрока(ТекстГрафа10), "", ", ")
						+ СтрокаДополнительнойИнформации.Графа10;
						МассивСвПрод = СтрокаДополнительнойИнформации.МассивСвПрод;
					КонецЕсли;
					
				ИначеЕсли ЗаписьКнигиДетальная.НаАванс
				        И ТипЗнч(ЗаписьКнигиДетальная.СчетФактура) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
						
					Если НЕ ПустаяСтрока(ЗаписьКнигиДетальная.ПродавецИНН) Тогда
						СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(
							ЗаписьКнигиДетальная.ПродавецИНН, ЗаписьКнигиДетальная.ПродавецКПП);
						СтруктураРеквизитовКонтрагента.Вставить("Контрагент", ЗаписьКнигиДетальная.Контрагент);
						СтруктураРеквизитовКонтрагента.Вставить("КонтрагентНаименование", ЗаписьКнигиДетальная.Продавец);
						МассивСвПрод.Добавить(СтруктураРеквизитовКонтрагента);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			СоставСтроки.Вставить("НомерДатаОплаты", ТекстОплатыСНомером);
			СоставСтроки.Вставить("НомерОтДатаОплаты", ТекстНомерОтДатаОплаты);
			СоставСтроки.Вставить("Продавец",        ?(ПустаяСтрока(ТекстГрафа9), ЗаписьКнигиДетальная.Продавец, ТекстГрафа9));
			СоставСтроки.Вставить("Графа10",         ?(ПустаяСтрока(ТекстГрафа9), Графа10, ТекстГрафа10));
			
			Если НЕ ПустаяСтрока(ТекстГрафа9) Тогда
				
				Посредник        = ЗаписьКнигиДетальная.Продавец;
				ПосредникИНН     = ЗаписьКнигиДетальная.ПродавецИНН;
				ПосредникКПП     = ЗаписьКнигиДетальная.ПродавецКПП;
				ПосредникИНН_КПП = Строка(ЗаписьКнигиДетальная.ПродавецИНН) 
				+ ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.ПродавецКПП), "/" + Строка(ЗаписьКнигиДетальная.ПродавецКПП), "");
				СоставСтроки.Вставить("Контрагент", ТекстГрафа9);
				ПосредникСсылка = ЗаписьКнигиДетальная.Контрагент;
				
			ИначеЕсли ЗначениеЗаполнено(ЗаписьКнигиДетальная.Посредник) Тогда
				
				Посредник        = ЗаписьКнигиДетальная.Посредник;
				ПосредникИНН     = ЗаписьКнигиДетальная.ПосредникИНН;
				ПосредникКПП     = ЗаписьКнигиДетальная.ПосредникКПП;
				ПосредникИНН_КПП = Строка(ЗаписьКнигиДетальная.ПосредникИНН)
					+ ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.ПосредникКПП), "/" + Строка(ЗаписьКнигиДетальная.ПосредникКПП), "");
				ПосредникСсылка  = ЗаписьКнигиДетальная.ПосредникСсылка;
			Иначе
				
				Посредник = "";
				ПосредникИНН_КПП = "";
				ПосредникИНН = "";
				ПосредникКПП = "";
				ПосредникСсылка = Справочники.Контрагенты.ПустаяСсылка();
				
			КонецЕсли;
			
			СоставСтроки.Вставить("Посредник", Посредник);
			СоставСтроки.Вставить("ПосредникИНН_КПП", ПосредникИНН_КПП);
			
			ЗаполнитьЗначенияСвойств(Секция, СоставСтроки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		ДополнительныеСведения = Новый Структура("Контрагент,ПредставлениеКонтрагента,Документ,ПредставлениеДокумента");
		
		СоставСтроки.Вставить("НомерПор", Секция.Ном);
		
		СоставСтроки.Вставить("НомСчФПрод",   ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФПрод",  ПредставлениеСФ.Дата);
		
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		
		СоставСтроки.Вставить("НомКСчФПрод",  ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФПрод", ПредставлениеСФ.ДатаКорректировочный);
		
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);
		
		Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
			СоставСтроки.Вставить("НомТД", ТекстНомерГТД);
			
		ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1"
			ИЛИ СтруктураПараметров.ПравилаЗаполнения = "2019Кв1" Тогда 
			
			СоставСтроки.Вставить("РегНомТД", МассивРегНомТД);
			
		КонецЕсли;
		
		СоставСтроки.Вставить("ОКВ", ВалютаКод);
		
		СоставСтроки.Вставить("СтоимПокупВ", СоставСтроки.ВсегоПокупок);
		СоставСтроки.Вставить("СумНДСВыч", СоставСтроки.НДС);
		СоставСтроки.Вставить("СумНДС", СоставСтроки.НДС); // Для раздела 8.1
		
		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДетальнаяЗапись.КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);
		
		МассивДатаУчТов = Новый Массив();
		Если ЗначениеЗаполнено(ДетальнаяЗапись.ДатаПринятияНаУчет) Тогда
			МассивДатаУчТов.Добавить(Формат(ДетальнаяЗапись.ДатаПринятияНаУчет, "ДФ=dd.MM.yyyy"));
		КонецЕсли; 
		
		СоставСтроки.Вставить("ДатаУчТов",  МассивДатаУчТов);
		СоставСтроки.Вставить("ДокПдтвУпл", МассивДокПдтвУпл);
		
		ДополнительныеСведения.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		ДополнительныеСведения.ПредставлениеКонтрагента = НСтр("ru='Сводные счета-фактуры'");
		
		СоставСтроки.Вставить("СвПрод", МассивСвПрод);
		
		Если НЕ ПустаяСтрока(ПосредникИНН)
			И ЗначениеЗаполнено(Посредник) Тогда
			СтруктураРеквизитовПосредника = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПосредникИНН, ПосредникКПП);
			СтруктураРеквизитовПосредника.Вставить("Контрагент",             ПосредникСсылка);
			СтруктураРеквизитовПосредника.Вставить("КонтрагентНаименование", Посредник);
			СоставСтроки.Вставить("СвПос", СтруктураРеквизитовПосредника);
		КонецЕсли;
		
		Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел81.Добавить();
		Иначе
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел8.Добавить();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПредставлениеСФ.НомерКорректировочный) Тогда
			ДополнительныеСведения.ПредставлениеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Корректировочный счет-фактура № %1 от %2 на сумму %3 %4'"), 
				ПредставлениеСФ.НомерКорректировочный, 
				ПредставлениеСФ.ДатаКорректировочный, 
				Формат(СоставСтроки.ВсегоПокупок, "ЧДЦ=2; ЧН="),
				ВалютаНаименование);
		Иначе
			ДополнительныеСведения.ПредставлениеДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1 на сумму %2 %3'"), 
				ПредставлениеСФ.Представление, 
				Формат(СоставСтроки.ВсегоПокупок, "ЧДЦ=2; ЧН="),
				ВалютаНаименование);
		КонецЕсли;
		
		ДополнительныеСведения.Документ = СоставСтроки.СчетФактура;
		СоставСтроки.Вставить("ДополнительныеСведения", ДополнительныеСведения);
		
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
		
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		СоставСтроки.Вставить("НомПП",        Секция.Ном);
		СоставСтроки.Вставить("НомерСчФ",     ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФ",      ПредставлениеСФ.Дата);
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		СоставСтроки.Вставить("НомерКСчФ",    ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФ",     ПредставлениеСФ.ДатаКорректировочный);
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);
		
		МассивНомТД = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекстНомерГТД, ";");
		СоставСтроки.Вставить("НомерТД", МассивНомТД);
		СоставСтроки.Вставить("КодОКВ",  ВалютаКод);
		
		СоставСтроки.Вставить("СтТовУчНалВсего", СоставСтроки.ВсегоПокупок);
		СоставСтроки.Вставить("СумНДСВыч", ?(СоставСтроки.НДС = 0, "без НДС", СоставСтроки.НДС));
		
		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДетальнаяЗапись.КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);
		
		МассивДатаПринУчет = Новый Массив();
		Если ЗначениеЗаполнено(ДетальнаяЗапись.ДатаПринятияНаУчет) Тогда
			МассивДатаПринУчет.Добавить(Формат(ДетальнаяЗапись.ДатаПринятияНаУчет, "ДФ=dd.MM.yyyy"));
		КонецЕсли; 
		
		СоставСтроки.Вставить("ДатаПринУчет", МассивДатаПринУчет);
		СоставСтроки.Вставить("СвДокУплНал", МассивДокПдтвУпл);
		
		СтруктураРеквизитовКонтрагента = Новый Структура();
		Если МассивСвПрод.Количество() = 0
			И НЕ ПустаяСтрока(ДетальнаяЗапись.ПродавецИНН) Тогда
			СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(
				ДетальнаяЗапись.ПродавецИНН, ДетальнаяЗапись.ПродавецКПП);
		ИначеЕсли МассивСвПрод.Количество() > 0 Тогда
			СтруктураРеквизитовКонтрагента = МассивСвПрод[0];
		КонецЕсли;
		
		Если СтруктураРеквизитовКонтрагента.Свойство("ИННФЛ") Тогда
			СоставСтроки.Вставить("ИННФЛ", СтруктураРеквизитовКонтрагента.ИННФЛ);
		ИначеЕсли СтруктураРеквизитовКонтрагента.Свойство("ИННЮЛ") Тогда
			СоставСтроки.Вставить("ИННЮЛ", СтруктураРеквизитовКонтрагента.ИННЮЛ);
			СоставСтроки.Вставить("КПП", СтруктураРеквизитовКонтрагента.КПП);
		КонецЕсли;

		МассивНаимПрод = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СоставСтроки.Продавец, ";");
		
		Если МассивНаимПрод.Количество() > 0 Тогда 
			СоставСтроки.Вставить("НаимПрод", МассивНаимПрод[0]);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ПосредникИНН) Тогда
			СоставСтроки.Вставить("СвПосредн", 
				УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПосредникИНН, ПосредникКПП, Посредник));
		КонецЕсли;
		
		СтрокаРаздела = СтруктураПараметров.Записи.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);

	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКнигиПокупок(Запрос, СтруктураПараметров)
	
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураПараметров.КонецПериода));
	
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.СписокОрганизаций);
	Запрос.УстановитьПараметр("ОтбиратьПоКонтрагенту", НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И СтруктураПараметров.ОтбиратьПоКонтрагенту);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора", СтруктураПараметров.КонтрагентДляОтбора);
	Запрос.УстановитьПараметр("ВыводитьПокупателейПоАвансам", СтруктураПараметров.ВыводитьПокупателейПоАвансам);
	Запрос.УстановитьПараметр("ВалютаРегУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("НаименованиеВалютыРубль", НСтр("ru='руб.'")); 
	
	ДатаПроверкиПараметровУчета ='00010101';
	ЗаполнениеДокументовОтчетности = СтруктураПараметров.ЗаполнениеДокумента ИЛИ СтруктураПараметров.ЗаполнениеДекларации;
	
	Если ЗаполнениеДокументовОтчетности И СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
		Запрос.УстановитьПараметр("НачалоНалоговогоПериода", СтруктураПараметров.НачалоНалоговогоПериода); 
		Запрос.УстановитьПараметр("КонецНалоговогоПериода", КонецДня(СтруктураПараметров.КонецНалоговогоПериода));
		ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецНалоговогоПериода;
	Иначе
		ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецПериода;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПравилаПостановления735", СтруктураПараметров.ВерсияПостановленияНДС1137 >= 3);
	Запрос.УстановитьПараметр("Постановление1137_2019", СтруктураПараметров.Постановление1137_2019);
	
	// Начиная с отчетности за 4 квартал 2017 года (в соответствии с постановлением Правительства от 19.08.2017 №981)
	// при отражении вычета по единому корректировочному счету-фактуре при уменьшении количества и/или стоимости 
	// реализованных ранее товаров в книге покупок в качестве продавца указывается покупатель по счету-фактуре.
	Запрос.УстановитьПараметр("ПравилаПостановления981", СтруктураПараметров.ВерсияПостановленияНДС1137 >= 4);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);

	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);

	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;

	Запрос.УстановитьПараметр("СтавкиНДС18", СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10", СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0", СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	 
	ВидыЦенностей_СобственныеСФ = Новый Массив;
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);

	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ", ВидыЦенностей_СобственныеСФ);

	ВидыЦенностей_Аванс = Новый Массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс", ВидыЦенностей_Аванс);
	Запрос.УстановитьПараметр("ВидыЦенностей_АвансыВыданные", Перечисления.ВидыЦенностей.АвансыВыданные);
	
	ВидыЦенностей_СуммовыеРазницы = Новый Массив;
	ВидыЦенностей_СуммовыеРазницы.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_СуммоваяРазница", ВидыЦенностей_СуммовыеРазницы);
	Запрос.УстановитьПараметр("ВидыЦенностей_НалоговыйАгент", 
		Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгент());
	
	МассивДокументовИсправлений = Новый Массив;
	МассивДокументовИсправлений.Добавить(Неопределено);
	
	ТипыДокументовИсправлений = Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок.Измерения.ИсправленныйСчетФактура.Тип;
	Для Каждого МетаданныеДокумента Из Метаданные.Документы Цикл
		
		Если ТипыДокументовИсправлений.СодержитТип(Тип("ДокументСсылка." + МетаданныеДокумента.Имя)) Тогда
			МассивДокументовИсправлений.Добавить(Документы[МетаданныеДокумента.Имя].ПустаяСсылка());
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ПустыеДокументыИсправления", МассивДокументовИсправлений);
	
КонецПроцедуры

Функция ЗаписиКнигиПокупок(СтруктураПараметров)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Создаем запрос по счетам-фактурам
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПокупок(Запрос, СтруктураПараметров);
	
	ТекстЗапроса = ТекстЗапросаЗаписиРегистраНДСПокупки(СтруктураПараметров);
	
	Если СтруктураПараметров.ВерсияПостановленияНДС1137 >= 4 Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРеквизитыСчетовФактурПостановление981();
	Иначе
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРеквизитыСчетовФактурПостановление735();
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса + ТекстЗапросаПодготовленныеЗаписиКнигиПокупок(СтруктураПараметров);
	Запрос.Выполнить();

	Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
		Запрос.Текст = ТекстЗапросаДополнительныйЛистКнигиПокупок(СтруктураПараметров);
	Иначе
		Запрос.Текст = ТекстЗапросаКнигаПокупок(СтруктураПараметров);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить();
	
	СтруктураПараметров.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	
	Возврат Выборка;

КонецФункции

Функция ТекстЗапросаЗаписиРегистраНДСПокупки(СтруктураПараметров)
	
	// В запросе удалены строки:
	//|	И (НДСЗаписиКнигиПокупок.НДС <> 0
	//|			ИЛИ НДСЗаписиКнигиПокупок.СуммаБезНДС <> 0)
	// См. ошибку 30159563.
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ, КВАРТАЛ) КАК НалоговыйПериод,
	|	КОНЕЦПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ, КВАРТАЛ) КАК КонецНалоговогоПериода,
	|	НДСЗаписиКнигиПокупок.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &ВыводитьПокупателейПоАвансам
	|				И НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	|		КОГДА НДСЗаписиКнигиПокупок.КодВидаОперации = ""17""
	|			ТОГДА НДСЗаписиКнигиПокупок.Организация
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	|					И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|					И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				ИЛИ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА НДСЗаписиКнигиПокупок.Организация
	|		КОГДА НДСЗаписиКнигиПокупок.КодВидаОперации = ""25""
	|			ТОГДА НДСЗаписиКнигиПокупок.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	|	КОНЕЦ КАК Контрагент,
	|	НДСЗаписиКнигиПокупок.Поставщик КАК КонтрагентПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА СчетФактураВыданный.ДокументОснование.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|				КОНЕЦ
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаОплаты
	|	КОНЕЦ КАК ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0)) КАК ВсегоПокупок,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	|					И НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПокупок.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	|					И НЕ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПокупок.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПокупок.СуммаБезНДС + НДСЗаписиКнигиПокупок.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаСовсемБезНДС,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Дата КАК СчетФактураДата,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА """"
	|		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА СчетФактураВыданный.ДокументОснование.Дата
	|		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА СчетФактураПолученный.ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|	КОНЕЦ КАК ДатаПринятияНаУчет,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				И НДСЗаписиКнигиПокупок.ДатаОплаты <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = &ВидыЦенностей_АвансыВыданные
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	|				КОНЕЦ
	|		КОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА СчетФактураВыданный.ДокументОснование.Дата
	|					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА СчетФактураПолученный.ДокументОснование.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|				КОНЕЦ
	|		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	|	КОНЕЦ КАК ДатаДляСортировкиЗаписей,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаАванс,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДСАванса,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент))
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПокупок.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент)
	|			ТОГДА НДСЗаписиКнигиПокупок.ДокументОплаты
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	|	КОНЕЦ КАК ДокументОснованиеСчетаФактуры,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|					ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
	|					И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	|				ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.СчетФактураПолученный
	|					И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Исправление,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	|				КОНЕЦ
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура.Дата
	|	КОНЕЦ КАК ДатаСобытия,
	|	СУММА(НДСЗаписиКнигиПокупок.НДС) КАК НДС,
	|	СчетФактураПолученный.НомерВходящегоДокумента КАК СчетФактураПолученныйНомерВходящегоДокумента,
	|	СчетФактураПолученный.ДатаВходящегоДокумента КАК СчетФактураПолученныйДатаВходящегоДокумента,
	|	СчетФактураПолученный.СуммаДокумента КАК СчетФактураПолученныйСуммаДокумента,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	|				И НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозвратЧерезКомиссионера
	|ПОМЕСТИТЬ ЗаписиКнигиПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО НДСЗаписиКнигиПокупок.СчетФактура = СчетФактураВыданный.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО НДСЗаписиКнигиПокупок.СчетФактура = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПокупок.Организация В(&Организация)
	|	И НЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|	И НДСЗаписиКнигиПокупок.Активность
	|	И &ОтборПоКонтрагенту
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.Период,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ, КВАРТАЛ),
	|	КОНЕЦПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПокупок.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПокупок.Период
	|		КОНЕЦ, КВАРТАЛ),
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА СчетФактураВыданный.ДокументОснование.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|				КОНЕЦ
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаОплаты
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Дата,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПокупок.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент))
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПокупок.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	СчетФактураПолученный.НомерВходящегоДокумента,
	|	СчетФактураПолученный.ДатаВходящегоДокумента,
	|	СчетФактураПолученный.СуммаДокумента,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	ВЫБОР
	|		КОГДА &ВыводитьПокупателейПоАвансам
	|				И НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА НДСЗаписиКнигиПокупок.Поставщик
	|		КОГДА НДСЗаписиКнигиПокупок.КодВидаОперации = ""17""
	|			ТОГДА НДСЗаписиКнигиПокупок.Организация
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	|					И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|					И НЕ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				ИЛИ НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА НДСЗаписиКнигиПокупок.Организация
	|		КОГДА НДСЗаписиКнигиПокупок.КодВидаОперации = ""25""
	|			ТОГДА НДСЗаписиКнигиПокупок.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.Поставщик
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА """"
	|		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА СчетФактураВыданный.ДокументОснование.Дата
	|		КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА СчетФактураПолученный.ДокументОснование.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				И НДСЗаписиКнигиПокупок.ДатаОплаты <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПокупок.ДатаОплаты
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = &ВидыЦенностей_АвансыВыданные
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	|				КОНЕЦ
	|		КОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|						ТОГДА СчетФактураВыданный.ДокументОснование.Дата
	|					КОГДА НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА СчетФактураПолученный.ДокументОснование.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|				КОНЕЦ
	|		КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент)
	|			ТОГДА НДСЗаписиКнигиПокупок.ДокументОплаты
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.СчетФактура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|					ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
	|					И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	|				ИЛИ НДСЗаписиКнигиПокупок.Регистратор ССЫЛКА Документ.СчетФактураПолученный
	|					И ЕСТЬNULL(НДСЗаписиКнигиПокупок.СуммаБезНДС, 0) + ЕСТЬNULL(НДСЗаписиКнигиПокупок.НДС, 0) < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупок.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|					ИНАЧЕ НДСЗаписиКнигиПокупок.ДатаСобытия
	|				КОНЕЦ
	|		ИНАЧЕ НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПокупок.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Возврат)
	|				И НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснованиеСчетаФактуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ СписокСчетовФактур
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура";
	
	Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме 
	   И СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
	   
		ТекстЗапросаДляОтбора =
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОтборПоКонтрагентуСсылки
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Ссылка = &КонтрагентДляОтбора
		|			ИЛИ Контрагенты.ОбособленноеПодразделение
		|				И Контрагенты.ГоловнойКонтрагент = &КонтрагентДляОтбора)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
		
		Если ОбщегоНазначения.ОбъектЯвляетсяГруппой(СтруктураПараметров.КонтрагентДляОтбора) Тогда
			ТекстЗапросаДляОтбора = СтрЗаменить(ТекстЗапросаДляОтбора,
				" = &КонтрагентДляОтбора", " В ИЕРАРХИИ(&КонтрагентДляОтбора)");
		КонецЕсли;
		
		ТекстЗапросаДляОтбора = ТекстЗапросаДляОтбора + УчетНДС.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ
		|	ДокументыОснования.ДокументОснование КАК СчетФактура
		|ПОМЕСТИТЬ ОтборПоПродавцуНаПечать
		|ИЗ
		|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
		|		ПО ЖурналУчетаСчетовФактур.СчетФактура = ДокументыОснования.Ссылка
		|ГДЕ
		|	ЖурналУчетаСчетовФактур.Организация В(&Организация)
		|	И ЖурналУчетаСчетовФактур.Продавец В
		|			(ВЫБРАТЬ
		|				ОтборПоКонтрагентуСсылки.Ссылка
		|			ИЗ
		|				ОтборПоКонтрагентуСсылки КАК ОтборПоКонтрагентуСсылки)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоКонтрагенту",
		"(НДСЗаписиКнигиПокупок.Поставщик В
		|				(ВЫБРАТЬ
		|					ОтборПоКонтрагентуСсылки.Ссылка
		|				ИЗ
		|					ОтборПоКонтрагентуСсылки КАК ОтборПоКонтрагентуСсылки)
		|			ИЛИ НДСЗаписиКнигиПокупок.СчетФактура В
		|				(ВЫБРАТЬ
		|					ОтборПоПродавцуНаПечать.СчетФактура
		|				ИЗ
		|					ОтборПоПродавцуНаПечать))");
		
		ТекстЗапроса = ТекстЗапросаДляОтбора + УчетНДС.РазделительПакетаЗапросов() + ТекстЗапроса;
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ОтборПоКонтрагенту", "");
	   
	КонецЕсли;
	
	Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
		Если СтруктураПараметров.ЗаполнениеДокумента И НЕ СтруктураПараметров.ФорматПоПостановлению735
		 ИЛИ СтруктураПараметров.ЗаполнениеДекларации  Тогда
			// Учитывается как корректируемый период, так и дата оформления дополнительного листа.
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"И НЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста",
				"И НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
				|	И НДСЗаписиКнигиПокупок.КорректируемыйПериод >= &НачалоНалоговогоПериода 
				|	И НДСЗаписиКнигиПокупок.КорректируемыйПериод <= &КонецНалоговогоПериода");
		
		ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента И СтруктураПараметров.ФорматПоПостановлению735
			  ИЛИ СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"Период МЕЖДУ &НачалоПериода И &КонецПериода", 
				"Период >= &НачалоПериода");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"И НЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста",
				"И НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста
				|	И НДСЗаписиКнигиПокупок.КорректируемыйПериод >= &НачалоПериода 
				|	И НДСЗаписиКнигиПокупок.КорректируемыйПериод <= &КонецПериода");

		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"И НЕ НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста",
				"И НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекстЗапроса + УчетНДС.РазделительПакетаЗапросов();
	
КонецФункции

Функция ТекстЗапросаПодготовленныеЗаписиКнигиПокупок(СтруктураПараметров)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗаписиКнигиПокупок.НалоговыйПериод КАК НалоговыйПериод,
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОформления,
	|	ЗаписиКнигиПокупок.КонецНалоговогоПериода КАК КонецНалоговогоПериода,
	|	ЗаписиКнигиПокупок.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СводныйКорректировочный = ИСТИНА
	|				И &ПравилаПостановления981
	|				И НЕ ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА ЗаписиКнигиПокупок.КонтрагентПоСчетуФактуре
	|		КОГДА ЗаписиКнигиПокупок.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗаписиКнигиПокупок.Контрагент
	|		КОГДА НЕ ТаблицаСчетаФактурыДокументы.ПродавецДляПечати ЕСТЬ NULL
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ПродавецДляПечати
	|		ИНАЧЕ ЗаписиКнигиПокупок.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.КПППродавцаДляПечати, """") КАК КПППродавцаДляПечати,
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПокупок.СчетФактураДата КАК СчетФактураДата,
	|	ЗаписиКнигиПокупок.ДатаПринятияНаУчет КАК ДатаПринятияНаУчет,
	|	ЗаписиКнигиПокупок.ДатаДляСортировкиЗаписей КАК ДатаДляСортировкиЗаписей,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА НЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактурыСортировка ЕСТЬ NULL
	|				ТОГДА ТаблицаСчетаФактурыДокументы.ДатаСчетаФактурыСортировка
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL
	|							И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ЗаписиКнигиПокупок.СчетФактураПолученныйДатаВходящегоДокумента
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры, ЗаписиКнигиПокупок.СчетФактураДата)
	|				КОНЕЦ
	|		КОНЕЦ, ДЕНЬ) КАК ДатаСчетаФактурыСортировка,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокумент, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL
	|				И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ЗаписиКнигиПокупок.СчетФактураПолученныйНомерВходящегоДокумента
	|		ИНАЧЕ ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ NULL
	|				И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ЗаписиКнигиПокупок.СчетФактураПолученныйДатаВходящегоДокумента
	|		ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ЗаписиКнигиПокупок.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПокупок.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НалоговыйПериод >= ДАТАВРЕМЯ(2014, 10, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСчетаФактурыДокументы.ВсегоПокупокВВалюте ЕСТЬ NULL
	|							И ЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаписиКнигиПокупок.ВсегоПокупок < 0
	|									ТОГДА -ЗаписиКнигиПокупок.СчетФактураПолученныйСуммаДокумента
	|								ИНАЧЕ ЗаписиКнигиПокупок.СчетФактураПолученныйСуммаДокумента
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ЗаписиКнигиПокупок.ВсегоПокупок < 0
	|								ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПокупокВВалюте, -ЗаписиКнигиПокупок.ВсегоПокупок)
	|							ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПокупокВВалюте, ЗаписиКнигиПокупок.ВсегоПокупок)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ЗаписиКнигиПокупок.ВсегоПокупок
	|	КОНЕЦ КАК ВсегоПокупок,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПокупок.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПокупок.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПокупок.НДС10 КАК НДС10,
	|	ЗаписиКнигиПокупок.НДС0 КАК НДС0,
	|	ЗаписиКнигиПокупок.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СчетФактураДокументРасшифровка, ЗаписиКнигиПокупок.СчетФактура) КАК СчетФактураДокументРасшифровка,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ЗаписиКнигиПокупок.Исправление КАК Исправление,
	|	ВЫБОР
	|		КОГДА &Постановление1137_2019
	|				И ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ)
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКорректировочный, ЛОЖЬ) КАК СводныйКорректировочный,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКомиссионный, ЛОЖЬ) КАК СводныйКомиссионный,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПокупок.КодВидаОперации <> """"
	|			ТОГДА ЗаписиКнигиПокупок.КодВидаОперации
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.КодВидаОперации, ""01"")
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаНаименованиеПолное
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаКод
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаНаименование
	|		ИНАЧЕ &НаименованиеВалютыРубль
	|	КОНЕЦ КАК ВалютаНаименование,
	|	ЗаписиКнигиПокупок.НДС КАК НДС,
	|	ВЫБОР
	|		КОГДА &Постановление1137_2019
	|				И (ЗаписиКнигиПокупок.КодВидаОперации В (""16"", ""17"")
	|					ИЛИ ТаблицаСчетаФактурыДокументы.КодВидаОперации В (""16"", ""17""))
	|			ТОГДА """"
	|		ИНАЧЕ ЗаписиКнигиПокупок.НомерДокументаОплаты
	|	КОНЕЦ КАК НомерДокументаОплаты,
	|	ВЫБОР
	|		КОГДА &Постановление1137_2019
	|				И (ЗаписиКнигиПокупок.КодВидаОперации В (""16"", ""17"")
	|					ИЛИ ТаблицаСчетаФактурыДокументы.КодВидаОперации В (""16"", ""17""))
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ЗаписиКнигиПокупок.ДатаДокументаОплаты
	|	КОНЕЦ КАК ДатаДокументаОплаты,
	|	ТаблицаСчетаФактурыДокументы.ПосредникСсылка КАК ПосредникСсылка
	|ПОМЕСТИТЬ ПодготовленныеЗаписиКнигиПокупок
	|ИЗ
	|	ЗаписиКнигиПокупок КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО ЗаписиКнигиПокупок.ДокументОснованиеСчетаФактуры = ТаблицаСчетаФактурыДокументы.ДокументОснованиеСчетаФактуры
	|			И ЗаписиКнигиПокупок.КонтрагентПоСчетуФактуре = ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре
	|			И ЗаписиКнигиПокупок.ДоговорКонтрагента = ТаблицаСчетаФактурыДокументы.ДоговорКонтрагента
	|			И ЗаписиКнигиПокупок.СтавкаНДСАванса = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактураДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСчетаФактурыДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаписиКнигиПокупок";
	
	Возврат ТекстЗапроса + УчетНДС.РазделительПакетаЗапросов();

КонецФункции

Функция ТекстЗапросаКнигаПокупок(СтруктураПараметров)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПодготовленныеЗаписиКнигиПокупок.НалоговыйПериод КАК НалоговыйПериод,
	|	ПодготовленныеЗаписиКнигиПокупок.Организация КАК Организация,
	|	ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Контрагент,
	|	ПодготовленныеЗаписиКнигиПокупок.Контрагент.ИНН КАК ПродавецИНН,
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПокупок.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ПодготовленныеЗаписиКнигиПокупок.Контрагент.КПП
	|		КОГДА ПодготовленныеЗаписиКнигиПокупок.КПППродавцаДляПечати <> """"
	|			ТОГДА ПодготовленныеЗаписиКнигиПокупок.КПППродавцаДляПечати
	|		ИНАЧЕ ПодготовленныеЗаписиКнигиПокупок.Контрагент.КПП
	|	КОНЕЦ КАК ПродавецКПП,
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПокупок.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеСокращенное, 1, 250)
	|					ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА ПодготовленныеЗаписиКнигиПокупок.Контрагент.Наименование
	|				ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ КАК Продавец,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактураДата КАК СчетФактураДата,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаПринятияНаУчет КАК ДатаПринятияНаУчет,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаДляСортировкиЗаписей КАК ДатаДляСортировкиЗаписей,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактураДокумент КАК СчетФактураДокумент,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПокупок.НаАванс КАК НаАванс,
	|	ПодготовленныеЗаписиКнигиПокупок.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ПодготовленныеЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПодготовленныеЗаписиКнигиПокупок.ВсегоПокупок КАК ВсегоПокупок,
	|	ПодготовленныеЗаписиКнигиПокупок.СуммаБезНДС18 КАК СуммаБезНДС18,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС18 КАК НДС18,
	|	ПодготовленныеЗаписиКнигиПокупок.СуммаБезНДС10 КАК СуммаБезНДС10,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС10 КАК НДС10,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС0 КАК НДС0,
	|	ПодготовленныеЗаписиКнигиПокупок.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактураДокументРасшифровка КАК СчетФактураДокументРасшифровка,
	|	ПодготовленныеЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаИсправления КАК ДатаИсправления,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерИсправления КАК НомерИсправления,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаКорректировки КАК ДатаКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерКорректировки КАК НомерКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.Исправление КАК Исправление,
	|	ПодготовленныеЗаписиКнигиПокупок.ОбрабатыватьНомерДокумента КАК ОбрабатыватьНомерДокумента,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаСчетаФактурыСортировка КАК ДатаСчетаФактурыСортировка,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия,
	|	ПодготовленныеЗаписиКнигиПокупок.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ПодготовленныеЗаписиКнигиПокупок.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ПодготовленныеЗаписиКнигиПокупок.КодВидаОперации КАК КодВидаОперации,
	|	ПодготовленныеЗаписиКнигиПокупок.Валюта КАК Валюта,
	|	ПодготовленныеЗаписиКнигиПокупок.ВалютаНаименование КАК ВалютаНаименование,
	|	ПодготовленныеЗаписиКнигиПокупок.ВалютаКод КАК ВалютаКод,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС КАК НДС,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка КАК ПосредникСсылка,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК Посредник,
	|	ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.ИНН КАК ПосредникИНН,
	|	ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.КПП КАК ПосредникКПП
	|ИЗ
	|	ПодготовленныеЗаписиКнигиПокупок КАК ПодготовленныеЗаписиКнигиПокупок
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДляСортировкиЗаписей,
	|	ДатаОплаты,
	|	ДатаСчетаФактуры,
	|	НомерСчетаФактуры,
	|	Продавец
	|ИТОГИ
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Продавец),
	|	МИНИМУМ(ДатаОплаты),
	|	МАКСИМУМ(ДатаПринятияНаУчет),
	|	МАКСИМУМ(ДатаДляСортировкиЗаписей),
	|	МАКСИМУМ(НаАванс),
	|	ВЫБОР
	|		КОГДА &ПравилаПостановления735
	|			ТОГДА МАКСИМУМ(ВсегоПокупок)
	|		ИНАЧЕ СУММА(ВсегоПокупок)
	|	КОНЕЦ КАК ВсегоПокупок,
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МИНИМУМ(ДатаСчетаФактурыСортировка),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	МАКСИМУМ(СводныйКомиссионный),
	|	СУММА(НДС),
	|	МАКСИМУМ(НомерДокументаОплаты),
	|	МАКСИМУМ(ДатаДокументаОплаты)
	|ПО
	|	ОБЩИЕ,
	|	СчетФактураДокумент,
	|	КодВидаОперации,
	|	Исправление";
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"ПО
			|	ОБЩИЕ,", 
			"ПО
			|	ОБЩИЕ, Контрагент, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"УПОРЯДОЧИТЬ ПО", 
			"УПОРЯДОЧИТЬ ПО Продавец, ");
	КонецЕсли;
		
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаДополнительныйЛистКнигиПокупок(СтруктураПараметров)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПодготовленныеЗаписиКнигиПокупок.НалоговыйПериод КАК НалоговыйПериод,
	|	ПодготовленныеЗаписиКнигиПокупок.Организация КАК Организация,
	|	ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Контрагент,
	|	ПодготовленныеЗаписиКнигиПокупок.Контрагент.ИНН КАК ПродавецИНН,
	|	ПодготовленныеЗаписиКнигиПокупок.Контрагент.КПП КАК ПродавецКПП,
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПокупок.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеСокращенное, 1, 250)
	|					ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПокупок.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА ПодготовленныеЗаписиКнигиПокупок.Контрагент.Наименование
	|				ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.Контрагент.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ КАК Продавец,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактураДата КАК СчетФактураДата,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаПринятияНаУчет КАК ДатаПринятияНаУчет,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаДляСортировкиЗаписей КАК ДатаДляСортировкиЗаписей,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактураДокумент КАК СчетФактураДокумент,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПокупок.НаАванс КАК НаАванс,
	|	ПодготовленныеЗаписиКнигиПокупок.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ПодготовленныеЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПодготовленныеЗаписиКнигиПокупок.ВсегоПокупок КАК ВсегоПокупок,
	|	ПодготовленныеЗаписиКнигиПокупок.СуммаБезНДС18 КАК СуммаБезНДС18,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС18 КАК НДС18,
	|	ПодготовленныеЗаписиКнигиПокупок.СуммаБезНДС10 КАК СуммаБезНДС10,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС10 КАК НДС10,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС0 КАК НДС0,
	|	ПодготовленныеЗаписиКнигиПокупок.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ПодготовленныеЗаписиКнигиПокупок.СчетФактураДокументРасшифровка КАК СчетФактураДокументРасшифровка,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаОформления КАК ДатаОформления,
	|	ПодготовленныеЗаписиКнигиПокупок.КонецНалоговогоПериода КАК КонецНалоговогоПериода,
	|	ПодготовленныеЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаИсправления КАК ДатаИсправления,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерИсправления КАК НомерИсправления,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаКорректировки КАК ДатаКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерКорректировки КАК НомерКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПокупок.ОбрабатыватьНомерДокумента КАК ОбрабатыватьНомерДокумента,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаСобытия КАК ДатаСобытия,
	|	ПодготовленныеЗаписиКнигиПокупок.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ПодготовленныеЗаписиКнигиПокупок.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ПодготовленныеЗаписиКнигиПокупок.КодВидаОперации КАК КодВидаОперации,
	|	ПодготовленныеЗаписиКнигиПокупок.Валюта КАК Валюта,
	|	ПодготовленныеЗаписиКнигиПокупок.ВалютаНаименование КАК ВалютаНаименование,
	|	ПодготовленныеЗаписиКнигиПокупок.ВалютаКод КАК ВалютаКод,
	|	ПодготовленныеЗаписиКнигиПокупок.НДС КАК НДС,
	|	ПодготовленныеЗаписиКнигиПокупок.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПокупок.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка КАК ПосредникСсылка,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК Посредник,
	|	ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.ИНН КАК ПосредникИНН,
	|	ПодготовленныеЗаписиКнигиПокупок.ПосредникСсылка.КПП КАК ПосредникКПП
	|ИЗ
	|	ПодготовленныеЗаписиКнигиПокупок КАК ПодготовленныеЗаписиКнигиПокупок
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговыйПериод,
	|	ДатаСобытия,
	|	ДатаОформления,
	|	СчетФактураДата,
	|	ДатаОплаты,
	|	ИсправленныйСчетФактура,
	|	Продавец
	|ИТОГИ
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Продавец),
	|	МАКСИМУМ(ДатаПринятияНаУчет),
	|	МИНИМУМ(ДатаДляСортировкиЗаписей),
	|	МАКСИМУМ(НаАванс),
	|	ВЫБОР
	|		КОГДА НалоговыйПериод >= ДАТАВРЕМЯ(2014, 10, 1)
	|			ТОГДА МАКСИМУМ(ВсегоПокупок)
	|		ИНАЧЕ СУММА(ВсегоПокупок)
	|	КОНЕЦ КАК ВсегоПокупок,
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(КонецНалоговогоПериода),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	МАКСИМУМ(СводныйКомиссионный),
	|	СУММА(НДС),
	|	МАКСИМУМ(НомерДокументаОплаты),
	|	МАКСИМУМ(ДатаДокументаОплаты)
	|ПО
	|	НалоговыйПериод,
	|	ДатаОформления,
	|	СчетФактураДокумент,
	|	ДоговорКонтрагента,
	|	КодВидаОперации,
	|	ИсправленныйСчетФактура";
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"ПО
			|	НалоговыйПериод,
			|	ДатаОформления,", 
			"ПО
			|	НалоговыйПериод,
			|	ДатаОформления, 
			|	Контрагент, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"УПОРЯДОЧИТЬ ПО", 
			"УПОРЯДОЧИТЬ ПО Продавец, ");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьДополнительнуюИнформациюПоСчетуФактуре(СтруктураПараметров)

	ДополнительнаяИнформация = Новый ТаблицаЗначений;
	ДополнительнаяИнформация.Колонки.Добавить("Ссылка",     Документы.ТипВсеСсылки());
	ДополнительнаяИнформация.Колонки.Добавить("ГТДиСтрана", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	ДополнительнаяИнформация.Колонки.Добавить("ГТД",        ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	ДополнительнаяИнформация.Колонки.Добавить("Графа7",     ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	ДополнительнаяИнформация.Колонки.Добавить("Графа9",     ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	ДополнительнаяИнформация.Колонки.Добавить("Графа10",    ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	ДополнительнаяИнформация.Индексы.Добавить("Ссылка");
	// Массив сведений о продавцах для декларации с 1 кв 2015 г.
	ДополнительнаяИнформация.Колонки.Добавить("МассивСвПрод", Новый ОписаниеТипов("Массив"));
	ДополнительнаяИнформация.Колонки.Добавить("МассивПлатежныеДокументы", Новый ОписаниеТипов("Массив"));
	// С 1 октября 2017 года в книге покупок указывается регистрационный номер декларации на товары.
	ДополнительнаяИнформация.Колонки.Добавить("РегистрационныйНомерТД",
		ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	
	// Дополнение по ГТД и стране происхождения
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураПараметров.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТоваров.Ссылка КАК СчетФактура,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код КАК СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код КАК НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	СУММА(1) КАК КоличествоЭлементов
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер,
	|	СУММА(1)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.НомерГТД.Код,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер,
	|	СУММА(1)
	|ИЗ
	|	Документ.ОтражениеПоступленияТоваровИУслугНДС.ТоварыИУслуги КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СтранаПроисхождения,
	|	ТаблицаТоваров.НомерГТД,
	|	ТаблицаТоваров.НомерГТД.Код,
	|	ТаблицаТоваров.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.НомерГТД.РегистрационныйНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер,
	|	СУММА(1)
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер,
	|	СУММА(1)
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	НЕ ТаблицаТоваров.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И НЕ(ТаблицаТоваров.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|				И ТаблицаТоваров.Ссылка.ИсправляемыйДокументПоступления ССЫЛКА Документ.КорректировкаПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер,
	|	СУММА(1)
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	НЕ ТаблицаТоваров.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И НЕ(ТаблицаТоваров.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|				И ТаблицаТоваров.Ссылка.ИсправляемыйДокументРеализации ССЫЛКА Документ.КорректировкаРеализации)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.СчетФактура,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер,
	|	СУММА(1)
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ТаблицаТоваров.Ссылка = СписокСчетовФактур.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.СчетФактура,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.СтранаПроисхождения.Код,
	|	ТаблицаТоваров.СерияНоменклатуры.НомерГТД.РегистрационныйНомер
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактура,
	|	СтранаПроисхождения";
	
	СтрокаСФ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока СтрокаСФ.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаИнформации = "";

		СтрокаДопИнформации = ДополнительнаяИнформация.Найти(СтрокаСФ.СчетФактура, "Ссылка");
		Если СтрокаДопИнформации = Неопределено Тогда
			СтрокаДопИнформации        = ДополнительнаяИнформация.Добавить();
			СтрокаДопИнформации.Ссылка = СтрокаСФ.СчетФактура;
		КонецЕсли;
		
		СтрокаСтраныПроисхождения = СтрокаСФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока СтрокаСтраныПроисхождения.Следующий() Цикл
			СтрокаИнформации = СтрокаИнформации 
				+ ?(ПустаяСтрока(СтрокаИнформации), "", Символы.ПС) + СокрЛП(СтрокаСтраныПроисхождения.СтранаПроисхождения);
			ГТДРез = "";
			СтрокаНомерГТД = СтрокаСтраныПроисхождения.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока СтрокаНомерГТД.Следующий() Цикл 
				ГТДРез = ГТДРез + ?(ГТДРез = "","",";") + СокрЛП(СтрокаНомерГТД.НомерГТД);
				
				Если Найти(СтрокаДопИнформации.ГТД, СокрЛП(СтрокаНомерГТД.НомерГТД)) = 0 Тогда // Исключаем дубли номеров ГТД
					СтрокаДопИнформации.ГТД = СтрокаДопИнформации.ГТД 
						+ ?(ПустаяСтрока(СтрокаДопИнформации.ГТД), "", ";") + СокрЛП(СтрокаНомерГТД.НомерГТД);
				КонецЕсли;
				
				Если Найти(СтрокаДопИнформации.РегистрационныйНомерТД, СокрЛП(СтрокаНомерГТД.РегистрационныйНомерТД)) = 0 Тогда
					СтрокаДопИнформации.РегистрационныйНомерТД = СтрокаДопИнформации.РегистрационныйНомерТД
						+ ?(ПустаяСтрока(СтрокаДопИнформации.РегистрационныйНомерТД), "", ";")
						+ СокрЛП(СтрокаНомерГТД.РегистрационныйНомерТД);
				КонецЕсли;
					
			КонецЦикла;
			СтрокаИнформации = СтрокаИнформации 
				+ ?(ПустаяСтрока(СтрокаИнформации), "", ?(ПустаяСтрока(ГТДРез), "", ";")) + ГТДРез;
		КонецЦикла;
		СтрокаДопИнформации.ГТДиСтрана = СтрокаИнформации;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученный.Ссылка КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ТаблицаПродавцы.Продавец.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ТаблицаПродавцы.Продавец.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ТаблицаПродавцы.Продавец.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК Продавец,
	|	ТаблицаПродавцы.Продавец.ИНН КАК ИНН,
	|	ТаблицаПродавцы.Продавец.КПП КАК КПП,
	|	НЕОПРЕДЕЛЕНО КАК ДатаДокументаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК НомерДокументаОплаты,
	|	СУММА(1) КАК КоличествоЭлементов,
	|	ТаблицаПродавцы.Продавец.ЮрФизЛицо КАК ЮридическоеФизическоеЛицо
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО СчетФактураПолученныйДокументыОснования.ДокументОснование = СписокСчетовФактур.СчетФактура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СчетФактураПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Продавцы КАК ТаблицаПродавцы
	|		ПО (ТаблицаПродавцы.Ссылка = СчетФактураПолученный.Ссылка)
	|ГДЕ
	|	СчетФактураПолученный.СводныйКомиссионный
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПродавцы.Продавец,
	|	СчетФактураПолученный.Ссылка,
	|	ТаблицаПродавцы.Продавец.ИНН,
	|	ТаблицаПродавцы.Продавец.КПП,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ТаблицаПродавцы.Продавец.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ТаблицаПродавцы.Продавец.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ТаблицаПродавцы.Продавец.НаименованиеПолное, 1, 250)
	|	КОНЕЦ,
	|	ТаблицаПродавцы.Продавец.ЮрФизЛицо
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученный.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	ТаблицаПлатежноРасчетныеДокументы.ДатаДокумента,
	|	ТаблицаПлатежноРасчетныеДокументы.НомерДокумента,
	|	СУММА(1),
	|	NULL
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО СчетФактураПолученныйДокументыОснования.ДокументОснование = СписокСчетовФактур.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СчетФактураПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ПлатежноРасчетныеДокументы КАК ТаблицаПлатежноРасчетныеДокументы
	|		ПО (ТаблицаПлатежноРасчетныеДокументы.Ссылка = СчетФактураПолученный.Ссылка)
	|ГДЕ
	|	СчетФактураПолученный.СводныйКомиссионный
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПлатежноРасчетныеДокументы.ДатаДокумента,
	|	ТаблицаПлатежноРасчетныеДокументы.НомерДокумента,
	|	СчетФактураПолученный.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	NULL,
	|	NULL,
	|	ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера,
	|	1,
	|	NULL
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокСчетовФактур КАК СписокСчетовФактур
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = СписокСчетовФактур.СчетФактура
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ВозвратТоваровОтПокупателя.НомерДокументаОтгрузки <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаДокументаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|	И НЕ &Постановление1137_2019
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактураДокумент";
	
	Запрос.УстановитьПараметр("Постановление1137_2019", СтруктураПараметров.Постановление1137_2019);
	СтрокаСФ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Запрос.МенеджерВременныхТаблиц = Неопределено;

	Пока СтрокаСФ.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаСФ.СчетФактураДокумент) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаГрафа7 = "";
		СтрокаГрафа9 = "";
		СтрокаГрафа10 = "";
		МассивСвПрод = Новый Массив();
		МассивПлатежныеДокументы = Новый Массив();
		
		СтрокаДетальнойИнформации = СтрокаСФ.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока СтрокаДетальнойИнформации.Следующий() Цикл 
			
			Если ЗначениеЗаполнено(СтрокаДетальнойИнформации.ДатаДокументаОплаты)
				И ЗначениеЗаполнено(СтрокаДетальнойИнформации.НомерДокументаОплаты) Тогда
				
				РеквизитыПлатежногоДокумента = Новый Структура("НомерДокументаОплаты,ДатаДокументаОплаты");
				ЗаполнитьЗначенияСвойств(РеквизитыПлатежногоДокумента, СтрокаДетальнойИнформации);
				МассивПлатежныеДокументы.Добавить(РеквизитыПлатежногоДокумента);
			КонецЕсли; 
 
			
			Если ЗначениеЗаполнено(СтрокаДетальнойИнформации.Продавец) Тогда
				СтрокаГрафа9 = ?(ПустаяСтрока(СтрокаГрафа9), "", СтрокаГрафа9 + ";" + Символы.ПС) 
				+ СокрЛП(СтрокаДетальнойИнформации.Продавец);
				
				СтрокаГрафа10 = ?(ПустаяСтрока(СтрокаГрафа10), "", СтрокаГрафа10 + ";" + Символы.ПС) 
					+ СокрЛП(СтрокаДетальнойИнформации.ИНН) 
					+ ?(ПустаяСтрока(СтрокаДетальнойИнформации.КПП), "", "/" + СокрЛП(СтрокаДетальнойИнформации.КПП));
					
				СтруктураРеквизитовКонтрагента = Новый Структура();
					
				Если СтрокаДетальнойИнформации.ЮридическоеФизическоеЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
					СтруктураРеквизитовКонтрагента.Вставить("ИННФЛ", СтрокаДетальнойИнформации.ИНН);
					МассивСвПрод.Добавить(СтруктураРеквизитовКонтрагента);
				Иначе
					СтруктураРеквизитовКонтрагента.Вставить("ИННЮЛ", СтрокаДетальнойИнформации.ИНН);
					СтруктураРеквизитовКонтрагента.Вставить("КПП", СтрокаДетальнойИнформации.КПП);
					МассивСвПрод.Добавить(СтруктураРеквизитовКонтрагента);
				КонецЕсли;
					
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаДопИнформации = ДополнительнаяИнформация.Найти(СтрокаСФ.СчетФактураДокумент, "Ссылка");
		Если СтрокаДопИнформации = Неопределено Тогда
			СтрокаДопИнформации 		= ДополнительнаяИнформация.Добавить();
			СтрокаДопИнформации.Ссылка 	= СтрокаСФ.СчетФактураДокумент;
		КонецЕсли;
		
		СтрокаДопИнформации.Графа7  = СтрокаГрафа7;
		СтрокаДопИнформации.Графа9  = СтрокаГрафа9;
		СтрокаДопИнформации.Графа10 = СтрокаГрафа10;
		СтрокаДопИнформации.МассивСвПрод = МассивСвПрод;
		СтрокаДопИнформации.МассивПлатежныеДокументы = МассивПлатежныеДокументы;
		
	КонецЦикла;
	
	Возврат ДополнительнаяИнформация;
	
КонецФункции

Функция ПроверитьНаличиеДопЛистовКнигиПокупок(СтруктураПараметров)
	
	СтруктураПараметров.Вставить("ТекущийПериод", Ложь);
	СтруктураПараметров.Вставить("КорректируемыйПериод", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	1 КАК Порядок,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьДопЛисты,
	|	НДСЗаписиКнигиПокупокОбороты.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупокОбороты.ИсправленныйСчетФактура
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			Организация В (&Организация)
	|				И ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупокОбороты.Период,
	|	НДСЗаписиКнигиПокупокОбороты.ИсправленныйСчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	&НачалоПериода,
	|	НДСЗаписиКнигиПокупокОбороты.ИсправленныйСчетФактура
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			День,
	|			Организация В (&Организация)
	|				И ЗаписьДополнительногоЛиста
	|				И КорректируемыйПериод >= &НачалоПериода
	|				И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.Поставщик,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.Период,
	|	НДСЗаписиКнигиПокупокОбороты.ИсправленныйСчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураПараметров.КонецПериода));
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.СписокОрганизаций);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;
	
	Результат = Результат.Выгрузить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если СтрокаРезультата.Порядок = 1 И СтрокаРезультата.ЕстьДопЛисты Тогда 
			СтруктураПараметров.КорректируемыйПериод = Истина;
		ИначеЕсли СтрокаРезультата.ЕстьДопЛисты Тогда
			СтруктураПараметров.ТекущийПериод = Истина;
		КонецЕсли;
		Если СтруктураПараметров.КорректируемыйПериод И СтруктураПараметров.ТекущийПериод Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция НоваяСтрокаИтоговКнигиПокупок()

	Результат = Новый Структура();
	Результат.Вставить("ВсегоПокупок",      0);
	Результат.Вставить("НДС",               0);
	Результат.Вставить("СуммаБезНДС18",     0);
	Результат.Вставить("НДС18",             0);
	Результат.Вставить("СуммаБезНДС10",     0);
	Результат.Вставить("НДС10",             0);
	Результат.Вставить("НДС0",              0);
	Результат.Вставить("СуммаСовсемБезНДС", 0);
	
	Возврат Результат;

КонецФункции

#КонецЕсли
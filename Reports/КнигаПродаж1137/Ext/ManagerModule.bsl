#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура СформироватьОтчет(Знач СтруктураПараметров, АдресХранилища) Экспорт

	ПодготовитьОтчет(СтруктураПараметров);
	
	ПоместитьВоВременноеХранилище(СтруктураПараметров, АдресХранилища);
	
КонецПроцедуры

Процедура ПодготовитьОтчет(СтруктураПараметров)
	
	Если ЗначениеЗаполнено(СтруктураПараметров.КонтрагентДляОтбора)
		ИЛИ СтруктураПараметров.ВыводитьПродавцовПоАвансам
		ИЛИ СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтандартнаяФорма = Ложь;
	Иначе
		СтандартнаяФорма = УчетНДС.ПериодОтчетаСоответствуетНалоговому(
			СтруктураПараметров.Организация, СтруктураПараметров.НачалоПериода, СтруктураПараметров.КонецПериода);
	КонецЕсли;

	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме", СтандартнаяФорма);
		
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		СписокОрганизаций = СтруктураПараметров.СписокОрганизаций;
	ИначеЕсли НЕ СтруктураПараметров.ВключатьОбособленныеПодразделения Тогда
		СписокОрганизаций = Новый СписокЗначений;
		СписокОрганизаций.Добавить(СтруктураПараметров.Организация);
	Иначе
		СписокОрганизаций = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(
			СтруктураПараметров.Организация);
		СписокОрганизаций.Добавить(СтруктураПараметров.Организация);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	СтруктураПараметров.Вставить("ЗаписьДополнительногоЛиста", Ложь);
	
	СтруктураПараметров.Вставить("ПрефиксыРИБиОрганизации",
		ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(СтруктураПараметров.Организация));
	
	ИнициализироватьТаблицыДанныхНДС(СтруктураПараметров);
	
	СтруктураПараметров.СписокСформированныхЛистов.Очистить();
	СписокСообщений = Новый СписокЗначений();
		
	Если НЕ (СтруктураПараметров.ВыводитьТолькоДопЛисты И СтруктураПараметров.ФормироватьДополнительныеЛисты) Тогда
		
		СтруктураПараметров.Вставить("ВерсияПостановленияНДС1137", 
			УчетНДС.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериода));
		
		Результат = ЗаписиКнигиПродаж(СтруктураПараметров);
		СформироватьОсновнойРаздел(СтруктураПараметров, Результат);
		
	КонецЕсли;
		
	// Проверка наличия дополнительных листов за текущий период
	СтруктураПараметров = ПроверитьНаличиеДопЛистовКнигиПродаж(СтруктураПараметров);
	
	Если СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод Или Не СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
				|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И Не СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
				|Построение дополнительных листов за текущий налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод Или Не СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
				|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И Не СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
				|Построение дополнительных листов за корректируемый налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		
		
		СтруктураПараметров.ЗаписьДополнительногоЛиста = Истина;
		
		Если СтруктураПараметров.ЗаполнениеДокумента ИЛИ СтруктураПараметров.ЗаполнениеДекларации Тогда
			ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецНалоговогоПериода;
		Иначе
			ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецПериода;
		КонецЕсли;
		
		СтруктураПараметров.Вставить("ВерсияПостановленияНДС1137", 
			УчетНДС.ВерсияПостановленияНДС1137(ДатаПроверкиПараметровУчета));
		
		// Получение записей дополнительных листов
		Результат = ЗаписиКнигиПродаж(СтруктураПараметров);
		
		СформироватьДополнительныеЛисты(СтруктураПараметров, Результат);
		
	КонецЕсли;
	
	СтруктураПараметров.Вставить("СписокСообщений", СписокСообщений);
	
КонецПроцедуры

// Используется в электронном доп. листе книги продаж
Функция ПолучитьИтогиЗаПериодКнигаПродаж(СтруктураПараметров) Экспорт
	
	// Создаем общий запрос
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.ВсегоПродаж), 0) КАК ВсегоПродаж,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС20), 0) КАК СуммаБезНДС20,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС20), 0) КАК НДС20,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС18), 0) КАК СуммаБезНДС18,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС18), 0) КАК НДС18,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаБезНДС10), 0) КАК СуммаБезНДС10,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС10), 0) КАК НДС10,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.НДС0), 0) КАК НДС0,
	|	ЕСТЬNULL(СУММА(ЗаписиКнигиПродаж.СуммаСовсемБезНДС), 0) КАК СуммаСовсемБезНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот КАК ВсегоПродаж,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И НДСЗаписиКнигиПродажОбороты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС20,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС20,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И НДСЗаписиКнигиПродажОбороты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС18,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаБезНДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС10,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НДС0,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаСовсемБезНДС
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Период,
	|				Организация В (&Организация)
	|					И &ДополнительноеУсловие
	|					И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И НДСЗаписиКнигиПродажОбороты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|					И НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И НДСЗаписиКнигиПродажОбороты.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|					И НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|					И НЕ НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродажОбороты.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&НачалоПериода,
	|				&МоментФормированияДопЛиста,
	|				Период,
	|				Организация В (&Организация)
	|					И &ДополнительноеУсловие
	|					И (ЗаписьДополнительногоЛиста
	|						И КорректируемыйПериод >= &НачалоПериода
	|						И КорректируемыйПериод <= &КонецПериода)) КАК НДСЗаписиКнигиПродажОбороты) КАК ЗаписиКнигиПродаж";
	
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НалоговыйПериод);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураПараметров.КонецНалоговогоПериода));
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.СписокОрганизаций);
	Запрос.УстановитьПараметр("МоментФормированияДопЛиста", 
		Новый Граница(НачалоДня(СтруктураПараметров.ДатаФормированияДопЛиста),ВидГраницы.Исключая));
		
	ДатаПроверкиПараметровУчета = КонецДня(СтруктураПараметров.КонецНалоговогоПериода);
		
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(ДатаПроверкиПараметровУчета);

	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(
		ДатаПроверкиПараметровУчета, Ложь, СтруктураПараметров.Организация, "регл");
	
	ПрименяетсяОсвобождениеОтУплатыНДС = УчетНДС.ПрименяетсяОсвобождениеОтУплатыНДС(
		СтруктураПараметров.Организация, ДатаПроверкиПараметровУчета);
		
	ПлательщикНДС = УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
	
	СтруктураПараметров.Вставить("ПрименяетсяОсвобождениеОтУплатыНДС",
		ПрименяетсяОсвобождениеОтУплатыНДС);
	СтруктураПараметров.Вставить("ПлательщикНДС",
		ПлательщикНДС);
	
	МассивСтавокНДС = Перечисления.СтавкиНДС.СтавкиПоОперациямОтражаемымВКнигеПродаж(ВерсияПостановленияНДС1137);
	Запрос.УстановитьПараметр("МассивСтавокНДС", МассивСтавокНДС);
	Запрос.УстановитьПараметр("ВидыЦенностей_НалоговыйАгент",
		Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгент());
		
	СтавкиНДС20 = Новый Массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20",  СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18",  СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10",  СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0",   СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	
	ВидыЦенностей_Аванс = Новый Массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	// Для итогов авансы можно учитывать вместе с выделенными суммовыми разницами - методика отражения в книге одинаковая.
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс", ВидыЦенностей_Аванс);
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ДополнительноеУсловие", 
		ДополнительноеУсловиеЗапроса(СтруктураПараметров, Ложь));
	
	ИтогЗаПериод = Запрос.Выполнить();
	
	Если НЕ ИтогЗаПериод.Пустой() Тогда
		
		Возврат ИтогЗаПериод.Выгрузить()[0];
		
	Иначе
		
		ИтогЗаПериод = Новый Структура;
		ИтогЗаПериод.Вставить("ВсегоПродаж", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("СуммаБезНДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("НДС10", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("СуммаБезНДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("НДС18", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("НДС0", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		ИтогЗаПериод.Вставить("СуммаСовсемБезНДС", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
		
		Возврат ИтогЗаПериод;
		
	КонецЕсли;
	
КонецФункции

Процедура СформироватьОсновнойРаздел(СтруктураПараметров, Результат);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПродаж";
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериода);
	
	Если УчетНДС.ПрименяетсяПостановление15(СтруктураПараметров.КонецПериода) Тогда
		Макет = ПолучитьОбщийМакет("КнигаПродаж15");
	ИначеЕсли СтруктураПараметров.ВерсияПостановленияНДС1137 = 4 Тогда
		Макет = ПолучитьОбщийМакет("КнигаПродаж981");
	ИначеЕсли ВерсияПостановленияНДС1137 = 3 Тогда
		Если СтруктураПараметров.ЗаполнениеДекларации
		   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
			Макет = ПолучитьОбщийМакет("КнигаПродаж1137_2017");
		Иначе
			Макет = ПолучитьОбщийМакет("КнигаПродаж735");
		КонецЕсли;
	Иначе
		Макет = ПолучитьОбщийМакет("КнигаПродаж1137");
	КонецЕсли; 

	СтруктураСекций = Новый Структура();
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
	
		СтруктураСекций.Вставить("ШапкаРаздел9", Макет.ПолучитьОбласть("ШапкаРаздел9"));
		СтруктураСекций.Вставить("СтрокиДляПовтора", Макет.ПолучитьОбласть("СтрокиДляПовтора"));
		ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел9);
		ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
		
	Иначе
	
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
			Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
			СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
		НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, "ПолноеНаименование");
		
		Секция = Макет.ПолучитьОбласть("Шапка");
		Секция.Параметры.УстановленныйОтбор = "";
		Секция.Параметры.НачалоПериода = Формат(СтруктураПараметров.НачалоПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.КонецПериода = Формат(СтруктураПараметров.КонецПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		Секция.Параметры.ИННКППОрганизации = "" + СтруктураПараметров.Организация.ИНН 
			+ ?(НЕ ЗначениеЗаполнено(СтруктураПараметров.Организация.КПП), "", ("/" + СтруктураПараметров.Организация.КПП));
		
		Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
			
			Если ОбщегоНазначения.ОбъектЯвляетсяГруппой(СтруктураПараметров.КонтрагентДляОтбора) Тогда
				НадписьОтбор = НСтр("ru='Отбор: Контрагент в группе %1'");
			Иначе
				НадписьОтбор = НСтр("ru='Отбор: Контрагент = %1'");
			КонецЕсли;
			Секция.Параметры.УстановленныйОтбор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НадписьОтбор, СтруктураПараметров.КонтрагентДляОтбора);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЕсли;
	
	Если Результат.Пустой() Тогда
		
		Секция = Макет.ПолучитьОбласть("Всего");
		ТабличныйДокумент.Вывести(Секция);
		
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
			И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
			ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
		КонецЕсли;
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		
		СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
		
		Если СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
			Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
			ЛеваяКолонка = Область20Процентов.Лево;
			ПраваяКолонка = Область20Процентов.Право;
			ТабличныйДокумент.УдалитьОбласть(
				ТабличныйДокумент.Область(
					,
					ЛеваяКолонка,
					,
					ПраваяКолонка),
					ТипСмещенияТабличногоДокумента.ПоГоризонтали);
			Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
				ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
			КонецЕсли;
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураСекций.Вставить("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
		СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
	КонецЕсли;
	
	СтрокаИтогПоОрганизации = НоваяСтрокаИтоговКнигиПродаж();
	
	ПреобразоватьЗаписиКнигиПродаж(
		СтруктураПараметров,
		Результат,
		ТабличныйДокумент,
		СтрокаИтогПоОрганизации,
		СтруктураСекций,
		?(СтруктураПараметров.Свойство("ТабличнаяЧасть"),СтруктураПараметров.ТабличнаяЧасть, Неопределено));
	
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(СтрокаИтогПоОрганизации);
	ТабличныйДокумент.Вывести(Секция);
	
	Если НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
		ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	КонецЕсли;
	
	Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
		И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
		ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
	КонецЕсли;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		Если СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> 0
			И СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
			
			ПерваяСтрокаСегмента = СтруктураПараметров.Счетчик - СтруктураПараметров.СчетчикСтрокТекущегоСегмента + 1;
			
			РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел9",
				ПерваяСтрокаСегмента,
				СтруктураПараметров.ТаблицаРаздел9);
			
			РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел9",
				ПерваяСтрокаСегмента,
				ТабличныйДокумент);
				
		КонецЕсли;
		
		ИтогиРаздел9 = Новый Структура(
			"СтПродБезНДС20,СтПродБезНДС18,СтПродБезНДС10,СтПродБезНДС0,
			|СумНДСВсКПр20,СумНДСВсКПр18,СумНДСВсКПр10,СтПродОсвВсКПр");
		ИтогиРаздел9.СтПродБезНДС20 = СтрокаИтогПоОрганизации.СуммаБезНДС20;
		ИтогиРаздел9.СтПродБезНДС18 = СтрокаИтогПоОрганизации.СуммаБезНДС18;
		ИтогиРаздел9.СтПродБезНДС10 = СтрокаИтогПоОрганизации.СуммаБезНДС10;
		ИтогиРаздел9.СтПродБезНДС0  = СтрокаИтогПоОрганизации.НДС0;
		ИтогиРаздел9.СумНДСВсКПр20  = СтрокаИтогПоОрганизации.НДС20;
		ИтогиРаздел9.СумНДСВсКПр18  = СтрокаИтогПоОрганизации.НДС18;
		ИтогиРаздел9.СумНДСВсКПр10  = СтрокаИтогПоОрганизации.НДС10;
		ИтогиРаздел9.СтПродОсвВсКПр = СтрокаИтогПоОрганизации.СуммаСовсемБезНДС;
		
		РегламентированнаяОтчетность.ЗаписатьИтогиРазделаДекларацииНДС(
			СтруктураПараметров.СсылкаНаДекларацию,
			"Раздел9",
			ИтогиРаздел9);
		
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		ОбщиеСведения = Новый Структура(
			"СтТовРубКоп20, СтТовРубКоп18,СтТовРубКоп10,СтТовРубКоп0,
			|СумНДСРубКоп20, СумНДСРубКоп18,СумНДСРубКоп10,СтПродОсвНДСРубКоп");
		ОбщиеСведения.СтТовРубКоп20      = СтрокаИтогПоОрганизации.СуммаБезНДС20;
		ОбщиеСведения.СтТовРубКоп18      = СтрокаИтогПоОрганизации.СуммаБезНДС18;
		ОбщиеСведения.СтТовРубКоп10      = СтрокаИтогПоОрганизации.СуммаБезНДС10;
		ОбщиеСведения.СтТовРубКоп0       = СтрокаИтогПоОрганизации.НДС0;
		ОбщиеСведения.СумНДСРубКоп20     = СтрокаИтогПоОрганизации.НДС20;
		ОбщиеСведения.СумНДСРубКоп18     = СтрокаИтогПоОрганизации.НДС18;
		ОбщиеСведения.СумНДСРубКоп10     = СтрокаИтогПоОрганизации.НДС10;
		ОбщиеСведения.СтПродОсвНДСРубКоп = СтрокаИтогПоОрганизации.СуммаСовсемБезНДС;
		
		СтруктураПараметров.ОбщиеСведения = ОбщиеСведения;
		
	ИначеЕсли СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
		
		Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
		ЛеваяКолонка = Область20Процентов.Лево;
		ПраваяКолонка = Область20Процентов.Право;
		ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
			ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
	СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
	
КонецПроцедуры

Процедура СформироватьДополнительныеЛисты(СтруктураПараметров, Результат)
	
	Перем ТабличныйДокумент;
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НомерОтображаемогоПериода = 0;
	
	ИтогПоПериодам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураПараметров.Вставить("СчетчикСтрокДопЛиста", 0);
	СтруктураПараметров.Вставить("СчетчикСтрокТекущегоСегмента", 0);
	
	ИтогиРаздел91 = Новый Структура(
		"ИтСтПродКПр20,ИтСтПродКПр18,ИтСтПродКПр10,ИтСтПродКПр0,
		|СумНДСИтКПр20,СумНДСИтКПр18,СумНДСИтКПр10,ИтСтПродОсвКПр,
		|СтПродВсП1Р9_20,СтПродВсП1Р9_18,СтПродВсП1Р9_10,СтПродВсП1Р9_0,
		|СумНДСВсП1Р9_20,СумНДСВсП1Р9_18,СумНДСВсП1Р9_10,СтПродОсвП1Р9Вс");
		
	ПараметрыПолученияИтогов = Новый Структура;
	ПараметрыПолученияИтогов.Вставить("НалоговыйПериод",            НачалоКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("КонецНалоговогоПериода",     КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("ДатаФормированияДопЛиста",   КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("СписокОрганизаций",          СтруктураПараметров.СписокОрганизаций);
	ПараметрыПолученияИтогов.Вставить("Организация",                СтруктураПараметров.Организация);
	ПараметрыПолученияИтогов.Вставить("ЗаписьДополнительногоЛиста", Ложь);
	
	ИтогПоКнигеПродаж = ПолучитьИтогиЗаПериодКнигаПродаж(ПараметрыПолученияИтогов);
	
	ИтогиРаздел91.ИтСтПродКПр20  = ИтогПоКнигеПродаж.СуммаБезНДС20;
	ИтогиРаздел91.ИтСтПродКПр18  = ИтогПоКнигеПродаж.СуммаБезНДС18;
	ИтогиРаздел91.ИтСтПродКПр10  = ИтогПоКнигеПродаж.СуммаБезНДС10;
	ИтогиРаздел91.ИтСтПродКПр0   = ИтогПоКнигеПродаж.НДС0;
	ИтогиРаздел91.СумНДСИтКПр20  = ИтогПоКнигеПродаж.НДС20;
	ИтогиРаздел91.СумНДСИтКПр18  = ИтогПоКнигеПродаж.НДС18;
	ИтогиРаздел91.СумНДСИтКПр10  = ИтогПоКнигеПродаж.НДС10;
	ИтогиРаздел91.ИтСтПродОсвКПр = ИтогПоКнигеПродаж.СуммаСовсемБезНДС;
	
	ДанныеОтчета = Новый Массив;
	
	Пока ИтогПоПериодам.Следующий() Цикл
	
		НомерЛиста = 0;
		
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(
			ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		
		ИтогПоПериодамКорректировки = ИтогПоПериодам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ИтогПоПериодамКорректировки.Следующий() Цикл;
			
			СтруктураСекций = Новый Структура();
			
			ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(
				ИтогПоПериодамКорректировки.КонецНалоговогоПериода);
				
			Если УчетНДС.ПрименяетсяПостановление15(ИтогПоПериодамКорректировки.КонецНалоговогоПериода) Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж15");
			ИначеЕсли ВерсияПостановленияНДС1137 = 1 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж1137");
				СтруктураПараметров.ЗаполнениеДекларации = Ложь;
			ИначеЕсли ВерсияПостановленияНДС1137 = 2 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж952");
				СтруктураПараметров.ЗаполнениеДекларации = Ложь;
			ИначеЕсли ВерсияПостановленияНДС1137 = 3 Тогда
				Если СтруктураПараметров.ЗаполнениеДекларации
				   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж1137_2017");
				Иначе
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж735");
				КонецЕсли;
				Если СтруктураПараметров.ЗаполнениеДекларации Тогда
					СтруктураСекций.Вставить("ШапкаРаздел91", Макет.ПолучитьОбласть("ШапкаРаздел91"));
					СтруктураСекций.Вставить("СтрокиДляПовтора", Макет.ПолучитьОбласть("СтрокиДляПовтора"));
				КонецЕсли;
			ИначеЕсли ВерсияПостановленияНДС1137 = 4 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж981");
			КонецЕсли;

			СтруктураСекций.Вставить("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));

			Секция = Макет.ПолучитьОбласть("Строка");
			СтрокаИтого = Макет.ПолучитьОбласть("Итого");
			СтрокаВсего = Макет.ПолучитьОбласть("Всего");
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
				СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
			КонецЕсли;
			
			// Формирование шапки доп. листа
			ОкончаниеПредыдущегоРаздела = ТабличныйДокумент.ВысотаТаблицы;
			НомерЛиста = НомерЛиста + 1;
			
			СтруктураПараметров.Вставить("НалоговыйПериод", 
				ИтогПоПериодамКорректировки.НалоговыйПериод);
			СтруктураПараметров.Вставить("КонецНалоговогоПериода", 
				КонецКвартала(ИтогПоПериодамКорректировки.КонецНалоговогоПериода));
			СтруктураПараметров.Вставить("ДатаОформления", ИтогПоПериодамКорректировки.ДатаОформления);
			
			Если СтруктураПараметров.ЗаполнениеДекларации Тогда
				ВывестиШапкуРаздела91Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			Иначе
				УчетНДС.ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			КонецЕсли;

			СтруктураПараметров.ДатаФормированияДопЛиста = ИтогПоПериодамКорректировки.ДатаОформления;
			
			ИтогЗаПериод = ПолучитьИтогиЗаПериодКнигаПродаж(СтруктураПараметров);
			
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаИтого);
			
			Если СтруктураПараметров.ЗаполнениеДокумента
				И СтруктураПараметров.ФорматПоПостановлению735 Тогда
				
				ОбщиеСведения = Новый Структура(
					"НомерДопЛКнПрод,Период,ОтчетГод,ДатаДопЛКнПрод,Итого,Всего");
				
				ОбщиеСведения.НомерДопЛКнПрод = НомерЛиста;
				ОбщиеСведения.Период          = СтруктураПараметров.ПериодПоСКНП;
				ОбщиеСведения.ОтчетГод        = Строка(Формат(Год(ИтогПоПериодамКорректировки.НалоговыйПериод),"ЧГ=0"));
				ОбщиеСведения.ДатаДопЛКнПрод  = Строка(Формат(ИтогПоПериодамКорректировки.ДатаОформления, "ДЛФ=Д"));
				
				Итого = Новый Структура(
					"СтТовРубКоп20,СтТовРубКоп18,СтТовРубКоп10,СтТовРубКоп0,СумНДСРубКоп20,СумНДСРубКоп18,СумНДСРубКоп10,СтПродОсвНДСРубКоп");
				Итого.СтТовРубКоп20			= ИтогЗаПериод.СуммаБезНДС20;
				Итого.СтТовРубКоп18			= ИтогЗаПериод.СуммаБезНДС18;
				Итого.СтТовРубКоп10			= ИтогЗаПериод.СуммаБезНДС10;
				Итого.СтТовРубКоп0			= ИтогЗаПериод.НДС0;
				Итого.СумНДСРубКоп20		= ИтогЗаПериод.НДС20;
				Итого.СумНДСРубКоп18		= ИтогЗаПериод.НДС18;
				Итого.СумНДСРубКоп10		= ИтогЗаПериод.НДС10;
				Итого.СтПродОсвНДСРубКоп	= ИтогЗаПериод.СуммаСовсемБезНДС;
				
				ОбщиеСведения.Итого = Итого;
				
			КонецЕсли;
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
				СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
			КонецЕсли;
			
			ПреобразоватьЗаписиДополнительногоЛистаКнигиПродаж(
				СтруктураПараметров,
				ИтогПоПериодамКорректировки,
				?(СтруктураПараметров.Свойство("РеквизитыДокумента"), СтруктураПараметров.РеквизитыДокумента, ИтогЗаПериод),
				ТабличныйДокумент,
				СтруктураСекций,
				?(СтруктураПараметров.Свойство("ТабличнаяЧасть"), СтруктураПараметров.ТабличнаяЧасть, Неопределено));
			
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
			
			Если СтруктураПараметров.ЗаполнениеДокумента
				И СтруктураПараметров.ФорматПоПостановлению735 Тогда
				
				Всего = Новый Структура("СтТовРубКоп20,СтТовРубКоп18,СтТовРубКоп10,СтТовРубКоп0,СумНДСРубКоп20,СумНДСРубКоп18,СумНДСРубКоп10,СтПродОсвНДСРубКоп");
				Всего.СтТовРубКоп20			= ИтогЗаПериод.СуммаБезНДС20;
				Всего.СтТовРубКоп18			= ИтогЗаПериод.СуммаБезНДС18;
				Всего.СтТовРубКоп10			= ИтогЗаПериод.СуммаБезНДС10;
				Всего.СтТовРубКоп0			= ИтогЗаПериод.НДС0;
				Всего.СумНДСРубКоп20		= ИтогЗаПериод.НДС20;
				Всего.СумНДСРубКоп18		= ИтогЗаПериод.НДС18;
				Всего.СумНДСРубКоп10		= ИтогЗаПериод.НДС10;
				Всего.СтПродОсвНДСРубКоп	= ИтогЗаПериод.СуммаСовсемБезНДС;
				
				ОбщиеСведения.Всего = Всего;
				
				СтруктураДанных = Новый Структура("ОбщиеСведения,Записи", ОбщиеСведения, СтруктураПараметров.Записи.Скопировать());
				СтруктураПараметров.Записи.Очистить();
				ДанныеОтчета.Добавить(СтруктураДанных);
				
			КонецЕсли;
			
			Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
				И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
				ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
			КонецЕсли;
			
			Если СтруктураПараметров.СкрытьКолонкиПоСтавке20 Тогда
				Область20Процентов = ТабличныйДокумент.Область("Заголовок20Процентов");
				ЛеваяКолонка = Область20Процентов.Лево;
				ПраваяКолонка = Область20Процентов.Право;
				ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(,ЛеваяКолонка,,ПраваяКолонка),ТипСмещенияТабличногоДокумента.ПоГоризонтали);
				Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
					ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область("Подпись20Процентов"));
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла; // ИтогПоПериодамКорректировки.Следующий()
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		СтруктураПараметров.СписокСформированныхЛистов.Добавить(
			ТабличныйДокумент, 
			Нстр("ru='Доп.листы за'") + " " + НалоговыйПериод);
		
	КонецЦикла; // ИтогПоПериодам.Следующий()
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда

		// Запишем последний сегмент
	
		Если СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> 0
			И СтруктураПараметров.СчетчикСтрокТекущегоСегмента <> СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
			
			// Записать сегменты
			ПерваяСтрокаСегмента = СтруктураПараметров.СчетчикСтрокДопЛиста - СтруктураПараметров.СчетчикСтрокТекущегоСегмента + 1;
			
			РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел9_Прил1",
				ПерваяСтрокаСегмента,
				СтруктураПараметров.ТаблицаРаздел91);
			
			РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
				СтруктураПараметров.СсылкаНаДекларацию,
				"Раздел9_Прил1",
				ПерваяСтрокаСегмента,
				ТабличныйДокумент);
				
		КонецЕсли;
		
		ИтогиРаздел91.СтПродВсП1Р9_20 = ИтогЗаПериод.СуммаБезНДС20;
		ИтогиРаздел91.СтПродВсП1Р9_18 = ИтогЗаПериод.СуммаБезНДС18;
		ИтогиРаздел91.СтПродВсП1Р9_10 = ИтогЗаПериод.СуммаБезНДС10;
		ИтогиРаздел91.СтПродВсП1Р9_0  = ИтогЗаПериод.НДС0;
		ИтогиРаздел91.СумНДСВсП1Р9_20 = ИтогЗаПериод.НДС20;
		ИтогиРаздел91.СумНДСВсП1Р9_18 = ИтогЗаПериод.НДС18;
		ИтогиРаздел91.СумНДСВсП1Р9_10 = ИтогЗаПериод.НДС10;
		ИтогиРаздел91.СтПродОсвП1Р9Вс = ИтогЗаПериод.СуммаСовсемБезНДС;

		РегламентированнаяОтчетность.ЗаписатьИтогиРазделаДекларацииНДС(
			СтруктураПараметров.СсылкаНаДекларацию,
			"Раздел9_Прил1",
			ИтогиРаздел91);
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		СтруктураПараметров.ДанныеОтчета = ДанныеОтчета;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиШапкуРаздела91Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерДополнительногоЛиста)
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	Если НомерДополнительногоЛиста = 1 Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел91");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("ШапкаРаздел91НомерЛиста");
	Секция.Параметры.НомерЛиста = НомерДополнительногоЛиста;
	Секция.Параметры.ДатаСоставления = Формат(СтруктураПараметров.ДатаОформления, "ДФ=dd.MM.yyyy");
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть("СтрокиДляПовтора");
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет)
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СписокПоказателей.Добавить("ФИО");
	
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода, СписокПоказателей);
	СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
	
	Если РегламентированнаяОтчетность.ЭтоПБОЮЛ(СтруктураПараметров.Организация) Тогда
		ИмяРук = "";
		ИмяОрг = СведенияОбОрганизации.ФИО;
		Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,");
	Иначе
		ИмяРук = СведенияОбОрганизации.ФИОРук;
		ИмяОрг = "";
		Свидетельство = "";
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяРук        = ИмяРук;
	Секция.Параметры.ИмяОрг        = ИмяОрг;
	Секция.Параметры.Свидетельство = Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ИнициализироватьТаблицыДанныхНДС(СтруктураПараметров)

	Если СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		Записи = Новый ТаблицаЗначений;
		
		Записи.Колонки.Добавить("НомПП", 				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
		Записи.Колонки.Добавить("НомерСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Записи.Колонки.Добавить("ДатаСчФ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НомИспрСчФ", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Записи.Колонки.Добавить("ДатаИспрСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НомерКСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Записи.Колонки.Добавить("ДатаКСчФ", 			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НомИспрКСчФ", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Записи.Колонки.Добавить("ДатаИспрКСчФ",			Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("НаимПок", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1000)));
		Записи.Колонки.Добавить("ИННЮЛ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		Записи.Колонки.Добавить("КПП", 					Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(9)));
		Записи.Колонки.Добавить("ИННФЛ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(12)));
		Записи.Колонки.Добавить("КодОКВ", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		Записи.Колонки.Добавить("СтТовУчНалВсего", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СтТовУчНалРубКоп", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СтТовРубКоп20", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СтТовРубКоп18", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СтТовРубКоп10", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СтТовРубКоп0", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СумНДСРубКоп20", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СумНДСРубКоп18", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СумНДСРубКоп10", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Записи.Колонки.Добавить("СтПродОсвНДСРубКоп", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		
		Записи.Колонки.Добавить("КодВидОпер",	Новый ОписаниеТипов("Массив"));
		Записи.Колонки.Добавить("СвПосредн");
		Записи.Колонки.Добавить("СвДокПдтвОпл", Новый ОписаниеТипов("Массив"));
		
		// Заполнение рег. номера таможенной декларации в программе не предусмотрено,
		// передаем пустой массив для целей формата выгрузки.
		Записи.Колонки.Добавить("НомерТД", Новый ОписаниеТипов("Массив"));
		Записи.Колонки.Добавить("ВидТов",  Новый ОписаниеТипов("Массив"));
		
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда 
			ОбщиеСведения = Новый Структура("НомерДопЛКнПрод,Период,ОтчетГод,ДатаДопЛКнПрод,Итого,Всего");
			СтруктураПараметров.Вставить("ДанныеОтчета");
		Иначе
			ОбщиеСведения = Новый Структура("СтТовРубКоп20,СтТовРубКоп18,СтТовРубКоп10,СтТовРубКоп0,СумНДСРубКоп20,СумНДСРубКоп18,СумНДСРубКоп10,СтПродОсвНДСРубКоп");
		КонецЕсли;
		
		СтруктураПараметров.Вставить("Записи", 			Записи);
		СтруктураПараметров.Вставить("ОбщиеСведения", 	ОбщиеСведения);
		
	Иначе
		Раздел9 = Новый ТаблицаЗначений;
		
		Раздел9.Колонки.Добавить("НомерПор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
		
		Раздел9.Колонки.Добавить("НомСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
		Раздел9.Колонки.Добавить("ДатаСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Раздел9.Колонки.Добавить("НомИспрСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Раздел9.Колонки.Добавить("ДатаИспрСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Раздел9.Колонки.Добавить("НомКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
		Раздел9.Колонки.Добавить("ДатаКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Раздел9.Колонки.Добавить("НомИспрКСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
		Раздел9.Колонки.Добавить("ДатаИспрКСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
		Раздел9.Колонки.Добавить("ОКВ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
		
		Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
			Если СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
		
				Раздел9.Колонки.Добавить("РегНомТД", Новый ОписаниеТипов("Массив"));

			ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2019Кв1" Тогда
				
				Раздел9.Колонки.Добавить("РегНомТД",    Новый ОписаниеТипов("Массив"));
				Раздел9.Колонки.Добавить("КодВидТовар", Новый ОписаниеТипов("Массив"));
				
			КонецЕсли;
			
		КонецЕсли;
		
		Раздел9.Колонки.Добавить("СтоимПродСФВ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СтоимПродСФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		
		Раздел9.Колонки.Добавить("СтоимПродСФ20", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СтоимПродСФ18", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СтоимПродСФ10", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СтоимПродСФ0", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СумНДССФ20", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СумНДССФ18", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СумНДССФ10", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		Раздел9.Колонки.Добавить("СтоимПродОсв", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		
		Раздел9.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
		Раздел9.Колонки.Добавить("ДокПдтвОпл", Новый ОписаниеТипов("Массив"));
		
		Раздел9.Колонки.Добавить("СвПокуп", Новый ОписаниеТипов("Массив"));
		Раздел9.Колонки.Добавить("СвПос"); // Тип не задается
		
		Раздел91 = Раздел9.СкопироватьКолонки();
		
		СтруктураПараметров.Вставить("ТаблицаРаздел9", Раздел9);
		СтруктураПараметров.Вставить("ТаблицаРаздел91", Раздел91);
		СтруктураПараметров.Вставить("ТабличныйДокументРаздел91");
		
		ИтогиРаздел9 = Новый Структура(
			"СтПродБезНДС20,СтПродБезНДС18,СтПродБезНДС10,СтПродБезНДС0,
			|СумНДСВсКПр20,СумНДСВсКПр18,СумНДСВсКПр10,СтПродОсвВсКПр");
		ИтогиРаздел91 = Новый Структура(
			"ИтСтПродКПр20,ИтСтПродКПр18,ИтСтПродКПр10,ИтСтПродКПр0,
			|СумНДСИтКПр20,СумНДСИтКПр18,СумНДСИтКПр10,ИтСтПродОсвКПр,
			|СтПродВсП1Р9_20,СтПродВсП1Р9_18,СтПродВсП1Р9_10,СтПродВсП1Р9_0,
			|СумНДСВсП1Р9_20,СумНДСВсП1Р9_18,СумНДСВсП1Р9_10,СтПродОсвП1Р9Вс");
		
		СтруктураПараметров.Вставить("ИтогиРаздел9", ИтогиРаздел9);
		СтруктураПараметров.Вставить("ИтогиРаздел91", ИтогиРаздел91);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПреобразоватьЗаписиКнигиПродаж(
	СтруктураПараметров, 
	НаборЗаписей, 
	ТабличныйДокумент = Неопределено,
	СтрокаИтогПоОрганизации, 
	СтруктураСекций = Неопределено,
	ТаблицаДокумента = Неопределено)
	
	ДополнительнаяИнформация = ПолучитьДополнительнуюИнформациюПоСчетуФактуре(СтруктураПараметров);
		
	Если НЕ СтруктураПараметров.Свойство("ЗаполнениеДекларации") Тогда
		СтруктураПараметров.Вставить("ЗаполнениеДекларации", Ложь);
	ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации И СтруктураПараметров.КонецПериода < '20150101' Тогда
		СтруктураПараметров.ЗаполнениеДекларации = Ложь;
	КонецЕсли;
	
	ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;

	ИтогПоОрганизации = НаборЗаписей.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); // Общий итог по организации
	ИтогПоОрганизации.Следующий();
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СекцияКонтрагент = СтруктураСекций.СекцияКонтрагент;
		СекцияВсегоКонтрагент = СтруктураСекций.СекцияВсегоКонтрагент;
	КонецЕсли;

	Счетчик = 0; // Счетчик строк книги продаж
	СчетчикСтрокТекущегоСегмента = 0; // Используется для сегментирования разделов декларации по НДС
	
	// Запоминаем итоговые суммы по организации.
	ЗаполнитьЗначенияСвойств(СтрокаИтогПоОрганизации, ИтогПоОрганизации);
	
	Если НЕ СтруктураПараметров.ЗаполнениеДокумента
		И НЕ СтруктураПараметров.ЗаполнениеДекларации
		И СтруктураПараметров.ГруппироватьПоКонтрагентам 
		И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
		
		СтрокаИтогПоКонтрагенту = НоваяСтрокаИтоговКнигиПродаж();
		
		ИтогПоКонтрагенту = ИтогПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ИтогПоКонтрагенту.Следующий() Цикл 
			
			// Запоминаем итоговые суммы по контрагенту.
			ЗаполнитьЗначенияСвойств(СтрокаИтогПоКонтрагенту, ИтогПоКонтрагенту);
		
			СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Покупатель;
			ТабличныйДокумент.Вывести(СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
		
			НалоговыеПериоды = ИтогПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока НалоговыеПериоды.Следующий() Цикл
				
				ИтогПоСчетФактураДокумент = НалоговыеПериоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
				Пока ИтогПоСчетФактураДокумент.Следующий() Цикл

					ИтогПоДоговорАванса = ИтогПоСчетФактураДокумент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					Пока ИтогПоДоговорАванса.Следующий() Цикл
						
						ЗаписьКниги = ИтогПоДоговорАванса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
						Пока ЗаписьКниги.Следующий() Цикл
						
							Если ЗаписьКниги.СводныйКорректировочный
								И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4 Тогда

								ЗаписьКнигиДетальная = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
							
								Пока ЗаписьКнигиДетальная.Следующий() Цикл
									Счетчик = Счетчик + 1;
									ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, ПараметрыСтроки, ЗаписьКнигиДетальная, Счетчик,, ДополнительнаяИнформация);
									ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
								КонецЦикла;  // ЗаписьКнигиДетальная.Следующий()
								
							ИначеЕсли ЗаписьКниги.СводныйКомиссионный
								И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4 Тогда
								
								Счетчик = Счетчик + 1;
								ЗаполнитьСтрокуКнигиПродажСводныйКомиссионный(ЗаписьКниги, СтруктураПараметров, ПараметрыСтроки, Счетчик);
								ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
								
							Иначе
								
								ЗаписьКнигиДетальная = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
								ЗаписьКнигиДетальная.Следующий();
								
								Счетчик = Счетчик + 1;
								ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, ПараметрыСтроки, ЗаписьКниги, Счетчик, ЗаписьКнигиДетальная, ДополнительнаяИнформация);
								ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							КонецЕсли;
							
						КонецЦикла; // ЗаписьКниги.Следующий()
					
					КонецЦикла; // ИтогПоДоговорАванса.Следующий()
				
				КонецЦикла; // ИтогПоСчетФактураДокумент.Следующий()
			
			КонецЦикла; // НалоговыеПериоды.Следующий()
			
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СекцияВсегоКонтрагент.Параметры.Заполнить(СтрокаИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СекцияВсегоКонтрагент);
			
		КонецЦикла; // ИтогПоКонтрагенту.Следующий()
		
	Иначе
		
		ТекстРозничнаяПродажа = НСтр("ru = 'Розничная продажа'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
		НалоговыеПериоды = ИтогПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока НалоговыеПериоды.Следующий() Цикл
		
			ИтогПоСчетФактураДокумент = НалоговыеПериоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
			Пока ИтогПоСчетФактураДокумент.Следующий() Цикл
				
				ИтогПоДоговорАванса = ИтогПоСчетФактураДокумент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
				Пока ИтогПоДоговорАванса.Следующий() Цикл
				
					ЗаписьКниги = ИтогПоДоговорАванса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
					Пока ЗаписьКниги.Следующий() Цикл
						
						ЗаписьКнигиДетальная = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
					
						Если (ЗаписьКниги.Покупатель = ТекстРозничнаяПродажа
							И ЗаписьКнигиДетальная.Количество() > 1)
							ИЛИ (ЗаписьКниги.СводныйКорректировочный
								И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4) Тогда
							
							Пока ЗаписьКнигиДетальная.Следующий() Цикл
								
								Если СтруктураПараметров.ЗаполнениеДокумента
									И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда 
									ПараметрыСтроки = ТаблицаДокумента.Добавить();
								КонецЕсли;
								
								Счетчик = Счетчик + 1;
								СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1; 
								ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, ПараметрыСтроки, ЗаписьКнигиДетальная, Счетчик,, ДополнительнаяИнформация);
								
								Если СтруктураПараметров.ЗаполнениеДокумента 
									И СтруктураПараметров.ФорматПоПостановлению735 Тогда
									ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
								ИначеЕсли НЕ СтруктураПараметров.ЗаполнениеДокумента Тогда
									СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
									ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
								КонецЕсли;
								
								Если СтруктураПараметров.ЗаполнениеДекларации 
									И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
									
									// Запишем сегмент
									ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
									
									РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
										СтруктураПараметров.СсылкаНаДекларацию,
										"Раздел9",
										ПерваяСтрокаСегмента,
										СтруктураПараметров.ТаблицаРаздел9);
									
									РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
										СтруктураПараметров.СсылкаНаДекларацию,
										"Раздел9",
										ПерваяСтрокаСегмента,
										ТабличныйДокумент);
									
									// Очистим табличный документ и таблицу
									ТабличныйДокумент.Очистить();
									ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел9);
									ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
									
									СтруктураПараметров.ТаблицаРаздел9.Очистить();
									
									// Обнулим счетчик текущего сегмента
									СчетчикСтрокТекущегоСегмента = 0;
									
								КонецЕсли;
								
							КонецЦикла; // ЗаписьКнигиДетальная.Следующий()
							
						ИначеЕсли ЗаписьКниги.СводныйКомиссионный
							И СтруктураПараметров.ВерсияПостановленияНДС1137 < 4 Тогда
							
							Если СтруктураПараметров.ЗаполнениеДокумента
								И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда 
								ПараметрыСтроки = ТаблицаДокумента.Добавить();
							КонецЕсли;
							
							Счетчик = Счетчик + 1;
							СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1; 
							ЗаполнитьСтрокуКнигиПродажСводныйКомиссионный(ЗаписьКниги, СтруктураПараметров, ПараметрыСтроки, Счетчик);
							Если НЕ СтруктураПараметров.ЗаполнениеДокумента
								ИЛИ (СтруктураПараметров.ЗаполнениеДокумента
								И СтруктураПараметров.ФорматПоПостановлению735) Тогда
								СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
								ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
							КонецЕсли;
							
							Если СтруктураПараметров.ЗаполнениеДекларации 
								И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
								
								// Запишем сегмент
								ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
								
								РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел9",
									ПерваяСтрокаСегмента,
									СтруктураПараметров.ТаблицаРаздел9);
								
								РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел9",
									ПерваяСтрокаСегмента,
									ТабличныйДокумент);
								
								// Очистим табличный документ и таблицу
								ТабличныйДокумент.Очистить();
								ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел9);
								ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
								
								СтруктураПараметров.ТаблицаРаздел9.Очистить();
								
								// Обнулим счетчик текущего сегмента
								СчетчикСтрокТекущегоСегмента = 0;
								
							КонецЕсли;
							
						Иначе
							
							ЗаписьКнигиДетальная.Следующий();
							
							Если СтруктураПараметров.ЗаполнениеДокумента
								И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда 
								ПараметрыСтроки = ТаблицаДокумента.Добавить();
							КонецЕсли;
							
							ВыводитьСтроку = Истина;
							Счетчик = Счетчик + 1;
							СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
							
							ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, ПараметрыСтроки, ЗаписьКниги, Счетчик, ЗаписьКнигиДетальная, ДополнительнаяИнформация, ВыводитьСтроку);
							
							Если ВыводитьСтроку Тогда
								Если СтруктураПараметров.ЗаполнениеДокумента 
									И СтруктураПараметров.ФорматПоПостановлению735 Тогда
									ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
								ИначеЕсли НЕ СтруктураПараметров.ЗаполнениеДокумента Тогда
									СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
									ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
								КонецЕсли;
							КонецЕсли;
							
							Если СтруктураПараметров.ЗаполнениеДекларации 
								И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
								
								// Запишем сегмент
								ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
								
								РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел9",
									ПерваяСтрокаСегмента,
									СтруктураПараметров.ТаблицаРаздел9);
								
								РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
									СтруктураПараметров.СсылкаНаДекларацию,
									"Раздел9",
									ПерваяСтрокаСегмента,
									ТабличныйДокумент);
								
								// Очистим табличный документ и таблицу
								ТабличныйДокумент.Очистить();
								ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел9);
								ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
								
								СтруктураПараметров.ТаблицаРаздел9.Очистить();
								
								// Обнулим счетчик текущего сегмента
								СчетчикСтрокТекущегоСегмента = 0;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла; // ЗаписьКниги.Следующий()
				
				КонецЦикла; // ИтогПоДоговорАванса.Следующий()
			
			КонецЦикла; // ИтогПоСчетФактураДокумент.Следующий()
		
		КонецЦикла; // НалоговыеПериоды.Следующий()
		
		Если СтруктураПараметров.ЗаполнениеДекларации Тогда
			СтруктураПараметров.Вставить("СчетчикСтрокТекущегоСегмента", СчетчикСтрокТекущегоСегмента);
			СтруктураПараметров.Вставить("Счетчик", Счетчик);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПреобразоватьЗаписиДополнительногоЛистаКнигиПродаж(
	СтруктураПараметров,
	ИтогПоПериодамКорректировки,
	ИтогЗаПериод,
	ТабличныйДокумент = Неопределено,
	СтруктураСекций = Неопределено,
	ТаблицаДокумента = Неопределено)
	
	ДополнительнаяИнформация = ПолучитьДополнительнуюИнформациюПоСчетуФактуре(СтруктураПараметров);
	
	Если НЕ СтруктураПараметров.Свойство("ЗаполнениеДекларации") Тогда
		СтруктураПараметров.Вставить("ЗаполнениеДекларации", Ложь);
	ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации И СтруктураПараметров.КонецПериода < '20150101' Тогда
		СтруктураПараметров.ЗаполнениеДекларации = Ложь;
	КонецЕсли;
	
	ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		Счетчик = СтруктураПараметров.СчетчикСтрокДопЛиста;
		СчетчикСтрокТекущегоСегмента = СтруктураПараметров.СчетчикСтрокТекущегоСегмента;
	Иначе
		Счетчик = 0;
		СчетчикСтрокТекущегоСегмента = 0;
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.ЗаполнениеДокумента
		И НЕ СтруктураПараметров.ЗаполнениеДекларации
		И СтруктураПараметров.ГруппироватьПоКонтрагентам 
		И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
		
		ИтогПоКонтрагенту = ИтогПоПериодамКорректировки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ИтогПоКонтрагенту.Следующий() Цикл
			
			СтруктураСекций.СекцияКонтрагент.Параметры.Контрагент = ИтогПоКонтрагенту.Покупатель;
			ТабличныйДокумент.Вывести(СтруктураСекций.СекцияКонтрагент);
			ТабличныйДокумент.НачатьГруппуСтрок();
			
			ЗаписьПоСФ = ИтогПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ЗаписьПоСФ.Следующий() Цикл
				РазделениеПоДоговоруДляАвансов = ЗаписьПоСФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока РазделениеПоДоговоруДляАвансов.Следующий() Цикл
					ЗаписьКниги = РазделениеПоДоговоруДляАвансов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ЗаписьКниги.Следующий() Цикл
						
						ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
						ДетальнаяЗапись.Следующий();
						
						Счетчик = Счетчик + 1;

						ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, ПараметрыСтроки, ЗаписьКниги, Счетчик, ДетальнаяЗапись, ДополнительнаяИнформация);
						
						ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
						
						ИтогЗаПериод.ВсегоПродаж       = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
						ИтогЗаПериод.СуммаБезНДС10     = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
						ИтогЗаПериод.НДС10             = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
						ИтогЗаПериод.СуммаБезНДС18     = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
						ИтогЗаПериод.НДС18             = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
						ИтогЗаПериод.СуммаБезНДС20     = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
						ИтогЗаПериод.НДС20             = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
						ИтогЗаПериод.НДС0              = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
						ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
						
					КонецЦикла; // ЗаписьКниги.Следующий()
				КонецЦикла; // РазделениеПоДоговоруДляАвансов.Следующий()
			КонецЦикла; // ЗаписьПоСФ.Следующий()
			
			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			СтруктураСекций.СекцияВсегоКонтрагент.Параметры.Заполнить(ИтогПоКонтрагенту);
			ТабличныйДокумент.Вывести(СтруктураСекций.СекцияВсегоКонтрагент);
		КонецЦикла; // ИтогПоКонтрагенту.Следующий()
		
	Иначе
		
		ЗаписьПоСФ = ИтогПоПериодамКорректировки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ЗаписьПоСФ.Следующий() Цикл
			РазделениеПоДоговоруДляАвансов = ЗаписьПоСФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока РазделениеПоДоговоруДляАвансов.Следующий() Цикл
				ЗаписьКниги = РазделениеПоДоговоруДляАвансов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ЗаписьКниги.Следующий() Цикл
					
					Если СтруктураПараметров.ЗаполнениеДокумента 
						И НЕ СтруктураПараметров.ФорматПоПостановлению735 Тогда
						ПараметрыСтроки = ТаблицаДокумента.Добавить();
					КонецЕсли;
					
					ДетальнаяЗапись = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
					ДетальнаяЗапись.Следующий();
					
					Счетчик = Счетчик + 1;
					СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
					
					ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, ПараметрыСтроки, ЗаписьКниги, Счетчик, ДетальнаяЗапись, ДополнительнаяИнформация);
					
					Если СтруктураПараметров.ЗаполнениеДокумента 
						И СтруктураПараметров.ФорматПоПостановлению735
						ИЛИ НЕ СтруктураПараметров.ЗаполнениеДокумента Тогда
						СтруктураСекций.СекцияСтрока.Область(1, , СтруктураСекций.СекцияСтрока.ВысотаТаблицы).Имя = "Строка_" + Формат(Счетчик, "ЧГ=");
						ТабличныйДокумент.Вывести(СтруктураСекций.СекцияСтрока);
					КонецЕсли;
					
					Если СтруктураПараметров.ЗаполнениеДекларации 
						И СчетчикСтрокТекущегоСегмента = СтруктураПараметров.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
						
						// Запишем сегмент
						ПерваяСтрокаСегмента = Счетчик - СчетчикСтрокТекущегоСегмента + 1;
						
						РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
							СтруктураПараметров.СсылкаНаДекларацию,
							"Раздел9_Прил1",
							ПерваяСтрокаСегмента,
							СтруктураПараметров.ТаблицаРаздел91);
						
						РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
							СтруктураПараметров.СсылкаНаДекларацию,
							"Раздел9_Прил1",
							ПерваяСтрокаСегмента,
							ТабличныйДокумент);
						
						// Очистим табличный документ и таблицу
						ТабличныйДокумент.Очистить();
						ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел91);
						ТабличныйДокумент.Вывести(СтруктураСекций.СтрокиДляПовтора);
						
						СтруктураПараметров.ТаблицаРаздел91.Очистить();
						
						// Обнулим счетчик текущего сегмента
						СчетчикСтрокТекущегоСегмента = 0;
						
					КонецЕсли;
				
					ИтогЗаПериод.ВсегоПродаж       = ИтогЗаПериод.ВсегоПродаж + ЗаписьКниги.ВсегоПродаж;
					ИтогЗаПериод.СуммаБезНДС10     = ИтогЗаПериод.СуммаБезНДС10 + ЗаписьКниги.СуммаБезНДС10;
					ИтогЗаПериод.НДС10             = ИтогЗаПериод.НДС10 + ЗаписьКниги.НДС10;
					ИтогЗаПериод.СуммаБезНДС18     = ИтогЗаПериод.СуммаБезНДС18 + ЗаписьКниги.СуммаБезНДС18;
					ИтогЗаПериод.НДС18             = ИтогЗаПериод.НДС18 + ЗаписьКниги.НДС18;
					ИтогЗаПериод.НДС0              = ИтогЗаПериод.НДС0 + ЗаписьКниги.НДС0;
					ИтогЗаПериод.СуммаБезНДС20     = ИтогЗаПериод.СуммаБезНДС20 + ЗаписьКниги.СуммаБезНДС20;
					ИтогЗаПериод.НДС20             = ИтогЗаПериод.НДС20 + ЗаписьКниги.НДС20;
					ИтогЗаПериод.СуммаСовсемБезНДС = ИтогЗаПериод.СуммаСовсемБезНДС + ЗаписьКниги.СуммаСовсемБезНДС;
					
				КонецЦикла;
			КонецЦикла; // РазделениеПоДоговоруДляАвансов.Следующий()
		КонецЦикла; // ЗаписьПоСФ.Следующий()
	КонецЕсли;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		СтруктураПараметров.СчетчикСтрокДопЛиста = Счетчик;
		СтруктураПараметров.СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКнигиПродаж(СтруктураПараметров, Секция, ЗаписьКниги, НомерСтроки, ДетальнаяЗапись = Неопределено, ДополнительнаяИнформация, ВыводитьСтроку = Истина)
	
	// Особенность поведения УПП/КА - если указать в счете-фактуре сведения о платежно-расчетном документе, то 
	// она автоматически попадает в книгу продаж (без док. "Формирование записей книги продаж")
	// Проверка позволяет избежать этого.
	Если ЗаписьКниги.ДатаДокументаОплаты <> '00010101' И ЗначениеЗаполнено(ЗаписьКниги.НомерДокументаОплаты) Тогда
		КонтрольнаяСумма = 
		ЗаписьКниги.СуммаБезНДС20 + ЗаписьКниги.НДС20 +
		ЗаписьКниги.СуммаБезНДС18 + ЗаписьКниги.НДС18 +
		ЗаписьКниги.СуммаБезНДС10 + ЗаписьКниги.НДС10 +
		ЗаписьКниги.НДС0 + ЗаписьКниги.СуммаСовсемБезНДС;
		
		Если КонтрольнаяСумма = 0 Тогда
			ВыводитьСтроку = Ложь;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ДетальнаяЗапись <> Неопределено Тогда
		ПараметрыЗаполнения = ДетальнаяЗапись;
	Иначе
		ПараметрыЗаполнения = ЗаписьКниги;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Секция, ПараметрыЗаполнения);
	
	// Универсальная структура для заполнения книги по разным версиям постановления.
	СоставСтроки = Новый Структура;

	// В соответствии с письмом ФНС России от 16.01.2018 N СД-4-3/480@ операции по реализации 
	// товаров п.8 ст.161 НК РФ отражаются с прочерками "-" в графах 13б, 17.
	Если ПараметрыЗаполнения.Событие = Перечисления.СобытияПоНДСПродажи.НалогИсчисляетПокупатель Тогда 
		ПараметрВсегоПродаж = "-";
		ПараметрНДС20       = "-";
		ПараметрНДС18       = "-";
	Иначе
		ПараметрВсегоПродаж = ЗаписьКниги.ВсегоПродаж;
		ПараметрНДС20       = ЗаписьКниги.НДС20;
		ПараметрНДС18       = ЗаписьКниги.НДС18;
	КонецЕсли;
	СоставСтроки.Вставить("ВсегоПродаж",       ПараметрВсегоПродаж);
	СоставСтроки.Вставить("СуммаБезНДС20",     ЗаписьКниги.СуммаБезНДС20);
	СоставСтроки.Вставить("НДС20",             ПараметрНДС20);
	СоставСтроки.Вставить("СуммаБезНДС18",     ЗаписьКниги.СуммаБезНДС18);
	СоставСтроки.Вставить("НДС18",             ПараметрНДС18);
	СоставСтроки.Вставить("СуммаБезНДС10",     ЗаписьКниги.СуммаБезНДС10);
	СоставСтроки.Вставить("НДС10",             ЗаписьКниги.НДС10);
	СоставСтроки.Вставить("НДС0",              ЗаписьКниги.НДС0);
	СоставСтроки.Вставить("СуммаСовсемБезНДС", ЗаписьКниги.СуммаСовсемБезНДС);

	Если ЗначениеЗаполнено(ЗаписьКниги.СчетФактураДокумент) Тогда
		СоставСтроки.Вставить("СчетФактура", ЗаписьКниги.СчетФактураДокумент);
	ИначеЕсли ДетальнаяЗапись <> Неопределено Тогда
		СоставСтроки.Вставить("СчетФактура", ДетальнаяЗапись.СчетФактура);
	КонецЕсли;
		
	ПредставлениеСФ = УчетНДС.ОпределитьДатуИНомерСчетаФактуры(ПараметрыЗаполнения, СтруктураПараметров);
	
	СоставСтроки.Вставить("ДатаНомер",                   ПредставлениеСФ.ДатаНомер);
	СоставСтроки.Вставить("НомерДата",                   ПредставлениеСФ.НомерДата);
	СоставСтроки.Вставить("НомерОтДата",                 ПредставлениеСФ.НомерОтДата);
	
	СоставСтроки.Вставить("НомерДатаИсправления",        ПредставлениеСФ.НомерДатаИсправленный);
	СоставСтроки.Вставить("НомерОтДатаИсправленный",     ПредставлениеСФ.НомерОтДатаИсправленный);
	
	СоставСтроки.Вставить("НомерДатаКорректировки",      ПредставлениеСФ.НомерДатаКорректировочный);
	СоставСтроки.Вставить("НомерОтДатаКорректировочный", ПредставлениеСФ.НомерОтДатаКорректировочный);
	
	СоставСтроки.Вставить("НомерДатаИсправленияКорректировки",
		ПредставлениеСФ.НомерДатаИсправленныйКорректировочный);
	СоставСтроки.Вставить("НомерОтДатаИсправленныйКорректировочный",
		ПредставлениеСФ.НомерОтДатаИсправленныйКорректировочный);
	
	СоставСтроки.Вставить("Ном",         НомерСтроки);
	СоставСтроки.Вставить("КодОперации", ПараметрыЗаполнения.КодВидаОперации);

	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Покупатель) Тогда
		Если ПараметрыЗаполнения.СводныйКомиссионный Тогда
			Секция.Покупатель = "";
			Секция.Графа8 = "";
		Иначе
			СоставСтроки.Вставить("Покупатель",    ПараметрыЗаполнения.Покупатель);
			СоставСтроки.Вставить("ПокупательИНН", ПараметрыЗаполнения.ПокупательИНН);
			СоставСтроки.Вставить("ПокупательКПП", ПараметрыЗаполнения.ПокупательКПП);
			СоставСтроки.Вставить("Графа8", Строка(ПараметрыЗаполнения.ПокупательИНН) 
				+ ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПокупательКПП), "/" + Строка(ПараметрыЗаполнения.ПокупательКПП), ""));
		КонецЕсли;
		СоставСтроки.Вставить("Посредник", ПараметрыЗаполнения.Посредник);
		СоставСтроки.Вставить("ПосредникИНН_КПП", "" + Строка(ПараметрыЗаполнения.ПосредникИНН) 
			+ ?(ЗначениеЗаполнено(ПараметрыЗаполнения.ПосредникКПП), "/" + Строка(ПараметрыЗаполнения.ПосредникКПП), ""));
	КонецЕсли;
	
	СоставСтроки.Вставить("Валюта", 
		?(ЗначениеЗаполнено(ПараметрыЗаполнения.Валюта),
		"" + ПараметрыЗаполнения.Валюта + ", " + ПараметрыЗаполнения.ВалютаКод,  ""));
	СоставСтроки.Вставить("ВсегоПродажВВалюте", 
		?(ЗначениеЗаполнено(ПараметрыЗаполнения.Валюта), ПараметрыЗаполнения.ВсегоПродажВВалюте, ""));
	
	МассивДокПдтвОпл = Новый Массив(); // Массив документов оплаты НДС для декларации с 1 кв 2015 года
	
	ТекстОплаты = "";
	СписокДатОплат = Новый СписокЗначений();
	ТекстОплатыСНомером = "";
	ТекстНомерОтДатаОплаты = "";
	СписокНомеровИДатОплат = Новый СписокЗначений();
	
	СчетаФактуры = Новый Массив();
	
	Если ДетальнаяЗапись = Неопределено Тогда 
		
		Если ЗначениеЗаполнено(ЗаписьКниги.ДатаОплаты) Тогда
			Если СписокДатОплат.НайтиПоЗначению(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено Тогда
				ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", "," + Символы.ПС) 
					+ Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy");
				СписокДатОплат.Добавить(Формат(ЗаписьКниги.ДатаОплаты, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЗаписьКниги.НомерДокументаОплаты) Тогда
			
			НомерДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1;%2'"), 
				ЗаписьКниги.НомерДокументаОплаты, Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
			НомерОтДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"), 
				ЗаписьКниги.НомерДокументаОплаты, Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
			
			Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено Тогда
				
				ТекстОплатыСНомером = ТекстОплатыСНомером 
					+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", "," + Символы.ПС) + НомерДатаОплаты;
				ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
					+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";" + Символы.ПС) + НомерОтДатаОплаты;
				СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
				
				Если СтруктураПараметров.ЗаполнениеДекларации Тогда
					СтруктураДокПдтвОпл = Новый Структура("НомДокПдтвОпл,ДатаДокПдтвОпл");
					СтруктураДокПдтвОпл.НомДокПдтвОпл = ЗаписьКниги.НомерДокументаОплаты;
				Иначе
					СтруктураДокПдтвОпл = Новый Структура("НомерДокПдтвОпл,ДатаДокПдтвОпл");
					СтруктураДокПдтвОпл.НомерДокПдтвОпл = ЗаписьКниги.НомерДокументаОплаты;
				КонецЕсли;
				СтруктураДокПдтвОпл.ДатаДокПдтвОпл = Формат(ЗаписьКниги.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
				МассивДокПдтвОпл.Добавить(СтруктураДокПдтвОпл);
				
			КонецЕсли;
		КонецЕсли;
		
		СчетаФактуры.Добавить(ЗаписьКниги.СчетФактура);
		
	Иначе
		
		// Получаем новую выборку для обхода, ДетальнуюЗапись не используем, она всегда спозиционирована на первую строку.
		СтрокаЗаписи = ЗаписьКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
		Пока СтрокаЗаписи.Следующий() Цикл
			
			Если ЗначениеЗаполнено(СтрокаЗаписи.ДатаОплаты) Тогда
				Если СписокДатОплат.НайтиПоЗначению(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy")) = Неопределено Тогда
					ТекстОплаты = ТекстОплаты + ?(НЕ ЗначениеЗаполнено(ТекстОплаты), "", "," + Символы.ПС) 
						+ Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy");
					СписокДатОплат.Добавить(Формат(СтрокаЗаписи.ДатаОплаты, "ДФ=dd.MM.yyyy"));
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаЗаписи.НомерДокументаОплаты) Тогда
				
				НомерДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1;%2'"), 
					СтрокаЗаписи.НомерДокументаОплаты, Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
				НомерОтДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"), 
					СтрокаЗаписи.НомерДокументаОплаты, Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
					
				Если СписокНомеровИДатОплат.НайтиПоЗначению(НомерДатаОплаты) = Неопределено Тогда
					
					ТекстОплатыСНомером = ТекстОплатыСНомером 
						+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", "," + Символы.ПС) + НомерДатаОплаты;
					ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
						+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";" + Символы.ПС) + НомерОтДатаОплаты;
					СписокНомеровИДатОплат.Добавить(НомерДатаОплаты);
					
					Если СтруктураПараметров.ЗаполнениеДекларации Тогда
						СтруктураДокПдтвОпл = Новый Структура("НомДокПдтвОпл,ДатаДокПдтвОпл");
						СтруктураДокПдтвОпл.НомДокПдтвОпл = СтрокаЗаписи.НомерДокументаОплаты;
					Иначе
						СтруктураДокПдтвОпл = Новый Структура("НомерДокПдтвОпл,ДатаДокПдтвОпл");
						СтруктураДокПдтвОпл.НомерДокПдтвОпл = СтрокаЗаписи.НомерДокументаОплаты;
					КонецЕсли;
					СтруктураДокПдтвОпл.ДатаДокПдтвОпл = Формат(СтрокаЗаписи.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
					МассивДокПдтвОпл.Добавить(СтруктураДокПдтвОпл);

				КонецЕсли;
			КонецЕсли;
			
			СчетаФактуры.Добавить(СтрокаЗаписи.СчетФактура);
			
		КонецЦикла; // СтрокаЗаписи.Следующий()
		
	КонецЕсли;
	
	СоставСтроки.Вставить("НомерДатаОплаты",   ТекстОплатыСНомером);
	СоставСтроки.Вставить("НомерОтДатаОплаты", ТекстНомерОтДатаОплаты);
	СоставСтроки.Вставить("ДатаОплаты",        ТекстОплаты);
	
	// Код вида товара ТНВЭД
	СчетаФактуры = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(СчетаФактуры);
	СтрокаКодВидаТовара = "";
	Для Каждого СчетФактура Из СчетаФактуры Цикл
		Если ЗначениеЗаполнено(СчетФактура) Тогда
			СтрокаДополнительнойИнформации = ДополнительнаяИнформация.Найти(СчетФактура, "Ссылка"); 
		Иначе
			СтрокаДополнительнойИнформации = Неопределено;
		КонецЕсли;
		Если СтрокаДополнительнойИнформации <> Неопределено Тогда
			СоставСтроки.Вставить("КодВидаТовара", СтрокаДополнительнойИнформации.ТНВЭД);
			СтрокаКодВидаТовара = СтрокаДополнительнойИнформации.ТНВЭД;
		Иначе
			СоставСтроки.Вставить("КодВидаТовара", "");
		КонецЕсли;
	КонецЦикла;
	
	МассивКодВидаТовара = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаКодВидаТовара, ";");
	
	ЗаполнитьЗначенияСвойств(Секция, СоставСтроки);
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		СоставСтроки.Вставить("НомерПор", НомерСтроки);
		
		СоставСтроки.Вставить("НомСчФПрод",   ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФПрод",  ПредставлениеСФ.Дата);
		
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		
		СоставСтроки.Вставить("НомКСчФПрод",  ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФПрод", ПредставлениеСФ.ДатаКорректировочный);
		
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);
		
		СоставСтроки.Вставить("ОКВ", Строка(ПараметрыЗаполнения.ВалютаКод));
		
		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрыЗаполнения.КодВидаОперации, ";");

		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);
		
		СоставСтроки.Вставить("ДокПдтвОпл", МассивДокПдтвОпл);
		
		// Сведения о покупателе
		
		МассивСвПок = Новый Массив();
		
		Если СоставСтроки.Свойство("ПокупательИНН")
			И НЕ ПустаяСтрока(СоставСтроки.ПокупательИНН) Тогда
			МассивСвПок.Добавить(
				УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПокупательИНН, ПараметрыЗаполнения.ПокупательКПП));
		КонецЕсли;
		
		СоставСтроки.Вставить("СвПокуп", МассивСвПок);
		
		// Сведения о посреднике
		
		Если СоставСтроки.Свойство("Посредник")
			И НЕ ПустаяСтрока(ПараметрыЗаполнения.ПосредникИНН) Тогда
			СоставСтроки.Вставить("СвПос", 
				УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПосредникИНН, ПараметрыЗаполнения.ПосредникКПП));
		КонецЕсли;
		
		СоставСтроки.Вставить("СтоимПродСФВ",  ПараметрыЗаполнения.ВсегоПродажВВалюте);
		СоставСтроки.Вставить("СтоимПродСФ",   ЗаписьКниги.ВсегоПродаж);
		СоставСтроки.Вставить("СтоимПродСФ20", ЗаписьКниги.СуммаБезНДС20);
		СоставСтроки.Вставить("СтоимПродСФ18", ЗаписьКниги.СуммаБезНДС18);
		СоставСтроки.Вставить("СтоимПродСФ10", ЗаписьКниги.СуммаБезНДС10);
		СоставСтроки.Вставить("СтоимПродСФ0",  ЗаписьКниги.НДС0);
		СоставСтроки.Вставить("СумНДССФ20",    ЗаписьКниги.НДС20);
		СоставСтроки.Вставить("СумНДССФ18",    ЗаписьКниги.НДС18);
		СоставСтроки.Вставить("СумНДССФ10",    ЗаписьКниги.НДС10);
		СоставСтроки.Вставить("СтоимПродОсв",  ЗаписьКниги.СуммаСовсемБезНДС);
		
		Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел91.Добавить();
		Иначе
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел9.Добавить();
		КонецЕсли;
		
		Если СтруктураПараметров.ПравилаЗаполнения = "2019Кв1" Тогда
			СоставСтроки.Вставить("КодВидТовар", МассивКодВидаТовара);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
		
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		СоставСтроки.Вставить("НомПП",        НомерСтроки);
		СоставСтроки.Вставить("НомерСчФ",     ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФ",      ПредставлениеСФ.Дата);
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		СоставСтроки.Вставить("НомерКСчФ",    ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФ",     ПредставлениеСФ.ДатаКорректировочный);
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);

		СоставСтроки.Вставить("КодОКВ", Строка(ПараметрыЗаполнения.ВалютаКод));
		
		СоставСтроки.Вставить("ВидТов", МассивКодВидаТовара);
		
		// Сведения о покупателе
		
		СтруктураРеквизитовКонтрагента = Новый Структура;
		
		Если СоставСтроки.Свойство("ПокупательИНН")
			И НЕ ПустаяСтрока(СоставСтроки.ПокупательИНН) Тогда
			
			СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПокупательИНН, ПараметрыЗаполнения.ПокупательКПП);
			
			Если СтруктураРеквизитовКонтрагента.Свойство("ИННФЛ") Тогда
				СоставСтроки.Вставить("ИННФЛ", СтруктураРеквизитовКонтрагента.ИННФЛ);
			Иначе
				СоставСтроки.Вставить("ИННЮЛ", СтруктураРеквизитовКонтрагента.ИННЮЛ);
				СоставСтроки.Вставить("КПП", СтруктураРеквизитовКонтрагента.КПП);
			КонецЕсли;
		КонецЕсли;
		
		СоставСтроки.Вставить("НаимПок", ПараметрыЗаполнения.Покупатель);
		
		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПараметрыЗаполнения.КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);
		
		// Сведения о посреднике
		
		Если СоставСтроки.Свойство("Посредник")
			И НЕ ПустаяСтрока(ПараметрыЗаполнения.ПосредникИНН) Тогда
			СоставСтроки.Вставить("СвПосредн", 
				УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ПараметрыЗаполнения.ПосредникИНН, ПараметрыЗаполнения.ПосредникКПП, СоставСтроки.Посредник));
		КонецЕсли;
		
		СоставСтроки.Вставить("СтТовУчНалВсего",    ПараметрыЗаполнения.ВсегоПродажВВалюте);
		СоставСтроки.Вставить("СтТовУчНалРубКоп",   ЗаписьКниги.ВсегоПродаж);
		СоставСтроки.Вставить("СтТовРубКоп20",      ЗаписьКниги.СуммаБезНДС20);
		СоставСтроки.Вставить("СтТовРубКоп18",      ЗаписьКниги.СуммаБезНДС18);
		СоставСтроки.Вставить("СтТовРубКоп10",      ЗаписьКниги.СуммаБезНДС10);
		СоставСтроки.Вставить("СтТовРубКоп0",       ЗаписьКниги.НДС0);
		СоставСтроки.Вставить("СумНДСРубКоп20",     ЗаписьКниги.НДС20);
		СоставСтроки.Вставить("СумНДСРубКоп18",     ЗаписьКниги.НДС18);
		СоставСтроки.Вставить("СумНДСРубКоп10",     ЗаписьКниги.НДС10);
		СоставСтроки.Вставить("СтПродОсвНДСРубКоп", ЗаписьКниги.СуммаСовсемБезНДС);
		
		СоставСтроки.Вставить("СвДокПдтвОпл", МассивДокПдтвОпл);
		
		СтрокаРаздела = СтруктураПараметров.Записи.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

// Не используется начиная с вступления в силу постановление № 981 (с 1 октября 2017 года).
Процедура ЗаполнитьСтрокуКнигиПродажСводныйКомиссионный(ЗаписиКниги, СтруктураПараметров, Секция, НомерСтроки)
	
	ЗаписьКнигиДетальная = ЗаписиКниги.Выбрать(ОбходРезультатаЗапроса.Прямой);

	КоличествоЗаписей  = ЗаписьКнигиДетальная.Количество();
	
	ТекущаяЗапись      = 0;
	ВсегоПродаж        = 0;
	ВсегоПродажВВалюте = 0;
	СуммаБезНДС18      = 0;
	НДС18              = 0;
	СуммаБезНДС10      = 0;
	НДС10              = 0;
	НДС0               = 0;
	СуммаСовсемБезНДС  = 0;
	Покупатель         = "";
	Графа8             = "";
	ВалютаКод		   = "";
	КодВидаОперации	   = "";
	
	ТекстОплатыСНомером = "";
	ТекстНомерОтДатаОплаты = "";
	
	МассивДокПдтвОпл = Новый Массив(); // Массив документов оплаты НДС для декларации с 1 кв 2015 года
	МассивСвПок = Новый Массив(); // Сведения о покупателе
	
	Пока ЗаписьКнигиДетальная.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(Секция, ЗаписьКнигиДетальная);
		
		ТекущаяЗапись = ТекущаяЗапись + 1;
		
		Если ЗначениеЗаполнено(ЗаписьКнигиДетальная.НомерДокументаОплаты) Тогда
			
			НомерДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1;%2'"), 
				ЗаписьКнигиДетальная.НомерДокументаОплаты, Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
			НомерОтДатаОплаты = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"), 
				ЗаписьКнигиДетальная.НомерДокументаОплаты, Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy"));
				
			ТекстОплатыСНомером = ТекстОплатыСНомером 
					+ ?(НЕ ЗначениеЗаполнено(ТекстОплатыСНомером), "", "," + Символы.ПС) + НомерДатаОплаты;
			ТекстНомерОтДатаОплаты = ТекстНомерОтДатаОплаты 
					+ ?(НЕ ЗначениеЗаполнено(ТекстНомерОтДатаОплаты), "", ";" + Символы.ПС) + НомерОтДатаОплаты;
				
			СтруктураДокПдтвОпл = Новый Структура("НомДокПдтвОпл,ДатаДокПдтвОпл");
			СтруктураДокПдтвОпл.НомДокПдтвОпл = ЗаписьКнигиДетальная.НомерДокументаОплаты;
			СтруктураДокПдтвОпл.ДатаДокПдтвОпл = Формат(ЗаписьКнигиДетальная.ДатаДокументаОплаты, "ДФ=dd.MM.yyyy");
			МассивДокПдтвОпл.Добавить(СтруктураДокПдтвОпл);
				
		Иначе
			
			ВсегоПродаж         = ВсегоПродаж + ЗаписьКнигиДетальная.ВсегоПродаж;
			ВсегоПродажВВалюте  = ВсегоПродажВВалюте 
				+ ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.Валюта), ЗаписьКнигиДетальная.ВсегоПродажВВалюте, 0);
				
			СуммаБезНДС18       = СуммаБезНДС18 + ЗаписьКнигиДетальная.СуммаБезНДС18;
			НДС18               = НДС18 + ЗаписьКнигиДетальная.НДС18;
			СуммаБезНДС10       = СуммаБезНДС10 + ЗаписьКнигиДетальная.СуммаБезНДС10;
			НДС10               = НДС10 + ЗаписьКнигиДетальная.НДС10;
			НДС0                = НДС0 + ЗаписьКнигиДетальная.НДС0;
			СуммаСовсемБезНДС   = СуммаСовсемБезНДС + ЗаписьКнигиДетальная.СуммаСовсемБезНДС;
			
			Покупатель = Покупатель + ?(Покупатель = "", "", ";" + Символы.ПС) + ЗаписьКнигиДетальная.Покупатель;
				
			Графа8 = Графа8 + ?(Графа8 = "", "", ";" + Символы.ПС) 
				+ ЗаписьКнигиДетальная.ПокупательИНН 
				+ ?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.ПокупательКПП), "/" + ЗаписьКнигиДетальная.ПокупательКПП, "");
			
			Если НЕ ПустаяСтрока(ЗаписьКнигиДетальная.ПокупательИНН) Тогда
				МассивСвПок.Добавить(
					УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ЗаписьКнигиДетальная.ПокупательИНН, ЗаписьКнигиДетальная.ПокупательКПП));
			КонецЕсли;

		КонецЕсли;
		
		Если ТекущаяЗапись = КоличествоЗаписей Тогда
			
			СоставСтроки = Новый Структура;
			
			ПредставлениеСФ = УчетНДС.ОпределитьДатуИНомерСчетаФактуры(ЗаписьКнигиДетальная, СтруктураПараметров);
	
			СоставСтроки.Вставить("ДатаНомер",                   ПредставлениеСФ.ДатаНомер);
			СоставСтроки.Вставить("НомерДата",                   ПредставлениеСФ.НомерДата);
			СоставСтроки.Вставить("НомерОтДата",                 ПредставлениеСФ.НомерОтДата);
			
			СоставСтроки.Вставить("НомерДатаИсправления",        ПредставлениеСФ.НомерДатаИсправленный);
			СоставСтроки.Вставить("НомерОтДатаИсправленный",     ПредставлениеСФ.НомерОтДатаИсправленный);
			
			СоставСтроки.Вставить("НомерДатаКорректировки",      ПредставлениеСФ.НомерДатаКорректировочный);
			СоставСтроки.Вставить("НомерОтДатаКорректировочный", ПредставлениеСФ.НомерОтДатаКорректировочный);
			
			СоставСтроки.Вставить("НомерДатаИсправленияКорректировки",
				ПредставлениеСФ.НомерДатаИсправленныйКорректировочный);
			СоставСтроки.Вставить("НомерОтДатаИсправленныйКорректировочный",
				ПредставлениеСФ.НомерОтДатаИсправленныйКорректировочный);
			
			СоставСтроки.Вставить("Ном",           НомерСтроки);
			СоставСтроки.Вставить("КодОперации",   ЗаписьКнигиДетальная.КодВидаОперации);
			СоставСтроки.Вставить("Покупатель",    Покупатель);
			СоставСтроки.Вставить("ПокупательИНН", ЗаписьКнигиДетальная.ПокупательИНН);
			СоставСтроки.Вставить("ПокупательКПП", ЗаписьКнигиДетальная.ПокупательКПП);
			СоставСтроки.Вставить("Графа8",        Графа8);
			
			// Сведения о посреднике
			
			СоставСтроки.Вставить("Посредник",     ЗаписьКнигиДетальная.Посредник);
			СоставСтроки.Вставить("ПосредникИНН_КПП","" + ЗаписьКнигиДетальная.ПосредникИНН + 
				?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.ПосредникКПП), "/" + ЗаписьКнигиДетальная.ПосредникКПП, ""));
				
			Если НЕ ПустаяСтрока(ЗаписьКнигиДетальная.ПосредникИНН) Тогда
				СоставСтроки.Вставить("СвПос", 
					УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ЗаписьКнигиДетальная.ПосредникИНН, ЗаписьКнигиДетальная.ПосредникКПП));
			КонецЕсли;
	
			СоставСтроки.Вставить("Валюта",
				?(ЗначениеЗаполнено(ЗаписьКнигиДетальная.Валюта),
				"" + ЗаписьКнигиДетальная.Валюта + ", " + ЗаписьКнигиДетальная.ВалютаКод,  ""));
				
			СоставСтроки.Вставить("ВсегоПродажВВалюте",  ВсегоПродажВВалюте);
			
		КонецЕсли;
		
		ВалютаКод = ЗаписьКнигиДетальная.ВалютаКод;
		КодВидаОперации = ЗаписьКнигиДетальная.КодВидаОперации;
		
	КонецЦикла;
	
	СоставСтроки.Вставить("ВсегоПродаж",        ВсегоПродаж);
	СоставСтроки.Вставить("ВсегоПродажВВалюте", ВсегоПродажВВалюте);
	СоставСтроки.Вставить("СуммаБезНДС18",      СуммаБезНДС18);
	СоставСтроки.Вставить("НДС18",              НДС18);
	СоставСтроки.Вставить("СуммаБезНДС10",      СуммаБезНДС10);
	СоставСтроки.Вставить("НДС10",              НДС10);
	СоставСтроки.Вставить("НДС0",               НДС0);
	СоставСтроки.Вставить("СуммаСовсемБезНДС",  СуммаСовсемБезНДС);
	СоставСтроки.Вставить("Контрагент",         Покупатель);
	СоставСтроки.Вставить("НомерДатаОплаты",    ТекстОплатыСНомером);
	СоставСтроки.Вставить("НомерОтДатаОплаты",  ТекстНомерОтДатаОплаты);

	ЗаполнитьЗначенияСвойств(Секция, СоставСтроки);

	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		СоставСтроки.Вставить("НомерПор", НомерСтроки);
		
		СоставСтроки.Вставить("НомСчФПрод",   ПредставлениеСФ.Номер);
		СоставСтроки.Вставить("ДатаСчФПрод",  ПредставлениеСФ.Дата);
		
		СоставСтроки.Вставить("НомИспрСчФ",   ПредставлениеСФ.НомерИсправленный);
		СоставСтроки.Вставить("ДатаИспрСчФ",  ПредставлениеСФ.ДатаИсправленный);
		
		СоставСтроки.Вставить("НомКСчФПрод",  ПредставлениеСФ.НомерКорректировочный);
		СоставСтроки.Вставить("ДатаКСчФПрод", ПредставлениеСФ.ДатаКорректировочный);
		
		СоставСтроки.Вставить("НомИспрКСчФ",  ПредставлениеСФ.НомерИсправленныйКорректировочный);
		СоставСтроки.Вставить("ДатаИспрКСчФ", ПредставлениеСФ.ДатаИсправленныйКорректировочный);
		
		СоставСтроки.Вставить("ОКВ", Строка(ВалютаКод));
		
		МассивКодВидОпер = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КодВидаОперации, ";");
		СоставСтроки.Вставить("КодВидОпер", МассивКодВидОпер);
		
		СоставСтроки.Вставить("ДокПдтвОпл", МассивДокПдтвОпл);
		СоставСтроки.Вставить("СвПокуп", МассивСвПок);
		
		СоставСтроки.Вставить("СтоимПродСФВ",  ВсегоПродажВВалюте);
		СоставСтроки.Вставить("СтоимПродСФ",   ВсегоПродаж);
		СоставСтроки.Вставить("СтоимПродСФ20", 0);
		СоставСтроки.Вставить("СтоимПродСФ18", СуммаБезНДС18);
		СоставСтроки.Вставить("СтоимПродСФ10", СуммаБезНДС10);
		СоставСтроки.Вставить("СтоимПродСФ0",  НДС0);
		СоставСтроки.Вставить("СумНДССФ20",    0);
		СоставСтроки.Вставить("СумНДССФ18",    НДС18);
		СоставСтроки.Вставить("СумНДССФ10",    НДС10);
		СоставСтроки.Вставить("СтоимПродОсв",  СуммаСовсемБезНДС);
		
		Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел91.Добавить();
		Иначе
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел9.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКнигиПродаж(Запрос, СтруктураПараметров)
	
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(СтруктураПараметров.КонецПериода));
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.СписокОрганизаций);
	Запрос.УстановитьПараметр("ОтбиратьПоКонтрагенту", 
		НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И СтруктураПараметров.ОтбиратьПоКонтрагенту);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора", СтруктураПараметров.КонтрагентДляОтбора);
	Запрос.УстановитьПараметр("ВыводитьПродавцовПоАвансам", СтруктураПараметров.ВыводитьПродавцовПоАвансам);
	Запрос.УстановитьПараметр("ВалютаРегУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("НаименованиеВалютыРубль", НСтр("ru='руб.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	
	ДатаПроверкиПараметровУчета = '00010101';
	ЗаполнениеДокументовОтчетности = СтруктураПараметров.ЗаполнениеДокумента ИЛИ СтруктураПараметров.ЗаполнениеДекларации;
	
	Если ЗаполнениеДокументовОтчетности И СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
		Запрос.УстановитьПараметр("НачалоНалоговогоПериода", СтруктураПараметров.НачалоНалоговогоПериода); 
		Запрос.УстановитьПараметр("КонецНалоговогоПериода", КонецДня(СтруктураПараметров.КонецНалоговогоПериода));
		ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецНалоговогоПериода;
	Иначе
		ДатаПроверкиПараметровУчета = СтруктураПараметров.КонецПериода;
	КонецЕсли;
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(
		ДатаПроверкиПараметровУчета, Ложь, СтруктураПараметров.Организация, "регл");
	
	ПрименяетсяОсвобождениеОтУплатыНДС = УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС;
	ПлательщикНДС = УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
	
	СтруктураПараметров.Вставить("ПрименяетсяОсвобождениеОтУплатыНДС",
		ПрименяетсяОсвобождениеОтУплатыНДС);
	СтруктураПараметров.Вставить("ПлательщикНДС",
		ПлательщикНДС);
	
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(ДатаПроверкиПараметровУчета);

	МассивСтавокНДС = Перечисления.СтавкиНДС.СтавкиПоОперациямОтражаемымВКнигеПродаж(ВерсияПостановленияНДС1137);
	
	// Начиная с отчетности за 4 квартал 2017 года (в соответствии с постановлением Правительства от 19.08.2017 №981)
	// при отражении начисления НДС по единому корректировочному счету-фактуре при уменьшении количества и/или стоимости 
	// приобретенных ранее товаров в книге продаж в качестве покупателя указывается продавец по счету-фактуре.
	Запрос.УстановитьПараметр("ПравилаПостановления981", СтруктураПараметров.ВерсияПостановленияНДС1137 >= 4);
	Запрос.УстановитьПараметр("МассивСтавокНДС",         МассивСтавокНДС);
	
	СтавкиНДС20 = Новый Массив();
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20);
	СтавкиНДС20.Добавить(Перечисления.СтавкиНДС.НДС20_120);
	
	СтавкиНДС18 = Новый Массив();
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18);
	СтавкиНДС18.Добавить(Перечисления.СтавкиНДС.НДС18_118);
	
	СтавкиНДС10 = Новый Массив();
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10);
	СтавкиНДС10.Добавить(Перечисления.СтавкиНДС.НДС10_110);
	
	СтавкаНДС0 = Перечисления.СтавкиНДС.НДС0;
	СтавкаБезНДС = Перечисления.СтавкиНДС.БезНДС;
	
	Запрос.УстановитьПараметр("СтавкиНДС20",  СтавкиНДС20);
	Запрос.УстановитьПараметр("СтавкиНДС18",  СтавкиНДС18);
	Запрос.УстановитьПараметр("СтавкиНДС10",  СтавкиНДС10);
	Запрос.УстановитьПараметр("СтавкаНДС0",   СтавкаНДС0);
	Запрос.УстановитьПараметр("СтавкаБезНДС", СтавкаБезНДС);
	
	ВидыЦенностей_СобственныеСФ = Новый Массив;
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.ВнутреннееПотребление);
	ВидыЦенностей_СобственныеСФ.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ВидыЦенностей_СобственныеСФ,
		Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгент(Ложь));
	Запрос.УстановитьПараметр("ВидыЦенностей_СобственныеСФ", ВидыЦенностей_СобственныеСФ);
	
	ВидыЦенностей_Аванс = Новый Массив;
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	ВидыЦенностей_Аванс.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_Аванс", ВидыЦенностей_Аванс);

	ВидыЦенностей_СуммоваяРазница = Новый Массив;
	ВидыЦенностей_СуммоваяРазница.Добавить(Перечисления.ВидыЦенностей.СуммыСвязанныеСРасчетамиПоОплате);
	Запрос.УстановитьПараметр("ВидыЦенностей_СуммоваяРазница", ВидыЦенностей_СуммоваяРазница);
	
	Запрос.УстановитьПараметр("ВидыЦенностей_НалоговыйАгент", 
		Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгент());
	
	МассивДокументовИсправлений = Новый Массив;
	МассивДокументовИсправлений.Добавить(Неопределено);
	ТипыДокументовИсправлений = Метаданные.РегистрыНакопления.НДСЗаписиКнигиПродаж.Измерения.ИсправленныйСчетФактура.Тип;

	Для Каждого МетаданныеДокумента Из Метаданные.Документы Цикл
		
		Если ТипыДокументовИсправлений.СодержитТип(Тип("ДокументСсылка." + МетаданныеДокумента.Имя)) Тогда
			МассивДокументовИсправлений.Добавить(Документы[МетаданныеДокумента.Имя].ПустаяСсылка());
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ПустыеДокументыИсправления", МассивДокументовИсправлений);
	Запрос.УстановитьПараметр("ПКО_РозничнаяВыручка", Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка);
	Запрос.УстановитьПараметр("ТекстРозничнаяПродажа",
		НСтр("ru = 'Розничная продажа'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));

КонецПроцедуры

Функция ДополнительноеУсловиеЗапроса(СтруктураПараметров, ЗаписьДополнительногоЛиста = Ложь, ИмяТаблицы = "")
	
	Если СтруктураПараметров.ПрименяетсяОсвобождениеОтУплатыНДС Тогда
		// В книге продаж только реализации "без НДС" кроме налогового агента
		// или начисления в качестве налогового агента по облагаемой ставке (симметрическая разность).
		// Начисления по ставке 18% и 10% в разделе 12.
		СтрокаУсловия = 
		"([ИмяТаблицы]СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) И НЕ [ИмяТаблицы]ВидЦенности В (&ВидыЦенностей_НалоговыйАгент)
		|ИЛИ [ИмяТаблицы]СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) И [ИмяТаблицы]ВидЦенности В (&ВидыЦенностей_НалоговыйАгент))";
	ИначеЕсли НЕ СтруктураПараметров.ПлательщикНДС Тогда
		// Только начисления в качестве налогового агента.
		// Начисления по ставке 18% и 10% в разделе 12.
		СтрокаУсловия = "[ИмяТаблицы]ВидЦенности В (&ВидыЦенностей_НалоговыйАгент) И [ИмяТаблицы]СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)";
	Иначе
		// Только начисления по ставкам 18% и 10%, включая начисления в качестве налоговог агента.
		// Операции без НДС отражаются только до даты действия постановления 735.
		СтрокаУсловия = "[ИмяТаблицы]СтавкаНДС В (&МассивСтавокНДС)";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяТаблицы) Тогда
		СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "[ИмяТаблицы]", ИмяТаблицы + ".");
	Иначе
		СтрокаУсловия = СтрЗаменить(СтрокаУсловия, "[ИмяТаблицы]", "");
	КонецЕсли;
	
	Если ЗаписьДополнительногоЛиста Тогда
		ШаблонУсловия = "(%1 ИЛИ НДСЗаписиКнигиПродаж.КорректируемыйПериод <= ДАТАВРЕМЯ(2014, 10, 1))";
		СтрокаУсловия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонУсловия, СтрокаУсловия);
	КонецЕсли;
	
	Возврат СтрокаУсловия;
	
КонецФункции

Функция ЗаписиКнигиПродаж(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УстановитьПараметрыЗапросаКнигиПродаж(Запрос, СтруктураПараметров);

	ТекстЗапроса = ТекстЗапросаЗаписиРегистраНДСПродажи(СтруктураПараметров);
	
	Если СтруктураПараметров.ВерсияПостановленияНДС1137 >= 4 Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРеквизитыСчетовФактурПостановление981();
	Иначе
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРеквизитыСчетовФактурПостановление735();
	КонецЕсли;

	Запрос.Текст = ТекстЗапроса + ТекстЗапросаПодготовленныеЗаписиКнигиПродаж(СтруктураПараметров);
	
	Запрос.Выполнить();
	
	Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
		Запрос.Текст = ТекстЗапросаДополнительныйЛистКнигиПродаж(СтруктураПараметров);
	Иначе
		Запрос.Текст = ТекстЗапросаКнигаПродаж(СтруктураПараметров);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить();
	
	СтруктураПараметров.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	
	Возврат Выборка;
	
КонецФункции

Функция ТекстЗапросаЗаписиРегистраНДСПродажи(СтруктураПараметров)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ, КВАРТАЛ) КАК НалоговыйПериод,
	|	КОНЕЦПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ, КВАРТАЛ) КАК КонецНалоговогоПериода,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НЕ &ВыводитьПродавцовПоАвансам
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|				ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.Покупатель
	|	КОНЕЦ КАК Контрагент,
	|	НДСЗаписиКнигиПродаж.Покупатель КАК КонтрагентПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура
	|	КОНЕЦ КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие КАК Событие,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДатаСобытия
	|	КОНЕЦ КАК ДатаСобытия,
	|	СУММА(НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС) КАК ВсегоПродаж,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС20)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС20,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС18)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС18,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезНДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС В (&СтавкиНДС10)
	|				ТОГДА НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС10,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = &СтавкаНДС0
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДС0,
	|	СУММА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.СтавкаНДС = &СтавкаБезНДС
	|				ТОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаСовсемБезНДС,
	|	НДСЗаписиКнигиПродаж.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаАванс,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаСуммовуюРазницу,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПродаж.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДС_Аванс,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент))
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПродаж.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК ДоговорАванса,
	|	НДСЗаписиКнигиПродаж.СчетФактура.Дата КАК СчетФактураДата,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|				И (НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|					ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|					ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.СчетФактураВыданный)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Исправление,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации КАК КодВидаОперации
	|ПОМЕСТИТЬ ЗаписиКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НДСЗаписиКнигиПродаж.Организация В(&Организация)
	|	И НЕ НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|	И НДСЗаписиКнигиПродаж.Активность
	|	И &ДополнительноеУсловие
	|	И &ОтборПоКонтрагенту
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.Период,
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ, КВАРТАЛ),
	|	КОНЕЦПЕРИОДА(ВЫБОР
	|			КОГДА НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
	|				ТОГДА НДСЗаписиКнигиПродаж.КорректируемыйПериод
	|			ИНАЧЕ НДСЗаписиКнигиПродаж.Период
	|		КОНЕЦ, КВАРТАЛ),
	|	НДСЗаписиКнигиПродаж.ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие,
	|	НДСЗаписиКнигиПродаж.СчетФактура.Дата,
	|	НДСЗаписиКнигиПродаж.Организация,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НДСЗаписиКнигиПродаж.СчетФактура.Дата
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.ДатаСобытия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СуммоваяРазница)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПродаж.СтавкаНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура В (&ПустыеДокументыИсправления)
	|			ТОГДА НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.СчетФактура
	|	КОНЕЦ,
	|	НДСЗаписиКнигиПродаж.Покупатель,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_СобственныеСФ)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НЕ &ВыводитьПродавцовПоАвансам
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|					И НДСЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|				ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|			ТОГДА НДСЗаписиКнигиПродаж.Организация
	|		ИНАЧЕ НДСЗаписиКнигиПродаж.Покупатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродаж.СуммаБезНДС + НДСЗаписиКнигиПродаж.НДС < 0
	|				И (НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|					ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|					ИЛИ НДСЗаписиКнигиПродаж.Регистратор ССЫЛКА Документ.СчетФактураВыданный)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_Аванс)
	|				ИЛИ НДСЗаписиКнигиПродаж.ВидЦенности В (&ВидыЦенностей_НалоговыйАгент))
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеРеализацииТоваровИУслугНДС
	|				И НЕ НДСЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтражениеПоступленияТоваровИУслугНДС
	|			ТОГДА НДСЗаписиКнигиПродаж.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НДС0 <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Экспорт
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ЗаписиКнигиПродаж.Контрагент = Контрагенты.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСРеализация0.СчетФактура КАК СчетФактура,
	|	СУММА(НДСРеализация0.СуммаБезНДС) КАК Всего
	|ПОМЕСТИТЬ РублевыеСуммыСчетовФактур
	|ИЗ
	|	РегистрНакопления.НДСРеализация0 КАК НДСРеализация0
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО НДСРеализация0.СчетФактура = СчетаФактуры.СчетФактура
	|			И (НДСРеализация0.Активность)
	|			И (НДСРеализация0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение))
	|			И (НДСРеализация0.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРеализация0.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса, 
		"&ДополнительноеУсловие", 
		ДополнительноеУсловиеЗапроса(
			СтруктураПараметров,
			СтруктураПараметров.ЗаписьДополнительногоЛиста,
			"НДСЗаписиКнигиПродаж"));
	
	Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме 
	   И СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
	   
		ТекстЗапросаДляОтбора =
		"(НДСЗаписиКнигиПродаж.Покупатель = &КонтрагентДляОтбора
		|			ИЛИ НДСЗаписиКнигиПродаж.Покупатель.ОбособленноеПодразделение
		|				И НДСЗаписиКнигиПродаж.Покупатель.ГоловнойКонтрагент = &КонтрагентДляОтбора)";
		
		Если ОбщегоНазначения.ОбъектЯвляетсяГруппой(СтруктураПараметров.КонтрагентДляОтбора) Тогда
			ТекстЗапросаДляОтбора = СтрЗаменить(ТекстЗапросаДляОтбора,
				" = &КонтрагентДляОтбора", " В ИЕРАРХИИ(&КонтрагентДляОтбора)");
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоКонтрагенту", ТекстЗапросаДляОтбора);
		
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ОтборПоКонтрагенту", "");
	КонецЕсли;
	
	Если СтруктураПараметров.ЗаписьДополнительногоЛиста Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"И НЕ НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста",
			"И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста");
		
		Если СтруктураПараметров.ЗаполнениеДокумента И НЕ СтруктураПараметров.ФорматПоПостановлению735
		 ИЛИ СтруктураПараметров.ЗаполнениеДекларации  Тогда
								
			// Учитывается как корректируемый период, так и дата оформления дополнительного листа.
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста", 
				"И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста 
				|	И НДСЗаписиКнигиПродаж.КорректируемыйПериод >= &НачалоНалоговогоПериода 
				|	И НДСЗаписиКнигиПродаж.КорректируемыйПериод <= &КонецНалоговогоПериода");

		ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента И СтруктураПараметров.ФорматПоПостановлению735
			  ИЛИ СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод Тогда

			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"Период МЕЖДУ &НачалоПериода И &КонецПериода", 
				"Период >= &НачалоПериода");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
				"И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста", 
				"И НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста
				|	И НДСЗаписиКнигиПродаж.КорректируемыйПериод >= &НачалоПериода 
				|	И НДСЗаписиКнигиПродаж.КорректируемыйПериод <= &КонецПериода");

		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса + УчетНДС.РазделительПакетаЗапросов();
	
КонецФункции

Функция ТекстЗапросаРеквизитыСчетовФактурПостановление735()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|					И (СчетФактураВыданный.Исправление
	|						ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|					И (СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|							И СчетФактураВыданный.Контрагент <> ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.ОтчетКомиссионераОПродажах).Контрагент)
	|			ТОГДА СФВыданныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФВыданныйДокументыОснования.ДокументОснование
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СФВыданныйДокументыОснования.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Номер
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СФВыданныйДокументыОснования.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Дата
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	СФВыданныйДокументыОснования.Ссылка КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДСАванса,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент)
	|			ТОГДА СчетФактураВыданный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК ДоговорАванса,
	|	СФВыданныйДокументыОснования.Ссылка КАК Ссылка,
	|	СчетФактураВыданный.Контрагент КАК Контрагент,
	|	СФВыданныйДокументыОснования.НомерСтроки КАК НомерСтроки,
	|	СчетФактураВыданный.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ЛОЖЬ КАК СводныйКомиссионный,
	|	"""" КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_СчетаФактурыПромежуточная
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФВыданныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК СФВыданныйАвансы
	|		ПО СФВыданныйДокументыОснования.Ссылка = СФВыданныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокДокументовОснований
	|		ПО СФВыданныйДокументыОснования.ДокументОснование = СписокДокументовОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокСФОснований
	|		ПО СФВыданныйДокументыОснования.Ссылка = СписокСФОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО СФВыданныйДокументыОснования.Ссылка = СчетФактураВыданный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|						ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|						И (СчетФактураВыданный.Исправление
	|							ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|						И (СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|								И СчетФактураВыданный.Контрагент <> ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.ОтчетКомиссионераОПродажах).Контрагент)
	|				ТОГДА СписокСФОснований.СчетФактура ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.СчетФактура ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И НЕ СчетФактураВыданный.СводныйКомиссионный
	|	И СчетФактураВыданный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Номер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Дата
	|	КОНЕЦ,
	|	СчетФактураВыданный.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	СчетФактураВыданный.Ссылка,
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.Покупатель, СчетФактураВыданный.Ссылка.Контрагент),
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.НомерСтроки, СчетФактураВыданный.НомерСтроки),
	|	СчетФактураВыданный.Ссылка.СводныйКорректировочный,
	|	ИСТИНА,
	|	""""
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО СчетФактураВыданный.Ссылка = СчетаФактуры.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|		ПО СчетФактураВыданный.ДокументОснование = ОтчетКомиссионераОПродажахПокупатели.Ссылка
	|			И СчетФактураВыданный.Ссылка = ОтчетКомиссионераОПродажахПокупатели.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И СчетФактураВыданный.Ссылка.СводныйКомиссионный
	|	И НЕ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|	И СчетФактураВыданный.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Авансы.Ссылка,
	|	Авансы.Ссылка.Номер,
	|	Авансы.Ссылка.Дата,
	|	Авансы.Ссылка,
	|	Авансы.СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	Авансы.Ссылка,
	|	Авансы.Контрагент,
	|	Авансы.НомерСтроки,
	|	Авансы.Ссылка.СводныйКорректировочный,
	|	ИСТИНА,
	|	""""
	|ИЗ
	|	Документ.СчетФактураВыданный.Авансы КАК Авансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО Авансы.Ссылка = СчетаФактуры.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И Авансы.Ссылка.СводныйКомиссионный
	|	И Авансы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|	И Авансы.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|				И СчетФактураПолученный.Ссылка.Исправление
	|			ТОГДА СФПолученныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФПолученныйДокументыОснования.ДокументОснование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.НомерВходящегоДокумента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.ДатаВходящегоДокумента
	|	КОНЕЦ,
	|	СчетФактураПолученный.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ТОГДА ЕСТЬNULL(СФПолученныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|			ТОГДА СчетФактураПолученный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ,
	|	СФПолученныйДокументыОснования.Ссылка,
	|	СчетФактураПолученный.Контрагент,
	|	СФПолученныйДокументыОснования.НомерСтроки,
	|	СчетФактураПолученный.СводныйКорректировочный,
	|	ЛОЖЬ,
	|	СчетФактураПолученный.КодВидаОперацииНаУменьшение
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СФПолученныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Авансы КАК СФПолученныйАвансы
	|		ПО СФПолученныйДокументыОснования.Ссылка = СФПолученныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокДокументовОснований
	|		ПО СФПолученныйДокументыОснования.ДокументОснование = СписокДокументовОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокСФОснований
	|		ПО СФПолученныйДокументыОснования.Ссылка = СписокСФОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СФПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|					И СчетФактураПолученный.Исправление
	|				ТОГДА СписокСФОснований.СчетФактура ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.СчетФактура ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И НЕ СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОПродажах
	|	И НЕ СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|	И СчетФактураПолученный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.НомерГТД,
	|	ГТДИмпорт.Дата,
	|	ГТДИмпорт.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.Контрагент,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО ГТДИмпорт.Ссылка = СчетаФактуры.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И ГТДИмпорт.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.Контрагент,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = СчетаФактуры.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И ВозвратТоваровОтПокупателя.Проведен
	|	И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	СтавкаНДСАванса,
	|	ДоговорАванса,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПродаж.СтавкаНДС_Аванс КАК СтавкаНДСАванса,
	|	ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	СчетаФактурыДокументы.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	СчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	СчетаФактурыДокументы.СчетФактураДокумент КАК СчетФактураДокумент,
	|	СчетаФактурыДокументы.Ссылка КАК Ссылка,
	|	СчетаФактурыДокументы.НомерСтроки КАК НомерСтроки,
	|	СчетаФактурыДокументы.СводныйКорректировочный КАК СводныйКорректировочный,
	|	СчетаФактурыДокументы.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ЛОЖЬ КАК НачислениеПоОказаниюУслуг,
	|	ВЫБОР
	|		КОГДА СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &КонецПериода >= ДАТАВРЕМЯ(2015, 1, 1)
	|						ТОГДА ""26""
	|					ИНАЧЕ ""01""
	|				КОНЕЦ
	|		КОГДА &КонецПериода >= ДАТАВРЕМЯ(2015, 1, 1)
	|				И СчетаФактурыДокументы.КодВидаОперации <> """"
	|			ТОГДА СчетаФактурыДокументы.КодВидаОперации
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОснования
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыПромежуточная КАК СчетаФактурыДокументы
	|		ПО ЗаписиКнигиПродаж.СчетФактура = СчетаФактурыДокументы.СчетФактура
	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = СчетаФактурыДокументы.СтавкаНДСАванса
	|			И ЗаписиКнигиПродаж.ДоговорАванса = СчетаФактурыДокументы.ДоговорАванса
	|			И (СчетаФактурыДокументы.Контрагент ЕСТЬ NULL
	|				ИЛИ ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре = СчетаФактурыДокументы.Контрагент)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПродаж.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре
	|ПОМЕСТИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОснованияБезСчетаФактуры
	|ИЗ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования КАК ЗаписиКнигиПродаж
	|ГДЕ
	|	ЗаписиКнигиПродаж.СчетФактураДокумент ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты,
	|	ДоговорАванса,
	|	СтавкаНДСАванса,
	|	КонтрагентПоСчетуФактуре
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПродаж.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	СчетаФактурыДокументы.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	СчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	СчетаФактурыДокументы.СчетФактураДокумент КАК СчетФактураДокумент,
	|	СчетаФактурыДокументы.Ссылка КАК Ссылка,
	|	СчетаФактурыДокументы.НомерСтроки КАК НомерСтроки,
	|	СчетаФактурыДокументы.СводныйКорректировочный КАК СводныйКорректировочный,
	|	СчетаФактурыДокументы.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ЛОЖЬ КАК НачислениеПоОказаниюУслуг,
	|	ВЫБОР
	|		КОГДА СчетаФактурыДокументы.СчетФактура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА &КонецПериода >= ДАТАВРЕМЯ(2015, 1, 1)
	|						ТОГДА ""26""
	|					ИНАЧЕ ""01""
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОплаты
	|ИЗ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснованияБезСчетаФактуры КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыПромежуточная КАК СчетаФактурыДокументы
	|		ПО ЗаписиКнигиПродаж.СтавкаНДСАванса = СчетаФактурыДокументы.СтавкаНДСАванса
	|			И (ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре = ЕСТЬNULL(СчетаФактурыДокументы.Контрагент, ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре))
	|			И ЗаписиКнигиПродаж.ДоговорАванса = СчетаФактурыДокументы.ДоговорАванса
	|			И ЗаписиКнигиПродаж.ДокументОплаты = СчетаФактурыДокументы.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОснованияБезСчетаФактуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПродаж.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре
	|ПОМЕСТИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОплатыБезСчетаФактуры
	|ИЗ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты КАК ЗаписиКнигиПродаж
	|ГДЕ
	|	ЗаписиКнигиПродаж.СчетФактураДокумент ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|						ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсходногоДокумента
	|					ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Дата
	|				КОНЕЦ
	|		ИНАЧЕ ЗаписиКнигиПродаж.СчетФактура.Дата
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|						ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсходногоДокумента
	|					ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Номер
	|				КОНЕЦ
	|		ИНАЧЕ ЗаписиКнигиПродаж.СчетФактура.Номер
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	NULL КАК СчетФактураДокумент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорАванса,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСАванса,
	|	NULL КАК Ссылка,
	|	NULL КАК НомерСтроки,
	|	ЛОЖЬ КАК СводныйКорректировочный,
	|	ЛОЖЬ КАК СводныйКомиссионный,
	|	ЛОЖЬ КАК НачислениеПоОказаниюУслуг,
	|	ВЫБОР
	|		КОГДА &КонецПериода >= ДАТАВРЕМЯ(2015, 1, 1)
	|			ТОГДА ""26""
	|		ИНАЧЕ ""01""
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов
	|ИЗ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплатыБезСчетаФактуры КАК ЗаписиКнигиПродаж
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОплатыБезСчетаФактуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаФактурыПромежуточная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.СчетФактура КАК СчетФактура,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.СчетФактураДокумент КАК СчетФактураДокумент,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.ДоговорАванса КАК ДоговорАванса,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.Ссылка КАК Ссылка,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.НомерСтроки КАК НомерСтроки,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.НачислениеПоОказаниюУслуг КАК НачислениеПоОказаниюУслуг,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования.КодВидаОперации КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОснования КАК ВТ_ЗаписиКнигиПродажПоДокументуОснования
	|ГДЕ
	|	НЕ ВТ_ЗаписиКнигиПродажПоДокументуОснования.СчетФактураДокумент ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.СчетФактура,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.ДатаСчетаФактуры,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.НомерСчетаФактуры,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.СчетФактураДокумент,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.ДоговорАванса,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.СтавкаНДСАванса,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.Ссылка,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.НомерСтроки,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.КонтрагентПоСчетуФактуре,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.СводныйКорректировочный,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.СводныйКомиссионный,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.НачислениеПоОказаниюУслуг,
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты.КодВидаОперации
	|ИЗ
	|	ВТ_ЗаписиКнигиПродажПоДокументуОплаты КАК ВТ_ЗаписиКнигиПродажПоДокументуОплаты
	|ГДЕ
	|	НЕ ВТ_ЗаписиКнигиПродажПоДокументуОплаты.СчетФактураДокумент ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.СчетФактура,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.ДатаСчетаФактуры,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.НомерСчетаФактуры,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.СчетФактураДокумент,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.ДоговорАванса,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.СтавкаНДСАванса,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.Ссылка,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.НомерСтроки,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.КонтрагентПоСчетуФактуре,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.СводныйКорректировочный,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.СводныйКомиссионный,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.НачислениеПоОказаниюУслуг,
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов.КодВидаОперации
	|ИЗ
	|	ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов КАК ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ЗаписиКнигиПродажПоДаннымПервичныхДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ЗаписиКнигиПродажПоДокументуОснования";
	
	// Получаем дополнительную информацию из журнала учета счетов-фактур.
	ТекстЗапроса = ТекстЗапроса + УчетНДС.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Регистратор,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировки,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА """"
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.КППКонтрагента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КППКонтрагента,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).СводныйКомиссионный
	|				И НЕ ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|			ТОГДА ЖурналУчетаСчетовФактур.ИндексСтроки
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.НомерСтроки
	|	КОНЕЦ КАК НомерСтроки,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Валюта <> &ВалютаРегУчета
	|			ТОГДА ЖурналУчетаСчетовФактур.Валюта.НаименованиеПолное
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаНаименование,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Валюта <> &ВалютаРегУчета
	|			ТОГДА ЖурналУчетаСчетовФактур.Валюта.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаКод,
	|	ЖурналУчетаСчетовФактур.Валюта.Наименование КАК ВалютаНаименованиеКраткое,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре
	|	КОНЕЦ КАК ВсегоПродажВВалюте,
	|	ЖурналУчетаСчетовФактур.Посредник КАК ПосредникСсылка,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_РегистрацияСчетовФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.СчетФактура В
	|			(ВЫБРАТЬ
	|				ВТ_ТаблицаСчетаФактурыДокументы.Ссылка
	|			ИЗ
	|				ВТ_ТаблицаСчетаФактурыДокументы)
	|	И ЖурналУчетаСчетовФактур.Организация В(&Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РегистрацияСчетовФактур.СчетФактура КАК СчетФактура,
	|	СУММА(ВТ_РегистрацияСчетовФактур.ВсегоПродажВВалюте) КАК ВсегоПродажВВалюте
	|ПОМЕСТИТЬ СуммыПродажПоСчетамФактурам
	|ИЗ
	|	ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РегистрацияСчетовФактур.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры) КАК ДатаСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры) КАК НомерСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактура, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент,
	|	ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры КАК НомерСчетаФактурыСортировка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ КАК ДатаСчетаФактурыСортировка,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировки,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = ""26""
	|			ТОГДА ИСТИНА
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.Ссылка ССЫЛКА Документ.СчетФактураВыданный
	|				И ВТ_РегистрацияСчетовФактур.СчетФактура ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ВТ_РегистрацияСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = """"
	|			ТОГДА ВТ_РегистрацияСчетовФактур.КодВидаОперации
	|		ИНАЧЕ ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВТ_РегистрацияСчетовФактур.ВалютаКод,
	|	СуммыПродажПоСчетамФактурам.ВсегоПродажВВалюте КАК ВсегоПродажВВалюте,
	|	ВТ_РегистрацияСчетовФактур.ПосредникСсылка,
	|	ВТ_РегистрацияСчетовФактур.Валюта,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименование,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименованиеКраткое,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.НачислениеПоОказаниюУслуг,
	|	ЛОЖЬ КАК СводнаяСправка
	|ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ВТ_ТаблицаСчетаФактурыДокументы КАК ВТ_ТаблицаСчетаФактурыДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.Ссылка = ВТ_РегистрацияСчетовФактур.СчетФактура
	|			И (НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|					И НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный
	|				ИЛИ ВТ_ТаблицаСчетаФактурыДокументы.НомерСтроки = ВТ_РегистрацияСчетовФактур.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыПродажПоСчетамФактурам КАК СуммыПродажПоСчетамФактурам
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.Ссылка = СуммыПродажПоСчетамФактурам.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РегистрацияСчетовФактур.КППКонтрагента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорАванса,
	|	ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры,
	|	ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.Валюта,
	|	ВТ_РегистрацияСчетовФактур.ВалютаКод,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименованиеКраткое,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.НачислениеПоОказаниюУслуг,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправления,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактура,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса,
	|	ВТ_РегистрацияСчетовФактур.ПосредникСсылка,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименование,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправления,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры),
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры),
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактура, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = """"
	|			ТОГДА ВТ_РегистрацияСчетовФактур.КодВидаОперации
	|		ИНАЧЕ ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = ""26""
	|			ТОГДА ИСТИНА
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.Ссылка ССЫЛКА Документ.СчетФактураВыданный
	|				И ВТ_РегистрацияСчетовФактур.СчетФактура ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	СуммыПродажПоСчетамФактурам.ВсегоПродажВВалюте
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_РегистрацияСчетовФактур"
		+ УчетНДС.РазделительПакетаЗапросов();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРеквизитыСчетовФактурПостановление981()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|					И (СчетФактураВыданный.Исправление
	|						ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|					И (СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|						И СчетФактураВыданный.Контрагент <> ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.ОтчетКомиссионераОПродажах).Контрагент)
	|			ТОГДА СФВыданныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФВыданныйДокументыОснования.ДокументОснование
	|	КОНЕЦ КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СФВыданныйДокументыОснования.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Номер
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Исправление
	|			ТОГДА СФВыданныйДокументыОснования.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Дата
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	СФВыданныйДокументыОснования.Ссылка КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|			ТОГДА ЕСТЬNULL(СФВыданныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтавкаНДСАванса,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|				ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент)
	|			ТОГДА СчетФактураВыданный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК ДоговорАванса,
	|	СФВыданныйДокументыОснования.Ссылка КАК Ссылка,
	|	СчетФактураВыданный.Контрагент КАК Контрагент,
	|	СФВыданныйДокументыОснования.НомерСтроки КАК НомерСтроки,
	|	СчетФактураВыданный.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ЛОЖЬ КАК СводныйКомиссионный,
	|	"""" КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_СчетаФактурыПромежуточная
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФВыданныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК СФВыданныйАвансы
	|		ПО СФВыданныйДокументыОснования.Ссылка = СФВыданныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокДокументовОснований
	|		ПО СФВыданныйДокументыОснования.ДокументОснование = СписокДокументовОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокСФОснований
	|		ПО СФВыданныйДокументыОснования.Ссылка = СписокСФОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО СФВыданныйДокументыОснования.Ссылка = СчетФактураВыданный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА (СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|						ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс)
	|						ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НалоговыйАгент))
	|						И (СчетФактураВыданный.Исправление
	|							ИЛИ СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах)
	|					ИЛИ СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|						И (СФВыданныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|							И СчетФактураВыданный.Контрагент <> ВЫРАЗИТЬ(СФВыданныйДокументыОснования.ДокументОснование КАК Документ.ОтчетКомиссионераОПродажах).Контрагент)
	|				ТОГДА СписокСФОснований.СчетФактура ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.СчетФактура ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И НЕ СчетФактураВыданный.СводныйКомиссионный
	|	И СчетФактураВыданный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Номер
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|				ИЛИ СчетФактураВыданный.Ссылка.Исправление
	|			ТОГДА СчетФактураВыданный.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураВыданный.Ссылка.Дата
	|	КОНЕЦ,
	|	СчетФактураВыданный.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	СчетФактураВыданный.Ссылка,
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.Покупатель, СчетФактураВыданный.Ссылка.Контрагент),
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.НомерСтроки, СчетФактураВыданный.НомерСтроки),
	|	СчетФактураВыданный.Ссылка.СводныйКорректировочный,
	|	ИСТИНА,
	|	""""
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО СчетФактураВыданный.Ссылка = СчетаФактуры.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|		ПО СчетФактураВыданный.ДокументОснование = ОтчетКомиссионераОПродажахПокупатели.Ссылка
	|			И СчетФактураВыданный.Ссылка = ОтчетКомиссионераОПродажахПокупатели.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И СчетФактураВыданный.Ссылка.СводныйКомиссионный
	|	И НЕ СчетФактураВыданный.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|	И СчетФактураВыданный.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Авансы.Ссылка,
	|	Авансы.Ссылка.Номер,
	|	Авансы.Ссылка.Дата,
	|	Авансы.Ссылка,
	|	Авансы.СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	Авансы.Ссылка,
	|	Авансы.Контрагент,
	|	Авансы.НомерСтроки,
	|	Авансы.Ссылка.СводныйКорректировочный,
	|	ИСТИНА,
	|	""""
	|ИЗ
	|	Документ.СчетФактураВыданный.Авансы КАК Авансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО Авансы.Ссылка = СчетаФактуры.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И Авансы.Ссылка.СводныйКомиссионный
	|	И Авансы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|	И Авансы.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА (СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс))
	|				И СчетФактураПолученный.Ссылка.Исправление
	|			ТОГДА СФПолученныйДокументыОснования.Ссылка
	|		ИНАЧЕ СФПолученныйДокументыОснования.ДокументОснование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.НомерВходящегоДокумента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА СФПолученныйДокументыОснования.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактураПолученный.ДатаВходящегоДокумента
	|	КОНЕЦ,
	|	СФПолученныйДокументыОснования.Ссылка,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс)
	|			ТОГДА ЕСТЬNULL(СФПолученныйАвансы.СтавкаНДС, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|				ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс)
	|			ТОГДА СчетФактураПолученный.ДоговорКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ,
	|	СФПолученныйДокументыОснования.Ссылка,
	|	СчетФактураПолученный.Контрагент,
	|	СФПолученныйДокументыОснования.НомерСтроки,
	|	СчетФактураПолученный.СводныйКорректировочный,
	|	ЛОЖЬ,
	|	СчетФактураПолученный.КодВидаОперацииНаУменьшение
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СФПолученныйДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.Авансы КАК СФПолученныйАвансы
	|		ПО СФПолученныйДокументыОснования.Ссылка = СФПолученныйАвансы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокДокументовОснований
	|		ПО СФПолученныйДокументыОснования.ДокументОснование = СписокДокументовОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СписокСФОснований
	|		ПО СФПолученныйДокументыОснования.Ссылка = СписокСФОснований.СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СФПолученныйДокументыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА (СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|					ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс))
	|					И СчетФактураПолученный.Исправление
	|				ТОГДА СписокСФОснований.СчетФактура ЕСТЬ НЕ NULL 
	|			ИНАЧЕ СписокДокументовОснований.СчетФактура ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|	И НЕ СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомитентуОПродажах
	|	И НЕ СФПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионераОПродажах
	|	И СчетФактураПолученный.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.НомерГТД,
	|	ГТДИмпорт.Дата,
	|	ГТДИмпорт.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ГТДИмпорт.Ссылка,
	|	ГТДИмпорт.Контрагент,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ГТДИмпорт КАК ГТДИмпорт
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО ГТДИмпорт.Ссылка = СчетаФактуры.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И ГТДИмпорт.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.Контрагент,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаФактуры КАК СчетаФактуры
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = СчетаФактуры.СчетФактура
	|ГДЕ
	|	СчетаФактуры.СчетФактура ЕСТЬ НЕ NULL 
	|	И ВозвратТоваровОтПокупателя.Проведен
	|	И ВозвратТоваровОтПокупателя.НомерРасходногоКассовогоОрдера <> """"
	|	И ВозвратТоваровОтПокупателя.ДатаРасходногоКассовогоОрдера <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ЗаписиКнигиПродаж.СтавкаНДС_Аванс КАК СтавкаНДСАванса,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.Ссылка
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.Ссылка
	|	КОНЕЦ КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.ДатаСчетаФактуры
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.ДатаСчетаФактуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ТОГДА ВЫБОР
	|							КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|									ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|								ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсходногоДокумента
	|							ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Дата
	|						КОНЕЦ
	|				ИНАЧЕ ЗаписиКнигиПродаж.СчетФактура.Дата
	|			КОНЕЦ
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.НомерСчетаФактуры
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.НомерСчетаФактуры
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ТОГДА ВЫБОР
	|							КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|									ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|								ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсходногоДокумента
	|							ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Номер
	|						КОНЕЦ
	|				ИНАЧЕ ЗаписиКнигиПродаж.СчетФактура.Номер
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.СчетФактураДокумент
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.СчетФактураДокумент
	|	КОНЕЦ КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.НомерСтроки
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.НомерСтроки
	|	КОНЕЦ КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.СводныйКорректировочный
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.СводныйКорректировочный
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СводныйКорректировочный,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.СводныйКомиссионный
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.СводныйКомиссионный
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СводныйКомиссионный,
	|	ЛОЖЬ КАК НачислениеПоОказаниюУслуг,
	|	ВЫБОР
	|		КОГДА СФДокументыСчетФактура.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыСчетФактура.КодВидаОперации
	|		КОГДА СФДокументыДокументОплаты.СчетФактура ЕСТЬ НЕ NULL 
	|			ТОГДА СФДокументыДокументОплаты.КодВидаОперации
	|		ИНАЧЕ ""26""
	|	КОНЕЦ КАК КодВидаОперации
	|ПОМЕСТИТЬ ВТ_ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыПромежуточная КАК СФДокументыСчетФактура
	|		ПО ЗаписиКнигиПродаж.СчетФактура = СФДокументыСчетФактура.СчетФактура
	|			И (СФДокументыСчетФактура.Контрагент ЕСТЬ NULL
	|				ИЛИ ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре = СФДокументыСчетФактура.Контрагент)
	|			И ЗаписиКнигиПродаж.ДоговорАванса = СФДокументыСчетФактура.ДоговорАванса
	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = СФДокументыСчетФактура.СтавкаНДСАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыПромежуточная КАК СФДокументыДокументОплаты
	|		ПО ЗаписиКнигиПродаж.ДокументОплаты = СФДокументыДокументОплаты.СчетФактура
	|			И (СФДокументыДокументОплаты.Контрагент ЕСТЬ NULL
	|				ИЛИ ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре = СФДокументыДокументОплаты.Контрагент)
	|			И ЗаписиКнигиПродаж.ДоговорАванса = СФДокументыДокументОплаты.ДоговорАванса
	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = СФДокументыДокументОплаты.СтавкаНДСАванса
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СчетаФактурыПромежуточная";
	
	// Получаем дополнительную информацию из журнала учета счетов-фактур.
	ТекстЗапроса = ТекстЗапроса + УчетНДС.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Регистратор КАК Регистратор,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры КАК НомерИсправленияКорректировки,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА """"
	|		КОГДА ЖурналУчетаСчетовФактур.Контрагент <> ЖурналУчетаСчетовФактур.Организация
	|			ТОГДА ЖурналУчетаСчетовФактур.КППКонтрагента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КППКонтрагента,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).СводныйКомиссионный
	|				И НЕ ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|			ТОГДА ЖурналУчетаСчетовФактур.ИндексСтроки
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.НомерСтроки
	|	КОНЕЦ КАК НомерСтроки,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Валюта <> &ВалютаРегУчета
	|			ТОГДА ЖурналУчетаСчетовФактур.Валюта.НаименованиеПолное
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаНаименование,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.Валюта <> &ВалютаРегУчета
	|			ТОГДА ЖурналУчетаСчетовФактур.Валюта.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаКод,
	|	ЖурналУчетаСчетовФактур.Валюта.Наименование КАК ВалютаНаименованиеКраткое,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				И ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураПолученный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.КорректировочныйНаАванс)
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение
	|		КОГДА ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И (ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|					ИЛИ ВЫРАЗИТЬ(ЖурналУчетаСчетовФактур.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс))
	|			ТОГДА ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре
	|	КОНЕЦ КАК ВсегоПродажВВалюте,
	|	ЖурналУчетаСчетовФактур.Посредник КАК ПосредникСсылка,
	|	ЖурналУчетаСчетовФактур.Валюта КАК Валюта
	|ПОМЕСТИТЬ ВТ_РегистрацияСчетовФактур
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.СчетФактура В
	|			(ВЫБРАТЬ
	|				ВТ_ТаблицаСчетаФактурыДокументы.Ссылка
	|			ИЗ
	|				ВТ_ТаблицаСчетаФактурыДокументы)
	|	И ЖурналУчетаСчетовФактур.Организация В(&Организация)
	|	И (НЕ ЖурналУчетаСчетовФактур.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ИЛИ ЖурналУчетаСчетовФактур.ЧастьЖурнала <> ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РегистрацияСчетовФактур.СчетФактура КАК СчетФактура,
	|	СУММА(ВТ_РегистрацияСчетовФактур.ВсегоПродажВВалюте) КАК ВсегоПродажВВалюте
	|ПОМЕСТИТЬ СуммыПродажПоСчетамФактурам
	|ИЗ
	|	ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РегистрацияСчетовФактур.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ КАК ДатаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.НомерСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры)
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|	КОНЕЦ КАК ДатаИсправления,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА """"
	|		ИНАЧЕ ВТ_РегистрацияСчетовФактур.НомерИсправления
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры
	|		ИНАЧЕ ВТ_ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|	КОНЕЦ КАК НомерСчетаФактурыСортировка,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|					КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаИсправления, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВТ_РегистрацияСчетовФактур.ДатаИсправления
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.ДатаСчетаФактуры, ВТ_ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры)
	|	КОНЕЦ КАК ДатаСчетаФактурыСортировка,
	|	ВТ_РегистрацияСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировки,
	|	ВТ_РегистрацияСчетовФактур.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ВТ_РегистрацияСчетовФактур.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = """"
	|			ТОГДА ВТ_РегистрацияСчетовФактур.КодВидаОперации
	|		ИНАЧЕ ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(ВТ_РегистрацияСчетовФактур.СчетФактура, ВТ_ТаблицаСчетаФактурыДокументы.СчетФактураДокумент) КАК СчетФактураДокумент,
	|	ВТ_ТаблицаСчетаФактурыДокументы.ДоговорАванса КАК ДоговорАванса,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса КАК СтавкаНДСАванса,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.КодВидаОперации = ""26""
	|			ТОГДА ИСТИНА
	|		КОГДА ВТ_ТаблицаСчетаФактурыДокументы.Ссылка ССЫЛКА Документ.СчетФактураВыданный
	|				И ВТ_РегистрацияСчетовФактур.СчетФактура ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ВТ_ТаблицаСчетаФактурыДокументы.НачислениеПоОказаниюУслуг КАК НачислениеПоОказаниюУслуг,
	|	ВТ_РегистрацияСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ВТ_ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре КАК КонтрагентПоСчетуФактуре,
	|	ВТ_РегистрацияСчетовФактур.ПосредникСсылка КАК ПосредникСсылка,
	|	СуммыПродажПоСчетамФактурам.ВсегоПродажВВалюте КАК ВсегоПродажВВалюте,
	|	ВТ_РегистрацияСчетовФактур.ВалютаКод КАК ВалютаКод,
	|	ВТ_РегистрацияСчетовФактур.Валюта КАК Валюта,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименование КАК ВалютаНаименование,
	|	ВТ_РегистрацияСчетовФактур.ВалютаНаименованиеКраткое КАК ВалютаНаименованиеКраткое
	|ПОМЕСТИТЬ ТаблицаСчетаФактурыДокументы
	|ИЗ
	|	ВТ_ТаблицаСчетаФактурыДокументы КАК ВТ_ТаблицаСчетаФактурыДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрацияСчетовФактур КАК ВТ_РегистрацияСчетовФактур
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.Ссылка = ВТ_РегистрацияСчетовФактур.СчетФактура
	|			И (НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКорректировочный
	|					И НЕ ВТ_ТаблицаСчетаФактурыДокументы.СводныйКомиссионный
	|				ИЛИ ВТ_ТаблицаСчетаФактурыДокументы.НомерСтроки = ВТ_РегистрацияСчетовФактур.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыПродажПоСчетамФактурам КАК СуммыПродажПоСчетамФактурам
	|		ПО ВТ_ТаблицаСчетаФактурыДокументы.Ссылка = СуммыПродажПоСчетамФактурам.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СуммыПродажПоСчетамФактурам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_РегистрацияСчетовФактур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаСчетаФактурыДокументы"
		+ УчетНДС.РазделительПакетаЗапросов();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПодготовленныеЗаписиКнигиПродаж(СтруктураПараметров)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	ЗаписиКнигиПродаж.НалоговыйПериод КАК НалоговыйПериод,
	|	ЗаписиКнигиПродаж.КонецНалоговогоПериода КАК КонецНалоговогоПериода,
	|	ЗаписиКнигиПродаж.НаАванс КАК НаАванс,
	|	ЗаписиКнигиПродаж.НаСуммовуюРазницу КАК НаСуммовуюРазницу,
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.СчетФактураДата, ДЕНЬ) КАК СчетФактураДата,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент ЕСТЬ НЕ NULL 
	|				И НЕ ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				И НЕ ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ТаблицаСчетаФактурыДокументы.СчетФактураДокумент
	|		ИНАЧЕ ЗаписиКнигиПродаж.СчетФактура
	|	КОНЕЦ КАК СчетФактураДокумент,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры ЕСТЬ НЕ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|							ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсходногоДокумента
	|					ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Номер
	|				КОНЕЦ
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ВосстановлениеНДС
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ВосстановлениеНДС).Номер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактурыСортировка ЕСТЬ НЕ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактурыСортировка
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|							ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).НомерИсходногоДокумента
	|					ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Номер
	|				КОНЕЦ
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).НомерВходящегоДокумента
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ВосстановлениеНДС
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ВосстановлениеНДС).Номер
	|		КОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры ЕСТЬ НЕ NULL 
	|			ТОГДА ТаблицаСчетаФактурыДокументы.НомерСчетаФактуры
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НомерСчетаФактурыСортировка,
	|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(ВЫБОР
	|				КОГДА НЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактурыСортировка ЕСТЬ NULL 
	|					ТОГДА ТаблицаСчетаФактурыДокументы.ДатаСчетаФактурыСортировка
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|					ТОГДА ВЫБОР
	|							КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|									ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|								ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсходногоДокумента
	|							ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Дата
	|						КОНЕЦ
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|				КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ВосстановлениеНДС
	|					ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ВосстановлениеНДС).Дата
	|				ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|			КОНЕЦ, ДЕНЬ), НЕОПРЕДЕЛЕНО) КАК ДатаСчетаФактурыСортировка,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА НЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры ЕСТЬ NULL 
	|				ТОГДА ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураВыданный
	|				ТОГДА ВЫБОР
	|						КОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Исправление
	|								ИЛИ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.Корректировочный)
	|							ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).ДатаИсходногоДокумента
	|						ИНАЧЕ ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураВыданный).Дата
	|					КОНЕЦ
	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|				ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).ДатаВходящегоДокумента
	|			КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ВосстановлениеНДС
	|				ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ВосстановлениеНДС).Дата
	|			ИНАЧЕ ТаблицаСчетаФактурыДокументы.ДатаСчетаФактуры
	|		КОНЕЦ, НЕОПРЕДЕЛЕНО) КАК ДатаСчетаФактуры,
	|	ЗаписиКнигиПродаж.СтавкаНДС_Аванс КАК СтавкаНДС_Аванс,
	|	ЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ВЫБОР
	|		КОГДА ТаблицаСчетаФактурыДокументы.СводныйКорректировочный = ИСТИНА
	|				И &ПравилаПостановления981
	|				И НЕ ЗаписиКнигиПродаж.НаАванс
	|			ТОГДА ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре
	|		ИНАЧЕ ЗаписиКнигиПродаж.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И ЗаписиКнигиПродаж.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ПриходныйКассовыйОрдер).ВидОперации = &ПКО_РозничнаяВыручка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РозничнаяПродажа,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.КППКонтрагента, """")
	|	КОНЕЦ КАК КППКонтрагента,
	|	ЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие КАК Событие,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ТОГДА 0
	|		КОГДА ЗаписиКнигиПродаж.НалоговыйПериод < ДАТАВРЕМЯ(2014, 10, 1)
	|			ТОГДА ЗаписиКнигиПродаж.ВсегоПродаж
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) = &ВалютаРегУчета
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте ЕСТЬ NULL 
	|							И ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|						ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).СуммаДокумента * ВЫБОР
	|								КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|									ТОГДА -1
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|						ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, -ЗаписиКнигиПродаж.ВсегоПродаж)
	|					КОГДА ЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста
	|						ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(РублевыеСуммыСчетовФактур.Всего, 0) <> 0
	|			ТОГДА РублевыеСуммыСчетовФактур.Всего * ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|						ТОГДА -1
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ ЗаписиКнигиПродаж.ВсегоПродаж
	|	КОНЕЦ КАК ВсегоПродаж,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ТОГДА ЗаписиКнигиПродаж.СуммаБезНДС20
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС20
	|	КОНЕЦ КАК СуммаБезНДС20,
	|	ЗаписиКнигиПродаж.НДС20 КАК НДС20,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ТОГДА ЗаписиКнигиПродаж.СуммаБезНДС18
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС18
	|	КОНЕЦ КАК СуммаБезНДС18,
	|	ЗаписиКнигиПродаж.НДС18 КАК НДС18,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.НаАванс
	|				ИЛИ ЗаписиКнигиПродаж.НаСуммовуюРазницу
	|			ТОГДА 0
	|		ИНАЧЕ ЗаписиКнигиПродаж.СуммаБезНДС10
	|	КОНЕЦ КАК СуммаБезНДС10,
	|	ЗаписиКнигиПродаж.НДС10 КАК НДС10,
	|	ЗаписиКнигиПродаж.НДС0 КАК НДС0,
	|	ЗаписиКнигиПродаж.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	НАЧАЛОПЕРИОДА(ЗаписиКнигиПродаж.Период, ДЕНЬ) КАК ДатаОформления,
	|	ЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	ЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЗаписиКнигиПродаж.Исправление КАК Исправление,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправления КАК НомерИсправления,
	|	ТаблицаСчетаФактурыДокументы.ДатаКорректировки КАК ДатаКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерКорректировки КАК НомерКорректировки,
	|	ТаблицаСчетаФактурыДокументы.ДатаИсправленияКорректировки КАК ДатаИсправленияКорректировки,
	|	ТаблицаСчетаФактурыДокументы.НомерИсправленияКорректировки КАК НомерИсправленияКорректировки,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И ЗаписиКнигиПродаж.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.ПриходныйКассовыйОрдер).ВидОперации = &ПКО_РозничнаяВыручка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ОбрабатыватьНомерДокумента, ЛОЖЬ)
	|	КОНЕЦ КАК ОбрабатыватьНомерДокумента,
	|	ЗаписиКнигиПродаж.ДатаСобытия КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.КодВидаОперации <> """"
	|			ТОГДА ЗаписиКнигиПродаж.КодВидаОперации
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.КодВидаОперации, ""01"")
	|	КОНЕЦ КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаНаименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаКод
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВалютаКод,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) <> &ВалютаРегУчета
	|			ТОГДА ТаблицаСчетаФактурыДокументы.ВалютаНаименованиеКраткое
	|		ИНАЧЕ &НаименованиеВалютыРубль
	|	КОНЕЦ КАК ВалютаНаименование,
	|	ВЫБОР
	|		КОГДА ЗаписиКнигиПродаж.Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.Валюта, &ВалютаРегУчета) = &ВалютаРегУчета
	|			ТОГДА 0
	|		КОГДА ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте ЕСТЬ NULL 
	|				И ЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.СчетФактураПолученный
	|			ТОГДА ВЫРАЗИТЬ(ЗаписиКнигиПродаж.СчетФактура КАК Документ.СчетФактураПолученный).СуммаДокумента * ВЫБОР
	|					КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|						ТОГДА -1
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаписиКнигиПродаж.ВсегоПродаж < 0
	|					ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, -ЗаписиКнигиПродаж.ВсегоПродаж)
	|				КОГДА ЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста
	|					ТОГДА -ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|				ИНАЧЕ ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.ВсегоПродажВВалюте, ЗаписиКнигиПродаж.ВсегоПродаж)
	|			КОНЕЦ
	|	КОНЕЦ КАК ВсегоПродажВВалюте,
	|	ЗаписиКнигиПродаж.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ЗаписиКнигиПродаж.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ТаблицаСчетаФактурыДокументы.ПосредникСсылка КАК ПосредникСсылка,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКомиссионный, ЛОЖЬ) КАК СводныйКомиссионный,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.СводныйКорректировочный, ЛОЖЬ) КАК СводныйКорректировочный,
	|	ЕСТЬNULL(ТаблицаСчетаФактурыДокументы.НачислениеПоОказаниюУслуг, ЛОЖЬ) КАК НачислениеПоОказаниюУслуг
	|ПОМЕСТИТЬ ПодготовленныеЗаписиКнигиПродаж
	|ИЗ
	|	ЗаписиКнигиПродаж КАК ЗаписиКнигиПродаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетаФактурыДокументы КАК ТаблицаСчетаФактурыДокументы
	|		ПО ЗаписиКнигиПродаж.СчетФактура = ТаблицаСчетаФактурыДокументы.СчетФактура
	|			И ЗаписиКнигиПродаж.ДоговорАванса = ТаблицаСчетаФактурыДокументы.ДоговорАванса
	|			И ЗаписиКнигиПродаж.СтавкаНДС_Аванс = ТаблицаСчетаФактурыДокументы.СтавкаНДСАванса
	|			И ЗаписиКнигиПродаж.КонтрагентПоСчетуФактуре = ТаблицаСчетаФактурыДокументы.КонтрагентПоСчетуФактуре
	|		ЛЕВОЕ СОЕДИНЕНИЕ РублевыеСуммыСчетовФактур КАК РублевыеСуммыСчетовФактур
	|		ПО ЗаписиКнигиПродаж.СчетФактура = РублевыеСуммыСчетовФактур.СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаСчетаФактурыДокументы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаписиКнигиПродаж";
	
	Возврат ТекстЗапроса + УчетНДС.РазделительПакетаЗапросов();
	
КонецФункции

Функция ТекстЗапросаКнигаПродаж(СтруктураПараметров)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПодготовленныеЗаписиКнигиПродаж.Организация,
	|	ПодготовленныеЗаписиКнигиПродаж.НалоговыйПериод КАК НалоговыйПериод,
	|	ПодготовленныеЗаписиКнигиПродаж.НаАванс,
	|	ПодготовленныеЗаписиКнигиПродаж.НаСуммовуюРазницу,
	|	ПодготовленныеЗаписиКнигиПродаж.СчетФактура,
	|	ПодготовленныеЗаписиКнигиПродаж.СчетФактураДата,
	|	ПодготовленныеЗаписиКнигиПродаж.СчетФактураДокумент КАК СчетФактураДокумент,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерСчетаФактурыСортировка КАК НомерСчетаФактурыСортировка,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаСчетаФактурыСортировка КАК ДатаСчетаФактурыСортировка,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПродаж.СтавкаНДС_Аванс,
	|	ПодготовленныеЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Контрагент,
	|	ПодготовленныеЗаписиКнигиПродаж.Контрагент.ИНН КАК ПокупательИНН,
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент.КПП
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.КППКонтрагента <> """"
	|			ТОГДА ПодготовленныеЗаписиКнигиПродаж.КППКонтрагента
	|		ИНАЧЕ ПодготовленныеЗаписиКнигиПродаж.Контрагент.КПП
	|	КОНЕЦ КАК ПокупательКПП,
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.РозничнаяПродажа
	|			ТОГДА &ТекстРозничнаяПродажа
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И ПодготовленныеЗаписиКнигиПродаж.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ПодготовленныеЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.СчетФактура КАК Документ.ПриходныйКассовыйОрдер).ВидОперации = &ПКО_РозничнаяВыручка
	|			ТОГДА ""Розничная продажа""
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеСокращенное, 1, 250)
	|					ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент.Наименование
	|				ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ КАК Покупатель,
	|	ПодготовленныеЗаписиКнигиПродаж.РозничнаяПродажа,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.ДокументОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.Событие,
	|	ПодготовленныеЗаписиКнигиПродаж.ВсегоПродаж КАК ВсегоПродаж,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаБезНДС20 КАК СуммаБезНДС20,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС20 КАК НДС20,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаБезНДС18 КАК СуммаБезНДС18,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС18 КАК НДС18,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаБезНДС10 КАК СуммаБезНДС10,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС10 КАК НДС10,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС0 КАК НДС0,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ПодготовленныеЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ПодготовленныеЗаписиКнигиПродаж.Исправление КАК Исправление,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаИсправления,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерИсправления,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.ОбрабатыватьНомерДокумента,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаСобытия,
	|	ПодготовленныеЗаписиКнигиПродаж.КодВидаОперации,
	|	ПодготовленныеЗаписиКнигиПродаж.Валюта,
	|	ПодготовленныеЗаписиКнигиПродаж.ВалютаНаименование,
	|	ПодготовленныеЗаписиКнигиПродаж.ВалютаКод,
	|	ПодготовленныеЗаписиКнигиПродаж.ВсегоПродажВВалюте,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК Посредник,
	|	ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.ИНН КАК ПосредникИНН,
	|	ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.КПП КАК ПосредникКПП,
	|	ПодготовленныеЗаписиКнигиПродаж.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ПодготовленныеЗаписиКнигиПродаж.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ПодготовленныеЗаписиКнигиПродаж.НачислениеПоОказаниюУслуг КАК НачислениеПоОказаниюУслуг
	|ИЗ
	|	ПодготовленныеЗаписиКнигиПродаж КАК ПодготовленныеЗаписиКнигиПродаж
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодготовленныеЗаписиКнигиПродаж.НалоговыйПериод,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаСчетаФактурыСортировка,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерСчетаФактурыСортировка,
	|	ПодготовленныеЗаписиКнигиПродаж.Исправление
	|ИТОГИ
	|	МИНИМУМ(НомерСчетаФактурыСортировка),
	|	МИНИМУМ(ДатаСчетаФактурыСортировка),
	|	МАКСИМУМ(Контрагент),
	|	МАКСИМУМ(Покупатель),
	|	МАКСИМУМ(ДатаОплаты),
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.НалоговыйПериод >= ДАТАВРЕМЯ(2014, 10, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА СРЕДНЕЕ(ВсегоПродаж) = МАКСИМУМ(ВсегоПродаж)
	|						ТОГДА МАКСИМУМ(ВсегоПродаж)
	|					ИНАЧЕ СУММА(ВсегоПродаж)
	|				КОНЕЦ
	|		ИНАЧЕ СУММА(ВсегоПродаж)
	|	КОНЕЦ КАК ВсегоПродаж,
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(НомерДокументаОплаты),
	|	МАКСИМУМ(ДатаДокументаОплаты),
	|	МАКСИМУМ(СводныйКомиссионный),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	МАКСИМУМ(НачислениеПоОказаниюУслуг)
	|ПО
	|	ОБЩИЕ,
	|	НалоговыйПериод,
	|	СчетФактураДокумент,
	|	ДоговорАванса,
	|	Исправление";
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"ПО
			|	ОБЩИЕ,",
			"ПО
			|	ОБЩИЕ, Контрагент, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"УПОРЯДОЧИТЬ ПО",
			"УПОРЯДОЧИТЬ ПО Покупатель, ");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДополнительныйЛистКнигиПродаж(СтруктураПараметров)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПодготовленныеЗаписиКнигиПродаж.Организация,
	|	ПодготовленныеЗаписиКнигиПродаж.НалоговыйПериод КАК НалоговыйПериод,
	|	ПодготовленныеЗаписиКнигиПродаж.КонецНалоговогоПериода КАК КонецНалоговогоПериода,
	|	ПодготовленныеЗаписиКнигиПродаж.НаАванс,
	|	ПодготовленныеЗаписиКнигиПродаж.НаСуммовуюРазницу,
	|	ПодготовленныеЗаписиКнигиПродаж.СчетФактура,
	|	ПодготовленныеЗаписиКнигиПродаж.СчетФактураДата КАК СчетФактураДата,
	|	ПодготовленныеЗаписиКнигиПродаж.СчетФактураДокумент КАК СчетФактураДокумент,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаСчетаФактуры,
	|	ПодготовленныеЗаписиКнигиПродаж.СтавкаНДС_Аванс,
	|	ПодготовленныеЗаписиКнигиПродаж.ДоговорАванса КАК ДоговорАванса,
	|	ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Контрагент,
	|	ПодготовленныеЗаписиКнигиПродаж.Контрагент.ИНН КАК ПокупательИНН,
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент.КПП
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.КППКонтрагента <> """"
	|			ТОГДА ПодготовленныеЗаписиКнигиПродаж.КППКонтрагента
	|		ИНАЧЕ ПодготовленныеЗаписиКнигиПродаж.Контрагент.КПП
	|	КОНЕЦ КАК ПокупательКПП,
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.РозничнаяПродажа
	|			ТОГДА &ТекстРозничнаяПродажа
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И ПодготовленныеЗаписиКнигиПродаж.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ИЛИ ПодготовленныеЗаписиКнигиПродаж.СчетФактура ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|					И ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.СчетФактура КАК Документ.ПриходныйКассовыйОрдер).ВидОперации = &ПКО_РозничнаяВыручка
	|			ТОГДА ""Розничная продажа""
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеСокращенное, 1, 250)
	|					ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		КОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ОбособленноеПодразделение
	|			ТОГДА ВЫБОР
	|					КОГДА ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250) = """"
	|						ТОГДА ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.Наименование
	|					ИНАЧЕ ПОДСТРОКА(ВЫРАЗИТЬ(ПодготовленныеЗаписиКнигиПродаж.Контрагент КАК Справочник.Контрагенты).ГоловнойКонтрагент.НаименованиеПолное, 1, 250)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250) = """"
	|					ТОГДА ПодготовленныеЗаписиКнигиПродаж.Контрагент.Наименование
	|				ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.Контрагент.НаименованиеПолное, 1, 250)
	|			КОНЕЦ
	|	КОНЕЦ КАК Покупатель,
	|	ПодготовленныеЗаписиКнигиПродаж.РозничнаяПродажа,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.ДокументОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.Событие,
	|	ПодготовленныеЗаписиКнигиПродаж.ВсегоПродаж КАК ВсегоПродаж,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаБезНДС20 КАК СуммаБезНДС20,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС20 КАК НДС20,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаБезНДС18 КАК СуммаБезНДС18,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС18 КАК НДС18,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаБезНДС10 КАК СуммаБезНДС10,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС10 КАК НДС10,
	|	ПодготовленныеЗаписиКнигиПродаж.НДС0 КАК НДС0,
	|	ПодготовленныеЗаписиКнигиПродаж.СуммаСовсемБезНДС КАК СуммаСовсемБезНДС,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаОформления КАК ДатаОформления,
	|	ПодготовленныеЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста КАК СторнирующаяЗаписьДопЛиста,
	|	ПодготовленныеЗаписиКнигиПродаж.ИсправленныйСчетФактура,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаИсправления,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерИсправления,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерИсправленияКорректировки,
	|	ПодготовленныеЗаписиКнигиПродаж.ОбрабатыватьНомерДокумента,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаСобытия,
	|	ПодготовленныеЗаписиКнигиПродаж.КодВидаОперации,
	|	ПодготовленныеЗаписиКнигиПродаж.Валюта,
	|	ПодготовленныеЗаписиКнигиПродаж.ВалютаНаименование,
	|	ПодготовленныеЗаписиКнигиПродаж.ВалютаКод,
	|	ПодготовленныеЗаписиКнигиПродаж.ВсегоПродажВВалюте,
	|	ПодготовленныеЗаписиКнигиПродаж.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаДокументаОплаты КАК ДатаДокументаОплаты,
	|	ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.Наименование
	|		ИНАЧЕ ПОДСТРОКА(ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК Посредник,
	|	ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.ИНН КАК ПосредникИНН,
	|	ПодготовленныеЗаписиКнигиПродаж.ПосредникСсылка.КПП КАК ПосредникКПП,
	|	ПодготовленныеЗаписиКнигиПродаж.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ПодготовленныеЗаписиКнигиПродаж.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ПодготовленныеЗаписиКнигиПродаж.НачислениеПоОказаниюУслуг КАК НачислениеПоОказаниюУслуг
	|ИЗ
	|	ПодготовленныеЗаписиКнигиПродаж КАК ПодготовленныеЗаписиКнигиПродаж
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодготовленныеЗаписиКнигиПродаж.НалоговыйПериод,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаОформления,
	|	ПодготовленныеЗаписиКнигиПродаж.СчетФактураДата,
	|	ПодготовленныеЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста УБЫВ,
	|	ПодготовленныеЗаписиКнигиПродаж.ДатаОплаты
	|ИТОГИ
	|	МАКСИМУМ(КонецНалоговогоПериода),
	|	МИНИМУМ(СчетФактураДата),
	|	МАКСИМУМ(Покупатель),
	|	МАКСИМУМ(ДатаОплаты),
	|	ВЫБОР
	|		КОГДА ПодготовленныеЗаписиКнигиПродаж.НалоговыйПериод >= ДАТАВРЕМЯ(2014, 10, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА СРЕДНЕЕ(ВсегоПродаж) = МАКСИМУМ(ВсегоПродаж)
	|						ТОГДА МАКСИМУМ(ВсегоПродаж)
	|					ИНАЧЕ СУММА(ВсегоПродаж)
	|				КОНЕЦ
	|		ИНАЧЕ СУММА(ВсегоПродаж)
	|	КОНЕЦ КАК ВсегоПродаж,
	|	СУММА(СуммаБезНДС20),
	|	СУММА(НДС20),
	|	СУММА(СуммаБезНДС18),
	|	СУММА(НДС18),
	|	СУММА(СуммаБезНДС10),
	|	СУММА(НДС10),
	|	СУММА(НДС0),
	|	СУММА(СуммаСовсемБезНДС),
	|	МАКСИМУМ(НомерДокументаОплаты),
	|	МАКСИМУМ(ДатаДокументаОплаты),
	|	МАКСИМУМ(СводныйКомиссионный),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	МАКСИМУМ(НачислениеПоОказаниюУслуг)
	|ПО
	|	НалоговыйПериод,
	|	ДатаОформления,
	|	СчетФактураДокумент,
	|	ДоговорАванса,
	|	СторнирующаяЗаписьДопЛиста";
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам И НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"ПО
			|	НалоговыйПериод,
			|	ДатаОформления,",
			"ПО
			|	НалоговыйПериод,
			|	ДатаОформления, Контрагент, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"УПОРЯДОЧИТЬ ПО",
			"УПОРЯДОЧИТЬ ПО Покупатель, ");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьДополнительнуюИнформациюПоСчетуФактуре(СтруктураПараметров)
	
	ДополнительнаяИнформация = Новый ТаблицаЗначений;
	ДополнительнаяИнформация.Колонки.Добавить("Ссылка", Документы.ТипВсеСсылки());
	ДополнительнаяИнформация.Колонки.Добавить("ТНВЭД",  ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(0));
	ДополнительнаяИнформация.Индексы.Добавить("Ссылка");
	
	// Дополнение по ТН ВЭД. Получим ТН ВЭД из документам по реализациям под 0%.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураПараметров.МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаИнформацияПоТНВЭД();
	СтрокаСФ     = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока СтрокаСФ.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаСФ.СчетФактура) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаДопИнформации = ДополнительнаяИнформация.Найти(СтрокаСФ.СчетФактура, "Ссылка");
		Если СтрокаДопИнформации = Неопределено Тогда
			СтрокаДопИнформации        = ДополнительнаяИнформация.Добавить();
			СтрокаДопИнформации.Ссылка = СтрокаСФ.СчетФактура;
		КонецЕсли;
		
		СтрокаДетальныеЗаписи = СтрокаСФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока СтрокаДетальныеЗаписи.Следующий() Цикл 
			Если ЗначениеЗаполнено(СтрокаДетальныеЗаписи.КодТНВЭД)
				И Найти(СтрокаДопИнформации.ТНВЭД, СокрЛП(СтрокаДетальныеЗаписи.КодТНВЭД)) = 0 Тогда // Исключаем дубли ТНВЭД
				СтрокаДопИнформации.ТНВЭД = СтрокаДопИнформации.ТНВЭД 
				+ ?(ПустаяСтрока(СтрокаДопИнформации.ТНВЭД ), "", ";") + СокрЛП(СтрокаДетальныеЗаписи.КодТНВЭД);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ДополнительнаяИнформация;
	
КонецФункции

Функция ТекстЗапросаИнформацияПоТНВЭД()
	
	Возврат
	"ВЫБРАТЬ
	|	СчетаФактуры.СчетФактура КАК СчетФактура
	|ПОМЕСТИТЬ СчетаФактурыНаЭкспорт
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|ГДЕ
	|	СчетаФактуры.Экспорт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТоваров.Ссылка КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодТНВЭД,
	|	СУММА(1) КАК КоличествоЭлементов
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыНаЭкспорт КАК СчетаФактуры
	|		ПО ТаблицаТоваров.Ссылка = СчетаФактуры.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	СУММА(1)
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыНаЭкспорт КАК СчетаФактуры
	|		ПО ТаблицаТоваров.Ссылка = СчетаФактуры.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	СУММА(1)
	|ИЗ
	|	СчетаФактурыНаЭкспорт КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ТаблицаТоваров
	|			ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ТаблицаТоваров.КлючСтроки
	|				И ОтчетКомиссионераОПродажахПокупатели.Ссылка = ТаблицаТоваров.Ссылка
	|		ПО (ОтчетКомиссионераОПродажахПокупатели.СчетФактура = СчетаФактуры.СчетФактура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	СУММА(1)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыНаЭкспорт КАК СчетаФактуры
	|		ПО ТаблицаТоваров.Ссылка = СчетаФактуры.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	СУММА(1)
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаФактурыНаЭкспорт КАК СчетаФактуры
	|		ПО ТаблицаТоваров.Ссылка = СчетаФактуры.СчетФактура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ТаблицаТоваров.КодТНВЭД.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|ИТОГИ
	|	СУММА(КоличествоЭлементов)
	|ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СчетаФактурыНаЭкспорт";

КонецФункции

Функция ПроверитьНаличиеДопЛистовКнигиПродаж(СтруктураПараметров)
	
	СтруктураПараметров.Вставить("ТекущийПериод", Ложь);
	СтруктураПараметров.Вставить("КорректируемыйПериод", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	1 КАК Порядок,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьДопЛисты,
	|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			Организация В (&Организация)
	|				И &ДополнительноеУсловие
	|				И ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.КорректируемыйПериод,
	|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	&НачалоПериода,
	|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			День,
	|			Организация В (&Организация)
	|				И &ДополнительноеУсловие
	|				И ЗаписьДополнительногоЛиста
	|				И КорректируемыйПериод >= &НачалоПериода
	|				И КорректируемыйПериод <= &КонецПериода) КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.ИсправленныйСчетФактура";
	
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПараметров.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(СтруктураПараметров.КонецПериода));
	Запрос.УстановитьПараметр("Организация",   СтруктураПараметров.СписокОрганизаций);
	
	ДатаПроверкиПараметровУчета = КонецДня(СтруктураПараметров.КонецПериода);

	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(ДатаПроверкиПараметровУчета);
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(
		ДатаПроверкиПараметровУчета, Ложь, СтруктураПараметров.Организация, "регл");
	
	ПрименяетсяОсвобождениеОтУплатыНДС = УчетНДС.ПрименяетсяОсвобождениеОтУплатыНДС(
		СтруктураПараметров.Организация, ДатаПроверкиПараметровУчета);
		
	ПлательщикНДС = УчетнаяПолитика.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая;
	
	СтруктураПараметров.Вставить("ПрименяетсяОсвобождениеОтУплатыНДС",
		ПрименяетсяОсвобождениеОтУплатыНДС);
	СтруктураПараметров.Вставить("ПлательщикНДС",
		ПлательщикНДС);
	
	МассивСтавокНДС = Перечисления.СтавкиНДС.СтавкиПоОперациямОтражаемымВКнигеПродаж(ВерсияПостановленияНДС1137);
	
	Запрос.УстановитьПараметр("МассивСтавокНДС", МассивСтавокНДС);
	Запрос.УстановитьПараметр("ВидыЦенностей_НалоговыйАгент",
		Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгент());
		
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ДополнительноеУсловие", 
		ДополнительноеУсловиеЗапроса(СтруктураПараметров));
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат СтруктураПараметров;
	КонецЕсли;
	
	Результат = Результат.Выгрузить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		Если СтрокаРезультата.Порядок = 1 И СтрокаРезультата.ЕстьДопЛисты Тогда 
			СтруктураПараметров.КорректируемыйПериод = Истина;
		ИначеЕсли СтрокаРезультата.ЕстьДопЛисты Тогда
			СтруктураПараметров.ТекущийПериод = Истина;
		КонецЕсли;
		Если СтруктураПараметров.КорректируемыйПериод И СтруктураПараметров.ТекущийПериод Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметров;

КонецФункции

Функция НоваяСтрокаИтоговКнигиПродаж()

	Результат = Новый Структура();
	Результат.Вставить("ВсегоПродаж",       0);
	Результат.Вставить("СуммаБезНДС20",     0);
	Результат.Вставить("СуммаБезНДС18",     0);
	Результат.Вставить("НДС20",             0);
	Результат.Вставить("НДС18",             0);
	Результат.Вставить("СуммаБезНДС10",     0);
	Результат.Вставить("НДС10",             0);
	Результат.Вставить("НДС0",              0);
	Результат.Вставить("СуммаСовсемБезНДС", 0);
	
	Возврат Результат;

КонецФункции

#КонецЕсли
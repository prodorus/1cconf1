&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Отчет.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	Отчет.ПериодРегистрации = НачалоКвартала(НачалоДня(ТекущаяДатаСеанса()) - 25 * 24 * 60 * 60);
	ЗаполнитьЗначенияСвойств(Отчет, Параметры);
	ЭтоРеестрПолученныхСчетовФактур = Параметры.КлючНазначенияИспользования = "ПолученныеСчетаФактуры";
	Отчет.ЧастьЖурнала = ?(ЭтоРеестрПолученныхСчетовФактур, 
		Перечисления.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры,
		Перечисления.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры);
		
	ПредставлениеПериодаРегистрации = СверкаДанныхУчетаНДС.ПолучитьПредставлениеПериода(
		НачалоКвартала(Отчет.ПериодРегистрации),
		КонецКвартала(Отчет.ПериодРегистрации),
		Истина);
		
	Элементы.Контрагент.Заголовок = ?(ЭтоРеестрПолученныхСчетовФактур, 
		НСтр("ru='Поставщик'"), 
		НСтр("ru='Покупатель'"));
		
	ЕстьПравоВывод = ПравоДоступа("Вывод", Метаданные);
	Элементы.ПечатьСразу.Видимость               = ЕстьПравоВывод;
	Элементы.ПечатьСразуВсеДействия.Видимость    = ЕстьПравоВывод;
	Элементы.ВыгрузитьОтчет.Видимость            = ЕстьПравоВывод И НЕ ЭтоРеестрПолученныхСчетовФактур;
	Элементы.ВыгрузитьОтчетВсеДействия.Видимость = ЕстьПравоВывод И НЕ ЭтоРеестрПолученныхСчетовФактур;
	Элементы.СохранитьКакВсеДействия.Видимость   = ЕстьПравоВывод;
	
	ОбновитьТекстЗаголовка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		ОтменитьВыполнениеЗадания();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", 
		НачалоКвартала(Отчет.ПериодРегистрации), КонецКвартала(Отчет.ПериодРегистрации));
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаКвартал", ПараметрыВыбора, Элементы.ПредставлениеПериодаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИзменитьПериод(ВыбранноеЗначение.НачалоПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОрганизацияПриИзменении(Элемент)
	
	ОбновитьТекстЗаголовка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	Если ТипЗнч(Результат.ВыделенныеОбласти) = Тип("ВыделенныеОбластиТабличногоДокумента") Тогда
		ПолеСумма = ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура УменьшитьПериод(Команда)
	
	ИзменитьПериод(НачалоКвартала(Отчет.ПериодРегистрации - 1));
	
КонецПроцедуры

&НаКлиенте
Процедура УвеличитьПериод(Команда)
	
	ИзменитьПериод(КонецКвартала(Отчет.ПериодРегистрации) + 1);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	НачатьФормированиеОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчет(Команда)
	
	Если НЕ ЗначениеЗаполнено(АдресХранилищаФайлаВыгрузки) ИЛИ НЕ ОтчетСформирован() Тогда
		ТекстСообщения = НСтр("ru='Перед выгрузкой необходимо сформировать отчет.'");
		Предупреждение(ТекстСообщения);
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(ИННПокупателя) Тогда
		ТекстСообщения = НСтр("ru='Не заполнено поле ""ИНН"" покупателя, выгрузка невозможна.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Контрагент", "Отчет");
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(ИННПоставщика) Тогда
		ТекстСообщения = НСтр("ru='Не заполнено поле ""ИНН"" организации, выгрузка невозможна.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Организация", "Отчет");
		Возврат;
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.ПолноеИмяФайла = Элементы.Результат.ИспользуемоеИмяФайла;
	ДиалогВыбораФайла.Фильтр = НСтр("ru='Документ XML (*.xml)|*.xml'");
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяСохраняемогоФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
		ПолучаемыеФайлы    = Новый Массив;
		ПолученныеФайлы    = Новый Массив;
		ОписаниеФайла      = Новый ОписаниеПередаваемогоФайла(ИмяСохраняемогоФайла, АдресХранилищаФайлаВыгрузки);
		ПолучаемыеФайлы.Добавить(ОписаниеФайла);
		ПолучитьФайлы(ПолучаемыеФайлы, ПолученныеФайлы, , Ложь);
		
		Если ПолученныеФайлы = Неопределено Тогда
			Возврат;
		КонецЕсли;
	
		ИмяСохраненногоФайла = ПолученныеФайлы[0].Имя;
		ТекстСообщения       = НСтр("ru='Файл сохранен:'");
		ПоказатьОповещениеПользователя(ТекстСообщения, , ИмяСохраненногоФайла);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьТекстЗаголовка(Форма)
	
	Отчет = Форма.Отчет;
	
	Форма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		?(Отчет.ЧастьЖурнала = ПредопределенноеЗначение(
			"Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры"),
		НСтр("ru='Реестр счетов-фактур выданных%1'"),
		НСтр("ru='Реестр счетов-фактур полученных%1'")),
		СверкаДанныхУчетаНДС.ПолучитьПредставлениеПериода(
			НачалоКвартала(Отчет.ПериодРегистрации), 
			КонецКвартала(Отчет.ПериодРегистрации)));
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьПараметрыОтчета()
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("НалоговыйПериод", Отчет.ПериодРегистрации);
	ПараметрыОтчета.Вставить("Организация",     Отчет.Организация);
	ПараметрыОтчета.Вставить("Контрагент",      Отчет.Контрагент);
	ПараметрыОтчета.Вставить("ЧастьЖурнала",    Отчет.ЧастьЖурнала);
	АдресХранилищаФайлаВыгрузки = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("АдресХранилищаФайлаВыгрузки", АдресХранилищаФайлаВыгрузки);
	Возврат ПараметрыОтчета;
	
КонецФункции

&НаСервере
Функция СформироватьОтчетНаСервере()
	
	Если НЕ ПроверитьЗаполнение() Тогда 
		Возврат Новый Структура("ЗаданиеВыполнено", Истина);
	КонецЕсли;
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
	ИдентификаторЗадания = Неопределено;
	
	ПараметрыОтчета = ПодготовитьПараметрыОтчета();
	ИННПоставщика = "";
	ИННПокупателя = "";
	
	ИБФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	Если ИБФайловая Тогда
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		СверкаДанныхУчетаНДС.СформироватьРеестрСчетовФактур(ПараметрыОтчета, АдресХранилища);
		РезультатВыполнения = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		РезультатВыполнения = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"СверкаДанныхУчетаНДС.СформироватьРеестрСчетовФактур", 
			ПараметрыОтчета,
			НаименованиеЗаданияВыполненияОтчета(ИмяФормы));
			
		ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
		АдресХранилища       = РезультатВыполнения.АдресХранилища;
		
	КонецЕсли;
	
	Если РезультатВыполнения.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
	КонецЕсли;
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()

	Попытка
		Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
			ЗагрузитьПодготовленныеДанные();
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания(
				"Подключаемый_ПроверитьВыполнениеЗадания",
				ПараметрыОбработчикаОжидания.ТекущийИнтервал,
				Истина);
		КонецЕсли;
	Исключение
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()

	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	ИННПоставщика = РезультатВыполнения.ИННПоставщика;
	ИННПокупателя = РезультатВыполнения.ИННПокупателя;
	
	ИдентификаторЗадания = Неопределено;
	
	// Вывод табличного документа
	
	Результат.Очистить();
	Результат.Вывести(РезультатВыполнения.Реестр);
	
	// Задаем имя файла по умолчанию
	ПериодОтчета = СверкаДанныхУчетаНДС.ПолучитьПредставлениеПериода(
		НачалоКвартала(Отчет.ПериодРегистрации), 
		КонецКвартала(Отчет.ПериодРегистрации));
	ИмяФайла = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		?(Отчет.ЧастьЖурнала = Перечисления.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры,
			НСтр("ru='Счета-фактуры%1 для %2 от %3'"),
			НСтр("ru='Счета-фактуры%1 от %2 по %3'")),
		ПериодОтчета,
		Отчет.Контрагент,
		Отчет.Организация);
	Элементы.Результат.ИспользуемоеИмяФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
		СтрЗаменить(ИмяФайла, ".", " "));
	
	Результат.АвтоМасштаб          = Истина;
	Результат.ОриентацияСтраницы   = ОриентацияСтраницы.Ландшафт;
	Результат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСчетовФактур";

КонецПроцедуры

&НаСервере
Процедура ОтменитьВыполнениеЗадания()
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура ИзменитьПериод(НовыйПериод)

	Отчет.ПериодРегистрации = НовыйПериод;
	ПредставлениеПериодаРегистрации = СверкаДанныхУчетаНДС.ПолучитьПредставлениеПериода(
		НачалоКвартала(Отчет.ПериодРегистрации),
		КонецКвартала(Отчет.ПериодРегистрации),
		Истина);
	
	ОбновитьТекстЗаголовка(ЭтаФорма);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочте(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ИспользуетсяВстроенныйПочтовыйКлиент() Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Отправлять документы по электронной почте можно только из встроенного почтового клиента.
			|В настоящее время в настройках параметров учета установлено использование основного почтового клиента операционной системы.'"));
		#Если Клиент Тогда
			Предупреждение(НСтр("ru='Операция не выполнена'"));
		#Иначе
			Сообщить(НСтр("ru='Операция не выполнена'"));
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	Если НЕ ОтчетСформирован() Тогда
		СформироватьОтчетПередОтправкойПоПочте();
	Иначе
		ОтправитьПоЭлектроннойПочтеСформированныйОтчет();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИспользуетсяВстроенныйПочтовыйКлиент()
	
	Возврат Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция НаименованиеЗаданияВыполненияОтчета(ИмяФормы)
	
	НаименованиеЗадания = НСтр("ru = 'Выполнение отчета: %1'");
	ИмяОтчета = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".")[1];
	НаименованиеЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НаименованиеЗадания, ИмяОтчета);
	
	Возврат НаименованиеЗадания;
	
КонецФункции

&НаСервере
Функция ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента()
	
	Сумма = 0;
	ВыделеннаяОбласть = Элементы.Результат.ТекущаяОбласть;
	Для ИндексСтрока = ВыделеннаяОбласть.Верх По ВыделеннаяОбласть.Низ Цикл
		Для ИндексКолонка = ВыделеннаяОбласть.Лево По ВыделеннаяОбласть.Право Цикл
			Попытка
				Сумма = Сумма + Число(СтрЗаменить(Результат.Область("R" + Формат(ИндексСтрока, "ЧГ=0") + "C" + Формат(ИндексКолонка, "ЧГ=0")).Текст, " ", ""));
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Сумма;
	
КонецФункции

&НаКлиенте
Процедура НачатьФормированиеОтчета()
	
	ОчиститьСообщения();
	
	ОтключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания");
	
	РезультатВыполнения = СформироватьОтчетНаСервере();
	Если НЕ РезультатВыполнения.ЗаданиеВыполнено Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОтчетСформирован()
	
	ОтчетСформирован = Истина;
	
	ОтображениеСостояния = Элементы.Результат.ОтображениеСостояния;
	Если ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность Тогда
		ОтчетСформирован = Ложь;
	КонецЕсли;
	
	Возврат ОтчетСформирован;
	
КонецФункции

&НаКлиенте
Процедура СформироватьОтчетПередОтправкойПоПочте()
	
	ОтключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗаданияПередОтправкойПоПочте");
	
	НачатьФормированиеОтчета();
	Если НЕ ОтчетСформирован() Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗаданияПередОтправкойПоПочте", 1, Истина);
	Иначе
		ОтправитьПоЭлектроннойПочтеСформированныйОтчет();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗаданияПередОтправкойПоПочте()
	
	Если ОтчетСформирован() Тогда
		ОтключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗаданияПередОтправкойПоПочте");
		ОтправитьПоЭлектроннойПочтеСформированныйОтчет();
	Иначе
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьВыполнениеЗаданияПередОтправкойПоПочте",
			ПараметрыОбработчикаОжидания.ТекущийИнтервал,
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочтеСформированныйОтчет()
	
	ДопПараметры = Новый Структура;
	
	Если Отчет.ЧастьЖурнала = ПредопределенноеЗначение("Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры") Тогда
		
		Вложения = Новый Соответствие;
		ИмяФайлаВложения = Элементы.Результат.ИспользуемоеИмяФайла + ".xml";
		Вложения.Вставить(АдресХранилищаФайлаВыгрузки, ИмяФайлаВложения);
		ДопПараметры.Вставить("ДопВложения", Вложения);
		
		ДопПараметры.Вставить("Тема"    , Элементы.Результат.ИспользуемоеИмяФайла);
		ДопПараметры.Вставить("ИмяФайла", Элементы.Результат.ИспользуемоеИмяФайла);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отчет.Контрагент) Тогда
		ДопПараметры.Вставить("Контрагент", Отчет.Контрагент);
	КонецЕсли;
	
	ОтправкаПочтовыхСообщенийКлиент.ОтправитьОтчет(ЭтаФорма, ДопПараметры);
	
КонецПроцедуры

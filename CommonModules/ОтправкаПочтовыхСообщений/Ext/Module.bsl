
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Формирует структуру параметров электронного письма для отправки отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - см.ОтправкаПочтовыхСообщенийКлиент.ОтправитьОтчет.
//  ДополнительныеПараметры - Структура - см.ОтправкаПочтовыхСообщенийКлиент.ОтправитьОтчет.
//
// Возвращаемое значение:
//  Структура - Структура параметров для передачи в функцию РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо.
//
Функция ПараметрыЭлектронногоПисьмаДляОтчетов(ПараметрыОтчета, ДополнительныеПараметры = Неопределено) Экспорт
	
	Вложения = ПоместитьТабличныйДокументОтчетаВоВременноеХранилище(ПараметрыОтчета, ДополнительныеПараметры);
	
	СписокПолучателей = Новый СписокЗначений;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		
		Если ДополнительныеПараметры.Свойство("ДопВложения") Тогда
			ДополнитьВложения(Вложения, ДополнительныеПараметры.ДопВложения);
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("Контрагент") Тогда
			СписокПолучателей = СписокПолучателейПисьма(ДополнительныеПараметры.Контрагент);
		КонецЕсли;
		
	КонецЕсли;
	
	ТекстПисьма = ОписьВложенийПисьма(Вложения);
	
	ПараметрыПисьма = ПараметрыПисьма();
	ПараметрыПисьма.Кому     = СписокПолучателей;
	ПараметрыПисьма.Тема     = ПараметрыОтчета.Заголовок;
	ПараметрыПисьма.Тело     = ТекстПисьма;
	ПараметрыПисьма.СписокФайловВложений = Вложения;
	ПараметрыПисьма.ВидТекста = Перечисления.ВидыТекстовЭлектронныхПисем.Текст;
	
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыПисьма, ДополнительныеПараметры);
	КонецЕсли;
	
	Возврат ПараметрыПисьма;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Подготавливает опись переданных файлов в формате HTML.
//
// Параметры:
//  Вложения - СписокЗначений, Структура, Соответствие - коллекция файлов. Для списка значений как наименование файла
//              в описи используется Представление. Для структуры или соответсвия Ключ.
//
// Возвращаемое значение:
//
//  Строка - описание переданных файлов в формате HTML.
//
Функция ОписьВложенийПисьма(Вложения) Экспорт
	
	ТекстПисьма = НСтр("ru = 'К письму приложены файлы:'");
	
	Если ТипЗнч(Вложения) = Тип("СписокЗначений") Тогда
		Для Каждого Вложение Из Вложения Цикл
			ТекстПисьма = ТекстПисьма + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='- %1'"), Вложение.Значение.Наименование);
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(Вложения) = Тип("Структура") ИЛИ ТипЗнч(Вложения) = Тип("Соответствие") Тогда
		Для Каждого Вложение Из Вложения Цикл
			ТекстПисьма = ТекстПисьма + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='- %1'"), Вложение.Ключ);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекстПисьма;
	
КонецФункции

Функция ПоместитьТабличныйДокументОтчетаВоВременноеХранилище(ПараметрыОтчета, ДополнительныеПараметры = Неопределено)
	
	Результат = Новый СписокЗначений;
	
	ТабличныйДокумент = ПараметрыОтчета.ТабличныйДокумент;
	
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	ПолныйПутьКФайлу = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки);
	
	Если ТабличныйДокумент.Вывод = ИспользованиеВывода.Запретить Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("ИмяФайла") Тогда
		ИмяФайла = ДополнительныеПараметры.ИмяФайла;
	Иначе
		ИмяФайла = ПараметрыОтчета.Заголовок;
	КонецЕсли;
	
	ИмяФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла);
	Если Прав(ИмяФайла, 1) = "." Тогда
		ИмяФайла = ИмяФайла + "xls";
	Иначе
		ИмяФайла = ИмяФайла + ".xls";
	КонецЕсли;
	
	ПолноеИмяФайла = УникальноеИмяФайла(ПолныйПутьКФайлу + ИмяФайла);
	
	ТабличныйДокумент.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.XLS);
	
	Результат.Добавить(Новый Структура("Хранилище, ИмяФайла, Наименование", Новый ДвоичныеДанные(ПолноеИмяФайла), ИмяФайла, ИмяФайла));
	
	УдалитьФайлы(ИмяВременнойПапки);
	
	Возврат Результат;
	
КонецФункции

Процедура ДополнитьВложения(Вложения, ВложенияКДополнению)
	
	Для Каждого ОписаниеВложения Из ВложенияКДополнению Цикл
		// ключ - адрес двоичных данных во временном хранилище, значение - имя файла для отображения во вложениях.
		Вложения.Добавить(Новый Структура("Хранилище, ИмяФайла, Наименование",
			ПолучитьИзВременногоХранилища(ОписаниеВложения.Ключ),
			ОписаниеВложения.Значение,
			ОписаниеВложения.Значение));
	КонецЦикла;
	
КонецПроцедуры

Функция УникальноеИмяФайла(ИмяФайла)
	
	Файл = Новый Файл(ИмяФайла);
	ИмяБезРасширения = Файл.ИмяБезРасширения;
	Расширение = Файл.Расширение;
	Папка = Файл.Путь;
	
	Счетчик = 1;
	Пока Файл.Существует() Цикл
		Счетчик = Счетчик + 1;
		Файл = Новый Файл(Папка + ИмяБезРасширения + " (" + Счетчик + ")" + Расширение);
	КонецЦикла;
	
	Возврат Файл.ПолноеИмя;
	
КонецФункции

Функция ПараметрыПисьма()
	
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Кому"                     , "");
	ПараметрыПисьма.Вставить("Тема"                     , "");
	ПараметрыПисьма.Вставить("Тело"                     , "");
	ПараметрыПисьма.Вставить("СписокФайловВложений"     , "");
	ПараметрыПисьма.Вставить("ВидТекста"                , "");
	ПараметрыПисьма.Вставить("УдалятьФайлыПослеОтправки", Истина);
	
	Возврат ПараметрыПисьма;
	
КонецФункции

Функция СписокПолучателейПисьма(Контрагент)
	
	СписокПолучателей = Новый СписокЗначений;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Объект КАК Объект,
	|	КонтактнаяИнформация.Объект.Наименование КАК НаименованиеОбъекта,
	|	КонтактнаяИнформация.Вид КАК Вид,
	|	КонтактнаяИнформация.Представление КАК Представление,
	|	КонтактнаяИнформация.ЗначениеПоУмолчанию КАК ЗначениеПоУмолчанию
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Контрагент
	|	И КонтактнаяИнформация.Тип = &Тип
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтактнаяИнформация.Объект,
	|	ЗначениеПоУмолчанию УБЫВ
	|ИТОГИ ПО
	|	Объект
	|";
	
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	ВыборкаОбъектыПолучатели = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СписокПолучателей.Очистить();
	Пока ВыборкаОбъектыПолучатели.Следующий() Цикл
		ВыборкаЭлАдресПолучателя = ВыборкаОбъектыПолучатели.Выбрать();
		Если ВыборкаЭлАдресПолучателя.Следующий() Тогда
			СписокПолучателей.Добавить(ВыборкаЭлАдресПолучателя.Представление, ВыборкаЭлАдресПолучателя.НаименованиеОбъекта);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокПолучателей;
	
КонецФункции

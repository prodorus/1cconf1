// Проверяет могут ли переданные характеристика и упавка являться характеристикой и упаковой переданной
// номенклатуры. При проверке учитывается, что характеристики могут быть общими для вида номенклатуры,
// а упаковки общими для набора упаковок.
//
//		Параметры:
//			Номенклатура - СправочникСсылка.Номенклатура - номенклатура-владелец характеристик и упаковок
//			Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - проверяемая характеристика
//			Упаковка - СправочникСсылка.ЕдиницаИзмерения - проверяемая упаковка.
//
//		Возвращаемое значение:
//			Структура - стуктура с полями
//				Характеристика - если проверяемая характеристика подходит, то записывается она, если нет - пустая ссылка
//				Упаковка - если провуеряемая упаковка подходит, то записывается она, если нет - пустая ссылка
//				ХарактеристикиИспользуются - равно ИСТИНА, если по номенклатуре ведется учет характеристик.
//
Функция ХарактеристикаИУпаковкаПринадлежатВладельцу(Номенклатура, Характеристика, Упаковка) Экспорт
	
	СтруктураВозврата = Новый Структура("Характеристика, Упаковка, ХарактеристикиИспользуются");
	СтруктураВозврата.Характеристика             = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	СтруктураВозврата.Упаковка                   = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	СтруктураВозврата.ХарактеристикиИспользуются = Ложь;
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Если Упаковка = Неопределено Тогда
		Упаковка = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;
	
	Если глЗначениеПеременной("ИспользоватьХарактеристикиНоменклатуры") = Истина Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕСТЬNULL(СпрХарактеристики.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
		|	ЕСТЬNULL(СпрНоменклатура.ВестиУчетПоХарактеристикам, Ложь) КАК ХарактеристикиИспользуются
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
		|		ПО СпрНоменклатура.Ссылка = СпрХарактеристики.Владелец
		|			И (СпрХарактеристики.Ссылка = &Характеристика)
		|ГДЕ
		|	СпрНоменклатура.Ссылка = &Номенклатура";
		
		Запрос.УстановитьПараметр("Номенклатура", 	Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Характеристика);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
		
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Упаковка,"Владелец") = Номенклатура Тогда
		СтруктураВозврата.Упаковка = Упаковка;
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ПроверитьСериюРассчитатьСтатус(ТекущаяСтрока, СтруктураДействий)
	
	Перем ПараметрыДействия;
	
	Если СтруктураДействий.Свойство("ПроверитьСериюРассчитатьСтатус", ПараметрыДействия) Тогда
		
		РезультатРасчета = НоменклатураСервер.ПроверитьСериюРассчитатьСтатусПриИзмененииРеквизитаВТЧ(
								ТекущаяСтрока,
								ПараметрыДействия.Склад,
								ПараметрыДействия.ПараметрыУказанияСерий);
								
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, РезультатРасчета);
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСерверЕГАИСУТ.ПолучитьСтруктуруКэшируемыеЗначения();
	КонецЕсли;
	
	ПересчитатьКоличествоЕдиницВСтрокеТЧ(                  ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(    ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПроверитьКорректностьЗаполнитьХарактеристикиИУпаковки( ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПроверитьСериюРассчитатьСтатус(                        ТекущаяСтрока, СтруктураДействий                      );
	ЗаполнитьНоменклатуруЕГАИС(                            ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьАлкогольнуюПродукцию(                         ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьСуммуВСтрокеТЧ(                             ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьЦенуПоСуммеВСтрокеТЧ(                       ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьКоличествоУпаковокВСтрокеТЧ(                ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьИндексАкцизнойМаркиДляСтрокиТабличнойЧасти(   ТекущаяСтрока, СтруктураДействий                      );
	НоменклатураПриИзмененииПереопределяемый(              ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

	ПоместитьОбработанныеСтрокиВКэшированныеЗначения(      ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем СтруктураПараметровДействия;
	СтруктураДействийЗаполнения = Новый Структура;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакМаркируемаяАлкогольнаяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия)
		И ТекущаяСтрока.Свойство(СтруктураПараметровДействия.Номенклатура) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакМаркируемаяАлкогольнаяПродукция", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАлкогольнаяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакАлкогольнаяПродукция", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЕдиницаИзмерения", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакЕдиницаИзмерения", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьВесУпаковки", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьВесУпаковки", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьОбъемУпаковки", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьОбъемУпаковки", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакАртикул", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакХарактеристикиИспользуются", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакВедетсяУчетПоГТД", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакВедетсяУчетПоГТД", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЭтоУслуга", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакЭтоУслуга", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакСерииИспользуются", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакСерииИспользуются", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьВесОбъем") Тогда
		СтруктураДействийЗаполнения.Вставить("ПересчитатьВесОбъем", СтруктураДействий.ПересчитатьВесОбъем);
	КонецЕсли;
	
	Если СтруктураДействийЗаполнения.Количество() <> 0 Тогда
		ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтруктуре(ТекущаяСтрока, СтруктураДействийЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеДополнительнойИнформации(СтруктураДействий) Экспорт
	
	СтруктураИсточников = Новый Структура;
	СтрокаРеквизитовЗаполнения = "";
	СтрокаРеквизитовВыгрузки = "";
	
	Для Каждого Действие Из СтруктураДействий Цикл
		Если ЗначениеЗаполнено(Действие.Значение) Тогда
			Для Каждого Поле Из Действие.Значение Цикл
				Если Не СтруктураИсточников.Свойство(Поле.Ключ) Тогда
					СтруктураИсточников.Вставить(Поле.Ключ);
					СтрокаРеквизитовВыгрузки = СтрокаРеквизитовВыгрузки + ", " + Поле.Ключ;
				КонецЕсли;
				Если ЗначениеЗаполнено(Поле.Значение) Тогда
					СтрокаРеквизитовЗаполнения = СтрокаРеквизитовЗаполнения + ", " + Поле.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый Структура(
		"СтруктураИсточников, РеквизитыЗаполнения, РеквизитыВыгрузки",
		СтруктураИсточников,
		Сред(СтрокаРеквизитовЗаполнения, 2), // Отрезать первый символ строки, т.к. это запятая
		СтрокаРеквизитовВыгрузки);
	
КонецФункции

// Преобразует структуру действий для использования в ПолучитьТекстЗапросаПоСлужебнымРеквизитамТЧ(),
// чтобы рассчитывать нужные поля одним запросом по всей коллекции.
//
// Параметры:
// 		СтруктураДействий - Структура - Структура с действиями по получению служебных реквизитов.
//
Процедура НормализоватьДействия(СтруктураДействий) Экспорт
	
	Суффикс = Неопределено;
	Если СтруктураДействий.Свойство("ПересчитатьВесОбъем", Суффикс)
		И ТипЗнч(Суффикс) <> Тип("Структура") Тогда
		
		СтруктураДействий.Вставить("ПересчитатьВесОбъем",
			Новый Структура("КоличествоУпаковок"+Суффикс+",Номенклатура,Упаковка", "Вес,Объем"));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоместитьОбработанныеСтрокиВКэшированныеЗначения(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("ПоместитьОбработанныеСтрокиВКэшированныеЗначения") Тогда
		
		Если ТипЗнч(ТекущаяСтрока) = Тип("ДанныеФормыЭлементКоллекции") Тогда
			КэшированныеЗначения.ОбработанныеСтроки.Добавить(ТекущаяСтрока.ПолучитьИдентификатор());
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает описание типов по переданному типу
// 
// Параметры:
//	Тип - Тип - тип значения
//
// Возвращаемое значение:
//	ОписаниеТипов - созданное на основании переданного типа описание типов.
//
Функция ОписаниеТиповПоТипу(Тип) Экспорт
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип);
	
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);
	
	Возврат ОписаниеТипов;
КонецФункции

Функция ПолучитьТекстЗапросаПоСлужебнымРеквизитамТЧ(СтруктураДействий, СтруктураДопДанных) Экспорт
	
	ШаблонЗапроса = "";
	
	// Формирование шаблона запроса временной таблицы по номенклатуре
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО) КАК НомерСтроки%ТекстВЫБРАТЬ%
	|ПОМЕСТИТЬ втТаблицаНоменклатуры
	|ИЗ
	|	&КоллекцияДанных КАК Таблица;";
	
	ШаблонВЫБРАТЬ = ",
	|	Таблица.%ИмяПоля% КАК %ИмяПоля%";
	ШаблонВЫБРАТЬНоменклатура = ",
	|	ВЫРАЗИТЬ(Таблица.%ИмяПоля% КАК Справочник.Номенклатура) КАК %ИмяПоля%";
	
	ТекстВЫБРАТЬ = "";
	Для Каждого Поле Из СтруктураДопДанных.СтруктураИсточников Цикл
		Если Поле.Ключ = "Упаковка" Тогда
			ТекстВЫБРАТЬ = ТекстВЫБРАТЬ + ",
			|	ВЫРАЗИТЬ(Таблица.Упаковка КАК Справочник.ЕдиницыИзмерения) КАК Упаковка";
		ИначеЕсли СтрНачинаетсяС(Поле.Ключ, "Номенклатура") Тогда
			ТекстВЫБРАТЬ = ТекстВЫБРАТЬ + СтрЗаменить(ШаблонВЫБРАТЬНоменклатура, "%ИмяПоля%", Поле.Ключ);
		Иначе
			ТекстВЫБРАТЬ = ТекстВЫБРАТЬ + СтрЗаменить(ШаблонВЫБРАТЬ, "%ИмяПоля%", Поле.Ключ);
		КонецЕсли;
	КонецЦикла;
	ШаблонЗапроса = СтрЗаменить(ШаблонЗапроса, "%ТекстВЫБРАТЬ%", ТекстВЫБРАТЬ);
	
	// Шаблон запроса основной выборки
	ШаблонЗапроса = ШаблонЗапроса + "
	|///////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки%ТекстВЫБРАТЬ%
	|ИЗ
	|	втТаблицаНоменклатуры КАК втТаблицаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	// Формирование полей запроса основной выборки
	ТекстВЫБРАТЬ = "";
	Для Каждого Действие Из СтруктураДействий Цикл
		ШаблонВЫБРАТЬ = ШаблонПоляВыборкиПоКлючуДействия(Действие.Ключ);
		Если ШаблонВЫБРАТЬ <> Неопределено Тогда
			Для Каждого Поле Из Действие.Значение Цикл
				Если ЗначениеЗаполнено(Поле.Значение) Тогда
					ТекстВыбрать = ТекстВЫБРАТЬ + СтрЗаменить(СтрЗаменить(ШаблонВЫБРАТЬ, "%Значение%", Поле.Значение), "%Ключ%", Поле.Ключ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрЗаменить(ШаблонЗапроса, "%ТекстВЫБРАТЬ%", ТекстВЫБРАТЬ);
	
КонецФункции

Функция ШаблонПоляВыборкиПоКлючуДействия(КлючДействия, ТолькоПроверитьПоддерживаемыеКлючи = Ложь)
	
	Если КлючДействия = "ЗаполнитьПризнакМаркируемаяАлкогольнаяПродукция" Тогда
		Возврат ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.%Ключ%.АлкогольнаяПродукцияВоВскрытойТаре ТОГДА
		|		ЛОЖЬ
		|	ИНАЧЕ
		|		ЕСТЬNULL(втТаблицаНоменклатуры.%Ключ%.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
		|	КОНЕЦ КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакАлкогольнаяПродукция" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.АлкогольнаяПродукция КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакЕдиницаИзмерения" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ЕдиницаХраненияОстатков КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакТипИзмеряемойВеличины" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмерения.ТипИзмеряемойВеличины КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьВесУпаковки" Тогда
		ТекстЗапроса = ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|		ТОГДА &ТекстЗапросаВесУпаковки
		|	ИНАЧЕ &ТекстЗапросаВесНоменклатуры
		|	КОНЕЦ КАК ВесУпаковки";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаВесУпаковки",
			Справочники.ЕдиницыИзмерения.ТекстЗапросаВесУпаковки("втТаблицаНоменклатуры.Упаковка","втТаблицаНоменклатуры.Номенклатура", Ложь));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаВесНоменклатуры",
			Справочники.ЕдиницыИзмерения.ТекстЗапросаВесУпаковки("втТаблицаНоменклатуры.Номенклатура.ЕдиницаИзмерения","втТаблицаНоменклатуры.Номенклатура", Ложь));
		Возврат ТекстЗапроса
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьОбъемУпаковки" Тогда
		ТекстЗапроса = ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка <> ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
		|		ТОГДА &ТекстЗапросаОбъемУпаковки
		|	ИНАЧЕ &ТекстЗапросаОбъемНоменклатуры
		|	КОНЕЦ КАК ОбъемУпаковки";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаОбъемУпаковки",
			Справочники.ЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("втТаблицаНоменклатуры.Упаковка","втТаблицаНоменклатуры.Номенклатура", Ложь));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстЗапросаОбъемНоменклатуры",
			Справочники.ЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("втТаблицаНоменклатуры.Номенклатура.ЕдиницаИзмерения","втТаблицаНоменклатуры.Номенклатура", Ложь));
		Возврат ТекстЗапроса
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьЕдиницуИзмеренияВеса" Тогда
		Возврат ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.ВесЕдиницаИзмерения
		|	ИНАЧЕ втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияВеса";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьЕдиницуИзмеренияОбъема" Тогда
		Возврат ",
		|	ВЫБОР КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.ОбъемЕдиницаИзмерения
		|	ИНАЧЕ втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмеренияОбъема";
	КонецЕсли;
	
	Если КлючДействия = "ПересчитатьВесОбъем" Тогда
		ТекстЗапроса = ",
		|	втТаблицаНоменклатуры.%Ключ%
		|	*(ВЫБОР
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		ТОГДА 1
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина) И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Вес
		|	КОГДА (втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|				ИЛИ втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|				ИЛИ ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка))
		|		И втТаблицаНоменклатуры.Номенклатура.ВесИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель
		|	ИНАЧЕ 0
		|	КОНЕЦ) КАК Вес,
		|
		|	втТаблицаНоменклатуры.%Ключ%
		|	*(ВЫБОР
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ВесЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ВесЧислитель / втТаблицаНоменклатуры.Номенклатура.ВесЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		ТОГДА 1
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ПлощадьЧислитель / втТаблицаНоменклатуры.Номенклатура.ПлощадьЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина) И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель,0) <> 0 И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Числитель / втТаблицаНоменклатуры.Упаковка.Знаменатель / (втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Числитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЕдиницаИзмерения.Знаменатель) / (втТаблицаНоменклатуры.Номенклатура.ДлинаЧислитель / втТаблицаНоменклатуры.Номенклатура.ДлинаЗнаменатель) * (втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель)
		|	КОГДА втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|		ТОГДА втТаблицаНоменклатуры.Упаковка.Объем
		|	КОГДА (втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
		|				ИЛИ втТаблицаНоменклатуры.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ПустаяСсылка)
		|				ИЛИ ЕСТЬNULL(втТаблицаНоменклатуры.Упаковка.Ссылка, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка))
		|		И втТаблицаНоменклатуры.Номенклатура.ОбъемИспользовать
		|		И ЕСТЬNULL(втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель,0) <> 0
		|		ТОГДА втТаблицаНоменклатуры.Номенклатура.ОбъемЧислитель / втТаблицаНоменклатуры.Номенклатура.ОбъемЗнаменатель
		|	ИНАЧЕ 0
		|	КОНЕЦ) КАК Объем";
		
		Возврат ТекстЗапроса
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакАртикул" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.Артикул КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакВариантОформленияПродажи" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВариантОформленияПродажи КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакХарактеристикиИспользуются" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВестиУчетПоХарактеристикам КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакВедетсяУчетПоГТД" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВестиУчетПоГТД КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакЭтоУслуга" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.Услуга КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакПодакцизныйТовар" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ПодакцизныйТовар КАК %Значение%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакСерииИспользуются" Тогда
		Возврат ",
		|	втТаблицаНоменклатуры.%Ключ%.ВестиУчетПоСериям КАК %Значение%";
	КонецЕсли;
	
	Если ТипЗнч(КлючДействия) = Тип("Строка")
		И Не ТолькоПроверитьПоддерживаемыеКлючи Тогда
		ТекстЗапроса =
			",
			|	втТаблицаНоменклатуры.%Ключ%.%ИмяПоля% КАК %Значение%";
		Возврат СтрЗаменить(ТекстЗапроса, "%ИмяПоля%", КлючДействия);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Получает служебные реквизиты по номенклатуре в структуре
//
// Параметры:
// 		СтруктураДанных - Структура, СтрокаТаблицыЗначений - Структура данных, в которой необходимо заполнить поля
// 		СтруктураДействий - Структура - Структура с действиями по получению служебных реквизитов.
//
Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтруктуре(СтруктураДанных, СтруктураДействий) Экспорт
	
	НормализоватьДействия(СтруктураДействий);
	
	СтруктураДопДанных = ОписаниеДополнительнойИнформации(СтруктураДействий);
	
	ТаблицаВыгрузки = Новый ТаблицаЗначений;
	ТаблицаВыгрузки.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	Для Каждого Источник Из СтруктураДопДанных.СтруктураИсточников Цикл
		ТаблицаВыгрузки.Колонки.Добавить(Источник.Ключ, ОписаниеТиповПоТипу(ТипЗнч(СтруктураДанных[Источник.Ключ])));
	КонецЦикла;
	ЗаполнитьЗначенияСвойств(ТаблицаВыгрузки.Добавить(), СтруктураДанных);
	
	Запрос = Новый Запрос(ПолучитьТекстЗапросаПоСлужебнымРеквизитамТЧ(СтруктураДействий, СтруктураДопДанных));
	Запрос.УстановитьПараметр("КоллекцияДанных", ТаблицаВыгрузки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка, СтруктураДопДанных.РеквизитыЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКорректностьЗаполнитьХарактеристикиИУпаковки(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)

	Перем Характеристика;
	Перем Упаковка;
	СтруктураПараметровДействия = Неопределено;

	ПроверитьХарактеристикуПоВладельцу    = СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу", Характеристика);
	ПроверитьЗаполнитьУпаковкуПоВладельцу  = СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу", Упаковка);

	Если (ПроверитьХарактеристикуПоВладельцу 
		Или ПроверитьЗаполнитьУпаковкуПоВладельцу)
		И ТекущаяСтрока.Свойство("Упаковка") Тогда
		РезультатПроверки = ХарактеристикаИУпаковкаПринадлежатВладельцу(ТекущаяСтрока.Номенклатура, ТекущаяСтрока.Характеристика, ТекущаяСтрока.Упаковка);

		Если ПроверитьХарактеристикуПоВладельцу Тогда
			ТекущаяСтрока.Характеристика             = РезультатПроверки.Характеристика;
			ТекущаяСтрока.ХарактеристикиИспользуются = РезультатПроверки.ХарактеристикиИспользуются;
		КонецЕсли;
		
		Если ПроверитьЗаполнитьУпаковкуПоВладельцу Тогда
			ТекущаяСтрока.Упаковка = РезультатПроверки.Упаковка;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, ЭтаФорма, Этотобъект) Экспорт
	
	Если Копирование Тогда
		Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.НеобходимостьВводаАкцизнойМарки Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ТоварыПередНачаломИзменения(Элемент, Отказ, ЭтаФорма, ЭтотОбъект) Экспорт
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.НеобходимостьВводаАкцизнойМарки
		И (Элемент.ТекущаяКолонка.Имя = "Количество" ИЛИ Элемент.ТекущаяКолонка.Имя = "Номенклатура") Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ТоварыПередУдалением(Элемент, Отказ, ЭтаФорма, ЭтотОбъект) Экспорт
	
	СтрокаТабличнойЧасти = Элемент.ТекущиеДанные;
	УправлениеЗапасами.ОчиститьАкцизныеМарки(СтрокаТабличнойЧасти, ЭтотОбъект);

КонецПроцедуры

Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, ЭтаФорма, ЭтотОбъект) Экспорт
	
	Если Не НоваяСтрока Тогда
		Элемент.Колонки.Количество.ЭлементУправления.Доступность = НЕ Элемент.ТекущиеДанные.НеобходимостьВводаАкцизнойМарки;
		Элемент.Колонки.Номенклатура.ЭлементУправления.Доступность = НЕ Элемент.ТекущиеДанные.НеобходимостьВводаАкцизнойМарки;
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьНеобходимостьВводаАкцизнойМарки(СтрокаТабличнойЧасти, ЭтаФорма, Этотобъект) Экспорт

	ОбработкаТабличныхЧастей.ЗаполнитьНеобходимостьВводаАкцизнойМарки(СтрокаТабличнойЧасти);
	
	Если СтрокаТабличнойЧасти.НеобходимостьВводаАкцизнойМарки Тогда
		ЭтаФорма.ПодключитьОбработчикОжидания("Подключаемый_ВводАкцизнойМарки", 0.1, Истина);
		СтрокаТабличнойЧасти.Количество = 1;
	КонецЕсли;

КонецПроцедуры

Процедура ВводАкцизнойМарки(ЭтаФорма, ЭтотОбъект, ФормаСканированияМарки
		) Экспорт
	
	СтрокаТабличнойЧасти = ЭтаФорма.ЭлементыФормы.Товары.ТекущиеДанные;
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ФормаСканированияМарки = //ПолучитьФорму("ОбщаяФорма.ФормаСканированияАкцизнойМарки", , ЭтаФорма);
		//ОбщаяФорма.
	ФормаСканированияМарки.КлючСтроки = СтрокаТабличнойЧасти.КлючСтроки;
	ШтрихкодМарки = ФормаСканированияМарки.ОткрытьМодально();
	
	Если НЕ ЗначениеЗаполнено(ШтрихкодМарки) Тогда
		ЭтотОбъект.Товары.Удалить(СтрокаТабличнойЧасти);
		Возврат;
	КонецЕсли;
	
	ПараметрыСканированияАкцизныхМарок = АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок(ЭтаФорма);
	
	СписокШтрихкодов = Новый Массив;
	СписокШтрихкодов.Добавить(ШтрихкодМарки);
	ДанныеШтрихкодов = АкцизныеМаркиВызовСервера.ПолучитьДанныеПоШтрихкодам(
		СписокШтрихкодов, ПараметрыСканированияАкцизныхМарок,
		Неопределено, ЭтаФорма.УникальныйИдентификатор);
	
	СтрокаАкцизныеМарки = ЭтотОбъект.АкцизныеМарки.Добавить();
	СтрокаАкцизныеМарки.КлючСтроки       = СтрокаТабличнойЧасти.КлючСтроки;
	СтрокаАкцизныеМарки.КодАкцизнойМарки = ШтрихкодМарки;
	
	Если ДанныеШтрихкодов.ОбработанныеШтрихкоды[ШтрихкодМарки] <> Неопределено Тогда
		СтрокаАкцизныеМарки.АкцизнаяМарка    = ДанныеШтрихкодов.ОбработанныеШтрихкоды[ШтрихкодМарки].ШтрихкодУпаковки;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруЕГАИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем Параметры;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруЕГАИС", Параметры) Тогда
		
		Если Параметры.Свойство("ИмяКолонки") Тогда
			ИмяКолонки = Параметры.ИмяКолонки;
		Иначе
			ИмяКолонки = "НоменклатураЕГАИС";
		КонецЕсли;
		
		Если Параметры.Свойство("ЗаполнитьФлагАлкогольнаяПродукция") Тогда
			ЗаполнитьФлагАлкогольнаяПродукция = Параметры.ЗаполнитьФлагАлкогольнаяПродукция;
		Иначе
			ЗаполнитьФлагАлкогольнаяПродукция = Истина;
		КонецЕсли;
		
		Если Параметры.Свойство("Серии") Тогда
			Серии = Параметры.Серии.Выгрузить();
		Иначе
			Серии = Новый ТаблицаЗначений;
			Серии.Колонки.Добавить("Номенклатура"  , Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
			Серии.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
			Серии.Колонки.Добавить("Серия"         , Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
		КонецЕсли;
		
		Если Параметры.Свойство("ЗаполнитьФлагМаркируемаяАлкогольнаяПродукция") Тогда
			ЗаполнитьФлагЗаполнитьФлагМаркируемаяАлкогольнаяПродукция = Параметры.ЗаполнитьФлагМаркируемаяАлкогольнаяПродукция;
		Иначе
			ЗаполнитьФлагЗаполнитьФлагМаркируемаяАлкогольнаяПродукция = Ложь;
		КонецЕсли;
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТЧСерии.Серия КАК Серия,
		|	ТЧСерии.Номенклатура КАК Номенклатура,
		|	ТЧСерии.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ
		|	Серии
		|ИЗ
		|	&Серии КАК ТЧСерии
		|ГДЕ
		|	ТЧСерии.Номенклатура = &Номенклатура
		|	И ТЧСерии.Характеристика = &Характеристика;
		|
		|ВЫБРАТЬ
		|	ТЧСерии.Серия КАК Серия,
		|	ТЧСерии.Номенклатура КАК Номенклатура,
		|	ТЧСерии.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ
		|	ВтСерии
		|ИЗ
		|	Серии КАК ТЧСерии
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Серия КАК Серия,
		|	&Номенклатура КАК Номенклатура,
		|	&Характеристика КАК Характеристика
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК НоменклатураЕГАИС,
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый
		|				ИЛИ СоответствиеНоменклатурыЕГАИС.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
		|			ТОГДА НЕ СоответствиеНоменклатурыЕГАИС.Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК МаркируемаяАлкогольнаяПродукция,
		|	ВЫБОР
		|		КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.АлкогольнаяПродукция
		|				ИЛИ НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК АлкогольнаяПродукция
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерии КАК ВтСерии
		|		ПО ВтСерии.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
		|			И ВтСерии.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
		|			И ВтСерии.Серия = СоответствиеНоменклатурыЕГАИС.Серия
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия", ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("Серии", Серии);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		КоличествоСопоставлено = Выборка.Количество();
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока[ИмяКолонки] = Выборка.НоменклатураЕГАИС;
				Если ЗаполнитьФлагЗаполнитьФлагМаркируемаяАлкогольнаяПродукция Тогда
					ТекущаяСтрока.МаркируемаяАлкогольнаяПродукция = Выборка.МаркируемаяАлкогольнаяПродукция;
				КонецЕсли;
				Если ЗаполнитьФлагАлкогольнаяПродукция Тогда
					ТекущаяСтрока.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
				КонецЕсли;
			КонецЕсли;
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.НоменклатураЕГАИС);
		КонецЦикла;
		
		Если КоличествоСопоставлено = 0 Тогда
			ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
		КонецЕсли;
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
		Иначе
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
		
		Если КоличествоСопоставлено <> 1 Тогда
			
			Если ТекущаяСтрока.НоменклатураДляВыбора.НайтиПоЗначению(ТекущаяСтрока[ИмяКолонки]) = Неопределено Тогда
				ТекущаяСтрока[ИмяКолонки] = Неопределено;
			КонецЕсли;
			Если ЗаполнитьФлагЗаполнитьФлагМаркируемаяАлкогольнаяПродукция Тогда
				ТекущаяСтрока.МаркируемаяАлкогольнаяПродукция = Ложь;
			КонецЕсли;
			Если ЗаполнитьФлагАлкогольнаяПродукция Тогда
				ТекущаяСтрока.АлкогольнаяПродукция = Ложь;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("ЗаполнитьАлкогольнуюПродукцию") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|ГДЕ
		|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &Номенклатура
		|	И СоответствиеНоменклатурыЕГАИС.Характеристика = &Характеристика
		|	И (СоответствиеНоменклатурыЕГАИС.Серия = &Серия 
		|		ИЛИ &СерияЗаполнена = ЛОЖЬ)
		|");
		
		Запрос.УстановитьПараметр("Номенклатура",   ТекущаяСтрока.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", ТекущаяСтрока.Характеристика);
		Запрос.УстановитьПараметр("Серия",          ТекущаяСтрока.Серия);
		Запрос.УстановитьПараметр("СерияЗаполнена", ЗначениеЗаполнено(ТекущаяСтрока.Серия));
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		КоличествоСопоставлено = Выборка.Количество();
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если КоличествоСопоставлено = 1 Тогда
				ТекущаяСтрока.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
			КонецЕсли;
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(Выборка.АлкогольнаяПродукция);
		КонецЦикла;
		
		Если КоличествоСопоставлено = 0 Тогда
			ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
		КонецЕсли;
		Если КоличествоСопоставлено > 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
		Иначе
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество товара (в единицах хранения) в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - структура со свойствами строки документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//	КэшированныеЗначения - Структура - кэшированные значения.
//
Процедура ПересчитатьКоличествоЕдиницВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт 

	Перем УпаковкаНоменклатура;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц", УпаковкаНоменклатура) Тогда
		ПараметрыПересчета = НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, УпаковкаНоменклатура);
		ДанныеУпаковки = ПолучитьКоэффициентУпаковки(ПараметрыПересчета.Упаковка, КэшированныеЗначения, ПараметрыПересчета.Номенклатура);
		Количество = ТекущаяСтрока.КоличествоУпаковок * ДанныеУпаковки.Коэффициент;
		
		Если ДанныеУпаковки.НужноОкруглятьКоличество
			И ПараметрыПересчета.НужноОкруглять Тогда
			ТекущаяСтрока.Количество = Окр(Количество, 0 ,РежимОкругления.Окр15как20);
		Иначе
			ТекущаяСтрока.Количество = Количество;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, УпаковкаНоменклатура) Экспорт
	
	Если УпаковкаНоменклатура = Неопределено Тогда
		
		Номенклатура   = ТекущаяСтрока.Номенклатура;
		Упаковка       = ТекущаяСтрока.Упаковка;
		НужноОкруглять = Истина;
		
	ИначеЕсли ТипЗнч(УпаковкаНоменклатура) = Тип("Структура") Тогда
		
		Если УпаковкаНоменклатура.Свойство("Упаковка") Тогда
			Упаковка = УпаковкаНоменклатура.Упаковка;
			Упаковка = ТекущаяСтрока.Упаковка;
		КонецЕсли;
		
		Если УпаковкаНоменклатура.Свойство("Номенклатура") Тогда
			Номенклатура = УпаковкаНоменклатура.Номенклатура;
		Иначе
			Номенклатура = ТекущаяСтрока.Номенклатура;
		КонецЕсли;
		
		Если УпаковкаНоменклатура.Свойство("НужноОкруглять") Тогда
			НужноОкруглять = УпаковкаНоменклатура.НужноОкруглять;
		Иначе
			НужноОкруглять = Истина;
		КонецЕсли;
		
	Иначе
		Упаковка       = УпаковкаНоменклатура;
		Номенклатура   = ТекущаяСтрока.Номенклатура;
		НужноОкруглять = Истина;
	КонецЕсли;
	
	Возврат Новый Структура("Номенклатура,Упаковка,НужноОкруглять", Номенклатура, Упаковка, НужноОкруглять);
	
КонецФункции

Функция ПолучитьКоэффициентУпаковки(ТекУпаковка, КэшированныеЗначения, ТекНоменклатура = Неопределено) Экспорт
	
	Результат = Новый Структура("Коэффициент,НужноОкруглятьКоличество");
	
	Если ЗначениеЗаполнено(ТекУпаковка) Тогда
		КлючКоэффициента = КлючКэшаУпаковки(ТекНоменклатура, ТекУпаковка); 
		Кэш = КэшированныеЗначения.КоэффициентыУпаковок[КлючКоэффициента];
		Если Кэш = Неопределено Тогда
			#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
				ЗначенияРеквизитов = ДанныеОбУпаковке(ТекНоменклатура, ТекУпаковка, КэшированныеЗначения);
				Результат.Коэффициент    		   =  ЗначенияРеквизитов.Коэффициент;
				Результат.НужноОкруглятьКоличество =  ЗначенияРеквизитов.НужноОкруглятьКоличество;
			#Иначе
				ТекстИсключения = НСтр("ru = 'Попытка получения коэффициента упаковки на клиенте.'");
				ВызватьИсключение ТекстИсключения;
			#КонецЕсли
		Иначе
			Результат = Кэш;
		КонецЕсли;
	Иначе
		Результат.Коэффициент = 1;
		Результат.НужноОкруглятьКоличество = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция КлючКэшаУпаковки(Номенклатура, Упаковка) Экспорт
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		КлючНоменклатура = Строка(Номенклатура.УникальныйИдентификатор());
	Иначе
		КлючНоменклатура = "ПустоеЗначение";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Упаковка) Тогда
		КлючУпаковка = Строка(Упаковка.УникальныйИдентификатор());
	Иначе
		КлючУпаковка = "ПустоеЗначение";
	КонецЕсли;
	
	Возврат КлючНоменклатура + КлючУпаковка;
	
КонецФункции

Функция ДанныеОбУпаковке(Номенклатура, Упаковка, КэшированныеЗначения) Экспорт 
	
	ДанныеОбУпаковке = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Упаковка, "Коэффициент,Вес,Объем");
	ДанныеОбУпаковке.Вставить("НужноОкруглятьКоличество", Ложь);
	
	КлючКоэффициента = КлючКэшаУпаковки(Номенклатура, Упаковка);
	
	КэшированныеЗначения.КоэффициентыУпаковок.Вставить(КлючКоэффициента,	Новый Структура("Коэффициент, НужноОкруглятьКоличество",
																							ДанныеОбУпаковке.Коэффициент,
																							Ложь));
	КэшированныеЗначения.ОбъемУпаковок.Вставить(КлючКоэффициента, 			ДанныеОбУпаковке.Вес);
	КэшированныеЗначения.ВесУпаковок.Вставить(КлючКоэффициента, 			ДанныеОбУпаковке.Объем);
	
	Возврат ДанныеОбУпаковке;
	
КонецФункции

// Пересчитывает сумму товара в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - структура со свойствами строки документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//	КэшированныеЗначения - Структура - кэшированные значения.
//
Процедура ПересчитатьСуммуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт

	ИмяКоличества = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьСумму", ИмяКоличества) Тогда
		Если НЕ ЗначениеЗаполнено(ИмяКоличества) Тогда
			ИмяКоличества = "Коэффициент"
		КонецЕсли;
		Если ТекущаяСтрока <> Неопределено Тогда
			Если Не ТекущаяСтрока.Свойство(ИмяКоличества) Тогда
				Если ТекущаяСтрока.Свойство("КоличествоУпаковок") Тогда
					ИмяКоличества = "КоличествоУпаковок";
				ИначеЕсли ТекущаяСтрока.Свойство("Коэффициент") Тогда
					ИмяКоличества = "Коэффициент";
				КонецЕсли;
			КонецЕсли;
			ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока[ИмяКоличества];
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Пересчитывает цену от стоимости товара в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - структура со свойствами строки документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//	КэшированныеЗначения - Структура - кэшированные значения.
//
Процедура ПересчитатьЦенуПоСуммеВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	ИмяКоличества = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьЦенуПоСумме",ИмяКоличества) Тогда
		Если Не ЗначениеЗаполнено(ИмяКоличества) Тогда
			ИмяКоличества = "КоличествоУпаковок";
		КонецЕсли;
		Если ТекущаяСтрока[ИмяКоличества] = 0 Тогда
			ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма;
		Иначе
			ТекущаяСтрока.Цена = Окр(ТекущаяСтрока.Сумма / ТекущаяСтрока[ИмяКоличества], 2);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество упаковок товара в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - структура со свойствами строки документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//	КэшированныеЗначения - Структура - кэшированные значения.
//
Процедура ПересчитатьКоличествоУпаковокВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок") Тогда
		Если ТекущаяСтрока.Количество = 0 Тогда
			ТекущаяСтрока.КоличествоУпаковок = 0;
		Иначе
			Коэффициент = ПолучитьКоэффициентУпаковки(ТекущаяСтрока.Упаковка, КэшированныеЗначения, ТекущаяСтрока.Номенклатура).Коэффициент;
			Если Коэффициент <> 0 Тогда
				ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.Количество / Коэффициент;
			Иначе
				ТекстИсключения = НСтр("ru = 'При попытке пересчета количества в %ЕдИзмерения% превышена допустимая разрядность.'");
				ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ЕдИзмерения%", ТекущаяСтрока.Упаковка);
				
				ТекущаяСтрока.Количество = 0;
				ТекущаяСтрока.КоличествоУпаковок = 0;
				ТекущаяСтрока.Упаковка = ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.ПустаяСсылка");
				
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Заполняет поле индекса акцизной марки в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - структура со свойствами строки документа.
//	СтруктураДействий - Структура - структура с действиями, которые нужно произвести.
//
Процедура ЗаполнитьИндексАкцизнойМаркиДляСтрокиТабличнойЧасти(ТекущаяСтрока, СтруктураДействий) Экспорт
	
	ПараметрыДействия = Неопределено;
	Если СтруктураДействий.Свойство("ЗаполнитьИндексАкцизнойМарки", ПараметрыДействия) Тогда
		
		Если ПараметрыДействия <> Неопределено И ПараметрыДействия.Свойство("ИмяКолонкиКоличество") Тогда
			ИмяКолонкиКоличество = ПараметрыДействия.ИмяКолонкиКоличество;
		Иначе
			ИмяКолонкиКоличество = "Количество";
		КонецЕсли;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(ТекущаяСтрока, ИмяКолонкиКоличество);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура, вызываемая из обработчика реквизита "Номенклатура" табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - текущая строка табличной части.
//	СтруктураДействий - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - Структура - Кэшированные значения табличной части.
//
Процедура НоменклатураПриИзмененииПереопределяемый(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	
КонецПроцедуры

// Процедура, вызываемая из обработчика реквизита "Характеристика" табличной части документа.
//
// Параметры:
//	ТекущаяСтрока - Структура - текущая строка табличной части.
//	СтруктураДействий - Структура - допустимые действия для табличной части.
//	КэшированныеЗначения - Структура - Кэшированные значения табличной части.
//
Процедура ХарактеристикаПриИзмененииПереопределяемый(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	
КонецПроцедуры
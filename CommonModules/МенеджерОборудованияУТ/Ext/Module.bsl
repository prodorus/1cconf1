Процедура ЗавершениеВыполненияКоманды(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат.Результат Тогда
		ВызватьИсключение Результат.ОписаниеОшибки;
	Иначе
		ДополнительныеПараметры.Вставить("Результат", Результат);
	КонецЕсли;
	
КонецПроцедуры

// Настраивает подключаемое оборудование в форме,
// устанавливает флаг ИспользоватьПодключаемоеОборудование в форме.
//
// Параметры:
//  Форма - УправляемаяФорма - форма, в которой необходимо настроить подключаемое оборудование,
//  ПрефиксыЭлементовФормы - Строка - строка имен табличных частей, разделенных запятыми, в которых нужно настроить видимость команд.
//
Процедура НастроитьПодключаемоеОборудование(Форма, ПрефиксыЭлементовФормы = "Товары") Экспорт
	
	ТипыПодключенногоОборудования = Форма.ПоддерживаемыеТипыПодключаемогоОборудования;
	
	ИспользоватьПодключаемоеОборудование = ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование");
	ПользовательАвторизовался 			 = ТипЗнч(Пользователи.АвторизованныйПользователь()) = Тип("СправочникСсылка.Пользователи");
	
	Форма.ИспользоватьПодключаемоеОборудование =
		ИспользоватьПодключаемоеОборудование
		И ПользовательАвторизовался
		И ТипыПодключенногоОборудования <> Неопределено;
		
	Если Форма.ИспользоватьПодключаемоеОборудование И Строка(ТипЗнч(Форма)) = "Форма" Тогда
	
		Форма.УникальныйИдентификатор = Новый УникальныйИдентификатор;
	
	КонецЕсли;
	
КонецПроцедуры

Функция ВидПодключаемогоОборудованияПоВидуТорговогоОборудования(ВидТО) Экспорт
	
	Если ВидТО = Перечисления.ВидыТорговогоОборудования.СканерШтрихКода Тогда
		Возврат "СканерШтрихкода";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ДисплейПокупателя Тогда
		Возврат "ДисплейПокупателя";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ККМOffLine Тогда
		Возврат "ККМОфлайн";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ККТ Тогда
		Возврат "ККТ";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ККМOnLine
		Или ВидТО = Перечисления.ВидыТорговогоОборудования.ФискальныйРегистратор Тогда
		
		Возврат "ФискальныйРегистратор";
		
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ВесыСПечатьюЭтикеток Тогда
		Возврат "ВесыСПечатьюЭтикеток";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.СчитывательМагнитныхКарт Тогда
		Возврат "СчитывательМагнитныхКарт";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ТерминалСбораДанных Тогда
		Возврат "ТерминалСбораДанных";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ЭквайринговаяСистема Тогда
		Возврат "ЭквайринговыйТерминал";
	ИначеЕсли ВидТО = Перечисления.ВидыТорговогоОборудования.ЭлектронныеВесы Тогда
		Возврат "ЭлектронныеВесы";
	Иначе
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Данный вид оборудования %1 не поддерживается!'"), ВидТО);
	КонецЕсли;
	
КонецФункции // ВидПодключаемогоОборудованияПоВидуТорговогоОборудования()

Функция ВидТорговогоОборудованияПоВидуПодключаемогоОборудования(ВидТО) Экспорт
	
	Если ВидТО = Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ВесыСПечатьюЭтикеток;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ДисплейПокупателя Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ДисплейПокупателя;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ККМОфлайн Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ККМOffLine;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ККТ;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ПринтерЧеков
			Или ВидТО = Перечисления.ТипыПодключаемогоОборудования.ПринтерЭтикеток Тогда
			
		Возврат Перечисления.ВидыТорговогоОборудования.ПустаяСсылка();
		
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.СканерШтрихКода;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.СчитывательRFID Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.СчитывательRFIDМеток;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.СчитывательМагнитныхКарт Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.СчитывательМагнитныхКарт;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ТерминалСбораДанных;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ФискальныйРегистратор;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ЭквайринговаяСистема;
	ИначеЕсли ВидТО = Перечисления.ТипыПодключаемогоОборудования.ЭлектронныеВесы Тогда
		Возврат Перечисления.ВидыТорговогоОборудования.ЭлектронныеВесы;
	Иначе
		
		Возврат Перечисления.ВидыТорговогоОборудования.ПустаяСсылка();
		
	КонецЕсли;
	
КонецФункции // ВидПодключаемогоОборудованияПоВидуТорговогоОборудования()

Функция ТаблицуЗначенийВМассив(ТаблицаЗначений) Экспорт
	
	Результат = Новый Массив;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		
		СтрокаВСтруктуре = Новый Структура;
		Для каждого Колонка Из ТаблицаЗначений.Колонки Цикл
			СтрокаВСтруктуре.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
		КонецЦикла;
		Результат.Добавить(СтрокаВСтруктуре);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

//#Область ПрограммныйИнтерфейс

Функция ТребуетсяОбработкаШтрихкода(ИсходныеДанные)
	
	Результат = РезультатОбработкиШтрихкода();
	Результат.ТребуетсяОбработкаШтрихкода = Истина;
	Результат.ИсходныеДанные = ИсходныеДанные;
	
	Возврат Результат;
	
КонецФункции

Функция ЕстьОшибкиВДеревеУпаковок(Форма, ДанныеШтрихкодов, ДанныеШтрихкода)
	
	Результат = РезультатОбработкиШтрихкода(ДанныеШтрихкода);
	Результат.АдресДереваУпаковок       = ПоместитьВоВременноеХранилище(ДанныеШтрихкодов.ВложенныеШтрихкоды.ДеревоУпаковок, Форма.УникальныйИдентификатор);
	Результат.ЕстьОшибкиВДеревеУпаковок = ДанныеШтрихкодов.ЕстьОшибкиВДеревеУпаковок;
	
	Возврат Результат;
	
КонецФункции

Функция ЕстьОшибка(ДанныеШтрихкода)
	
	Результат = РезультатОбработкиШтрихкода(ДанныеШтрихкода);
	Результат.ТекстОшибки = ДанныеШтрихкода.ТекстОшибки;
	
	Возврат Результат;
	
КонецФункции

Функция ОбработатьВводШтрихкода(Форма, ИсходныеДанные, КэшированныеЗначения) Экспорт
	
	Если СтрНачинаетсяС(Форма.ИмяФормы, "ОбщаяФорма.") Тогда
		МенеджерДокумента = Форма;
	Иначе
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Форма.ИмяФормы);
	КонецЕсли;
	
	ПараметрыСканированияАкцизныхМарок = АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок(Форма);
	
	АкцизныеМаркиВДокументе = Неопределено;
	Если ЭтоАдресВременногоХранилища(ПараметрыСканированияАкцизныхМарок.АдресСоответствияАкцизныхМарок) Тогда
		АкцизныеМаркиВДокументе = ПолучитьИзВременногоХранилища(ПараметрыСканированияАкцизныхМарок.АдресСоответствияАкцизныхМарок);
		Если АкцизныеМаркиВДокументе = Неопределено Тогда
			
			ИсточникОрганизацияЕГАИС = ИсточникОрганизацияЕГАИС(Форма);
			
			ШтрихкодыУпаковок = ШтрихкодыУпаковок(
				ИсточникОрганизацияЕГАИС.Источник,
				ИсточникОрганизацияЕГАИС.ОрганизацияЕГАИС);
			
			АкцизныеМаркиВДокументе = Новый Соответствие;
			ПроверитьИЗаполнитьВложенныеШтрихкоды(ШтрихкодыУпаковок.ДеревоУпаковок.Строки, АкцизныеМаркиВДокументе, Новый Соответствие);
			
			ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, ПараметрыСканированияАкцизныхМарок.АдресСоответствияАкцизныхМарок);
			
		КонецЕсли;
	КонецЕсли;
	
	ДанныеШтрихкодов = ПолучитьДанныеПоШтрихкодам(ИсходныеДанные.Штрихкод, ПараметрыСканированияАкцизныхМарок, КэшированныеЗначения, АкцизныеМаркиВДокументе);
	ДанныеШтрихкода  = ДанныеШтрихкодов.ОбработанныеШтрихкоды[ИсходныеДанные.Штрихкод];
	
	Если ДанныеШтрихкода = Неопределено Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = ТребуетсяОбработкаШтрихкода(ИсходныеДанные);
		
	ИначеЕсли ДанныеШтрихкодов.ЕстьОшибкиВДеревеУпаковок Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = ЕстьОшибкиВДеревеУпаковок(Форма, ДанныеШтрихкодов, ДанныеШтрихкода);
		
	ИначеЕсли ЗначениеЗаполнено(ДанныеШтрихкода.ТекстОшибки) Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = ЕстьОшибка(ДанныеШтрихкода);
		
	ИначеЕсли ДанныеШтрихкода.ТипУпаковки = ПредопределенноеЗначение("Перечисление.ТипыУпаковок.МаркированныйТовар") Тогда
		//Новый формат акцизных марок: возможно выполнение только для старого формата (PDF417)
		Если Не ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) Тогда
			
			РезультатДобавленияШтрихкодаВДокумент = РезультатОбработкиШтрихкода(ДанныеШтрихкода);
			РезультатДобавленияШтрихкодаВДокумент.ТребуетсяВыборНоменклатуры = Истина;
			РезультатДобавленияШтрихкодаВДокумент.АдресДанныхШтрихкода       = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, Форма.УникальныйИдентификатор);
			
			РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("АлкогольнаяПродукция",    ДанныеШтрихкода.АлкогольнаяПродукция);
			РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("КодАлкогольнойПродукции", ДанныеШтрихкода.КодАлкогольнойПродукции);
			РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("АкцизнаяМарка",           ДанныеШтрихкода.ШтрихкодУпаковки);
			РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("ТипШтрихкода",            ДанныеШтрихкода.ТипШтрихкода);
			РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("ТипУпаковки",             ДанныеШтрихкода.ТипУпаковки);
			
		Иначе
			
			РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодАкцизнойМарки(
				Форма,
				ДанныеШтрихкода,
				ПараметрыСканированияАкцизныхМарок);
				
			ОбработатьРезультатДобавленияШтрихкодаАкцизнойМарки(
				Форма,
				ДанныеШтрихкода,
				ПараметрыСканированияАкцизныхМарок,
				РезультатДобавленияШтрихкодаВДокумент);
			
		КонецЕсли;
		
	ИначеЕсли ДанныеШтрихкода.ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.DataMatrix") Тогда
		
		Если ПараметрыСканированияАкцизныхМарок.ВыполнятьКонтрольЗаполненияДляDataMatrix
			И ДанныеШтрихкода.Справки2.Количество() = 0 Тогда
			
			РезультатДобавленияШтрихкодаВДокумент = РезультатОбработкиШтрихкода(ДанныеШтрихкода);
			РезультатДобавленияШтрихкодаВДокумент.ТекстОшибки = СтрШаблон(
				НСтр("ru='По штрихкоду %1 справок 2 не обнаружено.'"),
				ДанныеШтрихкода.Штрихкод);
			
		ИначеЕсли ДанныеШтрихкода.Справки2.Количество() > 0 
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.Справка2) Тогда
			
			РезультатДобавленияШтрихкодаВДокумент = РезультатОбработкиШтрихкода(ДанныеШтрихкода);
			РезультатДобавленияШтрихкодаВДокумент.ТребуетсяВыборСправки2 = Истина;
			РезультатДобавленияШтрихкодаВДокумент.АдресДанныхШтрихкода   = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, Форма.УникальныйИдентификатор);
			
			Для Каждого ДанныеСправки2 Из ДанныеШтрихкода.Справки2 Цикл
				РезультатДобавленияШтрихкодаВДокумент.Справки2.Добавить(ДанныеСправки2.Справка2);
			КонецЦикла;
			
		ИначеЕсли ЗначениеЗаполнено(ДанныеШтрихкода.Справка2)
			И Не ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) Тогда
			
			РезультатДобавленияШтрихкодаВДокумент = РезультатОбработкиШтрихкода(ДанныеШтрихкода);
			РезультатДобавленияШтрихкодаВДокумент.ТребуетсяВыборНоменклатуры = Истина;
			РезультатДобавленияШтрихкодаВДокумент.АдресДанныхШтрихкода = ПоместитьВоВременноеХранилище(ДанныеШтрихкода, Форма.УникальныйИдентификатор);
			
			РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("АлкогольнаяПродукция", ДанныеШтрихкода.АлкогольнаяПродукция);
			РезультатДобавленияШтрихкодаВДокумент.ПараметрыВыбораНоменклатуры.Вставить("ТипШтрихкода",         Перечисления.ТипыШтрихкодов.DataMatrix);
			
		Иначе
			
			РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодDataMatrix(
				Форма,
				ДанныеШтрихкода,
				ПараметрыСканированияАкцизныхМарок);
			
		КонецЕсли;
		
	Иначе
		
		ВложенныеШтрихкоды = ДанныеШтрихкодов.ВложенныеШтрихкоды;
		
		РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодУпаковки(
			Форма,
			ДанныеШтрихкода,
			ВложенныеШтрихкоды,
			ПараметрыСканированияАкцизныхМарок);
		
		ОбработатьРезультатДобавленияШтрихкодаУпаковки(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканированияАкцизныхМарок,
			РезультатДобавленияШтрихкодаВДокумент);
		
	КонецЕсли;
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

//#КонецОбласти

//#Область ОбработкаШтрихкодов

//#Область ПолучениеДанныхПоШтрихкодам

Функция ПолучитьДанныеПоШтрихкодам(СписокШтрихкодов, ПараметрыСканированияАкцизныхМарок, КэшированныеЗначения, АкцизныеМаркиВДокументе = Неопределено) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ОбработанныеШтрихкоды",     Новый Соответствие);
	Результат.Вставить("НеобработанныеШтрихкоды",   Новый Соответствие);
	Результат.Вставить("ЕстьОшибкиВДеревеУпаковок", Ложь);
	Результат.Вставить("ВложенныеШтрихкоды",        Неопределено);
	
	Если ТипЗнч(СписокШтрихкодов) = Тип("Строка") Тогда
		ШтрихкодыДляОбработки = Новый Массив;
		ШтрихкодыДляОбработки.Добавить(СписокШтрихкодов);
	Иначе
		ШтрихкодыДляОбработки = СписокШтрихкодов;
	КонецЕсли;
	
	КодыАкцизныхМарокPDF417     = Новый Массив;
	КодыАкцизныхМарокDataMatrix = Новый Массив;
	КодыDataMatrix              = Новый Массив;
	КодыУпаковок                = Новый Массив;
	
	Для Каждого Штрихкод Из ШтрихкодыДляОбработки Цикл
		
		ТипШтрихкодаАкцизнойМарки = Неопределено;
		Если АкцизныеМаркиВызовСервера.ЭтоШтрихкодАкцизнойМарки(Штрихкод,ТипШтрихкодаАкцизнойМарки) Тогда
			Если ТипШтрихкодаАкцизнойМарки = Перечисления.ТипыШтрихкодов.PDF417 Тогда
				КодыАкцизныхМарокPDF417.Добавить(Штрихкод);
			Иначе 
				КодыАкцизныхМарокDataMatrix.Добавить(Штрихкод);
			КонецЕсли;
		ИначеЕсли АкцизныеМаркиКлиентСервер.ЭтоШтрихкодDataMatrix(Штрихкод) Тогда
			КодыDataMatrix.Добавить(Штрихкод);
		Иначе
			КодыУпаковок.Добавить(Штрихкод);
		КонецЕсли;
		
	КонецЦикла;
	
	Если КодыАкцизныхМарокPDF417.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(
			Результат.ОбработанныеШтрихкоды,
			ПолучитьМаркиПоШтрихкодамPDF417(КодыАкцизныхМарокPDF417, ПараметрыСканированияАкцизныхМарок, АкцизныеМаркиВДокументе));
	КонецЕсли;
	
	Если КодыАкцизныхМарокDataMatrix.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(
			Результат.ОбработанныеШтрихкоды,
			ПолучитьМаркиПоШтрихкодамDataMatrix(КодыАкцизныхМарокDataMatrix, ПараметрыСканированияАкцизныхМарок, АкцизныеМаркиВДокументе));
	КонецЕсли;
	
	Если КодыDataMatrix.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(
			Результат.ОбработанныеШтрихкоды,
			ПолучитьДанныеПоШтрихкодамDataMatrix(КодыDataMatrix));
	КонецЕсли;
	
	Если КодыУпаковок.Количество() > 0 Тогда
		
		ТипыУпаковок = Новый Массив;
		ТипыУпаковок.Добавить(Перечисления.ТипыУпаковок.МонотоварнаяУпаковка);
		ТипыУпаковок.Добавить(Перечисления.ТипыУпаковок.МультитоварнаяУпаковка);
		
		ШтрихкодыУпаковок = Справочники.ШтрихкодыУпаковокТоваров.НайтиШтрихкодыУпаковокПоСпискуШтрихкодов(
			КодыУпаковок,
			ПараметрыСканированияАкцизныхМарок.ОрганизацияЕГАИС,
			ТипыУпаковок);
		
		СписокШтрихкодовУпаковок = Новый Массив;
		
		Для Каждого КлючЗначение Из ШтрихкодыУпаковок Цикл
			Для Каждого ШтрихкодУпаковки Из КлючЗначение.Значение Цикл
				СписокШтрихкодовУпаковок.Добавить(ШтрихкодУпаковки.Ссылка);
			КонецЦикла;
		КонецЦикла;
		
		ДанныеШтрихкодовУпаковок = ПолучитьДанныеПоШтрихкодамУпаковок(СписокШтрихкодовУпаковок, ПараметрыСканированияАкцизныхМарок, АкцизныеМаркиВДокументе);
		
		Для Каждого ШтрихкодУпаковки Из СписокШтрихкодовУпаковок Цикл
			
			ДанныеШтрихкода = ДанныеШтрихкодовУпаковок.ОбработанныеШтрихкоды[ШтрихкодУпаковки];
			
			Результат.ОбработанныеШтрихкоды.Вставить(ДанныеШтрихкода.Штрихкод, ДанныеШтрихкода);
			
			Индекс = КодыУпаковок.Найти(ДанныеШтрихкода.Штрихкод);
			Пока Индекс <> Неопределено Цикл
				КодыУпаковок.Удалить(Индекс);
				Результат.ОбработанныеШтрихкоды[ДанныеШтрихкода.Штрихкод].Количество = Результат.ОбработанныеШтрихкоды[ДанныеШтрихкода.Штрихкод].Количество + 1;
				
				Индекс = КодыУпаковок.Найти(ДанныеШтрихкода.Штрихкод);
			КонецЦикла;
			
		КонецЦикла;
		
		Для Каждого ЗначениеШтрихкода Из КодыУпаковок Цикл
			
			Если Результат.НеобработанныеШтрихкоды[ЗначениеШтрихкода] <> Неопределено Тогда
				Результат.НеобработанныеШтрихкоды[ЗначениеШтрихкода].Количество = Результат.НеобработанныеШтрихкоды[ЗначениеШтрихкода].Количество + 1;
				Продолжить;
			КонецЕсли;
			
			ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(ЗначениеШтрихкода);
			ДанныеШтрихкода.Количество = 1;
			
			Результат.НеобработанныеШтрихкоды.Вставить(ЗначениеШтрихкода, ДанныеШтрихкода);
			
		КонецЦикла;
		
		Если Результат.НеобработанныеШтрихкоды.Количество() > 0 Тогда
			АкцизныеМаркиЕГАИСПереопределяемый.ЗаполнитьИнформациюПоШтрихкодам(Результат.НеобработанныеШтрихкоды, КэшированныеЗначения);
		КонецЕсли;
		
		Если ДанныеШтрихкодовУпаковок.ВложенныеШтрихкоды <> Неопределено Тогда
			Результат.ЕстьОшибкиВДеревеУпаковок = ДанныеШтрихкодовУпаковок.ВложенныеШтрихкоды.ДеревоУпаковок.Строки.Найти(Истина, "ЕстьОшибки", Истина) <> Неопределено;
			Результат.ВложенныеШтрихкоды        = ДанныеШтрихкодовУпаковок.ВложенныеШтрихкоды;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьМаркиПоШтрихкодамPDF417(СписокШтрихкодов, ПараметрыСканированияАкцизныхМарок, АкцизныеМаркиВДокументе)
	
	Результат = Новый Соответствие;
	
	ШтрихкодыУпаковок = Справочники.ШтрихкодыУпаковокТоваров.НайтиШтрихкодыУпаковокПоСпискуШтрихкодов(
		СписокШтрихкодов,
		ПараметрыСканированияАкцизныхМарок.ОрганизацияЕГАИС,
		Перечисления.ТипыУпаковок.МаркированныйТовар);
	
	КодыАлкогольнойПродукции = Новый Массив;
	СоответствиеКодаАкцизнойМарке = Новый Соответствие;
	
	Для Каждого КлючЗначение Из ШтрихкодыУпаковок Цикл
		
		ДанныеШтрихкодаУпаковки = КлючЗначение.Значение[0];
		
		ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(КлючЗначение.Ключ);
		ДанныеШтрихкода.ШтрихкодУпаковки = ДанныеШтрихкодаУпаковки.Ссылка;
		ДанныеШтрихкода.ТипШтрихкода     = Перечисления.ТипыШтрихкодов.PDF417;
		
		ЗаполнитьЗначенияСвойств(ДанныеШтрихкода, ДанныеШтрихкодаУпаковки);
		
		Если АкцизныеМаркиВДокументе <> Неопределено
			И АкцизныеМаркиВДокументе[ДанныеШтрихкодаУпаковки.Ссылка] <> Неопределено Тогда
			
			ДанныеШтрихкода.ТекстОшибки = НСтр("ru='Уже добавлена в документ.'");
			
		ИначеЕсли ПараметрыСканированияАкцизныхМарок.КонтрольАкцизныхМарок Тогда
			
			Если ПараметрыСканированияАкцизныхМарок.ДоступныеСтатусы.Найти(ДанныеШтрихкодаУпаковки.Статус) = Неопределено Тогда
			
				Если ЗначениеЗаполнено(ДанныеШтрихкодаУпаковки.Статус) Тогда
					ПредставлениеСтатуса = ДанныеШтрихкодаУпаковки.Статус;
				Иначе
					ПредставлениеСтатуса = НСтр("ru = '<Без статуса>'");
				КонецЕсли;
				
				ДанныеШтрихкода.ТекстОшибки = СтрШаблон(
					НСтр("ru='Статус: %1'"),
					ПредставлениеСтатуса);
					
			ИначеЕсли Не ЗначениеЗаполнено(ДанныеШтрихкодаУпаковки.Статус) Тогда
				
				АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(
					ПараметрыСканированияАкцизныхМарок.ОперацияКонтроляАкцизныхМарок,
					ДанныеШтрихкода.Штрихкод,
					ДанныеШтрихкода.ТекстОшибки);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ДанныеШтрихкода.КодАлкогольнойПродукции) Тогда
			ДанныеШтрихкода.КодАлкогольнойПродукции = АкцизныеМаркиВызовСервера.КодКлассификатораНоменклатурыЕГАИС(ДанныеШтрихкода.Штрихкод);
			КодыАлкогольнойПродукции.Добавить(ДанныеШтрихкода.КодАлкогольнойПродукции);
			
			СоответствиеКодаАкцизнойМарке.Вставить(ДанныеШтрихкода.КодАлкогольнойПродукции, ДанныеШтрихкода.Штрихкод);
		КонецЕсли;
		
		Результат.Вставить(КлючЗначение.Ключ, ДанныеШтрихкода);
		
		Индекс = СписокШтрихкодов.Найти(КлючЗначение.Ключ);
		Пока Индекс <> Неопределено Цикл
			СписокШтрихкодов.Удалить(Индекс);
			Результат[КлючЗначение.Ключ].Количество = Результат[КлючЗначение.Ключ].Количество + 1;
			
			Индекс = СписокШтрихкодов.Найти(КлючЗначение.Ключ);
		КонецЦикла;
		
	КонецЦикла;
	
	СоответствиеАлкогольнойПродукции = ИнтеграцияЕГАИС.СоответствиеАлкогольнойПродукции(КодыАлкогольнойПродукции);
	Для Каждого КлючИЗначение Из СоответствиеАлкогольнойПродукции Цикл
		КодАкцизнойМарки = СоответствиеКодаАкцизнойМарке[КлючИЗначение.Ключ];
		ДанныеШтрихкода = Результат[КодАкцизнойМарки];
		Если ДанныеШтрихкода <> Неопределено Тогда
			ДанныеШтрихкода.АлкогольнаяПродукция = КлючИЗначение.Значение
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КодАкцизнойМарки Из СписокШтрихкодов Цикл
		
		Если Результат[КодАкцизнойМарки] <> Неопределено Тогда
			Результат[КодАкцизнойМарки].Количество = Результат[КодАкцизнойМарки].Количество + 1;
			Продолжить;
		КонецЕсли;
		
		ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(КодАкцизнойМарки);
		ДанныеШтрихкода.Количество   = 1;
		ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.PDF417;
		ДанныеШтрихкода.ТипУпаковки  = Перечисления.ТипыУпаковок.МаркированныйТовар;
		
		АкцизныеМаркиВызовСервера.ЗаполнитьСопоставленнуюНоменклатуруПоАкцизнойМарке(КодАкцизнойМарки, ДанныеШтрихкода);
		
		Если ПараметрыСканированияАкцизныхМарок.КонтрольАкцизныхМарок Тогда
			АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(
				ПараметрыСканированияАкцизныхМарок.ОперацияКонтроляАкцизныхМарок,
				ДанныеШтрихкода.Штрихкод,
				ДанныеШтрихкода.ТекстОшибки);
		КонецЕсли;
		
		Если ПараметрыСканированияАкцизныхМарок.СоздаватьШтрихкодУпаковки
			И ПустаяСтрока(ДанныеШтрихкода.ТекстОшибки) Тогда
			
			ДанныеНовойУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СтруктураСозданияШтрихкодаУпаковки();
			ЗаполнитьЗначенияСвойств(ДанныеНовойУпаковки, ДанныеШтрихкода);
			
			ДанныеНовойУпаковки.ЗначениеШтрихкода = КодАкцизнойМарки;
			ДанныеНовойУпаковки.ТипУпаковки       = Перечисления.ТипыУпаковок.МаркированныйТовар;
			ДанныеНовойУпаковки.Количество        = 1;
			
			ДанныеШтрихкода.ШтрихкодУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодУпаковки(ДанныеНовойУпаковки);
			
		КонецЕсли;
		
		Результат.Вставить(КодАкцизнойМарки, ДанныеШтрихкода);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьМаркиПоШтрихкодамDataMatrix(СписокШтрихкодов, ПараметрыСканированияАкцизныхМарок, АкцизныеМаркиВДокументе)
	
	Результат = Новый Соответствие;
	
	ШтрихкодыУпаковок = Справочники.ШтрихкодыУпаковокТоваров.НайтиШтрихкодыУпаковокПоСпискуШтрихкодов(
		СписокШтрихкодов,
		ПараметрыСканированияАкцизныхМарок.ОрганизацияЕГАИС,
		Перечисления.ТипыУпаковок.МаркированныйТовар);
	
	КодыАлкогольнойПродукции = Новый Массив;
	СоответствиеКодаАкцизнойМарке = Новый Соответствие;
	
	Для Каждого КлючЗначение Из ШтрихкодыУпаковок Цикл
		
		ДанныеШтрихкодаУпаковки = КлючЗначение.Значение[0];
		
		ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(КлючЗначение.Ключ);
		ДанныеШтрихкода.ШтрихкодУпаковки = ДанныеШтрихкодаУпаковки.Ссылка;
		ДанныеШтрихкода.ТипШтрихкода     = Перечисления.ТипыШтрихкодов.DataMatrix;
		
		ЗаполнитьЗначенияСвойств(ДанныеШтрихкода, ДанныеШтрихкодаУпаковки);
		
		Если АкцизныеМаркиВДокументе <> Неопределено
			И АкцизныеМаркиВДокументе[ДанныеШтрихкодаУпаковки.Ссылка] <> Неопределено Тогда
			
			ДанныеШтрихкода.ТекстОшибки = НСтр("ru='Уже добавлена в документ.'");
			
		ИначеЕсли ПараметрыСканированияАкцизныхМарок.КонтрольАкцизныхМарок Тогда
			
			Если ПараметрыСканированияАкцизныхМарок.ДоступныеСтатусы.Найти(ДанныеШтрихкодаУпаковки.Статус) = Неопределено Тогда
			
				Если ЗначениеЗаполнено(ДанныеШтрихкодаУпаковки.Статус) Тогда
					ПредставлениеСтатуса = ДанныеШтрихкодаУпаковки.Статус;
				Иначе
					ПредставлениеСтатуса = НСтр("ru = '<Без статуса>'");
				КонецЕсли;
				
				ДанныеШтрихкода.ТекстОшибки = СтрШаблон(
					НСтр("ru='Статус: %1'"),
					ПредставлениеСтатуса);
					
			ИначеЕсли Не ЗначениеЗаполнено(ДанныеШтрихкодаУпаковки.Статус) Тогда
				
				АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(
					ПараметрыСканированияАкцизныхМарок.ОперацияКонтроляАкцизныхМарок,
					ДанныеШтрихкода.Штрихкод,
					ДанныеШтрихкода.ТекстОшибки);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Результат.Вставить(КлючЗначение.Ключ, ДанныеШтрихкода);
		
		Индекс = СписокШтрихкодов.Найти(КлючЗначение.Ключ);
		Пока Индекс <> Неопределено Цикл
			СписокШтрихкодов.Удалить(Индекс);
			Результат[КлючЗначение.Ключ].Количество = Результат[КлючЗначение.Ключ].Количество + 1;
			
			Индекс = СписокШтрихкодов.Найти(КлючЗначение.Ключ);
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого КодАкцизнойМарки Из СписокШтрихкодов Цикл
		
		Если Результат[КодАкцизнойМарки] <> Неопределено Тогда
			Результат[КодАкцизнойМарки].Количество = Результат[КодАкцизнойМарки].Количество + 1;
			Продолжить;
		КонецЕсли;
		
		ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(КодАкцизнойМарки);
		ДанныеШтрихкода.Количество   = 1;
		ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
		ДанныеШтрихкода.ТипУпаковки  = Перечисления.ТипыУпаковок.МаркированныйТовар;
		
		Если ПараметрыСканированияАкцизныхМарок.СоздаватьШтрихкодУпаковки Тогда
			
			ДанныеНовойУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СтруктураСозданияШтрихкодаУпаковки();
			ЗаполнитьЗначенияСвойств(ДанныеНовойУпаковки, ДанныеШтрихкода);
			
			ДанныеНовойУпаковки.ЗначениеШтрихкода = КодАкцизнойМарки;
			ДанныеНовойУпаковки.ТипУпаковки       = Перечисления.ТипыУпаковок.МаркированныйТовар;
			ДанныеНовойУпаковки.Количество        = 1;
			
			ДанныеШтрихкода.ШтрихкодУпаковки = Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодУпаковки(ДанныеНовойУпаковки);
			
		ИначеЕсли ПараметрыСканированияАкцизныхМарок.КонтрольАкцизныхМарок Тогда
			
			ДанныеШтрихкода.ТекстОшибки = НСтр("ru='Состояние обработки: Не найдена.'");
			
		КонецЕсли;
		
		Результат.Вставить(КодАкцизнойМарки, ДанныеШтрихкода);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДанныеПоШтрихкодамDataMatrix(СписокШтрихкодов)
	
	Результат = Новый Соответствие;
	
	ТаблицаНоменклатуры = Новый ТаблицаЗначений;
	ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТаблицаНоменклатуры.Колонки.Добавить("Характеристика");
	ТаблицаНоменклатуры.Колонки.Добавить("Упаковка");
	
	ТаблицаАлкогольнойПродукции = Новый ТаблицаЗначений;
	ТаблицаАлкогольнойПродукции.Колонки.Добавить("АлкогольнаяПродукция");
	ТаблицаАлкогольнойПродукции.Колонки.Добавить("КодАлкогольнойПродукции");
	
	Для Каждого КодDataMatrix Из СписокШтрихкодов Цикл
		
		Если Результат[КодDataMatrix] <> Неопределено Тогда
			Результат[КодDataMatrix].Количество = Результат[КодDataMatrix].Количество + 1;
			Продолжить;
		КонецЕсли;
		
		ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(КодDataMatrix);
		ДанныеШтрихкода.Количество   = 1;
		ДанныеШтрихкода.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix;
		
		СтруктураШтрихкода = АкцизныеМаркиКлиентСервер.РазложитьШтрихкодDataMatrix(КодDataMatrix, ДанныеШтрихкода.ТекстОшибки);
		
		Если ЗначениеЗаполнено(ДанныеШтрихкода.ТекстОшибки) Тогда
			Результат.Вставить(КодDataMatrix, ДанныеШтрихкода);
			Продолжить;
		КонецЕсли;
		
		ДанныеШтрихкода.ТипМарки   = СтруктураШтрихкода.ТипМарки;
		ДанныеШтрихкода.СерияМарки = СтруктураШтрихкода.СерияМарки;
		ДанныеШтрихкода.НомерМарки = СтруктураШтрихкода.НомерМарки;
		
		ДанныеШтрихкода.Справки2 = Справки2ПоШтрихкодуDataMatrix(СтруктураШтрихкода);
		
		ТаблицаНоменклатуры.Очистить();
		ТаблицаАлкогольнойПродукции.Очистить();
		
		Для Каждого ДанныеСправки2 Из ДанныеШтрихкода.Справки2 Цикл
			СтрокаТаблицыНоменклатуры = ТаблицаНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыНоменклатуры, ДанныеСправки2);
			
			СтрокаТаблицыАлкогольнойПродукции = ТаблицаАлкогольнойПродукции.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыАлкогольнойПродукции, ДанныеСправки2);
		КонецЦикла;
		
		ТаблицаНоменклатуры.Свернуть("Номенклатура, Характеристика, Упаковка");
		ТаблицаАлкогольнойПродукции.Свернуть("АлкогольнаяПродукция, КодАлкогольнойПродукции");
		
		Если ТаблицаНоменклатуры.Количество() = 1 Тогда
			ДанныеШтрихкода.Номенклатура   = ТаблицаНоменклатуры[0].Номенклатура;
			ДанныеШтрихкода.Характеристика = ТаблицаНоменклатуры[0].Характеристика;
			ДанныеШтрихкода.Упаковка       = ТаблицаНоменклатуры[0].Упаковка;
		КонецЕсли;
		
		Если ТаблицаАлкогольнойПродукции.Количество() = 1 Тогда
			ДанныеШтрихкода.КодАлкогольнойПродукции = ТаблицаАлкогольнойПродукции[0].КодАлкогольнойПродукции;
			ДанныеШтрихкода.АлкогольнаяПродукция    = ТаблицаАлкогольнойПродукции[0].АлкогольнаяПродукция;
		КонецЕсли;
		
		Если ДанныеШтрихкода.Справки2.Количество() = 1 Тогда
			ДанныеШтрихкода.Справка2 = ДанныеШтрихкода.Справки2[0].Справка2;
		КонецЕсли;
		
		Результат.Вставить(КодDataMatrix, ДанныеШтрихкода);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДанныеПоШтрихкодамУпаковок(ШтрихкодыУпаковок, ПараметрыСканированияАкцизныхМарок, АкцизныеМаркиВДокументе)
	
	Результат = Новый Структура;
	Результат.Вставить("ОбработанныеШтрихкоды", Новый Соответствие);
	Результат.Вставить("ВложенныеШтрихкоды",    Неопределено);
	
	Если ТипЗнч(ШтрихкодыУпаковок) = Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров") Тогда
		СписокШтрихкодовУпаковок = Новый Массив;
		СписокШтрихкодовУпаковок.Добавить(ШтрихкодыУпаковок);
	Иначе
		СписокШтрихкодовУпаковок = ШтрихкодыУпаковок;
	КонецЕсли;
	
	Если СписокШтрихкодовУпаковок.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	ВложенныеШтрихкоды = Справочники.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкодыУпаковок(
		СписокШтрихкодовУпаковок, ПараметрыСканированияАкцизныхМарок.ОрганизацияЕГАИС);
	
	Результат.ВложенныеШтрихкоды = ВложенныеШтрихкоды;
	
	ВложенныеШтрихкоды.ДеревоУпаковок.Колонки.Добавить("ЕстьОшибки",  Новый ОписаниеТипов("Булево"));
	ВложенныеШтрихкоды.ДеревоУпаковок.Колонки.Добавить("ТекстОшибки", ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(300));
	
	Для Каждого СтрокаВерхнегоУровня Из ВложенныеШтрихкоды.ДеревоУпаковок.Строки Цикл
		
		ЗначениеШтрихкода = СтрокаВерхнегоУровня.ЗначениеШтрихкода;
		
		ДанныеШтрихкода = АкцизныеМаркиКлиентСервер.СтруктураДанныхШтрихкода(ЗначениеШтрихкода);
		ДанныеШтрихкода.ШтрихкодУпаковки        = СтрокаВерхнегоУровня.ШтрихкодУпаковки;
		ДанныеШтрихкода.ТипШтрихкода            = СтрокаВерхнегоУровня.ТипШтрихкода;
		ДанныеШтрихкода.ТипУпаковки             = СтрокаВерхнегоУровня.ТипУпаковки;
		ДанныеШтрихкода.АлкогольнаяПродукция    = СтрокаВерхнегоУровня.АлкогольнаяПродукция;
		ДанныеШтрихкода.КодАлкогольнойПродукции = СтрокаВерхнегоУровня.КодАлкогольнойПродукции;
		ДанныеШтрихкода.Справка2                = СтрокаВерхнегоУровня.Справка2;
		ДанныеШтрихкода.Номенклатура            = СтрокаВерхнегоУровня.Номенклатура;
		ДанныеШтрихкода.Характеристика          = СтрокаВерхнегоУровня.Характеристика;
		ДанныеШтрихкода.Серия                   = СтрокаВерхнегоУровня.Серия;
		Если ДанныеШтрихкода.ТипУпаковки = Перечисления.ТипыУпаковок.МонотоварнаяУпаковка Тогда
			ДанныеШтрихкода.Количество = СтрокаВерхнегоУровня.КоличествоАкцизныхМарок;
		КонецЕсли;
		
		Если АкцизныеМаркиВДокументе <> Неопределено
			И АкцизныеМаркиВДокументе[СтрокаВерхнегоУровня.ШтрихкодУпаковки] <> Неопределено Тогда
			
			СтрокаВерхнегоУровня.ЕстьОшибки  = Истина;
			СтрокаВерхнегоУровня.ТекстОшибки = НСтр("ru='Уже добавлена в документ'");
			
		Иначе
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("УпаковкаВерхнегоУровня", СтрокаВерхнегоУровня);
			
			НайденныеСтроки = ВложенныеШтрихкоды.МаркированныеТовары.НайтиСтроки(ПараметрыОтбора);
			
			Для Каждого СтрокаМаркированныеТовары Из НайденныеСтроки Цикл
				
				ДанныеМаркированногоТовара = Новый Структура;
				Для Каждого Колонка Из ВложенныеШтрихкоды.МаркированныеТовары.Колонки Цикл
					Если ТипЗнч(СтрокаМаркированныеТовары[Колонка.Имя]) <> Тип("СтрокаДереваЗначений") Тогда
						ДанныеМаркированногоТовара.Вставить(Колонка.Имя, СтрокаМаркированныеТовары[Колонка.Имя]);
					КонецЕсли;
				КонецЦикла;
				
				ТекстОшибки = "";
				Если АкцизныеМаркиВДокументе <> Неопределено
					И АкцизныеМаркиВДокументе[ДанныеМаркированногоТовара.ШтрихкодУпаковки] <> Неопределено Тогда
					
					ТекстОшибки = НСтр("ru='Уже добавлена в документ'");
					
				ИначеЕсли Не ЗначениеЗаполнено(СтрокаМаркированныеТовары.Номенклатура)
					И ПараметрыСканированияАкцизныхМарок.ЗапрашиватьНоменклатуру Тогда
					
					ТекстОшибки = НСтр("ru='Не сопоставлено'");
					
				ИначеЕсли ПараметрыСканированияАкцизныхМарок.КонтрольАкцизныхМарок Тогда
					
					Если ПараметрыСканированияАкцизныхМарок.ДоступныеСтатусы.Найти(ДанныеМаркированногоТовара.Статус) = Неопределено Тогда
						
						Если ЗначениеЗаполнено(ДанныеМаркированногоТовара.Статус) Тогда
							ПредставлениеСтатуса = ДанныеМаркированногоТовара.Статус;
						Иначе
							ПредставлениеСтатуса = НСтр("ru = '<Нет статуса>'");
						КонецЕсли;
						
						ТекстОшибки = ПредставлениеСтатуса;
						
					ИначеЕсли Не ЗначениеЗаполнено(ДанныеМаркированногоТовара.Статус) Тогда
						
						АкцизныеМаркиЕГАИСПереопределяемый.ПроверитьУникальностьАкцизнойМарки(
							ПараметрыСканированияАкцизныхМарок.ОперацияКонтроляАкцизныхМарок,
							ДанныеМаркированногоТовара.ЗначениеШтрихкода,
							ТекстОшибки);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ТекстОшибки) Тогда
					СтрокаМаркированныеТовары.СтрокаДерева.ЕстьОшибки  = Истина;
					СтрокаМаркированныеТовары.СтрокаДерева.ТекстОшибки = ТекстОшибки;
				КонецЕсли;
				
				ДанныеШтрихкода.МаркированныеТовары.Добавить(ДанныеМаркированногоТовара);
				
			КонецЦикла;
			
		КонецЕсли;
		
		ПроверитьИЗаполнитьВложенныеШтрихкоды(СтрокаВерхнегоУровня.Строки, ДанныеШтрихкода.ВложенныеШтрихкоды, АкцизныеМаркиВДокументе);
		
		Результат.ОбработанныеШтрихкоды.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПроверитьИЗаполнитьВложенныеШтрихкоды(ДеревоУпаковок, ВложенныеШтрихкоды, АкцизныеМаркиВДокументе) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок Цикл
		
		Если АкцизныеМаркиВДокументе <> Неопределено
			И АкцизныеМаркиВДокументе[СтрокаДерева.ШтрихкодУпаковки] <> Неопределено Тогда
			СтрокаДерева.ЕстьОшибки  = Истина;
			СтрокаДерева.ТекстОшибки = НСтр("ru='Уже добавлена в документ'");
		КонецЕсли;
		
		ВложенныеШтрихкоды.Вставить(СтрокаДерева.ШтрихкодУпаковки, СтрокаДерева.ЗначениеШтрихкода);
		
		ПроверитьИЗаполнитьВложенныеШтрихкоды(СтрокаДерева.Строки, ВложенныеШтрихкоды, АкцизныеМаркиВДокументе);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ШтрихкодыУпаковок(Источник, ОрганизацияЕГАИС, ИмяКолонкиАлкогольнаяПродукция = "АлкогольнаяПродукция") Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекККМ") Тогда
		ИмяКолонкиИдентификаторСтроки = "КлючСтроки";
	Иначе
		ИмяКолонкиИдентификаторСтроки = "ИдентификаторСтроки";
	КонецЕсли;
	
	ТаблицаШтрихкодов = Новый ТаблицаЗначений;
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодУпаковки",             Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодРодительскойУпаковки", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ИдентификаторСтроки",          Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(36)));
	ТаблицаШтрихкодов.Колонки.Добавить("АлкогольнаяПродукция",         Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("Справка2",                     Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("ОрганизацияЕГАИС",             Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	
	Для Каждого СтрокаТЧ Из Источник.АкцизныеМарки Цикл
		
		НоваяСтрока = ТаблицаШтрихкодов.Добавить();
		НоваяСтрока.ШтрихкодУпаковки             = СтрокаТЧ.АкцизнаяМарка;
		НоваяСтрока.ШтрихкодРодительскойУпаковки = СтрокаТЧ.ШтрихкодУпаковки;
		НоваяСтрока.ИдентификаторСтроки          = СтрокаТЧ[ИмяКолонкиИдентификаторСтроки];
		НоваяСтрока.Справка2                     = СтрокаТЧ.Справка2;
		НоваяСтрока.ОрганизацияЕГАИС             = ОрганизацияЕГАИС;
		
		Если ЗначениеЗаполнено(СтрокаТЧ[ИмяКолонкиИдентификаторСтроки])
			И Не ЗначениеЗаполнено(СтрокаТЧ.Справка2) Тогда
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить(ИмяКолонкиИдентификаторСтроки, СтрокаТЧ[ИмяКолонкиИдентификаторСтроки]);
			НайденныеСтроки = Источник.Товары.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				НоваяСтрока.АлкогольнаяПродукция = НайденныеСтроки[0][ИмяКолонкиАлкогольнаяПродукция];
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ИсходныеДанные.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
		|	ИсходныеДанные.ИдентификаторСтроки          КАК ИдентификаторСтроки,
		|	ИсходныеДанные.АлкогольнаяПродукция         КАК АлкогольнаяПродукция,
		|	ИсходныеДанные.Справка2                     КАК Справка2,
		|	ИсходныеДанные.ШтрихкодУпаковки             КАК ШтрихкодУпаковки,
		|	ИсходныеДанные.ШтрихкодРодительскойУпаковки КАК ШтрихкодРодительскойУпаковки
		|ПОМЕСТИТЬ ВТВложенныеШтрихкодыИсходныеДанные
		|ИЗ
		|	&ИсходныеДанные КАК ИсходныеДанные");
	
	ПараметрыФормированияТекстаЗапроса = Справочники.ШтрихкодыУпаковокТоваров.ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
	ПараметрыФормированияТекстаЗапроса.ДокументСсылка                  = Неопределено;
	ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Истина;
	ТекстыЗапроса.Добавить(
		Справочники.ШтрихкодыУпаковокТоваров.ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса),
		"ВложенныеШтрихкоды");
	
	МенеджерВременнойТаблицы = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременнойТаблицы;
	Запрос.УстановитьПараметр("ИсходныеДанные", ТаблицаШтрихкодов);
	РезультатыЗапроса = ГосударственныеИнформационныеСистемы.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	ШтрихкодыУпаковок = Справочники.ШтрихкодыУпаковокТоваров.ВложенныеШтрихкодыУпаковокПоДокументу(
		РезультатыЗапроса.ВложенныеШтрихкоды.Выбрать(), МенеджерВременнойТаблицы);
	
	Возврат ШтрихкодыУпаковок;
	
КонецФункции

//#КонецОбласти

//#Область ЗаполнениеДокументов

Функция ОбработатьВыборНоменклатуры(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения) Экспорт
	
	ПараметрыСканированияАкцизныхМарок = АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок(Форма);
	
	ДанныеШтрихкода = АкцизныеМаркиВызовСервера.ОбработатьДанныеШтрихкодаПослеВыбораНоменклатуры(РезультатВыбора, РезультатОбработкиШтрихкода);
	
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Форма.ИмяФормы);
	
	Если РезультатОбработкиШтрихкода.ПараметрыВыбораНоменклатуры.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодАкцизнойМарки(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканированияАкцизныхМарок);
		
		ОбработатьРезультатДобавленияШтрихкодаАкцизнойМарки(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканированияАкцизныхМарок,
			РезультатДобавленияШтрихкодаВДокумент);
		
	ИначеЕсли РезультатОбработкиШтрихкода.ПараметрыВыбораНоменклатуры.ТипШтрихкода = Перечисления.ТипыШтрихкодов.DataMatrix Тогда
		
		РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодDataMatrix(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканированияАкцизныхМарок);
		
	Иначе
		
		ВложенныеШтрихкоды = ПолучитьИзВременногоХранилища(РезультатОбработкиШтрихкода.АдресДереваУпаковок);
		
		РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодУпаковки(
			Форма,
			ДанныеШтрихкода,
			ВложенныеШтрихкоды,
			ПараметрыСканированияАкцизныхМарок);
		
		ОбработатьРезультатДобавленияШтрихкодаУпаковки(
			Форма,
			ДанныеШтрихкода,
			ПараметрыСканированияАкцизныхМарок,
			РезультатДобавленияШтрихкодаВДокумент);
		
	КонецЕсли;
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

Функция ОбработатьВыборСправки2(Форма, РезультатВыбора, РезультатОбработкиШтрихкода, КэшированныеЗначения) Экспорт
	
	ПараметрыСканированияАкцизныхМарок = АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок(Форма);
	
	ДанныеШтрихкода = АкцизныеМаркиВызовСервера.ОбработатьДанныеШтрихкодаПослеВыбораСправки2(РезультатВыбора, РезультатОбработкиШтрихкода);
	
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Форма.ИмяФормы);
	
	РезультатДобавленияШтрихкодаВДокумент = МенеджерДокумента.ОбработатьШтрихкодDataMatrix(
		Форма,
		ДанныеШтрихкода,
		ПараметрыСканированияАкцизныхМарок);
	
	Возврат РезультатДобавленияШтрихкодаВДокумент;
	
КонецФункции

Функция РезультатОбработкиШтрихкода(ДанныеШтрихкода = Неопределено) Экспорт
	
	РезультатОбработкиШтрихкода = Новый Структура;
	
	// Для выбора значений на клиенте.
	РезультатОбработкиШтрихкода.Вставить("АдресДанныхШтрихкода",        "");
	РезультатОбработкиШтрихкода.Вставить("ПараметрыВыбораНоменклатуры", Новый Структура);
	РезультатОбработкиШтрихкода.Вставить("ТребуетсяВыборНоменклатуры",  Ложь);
	РезультатОбработкиШтрихкода.Вставить("Справки2",                    Новый Массив);
	РезультатОбработкиШтрихкода.Вставить("ТребуетсяВыборСправки2",      Ложь);
	
	РезультатОбработкиШтрихкода.Вставить("ТребуетсяОбработкаШтрихкода", Ложь);
	РезультатОбработкиШтрихкода.Вставить("ИсходныеДанные");
	
	// Для вывода сообщения об ошибке.
	РезультатОбработкиШтрихкода.Вставить("АлкогольнаяПродукция",      Неопределено);
	РезультатОбработкиШтрихкода.Вставить("Штрихкод",                  "");
	РезультатОбработкиШтрихкода.Вставить("ТипШтрихкода",              Неопределено);
	РезультатОбработкиШтрихкода.Вставить("ТипУпаковки",               Неопределено);
	РезультатОбработкиШтрихкода.Вставить("ТекстОшибки",               "");
	РезультатОбработкиШтрихкода.Вставить("АдресДереваУпаковок",       "");
	РезультатОбработкиШтрихкода.Вставить("ЕстьОшибкиВДеревеУпаковок", Ложь);
	
	Если ЗначениеЗаполнено(ДанныеШтрихкода) Тогда
		РезультатОбработкиШтрихкода.АлкогольнаяПродукция = ДанныеШтрихкода.АлкогольнаяПродукция;
		РезультатОбработкиШтрихкода.Штрихкод             = ДанныеШтрихкода.Штрихкод;
		РезультатОбработкиШтрихкода.ТипШтрихкода         = ДанныеШтрихкода.ТипШтрихкода;
	КонецЕсли;
	
	// Для обработки строк табличной части.
	РезультатОбработкиШтрихкода.Вставить("ДобавленныеСтроки", Новый Массив);
	РезультатОбработкиШтрихкода.Вставить("ИзмененныеСтроки",  Новый Массив);
	
	Возврат РезультатОбработкиШтрихкода;
	
КонецФункции

// Удаляет акцизные марки по идентификаторам строк.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма.
//  Данные - Массив (Строка) - Идентификаторы строк акцизных марок.
//
Процедура УдалитьАкцизныеМаркиЧека(Форма, Данные) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Если ТипЗнч(Данные) = Тип("Массив") Тогда
		ИдентификаторыСтрок = Данные;
	Иначе
		ИдентификаторыСтрок = Новый Массив;
		ИдентификаторыСтрок.Добавить(Данные);
	КонецЕсли;
	
	Для Каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
		
		Отбор = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
		НайденныеСтроки = Источник.АкцизныеМарки.НайтиСтроки(Отбор);
		
		Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
			Источник.АкцизныеМарки.Удалить(Источник.АкцизныеМарки.Индекс(СтрокаТЧ));
		КонецЦикла;
		
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "АдресСоответствияАкцизныхМарок")
		И Форма.АдресСоответствияАкцизныхМарок <> "" Тогда
		ПоместитьВоВременноеХранилище(Неопределено, Форма.АдресСоответствияАкцизныхМарок);
	КонецЕсли;
	
КонецПроцедуры

// Удаляет акцизные марки по справкам 2.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма
//  Данные - Массив (СправочникСсылка.Справки2ЕГАИС) - Справки 2.
//
Процедура УдалитьАкцизныеМаркиПоСправкам2(Форма, Данные) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Если ТипЗнч(Данные) = Тип("Массив") Тогда
		Справки2 = Данные;
	Иначе
		Справки2 = Новый Массив;
		Справки2.Добавить(Данные);
	КонецЕсли;
	
	Для Каждого Справка2 Из Справки2 Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Справка2", Справка2);
		НайденныеСтроки = Источник.Товары.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			АкцизныеМаркиСтрокиТЧ = Источник.АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТЧ Из АкцизныеМаркиСтрокиТЧ Цикл
				Источник.АкцизныеМарки.Удалить(СтрокаТЧ);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПараметрыЗаполненияТоваровИАкцизныхМарок(Форма, ДобавлятьКоличество = Истина, ПараметрыСканированияАкцизныхМарок = Неопределено) Экспорт
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ДобавлятьКоличество",            ДобавлятьКоличество);
	ПараметрыЗаполнения.Вставить("ИзмененныеСтроки",               Новый Массив);
	ПараметрыЗаполнения.Вставить("ДобавленныеСтроки",              Новый Массив);
	ПараметрыЗаполнения.Вставить("ЕстьСправка2",                   Истина);
	ПараметрыЗаполнения.Вставить("ТолькоПустаяСправка2",           Ложь);
	ПараметрыЗаполнения.Вставить("УчитыватьСерии",                 Истина);
	ПараметрыЗаполнения.Вставить("ТекущаяСтрока",                  Неопределено);
	ПараметрыЗаполнения.Вставить("ЕстьКоличествоАкцизныхМарок",    Истина);
	ПараметрыЗаполнения.Вставить("ПараметрыУказанияСерий",         Неопределено);
	ПараметрыЗаполнения.Вставить("ИмяКолонкиАлкогольнаяПродукция", "АлкогольнаяПродукция");
	ПараметрыЗаполнения.Вставить("ИмяКолонкиКоличество",           "Количество");
	ПараметрыЗаполнения.Вставить("ИмяКолонкиКоличествоУпаковок",   "КоличествоУпаковок");
	ПараметрыЗаполнения.Вставить("ТипШтрихКода",                   Неопределено);
	
	Если ПараметрыСканированияАкцизныхМарок = Неопределено Тогда
		ПараметрыЗаполнения.Вставить("ПараметрыСканированияАкцизныхМарок", АкцизныеМаркиКлиентСервер.ПараметрыСканированияАкцизныхМарок(Форма));
	Иначе
		ПараметрыЗаполнения.Вставить("ПараметрыСканированияАкцизныхМарок", ПараметрыСканированияАкцизныхМарок);
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Заполняет табличную часть Товары по данным дерева упаковок.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Заполняемый документ.
//  ДеревоУпаковок - ДеревоЗначений - дерево упаковок.
//  УпаковкаВерхнегоУровня - СправочникСсылка.ШтрихкодыУпаковокТоваров - Упаковка верхнего уровня.
//
Процедура ЗаполнитьТовары(ДокументОбъект, ДеревоУпаковок, ПараметрыЗаполнения) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок.Строки Цикл
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ПрочиеЗоныПересчетаАлкогольнойПродукции.БутылкиБезКоробки Тогда
			
			ЗаполнитьТовары(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения);
			
			Продолжить;
			
		КонецЕсли;
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			КоличествоАкцизныхМарок = 1;
		Иначе
			КоличествоАкцизныхМарок = СтрокаДерева.КоличествоАкцизныхМарок;
		КонецЕсли;
		
		Если СтрокаДерева.АлкогольнаяПродукция <> Неопределено
			И СтрокаДерева.Номенклатура <> Неопределено
			И СтрокаДерева.Характеристика <> Неопределено
			И СтрокаДерева.Серия <> Неопределено
			И СтрокаДерева.Справка2 <> Неопределено Тогда
			
			ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения, КоличествоАкцизныхМарок);
			
		Иначе
			
			ЗаполнитьТовары(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличные части Акцизные марки и Товары по данным дерева упаковок.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Заполняемый документ.
//  ДеревоУпаковок - ДеревоЗначений - дерево упаковок.
//  УпаковкаВерхнегоУровня - СправочникСсылка.ШтрихкодыУпаковокТоваров - Упаковка верхнего уровня.
//
Процедура ЗаполнитьТоварыИАкцизныеМарки(ДокументОбъект, ДеревоУпаковок, ПараметрыЗаполнения, УпаковкаВерхнегоУровня = Неопределено, ЗаполнятьТолькоТовары = Ложь) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок.Строки Цикл
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ПрочиеЗоныПересчетаАлкогольнойПродукции.БутылкиБезКоробки Тогда
			
			ЗаполнитьТоварыИАкцизныеМарки(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения,
				УпаковкаВерхнегоУровня);
			
			Продолжить;
			
		КонецЕсли;
		
		Если УпаковкаВерхнегоУровня = Неопределено
			И СтрокаДерева.ТипУпаковки <> Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			УпаковкаВерхнегоУровняСтрокиДерева = СтрокаДерева.ШтрихкодУпаковки;
		Иначе
			УпаковкаВерхнегоУровняСтрокиДерева = УпаковкаВерхнегоУровня;
		КонецЕсли;
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			КоличествоАкцизныхМарок = 1;
		Иначе
			КоличествоАкцизныхМарок = СтрокаДерева.КоличествоАкцизныхМарок;
		КонецЕсли;
		
		Если ПараметрыЗаполнения.ТолькоПустаяСправка2 Тогда
			Справка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка();
		Иначе
			Справка2 = СтрокаДерева.Справка2;
		КонецЕсли;
		
		ФлагЗаполнятьТолькоТовары = ЗаполнятьТолькоТовары;
		Если Не ФлагЗаполнятьТолькоТовары
			И ЗначениеЗаполнено(Справка2) Тогда
			
			ФлагЗаполнятьТолькоТовары = Истина;
			
			СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
			СтрокаТЧАкцизныеМарки.АкцизнаяМарка = СтрокаДерева.ШтрихкодУпаковки;
			СтрокаТЧАкцизныеМарки.Справка2      = Справка2;
			СтрокаТЧАкцизныеМарки.Количество    = КоличествоАкцизныхМарок;
			
			Если СтрокаДерева.ШтрихкодУпаковки <> УпаковкаВерхнегоУровняСтрокиДерева Тогда
				СтрокаТЧАкцизныеМарки.ШтрихкодУпаковки = УпаковкаВерхнегоУровняСтрокиДерева;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрокаДерева.АлкогольнаяПродукция <> Неопределено
			И СтрокаДерева.Номенклатура <> Неопределено
			И СтрокаДерева.Характеристика <> Неопределено
			И СтрокаДерева.Серия <> Неопределено
			И СтрокаДерева.Справка2 <> Неопределено Тогда
			
			СтрокаТЧТовары = ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения, КоличествоАкцизныхМарок);
			
			Если Не ФлагЗаполнятьТолькоТовары Тогда
				
				Если Не ЗначениеЗаполнено(СтрокаТЧТовары.ИдентификаторСтроки) Тогда
					СтрокаТЧТовары.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
				КонецЕсли;
				
				СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
				СтрокаТЧАкцизныеМарки.ИдентификаторСтроки = СтрокаТЧТовары.ИдентификаторСтроки;
				СтрокаТЧАкцизныеМарки.АкцизнаяМарка       = СтрокаДерева.ШтрихкодУпаковки;
				СтрокаТЧАкцизныеМарки.Количество          = КоличествоАкцизныхМарок;
				
				Если СтрокаДерева.ШтрихкодУпаковки <> УпаковкаВерхнегоУровняСтрокиДерева Тогда
					СтрокаТЧАкцизныеМарки.ШтрихкодУпаковки = УпаковкаВерхнегоУровняСтрокиДерева;
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если УпаковкаВерхнегоУровняСтрокиДерева = Неопределено
				И СтрокаДерева.ТипУпаковки <> Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
				УпаковкаВерхнегоУровняСтрокиДерева = СтрокаДерева.ШтрихкодУпаковки;
			КонецЕсли;
			
			ЗаполнитьТоварыИАкцизныеМарки(
				ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения,
				УпаковкаВерхнегоУровняСтрокиДерева, ФлагЗаполнятьТолькоТовары);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличную часть Товары по данным таблицы немаркируемой продукции.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - Заполняемый документ.
//  ДеревоУпаковок - ДеревоЗначений - дерево упаковок.
//  ПараметрыЗаполнения - Структура - Параметры, полученные из функции ПараметрыЗаполненияТоваровИАкцизныхМарок.
//
Процедура ЗаполнитьНеМаркируемыеТовары(ДокументОбъект, ТаблицаНеМаркируемойПродукции, ПараметрыЗаполнения) Экспорт
	
	Для Каждого СтрокаТаблицы Из ТаблицаНеМаркируемойПродукции Цикл
		
		ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаТаблицы, ПараметрыЗаполнения, СтрокаТаблицы.Количество);
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиСтрокиТоваров(Товары, ПараметрыОтбора, Справка2, АлкогольнаяПродукция, ПараметрыЗаполнения) Экспорт
	
	КлючевыеРеквизиты = ПараметрыЗаполнения.ПараметрыСканированияАкцизныхМарок.КлючевыеРеквизиты;
	
	ЕстьКлючевыеРеквизиты = Ложь;
	ПараметрыОтбораКлючевыхРеквизитов = Новый Структура;
	ТаблицаКлючевыхРеквизитов = Новый ТаблицаЗначений;
	Для Каждого ИмяКлючевогоРеквизита Из КлючевыеРеквизиты Цикл
		ЕстьКлючевыеРеквизиты = Истина;
		ТаблицаКлючевыхРеквизитов.Колонки.Добавить(ИмяКлючевогоРеквизита);
		ПараметрыОтбораКлючевыхРеквизитов.Вставить(ИмяКлючевогоРеквизита);
	КонецЦикла;
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("ПолноеСоответствие");
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("КЗаполнению");
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("Приоритет");
	ТаблицаКлючевыхРеквизитов.Колонки.Добавить("ВключаетТекущуюСтроку");
	
	МассивСтрок = Товары.НайтиСтроки(ПараметрыОтбора);
	Если МассивСтрок.Количество() > 0 Тогда
		
		Для Каждого НайденнаяСтрока Из МассивСтрок Цикл
			
			Если ЕстьКлючевыеРеквизиты Тогда
				
				Для Каждого ИмяКлючевогоРеквизита Из КлючевыеРеквизиты Цикл
					ПараметрыОтбораКлючевыхРеквизитов[ИмяКлючевогоРеквизита] = НайденнаяСтрока[ИмяКлючевогоРеквизита];
				КонецЦикла;
				
				РезультатПоиска = ТаблицаКлючевыхРеквизитов.НайтиСтроки(ПараметрыОтбораКлючевыхРеквизитов);
				Если РезультатПоиска.Количество() > 0 Тогда
					
					НоваяСтрока = РезультатПоиска[0];
					
				Иначе
					
					НоваяСтрока = ТаблицаКлючевыхРеквизитов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
					
					НоваяСтрока.ПолноеСоответствие = Новый Массив;
					НоваяСтрока.КЗаполнению        = Новый Массив;
					
				КонецЕсли;
				
			Иначе
				
				Если ТаблицаКлючевыхРеквизитов.Количество() = 0 Тогда
					НоваяСтрока = ТаблицаКлючевыхРеквизитов.Добавить();
					НоваяСтрока.ПолноеСоответствие = Новый Массив;
					НоваяСтрока.КЗаполнению        = Новый Массив;
				Иначе
					НоваяСтрока = ТаблицаКлючевыхРеквизитов[0];
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПараметрыЗаполнения.ЕстьСправка2 Тогда
				Если НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = АлкогольнаяПродукция
					И НайденнаяСтрока.Справка2 = Справка2 Тогда
					НоваяСтрока.ПолноеСоответствие.Добавить(НайденнаяСтрока);
				ИначеЕсли НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = АлкогольнаяПродукция
					И Не ЗначениеЗаполнено(НайденнаяСтрока.Справка2) Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				ИначеЕсли Не ЗначениеЗаполнено(НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция])
					И Не ЗначениеЗаполнено(НайденнаяСтрока.Справка2) Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				ИначеЕсли ПараметрыЗаполнения.ТипШтрихКода = Перечисления.ТипыШтрихкодов.DataMatrix Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				КонецЕсли;
			Иначе
				Если НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = АлкогольнаяПродукция Тогда
					НоваяСтрока.ПолноеСоответствие.Добавить(НайденнаяСтрока);
				ИначеЕсли Не ЗначениеЗаполнено(НайденнаяСтрока[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция]) Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				ИначеЕсли ПараметрыЗаполнения.ТипШтрихКода = Перечисления.ТипыШтрихкодов.DataMatrix Тогда
					НоваяСтрока.КЗаполнению.Добавить(НайденнаяСтрока);
				КонецЕсли;
			КонецЕсли;
			
			Если ПараметрыЗаполнения.ТекущаяСтрока = НайденнаяСтрока
				И НоваяСтрока.ВключаетТекущуюСтроку = Неопределено Тогда
				НоваяСтрока.ВключаетТекущуюСтроку = Истина;
			КонецЕсли;
			
			Если НоваяСтрока.ПолноеСоответствие.Количество() > 0
				И НоваяСтрока.КЗаполнению.Количество() = 0 Тогда
				НоваяСтрока.Приоритет = 1;
			ИначеЕсли НоваяСтрока.ПолноеСоответствие.Количество() > 0
				И НоваяСтрока.КЗаполнению.Количество() > 0 Тогда
				НоваяСтрока.Приоритет = 2;
			Иначе
				НоваяСтрока.Приоритет = 3;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаКлючевыхРеквизитов.Сортировать("ВключаетТекущуюСтроку УБЫВ, Приоритет ВОЗР");
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ПолноеСоответствие");
	ВозвращаемоеЗначение.Вставить("КЗаполнению");
	
	Если ТаблицаКлючевыхРеквизитов.Количество() > 0 Тогда
		Результат = ТаблицаКлючевыхРеквизитов[0];
		Если Результат.ПолноеСоответствие.Количество() > 0 Тогда
			Для Каждого ЭлементДанных Из Результат.ПолноеСоответствие Цикл
				Если ЭлементДанных = ПараметрыЗаполнения.ТекущаяСтрока Тогда
					ВозвращаемоеЗначение.ПолноеСоответствие = ЭлементДанных;
				КонецЕсли;
			КонецЦикла;
			Если ВозвращаемоеЗначение.ПолноеСоответствие = Неопределено Тогда
				ВозвращаемоеЗначение.ПолноеСоответствие = Результат.ПолноеСоответствие[0];
			КонецЕсли;
		КонецЕсли;
		Если Результат.КЗаполнению.Количество() > 0 Тогда
			ВозвращаемоеЗначение.КЗаполнению = Результат.КЗаполнению;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Процедура ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция = Истина) Экспорт
	
	ЭтоДобавленнаяСтрока = ПараметрыЗаполнения.ДобавленныеСтроки.Найти(СтрокаТЧТовары) <> Неопределено;
	ЭтоИзмененнаяСтрока  = ПараметрыЗаполнения.ИзмененныеСтроки.Найти(СтрокаТЧТовары) <> Неопределено;
	
	Если ПараметрыЗаполнения.ДобавлятьКоличество
		Или ЭтоДобавленнаяСтрока
		Или ЭтоИзмененнаяСтрока Тогда
		
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = СтрокаТЧТовары.КоличествоАкцизныхМарок + Количество;
			Если СтрокаТЧТовары.КоличествоАкцизныхМарок > СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] Тогда
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
			КонецЕсли;
		Иначе
			СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] + Количество;
		КонецЕсли;
		
		Если ЭтоДобавленнаяСтрока Тогда
			Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
				Если СтрокаТЧТовары.КоличествоАкцизныхМарок > СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] Тогда
					СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
				КонецЕсли;
			Иначе
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] + Количество;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = Количество;
		КонецЕсли;
		СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество] = Количество;
	КонецЕсли;
	
	Если Не ЭтоИзмененнаяСтрока И Не ЭтоДобавленнаяСтрока Тогда
		ПараметрыЗаполнения.ИзмененныеСтроки.Добавить(СтрокаТЧТовары);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция = Истина) Экспорт
	
	Если ПараметрыЗаполнения.ДобавлятьКоличество Тогда
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = СтрокаТЧТовары.КоличествоАкцизныхМарок + Количество;
			Если СтрокаТЧТовары.КоличествоАкцизныхМарок > СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] Тогда
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары.КоличествоАкцизныхМарок;
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         = СтрокаТЧТовары.КоличествоАкцизныхМарок;
			КонецЕсли;
		Иначе
			СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         + Количество;
			СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] + Количество;
		КонецЕсли;
	Иначе
		Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок Тогда
			СтрокаТЧТовары.КоличествоАкцизныхМарок = Количество;
		КонецЕсли;
		СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличество]         = Количество;
		СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиКоличествоУпаковок] = Количество;
	КонецЕсли;
	
	ПараметрыЗаполнения.ДобавленныеСтроки.Добавить(СтрокаТЧТовары);
	
КонецПроцедуры

//#КонецОбласти

//#КонецОбласти

//#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверитьЗаполнениеАкцизныхМарокТТНИсходящейЕГАИС(Объект, Отказ) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                                                          КАК НомерСтроки,
	|	ТаблицаТовары.ИдентификаторСтроки                                                                  КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(ТаблицаТовары.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Справка2 КАК Справочник.Справки2ЕГАИС)                                      КАК Справка2,
	|	ТаблицаТовары.Количество                                                                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                      КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки              КАК ИдентификаторСтроки,
	|	Товары.АлкогольнаяПродукция             КАК АлкогольнаяПродукция,
	|	Товары.Справка2                         КАК Справка2,
	|	ЕСТЬNULL(Справки2ЕГАИС.Поштучная, ЛОЖЬ) КАК Справка2Поштучная,
	|	Товары.Количество                       КАК Количество
	|ПОМЕСТИТЬ МаркируемыеТовары
	|ИЗ
	|	Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
	|		ПО Товары.Справка2 = Справки2ЕГАИС.Ссылка
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.Маркируемый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемыеТовары.Справка2 КАК Справка2
	|ПОМЕСТИТЬ ТоварыСправки2
	|ИЗ
	|	МаркируемыеТовары КАК МаркируемыеТовары
	|ГДЕ
	|	МаркируемыеТовары.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	МаркируемыеТовары.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМаркиЕГАИС.Справка2                  КАК Справка2,
	|	КОЛИЧЕСТВО(АкцизныеМаркиЕГАИС.АкцизнаяМарка) КАК Количество
	|ПОМЕСТИТЬ Регистр3ЕГАИС
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыСправки2 КАК ТоварыСправки2
	|		ПО АкцизныеМаркиЕГАИС.Справка2 = ТоварыСправки2.Справка2
	|ГДЕ
	|	НЕ АкцизныеМаркиЕГАИС.Статус В (&СтатусыОтсутствует)
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМаркиЕГАИС.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАкцизныеМарки.ИдентификаторСтроки                             КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(ТаблицаАкцизныеМарки.Справка2 КАК Справочник.Справки2ЕГАИС) КАК Справка2,
	|	ТаблицаАкцизныеМарки.Количество                                      КАК Количество
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&ТаблицаАкцизныеМарки КАК ТаблицаАкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СУММА(АкцизныеМарки.Количество)   КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиПоСтрокам
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|ГДЕ
	|	АкцизныеМарки.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.Справка2          КАК Справка2,
	|	СУММА(АкцизныеМарки.Количество) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиПоСправкам2
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|ГДЕ
	|	АкцизныеМарки.ИдентификаторСтроки = """"
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемыеТовары.НомерСтроки                    КАК НомерСтроки,
	|	МаркируемыеТовары.АлкогольнаяПродукция           КАК АлкогольнаяПродукция,
	|	МаркируемыеТовары.Количество                     КАК МаркируемаяПродукцияКоличество,
	|	ЕСТЬNULL(АкцизныеМаркиПоСправкам2.Количество, 0)
	|	+ ЕСТЬNULL(АкцизныеМаркиПоСтрокам.Количество, 0) КАК АкцизныеМаркиКоличество
	|ИЗ
	|	МаркируемыеТовары КАК МаркируемыеТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиПоСтрокам КАК АкцизныеМаркиПоСтрокам
	|		ПО МаркируемыеТовары.ИдентификаторСтроки = АкцизныеМаркиПоСтрокам.ИдентификаторСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиПоСправкам2 КАК АкцизныеМаркиПоСправкам2
	|		ПО МаркируемыеТовары.Справка2 = АкцизныеМаркиПоСправкам2.Справка2
	|	ЛЕВОЕ СОЕДИНЕНИЕ Регистр3ЕГАИС КАК Регистр3ЕГАИС
	|		ПО МаркируемыеТовары.Справка2 = Регистр3ЕГАИС.Справка2
	|ГДЕ
	|	(МаркируемыеТовары.Справка2Поштучная ИЛИ ЕСТЬNULL(Регистр3ЕГАИС.Количество, 0) > 0)
	|	И МаркируемыеТовары.Количество 
	|		<> (ЕСТЬNULL(АкцизныеМаркиПоСправкам2.Количество, 0) + ЕСТЬNULL(АкцизныеМаркиПоСтрокам.Количество, 0))
	|");
	
	ТаблицаТовары        = Объект.Товары.Выгрузить(, "НомерСтроки, ИдентификаторСтроки, АлкогольнаяПродукция, Справка2, Количество");
	ТаблицаАкцизныеМарки = Объект.АкцизныеМарки.Выгрузить(, "ИдентификаторСтроки, Справка2, Количество");
	
	СтатусыОтсутствует = Новый Массив();
	СтатусыОтсутствует.Добавить(Перечисления.СтатусыАкцизныхМарок.Реализована);
	СтатусыОтсутствует.Добавить(Перечисления.СтатусыАкцизныхМарок.Отсутствует);
	
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	Запрос.УстановитьПараметр("ТаблицаАкцизныеМарки", ТаблицаАкцизныеМарки);
	Запрос.УстановитьПараметр("СтатусыОтсутствует", СтатусыОтсутствует);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
			Выборка.НомерСтроки,
			Выборка.АлкогольнаяПродукция,
			Выборка.МаркируемаяПродукцияКоличество,
			Выборка.АкцизныеМаркиКоличество);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Объект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеАкцизныхМарокЧекаЕГАИС(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены = Ложь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция,
	|	Товары.ИдентификаторСтроки,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция,
	|	Товары.ИдентификаторСтроки,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ МаркируемаяПродукцияКоличество
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО Товары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции.Маркируемый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиКоличество
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемаяПродукцияКоличество.АлкогольнаяПродукция,
	|	МаркируемаяПродукцияКоличество.Количество КАК КоличествоМаркируемаяПродукция,
	|	ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0) КАК КоличествоАкцизныеМарки,
	|	МаркируемаяПродукцияКоличество.НомерСтроки
	|ИЗ
	|	МаркируемаяПродукцияКоличество КАК МаркируемаяПродукцияКоличество
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиКоличество КАК АкцизныеМаркиКоличество
	|		ПО МаркируемаяПродукцияКоличество.ИдентификаторСтроки = АкцизныеМаркиКоличество.ИдентификаторСтроки
	|ГДЕ
	|	МаркируемаяПродукцияКоличество.Количество <> ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0)
	|	И &УсловиеАкцизныеМаркиЗаполнены
	|");
	
	Если ПроверятьТолькоЕслиЗаполнены Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеАкцизныеМаркиЗаполнены", "ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0) > 0");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеАкцизныеМаркиЗаполнены", "Истина");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Товары",        Объект.Товары.Выгрузить(, "АлкогольнаяПродукция, ИдентификаторСтроки, Количество, НомерСтроки"));
	Запрос.УстановитьПараметр("АкцизныеМарки", Объект.АкцизныеМарки.Выгрузить(, "ИдентификаторСтроки"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
		                        Выборка.НомерСтроки,
		                        Выборка.АлкогольнаяПродукция,
		                        Выборка.КоличествоМаркируемаяПродукция,
		                        Выборка.КоличествоАкцизныеМарки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),,
				Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеАкцизныхМарок(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены = Ложь, Ключ = Неопределено) Экспорт
	
	Если Ключ = Неопределено Тогда
		Ключ = Новый Структура("ВидДокумента", Перечисления.ВидыДокументовЕГАИС.ПустаяСсылка());
		ЗаполнитьЗначенияСвойств(Ключ, Объект);
	КонецЕсли;
	
	Если Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1
		Или Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3
		Или Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1
		Или Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра3
		ИЛИ Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ПустаяСсылка() Тогда
		ПроверитьЗаполнениеАкцизныхМарокРегистры13(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены);
	ИначеЕсли Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2
		Или Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2
		Или Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ВозвратИзРегистра2
		Или Ключ.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ПередачаВРегистр2 Тогда
		ПроверитьЗаполнениеАкцизныхМарокРегистр2(Объект, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеАкцизныхМарокРегистры13(Объект, Отказ, ПроверятьТолькоЕслиЗаполнены)
	
	Товары        = Объект.Товары.Выгрузить();
	АкцизныеМарки = Объект.АкцизныеМарки.Выгрузить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки КАК НомерСтроки,
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(Т.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(Т.Справка2 КАК Справочник.Справки2ЕГАИС) КАК Справка2,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки          КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Справка2             КАК Справка2,
	|	Товары.Справка2.Поштучная   КАК Поштучная,
	|	Товары.Количество           КАК Количество,
	|	0                           КАК КоличествоАкцизныхМарок
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Т.Справка2 КАК Справка2,
	|	Т.Количество КАК Количество,
	|	ВЫРАЗИТЬ(Т.АкцизнаяМарка КАК Справочник.ШтрихкодыУпаковокТоваров) КАК АкцизнаяМарка
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	АкцизныеМарки.Справка2            КАК Справка2,
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.АкцизнаяМарка.ТипШтрихкода = ЗНАЧЕНИЕ(Перечисление.ТипыШтрихкодов.DataMatrix)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                             КАК Поштучная,
	|	СУММА(АкцизныеМарки.Количество)   КАК Количество
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки,
	|	АкцизныеМарки.Справка2,
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.АкцизнаяМарка.ТипШтрихкода = ЗНАЧЕНИЕ(Перечисление.ТипыШтрихкодов.DataMatrix)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	Запрос.Параметры.Вставить("АкцизныеМарки", АкцизныеМарки);
	Пакет = Запрос.ВыполнитьПакет();
	Товары = Пакет[1].Выгрузить();
	АкцизныеМарки = Пакет[3].Выгрузить();
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки);
		ПараметрыОтбора.Вставить("Справка2",            Справочники.Справки2ЕГАИС.ПустаяСсылка());
		
		НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			Поштучная = СтрокаТЧ.Поштучная;
			ТекстОшибки = НСтр("ru = 'В строке %1 для %2 тип Справки2 не совпадает со считанной акцизной маркой.'");
			Если СтрокаТЧ.Справка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка() Тогда
				Поштучная = НайденныеСтроки[0].Поштучная;
				ТекстОшибки = НСтр("ru = 'В строке %1 для %2 считаны акцизные марки различного типа.'");
			КонецЕсли;
			
			Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
				Если Поштучная <> СтрокаТЧНайденныеСтроки.Поштучная Тогда
					ТекстОшибки = СтрШаблон(ТекстОшибки,
					СтрокаТЧ.НомерСтроки,
					СтрокаТЧ.АлкогольнаяПродукция);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					Объект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "Справка2"),,
					Отказ);
				КонецЕсли;
				СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
			КонецЦикла;
			
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", "");
		ПараметрыОтбора.Вставить("Справка2",            СтрокаТЧ.Справка2);
		
		НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
			СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		Если ПроверятьТолькоЕслиЗаполнены
			И СтрокаТЧ.КоличествоАкцизныхМарок = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТЧ.Количество = СтрокаТЧ.КоличествоАкцизныхМарок Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки,
		                        СтрокаТЧ.НомерСтроки,
		                        СтрокаТЧ.АлкогольнаяПродукция,
		                        СтрокаТЧ.Количество,
		                        СтрокаТЧ.КоличествоАкцизныхМарок);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Объект,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "КоличествоУпаковок"),,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеАкцизныхМарокРегистр2(Объект, Отказ)
	
	Товары        = Объект.Товары.Выгрузить();
	
	ЕстьАкцизныеМарки = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект,"АкцизныеМарки");
	Если ЕстьАкцизныеМарки Тогда 
		АкцизныеМарки = Объект.АкцизныеМарки.Выгрузить();
	Иначе 
		АкцизныеМарки = ПустаяТаблицаАкцизныеМарки();
		Товары.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки КАК НомерСтроки,
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫРАЗИТЬ(Т.АлкогольнаяПродукция КАК Справочник.КлассификаторАлкогольнойПродукцииЕГАИС) КАК АлкогольнаяПродукция,
	|	ВЫРАЗИТЬ(Т.Справка2 КАК Справочник.Справки2ЕГАИС) КАК Справка2,
	|	Т.Количество КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                       КАК НомерСтроки,
	|	Товары.ИдентификаторСтроки               КАК ИдентификаторСтроки,
	|	Товары.АлкогольнаяПродукция              КАК АлкогольнаяПродукция,
	|	Товары.Справка2                          КАК Справка2,
	|	ЕСТЬNULL(Товары.Справка2.Поштучная,ЛОЖЬ) КАК Поштучная,
	|	Товары.Количество                        КАК Количество,
	|	0                                        КАК КоличествоАкцизныхМарок
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Т.Справка2 КАК Справка2,
	|	Т.Количество КАК Количество,
	|	ВЫРАЗИТЬ(Т.АкцизнаяМарка КАК Справочник.ШтрихкодыУпаковокТоваров) КАК АкцизнаяМарка
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	АкцизныеМарки.Справка2            КАК Справка2,
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.АкцизнаяМарка.ТипШтрихкода = ЗНАЧЕНИЕ(Перечисление.ТипыШтрихкодов.DataMatrix)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                             КАК Поштучная,
	|	СУММА(АкцизныеМарки.Количество)   КАК Количество
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки,
	|	АкцизныеМарки.Справка2,
	|	ВЫБОР
	|		КОГДА АкцизныеМарки.АкцизнаяМарка.ТипШтрихкода = ЗНАЧЕНИЕ(Перечисление.ТипыШтрихкодов.DataMatrix)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	Запрос.Параметры.Вставить("АкцизныеМарки", АкцизныеМарки);
	Пакет = Запрос.ВыполнитьПакет();
	Товары = Пакет[1].Выгрузить();
	АкцизныеМарки = Пакет[3].Выгрузить();
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		Если СтрокаТЧ.Поштучная = Истина Тогда
			ТекстОшибки = СтрШаблон(
				НСтр("ru = 'В строке %1 для %2 указана поштучная Справка2 которая не может быть учтена в регистре 2 ЕГАИС.'"),
				СтрокаТЧ.НомерСтроки,
				СтрокаТЧ.АлкогольнаяПродукция);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "Справка2"),,
				Отказ);
			Продолжить;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки);
		ПараметрыОтбора.Вставить("Поштучная",           Истина);
		ПараметрыОтбора.Вставить("Справка2",            Справочники.Справки2ЕГАИС.ПустаяСсылка());
		
		НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
			ТекстОшибки = НСтр("ru = 'В строке %1 для %2 считана поштучная акцизная марка которая не может быть учтена в регистре 2 ЕГАИС.'");
			ТекстОшибки = СтрШаблон(ТекстОшибки,
				СтрокаТЧ.НомерСтроки,
				СтрокаТЧ.АлкогольнаяПродукция);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТЧ.НомерСтроки, "Справка2"),,
				Отказ);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИсточникОрганизацияЕГАИС(Форма)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	ОрганизацияЕГАИС = Неопределено;
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "ОрганизацияЕГАИС") Тогда
		ОрганизацияЕГАИС = Источник.ОрганизацияЕГАИС;
	Иначе
		МассивСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Форма.ИмяФормы, ".");
		Если МассивСтроки.Количество() > 1 Тогда
			Если МассивСтроки[1] = "ТТНВходящаяЕГАИС" Тогда
				ОрганизацияЕГАИС = Источник.Грузополучатель;
			ИначеЕсли МассивСтроки[1] = "ТТНИсходящаяЕГАИС" Тогда
				ОрганизацияЕГАИС = Источник.Грузоотправитель;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Источник",         Источник);
	ВозвращаемоеЗначение.Вставить("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Заполняет служебные реквизиты в табличной части "Товары" в процедурах ПриСозданииНаСервере
//
// Параметры:
//  Форма				 - УправляемаяФорма - Форма
//  ИмяКолонкиКоличество - Строка - Имя колонки "Количество"
//
Процедура ЗаполнитьСлужебныеРеквизиты(Форма, ИмяКолонкиКоличество = "Количество") Экспорт
	
	ИсточникОрганизацияЕГАИС = ИсточникОрганизацияЕГАИС(Форма);
	Источник         = ИсточникОрганизацияЕГАИС.Источник;
	ОрганизацияЕГАИС = ИсточникОрганизацияЕГАИС.ОрганизацияЕГАИС;
	
	Товары        = Источник.Товары.Выгрузить();
	АкцизныеМарки = Источник.АкцизныеМарки.Выгрузить();
	
	ЕстьКолонкаКоличество = АкцизныеМарки.Колонки.Найти("Количество") <> Неопределено;
	Если Не ЕстьКолонкаКоличество Тогда
		АкцизныеМарки.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		Для Каждого СтрокаТЧ Из АкцизныеМарки Цикл
			СтрокаТЧ.Количество = 1;
		КонецЦикла;
	КонецЕсли;
	
	ЕстьКолонкаСправка2 = Товары.Колонки.Найти("Справка2") <> Неопределено;
	Если Не ЕстьКолонкаСправка2 Тогда
		Товары.Колонки.Добавить("Справка2", Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	КонецЕсли;
	
	АкцизныеМарки.Свернуть("ИдентификаторСтроки, Справка2", "Количество");
	
	ДополнениеКИндексу = 0;
	Если Товары.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		
		ДополнениеКИндексу = 1;
		Товары.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		
		КоличествоСтрок = Товары.Количество() - 1;
		Для НомерСтроки = 0 По КоличествоСтрок Цикл
			Товары[НомерСтроки].НомерСтроки = НомерСтроки;
		КонецЦикла;
		
	КонецЕсли;
	
	ДанныеДляЗаполненияСлужебныхРеквизитов = АкцизныеМаркиЕГАИСПереопределяемый.ДанныеДляЗаполненияСлужебныхРеквизитов(Товары);
	Если ДанныеДляЗаполненияСлужебныхРеквизитов = Неопределено Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.НомерСтроки,
		|	Т.ИдентификаторСтроки,
		|	Т.АлкогольнаяПродукция,
		|	Т.Справка2,
		|	Т.Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки          КАК НомерСтроки,
		|	Товары.ИдентификаторСтроки  КАК ИдентификаторСтроки,
		|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	Товары.Справка2             КАК Справка2,
		|	Товары.Количество           КАК Количество,
		|	0                           КАК КоличествоАкцизныхМарок,
		|	ЕСТЬNULL(Товары.АлкогольнаяПродукция.ВидПродукции.Маркируемый, ЛОЖЬ) КАК МаркируемаяАлкогольнаяПродукция
		|ИЗ
		|	Товары КАК Товары");
		
		Запрос.Параметры.Вставить("Товары", Товары);
		
		ДанныеДляЗаполненияСлужебныхРеквизитов = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	ПустаяСправка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка();
	
	Для Каждого Выборка Из ДанныеДляЗаполненияСлужебныхРеквизитов Цикл
		
		СтрокаТЧ = Источник.Товары[Выборка.НомерСтроки - 1 + ДополнениеКИндексу];
		СтрокаТЧ.МаркируемаяАлкогольнаяПродукция = Выборка.МаркируемаяАлкогольнаяПродукция;
		СтрокаТЧ.КоличествоАкцизныхМарок         = 0;
		
		Если СтрокаТЧ.МаркируемаяАлкогольнаяПродукция Тогда
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ИдентификаторСтроки", Выборка.ИдентификаторСтроки);
			Если ЕстьКолонкаСправка2 Тогда
				ПараметрыОтбора.Вставить("Справка2", ПустаяСправка2);
			КонецЕсли;
			
			НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
				СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
			КонецЦикла;
			
			Если ЕстьКолонкаСправка2 Тогда
				
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("ИдентификаторСтроки", "");
				ПараметрыОтбора.Вставить("Справка2",            Выборка.Справка2);
				
				НайденныеСтроки = АкцизныеМарки.НайтиСтроки(ПараметрыОтбора);
				Для Каждого СтрокаТЧНайденныеСтроки Из НайденныеСтроки Цикл
					СтрокаТЧ.КоличествоАкцизныхМарок = СтрокаТЧ.КоличествоАкцизныхМарок + СтрокаТЧНайденныеСтроки.Количество;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(СтрокаТЧ, ИмяКолонкиКоличество);
		
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "АдресСоответствияАкцизныхМарок")
		И Форма.АдресСоответствияАкцизныхМарок = "" Тогда
		Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(Неопределено, Форма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает таблицу значений классификатора типов акцизных марок.
//
Функция КлассификаторТиповАкцизныхМарок() Экспорт
	
	ТаблицаТиповАкцизныхМарок = Новый ТаблицаЗначений;
	
	Макет = ПолучитьОбщийМакет("ТипыАкцизныхМарокЕГАИС");
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Макет.ПолучитьТекст());
	
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение НСтр("ru = 'Пустой XML'");
	ИначеЕсли ЧтениеXML.Имя <> "Items" Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
	КонецЕсли;
	
	ИменаКолонок = СтрЗаменить(ЧтениеXML.ПолучитьАтрибут("Columns"), ",", Символы.ПС);
	КоличествоКолонок = СтрЧислоСтрок(ИменаКолонок);
	
	Для Сч = 1 По КоличествоКолонок Цикл
		ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
		
		ТаблицаТиповАкцизныхМарок.Колонки.Добавить(ИмяКолонки, Новый ОписаниеТипов("Строка"));
	КонецЦикла;
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ЧтениеXML.Имя = "Items" Тогда
			Прервать;
		ИначеЕсли ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		ИначеЕсли ЧтениеXML.Имя <> "Item" Тогда
			ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML'");
		КонецЕсли;
		
		новСтр = ТаблицаТиповАкцизныхМарок.Добавить();
		Для Сч = 1 По КоличествоКолонок Цикл
			ИмяКолонки = СтрПолучитьСтроку(ИменаКолонок, Сч);
			
			новСтр[Сч-1] = ЧтениеXML.ПолучитьАтрибут(ИмяКолонки);
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаТиповАкцизныхМарок.Сортировать(ТаблицаТиповАкцизныхМарок.Колонки[0].Имя + " Возр");
	
	Возврат ТаблицаТиповАкцизныхМарок;
	
КонецФункции

// Возвращает признак видимости информационной надписи о доступности сканирования штрихкода "Data Matrix" акцизной марки.
//
// Параметры:
//  РассчитыватьПоОстаткам - Булево - признак расчета статистики заполнения по остаткам справок 2.
//
// Возвращаемое значение:
//  Булево - признак видимости информационной надписи.
//
Функция ВидимостьИнформацииОСканированииDataMatrix(РассчитыватьПоОстаткам) Экспорт
	
	ПроцентЗаполнения = ПроцентЗаполненияДиапазоновНомеровАкцизныхМарок(РассчитыватьПоОстаткам);
	
	Возврат ПроцентЗаполнения >= 50;
	
КонецФункции

Процедура СообщитьОбОшибкеЗаполненияСправки2(ШтрихкодУпаковки) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.РежимОтладки() Тогда
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'При изменении статуса акцизной марки %1 возникла ошибка:
			           |Не удалось определить справку 2 и (или) алкогольную продукцию'"),
			ШтрихкодУпаковки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкеЧтенияСтатуса(ШтрихкодУпаковки) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.РежимОтладки() Тогда
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'При изменении статуса акцизной марки %1 возникла ошибка:
			           |Прочитанный статус не актуален'"),
			ШтрихкодУпаковки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

//#Область ЗаполнениеДокументов

Функция ЗаполнитьТоварИзСтроки(ДокументОбъект, СтрокаТовара, ПараметрыЗаполнения, Количество)
	
	ЭтоМаркируемаяПродукция = (ТипЗнч(СтрокаТовара) = Тип("СтрокаДереваЗначений"));
	
	Если ЭтоМаркируемаяПродукция И ПараметрыЗаполнения.ТолькоПустаяСправка2 Тогда
		Справка2 = Справочники.Справки2ЕГАИС.ПустаяСсылка();
	Иначе
		Справка2 = СтрокаТовара.Справка2;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТовара, "ИдентификаторСтроки") Тогда
		ИдентификаторСтроки = СтрокаТовара.ИдентификаторСтроки;
	Иначе
		ИдентификаторСтроки = Неопределено;
	КонецЕсли;
	
	ВыполнитьПоискПоНоменклатуре = Истина;
	
	Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
		
		НайденныеСтроки = ДокументОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ВыполнитьПоискПоНоменклатуре    = Ложь;
			СтрокаТЧТовары                  = НайденныеСтроки[0];
			СтрокиТЧДляУменьшенияКоличества = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВыполнитьПоискПоНоменклатуре Тогда
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура",   СтрокаТовара.Номенклатура);
		ПараметрыОтбора.Вставить("Характеристика", СтрокаТовара.Характеристика);
		Если ПараметрыЗаполнения.УчитыватьСерии Тогда
			ПараметрыОтбора.Вставить("Серия", СтрокаТовара.Серия);
		КонецЕсли;
		
		РезультатПоиска = АкцизныеМаркиЕГАИС.НайтиСтрокиТоваров(
			ДокументОбъект.Товары, ПараметрыОтбора,
			Справка2, СтрокаТовара.АлкогольнаяПродукция, ПараметрыЗаполнения);
		
		СтрокаТЧТовары                  = РезультатПоиска.ПолноеСоответствие;
		СтрокиТЧДляУменьшенияКоличества = РезультатПоиска.КЗаполнению;
		
	КонецЕсли;
	
	Если СтрокиТЧДляУменьшенияКоличества = Неопределено
		И СтрокаТЧТовары = Неопределено Тогда
		
		СтрокаТЧТовары = ДокументОбъект.Товары.Добавить();
		
		СтрокаТЧТовары.Номенклатура         = СтрокаТовара.Номенклатура;
		СтрокаТЧТовары.Характеристика       = СтрокаТовара.Характеристика;
		СтрокаТЧТовары.Серия                = СтрокаТовара.Серия;
		
		СтрокаТЧТовары.АлкогольнаяПродукция = СтрокаТовара.АлкогольнаяПродукция;
		СтрокаТЧТовары.Справка2             = Справка2;
		
		УстановитьИдентификаторСтроки(СтрокаТЧТовары, ИдентификаторСтроки);
		
		ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция);
		
	ИначеЕсли СтрокиТЧДляУменьшенияКоличества = Неопределено
		И СтрокаТЧТовары <> Неопределено Тогда
		
		ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, Количество, ЭтоМаркируемаяПродукция);
		
	Иначе
		
		КоличествоКРаспределению = Количество;
		
		Пока КоличествоКРаспределению > 0
			И СтрокиТЧДляУменьшенияКоличества.Количество() > 0 Цикл
			
			ОбработанныеСтроки = Новый Массив;
			
			Для Каждого СтрокаТЧДляУменьшенияКоличества Из СтрокиТЧДляУменьшенияКоличества Цикл
				
				Если СтрокаТЧДляУменьшенияКоличества.Количество <= КоличествоКРаспределению Тогда
					
					Если СтрокаТЧТовары = Неопределено Тогда
						
						СтрокаТЧТовары = СтрокаТЧДляУменьшенияКоличества;
						
						СтрокаТЧТовары.АлкогольнаяПродукция = СтрокаТовара.АлкогольнаяПродукция;
						СтрокаТЧТовары.Справка2             = Справка2;
						
					Иначе
						
						ДокументОбъект.Товары.Удалить(СтрокаТЧДляУменьшенияКоличества);
						
						Индекс = ПараметрыЗаполнения.ИзмененныеСтроки.Найти(СтрокаТЧДляУменьшенияКоличества);
						Если Индекс <> Неопределено Тогда
							ПараметрыЗаполнения.ИзмененныеСтроки.Удалить(Индекс);
						КонецЕсли;
						
					КонецЕсли;
					
					ОбработанныеСтроки.Добавить(СтрокаТЧДляУменьшенияКоличества);
					
					СписываемоеКоличество = СтрокаТЧДляУменьшенияКоличества.Количество;
					
					ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, СписываемоеКоличество, ЭтоМаркируемаяПродукция);
					
					КоличествоКРаспределению = КоличествоКРаспределению - СписываемоеКоличество;
					
				Иначе
					
					СтрокаТЧДляУменьшенияКоличества.Количество = СтрокаТЧДляУменьшенияКоличества.Количество - КоличествоКРаспределению;
					ПараметрыЗаполнения.ИзмененныеСтроки.Добавить(СтрокаТЧДляУменьшенияКоличества);
					
					Если СтрокаТЧТовары = Неопределено Тогда
						
						СтрокаТЧТовары = ДокументОбъект.Товары.Вставить(ДокументОбъект.Товары.Индекс(СтрокаТЧДляУменьшенияКоличества) + 1);
						ЗаполнитьЗначенияСвойств(СтрокаТЧТовары, СтрокаТЧДляУменьшенияКоличества,,"Количество, КоличествоУпаковок");
						
						СтрокаТЧТовары.АлкогольнаяПродукция = СтрокаТовара.АлкогольнаяПродукция;
						СтрокаТЧТовары.Справка2             = Справка2;
						
						УстановитьИдентификаторСтроки(СтрокаТЧТовары, ИдентификаторСтроки);
						
						ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, КоличествоКРаспределению, ЭтоМаркируемаяПродукция);
						
					Иначе
						
						ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, КоличествоКРаспределению, ЭтоМаркируемаяПродукция);
						
					КонецЕсли;
					
					КоличествоКРаспределению = 0;
					
				КонецЕсли;
				
				Если КоличествоКРаспределению <= 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Для Каждого ОбработаннаяСтрока Из ОбработанныеСтроки Цикл
				Индекс = СтрокиТЧДляУменьшенияКоличества.Найти(ОбработаннаяСтрока);
				Если Индекс <> Неопределено Тогда
					СтрокиТЧДляУменьшенияКоличества.Удалить(Индекс);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		Если КоличествоКРаспределению > 0 И СтрокаТЧТовары <> Неопределено Тогда
			ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, КоличествоКРаспределению, ЭтоМаркируемаяПродукция);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтрокаТЧТовары;
	
КонецФункции

Процедура УстановитьИдентификаторСтроки(СтрокаТЧТовары, ИдентификаторСтроки)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТЧТовары, "ИдентификаторСтроки") Тогда
		Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
			СтрокаТЧТовары.ИдентификаторСтроки = ИдентификаторСтроки;
		Иначе
			СтрокаТЧТовары.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатДобавленияШтрихкодаУпаковки(Форма, ДанныеШтрихкода, ПараметрыСканированияАкцизныхМарок, РезультатДобавленияШтрихкодаВДокумент)
	
	Если Не РезультатДобавленияШтрихкодаВДокумент.ЕстьОшибкиВДеревеУпаковок Тогда
		
		Если ПараметрыСканированияАкцизныхМарок.АдресСоответствияАкцизныхМарок <> Неопределено Тогда
			
			Если ЭтоАдресВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок) Тогда
				
				АкцизныеМаркиВДокументе = ПолучитьИзВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок);
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				Для Каждого ВложенныйШтрихкод Из ДанныеШтрихкода.ВложенныеШтрихкоды Цикл
					АкцизныеМаркиВДокументе.Вставить(ВложенныйШтрихкод.Ключ, ВложенныйШтрихкод.Значение);
				КонецЦикла;
				
				ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.АдресСоответствияАкцизныхМарок);
				
			Иначе
				
				АкцизныеМаркиВДокументе = Новый Соответствие;
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				Для Каждого ВложенныйШтрихкод Из ДанныеШтрихкода.ВложенныеШтрихкоды Цикл
					АкцизныеМаркиВДокументе.Вставить(ВложенныйШтрихкод.Ключ, ВложенныйШтрихкод.Значение);
				КонецЦикла;
				
				Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.УникальныйИдентификатор);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатДобавленияШтрихкодаАкцизнойМарки(Форма, ДанныеШтрихкода, ПараметрыСканированияАкцизныхМарок, РезультатДобавленияШтрихкодаВДокумент)
	
	Если Не ЗначениеЗаполнено(РезультатДобавленияШтрихкодаВДокумент.ТекстОшибки) Тогда
		
		Если ПараметрыСканированияАкцизныхМарок.АдресСоответствияАкцизныхМарок <> Неопределено Тогда
			
			Если ЭтоАдресВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок) Тогда
				
				АкцизныеМаркиВДокументе = ПолучитьИзВременногоХранилища(Форма.АдресСоответствияАкцизныхМарок);
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.АдресСоответствияАкцизныхМарок);
				
			Иначе
				
				АкцизныеМаркиВДокументе = Новый Соответствие;
				АкцизныеМаркиВДокументе.Вставить(ДанныеШтрихкода.ШтрихкодУпаковки, ДанныеШтрихкода.Штрихкод);
				
				Форма.АдресСоответствияАкцизныхМарок = ПоместитьВоВременноеХранилище(АкцизныеМаркиВДокументе, Форма.УникальныйИдентификатор);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//#КонецОбласти

// Возвращает справки 2, найденные по считанному штрихкоду формата Data Matrix.
//
Функция Справки2ПоШтрихкодуDataMatrix(СтруктураШтрихкода)
	
	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипМарки", СтруктураШтрихкода.ТипМарки);
	Запрос.УстановитьПараметр("СерияМарки", СтруктураШтрихкода.СерияМарки);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка                                  КАК Ссылка,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.НачальныйНомер                          КАК НачальныйНомер,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.КонечныйНомер                           КАК КонечныйНомер,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.АлкогольнаяПродукция             КАК АлкогольнаяПродукция,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.АлкогольнаяПродукция.Код         КАК КодАлкогольнойПродукции,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.НомерТТН                КАК НомерТТН,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.ДатаТТН                 КАК ДатаТТН,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.ДатаРозлива             КАК ДатаРозлива,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.Количество              КАК КоличествоПоСправке1,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.НомерПодтвержденияЕГАИС КАК НомерПодтвержденияЕГАИС,
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка.Справка1.ДатаПодтвержденияЕГАИС  КАК ДатаПодтвержденияЕГАИС
	|ИЗ
	|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
	|ГДЕ
	|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.ТипМарки = &ТипМарки
	|	И Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.СерияМарки = &СерияМарки";
	
	НомерМарки = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(СтруктураШтрихкода.НомерМарки);
	
	ТаблицаСопоставления = Новый ТаблицаЗначений;
	ТаблицаСопоставления.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	
	ДобавленныеСправки2 = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НачальныйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Выборка.НачальныйНомер);
		КонечныйНомер = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Выборка.КонечныйНомер);
		
		Если НомерМарки >= НачальныйНомер И НомерМарки <= КонечныйНомер Тогда
			Если ДобавленныеСправки2.Найти(Выборка.Ссылка) = Неопределено Тогда
				ДанныеСправки2 = Новый Структура;
				ДанныеСправки2.Вставить("Справка2",                Выборка.Ссылка);
				ДанныеСправки2.Вставить("АлкогольнаяПродукция",    Выборка.АлкогольнаяПродукция);
				ДанныеСправки2.Вставить("КодАлкогольнойПродукции", Выборка.КодАлкогольнойПродукции);
				ДанныеСправки2.Вставить("НомерТТН",                Выборка.НомерТТН);
				ДанныеСправки2.Вставить("ДатаТТН",                 Выборка.ДатаТТН);
				ДанныеСправки2.Вставить("ДатаРозлива",             Выборка.ДатаРозлива);
				ДанныеСправки2.Вставить("КоличествоПоСправке1",    Выборка.КоличествоПоСправке1);
				ДанныеСправки2.Вставить("НомерПодтвержденияЕГАИС", Выборка.НомерПодтвержденияЕГАИС);
				ДанныеСправки2.Вставить("ДатаПодтвержденияЕГАИС",  Выборка.ДатаПодтвержденияЕГАИС);
				ДанныеСправки2.Вставить("Номенклатура");
				ДанныеСправки2.Вставить("Характеристика");
				ДанныеСправки2.Вставить("Упаковка");
				
				СтрокаТаблицы = ТаблицаСопоставления.Найти(Выборка.АлкогольнаяПродукция, "АлкогольнаяПродукция");
				Если СтрокаТаблицы = Неопределено Тогда
					СтрокаТаблицы = ТаблицаСопоставления.Добавить();
					СтрокаТаблицы.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
				КонецЕсли;
				
				Результат.Добавить(ДанныеСправки2);
				ДобавленныеСправки2.Добавить(Выборка.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияЕГАИС.ЗаполнитьСопоставленнуюПродукцию(ТаблицаСопоставления);
	
	Для Каждого ДанныеСправки2 Из Результат Цикл
		СтрокаТаблицы = ТаблицаСопоставления.Найти(ДанныеСправки2.АлкогольнаяПродукция, "АлкогольнаяПродукция");
		Если СтрокаТаблицы <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ДанныеСправки2, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает процент заполнения диапазонов номеров акцизных марок в справках 2.
//
Функция ПроцентЗаполненияДиапазоновНомеровАкцизныхМарок(РассчитыватьПоОстаткам)
	
	Результат = 0;
	
	Запрос = Новый Запрос;
	
	Если РассчитыватьПоОстаткам Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.Справка2 КАК Справка2
		|ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(, Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
		|ГДЕ
		|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.КоличествоОстаток > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка) КАК КоличествоСправок
		|ПОМЕСТИТЬ ЗаполненныеДиапазоны
		|ИЗ
		|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсходныеДанные КАК ИсходныеДанные
		|		ПО Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка = ИсходныеДанные.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИсходныеДанные.Справка2) КАК КоличествоСправок
		|ПОМЕСТИТЬ ОстаткиСправок2
		|ИЗ
		|	ИсходныеДанные КАК ИсходныеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОстаткиСправок2.КоличествоСправок, 0) = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ЗаполненныеДиапазоны.КоличествоСправок, 0) / ОстаткиСправок2.КоличествоСправок * 100
		|	КОНЕЦ КАК ПроцентЗаполнения
		|ИЗ
		|	ЗаполненныеДиапазоны КАК ЗаполненныеДиапазоны,
		|	ОстаткиСправок2 КАК ОстаткиСправок2";
		
	Иначе
		
		ПереданныеСправки2 = Новый Массив;
		Период = Неопределено;
		
		Пока ПереданныеСправки2.Количество() < 500 Цикл
			
			ЗапросПоСправкам = Новый Запрос;
			
			Если Период = Неопределено Тогда
				ЗапросПоСправкам.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 500
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Период КАК Период,
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Справка2 КАК Справка2
				|ИЗ
				|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС КАК ОстаткиАлкогольнойПродукцииЕГАИС
				|ГДЕ
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор ССЫЛКА Документ.ПередачаВРегистр2ЕГАИС
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период УБЫВ";
			Иначе
				ЗапросПоСправкам.УстановитьПараметр("Период", Период);
				ЗапросПоСправкам.Текст =
				"ВЫБРАТЬ ПЕРВЫЕ 500
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Период КАК Период,
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Справка2 КАК Справка2
				|ИЗ
				|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС КАК ОстаткиАлкогольнойПродукцииЕГАИС
				|ГДЕ
				|	ОстаткиАлкогольнойПродукцииЕГАИС.Регистратор ССЫЛКА Документ.ПередачаВРегистр2ЕГАИС
				|	И ОстаткиАлкогольнойПродукцииЕГАИС.Период <= &Период
				|
				|УПОРЯДОЧИТЬ ПО
				|	Период УБЫВ";
			КонецЕсли;
			
			РезультатЗапроса = ЗапросПоСправкам.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
				Прервать;
			КонецЕсли;
			
			Выборка = ЗапросПоСправкам.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Если ПереданныеСправки2.Найти(Выборка.Справка2) = Неопределено Тогда
					ПереданныеСправки2.Добавить(Выборка.Справка2);
				КонецЕсли;
				
				Период = Выборка.Период;
			КонецЦикла;
			
			Если Выборка.Количество() < 500 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Справки2", ПереданныеСправки2);
		Запрос.УстановитьПараметр("ПереданоСправок", ПереданныеСправки2.Количество());
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка) КАК КоличествоСправок
		|ПОМЕСТИТЬ ЗаполненныеДиапазоны
		|ИЗ
		|	Справочник.Справки2ЕГАИС.ДиапазоныНомеровАкцизныхМарок КАК Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок
		|ГДЕ
		|	Справки2ЕГАИСДиапазоныНомеровАкцизныхМарок.Ссылка В(&Справки2)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &ПереданоСправок = 0
		|			ТОГДА 0
		|		ИНАЧЕ ЗаполненныеДиапазоны.КоличествоСправок / &ПереданоСправок * 100
		|	КОНЕЦ КАК ПроцентЗаполнения
		|ИЗ
		|	ЗаполненныеДиапазоны КАК ЗаполненныеДиапазоны";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Если ТипЗнч(Выборка.ПроцентЗаполнения) = Тип("Число") Тогда
			Результат = Выборка.ПроцентЗаполнения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Окр(Результат, 2);
	
КонецФункции

// Для служебного использования
// Возвращает пустую таблицу - аналог ТЧ "Акцизные марки", при ее отсутствии
//
Функция ПустаяТаблицаАкцизныеМарки()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Справка2",            Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	Результат.Колонки.Добавить("Количество",          Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("АкцизнаяМарка",       Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	Возврат Результат;
	
КонецФункции

//#КонецОбласти

Функция НазначениеПлатежаФЗ275(ОбъектОснование)
	
	НазначениеПлатежа = "";
	НазначениеПлатежаМассивСтрок = Новый Массив;
	
	ТипПлатежа = ОбъектОснование.ТипПлатежаФЗ275;
	ТипыПлатежей = Справочники.ТипыПлатежейФЗ275;
	
	ТипыПлатежейАвансаОплаты = Новый Массив;
	ТипыПлатежейАвансаОплаты.Добавить(2);
	ТипыПлатежейАвансаОплаты.Добавить(3);
	ТипыПлатежейАвансаОплаты.Добавить(9);
	ТипыПлатежейАвансаОплаты.Добавить(99);
	
	ТипыПлатежейНДС = Новый Массив;
	ТипыПлатежейНДС.Добавить(2);
	ТипыПлатежейНДС.Добавить(3);
	ТипыПлатежейНДС.Добавить(99);
	
	РеквизитыТипаПлатежа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТипПлатежа, "Код, НомерПунктаЗакона");
	ЭтапКонтракта = ОбъектОснование.ЭтапКонтракта;
	РеквизитыЭтапа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭтапКонтракта, 
						"Наименование, ПунктКонтрактаОплаты, ПунктКонтрактаПредмета, ТипЭтапа");
	ПунктыКонтракта = "";
	
	//#Область АвансОплата
	Если ТипыПлатежейАвансаОплаты.Найти(РеквизитыТипаПлатежа.Код) <> Неопределено Тогда
		Если ЗначениеЗаполнено(ЭтапКонтракта) Тогда
			Если РеквизитыЭтапа.ТипЭтапа = Перечисления.ТипыЭтаповКонтрактов.Аванс Тогда
				НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Авансовый платеж'"));
			Иначе
				НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Оплата'"));
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РеквизитыЭтапа.ПунктКонтрактаОплаты) Тогда
				НазначениеПлатежаМассивСтрок.Добавить("(" + РеквизитыЭтапа.ПунктКонтрактаОплаты + ")");
			КонецЕсли;
			НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'за'"));
		Иначе
			НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Оплата'"));
			НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'за'"));
		КонецЕсли;
	КонецЕсли;
	//#КонецОбласти 
	
	//#Область ПредметПлатежа
	Если ТипПлатежа = ТипыПлатежей.УплатаНалоговИСборовТаможенныхПлатежейСтраховыхВзносов Тогда // Тип платежа 1
		НазначениеПлатежаМассивСтрок.Добавить("налог");
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'ИГК'"));
		НазначениеПлатежаМассивСтрок.Добавить(ОбъектОснование.КонтрактИсполнителя.ГосударственныйКонтракт.Код);
	ИначеЕсли ТипПлатежа = ТипыПлатежей.ОплатаТоваровРаботУслугПоРегулируемымЦенам // Тип платежа 2
		Или ТипПлатежа = ТипыПлатежей.ОплатаИныхРасходовНаСуммуНеБолееТрехМиллионовРублейВМесяц // Тип платежа 3
		Или ТипПлатежа = ТипыПлатежей.РасчетыСИностраннымиИсполнителями // Тип платежа 9
		Или ТипПлатежа = ТипыПлатежей.СписаниеНаОтдельныйСчет Тогда // Тип платежа 99
		
		Если ЗначениеЗаполнено(ЭтапКонтракта) Тогда
			НазначениеПлатежаМассивСтрок.Добавить(РеквизитыЭтапа.Наименование); // Предмет оплаты
			Если ЗначениеЗаполнено(РеквизитыЭтапа.ПунктКонтрактаПредмета) Тогда
				НазначениеПлатежаМассивСтрок.Добавить("(" + РеквизитыЭтапа.ПунктКонтрактаПредмета + ")");
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипПлатежа = ТипыПлатежей.ОплатаТруда Тогда // Тип платежа 5
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Заработная плата'"));
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'за'"));
	ИначеЕсли ТипПлатежа = ТипыПлатежей.СписаниеСвязаннноеСРазмещениемНаДепозитеУполномоченногоБанка Тогда // Тип платежа 7
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Перечисление денежных средств на депозит'"));
	ИначеЕсли ТипПлатежа = ТипыПлатежей.СписаниеСуммКредитовПеречисленныхУполномоченнымБанком Тогда // Тип платежа 8
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Возврат суммы основного долга по кредиту'"));
	ИначеЕсли ТипПлатежа = ТипыПлатежей.СписаниеНаВозмещениеЗатратЗаСчетСобственныхСредств Тогда // Тип платежа 10
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Возмещение расходов на опережающее приобретение материалов'"));
	ИначеЕсли ТипПлатежа = ТипыПлатежей.ПеречислениеПрибылиГоловномуИсполнителю Тогда // Тип платежа 11
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'Перечисление прибыли по выполненным контрактным обязательствам'"));
	КонецЕсли;
	//#КонецОбласти 
	
	//#Область БлокАвтоматическойОбработки
	МассивПодтверждающихДокументов = Новый Массив;
	Если ТипЗнч(ОбъектОснование.ПодтверждающиеДокументы) = Тип("ТаблицаЗначений") Тогда
		МассивСсылокВидов = ОбъектОснование.ПодтверждающиеДокументы.ВыгрузитьКолонку("ВидДокумента");
	Иначе
		МассивСсылокВидов = ОбъектОснование.ПодтверждающиеДокументы.Выгрузить(,"ВидДокумента").ВыгрузитьКолонку("ВидДокумента");
	КонецЕсли;
	СоответствиеРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСсылокВидов, "КраткоеНаименование, Наименование");
	
	Для Каждого СтрокаПодтверждающихДокументов Из ОбъектОснование.ПодтверждающиеДокументы Цикл
		ПредставлениеВидаДокумента = ПредставлениеВидаДокумента(СтрокаПодтверждающихДокументов.ВидДокумента, СоответствиеРеквизитов);
		
		Представление = ПредставлениеПодтверждающегоДокумента(ПредставлениеВидаДокумента, СтрокаПодтверждающихДокументов.Номер, СтрокаПодтверждающихДокументов.Дата);
		
		МассивПодтверждающихДокументов.Добавить(Представление);
	КонецЦикла;
	Если МассивПодтверждающихДокументов.Количество() Тогда
		ПредставлениеВсехДокументов = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивПодтверждающихДокументов, "; ");
		
		НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= '275-ФЗ'"));
		НазначениеПлатежаМассивСтрок.Добавить("{" + РеквизитыТипаПлатежа.Код);
		НазначениеПлатежаМассивСтрок.Добавить(ПредставлениеВсехДокументов + "}");
	КонецЕсли;
	//#КонецОбласти 
	
	//#Область НДС
	Если ТипыПлатежейНДС.Найти(РеквизитыТипаПлатежа.Код) <> Неопределено 
		И ОбъектОснование.СтавкаНДС <> Перечисления.СтавкиНДС.ПустаяСсылка() Тогда
		Если ОбъектОснование.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			НазначениеПлатежаМассивСтрок.Добавить(", " + НСтр("ru= 'без НДС'"));
		Иначе
			НазначениеПлатежаМассивСтрок.Добавить(", " + НСтр("ru= 'в т.ч.'"));
			НазначениеПлатежаМассивСтрок.Добавить(ОбъектОснование.СтавкаНДС);
			
			Если ОбъектОснование.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
				МножительНДС = 0;
			ИначеЕсли ОбъектОснование.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
				МножительНДС = 0.10;
			ИначеЕсли ОбъектОснование.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
				МножительНДС = 0.18;
			ИначеЕсли ОбъектОснование.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
				МножительНДС = 0.2;
			КонецЕсли;
			Если МножительНДС <> 0 Тогда
				СуммаНДС = Окр(ОбъектОснование.Сумма / (1 + МножительНДС) * МножительНДС, 2);
			Иначе
				СуммаНДС = 0;
			КонецЕсли;
			
			НазначениеПлатежаМассивСтрок.Добавить(Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=-; ЧГ=0"));
			НазначениеПлатежаМассивСтрок.Добавить(НСтр("ru= 'руб.'"));
		КонецЕсли;
	КонецЕсли;
	//#КонецОбласти 
	
	Возврат СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(НазначениеПлатежаМассивСтрок, " ");
	
КонецФункции

Функция НазначениеПлатежаОбычныеРасчеты(ОбъектОснование)
	
	Результат = "Оплата за ";
	Если ЗначениеЗаполнено(ОбъектОснование.КонтрактИсполнителя) Тогда
		Результат = Результат + ОбъектОснование.КонтрактИсполнителя;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НазначениеПлатежа(ОбъектОснование) Экспорт
	
	Если ОбъектОснование.ПлатежПоФЗ275 Тогда
		Результат = НазначениеПлатежаФЗ275(ОбъектОснование);
	Иначе
		Результат = НазначениеПлатежаОбычныеРасчеты(ОбъектОснование);
	КонецЕсли;
	
	Результат = СокрЛП(Результат);
	
	Возврат Результат;
	
КонецФункции

Функция СтруктураПараметровДляНазначенияПлатежа() Экспорт
	
	Результат = Новый Структура();
	
	Результат.Вставить("ПлатежПоФЗ275"); // Булево
	Результат.Вставить("СтавкаНДС"); // Перечисления.СтавкиНДС
	Результат.Вставить("Сумма"); // Число (Включает НДС)
	Результат.Вставить("ТипПлатежаФЗ275"); // Справочники.ТипыПлатежейФЗ275
	Результат.Вставить("КонтрактИсполнителя"); // Справочники.КонтрактыИсполнителей
	Результат.Вставить("ЭтапКонтракта"); // Справочники.ЭтапыКонтрактов
	Результат.Вставить("ВидОперации"); // Перечисление
	Результат.Вставить("Налог"); // Строка 
	Результат.Вставить("ПодтверждающиеДокументы"); // Таблица значений с колонками (ВидДокумента, Номер, Дата)

	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаПроверкиОтдельногоСчета(ИсточникБанковскогоСчета) Экспорт
	ТекстЗапроса = "// Проверка состояния отдельного счета ГОЗ (автоматически сформированный текст)";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.Таб + Символы.Таб
		+ "ВЫБОР КОГДА (" + ИсточникБанковскогоСчета + ".ОтдельныйСчетГОЗ";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.Таб + Символы.Таб
		+ "И НЕ " + ИсточникБанковскогоСчета + ".ГосударственныйКонтракт.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрактов.Завершен)" + ")";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.Таб + Символы.Таб
		+ "ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ";
		
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаПоляОтдельногоСчета(ИсточникБанковскогоСчета) Экспорт
	
	ТекстЗапросаПроверки = ТекстЗапросаПроверкиОтдельногоСчета(ИсточникБанковскогоСчета);
	
	ТекстЗапроса = "
	|ВЫБОР
	|	КОГДА " + ТекстЗапросаПроверки + "
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|КОНЕЦ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ОбработкаПроверкиЗаполненияПодтверждающиеДокументы(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	ЕстьДокументПодтверждающийИсполнение = Ложь;
	
	Для Каждого ПодтверждающийДокумент Из Объект.ПодтверждающиеДокументы Цикл 
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаявкаНаРасходованиеСредств")
			И ПодтверждающийДокумент.ВидДокумента.ПодтверждаетИсполнениеКонтракта Тогда
			Если Не ЗначениеЗаполнено(ПодтверждающийДокумент.Номер) Тогда
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не заполнена колонка ""Номер"" в строке %1 списка ""Подтверждающие документы""'"),
					ПодтверждающийДокумент.НомерСтроки);
				
				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке, Отказ);
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ПодтверждающийДокумент.Дата) Тогда
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не заполнена колонка ""Дата"" в строке %1 списка ""Подтверждающие документы""'"),
					ПодтверждающийДокумент.НомерСтроки);
				
				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке, Отказ);
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ПодтверждающийДокумент.Сумма) Тогда
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не заполнена колонка ""Сумма"" в строке %1 списка ""Подтверждающие документы""'"),
					ПодтверждающийДокумент.НомерСтроки);
				
				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке, Отказ);
				
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЕстьДокументПодтверждающийИсполнение Тогда
			ЕстьДокументПодтверждающийИсполнение = ПодтверждающийДокумент.ВидДокумента.ПодтверждаетИсполнениеКонтракта;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.ТипПлатежаФЗ275) Тогда
		ТребуютсяДокументыПодтвержденияИсполненияКонтракта = 
			Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ТипПлатежаФЗ275, "НеТребуютсяДокументыПодтвержденияИсполненияКонтракта");
		
		Если ТребуютсяДокументыПодтвержденияИсполненияКонтракта
			И Не ЕстьДокументПодтверждающийИсполнение 
			И (ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаявкаНаРасходованиеСредств")
				И (Не ЗначениеЗаполнено(Объект.ЭтапКонтракта)
					ИЛИ Объект.ЭтапКонтракта.ТипЭтапа = Перечисления.ТипыЭтаповКонтрактов.Оплата)
				Или ТипЗнч(Объект) = Тип("СправочникОбъект.КонтрактыИсполнителей")) Тогда
		
			СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Тип платежа ""%1"" требует указания видов документов, подтверждающих исполнение контракта.
					|В списке ""Подтверждающие документы"" не указано ни одного подтверждающего исполнение вида документа.'"),
				 Объект.ТипПлатежаФЗ275);
				
			ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке, Отказ);
				
		КонецЕсли;
			
		ВидыДокументовПоТипуПлатежа = Справочники.ТипыПлатежейФЗ275.ПодтверждающиеВидыДокументов(Объект.ТипПлатежаФЗ275);
		Для Каждого ВидДокумента Из ВидыДокументовПоТипуПлатежа Цикл 
			Если Объект.ПодтверждающиеДокументы.Найти(ВидДокумента, "ВидДокумента") = Неопределено Тогда
				СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Тип платежа ""%1"" требует указания вида документа %2.'"),
					 Объект.ТипПлатежаФЗ275,
					 ВидДокумента);
					
				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке, Отказ);
					
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецФункции

// Контроль ФЗ-275

// Проверяет переданный документ на соответствие законодательству
//
// Параметры:
//   Ссылка - ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств, ДокументСсылка.СписаниеСРасчетногоСчета - проверяемый документ
//   ДанныеДокументовДляКонтроля - Массив - массив результатов запросов для контроля документов за исключением временных таблиц и удалений временных таблиц
//
// Возвращаемое значение:
//   РезультатыПроверок - Структура - результаты проверок
//       ВсеКонтролиПройдены - Булево
//       ОписанияРезультатов - ТаблицаЗначений - результаты проверки каждого правила
//           ИмяОбработчикаКонтроля - Строка - имя процедуры, проверяющей условия одного пункта контроля
//           КонтрольПройден - Булево - результат проверки одного пункта контроля
//           Описание - Строка - развернутое описания причин прохождения или непрохождения одного пункта контроля
//
Функция КонтрольДокумента(Ссылка, ДанныеДокументовДляКонтроля = Неопределено) Экспорт
	РезультатыПроверок = ИнициализацияСвойствРезультатовПроверок();
	ИндексыРезультатовЗапросов = ИнициализацияИндексовРезультатовЗапросов();
	
	СформироватьВременныеТаблицы(РезультатыПроверок, Ссылка);
	
	// Контроль раздела I "В соответствии с 275-ФЗ от 29.12.2012г."
	РезультатКонтроля_Раздел1_275_83_1_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_83_1_2_б(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_83_1_2_в(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_83_1_2_г(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_83_1_2_е(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_83_1_2_з(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	
	РезультатКонтроля_Раздел1_275_84_2(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_84_3(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_84_9_б(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_84_10(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	
	РезультатКонтроля_Раздел1_275_85_1_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_85_1_3(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_85_2_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел1_275_85_2_2(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	
	// Контроль раздела II "Указание Банка России 3729-У от 15.07.2015г."
	РезультатКонтроля_Раздел2_3729У_2_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел2_3729У_2_2(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	РезультатКонтроля_Раздел2_3729У_2_3(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, ДанныеДокументовДляКонтроля);
	
	Отбор = Новый Структура("КонтрольПройден", Ложь);
	НайденныеСтроки = РезультатыПроверок.ОписанияРезультатов.НайтиСтроки(Отбор);
	РезультатыПроверок.Вставить("ВсеКонтролиПройдены", НайденныеСтроки.Количество() = 0);
	
	Возврат РезультатыПроверок;
КонецФункции

Функция ИнициализацияСвойствРезультатовПроверок()
	СвойстваРезультатовПроверок = Новый Структура("ВсеКонтролиПройдены, ОписанияРезультатов", Истина);
	
	ОписанияОшибок = Новый ТаблицаЗначений;
	ОписанияОшибок.Колонки.Добавить("ИмяОбработчикаКонтроля");
	ОписанияОшибок.Колонки.Добавить("КонтрольПройден");
	ОписанияОшибок.Колонки.Добавить("Описание");
	ОписанияОшибок.Колонки.Добавить("Раздел");
	
	СвойстваРезультатовПроверок.Вставить("ОписанияРезультатов", ОписанияОшибок);
	
	СвойстваРезультатовПроверок.Вставить("МенеджерВТ", Неопределено);
	
	Возврат СвойстваРезультатовПроверок;
КонецФункции

Функция ИнициализацияИндексовРезультатовЗапросов()
	ИндексыРезультатовЗапроса = Новый Соответствие;
	
	// Контроль раздела I "В соответствии с 275-ФЗ от 29.12.2012г."
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_83_1_1", 0);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_83_1_2_б", 1);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_83_1_2_в", 2);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_83_1_2_г", 3);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_83_1_2_е", 4);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_83_1_2_з", 5);
	
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_84_2", 6);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_84_3", 7);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_84_9_б", 8);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_84_10", 9);
	
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_85_1_1", 10);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_85_1_3", 11);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_85_2_1", 12);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел1_275_85_2_2", 13);
	
	// Контроль раздела II "Указание Банка России 3729-У от 15.07.2015г."
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел2_3729У_2_1", 14);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел2_3729У_2_2", 15);
	ИндексыРезультатовЗапроса.Вставить("РезультатКонтроля_Раздел2_3729У_2_3", 16);
	
	Возврат ИндексыРезультатовЗапроса;
КонецФункции

Процедура СформироватьВременныеТаблицы(РезультатыПроверок, Ссылка)
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	// Нужны две основных временных таблицы: "ЗаявкаНаРасходованиеДенежныхСредств", "СписаниеСРасчетногоСчета"
	// И еще вспомогательные, для табличных частей:
	// "ЗаявкаНаРасходованиеДенежныхСредствФинансирование"
	// "ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы"
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеСредств.Ссылка,
	|	ЗаявкаНаРасходованиеСредств.Номер,
	|	ЗаявкаНаРасходованиеСредств.Дата,
	|	ЗаявкаНаРасходованиеСредств.Проведен,
	|	ЗаявкаНаРасходованиеСредств.ВидОперации,
	|	ЗаявкаНаРасходованиеСредств.Организация,
	|	ВЫРАЗИТЬ(ЗаявкаНаРасходованиеСредств.НазначениеПлатежа КАК СТРОКА(300)) КАК НазначениеПлатежа,
	|	ЗаявкаНаРасходованиеСредств.СтатьяКалькуляции,
	|	ЗаявкаНаРасходованиеСредств.КонтрактИсполнителя,
	|	ЗаявкаНаРасходованиеСредств.КонтрактСЗаказчиком,
	|	ЗаявкаНаРасходованиеСредств.СуммаДокумента КАК Сумма,
	|	ЗаявкаНаРасходованиеСредств.Контрагент,
	|	ЗаявкаНаРасходованиеСредств.Комментарий,
	|	ЗаявкаНаРасходованиеСредств.Состояние,
	|	ЗаявкаНаРасходованиеСредств.Ответственный,
	|	ЗаявкаНаРасходованиеСредств.ЭтапКонтракта,
	|	ЗаявкаНаРасходованиеСредств.ТипПлатежаФЗ275,
	|	ЗаявкаНаРасходованиеСредств.ПлатежПоФЗ275,
	|	ЗаявкаНаРасходованиеСредств.ИдентификаторПлатежа,
	|	ЗаявкаНаРасходованиеСредств.ФормаОплаты,
	|	ЗаявкаНаРасходованиеСредств.ПроцентОплатыЗаСчетСобственныхСредств,
	|	ЗаявкаНаРасходованиеСредств.СуммаОплатыЗаСчетСобственныхСредств,
	|	ЗаявкаНаРасходованиеСредств.ЗаявкаНаПеречислениеЗарплаты,
	|	ЗаявкаНаРасходованиеСредств.СтавкаНДС
	|ПОМЕСТИТЬ ЗаявкаНаРасходованиеДенежныхСредств
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
	|ГДЕ
	|	(ЗаявкаНаРасходованиеСредств.Ссылка В (&ПроверяемыеДокументы)
	|			ИЛИ &ВсеДокументы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.Контрагент,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.Организация,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа.КонтрактИсполнителя КАК КонтрактИсполнителя,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.СуммаПлатежа КАК Сумма,
	|	ВЫРАЗИТЬ(ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.НазначениеПлатежа КАК СТРОКА(300)) КАК НазначениеПлатежа,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.Комментарий,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.Ответственный,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.СчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.СчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ОчередностьПлатежа,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ИдентификаторПлатежа,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ВидОперации,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ВидПлатежа,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа.КонтрактСЗаказчиком КАК КонтрактСЗаказчиком,
	|	ВЫБОР
	|		КОГДА ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ПереводНаДругойСчет)
	|			ТОГДА ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.СчетКонтрагента
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка)
	|	КОНЕЦ КАК БанковскийСчетПолучатель,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ПоказательТипа,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.КодБК,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.КодОКАТО,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ПоказательОснования,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ПоказательПериода,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ПоказательНомера,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ПоказательДаты,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.СтатусСоставителя,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ПеречислениеВБюджет,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.ВидПеречисленияВБюджет,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа.КонтрактИсполнителя.ГосударственныйКонтракт КАК ГосударственныйКонтракт,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка.Проведен КАК Проведен,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа.ТипПлатежаФЗ275 КАК ТипПлатежаФЗ275,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа.ПлатежПоФЗ275 КАК ПлатежПоФЗ275,
	|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.СтавкаНДС
	|ПОМЕСТИТЬ СписаниеСРасчетногоСчета
	|ИЗ
	|	Документ.ПлатежноеПоручениеИсходящее.РасшифровкаПлатежа КАК ПлатежноеПоручениеИсходящееРасшифровкаПлатежа
	|ГДЕ
	|	(ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка В (&ПроверяемыеДокументы)
	|			ИЛИ &ВсеДокументы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеСредствРазмещениеЗаявки.Ссылка,
	|	ЗаявкаНаРасходованиеСредствРазмещениеЗаявки.КонтрактСЗаказчиком,
	|	ЗаявкаНаРасходованиеСредствРазмещениеЗаявки.МестоРазмещения КАК БанковскийСчет,
	|	ЗаявкаНаРасходованиеСредствРазмещениеЗаявки.СуммаПлатежа КАК Сумма
	|ПОМЕСТИТЬ ЗаявкаНаРасходованиеДенежныхСредствФинансирование
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеСредств.РазмещениеЗаявки КАК ЗаявкаНаРасходованиеСредствРазмещениеЗаявки
	|ГДЕ
	|	(ЗаявкаНаРасходованиеСредствРазмещениеЗаявки.Ссылка В (&ПроверяемыеДокументы)
	|			ИЛИ &ВсеДокументы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы.Ссылка,
	|	ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы.ВидДокумента,
	|	ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы.Номер,
	|	ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы.Дата,
	|	ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы.Файл КАК ПодтверждающийДокумент,
	|	ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы.Сумма
	|ПОМЕСТИТЬ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеСредств.ПодтверждающиеДокументы КАК ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы
	|ГДЕ
	|	(ЗаявкаНаРасходованиеСредствПодтверждающиеДокументы.Ссылка В (&ПроверяемыеДокументы)
	|			ИЛИ &ВсеДокументы)";
	
	ПроверяемыеДокументы = Новый Массив;
	ПроверяемыеДокументы.Добавить(Ссылка);
	Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
	Запрос.УстановитьПараметр("ВсеДокументы", Истина);
	Запрос.Выполнить();
	РезультатыПроверок.Вставить("МенеджерВТ", Запрос.МенеджерВременныхТаблиц);
КонецПроцедуры

Функция ЭтоТипКонтролируемогоДокумента(Ссылка)
	Возврат ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
		ИЛИ ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее");
КонецФункции

Функция ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)
	Возврат ИндексыРезультатовЗапросов[ИмяОбработчикаКонтроля];
КонецФункции

Функция РазделКонтроля(ИмяОбработчика) Экспорт
	РазделКонтроля = "";
	
	Для Сч = 1 По 9 Цикл 
		Если Найти(ИмяОбработчика, "Раздел" + Сч + "_") > 0 Тогда
			РазделКонтроля = "Раздел" + Сч;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат РазделКонтроля;
КонецФункции

Функция ПредставлениеВидаДокумента(ВидДокумента, СоответствиеРеквизитов = Неопределено)
	Если Не ЗначениеЗаполнено(ВидДокумента) Тогда
		Возврат "";
	КонецЕсли;
	
	Если СоответствиеРеквизитов = Неопределено Тогда
		РеквизитыВидаДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидДокумента, "КраткоеНаименование, Наименование");
	Иначе
		РеквизитыВидаДокумента = СоответствиеРеквизитов[ВидДокумента];
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыВидаДокумента.КраткоеНаименование) Тогда
		ПредставлениеВидДокумента = РеквизитыВидаДокумента.КраткоеНаименование;
	Иначе
		ПредставлениеВидДокумента = РеквизитыВидаДокумента.Наименование;
	КонецЕсли;
	
	Возврат ПредставлениеВидДокумента;
КонецФункции

Функция ПредставлениеПодтверждающегоДокумента(Знач ПредставлениеВидаДокумента, Знач НомерДокумента, Знач ДатаДокумента)
	МассивСтрокПодтверждающийДокумент = Новый Массив;
	
	МассивСтрокПодтверждающийДокумент.Добавить(ПредставлениеВидаДокумента);
	МассивСтрокПодтверждающийДокумент.Добавить("№" + НомерДокумента);
	МассивСтрокПодтверждающийДокумент.Добавить(НСтр("ru= 'от'"));
	МассивСтрокПодтверждающийДокумент.Добавить(Формат(ДатаДокумента, "ДФ=ddMMyyyy"));
	
	Представление = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивСтрокПодтверждающийДокумент, " ");
	
	Возврат Представление;
КонецФункции

Функция ВидыОперацийСписаниеСРасчетногоСчета(ВидОперацииДокумента) Экспорт
	
	СоответствиеВидовОпераций = Новый Соответствие;
	
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ОплатаПоставщику, "ОплатаПоставщику");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.ОплатаПоставщику, "ОплатаПоставщику");
	
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ВозвратДенежныхСредствПокупателю, "ВозвратОплатыКлиенту");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.ВозвратДенежныхСредствПокупателю, "ВозвратОплатыКлиенту");

	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.РасчетыПоКредитамИЗаймамСКонтрагентами, "ОплатаПоКредиту");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.РасчетыПоКредитамИЗаймамСКонтрагентами, "ОплатаПоКредиту");
	
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ПрочееСписаниеБезналичныхДенежныхСредств, "Прочее");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.ПрочийРасходДенежныхСредств, "Прочее");
	
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ПрочиеРасчетыСКонтрагентами, "Прочее");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.ПрочиеРасчетыСКонтрагентами, "Прочее");

	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога, "ПеречислениеВБюджет");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.ПеречислениеНалога, "ПеречислениеВБюджет");

	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ПереводНаДругойСчет, "ПеречислениеДенежныхСредствНаДругойСчет");
	//СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование

	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ПеречислениеЗП, "Прочее");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.ПеречислениеЗП, "Прочее");
	
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийППИсходящее.ПустаяСсылка(), "");
	СоответствиеВидовОпераций.Вставить(Перечисления.ВидыОперацийЗаявкиНаРасходование.ПустаяСсылка(), "");

	Возврат СоответствиеВидовОпераций.Получить(ВидОперацииДокумента);
	
КонецФункции

// Контроль раздела I "В соответствии с 275-ФЗ"

// Пункт83

Процедура РезультатКонтроля_Раздел1_275_83_1_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_83_1_1";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоставщику"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст = ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_1();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если НайденнаяСтрока.ТребуетсяПроверка И НайденнаяСтрока.УИП <> НайденнаяСтрока.ИГК Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'В поле УИП (%1) не указан ИГК отдельного счета (%2).'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						?(ЗначениеЗаполнено(НайденнаяСтрока.УИП), НайденнаяСтрока.УИП, "-"), 
						?(ЗначениеЗаполнено(НайденнаяСтрока.ИГК), НайденнаяСтрока.ИГК, "-"),);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_83_1_2_б(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_83_1_2_б";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоставщику" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	ИначеЕсли ОбщегоНазначения275КлиентСервер.ТипПлатежаФЗ275(Ссылка) <> Справочники.ТипыПлатежейФЗ275.ОплатаТоваровРаботУслугПоРегулируемымЦенам Тогда
		Описание = НСтр("ru= 'Контроль не требуется для типа платежа ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_б();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				Если СтрЧислоВхождений(НайденнаяСтрока.НазначениеПлатежа, НайденнаяСтрока.ПредметЭтапаКонтракта) = 0 Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Товар, работа или услуга ""%1"", по которому применяются тарифы, не указан в назначении платежа.'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, НайденнаяСтрока.ПредметЭтапаКонтракта);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_83_1_2_в(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_83_1_2_в";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеВБюджет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_в();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль состояния
				Если НайденнаяСтрока.Состояние <> Перечисления.СостоянияКонтрактов.Завершен Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Контракт ""%1"" не завершен и имеет статус ""%2"".'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.КонтрактСЗаказчиком, НайденнаяСтрока.Состояние);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль указания контракта
				Если Не НайденнаяСтрока.КонтрактУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан подтверждающий документ вида ""Контракт"".'"); 
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль указания документов, подтверждающих исполнение контракта
				Если Не НайденнаяСтрока.ДокументИсполненияУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан ни один документ, подтверждающий исполнение контракта.'");
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				
				// Контроль накопленных по контракту сумм перечисления прибыли
				Если НайденнаяСтрока.СуммаДокумента + НайденнаяСтрока.СуммаФакт > НайденнаяСтрока.СуммаПлан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. с учетом ранее созданных распоряжений на сумму %2 руб. превышает размер прибыли %3 руб., указанный в контрактах.'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаФакт, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаПлан, "ЧЦ=15; ЧДЦ=2"));
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_83_1_2_г(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_83_1_2_г";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеВБюджет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_г();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль состояния
				Если НайденнаяСтрока.Состояние = Перечисления.СостоянияКонтрактов.Завершен Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Контракт ""%1"" завершен.'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.КонтрактСЗаказчиком, 
						НайденнаяСтрока.Состояние);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль головного исполнителя
				Если Не НайденнаяСтрока.ОрганизацияЭтоГоловнойИсполнитель Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Организация ""%1"" не является головным исполнителем контракта ""%2"".'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.Организация, 
						НайденнаяСтрока.КонтрактСЗаказчиком);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль указания контракта
				Если Не НайденнаяСтрока.КонтрактУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан подтверждающий документ вида ""Контракт"".'"); 
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль указания документов, подтверждающих исполнение контракта
				Если Не НайденнаяСтрока.ДокументИсполненияУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан ни один документ, подтверждающий исполнение контракта.'");
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				
				// Контроль накопленных по контракту сумм перечисления прибыли
				Если НайденнаяСтрока.СуммаДокумента + НайденнаяСтрока.СуммаФакт > НайденнаяСтрока.СуммаПлан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. с учетом ранее созданных распоряжений на сумму %2 руб. превышает размер прибыли %3 руб., указанный в контрактах.'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаФакт, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаПлан, "ЧЦ=15; ЧДЦ=2"));
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_83_1_2_е(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_83_1_2_е";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеВБюджет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_е();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль состояния
				Если НайденнаяСтрока.Состояние = Перечисления.СостоянияКонтрактов.Завершен Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Контракт ""%1"" завершен.'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.КонтрактСЗаказчиком, 
						НайденнаяСтрока.Состояние);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль указания контракта
				Если Не НайденнаяСтрока.КонтрактУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан подтверждающий документ вида ""Контракт"".'"); 
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль указания документов, подтверждающих исполнение контракта
				Если Не НайденнаяСтрока.ДокументИсполненияУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан ни один документ, подтверждающий исполнение контракта.'");
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				
				// Контроль накопленных по контракту сумм возмещения
				Если НайденнаяСтрока.СуммаДокумента + НайденнаяСтрока.СуммаФакт > НайденнаяСтрока.СуммаПлан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. с учетом ранее созданных распоряжений на сумму %2 руб. превышает размер возмещения %3 руб., указанный в контрактах.'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаФакт, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаПлан, "ЧЦ=15; ЧДЦ=2"));
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_83_1_2_з(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_83_1_2_з";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоставщику"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеВБюджет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	ИначеЕсли ОбщегоНазначения275КлиентСервер.ТипПлатежаФЗ275(Ссылка) <> Справочники.ТипыПлатежейФЗ275.ОплатаИныхРасходовНаСуммуНеБолееТрехМиллионовРублейВМесяц Тогда
		Описание = НСтр("ru= 'Контроль не требуется для типа платежа ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_з();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль лимита 3 млн. руб.
				Если НайденнаяСтрока.СуммаДокумента + НайденнаяСтрока.СуммаРасходовВТекущемМесяце > 3000000 Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. с учетом ранее созданных распоряжений на сумму %2 руб. превышает лимит 3 млн.руб. в месяц.'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаРасходовВТекущемМесяце, "ЧЦ=15; ЧДЦ=2"));
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль, что счет-получатель не принадлежит организации
				Если НайденнаяСтрока.ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации Тогда
					Описание = НСтр("ru= 'Счет-получатель %1 принадлежит организации.'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, НайденнаяСтрока.БанковскийСчет);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_1()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.УИП КАК УИП,
	|	ПроверяемыеДокументы.ИГК КАК ИГК,
	|	ЕстьNull(ПроверяемыеДокументы.ТребуетсяПроверка, ЛОЖЬ) КАК ТребуетсяПроверка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.ИдентификаторПлатежа КАК УИП,
	|		ЗаявкаНаРасходованиеДенежныхСредств.КонтрактИсполнителя.ГосударственныйКонтракт.Код КАК ИГК,
	|		ЗаявкаНаРасходованиеДенежныхСредств.КонтрактИсполнителя.КонтрактСУчастникомГОЗ КАК ТребуетсяПроверка
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В(&ПроверяемыеДокументы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ИдентификаторПлатежа,
	|		СписаниеСРасчетногоСчета.ГосударственныйКонтракт.Код,
	|		СписаниеСРасчетногоСчета.КонтрактИсполнителя.ПлатежиПо275ФЗ
	|	ИЗ
	|		СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В(&ПроверяемыеДокументы)) КАК ПроверяемыеДокументы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.УИП,
	|	ПроверяемыеДокументы.ИГК,
	|	ПроверяемыеДокументы.ТребуетсяПроверка";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_б()
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ПроверяемыеДокументы.ПредметЭтапаКонтракта КАК ПредметЭтапаКонтракта
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.НазначениеПлатежа КАК НазначениеПлатежа,
	|		ЗаявкаНаРасходованиеДенежныхСредств.ЭтапКонтракта.Наименование КАК ПредметЭтапаКонтракта
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.НазначениеПлатежа,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств.ЭтапКонтракта.Наименование
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)) КАК ПроверяемыеДокументы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.НазначениеПлатежа,
	|	ПроверяемыеДокументы.ПредметЭтапаКонтракта";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_в()
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ПеречисленияПрибылиИсполнителю))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеВидыДокументов
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.ПодтверждаетИсполнениеКонтракта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка)) КАК КонтрактСЗаказчиком,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрактов.ПустаяСсылка)) КАК Состояние,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	СУММА(ЕСТЬNULL(КонтрактыСЗаказчиками.СуммаПрибыли, 0)) КАК СуммаПлан,
	|	СУММА(ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.РасходОборот, 0)) КАК СуммаФакт,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактФайлЗаполнен,
	|	МАКСИМУМ(ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта) КАК ДокументИсполненияУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияФайлЗаполнен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка КАК Заявка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|		ИЗ
	|			ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|		ГДЕ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|			И ЗаявкаНаРасходованиеДенежныхСредств.ТипПлатежаФЗ275 В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СписаниеСРасчетногоСчета.Ссылка,
	|			СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|		ИЗ
	|			СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ГДЕ
	|			СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|			И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПроверяемыеДокументыГруппировка.Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка) КАК ПроверяемыеДокументы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ЗаявкаПодтверждающиеДокументы
	|			ПО ПроверяемыеДокументы.Заявка = ЗаявкаПодтверждающиеДокументы.Ссылка
	|				И (ЗаявкаПодтверждающиеДокументы.ВидДокумента В
	|					(ВЫБРАТЬ
	|						ПроверяемыеВидыДокументов.Ссылка
	|					ИЗ
	|						ПроверяемыеВидыДокументов КАК ПроверяемыеВидыДокументов))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК ЗаявкаФинансирование
	|			ПО ПроверяемыеДокументы.Заявка = ЗаявкаФинансирование.Ссылка
	|				И (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|					ИЛИ ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|						И ПроверяемыеДокументы.Ссылка.КонтрактСЗаказчиком = ЗаявкаФинансирование.КонтрактСЗаказчиком)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|			ПО (ЗаявкаФинансирование.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДСпоГосконтрактам.Обороты(
	|				,
	|				&ТекущаяДата,
	|				Регистратор,
	|				ТипПлатежа В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ДвиженияДенежныхСредствОбороты
	|			ПО (КонтрактыСЗаказчиками.Ссылка = ДвиженияДенежныхСредствОбороты.КонтрактСЗаказчиком)
	|				И (ДвиженияДенежныхСредствОбороты.Регистратор <> ПроверяемыеДокументы.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента,
	|	КонтрактыСЗаказчиками.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрактов.ПустаяСсылка))
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеВидыДокументов";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_г()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ПеречислениеПрибылиГоловномуИсполнителю))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеВидыДокументов
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.ПодтверждаетИсполнениеКонтракта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ВЫБОР
	|		КОГДА НЕ КонтрактыСЗаказчиками.Ссылка ЕСТЬ NULL 
	|				И ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|			ТОГДА ВЫБОР КОГДА КонтрактыСЗаказчиками.Ссылка.Владелец = ВЫРАЗИТЬ(ПроверяемыеДокументы.Ссылка КАК Документ.ЗаявкаНаРасходованиеСредств).Организация ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		КОГДА НЕ КонтрактыСЗаказчиками.Ссылка ЕСТЬ NULL 
	|				И ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|			ТОГДА ВЫБОР КОГДА КонтрактыСЗаказчиками.Ссылка.Владелец = ВЫРАЗИТЬ(ПроверяемыеДокументы.Ссылка КАК Документ.ПлатежноеПоручениеИсходящее).Организация ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЭтоГоловнойИсполнитель,
	|	ПроверяемыеДокументы.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ КонтрактыСЗаказчиками.Ссылка ЕСТЬ NULL 
	|			ТОГДА КонтрактыСЗаказчиками.Ссылка.Владелец
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК ГоловнойИсполнитель,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрактов.ПустаяСсылка)) КАК Состояние,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	СУММА(ЕСТЬNULL(КонтрактыСЗаказчиками.СуммаПрибыли, 0)) КАК СуммаПлан,
	|	СУММА(ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.РасходОборот, 0)) КАК СуммаФакт,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактФайлЗаполнен,
	|	МАКСИМУМ(ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта) КАК ДокументИсполненияУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияФайлЗаполнен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка КАК Заявка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|		ИЗ
	|			ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|		ГДЕ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|			И ЗаявкаНаРасходованиеДенежныхСредств.ТипПлатежаФЗ275 В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СписаниеСРасчетногоСчета.Ссылка,
	|			СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|		ИЗ
	|			СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ГДЕ
	|			СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|			И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПроверяемыеДокументыГруппировка.Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка) КАК ПроверяемыеДокументы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ЗаявкаПодтверждающиеДокументы
	|		ПО ПроверяемыеДокументы.Заявка = ЗаявкаПодтверждающиеДокументы.Ссылка
	|			И (ЗаявкаПодтверждающиеДокументы.ВидДокумента В
	|				(ВЫБРАТЬ
	|					ПроверяемыеВидыДокументов.Ссылка
	|				ИЗ
	|					ПроверяемыеВидыДокументов КАК ПроверяемыеВидыДокументов))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК ЗаявкаФинансирование
	|		ПО ПроверяемыеДокументы.Заявка = ЗаявкаФинансирование.Ссылка
	|			И (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|				ИЛИ ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|					И ПроверяемыеДокументы.Ссылка.КонтрактСЗаказчиком = ЗаявкаФинансирование.КонтрактСЗаказчиком)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|		ПО (ЗаявкаФинансирование.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДСпоГосконтрактам.Обороты(
	|				,
	|				&ТекущаяДата,
	|				Регистратор,
	|				ТипПлатежа В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ДвиженияДенежныхСредствОбороты
	|		ПО (КонтрактыСЗаказчиками.Ссылка = ДвиженияДенежныхСредствОбороты.КонтрактСЗаказчиком)
	|			И (ДвиженияДенежныхСредствОбороты.Регистратор <> ПроверяемыеДокументы.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента,
	|	КонтрактыСЗаказчиками.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрактов.ПустаяСсылка)),
	|	ПроверяемыеДокументы.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА НЕ КонтрактыСЗаказчиками.Ссылка ЕСТЬ NULL 
	|				И ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|			ТОГДА ВЫБОР КОГДА КонтрактыСЗаказчиками.Ссылка.Владелец = ВЫРАЗИТЬ(ПроверяемыеДокументы.Ссылка КАК Документ.ЗаявкаНаРасходованиеСредств).Организация ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ КонтрактыСЗаказчиками.Ссылка ЕСТЬ NULL 
	|			ТОГДА КонтрактыСЗаказчиками.Ссылка.Владелец
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ КонтрактыСЗаказчиками.Ссылка ЕСТЬ NULL 
	|				И ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|			ТОГДА ВЫБОР КОГДА КонтрактыСЗаказчиками.Ссылка.Владелец = ВЫРАЗИТЬ(ПроверяемыеДокументы.Ссылка КАК Документ.ЗаявкаНаРасходованиеСредств).Организация ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		КОГДА НЕ КонтрактыСЗаказчиками.Ссылка ЕСТЬ NULL 
	|				И ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|			ТОГДА ВЫБОР КОГДА КонтрактыСЗаказчиками.Ссылка.Владелец = ВЫРАЗИТЬ(ПроверяемыеДокументы.Ссылка КАК Документ.ПлатежноеПоручениеИсходящее).Организация ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеВидыДокументов";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_е()
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.СписаниеНаВозмещениеЗатратЗаСчетСобственныхСредств))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеВидыДокументов
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.ПодтверждаетИсполнениеКонтракта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ЕСТЬNULL(КонтрактыСЗаказчикамиКалькуляцияЗатрат.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка)) КАК КонтрактСЗаказчиком,
	|	ЕСТЬNULL(КонтрактыСЗаказчикамиКалькуляцияЗатрат.Ссылка.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрактов.ПустаяСсылка)) КАК Состояние,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	СУММА(ЕСТЬNULL(КонтрактыСЗаказчикамиКалькуляцияЗатрат.СуммаКВозмещению, 0)) КАК СуммаПлан,
	|	СУММА(ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.РасходОборот, 0)) КАК СуммаФакт,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактФайлЗаполнен,
	|	МАКСИМУМ(ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта) КАК ДокументИсполненияУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияФайлЗаполнен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка КАК Заявка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|		ИЗ
	|			ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|		ГДЕ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|			И ЗаявкаНаРасходованиеДенежныхСредств.ТипПлатежаФЗ275 В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СписаниеСРасчетногоСчета.Ссылка,
	|			СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|		ИЗ
	|			СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ГДЕ
	|			СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|			И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПроверяемыеДокументыГруппировка.Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка) КАК ПроверяемыеДокументы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ЗаявкаПодтверждающиеДокументы
	|			ПО ПроверяемыеДокументы.Заявка = ЗаявкаПодтверждающиеДокументы.Ссылка
	|				И (ЗаявкаПодтверждающиеДокументы.ВидДокумента В
	|					(ВЫБРАТЬ
	|						ПроверяемыеВидыДокументов.Ссылка
	|					ИЗ
	|						ПроверяемыеВидыДокументов КАК ПроверяемыеВидыДокументов))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК ЗаявкаФинансирование
	|			ПО ПроверяемыеДокументы.Заявка = ЗаявкаФинансирование.Ссылка
	|				И (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|					ИЛИ ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|						И ПроверяемыеДокументы.Ссылка.КонтрактСЗаказчиком = ЗаявкаФинансирование.КонтрактСЗаказчиком)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыСЗаказчиками.КалькуляцияЗатрат КАК КонтрактыСЗаказчикамиКалькуляцияЗатрат
	|			ПО (ЗаявкаФинансирование.КонтрактСЗаказчиком = КонтрактыСЗаказчикамиКалькуляцияЗатрат.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДСпоГосконтрактам.Обороты(
	|				,
	|				&ТекущаяДата,
	|				Регистратор,
	|				ТипПлатежа В
	|					(ВЫБРАТЬ
	|						ПроверяемыеТипыПлатежей.Ссылка
	|					ИЗ
	|						ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ДвиженияДенежныхСредствОбороты
	|			ПО (КонтрактыСЗаказчикамиКалькуляцияЗатрат.Ссылка = ДвиженияДенежныхСредствОбороты.КонтрактСЗаказчиком)
	|				И (ДвиженияДенежныхСредствОбороты.Регистратор <> ПроверяемыеДокументы.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента,
	|	КонтрактыСЗаказчикамиКалькуляцияЗатрат.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ЕСТЬNULL(КонтрактыСЗаказчикамиКалькуляцияЗатрат.Ссылка.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияКонтрактов.ПустаяСсылка))
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеВидыДокументов";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_83_1_2_з()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ОплатаИныхРасходовНаСуммуНеБолееТрехМиллионовРублейВМесяц))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка КАК Заявка,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчет КАК БанковскийСчет,
	|	ПроверяемыеДокументыГруппировка.ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации КАК ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации
	|ПОМЕСТИТЬ ПроверяемыеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет КАК БанковскийСчет,
	|		ЛОЖЬ КАК ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|		И ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации,
	|		ВЫБОР КОГДА СписаниеСРасчетногоСчета.БанковскийСчетПолучатель <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчета.ПустаяСсылка) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|		И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументыГруппировка.Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчет,
	|	ПроверяемыеДокументыГруппировка.ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ПроверяемыеДокументы.БанковскийСчет КАК БанковскийСчет,
	|	ПроверяемыеДокументы.ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации КАК ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ЕСТЬNULL(СУММА(ДвиженияДенежныхСредствОбороты.РасходОборот), 0) КАК СуммаРасходовВТекущемМесяце
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДСпоГосконтрактам.Обороты(
	|				НАЧАЛОПЕРИОДА(&ТекущаяДата, МЕСЯЦ),
	|				КОНЕЦПЕРИОДА(&ТекущаяДата, МЕСЯЦ),
	|				Регистратор,
	|				БанковскийСчетОрганизации В
	|						(ВЫБРАТЬ
	|							ПроверяемыеДокументы.БанковскийСчет
	|						ИЗ
	|							ПроверяемыеДокументы КАК ПроверяемыеДокументы)
	|					И ТипПлатежа В
	|						(ВЫБРАТЬ
	|							ПроверяемыеТипыПлатежей.Ссылка
	|						ИЗ
	|							ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ДвиженияДенежныхСредствОбороты
	|		ПО ПроверяемыеДокументы.БанковскийСчет = ДвиженияДенежныхСредствОбороты.БанковскийСчетОрганизации
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ПроверяемыеДокументы.БанковскийСчет,
	|	ПроверяемыеДокументы.ЕстьБанковскиеСчетаПолучателиПринадлежащиеОрганизации,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеДокументы";
	
	Возврат ТекстЗапроса;
КонецФункции

// Пункт84

Процедура РезультатКонтроля_Раздел1_275_84_2(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_84_2";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_84_2();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				// Проверка непревышения суммы платежей нарастающим итогом над остатком кредита
				Если НайденнаяСтрока.СуммаДокумента > НайденнаяСтрока.ОстатокКредита Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. превышает сумму остатка по кредиту %2 руб..'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.ОстатокКредита, "ЧЦ=15; ЧДЦ=2"));
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Проверка банковских реквизитов счета-отправителя и счета-получателя
				Если НайденнаяСтрока.БанкОтправитель <> НайденнаяСтрока.БанкПолучатель Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Банковский счет %1 должен быть открыт в банке %2 счета-получателя %3.'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.БанковскийСчетОтправитель, 
						НайденнаяСтрока.БанкПолучатель, 
						НайденнаяСтрока.БанковскийСчетПолучатель);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры
	
Процедура РезультатКонтроля_Раздел1_275_84_3(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_84_3";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст = ТекстЗапросаРезультатКонтроля_Раздел1_275_84_3();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль одновременного оформления заявок по зарплате и зарплатным налогам 
				Если Не (НайденнаяСтрока.ЗаявкиПоВыплатеЗарплатыОформлены
					И НайденнаяСтрока.ЗаявкиПоВыплатеЗарплатныхНалоговОформлены) Тогда
					КонтрольПройден = Ложь;
					
					Если НайденнаяСтрока.ЭтоЗаявкаПоВыплатеЗарплаты Тогда
						Описание = НСтр("ru= 'Не оформлены заявки на уплату налогов.'"); 
					Иначе
						Описание = НСтр("ru= 'Не оформлены заявки на выплату заработной платы.'"); 
					КонецЕсли;
					ОписаниеМассивСтрок.Добавить(Описание);
					
					Прервать;
				КонецЕсли;
				
				// Контроль оформления заявок в один день
				Если НайденнаяСтрока.МинимальнаяДатаПоЗарплате <> НайденнаяСтрока.МаксимальнаяДатаПоЗарплате
					Или НайденнаяСтрока.МаксимальнаяДатаПоЗарплате <> НайденнаяСтрока.МинимальнаяДатаПоНалогам
					Или НайденнаяСтрока.МаксимальнаяДатаПоЗарплате <> НайденнаяСтрока.МаксимальнаяДатаПоНалогам Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Заявки на выплату заработной платы и уплаты налогов оформлены на разные даты.'"); 
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_84_9_б(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_84_9_б";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст = ТекстЗапросаРезультатКонтроля_Раздел1_275_84_9_б();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль одновременного оформления заявок по зарплате и зарплатным налогам 
				Если Не (НайденнаяСтрока.ЗаявкиПоВыплатеЗарплатыОформлены
					И НайденнаяСтрока.ЗаявкиПоВыплатеЗарплатныхНалоговОформлены) Тогда
					КонтрольПройден = Ложь;
					
					Если НайденнаяСтрока.ЭтоЗаявкаПоВыплатеЗарплаты Тогда
						Описание = НСтр("ru= 'Не оформлены заявки на уплату налогов.'"); 
					Иначе
						Описание = НСтр("ru= 'Не оформлены заявки на выплату заработной платы.'"); 
					КонецЕсли;
					ОписаниеМассивСтрок.Добавить(Описание);
					
					Прервать;
				КонецЕсли;
				
				// Контроль оформления заявок в один день
				Если НайденнаяСтрока.МинимальнаяДатаПоЗарплате <> НайденнаяСтрока.МаксимальнаяДатаПоЗарплате
					Или НайденнаяСтрока.МаксимальнаяДатаПоЗарплате <> НайденнаяСтрока.МинимальнаяДатаПоНалогам
					Или НайденнаяСтрока.МаксимальнаяДатаПоЗарплате <> НайденнаяСтрока.МаксимальнаяДатаПоНалогам Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Заявки на выплату заработной платы и уплаты налогов оформлены на разные даты.'"); 
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_84_10(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_84_10";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_84_10();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Проверка банковских реквизитов счета-отправителя и счета-получателя
				Если НайденнаяСтрока.БанкОтправитель <> НайденнаяСтрока.БанкПолучатель Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Банковский счет-получатель %1 должен быть открыт в уполномоченном банке %2.'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.БанковскийСчетПолучатель, 
						НайденнаяСтрока.БанкОтправитель);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_84_2()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.СписаниеСуммКредитовПеречисленныхУполномоченнымБанком))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка КАК Заявка,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетОтправитель КАК БанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправитель КАК БанкОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетПолучатель КАК БанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкПолучатель КАК БанкПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправительЭтоБанкПолучатель КАК БанкОтправительЭтоБанкПолучатель
	|ПОМЕСТИТЬ ПроверяемыеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет КАК БанковскийСчетОтправитель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет.Банк КАК БанкОтправитель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента КАК БанковскийСчетПолучатель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента.Банк КАК БанкПолучатель,
	|		ВЫБОР КОГДА (ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет.Банк = ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента.Банк) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК БанкОтправительЭтоБанкПолучатель
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|		И ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации.Банк,
	|		СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента,
	|		СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.Банк,
	|		ВЫБОР КОГДА СписаниеСРасчетногоСчета.БанковскийСчетОрганизации.Банк = СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.Банк ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|		И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументыГруппировка.Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправительЭтоБанкПолучатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ПроверяемыеДокументы.БанковскийСчетОтправитель КАК БанковскийСчет,
	|	ПроверяемыеДокументы.БанкОтправитель КАК БанкОтправитель,
	|	ПроверяемыеДокументы.БанковскийСчетПолучатель КАК БанковскийСчетПолучатель,
	|	ПроверяемыеДокументы.БанкПолучатель КАК БанкПолучатель,
	|	ПроверяемыеДокументы.БанкОтправительЭтоБанкПолучатель КАК БанкОтправительЭтоБанкПолучатель,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ЕСТЬNULL(СУММА(ДенежныеСредстваОстатки.СуммаУпрОстаток), 0) КАК ОстатокКредита
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредства.Остатки(
	|				&ТекущаяДата,
	|				БанковскийСчетКасса В
	|					(ВЫБРАТЬ
	|						ПроверяемыеДокументы.БанковскийСчетОтправитель
	|					ИЗ
	|						ПроверяемыеДокументы КАК ПроверяемыеДокументы)) КАК ДенежныеСредстваОстатки
	|		ПО ПроверяемыеДокументы.БанковскийСчетОтправитель = ДенежныеСредстваОстатки.БанковскийСчетКасса
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента,
	|	ПроверяемыеДокументы.БанковскийСчетОтправитель,
	|	ПроверяемыеДокументы.БанкОтправитель,
	|	ПроверяемыеДокументы.БанковскийСчетПолучатель,
	|	ПроверяемыеДокументы.БанкПолучатель,
	|	ПроверяемыеДокументы.БанкОтправительЭтоБанкПолучатель
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеДокументы";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_84_3()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ОплатаТруда), ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.УплатаНалоговИСборовТаможенныхПлатежейСтраховыхВзносов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка КАК Заявка,
	|	ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты КАК ЗаявкаНаПеречислениеЗарплаты,
	|	ВЫБОР КОГДА (НЕ ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ЭтоЗаявкаПоЗарплатнымНалогам,
	|	ВЫБОР КОГДА (ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ЭтоЗаявкаПоВыплатеЗарплаты
	|ПОМЕСТИТЬ ПроверяемыеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ЗаявкаНаПеречислениеЗарплаты КАК ЗаявкаНаПеречислениеЗарплаты
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Проведен
	|		И ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|		И ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств.ЗаявкаНаПеречислениеЗарплаты
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Проведен
	|		И СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|		И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументыГруппировка.Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка,
	|	ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты,
	|	ЕСТЬNULL(ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка, ЛОЖЬ),
	|	ВЫБОР КОГДА ЕСТЬNULL(ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка, ЛОЖЬ) = ЛОЖЬ ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ,
	|	ВЫБОР КОГДА (НЕ ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ,
	|	ВЫБОР КОГДА (ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоЗарплатнымНалогам КАК ЭтоЗаявкаПоЗарплатнымНалогам,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты КАК ЭтоЗаявкаПоВыплатеЗарплаты,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА МАКСИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.Заявка.Дата, ДЕНЬ))
	|		ИНАЧЕ МАКСИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Дата, ДЕНЬ))
	|	КОНЕЦ КАК МаксимальнаяДатаПоЗарплате,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА МИНИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.Заявка.Дата, ДЕНЬ))
	|		ИНАЧЕ МИНИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Дата, ДЕНЬ))
	|	КОНЕЦ КАК МинимальнаяДатаПоЗарплате,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(ЗаявкиНаЗарплатныеНалоги.Дата, ДЕНЬ)) КАК МаксимальнаяДатаПоНалогам,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ЗаявкиНаЗарплатныеНалоги.Дата, ДЕНЬ)) КАК МинимальнаяДатаПоНалогам,
	|	ВЫБОР КОГДА (НЕ ЗаявкиНаЗарплатныеНалоги.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ЗаявкиПоВыплатеЗарплатныхНалоговОформлены,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.Заявка.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL )
	|				И ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Проведен ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|	КОНЕЦ КАК ЗаявкиПоВыплатеЗарплатыОформлены
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкиНаЗарплатныеНалоги
	|		ПО (ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|					И ПроверяемыеДокументы.Заявка = ЗаявкиНаЗарплатныеНалоги.ЗаявкаНаПеречислениеЗарплаты
	|					И ЗаявкиНаЗарплатныеНалоги.Проведен
	|				ИЛИ ПроверяемыеДокументы.ЭтоЗаявкаПоЗарплатнымНалогам
	|					И ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты = ЗаявкиНаЗарплатныеНалоги.ЗаявкаНаПеречислениеЗарплаты
	|					И ЗаявкиНаЗарплатныеНалоги.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоЗарплатнымНалогам,
	|	ВЫБОР КОГДА (НЕ ЗаявкиНаЗарплатныеНалоги.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.Заявка.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL )
	|				И ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Проведен ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|	КОНЕЦ
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеДокументы";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_84_9_б()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.СписаниеПоИсполнительнымДокументам), ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.УплатаНалоговИСборовТаможенныхПлатежейСтраховыхВзносов))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка КАК Заявка,
	|	ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты КАК ЗаявкаНаПеречислениеЗарплаты,
	|	ВЫБОР КОГДА (НЕ ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ЭтоЗаявкаПоЗарплатнымНалогам,
	|	ВЫБОР КОГДА (ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ЭтоЗаявкаПоВыплатеЗарплаты
	|ПОМЕСТИТЬ ПроверяемыеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ЗаявкаНаПеречислениеЗарплаты КАК ЗаявкаНаПеречислениеЗарплаты
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Проведен
	|		И ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|		И ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств.ЗаявкаНаПеречислениеЗарплаты
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Проведен
	|		И СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|		И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументыГруппировка.Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка,
	|	ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты,
	|	ЕСТЬNULL(ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка, ЛОЖЬ),
	|	ВЫБОР КОГДА ЕСТЬNULL(ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка, ЛОЖЬ) = ЛОЖЬ ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ,
	|	ВЫБОР КОГДА (НЕ ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ,
	|	ВЫБОР КОГДА (ПроверяемыеДокументыГруппировка.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоЗарплатнымНалогам КАК ЭтоЗаявкаПоЗарплатнымНалогам,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты КАК ЭтоЗаявкаПоВыплатеЗарплаты,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА МАКСИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.Заявка.Дата, ДЕНЬ))
	|		ИНАЧЕ МАКСИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Дата, ДЕНЬ))
	|	КОНЕЦ КАК МаксимальнаяДатаПоЗарплате,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА МИНИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.Заявка.Дата, ДЕНЬ))
	|		ИНАЧЕ МИНИМУМ(НАЧАЛОПЕРИОДА(ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Дата, ДЕНЬ))
	|	КОНЕЦ КАК МинимальнаяДатаПоЗарплате,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(ЗаявкиНаЗарплатныеНалоги.Дата, ДЕНЬ)) КАК МаксимальнаяДатаПоНалогам,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ЗаявкиНаЗарплатныеНалоги.Дата, ДЕНЬ)) КАК МинимальнаяДатаПоНалогам,
	|	ВЫБОР КОГДА (НЕ ЗаявкиНаЗарплатныеНалоги.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ЗаявкиПоВыплатеЗарплатныхНалоговОформлены,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.Заявка.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL )
	|				И ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Проведен ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|	КОНЕЦ КАК ЗаявкиПоВыплатеЗарплатыОформлены
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкиНаЗарплатныеНалоги
	|		ПО (ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|					И ПроверяемыеДокументы.Заявка = ЗаявкиНаЗарплатныеНалоги.ЗаявкаНаПеречислениеЗарплаты
	|					И ЗаявкиНаЗарплатныеНалоги.Проведен
	|				ИЛИ ПроверяемыеДокументы.ЭтоЗаявкаПоЗарплатнымНалогам
	|					И ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты = ЗаявкиНаЗарплатныеНалоги.ЗаявкаНаПеречислениеЗарплаты
	|					И ЗаявкиНаЗарплатныеНалоги.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты,
	|	ПроверяемыеДокументы.ЭтоЗаявкаПоЗарплатнымНалогам,
	|	ВЫБОР КОГДА (НЕ ЗаявкиНаЗарплатныеНалоги.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПроверяемыеДокументы.ЭтоЗаявкаПоВыплатеЗарплаты
	|			ТОГДА ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.Заявка.Ссылка ЕСТЬ NULL ) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА (НЕ ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Ссылка ЕСТЬ NULL )
	|				И ПроверяемыеДокументы.ЗаявкаНаПеречислениеЗарплаты.Проведен ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|	КОНЕЦ
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеДокументы";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_84_10()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТипыПлатежейФЗ275.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеТипыПлатежей
	|ИЗ
	|	Справочник.ТипыПлатежейФЗ275 КАК ТипыПлатежейФЗ275
	|ГДЕ
	|	ТипыПлатежейФЗ275.Ссылка В (ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.СписаниеСвязаннноеСРазмещениемНаДепозитеУполномоченногоБанка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка КАК Заявка,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетОтправитель КАК БанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправитель КАК БанкОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетПолучатель КАК БанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкПолучатель КАК БанкПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправительЭтоБанкПолучатель КАК БанкОтправительЭтоБанкПолучатель
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет КАК БанковскийСчетОтправитель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет.Банк КАК БанкОтправитель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента КАК БанковскийСчетПолучатель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента.Банк КАК БанкПолучатель,
	|		ВЫБОР КОГДА (ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет.Банк = ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента.Банк) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК БанкОтправительЭтоБанкПолучатель
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|		И ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации.Банк,
	|		СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента,
	|		СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.Банк,
	|		ВЫБОР КОГДА СписаниеСРасчетногоСчета.БанковскийСчетОрганизации.Банк = СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.Банк ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)
	|		И СписаниеСРасчетногоСчета.ТипПлатежаФЗ275 В
	|				(ВЫБРАТЬ
	|					ПроверяемыеТипыПлатежей.Ссылка
	|				ИЗ
	|					ПроверяемыеТипыПлатежей КАК ПроверяемыеТипыПлатежей)) КАК ПроверяемыеДокументыГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументыГруппировка.Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправитель,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкПолучатель,
	|	ПроверяемыеДокументыГруппировка.БанкОтправительЭтоБанкПолучатель
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеТипыПлатежей";
	
	Возврат ТекстЗапроса;
КонецФункции

// Пункт85

Процедура РезультатКонтроля_Раздел1_275_85_1_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_85_1_1";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоставщику"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ВозвратОплатыКлиенту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	ИначеЕсли ОбщегоНазначения275КлиентСервер.ТипПлатежаФЗ275(Ссылка) <> Справочники.ТипыПлатежейФЗ275.СписаниеНаОтдельныйСчет Тогда
		Описание = НСтр("ru= 'Контроль не требуется для типа платежа ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_85_1_1();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль совпадения УИП и ИГК
				Если НайденнаяСтрока.ИГКСчетаОтправителя <> НайденнаяСтрока.УИП Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'ИГК %1 банковского счета-отправителя ""%2"" не совпадает с УИП %3.'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.ИГКСчетаОтправителя, 
						НайденнаяСтрока.БанковскийСчетОтправитель, 
						НайденнаяСтрока.УИП);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
				
				// Контроль совпадения ИГК отдельных счетов
				Если НайденнаяСтрока.ИГКСчетаОтправителя <> НайденнаяСтрока.ИГКСчетаПолучателя Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'ИГК %1 банковского счета-отправителя ""%2"" не совпадает с ИГК %3 банковского счета-получателя ""%4"".'"); 
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						НайденнаяСтрока.ИГКСчетаОтправителя, 
						НайденнаяСтрока.БанковскийСчетОтправитель, 
						НайденнаяСтрока.ИГКСчетаПолучателя, 
						НайденнаяСтрока.БанковскийСчетПолучатель);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_85_1_3(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_85_1_3";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ДанныеДокументовДляКонтроля = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
		Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_85_1_3();
		ПроверяемыеДокументы = Новый Массив;
		ПроверяемыеДокументы.Добавить(Ссылка);
		Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
		
		ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
	Иначе
		ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
	КонецЕсли;
	
	Отбор = Новый Структура("Ссылка", Ссылка);
	НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
	
	КонтролируемыеВидыДокументы = ДанныеДокументовДляКонтроляТаблица.Скопировать(НайденныеСтроки, "ВидДокумента");
	СоответствиеРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(КонтролируемыеВидыДокументы.ВыгрузитьКолонку(0), "КраткоеНаименование, Наименование");
	
	Если НайденныеСтроки.Количество() >= 1 Тогда
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
			// Контроль указания всех подтверждающих документов в назначении платежа
			НазначениеПлатежа = НайденнаяСтрока.НазначениеПлатежа;
			ПредставлениеДокумента = ПредставлениеПодтверждающегоДокумента(
				ПредставлениеВидаДокумента(НайденнаяСтрока.ВидДокумента, СоответствиеРеквизитов),
				НайденнаяСтрока.Номер, 
				НайденнаяСтрока.Дата);
				
			Если СтрЧислоВхождений(НазначениеПлатежа, ПредставлениеДокумента) = 0 Тогда
				КонтрольПройден = Ложь;
				
				Описание = НСтр("ru= 'Подтверждающий документ ""%1"" не указан в назначении платежа.'"); 
				Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, ПредставлениеДокумента);
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЦикла;
		
		// Контроль непревышения суммы контракта 
		СуммаДокумента = НайденныеСтроки[0].СуммаДокумента;
		
		СуммыКонтрактовВременная = ДанныеДокументовДляКонтроляТаблица.Скопировать(НайденныеСтроки, "КонтрактСЗаказчиком, СуммаКонтракта");
		СуммыКонтрактовВременная.Свернуть("КонтрактСЗаказчиком, СуммаКонтракта");
		СуммаКонтрактов = СуммыКонтрактовВременная.Итог("СуммаКонтракта");
		
		СуммыФактаВременная = ДанныеДокументовДляКонтроляТаблица.Скопировать(НайденныеСтроки, "КонтрактСЗаказчиком, СуммаФакт");
		СуммыФактаВременная.Свернуть("КонтрактСЗаказчиком, СуммаФакт");
		СуммаФакт = СуммыФактаВременная.Итог("СуммаФакт");
		
		Если СуммаДокумента + СуммаФакт > СуммаКонтрактов Тогда
			КонтрольПройден = Ложь;
			
			Описание = НСтр("ru= 'Сумма документа %1 руб. с учетом ранее выставленных распоряжений на сумму %2 руб. превышает сумму контракта %3 руб..'"); 
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
				Формат(СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
				Формат(СуммаФакт, "ЧЦ=15; ЧДЦ=2"), 
				Формат(СуммаКонтрактов, "ЧЦ=15; ЧДЦ=2"));
			ОписаниеМассивСтрок.Добавить(Описание);
		КонецЕсли;
		
		Если КонтрольПройден Тогда
			Описание = НСтр("ru= 'Контроль пройден.'");
			ОписаниеМассивСтрок.Добавить(Описание);
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_85_2_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_85_2_1";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоставщику"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ВозвратОплатыКлиенту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеВБюджет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_85_2_1();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль указания контракта
				Если Не НайденнаяСтрока.КонтрактУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан подтверждающий документ вида ""Контракт"".'"); 
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел1_275_85_2_2(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел1_275_85_2_2";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ВидОперации, ТипПлатежаФЗ275, ПодтверждающиеДокументы");
	ИначеЕсли ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ВидОперации");
		РеквизитыДокумента.Вставить("ТипПлатежаФЗ275", ОбщегоНазначения275КлиентСервер.ТипПлатежаФЗ275(Ссылка));
		Заявка = ОбщегоНазначения275КлиентСервер.ЗаявкаНаРасходованиеДенежныхСредств(Ссылка);
		Если ЗначениеЗаполнено(Заявка) Тогда
			РеквизитыЗаявки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Заявка, "ПодтверждающиеДокументы");
			РеквизитыДокумента.Вставить("ПодтверждающиеДокументы", РеквизитыЗаявки.ПодтверждающиеДокументы);
		КонецЕсли;
	КонецЕсли;
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(РеквизитыДокумента.ВидОперации) <> "ОплатаПоставщику"
		И ВидыОперацийСписаниеСРасчетногоСчета(РеквизитыДокумента.ВидОперации) <> "ВозвратОплатыКлиенту"
		И ВидыОперацийСписаниеСРасчетногоСчета(РеквизитыДокумента.ВидОперации) <> "ПеречислениеВБюджет"
		И ВидыОперацийСписаниеСРасчетногоСчета(РеквизитыДокумента.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, РеквизитыДокумента.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел1_275_85_2_2();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				// Контроль указания документов, подтверждающих исполнение контракта
				Если Не НайденнаяСтрока.ДокументИсполненияУказан Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Не указан ни один документ, подтверждающий исполнение контракта.'");
					ОписаниеМассивСтрок.Добавить(Описание);
				Иначе
					ОбязательныеВидыДокументов = Справочники.ТипыПлатежейФЗ275.ПодтверждающиеВидыДокументов(РеквизитыДокумента.ТипПлатежаФЗ275);
					ПодтверждающиеДокументыДокумента = РеквизитыДокумента.ПодтверждающиеДокументы.Выгрузить();
					
					Для Каждого ОбязательныйВидДокумента Из ОбязательныеВидыДокументов Цикл 
						Если ОбязательныйВидДокумента <> Справочники.ВидыДокументов.Контракт
							И ПодтверждающиеДокументыДокумента.Найти(ОбязательныйВидДокумента, "ВидДокумента") = Неопределено Тогда
							КонтрольПройден = Ложь;
							
							Описание = НСтр("ru= 'Не указан вид документа ""%1"", обязательный для типа платежа ""%2"".'"); 
							Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, ОбязательныйВидДокумента, РеквизитыДокумента.ТипПлатежаФЗ275);
							ОписаниеМассивСтрок.Добавить(Описание);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры
	
Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_85_1_1()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка КАК Заявка,
	|	ПроверяемыеДокументыГруппировка.УИП КАК УИП,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетОтправитель КАК БанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.ЭтоОСБанковскийСчетОтправитель КАК ЭтоОСБанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.ИГКСчетаОтправителя КАК ИГКСчетаОтправителя,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетПолучатель КАК БанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.ЭтоОСБанковскийСчетПолучатель КАК ЭтоОСБанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.ИГКСчетаПолучателя КАК ИГКСчетаПолучателя,
	|	ВЫБОР КОГДА МАКСИМУМ(ПроверяемыеДокументыГруппировка.ЭтоОСБанковскийСчетОтправитель) = МАКСИМУМ(ПроверяемыеДокументыГруппировка.ЭтоОСБанковскийСчетПолучатель) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ВыбраныОтдельныеСчета,
	|	ВЫБОР КОГДА МАКСИМУМ(ПроверяемыеДокументыГруппировка.ИГКСчетаОтправителя) = МАКСИМУМ(ПроверяемыеДокументыГруппировка.ИГКСчетаПолучателя) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ КАК ИГКВыбранныхОтдельныхСчетовСовпадает
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.ИдентификаторПлатежа КАК УИП,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет КАК БанковскийСчетОтправитель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет.ОтдельныйСчетГОЗ КАК ЭтоОСБанковскийСчетОтправитель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет.ГосударственныйКонтракт.Код КАК ИГКСчетаОтправителя,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента КАК БанковскийСчетПолучатель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента.ОтдельныйСчетГОЗ КАК ЭтоОСБанковскийСчетПолучатель,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка.КонтрактИсполнителя.БанковскийСчетКонтрагента.ГосударственныйКонтракт.Код КАК ИГКСчетаПолучателя
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств,
	|		СписаниеСРасчетногоСчета.ИдентификаторПлатежа,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации.ОтдельныйСчетГОЗ,
	|		СписаниеСРасчетногоСчета.БанковскийСчетОрганизации.ГосударственныйКонтракт.Код,
	|		ВЫБОР
	|			КОГДА СписаниеСРасчетногоСчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ПереводНаДругойСчет)
	|				ТОГДА СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента
	|			ИНАЧЕ СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА СписаниеСРасчетногоСчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ПереводНаДругойСчет)
	|				ТОГДА СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.ОтдельныйСчетГОЗ
	|			ИНАЧЕ СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.ОтдельныйСчетГОЗ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА СписаниеСРасчетногоСчета.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ПереводНаДругойСчет)
	|				ТОГДА СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.ГосударственныйКонтракт.Код
	|			ИНАЧЕ СписаниеСРасчетногоСчета.БанковскийСчетКонтрагента.ГосударственныйКонтракт.Код
	|		КОНЕЦ
	|	ИЗ
	|		СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)) КАК ПроверяемыеДокументыГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументыГруппировка.Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка,
	|	ПроверяемыеДокументыГруппировка.УИП,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.ЭтоОСБанковскийСчетОтправитель,
	|	ПроверяемыеДокументыГруппировка.ИГКСчетаОтправителя,
	|	ПроверяемыеДокументыГруппировка.БанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.ЭтоОСБанковскийСчетПолучатель,
	|	ПроверяемыеДокументыГруппировка.ИГКСчетаПолучателя";
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_85_1_3()
	ТекстЗапроса = "ВЫБРАТЬ
	|	ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка КАК Заявка
	|ПОМЕСТИТЬ ПроверяемыеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)) КАК ПроверяемыеДокументыГруппировка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументыГруппировка.Ссылка,
	|	ПроверяемыеДокументыГруппировка.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка)) КАК КонтрактСЗаказчиком,
	|	СУММА(ЕСТЬNULL(КонтрактыСЗаказчиками.СуммаКонтракта, 0)) КАК СуммаКонтракта
	|ПОМЕСТИТЬ КонтрактыСЗаказчиками
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК КонтрактыВЗаявке
	|		ПО (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств)
	|			И ПроверяемыеДокументы.Заявка = КонтрактыВЗаявке.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|		ПО (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|					И КонтрактыВЗаявке.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка
	|				ИЛИ ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|					И ПроверяемыеДокументы.Ссылка.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	КонтрактыСЗаказчиками.Ссылка КАК КонтрактСЗаказчиком,
	|	ВЫРАЗИТЬ(ПроверяемыеДокументы.Ссылка.НазначениеПлатежа КАК Строка(300)) КАК НазначениеПлатежа,
	|	ПодтверждающиеДокументыЗаявки.ВидДокумента КАК ВидДокумента,
	|	ПодтверждающиеДокументыЗаявки.Номер КАК Номер,
	|	ПодтверждающиеДокументыЗаявки.Дата КАК Дата,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодтверждающиеДокументыЗаявки.ВидДокумента) КАК КоличествоПодтверждающихДокументов,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	КонтрактыСЗаказчиками.СуммаКонтракта КАК СуммаКонтракта,
	|	СУММА(ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.РасходОборот, 0)) КАК СуммаФакт
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ПодтверждающиеДокументыЗаявки
	|		ПО ПроверяемыеДокументы.Заявка = ПодтверждающиеДокументыЗаявки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДСПоГосконтрактам.Обороты(
	|					,
	|					,
	|					Регистратор,
	|					КонтрактСЗаказчиком В
	|						(ВЫБРАТЬ
	|							КонтрактыСЗаказчиками.КонтрактСЗаказчиком
	|						ИЗ
	|							КонтрактыСЗаказчиками)) КАК ДвиженияДенежныхСредствОбороты
	|			ПО КонтрактыСЗаказчиками.КонтрактСЗаказчиком = ДвиженияДенежныхСредствОбороты.КонтрактСЗаказчиком
	|		ПО ПроверяемыеДокументы.Ссылка = КонтрактыСЗаказчиками.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ПодтверждающиеДокументыЗаявки.ВидДокумента,
	|	ПодтверждающиеДокументыЗаявки.Номер,
	|	ПодтверждающиеДокументыЗаявки.Дата,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента,
	|	КонтрактыСЗаказчиками.Ссылка,
	|	КонтрактыСЗаказчиками.СуммаКонтракта,
	|	ВЫРАЗИТЬ(ПроверяемыеДокументы.Ссылка.НазначениеПлатежа КАК Строка(300))
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеДокументы
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КонтрактыСЗаказчиками";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_85_2_1()
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеВидыДокументов
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.Ссылка = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументов.Контракт)
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК КонтрактФайлЗаполнен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка КАК Заявка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|		ИЗ
	|			ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|		ГДЕ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СписаниеСРасчетногоСчета.Ссылка,
	|			СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|		ИЗ
	|			СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ГДЕ
	|			СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)) КАК ПроверяемыеДокументыГруппировка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПроверяемыеДокументыГруппировка.Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка) КАК ПроверяемыеДокументы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ЗаявкаПодтверждающиеДокументы
	|			ПО ПроверяемыеДокументы.Заявка = ЗаявкаПодтверждающиеДокументы.Ссылка
	|				И (ЗаявкаПодтверждающиеДокументы.ВидДокумента В
	|					(ВЫБРАТЬ
	|						ПроверяемыеВидыДокументов.Ссылка
	|					ИЗ
	|						ПроверяемыеВидыДокументов КАК ПроверяемыеВидыДокументов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеВидыДокументов";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел1_275_85_2_2()
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеВидыДокументов
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.ПодтверждаетИсполнениеКонтракта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	МАКСИМУМ(ЕстьNull(ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта, ЛОЖЬ)) КАК ДокументИсполненияУказан,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Номер <> """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияНомерЗаполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Дата <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияДатаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.Сумма <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияСуммаЗаполнена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗаявкаПодтверждающиеДокументы.ВидДокумента.ПодтверждаетИсполнениеКонтракта
	|					И ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент <> ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ДокументИсполненияФайлЗаполнен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка КАК Заявка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|		ИЗ
	|			ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|		ГДЕ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СписаниеСРасчетногоСчета.Ссылка,
	|			СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|		ИЗ
	|			СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ГДЕ
	|			СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)) КАК ПроверяемыеДокументыГруппировка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПроверяемыеДокументыГруппировка.Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка) КАК ПроверяемыеДокументы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ЗаявкаПодтверждающиеДокументы
	|			ПО ПроверяемыеДокументы.Заявка = ЗаявкаПодтверждающиеДокументы.Ссылка
	|				И (ЗаявкаПодтверждающиеДокументы.ВидДокумента В
	|					(ВЫБРАТЬ
	|						ПроверяемыеВидыДокументов.Ссылка
	|					ИЗ
	|						ПроверяемыеВидыДокументов КАК ПроверяемыеВидыДокументов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеВидыДокументов";
	
	Возврат ТекстЗапроса;
КонецФункции

// Контроль раздела II "Дополнительные критерии контроля"

Процедура РезультатКонтроля_Раздел2_3729У_2_1(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел2_3729У_2_1";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеВБюджет" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел2_3729У_2_1();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				Если НайденнаяСтрока.СуммаДокумента + НайденнаяСтрока.СуммаФакт > 0.5 * НайденнаяСтрока.СуммаКонтракта Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. с учетом ранее созданных распоряжений на сумму %2 руб. превышают 50% от цены контракта %3 руб..'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаФакт, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаКонтракта, "ЧЦ=15; ЧДЦ=2"));
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел2_3729У_2_2(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел2_3729У_2_2";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеВБюджет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеДенежныхСредствНаДругойСчет"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел2_3729У_2_2();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				Если НайденнаяСтрока.СуммаДокумента + НайденнаяСтрока.СуммаФакт > 0.2 * НайденнаяСтрока.СуммаКонтракта Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. с учетом ранее созданных распоряжений на сумму %2 руб. превышают 50% от цены контракта %3 руб..'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаФакт, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаКонтракта, "ЧЦ=15; ЧДЦ=2"));
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Процедура РезультатКонтроля_Раздел2_3729У_2_3(РезультатыПроверок, ИндексыРезультатовЗапросов, Ссылка, Знач ДанныеДокументовДляКонтроля)
	Если НЕ ЭтоТипКонтролируемогоДокумента(Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписанияРезультатов = РезультатыПроверок.ОписанияРезультатов;
	ИмяОбработчикаКонтроля = "РезультатКонтроля_Раздел2_3729У_2_3";
	КонтрольПройден = Истина;
	
	ОписаниеМассивСтрок = Новый Массив;
	Описание = "";
	
	Если ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоставщику"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ВозвратОплатыКлиенту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "Прочее"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ОплатаПоКредиту"
		И ВидыОперацийСписаниеСРасчетногоСчета(Ссылка.ВидОперации) <> "ПеречислениеНаДепозит" Тогда
		Описание = НСтр("ru= 'Контроль не требуется для операции ""%1"".'");
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Ссылка.ВидОперации);
		ОписаниеМассивСтрок.Добавить(Описание);
	Иначе
		Если ДанныеДокументовДляКонтроля = Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = РезультатыПроверок.МенеджерВТ;
			Запрос.Текст =  ТекстЗапросаРезультатКонтроля_Раздел2_3729У_2_3();
			ПроверяемыеДокументы = Новый Массив;
			ПроверяемыеДокументы.Добавить(Ссылка);
			Запрос.УстановитьПараметр("ПроверяемыеДокументы", ПроверяемыеДокументы);
			
			ДанныеДокументовДляКонтроляТаблица = Запрос.Выполнить().Выгрузить();
		Иначе
			ДанныеДокументовДляКонтроляТаблица = ДанныеДокументовДляКонтроля[ИндексРезультатаЗапроса(ИндексыРезультатовЗапросов, ИмяОбработчикаКонтроля)].Выгрузить();
		КонецЕсли;
		
		Отбор = Новый Структура("Ссылка", Ссылка);
		НайденныеСтроки = ДанныеДокументовДляКонтроляТаблица.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() >= 1 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				Если НайденнаяСтрока.СуммаДокумента + НайденнаяСтрока.СуммаОплат > НайденнаяСтрока.ПодтверждающийДокументСумма Тогда
					КонтрольПройден = Ложь;
					
					Описание = НСтр("ru= 'Сумма платежа %1 руб. с учетом ранее созданных распоряжений на сумму %2 руб. превышают сумму %3 руб. подтверждающего документа %4.'");
					Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, 
						Формат(НайденнаяСтрока.СуммаДокумента, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.СуммаОплат, "ЧЦ=15; ЧДЦ=2"), 
						Формат(НайденнаяСтрока.ПодтверждающийДокументСумма, "ЧЦ=15; ЧДЦ=2"), 
						НайденнаяСтрока.ПодтверждающийДокумент);
					ОписаниеМассивСтрок.Добавить(Описание);
				КонецЕсли;
			КонецЦикла;
			
			Если КонтрольПройден Тогда
				Описание = НСтр("ru= 'Контроль пройден.'");
				ОписаниеМассивСтрок.Добавить(Описание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НовоеОписание = ОписанияРезультатов.Добавить();
	НовоеОписание.ИмяОбработчикаКонтроля = ИмяОбработчикаКонтроля;
	НовоеОписание.КонтрольПройден = КонтрольПройден;
	НовоеОписание.Описание = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ОписаниеМассивСтрок, Символы.ПС + Символы.ПС);
	НовоеОписание.Раздел = РазделКонтроля(ИмяОбработчикаКонтроля);
КонецПроцедуры

Функция ТекстЗапросаРезультатКонтроля_Раздел2_3729У_2_1()
	ТекстЗапроса =  "ВЫБРАТЬ
	|	ПроверяемыеЗаявкиГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеЗаявкиГруппировка.Заявка КАК Заявка
	|ПОМЕСТИТЬ ПроверяемыеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)) КАК ПроверяемыеЗаявкиГруппировка
	|ГДЕ
	|	ПроверяемыеЗаявкиГруппировка.Заявка.ТипПлатежаФЗ275 = ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.УплатаНалоговИСборовТаможенныхПлатежейСтраховыхВзносов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеЗаявкиГруппировка.Ссылка,
	|	ПроверяемыеЗаявкиГруппировка.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка)) КАК КонтрактСЗаказчиком,
	|	СУММА(ЕСТЬNULL(КонтрактыСЗаказчиками.СуммаКонтракта, 0)) КАК СуммаКонтракта
	|ПОМЕСТИТЬ КонтрактыСЗаказчиками
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК КонтрактыВЗаявке
	|		ПО (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств)
	|			И ПроверяемыеДокументы.Заявка = КонтрактыВЗаявке.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|		ПО (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|					И КонтрактыВЗаявке.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка
	|				ИЛИ ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|					И ПроверяемыеДокументы.Ссылка.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	СУММА(КонтрактыСЗаказчиками.СуммаКонтракта) КАК СуммаКонтракта,
	|	СУММА(ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.РасходОборот, 0)) КАК СуммаФакт
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДСпоГосконтрактам.Обороты(
	|					НАЧАЛОПЕРИОДА(&ТекущаяДата, МЕСЯЦ),
	|					КОНЕЦПЕРИОДА(&ТекущаяДата, МЕСЯЦ),
	|					Регистратор,
	|					ТипПлатежа = ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.УплатаНалоговИСборовТаможенныхПлатежейСтраховыхВзносов)
	|						И КонтрактСЗаказчиком В
	|							(ВЫБРАТЬ
	|								КонтрактыСЗаказчиками.КонтрактСЗаказчиком
	|							ИЗ
	|								КонтрактыСЗаказчиками)) КАК ДвиженияДенежныхСредствОбороты
	|			ПО КонтрактыСЗаказчиками.КонтрактСЗаказчиком = ДвиженияДенежныхСредствОбороты.КонтрактСЗаказчиком
	|		ПО ПроверяемыеДокументы.Ссылка = КонтрактыСЗаказчиками.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеДокументы
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КонтрактыСЗаказчиками";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел2_3729У_2_2()
	ТекстЗапроса =  "ВЫБРАТЬ
	|	ПроверяемыеЗаявкиГруппировка.Ссылка КАК Ссылка,
	|	ПроверяемыеЗаявкиГруппировка.Заявка КАК Заявка
	|ПОМЕСТИТЬ ПроверяемыеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|	ИЗ
	|		ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	ГДЕ
	|		ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В (&ПроверяемыеДокументы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СписаниеСРасчетногоСчета.Ссылка,
	|		СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЗ
	|		СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|	ГДЕ
	|		СписаниеСРасчетногоСчета.Ссылка В (&ПроверяемыеДокументы)) КАК ПроверяемыеЗаявкиГруппировка
	|ГДЕ
	|	ПроверяемыеЗаявкиГруппировка.Заявка.ТипПлатежаФЗ275 В (
	|		ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ПеречислениеПрибылиГоловномуИсполнителю), 
	|		ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ПеречисленияПрибылиИсполнителю))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеЗаявкиГруппировка.Ссылка,
	|	ПроверяемыеЗаявкиГруппировка.Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка)) КАК КонтрактСЗаказчиком,
	|	СУММА(ЕСТЬNULL(КонтрактыСЗаказчиками.СуммаКонтракта, 0)) КАК СуммаКонтракта
	|ПОМЕСТИТЬ КонтрактыСЗаказчиками
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствФинансирование КАК КонтрактыВЗаявке
	|		ПО (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств)
	|			И ПроверяемыеДокументы.Заявка = КонтрактыВЗаявке.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|		ПО (ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ЗаявкаНаРасходованиеСредств
	|					И КонтрактыВЗаявке.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка
	|				ИЛИ ПроверяемыеДокументы.Ссылка ССЫЛКА Документ.ПлатежноеПоручениеИсходящее
	|					И ПроверяемыеДокументы.Ссылка.КонтрактСЗаказчиком = КонтрактыСЗаказчиками.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ЕСТЬNULL(КонтрактыСЗаказчиками.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК Заявка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	СУММА(КонтрактыСЗаказчиками.СуммаКонтракта) КАК СуммаКонтракта,
	|	СУММА(ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.РасходОборот, 0)) КАК СуммаФакт
	|ИЗ
	|	ПроверяемыеДокументы КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрактыСЗаказчиками КАК КонтрактыСЗаказчиками
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДСпоГосконтрактам.Обороты(
	|					НАЧАЛОПЕРИОДА(&ТекущаяДата, МЕСЯЦ),
	|					КОНЕЦПЕРИОДА(&ТекущаяДата, МЕСЯЦ),
	|					Регистратор,
	|					ТипПлатежа В (
	|							ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ПеречислениеПрибылиГоловномуИсполнителю), 
	|							ЗНАЧЕНИЕ(Справочник.ТипыПлатежейФЗ275.ПеречисленияПрибылиИсполнителю))
	|						И КонтрактСЗаказчиком В
	|							(ВЫБРАТЬ
	|								КонтрактыСЗаказчиками.КонтрактСЗаказчиком
	|							ИЗ
	|								КонтрактыСЗаказчиками)) КАК ДвиженияДенежныхСредствОбороты
	|			ПО КонтрактыСЗаказчиками.КонтрактСЗаказчиком = ДвиженияДенежныхСредствОбороты.КонтрактСЗаказчиком
	|		ПО ПроверяемыеДокументы.Ссылка = КонтрактыСЗаказчиками.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроверяемыеДокументы.Ссылка,
	|	ПроверяемыеДокументы.Заявка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеДокументы
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КонтрактыСЗаказчиками";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРезультатКонтроля_Раздел2_3729У_2_3()
	ТекстЗапроса =  "ВЫБРАТЬ
	|	ВидыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверяемыеВидыДокументов
	|ИЗ
	|	Справочник.ВидыДокументов КАК ВидыДокументов
	|ГДЕ
	|	ВидыДокументов.ПодтверждаетИсполнениеКонтракта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверяемыеДокументы.Ссылка КАК Ссылка,
	|	ПроверяемыеДокументы.Заявка КАК ПроверяемаяЗаявка,
	|	ПроверяемыеДокументы.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|	ЕСТЬNULL(ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент, ЗНАЧЕНИЕ(Справочник.ХранилищеДополнительнойИнформации.ПустаяСсылка)) КАК ПодтверждающийДокумент,
	|	ЕСТЬNULL(ЗаявкаПодтверждающиеДокументы.Сумма, 0) КАК ПодтверждающийДокументСумма,
	|	ЕСТЬNULL(ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеСредств.ПустаяСсылка)) КАК Заявка
	|ПОМЕСТИТЬ ЗаявкиИспользующиеПодтверждающиеДокументы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПроверяемыеДокументыГруппировка.Ссылка КАК Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка КАК Заявка
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка,
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Заявка
	|		ИЗ
	|			ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|		ГДЕ
	|			ЗаявкаНаРасходованиеДенежныхСредств.Ссылка В(&ПроверяемыеДокументы)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			СписаниеСРасчетногоСчета.Ссылка,
	|			СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|		ИЗ
	|			СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ГДЕ
	|			СписаниеСРасчетногоСчета.Ссылка В(&ПроверяемыеДокументы)) КАК ПроверяемыеДокументыГруппировка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПроверяемыеДокументыГруппировка.Ссылка,
	|		ПроверяемыеДокументыГруппировка.Заявка) КАК ПроверяемыеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ЗаявкаПодтверждающиеДокументы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы КАК ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы
	|			ПО ЗаявкаПодтверждающиеДокументы.ПодтверждающийДокумент = ЗаявкаНаРасходованиеДенежныхСредствПодтверждающиеДокументы.ПодтверждающийДокумент
	|		ПО ПроверяемыеДокументы.Заявка = ЗаявкаПодтверждающиеДокументы.Ссылка
	|			И (ЗаявкаПодтверждающиеДокументы.ВидДокумента В
	|				(ВЫБРАТЬ
	|					ПроверяемыеВидыДокументов.Ссылка
	|				ИЗ
	|					ПроверяемыеВидыДокументов КАК ПроверяемыеВидыДокументов))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявки.Заявка КАК Заявка,
	|	СУММА(ЕСТЬNULL(СписаниеСРасчетногоСчета.Сумма, 0)) КАК Сумма
	|ПОМЕСТИТЬ ОплатыПоЗаявкам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаявкиИспользующиеПодтверждающиеДокументы.Заявка КАК Заявка
	|	ИЗ
	|		ЗаявкиИспользующиеПодтверждающиеДокументы КАК ЗаявкиИспользующиеПодтверждающиеДокументы
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаявкиИспользующиеПодтверждающиеДокументы.Заявка) КАК Заявки
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|		ПО Заявки.Заявка = СписаниеСРасчетногоСчета.ЗаявкаНаРасходованиеДенежныхСредств
	|			И (СписаниеСРасчетногоСчета.Проведен)
	|			И (СписаниеСРасчетногоСчета.БанковскийСчетОрганизации.ОтдельныйСчетГОЗ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявки.Заявка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкиИспользующиеПодтверждающиеДокументы.Ссылка КАК Ссылка,
	|	ЗаявкиИспользующиеПодтверждающиеДокументы.СуммаДокумента КАК СуммаДокумента,
	|	ЗаявкиИспользующиеПодтверждающиеДокументы.ПодтверждающийДокумент КАК ПодтверждающийДокумент,
	|	МАКСИМУМ(ЗаявкиИспользующиеПодтверждающиеДокументы.ПодтверждающийДокументСумма) КАК ПодтверждающийДокументСумма,
	|	СУММА(ЕстьNull(ОплатыПоЗаявкам.Сумма, 0)) КАК СуммаОплат
	|ИЗ
	|	ЗаявкиИспользующиеПодтверждающиеДокументы КАК ЗаявкиИспользующиеПодтверждающиеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОплатыПоЗаявкам КАК ОплатыПоЗаявкам
	|		ПО ЗаявкиИспользующиеПодтверждающиеДокументы.Заявка = ОплатыПоЗаявкам.Заявка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиИспользующиеПодтверждающиеДокументы.Ссылка,
	|	ЗаявкиИспользующиеПодтверждающиеДокументы.СуммаДокумента,
	|	ЗаявкиИспользующиеПодтверждающиеДокументы.ПодтверждающийДокумент";
	
	Возврат ТекстЗапроса;
КонецФункции


/////////////////////////////////////////////////////
//
//  Эмуляция несинхронных вызовов синхронными
//
//  Расхождение для:
//  - ПоказатьЗначение/ПоказатьЗначениеЕГАИС - игнорирует обработчик закрытия
//
//  - ОткрытьФормуЕГАИС открывает форму модально (если режим открытия "блокировать" что-либо),
//     либо возвращает саму форму (при неблокирующем открытии)
/////////////////////////////////////////////////////

Функция ОписаниеОповещенияЕГАИС(ИмяПроцедуры,
	Контекст,
	ДополнительныеПараметры = Неопределено,
	ИмяПроцедурыОбработкиОшибки = Неопределено,
	МодульОбработкиОшибки = Неопределено) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяПроцедуры",                ИмяПроцедуры);
	Результат.Вставить("Контекст",                    Контекст);
	Результат.Вставить("ДополнительныеПараметры",     ДополнительныеПараметры);
	Результат.Вставить("ИмяПроцедурыОбработкиОшибки", ИмяПроцедурыОбработкиОшибки);
	Результат.Вставить("МодульОбработкиОшибки",       МодульОбработкиОшибки);
	
	Возврат Результат;
	
КонецФункции

Функция ОткрытьФормуЕГАИС(ИмяФормы,
	Параметры = Неопределено,
	Владелец = Неопределено,
	Уникальность = Неопределено,
	Окно = Неопределено,
	НавигационнаяСсылка = Неопределено,
	ОписаниеОповещенияОЗакрытии = Неопределено,
	РежимОткрытияОкна = Неопределено) Экспорт

	Если ОписаниеОповещенияОЗакрытии <> Неопределено
		ИЛИ РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца Тогда
		
		Результат = ОткрытьФормуМодально(ИмяФормы, Параметры, Владелец);
	
		Если ОписаниеОповещенияОЗакрытии <> Неопределено Тогда
			ВыполнитьОбработкуОповещенияЕГАИС(ОписаниеОповещенияОЗакрытии, Результат);
		КонецЕсли;
		
	Иначе
		
		Результат = ОткрытьФорму(ИмяФормы, Параметры, Владелец);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ПоказатьВопросЕГАИС(ОписаниеОповещенияОЗавершении = Неопределено,
	ТекстВопроса,
	Кнопки,
	Таймаут = 0,
	КнопкаПоУмолчанию = Неопределено,
	Заголовок = "",
	КнопкаТаймаута = Неопределено) Экспорт
	
	Результат = Вопрос(ТекстВопроса, Кнопки, Таймаут, КнопкаПоУмолчанию, Заголовок, КнопкаТаймаута);
	
	Если ОписаниеОповещенияОЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещенияЕГАИС(ОписаниеОповещенияОЗавершении, Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьПредупреждениеЕГАИС(ОписаниеОповещенияОЗавершении = Неопределено,
	ТекстПредупреждения,
	Таймаут = 0,
	Заголовок = "") Экспорт
	
	Предупреждение(ТекстПредупреждения, Таймаут, Заголовок);
	
	Если ОписаниеОповещенияОЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещенияЕГАИС(ОписаниеОповещенияОЗавершении);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьЗначениеЕГАИС(ОписаниеОповещенияОЗавершении = Неопределено, Значение) Экспорт
	
	ОткрытьЗначение(Значение);
	
КонецПроцедуры

Процедура ПоказатьВыборИзСпискаЕГАИС(ОписаниеОповещенияОЗакрытии = Неопределено, СписокВыбора, ЭлементФормыВладельца = Неопределено, НачальноеЗначение = Неопределено) Экспорт
	
	Результат=СписокВыбора.ВыбратьЭлемент(, НачальноеЗначение);
	
	Если ОписаниеОповещенияОЗакрытии <> Неопределено Тогда
		ВыполнитьОбработкуОповещенияЕГАИС(ОписаниеОповещенияОЗакрытии, Результат);
	КонецЕсли;
		
КонецПроцедуры


Процедура ПерейтиПоНавигационнойСсылкеЕГАИС(НавигационнаяСсылка) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		МаркерТипа   = "e1cib/data/";
		МаркерСсылки = "?ref=";
		
		ДлинаМаркераТипа   = СтрДлина(МаркерТипа);
		ДлинаМаркераСсылки = СтрДлина(МаркерСсылки);
		
		ПозицияМаркераТипа   = Найти(НавигационнаяСсылка, МаркерТипа);
		ПозицияМаркераСсылки = Найти(НавигационнаяСсылка, МаркерСсылки);
		
		ТипВидЗначения = Сред(НавигационнаяСсылка, ПозицияМаркераТипа + ДлинаМаркераТипа, ПозицияМаркераСсылки - ПозицияМаркераТипа - ДлинаМаркераТипа);
		ШаблонЗначения = ЗначениеВСтрокуВнутр(ПредопределенноеЗначение(ТипВидЗначения + ".ПустаяСсылка"));
		
		ПустойИдентификатор = "00000000000000000000000000000000";
		
		Идентификатор  = Сред(НавигационнаяСсылка, ПозицияМаркераСсылки + ДлинаМаркераСсылки);
		ЗначениеСсылки = СтрЗаменить(ШаблонЗначения, ПустойИдентификатор, Идентификатор);
		
		ОткрытьЗначение(ЗначениеИзСтрокиВнутр(ЗначениеСсылки));
	#Иначе
		ПерейтиПоНавигационнойСсылке(НавигационнаяСсылка);
	#КонецЕсли
	
КонецПроцедуры

Процедура ВыполнитьОбработкуОповещенияЕГАИС(ОписаниеОповещения, Результат = Неопределено) Экспорт
	
	Если ОписаниеОповещения <> Неопределено Тогда
		ДополнительныеПараметры = ОписаниеОповещения.ДополнительныеПараметры;
		Если ТипЗнч(ОписаниеОповещения.Контекст) = Тип("Строка") Тогда
			Выполнить ОписаниеОповещения.Контекст+"." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ДополнительныеПараметры)";
		Иначе
			Выполнить "ОписаниеОповещения.Контекст." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ДополнительныеПараметры)";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура НачатьПолучениеКаталогаВременныхФайловЕГАИС(ОписаниеОповещения = Неопределено) Экспорт

	Результат = КаталогВременныхФайлов();
	
	Если ОписаниеОповещения <> Неопределено Тогда
		ДополнительныеПараметры = ОписаниеОповещения.ДополнительныеПараметры;
		Выполнить ОписаниеОповещения.Контекст+"." + ОписаниеОповещения.ИмяПроцедуры + "(Результат, ДополнительныеПараметры)";
	КонецЕсли;

КонецПроцедуры

Процедура НачатьУдалениеФайловЕГАИС(ОписаниеОповещения = Неопределено, Путь, Маска = "") Экспорт
	
	УдалитьФайлы(Путь, Маска);
	
	Если ОписаниеОповещения <> Неопределено Тогда
		ДополнительныеПараметры = ОписаниеОповещения.ДополнительныеПараметры;
		Выполнить ОписаниеОповещения.Контекст+"." + ОписаниеОповещения.ИмяПроцедуры + "(ДополнительныеПараметры)";
	КонецЕсли;
	
КонецПроцедуры

Процедура НачатьПомещениеФайловЕГАИС(ОписаниеОповещения = Неопределено,
	ПомещаемыеФайлы = Неопределено,
	НаборПомещаемыхФайлов = Неопределено,
	Интерактивно = Ложь,
	УникальныйИдентификаторФормы = Неопределено) Экспорт
	
	Результат = ПоместитьФайлы(ПомещаемыеФайлы, НаборПомещаемыхФайлов, Интерактивно, УникальныйИдентификаторФормы);
	
	Если Результат И ОписаниеОповещения <> Неопределено Тогда
		ДополнительныеПараметры = ОписаниеОповещения.ДополнительныеПараметры;
		Выполнить ОписаниеОповещения.Контекст+"." + ОписаниеОповещения.ИмяПроцедуры + "(ПомещаемыеФайлы, ДополнительныеПараметры)";
	КонецЕсли;
	
КонецПроцедуры

Процедура НачатьУстановкуВнешнейКомпонентыЕГАИС(ОписаниеОповещенияОЗавершении = Неопределено, Местоположение) Экспорт
	
	УстановитьВнешнююКомпоненту(Местоположение);
	
	Если ОписаниеОповещенияОЗавершении <> Неопределено Тогда
		ДополнительныеПараметры = ОписаниеОповещенияОЗавершении.ДополнительныеПараметры;
		Выполнить ОписаниеОповещенияОЗавершении.Контекст+"." + ОписаниеОповещенияОЗавершении.ИмяПроцедуры + "(ДополнительныеПараметры)";
	КонецЕсли;
	
КонецПроцедуры

Процедура НачатьПодключениеВнешнейКомпонентыЕГАИС(ОписаниеОповещения = Неопределено,
	Местоположение,
	Имя = "",
	Тип = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Имя) Тогда
		// Вариант с местоположением
		Подключено = ПодключитьВнешнююКомпоненту(Местоположение, Имя, Тип);
	Иначе
		// Вариант с идентификатором объекта
		Подключено = ПодключитьВнешнююКомпоненту(Местоположение);
	КонецЕсли;
	
	Если ОписаниеОповещения <> Неопределено Тогда
		ДополнительныеПараметры = ОписаниеОповещения.ДополнительныеПараметры;
		Выполнить ОписаниеОповещения.Контекст+"." + ОписаниеОповещения.ИмяПроцедуры + "(Подключено, ДополнительныеПараметры)";
	КонецЕсли;
	
КонецПроцедуры

Процедура НачатьЗапускПриложенияЕГАИС(ОписаниеОповещения = Неопределено,
	СтрокаКоманды,
	ТекущийКаталог = "",
	ДождатьсяЗавершения = Истина) Экспорт

	ДождатьсяЗавершения = Истина;
	КодВозвратаДиалога  = Неопределено;
	
	ЗапуститьПриложение(СтрокаКоманды, ТекущийКаталог, ДождатьсяЗавершения, КодВозвратаДиалога);
	
	Если ОписаниеОповещения <> Неопределено Тогда
		ДополнительныеПараметры = ОписаниеОповещения.ДополнительныеПараметры;
		Выполнить ОписаниеОповещения.Контекст+"." + ОписаниеОповещения.ИмяПроцедуры + "(КодВозвратаДиалога, ДождатьсяЗавершения, ДополнительныеПараметры)";
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьОтключениеБезопасногоРежимаЕГАИС(Отключить) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		УстановитьБезопасныйРежим(Не Отключить);
    #КонецЕсли
	
КонецПроцедуры
// Программный интерфейс

// Дополняет структуру приемник полями структуры источника
//
// Параметры:
// 		СтруктураПриемник - Структура - Структура, в которую необходимо скопировать поля
// 		СтруктураИсточник - Структура - Структура, из которой необходимо скопировать поля
// 		КопироватьЗначения - Булево - Истина, если надо копировать значения.
//
Процедура ДополнитьСтруктуру(СтруктураПриемник, СтруктураИсточник, КопироватьЗначения=Ложь) Экспорт
	
	Для Каждого Элемент Из СтруктураИсточник Цикл
		СтруктураПриемник.Вставить(Элемент.Ключ, ?(КопироватьЗначения, Элемент.Значение, Неопределено));
	КонецЦикла;
	
КонецПроцедуры // ДополнитьСтруктуру()

// Выгружает таблицу значений из ДанныеФормыКоллекция и ТабличнаяЧасть
//
// Параметры:
// 		ТаблицаИсточник - ДанныеФормыКоллекция, ТабличнаяЧасть - Таблица источник выгрузки
// 		Строки - Массив, Структура - Массив строк для выгрузки или структура отбора
// 		Колонки - Строка - Перечисленные через запятую имена колонок для выгрузки
// 		КолонкиПоЗначению - Структура - Структура колонок для добавление в результирующую таблицу:
// 										Ключ - Имя новой колонки
// 										Значение - Значение для подстановки по все строки новой колонки
// 		НовыеИменаКолонок - Структура - Структура с данными о переименовании колонок в результирующей таблице:
// 										Ключ - Текущее имя колонки
// 										Значение - Новое имя колонки.
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица результат выгрузки из таблицы источника с добавленными и переименованными колонками.
//
Функция ВыгрузитьТаблицуЗначений(ТаблицаИсточник, Строки = Неопределено, Колонки = "НомерСтроки",
			Знач КолонкиПоЗначению = Неопределено, Знач НовыеИменаКолонок = Неопределено) Экспорт
	
	// Определение значений по умолчанию
	Если КолонкиПоЗначению = Неопределено Тогда
		КолонкиПоЗначению = Новый Структура;
	КонецЕсли;
	Если НовыеИменаКолонок = Неопределено Тогда
		НовыеИменаКолонок = Новый Структура;
	КонецЕсли;
	
	// Определить список выгружаемых колонок
	СтруктураДругихИменКолонок = Новый Структура;
	Для Каждого НовоеИмя Из НовыеИменаКолонок Цикл
		СтруктураДругихИменКолонок.Вставить(НовоеИмя.Значение, НовоеИмя.Ключ);
	КонецЦикла;
	ИменаКолонок = "";
	ИмяКолонки = "";
	СтруктураКолонок = Новый Структура(Колонки);
	Для Каждого Колонка Из СтруктураКолонок Цикл
		Если Не СтруктураДругихИменКолонок.Свойство(Колонка.Ключ, ИмяКолонки) Тогда
			ИмяКолонки = Колонка.Ключ;
		КонецЕсли;
		Если Не КолонкиПоЗначению.Свойство(ИмяКолонки) Тогда
			ИменаКолонок = ИменаКолонок + ", " + ИмяКолонки;
		КонецЕсли;
	КонецЦикла;
	
	// Выгрузить из таблицы источника
	Если ТипЗнч(ТаблицаИсточник) = Тип("ТаблицаЗначений") Тогда
		ТаблицаРезультата = ТаблицаИсточник.Скопировать(Строки, Сред(ИменаКолонок, 3));
	Иначе
		ТаблицаРезультата = ТаблицаИсточник.Выгрузить(Строки, Сред(ИменаКолонок, 3));
	КонецЕсли;
	
	// Добавить новые колонки в таблицу результата
	Если КолонкиПоЗначению <> Неопределено Тогда
		Для Каждого Колонка Из КолонкиПоЗначению Цикл
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(ТипЗнч(Колонка.Значение));
			ТаблицаРезультата.Колонки.Добавить(Колонка.Ключ, Новый ОписаниеТипов(МассивТипов));
			ТаблицаРезультата.ЗаполнитьЗначения(Колонка.Значение, Колонка.Ключ);
		КонецЦикла;
	КонецЕсли;
	
	// Переименовать колонки в таблице результата
	Если НовыеИменаКолонок <> Неопределено Тогда
		Для Каждого Колонка Из НовыеИменаКолонок Цикл
			ТаблицаРезультата.Колонки[Колонка.Ключ].Имя = Колонка.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаРезультата;
	
КонецФункции // ВыгрузитьТаблицуЗначений()

// Добавляет в список ошибок новую ошибку пользователя для дальнейшей отправки с помощью
// процедуры СообщитьОшибкиПользователю().
// Предназначена для накопления списка ошибок с последующей обработкой этого списка перед тем, как вывести
// пользователю. Полученный список ошибок можно, например, отсортировать по важности, очистить от дублей,
// а также вывести пользователю в ином виде, чем выводит метод СообщитьПользователю, например, в табличный документ.
//
// Параметры:
//  Ошибки          - Неопределено - будет создан новый список,
//                  - значение, установленное при первом вызове этой процедуры со значением Неопределено.
//
//  ПолеОшибки      - Строка - значение, которое задается в свойстве Поле объекта СообщениеПользователю.
//                    Для автоподстановки номера строки должна содержать "%1".
//                    Например, "Объект.ИНН" или "Объект.Пользователи[%1].Пользователь".
//
//  ТекстДляОднойОшибки - Строка - текст ошибки для случая, когда ГруппаОшибок в коллекции только одна,
//                    например, НСтр("ru = 'Пользователь не выбран.'").
//
//  ГруппаОшибок    - Произвольный - используется для выбора либо текста для одной ошибки,
//                    либо текста для нескольких ошибок, например, имя "Объект.Пользователи".
//                    Если значение не заполнено, тогда используется текст для одной ошибки.
//
//  НомерСтроки     - Число - значение от 0 ... , определяющее номер строки, который нужно подставить
//                    в строку ПолеОшибки и в ТекстДляНесколькихОшибок (подставляется НомерСтроки + 1).
//
//  ТекстДляНесколькихОшибок - Строка - текст ошибки для случая, когда добавлено несколько ошибок с одинаковым
//                    свойством ГруппаОшибок, например, НСтр("ru = 'Пользователь в строке %1 не выбран.'").
//
//  ИндексСтроки    - Неопределено - совпадает со значением параметра НомерСтроки.
//                    Число - значение от 0 ... , определяющее номер строки, который нужно подставить
//                    в строку ПолеОшибки.
//
Процедура ДобавитьОшибкуПользователю(Ошибки, ПолеОшибки, ТекстДляОднойОшибки, ГруппаОшибок, НомерСтроки = 0, ТекстДляНесколькихОшибок = "", ИндексСтроки = Неопределено) Экспорт
	
	Если Ошибки = Неопределено Тогда
		Ошибки = Новый Структура;
		Ошибки.Вставить("СписокОшибок", Новый Массив);
		Ошибки.Вставить("ГруппыОшибок", Новый Соответствие);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ГруппаОшибок) Тогда
		// При незаполненной группе ошибок используется текст для одной ошибки.
	Иначе
		Если Ошибки.ГруппыОшибок[ГруппаОшибок] = Неопределено Тогда
			// Группа ошибок использовалась один раз, используется текст для одной ошибки.
			Ошибки.ГруппыОшибок.Вставить(ГруппаОшибок, Ложь);
		Иначе
			// Группа ошибок использовалась несколько раз, используется текст для нескольких ошибок.
			Ошибки.ГруппыОшибок.Вставить(ГруппаОшибок, Истина);
		КонецЕсли;
	КонецЕсли;
	
	Ошибка = Новый Структура;
	Ошибка.Вставить("ПолеОшибки",               ПолеОшибки);
	Ошибка.Вставить("ТекстДляОднойОшибки",      ТекстДляОднойОшибки);
	Ошибка.Вставить("ГруппаОшибок",             ГруппаОшибок);
	Ошибка.Вставить("НомерСтроки",              НомерСтроки);
	Ошибка.Вставить("ТекстДляНесколькихОшибок", ТекстДляНесколькихОшибок);
	Ошибка.Вставить("ИндексСтроки",             ИндексСтроки);
	
	Ошибки.СписокОшибок.Добавить(Ошибка);
	
КонецПроцедуры

// Заполняет реквизит "Серия" в товарной табличной части
//
// Параметры:
// 		ТабличнаяЧасть - ДанныеФормыКоллекция, ТабличнаяЧасть - Товарная табличная часть документа
// 		ВыделенныеСтроки - Массив - Массив выделенных строк
// 		ПараметрыЗаполнения - Структура - Структура параметров заполнения
// 			Обязательные поля:
// 				"ОрганизацияЕГАИС" - СправочникСсылка.КлассификаторОрганизацийЕГАИС - Организация
// 				"ЗаполнятьБезЗапросаСправок" - Булево - Принудительное заполнение серий без запроса справок 1
// 			Необязательные поля:
// 				"ПоляЗаполнения" - Строка - Строка с перечислением заполняемых полей в таблице. Значение по умолчанию: "Серия".
// 				"КолонкиПоЗначению" - Структура - Структура для передачи в качестве параметра "КолонкиПоЗначению" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений"
// 				"ДругиеИменаКолонок" - Структура - Структура для передачи в качестве параметра "НовыеИменаКолонок" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений"
// 		СтруктураДействий - Структура - Стандартная структура действий со строками для вызова "ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ"
// 		
// Возвращаемое значение:
//   Структура - Структура с результатом выполнения функции.
//
Функция ЗаполнитьСгенерироватьСерии(ТабличнаяЧасть, ВыделенныеСтроки = Неопределено, ПараметрыЗаполнения = Неопределено, СтруктураДействий = Неопределено) Экспорт
	
	// Инициализация результирующей структуры
	Результат = ИнтеграцияЕГАИСПереопределяемый.РезультатЗаполненияСерий();
		
	ДополнительныеКолонки = "";
	
	// Получение структуры параметров по умолчанию
	Параметры = Новый Структура(
		"ПоляЗаполнения, КолонкиПоЗначению, ДругиеИменаКолонок",
		"Серия", Новый Структура, Новый Структура);
	ДополнитьСтруктуру(Параметры, ПараметрыЗаполнения, Истина);
	
	// Получение выгрузки по табличной части
	Таблица = ВыгрузитьТаблицуЗначений(
		ТабличнаяЧасть,
		ВыделенныеСтроки,
		"НомерСтроки, Номенклатура, Характеристика, АлкогольнаяПродукция, Серия, Справка2" + ДополнительныеКолонки,
		Параметры.КолонкиПоЗначению,
		Параметры.ДругиеИменаКолонок);
	
	СтрокиБезНоменклатуры = Таблица.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка()));
	Для каждого СтрокаБезНоменклатуры Из СтрокиБезНоменклатуры Цикл
		
		ТекстСообщения = НСтр("ru = 'Не указана номенклатура в строке %НомерСтроки%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаБезНоменклатуры.НомерСтроки);
		
		Результат.ЗаполнениеЗавершено = Ложь;
		
		ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Номенклатура",
			ТекстСообщения, 
			Неопределено);
		
	КонецЦикла;
		
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Получение запроса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Серия КАК Серия,
		|	Таблица.Справка2 КАК Справка2
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ВТНоменклатура.ВестиУчетПоСериям КАК АвтоматическиГенерироватьСерии,
		|	ИСТИНА КАК ИспользоватьДатуПроизводстваСерии,
		|	ИСТИНА КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ИСТИНА КАК ИспользоватьСправку2ЕГАИССерии,
		|	ИСТИНА КАК ИспользоватьСрокГодностиСерии
		|ПОМЕСТИТЬ ВтВидыНоменклатуры
		|ИЗ
		|	ВтТовары КАК ВтТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ВТНоменклатура
		|		ПО (ВТНоменклатура.Ссылка = ВтТовары.Номенклатура
		|				И ВТНоменклатура.ВестиУчетПоСериям)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВтТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.НомерСтроки КАК НомерСтроки,
		|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ВтТовары.Характеристика КАК Характеристика,
		|	ВтТовары.Серия КАК Серия,
		|	ВтТовары.Справка2 КАК Справка2,
		|	Справки2ЕГАИС.НомерСправки1 КАК НомерСправки1,
		|	ЕСТЬNULL(Справки1ЕГАИС.Ссылка,ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)) КАК Справка1,
		|	Справки1ЕГАИС.ДатаРозлива КАК Справка1ДатаРозлива,
		|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК Производитель,
		|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ПОМЕСТИТЬ ТаблицаТоварыПолная
		|ИЗ
		|	ВтТовары КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
		|		ПО ВтТовары.Справка2 = Справки2ЕГАИС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
		|		ПО ВтТовары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО ВтТовары.Номенклатура = СпрНоменклатура.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки1ЕГАИС КАК Справки1ЕГАИС
		|		ПО Справки2ЕГАИС.НомерСправки1 = Справки1ЕГАИС.РегистрационныйНомер
		|ИНДЕКСИРОВАТЬ ПО
		|	ВтТовары.Номенклатура,
		|	ВтТовары.Характеристика,
		|	ВтТовары.Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтТовары.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВтТовары КАК ВтТовары
		|ГДЕ
		|	ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТоварыПолная.НомерСправки1 КАК НомерСправки1
		|ИЗ
		|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|ГДЕ
		|	ТаблицаТоварыПолная.Справка1 = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
		|	И (ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
		|			ИЛИ ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА)
		|";
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-1].Пустой() И НЕ ПараметрыЗаполнения.ЗаполнятьБезЗапросаСправок Тогда
			Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-1].Выбрать();
			
			МассивЗапросовСправок1 = Новый Массив;
			Пока Выборка.Следующий() Цикл
				
				ПараметрыЗапроса = Новый Структура;
				ПараметрыЗапроса.Вставить("Операция"         , Перечисления.ВидыДокументовЕГАИС.ЗапросСправки1);
				ПараметрыЗапроса.Вставить("ИмяПараметра"     , "");
				ПараметрыЗапроса.Вставить("ЗначениеПараметра", Выборка.НомерСправки1);
				ПараметрыЗапроса.Вставить("ОрганизацияЕГАИС" , ПараметрыЗаполнения.ОрганизацияЕГАИС);
				
				МассивЗапросовСправок1.Добавить(ПараметрыЗапроса);
				
			КонецЦикла;
			Результат.АдресМассиваЗапросов = ПоместитьВоВременноеХранилище(МассивЗапросовСправок1);
			Результат.ЗаполнениеЗавершено = Ложь;
			Возврат Результат
		КонецЕсли;
		
		Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-2].Пустой() Тогда
			Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-2].Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТекстСообщения = НСтр("ru = 'Для номенклатуры %Номенклатура% автоматическая генерация серий не настроена.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", Выборка.Номенклатура);
				
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
					"Объект.Товары.Номенклатура",
					ТекстСообщения, 
					Неопределено);
				
			КонецЦикла;
			Результат.ЗаполнениеЗавершено = Ложь;
		КонецЕсли;
	
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
		|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
		|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
		|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива
		|ИЗ
		|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|ГДЕ
		|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
		|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
		|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
		|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
		|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива
		|ИЗ
		|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|ГДЕ
		|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА
		|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
		|";
	
		ТаблицаСрокиГодности = Запрос.Выполнить().Выгрузить();
		ТаблицаСрокиГодности.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаСрокиГодности", ТаблицаСрокиГодности);
		Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаСрокиГодности.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТаблицаСрокиГодности.Номенклатура КАК Номенклатура,
		|	ТаблицаСрокиГодности.Характеристика КАК Характеристика,
		|	ТаблицаСрокиГодности.Справка2 КАК Справка2,
		|	ТаблицаСрокиГодности.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
		|	ТаблицаСрокиГодности.ГоденДо КАК ГоденДо
		|ПОМЕСТИТЬ
		|	ВТГоденДо
		|ИЗ
		|	&ТаблицаСрокиГодности КАК ТаблицаСрокиГодности
		|ИНДЕКСИРОВАТЬ ПО
		|	ТаблицаСрокиГодности.Номенклатура,
		|	ТаблицаСрокиГодности.Характеристика,
		|	ТаблицаСрокиГодности.АлкогольнаяПродукция,
		|	ТаблицаСрокиГодности.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.НомерСтроки КАК НомерСтроки,
		|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ВтТовары.Характеристика КАК Характеристика,
		|	ВтТовары.Серия КАК Серия,
		|	ВтТовары.Справка2 КАК Справка2,
		|	ВЫБОР
		|		КОГДА ВтТовары.Справка1ДатаРозлива = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка) ТОГДА
		|			ВТГоденДо.Справка1ДатаРозлива
		|		ИНАЧЕ
		|			ВтТовары.Справка1ДатаРозлива
		|	КОНЕЦ КАК Справка1ДатаРозлива,
		|	ВТГоденДо.ГоденДо КАК ГоденДо,
		|	ВтТовары.Производитель КАК Производитель,
		|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ПОМЕСТИТЬ
		|	ВтТоварыКонечная
		|ИЗ
		|	ТаблицаТоварыПолная КАК ВтТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|			ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоденДо КАК ВТГоденДо
		|		ПО ВтТовары.Номенклатура = ВТГоденДо.Номенклатура
		|			И ВтТовары.Характеристика = ВТГоденДо.Характеристика
		|			И ВтТовары.АлкогольнаяПродукция = ВТГоденДо.АлкогольнаяПродукция
		|			И ВтТовары.Справка2 = ВТГоденДо.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.НомерСтроки КАК НомерСтроки,
		|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ВтТовары.Характеристика КАК Характеристика,
		|	СерииНоменклатуры.Ссылка КАК Серия,
		|	ВтТовары.Справка2 КАК Справка2,
		|	ВтТовары.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
		|	ВтТовары.ГоденДо КАК ГоденДо,
		|	ВтТовары.Производитель КАК Производитель,
		|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ИЗ
		|	ВтТоварыКонечная КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|			ПО СерииНоменклатуры.Владелец = ВтТовары.Номенклатура
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.СрокГодности = ВтТовары.ГоденДо
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтТовары.Номенклатура КАК Владелец,
		|	ВтТовары.Справка2 КАК Справка2ЕГАИС,
		|	ВтТовары.Справка1ДатаРозлива КАК ДатаПроизводства,
		|	ВтТовары.ГоденДо КАК ГоденДо,
		|	ВтТовары.Производитель КАК ПроизводительЕГАИС,
		|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ИЗ
		|	ВтТоварыКонечная КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|			ПО СерииНоменклатуры.Владелец = ВтТовары.Номенклатура
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.СрокГодности = ВтТовары.ГоденДо
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|ГДЕ
		|	СерииНоменклатуры.Ссылка ЕСТЬ NULL
//		|	И ВЫБОР
//		|		КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
//		|			ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
//		|		ИНАЧЕ
//		|			ИСТИНА
//		|		КОНЕЦ
//		|	И (ВЫБОР
//		|		КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
//		|			ВтТовары.ГоденДо <> &ПустаяДата
//		|		ИНАЧЕ
//		|			ИСТИНА
//		|		КОНЕЦ)
		|;
		|";
		
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаГенерацияСерий = ПакетРезультатов[ПакетРезультатов.Количество()-1].Выгрузить();
	ТаблицаГенерацияСерий.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаГенерацияСерий.Индексы.Добавить("Справка2ЕГАИС, ДатаПроизводства, ГоденДо, ПроизводительЕГАИС");
	Для Каждого ТекСтрока Из ТаблицаГенерацияСерий Цикл
		НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НоваяСерия.Заполнить(ТекСтрока);
		НоваяСерия.Владелец = ТекСтрока.Владелец;
		НоваяСерия.Справка2ЕГАИС = ТекСтрока.Справка2ЕГАИС;
		НоваяСерия.ДатаПроизводства = ТекСтрока.ДатаПроизводства;
		НоваяСерия.ПроизводительЕГАИС = ТекСтрока.ПроизводительЕГАИС;
		Попытка
			НоваяСерия.Записать();
			ТекСтрока.Серия = НоваяСерия.Ссылка;
			Результат.ЗаполнениеЗавершено = Истина;
		Исключение
			Результат.ЗаполнениеЗавершено = Ложь;
			
			ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
										УровеньЖурналаРегистрации.Ошибка,
										Метаданные.Справочники.СерииНоменклатуры,
										НоваяСерия.Ссылка,
										ТекстСообщения);
			ДобавитьОшибкуПользователю(Результат.СписокОшибок,
				"Объект.Товары.Серия",
				ТекстСообщения, 
				Неопределено);
		КонецПопытки;
	КонецЦикла;
	
	ВыборкаЗаполнениеСерий = ПакетРезультатов[ПакетРезультатов.Количество()-2].Выбрать();
	Пока ВыборкаЗаполнениеСерий.Следующий() Цикл
		СтрокаТовары = ТабличнаяЧасть[ВыборкаЗаполнениеСерий.НомерСтроки-1];
		Если ЗначениеЗаполнено(ВыборкаЗаполнениеСерий.Серия) Тогда
			СтрокаТовары.Серия = ВыборкаЗаполнениеСерий.Серия;
			Результат.ЗаполнениеЗавершено = Истина;
		Иначе
			ПараметрыПоиска = Новый Структура;
			Если ВыборкаЗаполнениеСерий.ИспользоватьДатуПроизводстваСерии Тогда
				ПараметрыПоиска.Вставить("ДатаПроизводства", ВыборкаЗаполнениеСерий.Справка1ДатаРозлива);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьПроизводителяЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("ПроизводительЕГАИС", ВыборкаЗаполнениеСерий.Производитель);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСправку2ЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("Справка2ЕГАИС", ВыборкаЗаполнениеСерий.Справка2);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСрокГодностиСерии Тогда
				ПараметрыПоиска.Вставить("ГоденДо", ВыборкаЗаполнениеСерий.ГоденДо);
			КонецЕсли;
			НайденныеСтроки = ТаблицаГенерацияСерий.НайтиСтроки(ПараметрыПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаТовары.Серия = НайденныеСтроки[0].Серия;
				Результат.ЗаполнениеЗавершено = Истина;
			Иначе
				Результат.ЗаполнениеЗавершено = Ложь;
			КонецЕсли;
		КонецЕсли;
	//бработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, Неопределено);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПередЗаписьюДокументаИзФормы(Отказ, РежимЗаписи, РежимПроведения, ЭтаФорма, ЭтотОбъект) Экспорт
	
	//Розница (для возврата)
	
	Если ЭтоРозничныйВозвратАлкоголя(ЭтотОбъект) И ЭтотОбъект.АктПереданВЕГАИС Тогда
		СообщениеПользователю = "Акт отправлен в ЕГАИС. Изменение данных может привести к расхождениям с ЕГАИС.";
		ОбщегоНазначения.СообщитьИнформациюПользователю(СообщениеПользователю);
		Возврат;
	КонецЕсли;

	//Опт (для входящих документов)
	
	Если ИнтеграцияЕГАИСУТ.ПереданВЕГАИС(ЭтотОбъект) Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
		
		Запрос.Текст = "ВЫБРАТЬ
					   |	*
					   |ПОМЕСТИТЬ втТовары
					   |ИЗ
					   |	&тчТовары КАК тчТовары";
		Запрос.УстановитьПараметр("тчТовары", Этотобъект.Товары.Выгрузить());
		Запрос.Выполнить();
		
		Запрос.Текст = "ВЫБРАТЬ
					   |	*
					   |ПОМЕСТИТЬ тчТовары
					   |ИЗ
					   |	Документ."+ЭтотОбъект.Метаданные().Имя+".Товары КАК ПоступлениеТоваровУслугТовары
					   |ГДЕ
					   |	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		Запрос.Выполнить();
		
		Запрос.Текст = "ВЫБРАТЬ
					   |	ЕСТЬNULL(втТовары.Номенклатура, тчТовары.Номенклатура) КАК Номенклатура,
					   |	ЕСТЬNULL(втТовары.ИдентификаторСтроки, тчТовары.ИдентификаторСтроки) КАК ИдентификаторСтроки,
					   |	ЕСТЬNULL(втТовары.Количество, тчТовары.Количество) КАК Количество,
					   |	ЕСТЬNULL(втТовары.АлкогольнаяПродукция, тчТовары.АлкогольнаяПродукция) КАК АлкогольнаяПродукция
					   |ИЗ
					   |	втТовары КАК втТовары
					   |		ПОЛНОЕ СОЕДИНЕНИЕ тчТовары КАК тчТовары
					   |		ПО втТовары.ИдентификаторСтроки = тчТовары.ИдентификаторСтроки
					   |ГДЕ
					   |	(втТовары.ИдентификаторСтроки ЕСТЬ NULL 
					   |			ИЛИ тчТовары.ИдентификаторСтроки ЕСТЬ NULL 
					   |			ИЛИ втТовары.Количество <> тчТовары.Количество
					   |			ИЛИ тчТовары.АлкогольнаяПродукция <> втТовары.АлкогольнаяПродукция)";
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			СообщениеПользователю = "Документ отправлен в ЕГАИС. Изменение данных может привести к расхождениям с ЕГАИС.";
			ОбщегоНазначения.СообщитьИнформациюПользователю(СообщениеПользователю);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПослеЗаписиДокументаИзФормы(ЭтаФорма, ЭтотОбъект) Экспорт
	
	ИнтеграцияЕГАИСПереопределяемый.УстановитьСвойстваЭлементовЕГАИСнаФормеДокумента(ЭтаФорма);
	
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ТТНВходящаяЕГАИС") Тогда
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ТТНВходящаяЕГАИС", ЭтотОбъект.ДополнительныеСвойства.ТТНВходящаяЕГАИС);
	КонецЕсли;

КонецПроцедуры
// Конец области программного интерфейса

//Область ФорматированнаяСтрока

// Добавляет верстку HTML в строку
//
// Параметры
//  ВходящаяСтрока  - Строка - Строка для оформления.
//
// Возвращаемое значение:
//   Строка         - Сверстанная строка.
//
Функция ОформитьСтрокуHTML(Знач ВходящаяСтрока)
	
	Если СтрДлина(ВходящаяСтрока) = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	СтрокаЧисел = "0123456789";
	
	ВходящаяСтрока = ВходящаяСтрока + " ";
	
	ПредыдущийСимвол = "";
	ИсходящаяСтрока  = "";
	
	Для Счетчик = 1 По СтрДлина(ВходящаяСтрока) - 1 Цикл
		
		ТекущийСимвол   = Сред(ВходящаяСтрока, Счетчик, 1);
		СледующийСимвол = Сред(ВходящаяСтрока, Счетчик + 1, 1);
		
		Если ТекущийСимвол = "." И Не (СтрНайти(СтрокаЧисел, ПредыдущийСимвол) И СтрНайти(СтрокаЧисел, СледующийСимвол)) Тогда
			ИсходящаяСтрока = ИсходящаяСтрока + ТекущийСимвол + "</div><div>";
		Иначе
			ИсходящаяСтрока = ИсходящаяСтрока + ТекущийСимвол;
		КонецЕсли;
		
		ПредыдущийСимвол = ТекущийСимвол;
		
	КонецЦикла;
	
	Возврат ИсходящаяСтрока;

КонецФункции // ОформитьСтрокуHTML()

Процедура СформироватьФорматированнуюСтроку(Форма, ОписанияСтрок, ИмяРодителя, Действие, ВВидеHTML = Ложь) Экспорт
	
	ЭлементРодитель   = Форма.Элементы[ИмяРодителя];
	УдаляемыеЭлементы = Новый Массив();
	
	Для Каждого ПодчиненныйЭлемент Из ЭлементРодитель.ПодчиненныеЭлементы Цикл
		УдаляемыеЭлементы.Добавить(ПодчиненныйЭлемент);
	КонецЦикла;
	
	Для Каждого УдаляемыйЭлемент Из УдаляемыеЭлементы Цикл
		Форма.Элементы.Удалить(УдаляемыйЭлемент);
	КонецЦикла;
	
	НомерСтроки = 0;
	
	Если ВВидеHTML Тогда
		
		ИмяРеквизитаФормы = СтрЗаменить(ИмяРодителя, "Группа", "")+"Строка";
		
		ПолеHTML = Форма.Элементы.Добавить(ИмяРодителя+"HTML", Тип("ПолеФормы"), ЭлементРодитель);
		ПолеHTML.Вид                = ВидПоляФормы.ПолеHTMLДокумента;
		ПолеHTML.ПутьКДанным        = ИмяРеквизитаФормы;
		ПолеHTML.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ПолеHTML.УстановитьДействие("ПриНажатии", Действие);
		
		ТекстHTML = "<html><body><div>";
		
	КонецЕсли;
	
	Для Каждого ОписаниеСтроки Из ОписанияСтрок Цикл
		НомерСтроки = НомерСтроки + 1;
		
		Если ВВидеHTML Тогда
			Если ТипЗнч(ОписаниеСтроки) = Тип("Строка") Тогда
				ТекстHTML = ТекстHTML + СокрЛП(ОписаниеСтроки) + " ";
			Иначе
				ЭтоГиперссылка = НЕ ПустаяСтрока(ОписаниеСтроки.Ссылка);
				ТекстHTML = 
					ТекстHTML
					+ ?(ЭтоГиперссылка, "<a id='ahref"+Формат(НомерСтроки, "ЧГ=0")+"' href='"+ОписаниеСтроки.Ссылка+"'>", "")
					+ СокрЛП(ОписаниеСтроки.Заголовок)
					+ ?(ЭтоГиперссылка, "</a> ", " ");
			КонецЕсли;
		Иначе
			ИмяЭлемента = ИнтеграцияЕГАИСУТКлиентСервер.ИмяЭлементаФорматированнойСтроки(ИмяРодителя, НомерСтроки);
			
			Если ТипЗнч(ОписаниеСтроки) = Тип("Строка") Тогда
				ЗаголовокЭлемента = СокрЛП(ОписаниеСтроки);
			Иначе
				ЗаголовокЭлемента = СокрЛП(ОписаниеСтроки.Заголовок);
			КонецЕсли;
			
			Если ПустаяСтрока(ЗаголовокЭлемента) Тогда
				Продолжить;
			КонецЕсли;
			
			ЭлементНадпись = Форма.Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), ЭлементРодитель);
			ЭлементНадпись.Вид = ВидДекорацииФормы.Надпись;
			ЭлементНадпись.Заголовок = ЗаголовокЭлемента;
			
			Если ТипЗнч(ОписаниеСтроки) = Тип("Структура") Тогда
				Если ОписаниеСтроки.Шрифт <> Неопределено Тогда
					ЭлементНадпись.Шрифт = ОписаниеСтроки.Шрифт;
				КонецЕсли;
				
				Если ОписаниеСтроки.ЦветТекста <> Неопределено Тогда
					ЭлементНадпись.ЦветТекста = ОписаниеСтроки.ЦветТекста;
				КонецЕсли;
				
				Если НЕ ПустаяСтрока(ОписаниеСтроки.Ссылка) Тогда
					ЭлементНадпись.Гиперссылка = Истина;
					ЭлементНадпись.УстановитьДействие("Нажатие", Действие);
					
					КоличествоСимволовЗаголовка = СтрДлина(ЗаголовокЭлемента);
					
					Если КоличествоСимволовЗаголовка > 2 Тогда
						Если ЭлементНадпись.Шрифт.Жирный = Истина Тогда
							ЭлементНадпись.Ширина = КоличествоСимволовЗаголовка;
						Иначе
							ЭлементНадпись.Ширина = КоличествоСимволовЗаголовка - 1;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВВидеHTML Тогда
		ТекстHTML = ОформитьСтрокуHTML(ТекстHTML);
		ТекстHTML = ТекстHTML + "</div></body></html>";
		Форма[ИмяРеквизитаФормы] = ТекстHTML;
	КонецЕсли;
	
КонецПроцедуры

//КонецОбласти

//Область Расхождения

// Функция проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПоступлениеТоваровУслуг - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПоступлениеТоваровУслугИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	//++ НЕ ЕГАИС
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура         КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика       КАК Характеристика,
	|	ТабличнаяЧасть.Серия                КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество * ТабличнаяЧасть.Коэффициент
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.ХарактеристикаНоменклатуры = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.СерияНоменклатуры = Сопоставлено.Серия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество   КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|		ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПоступлениеТоваров", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	//-- НЕ ЕГАИС
	
	Возврат Ложь;
	
КонецФункции

// Функция проверяет наличие расхождений между ТТН и товарами перемещения.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПеремещениеТоваров - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПеремещениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	//++ НЕ ЕГАИС
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура         КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика       КАК Характеристика,
	|	ТабличнаяЧасть.Серия                КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество * ТабличнаяЧасть.Коэффициент
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПеремещения
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.ХарактеристикаНоменклатуры = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.СерияНоменклатуры = Сопоставлено.Серия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры,
	|	ТабличнаяЧасть.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПеремещения.Количество   КАК Количество
	|ИЗ
	|	ВтТоварыПеремещения КАК ВтТоварыПеремещения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПеремещения.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПеремещения.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПеремещения.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПеремещения.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПеремещения.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|		ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПеремещениеТоваров", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	//-- НЕ ЕГАИС
	
	Возврат Ложь;
	
КонецФункции

//КонецОбласти


//Область ПоступлениеТоваровУслуг

Процедура ЗаполнитьПоступлениеТоваровУслугНаОснованииТТНВходящаяЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия) КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоступленияТоваров.НаСклад) КАК ВидПоступления,
	|	ТТНВходящаяЕГАИС.НомерТТН КАК НомерВходящегоДокумента,
	|	ТТНВходящаяЕГАИС.ДатаТТН КАК ДатаВходящегоДокумента,
	|	СтатусыДокументовЕГАИС.Статус КАК СтатусОбработки,
	|	ТТНВходящаяЕГАИС.Ссылка КАК ДокЕГАИС,
	|	ТТНВходящаяЕГАИС.ТорговыйОбъект КАК СкладОрдер,
	|	ТТНВходящаяЕГАИС.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Поставщик = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Грузоотправитель.Контрагент
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Поставщик.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Поставщик.Контрагент
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Грузоотправитель.Контрагент
	|	КОНЕЦ КАК Грузоотправитель,
	|	Константы.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	Константы.ВалютаРегламентированногоУчета КАК ВалютаДокумента
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТТНВходящаяЕГАИС.Ссылка)
	|	,
	|	Константы КАК Константы
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И Товары.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК ХарактеристикаНоменклатуры,
	|	ТТНВходящаяЕГАИСТовары.Серия КАК СерияНоменклатуры,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1) <> 0
	|					ТОГДА ВЫБОР
	|						КОГДА ТТНВходящаяЕГАИС.ЕстьРасхождения
	|							ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт / ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1)
	|						ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество / ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1)
	|					КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ТТНВходящаяЕГАИС.ЕстьРасхождения
	|				ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт
	|			ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество
	|		КОНЕЦ
	|	КОНЕЦ / ВЫБОР
	|		КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	ТТНВходящаяЕГАИСТовары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1) <> 0
	|					ТОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ОбъемДАЛ, 1)
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ * ВЫБОР
	|		КОГДА ЕСТЬNULL(ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТТНВходящаяЕГАИСТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|	КОНЕЦ * ТТНВходящаяЕГАИСТовары.Цена КАК Цена
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ПО ТТНВходящаяЕГАИСТовары.Ссылка = ТТНВходящаяЕГАИС.Ссылка
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ДокументОснование";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияКПередаче);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияПереданВУТМ);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияОбрабатываетсяЕГАИС);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияОшибка);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийКПередаче);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийПереданВУТМ);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийОбрабатываетсяЕГАИС);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийОшибка);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
	
	ПроверитьВозможностьВводаНаОсновании(ВыборкаШапка.ДокЕГАИС, ВыборкаШапка.СтатусОбработки,,, МассивДопустимыхСтатусов);
	
	ЕстьНесопоставленнныеТовары = НЕ ПакетЗапросов[1].Пустой();
	Если ЕстьНесопоставленнныеТовары Тогда
		ТекстОшибки = НСтр("ru='В документе %Документ% есть несопоставленные товары. Ввод на основании такого документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ТТНВходящаяЕГАИС", ДанныеЗаполнения);
	
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	ПересчитыватьСкидку = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ПриИзмененииСуммыПересчитыватьСкидку");
	ЕстьРеквизитПроцентСкидкиНаценки = Ложь;
	ЕстьРеквизитПроцентАвтоматическихСкидок = Ложь;
	
	ИспользованиеХарактеристикНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеХарактеристикНоменклатуры");
	ИспользованиеСерийНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	
	ВыборкаТовары = ПакетЗапросов[ПакетЗапросов.Количество() - 1].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ВыборкаТовары);
		
		ОбработкаТабличныхЧастей.ПриИзмененииСуммыТабЧасти(НоваяСтрокаТовары, ДокументОбъект,
			ТекПользователь,, ЕстьРеквизитПроцентСкидкиНаценки, ПересчитыватьСкидку, ЕстьРеквизитПроцентАвтоматическихСкидок, "Товары");
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрокаТовары, ДокументОбъект);
		ОбработкаТабличныхЧастей.ЗаполнитьСкладИОрдерТабЧасти(НоваяСтрокаТовары, ДокументОбъект);
		
		Если ЗначениеЗаполнено(НоваяСтрокаТовары.Номенклатура) Тогда
			ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрокаТовары, ДокументОбъект);

			Если ИспользованиеХарактеристикНоменклатуры Тогда
				НоваяСтрокаТовары.ХарактеристикаНоменклатуры = ВыборкаТовары.ХарактеристикаНоменклатуры;
			КонецЕсли;
			
			Если ИспользованиеСерийНоменклатуры Тогда
				НоваяСтрокаТовары.СерияНоменклатуры = ВыборкаТовары.СерияНоменклатуры;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//КонецОбласти

//Область ПрочиеПроцедурыИФункции

// Ввод на основании

// Адаптация. Исходный модуль: ОбщегоНазначенияУТ.
// Осуществляет проверку заполненности проверяемых реквизитов.
//
// Параметры:
// Документ           - ДокументСсылка - Документ, на основании которого осуществляется ввод
// Статус             - Статус документ, на основании которого осуществляется ввод
// ЕстьОшибкиПроведен - Булево - Если Истина - документ, на основании которого осуществляется ввод, не проведен
// ЕстьОшибкиСтатус   - Булево - Если Истина - документ, на основании которого осуществляется ввод, имеет некорректный статус
//
Процедура ПроверитьВозможностьВводаНаОсновании(Документ,
	                                           Статус = Неопределено,
	                                           ЕстьОшибкиПроведен = Ложь,
	                                           ЕстьОшибкиСтатус = Ложь,
	                                           МассивДопустимыхСтатусов = Неопределено) Экспорт
	
	Если ЕстьОшибкиПроведен Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", Документ);
	
		ВызватьИсключение ТекстОшибки;
		
	ИначеЕсли ЕстьОшибкиСтатус Тогда
		
		Если Не ЗначениеЗаполнено(МассивДопустимыхСтатусов) Тогда
			ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании запрещен.'");
		ИначеЕсли ТипЗнч(МассивДопустимыхСтатусов) = Тип("Массив") Тогда
			
			Если МассивДопустимыхСтатусов.Количество() = 1 Тогда
				ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусе ""%СтрокаДопустимыхСтатусов%"".'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтрокаДопустимыхСтатусов%", МассивДопустимыхСтатусов[0]);
			Иначе
				ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""%СтрокаДопустимыхСтатусов%"".'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%СтрокаДопустимыхСтатусов%", СтрСоединить(МассивДопустимыхСтатусов, """, """));
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", Документ);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   Статус);
	
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьВозможностьВводаНаОсновании()

//#Область АктПостановкиНаБалансЕГАИС

Процедура ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		ЗаполнитьАктПостановкиНаБалансНаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("АкцизныеМаркиВРегистр3") Тогда
		
		ДокументОбъект.ОрганизацияЕГАИС = ДанныеЗаполнения.ОрганизацияЕГАИС;
		ДокументОбъект.ВидДокумента     = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3;
		
		ТаблицаТовары = Новый ТаблицаЗначений;
		ТаблицаТовары.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
		ТаблицаТовары.Колонки.Добавить("Справка2",             Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
		
		Для Каждого ДанныеАкцизнойМарки Из ДанныеЗаполнения.АкцизныеМарки Цикл
			
			НоваяСтрока = ДокументОбъект.АкцизныеМарки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеАкцизнойМарки);
			НоваяСтрока.Количество = 1;
			
			НоваяСтрокаТовары = ТаблицаТовары.Добавить();
			НоваяСтрокаТовары.АлкогольнаяПродукция = ДанныеАкцизнойМарки.АлкогольнаяПродукция;
			НоваяСтрокаТовары.Справка2             = ДанныеАкцизнойМарки.Справка2;
			
		КонецЦикла;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	Т.Справка2 КАК Справка2,
		|	1 КАК Количество
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&Товары КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.АлкогольнаяПродукция,
		|	Т.Справка2 КАК Справка2,
		|	СУММА(Т.Количество) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	втТовары КАК Т
		|СГРУППИРОВАТЬ ПО
		|	Т.АлкогольнаяПродукция,
		|	Т.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2 КАК Справка2,
		|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура,
		|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Характеристика) КАК Характеристика
		|ПОМЕСТИТЬ СопоставленыеПозиции
		|ИЗ
		|	Товары КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
		|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция
		|			И СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2
		|ГДЕ
		|	Не СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) = 1
		|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Характеристика) < 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СопоставленыеПозиции.Номенклатура   КАК Номенклатура,
		|	СопоставленыеПозиции.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2             КАК Справка2,
		|	ТабличнаяЧасть.Количество           КАК Количество,
		|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок
		|ИЗ
		|	Товары КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
		|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленыеПозиции.АлкогольнаяПродукция
		|			И ТабличнаяЧасть.Справка2 = СопоставленыеПозиции.Справка2
		|			И НЕ СопоставленыеПозиции.АлкогольнаяПродукция ЕСТЬ NULL
		|");
		Запрос.УстановитьПараметр("Товары", ТаблицаТовары);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ВидСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры    КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры             КАК Серия,
	|	ТабличнаяЧасть.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция   КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)         КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыШапки.ДокументОснование,
			,
			РеквизитыШапки.ЕстьОшибкиПроведен,
			,
			);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыШапки.Организация, РеквизитыШапки.Склад);
			Если РеквизитыШапки.ТипСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ РеквизитыШапки.ТипСклада = Перечисления.ВидыСкладов.НТТ Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина)
	
КонецПроцедуры

//#КонецОбласти

//#Область АктСписанияЕГАИС

Процедура ОбработкаЗаполненияАктаСписанияЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииТребованияНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииКомплектацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ВидСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.СписаниеТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры    КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры             КАК Серия,
	|	ТабличнаяЧасть.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция   КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)         КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.НТТ Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Недостача;
			
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка            КАК ДокументОснование,
	|	Таблица.Дата              КАК Дата,
	|	НЕ Таблица.Проведен       КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад             КАК Склад,
	|	Таблица.Склад.ВидСклада   КАК ТипСклада,
	|	Таблица.Организация       КАК Организация,
	|	Таблица.ТипЦен.ВалютаЦены КАК Валюта,
	|	Таблица.Ответственный     КАК Ответственный
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыДокумента = РезультатЗапроса.Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.НТТ Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОснования,
	|		Валюта = &ВалютаРеглУчета ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                    КАК Номенклатура,
	|	ТаблицаТовары.ХарактеристикаНоменклатуры      КАК Характеристика,
	|	ТаблицаТовары.СерияНоменклатуры               КАК Серия,
	|	СУММА(ТаблицаТовары.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент) КАК Количество,
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|				КОГДА Шапка.СуммаВключаетНДС ТОГДА ТаблицаТовары.Сумма
	|				ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|			КОНЕЦ * ВЫБОР
	|		КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|			ТОГДА 1
	|		ИНАЧЕ
	|			ЕСТЬNULL(КурсВалютыОснования.Курс, 1) * ЕСТЬNULL(КурсВалютыРегл.Кратность, 1)
	|		    / (ЕСТЬNULL(КурсВалютыРегл.Курс, 1) * ЕСТЬNULL(КурсВалютыОснования.Кратность, 1))
	|	КОНЕЦ) КАК ЧИСЛО(15, 2))                   КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТаблицаТовары.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО КурсВалютыОснования.Валюта = &ВалютаОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО КурсВалютыРегл.Валюта = &ВалютаРеглУчета
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И Не СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.ХарактеристикаНоменклатуры,
	|	ТаблицаТовары.СерияНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	-СУММА(ОформленныеТовары.Сумма)      КАК Сумма
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)       КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Сумма)            КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА СУММА(ТоварыКОформлению.Количество) = 0 ТОГДА 0
	|		ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество)
	|	КОНЕЦ КАК ЧИСЛО(15, 2))                   КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииТребованияНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ВидСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ТребованиеНакладная КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеЧеки
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры    КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры             КАК Серия,
	|	ТабличнаяЧасть.Количество 
	|		* ТабличнаяЧасть.Коэффициент КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТребованиеНакладная.Материалы КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеЧеки КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция   КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)         КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС", Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.НТТ Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Недостача;
			
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииКомплектацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ВидСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеЧеки
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры    КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры             КАК Серия,
	|	ТабличнаяЧасть.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ТабличнаяЧасть.ВидКомплектации = ЗНАЧЕНИЕ(Перечисление.ВидыКомплектации.Разборка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеЧеки КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция   КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)         КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",               ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",       ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",         Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС", Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",             Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ РеквизитыДокумента.ТипСклада = Перечисления.ВидыСкладов.НТТ Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Недостача;
			
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина);
	
КонецПроцедуры

//#КонецОбласти

//#Область ТТНИсходящаяЕГАИС

Процедура ОбработкаЗаполненияТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                                  КАК ДокументОснование,
	|	ДокументОснование.Номер                                   КАК НомерТТН,
	|	ДокументОснование.Дата                                    КАК ДатаТТН,
	|	ДокументОснование.Дата                                    КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен                             КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация                             КАК Поставщик,
	|	ДокументОснование.Ответственный                           КАК Ответственный,
	|	ДокументОснование.Контрагент                              КАК Грузополучатель,
	|	ДокументОснование.Организация                             КАК Грузоотправитель,
	|	ДокументОснование.Склад                                   КАК Склад,
	|	ДокументОснование.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
		
		ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
		ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоКонтрагенту(РеквизитыДокумента.Грузополучатель);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс      КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                           КАК Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры             КАК Характеристика,
	|	Товары.СерияНоменклатуры                      КАК Серия,
	|	СУММА(Товары.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ((Товары.Сумма + ВЫБОР КОГДА Товары.Ссылка.СуммаВключаетНДС ТОГДА 0 ИНАЧЕ Товары.СуммаНДС КОНЕЦ) * ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|			КАК ЧИСЛО(15, 2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО Товары.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры,
	|	Товары.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-Сумма                                  КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Количество)       КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма)            КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА  СУММА(ТоварыКОформлению.Количество) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество) КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                                  КАК ДокументОснование,
	|	ДокументОснование.Номер                                   КАК НомерТТН,
	|	ДокументОснование.Дата                                    КАК ДатаТТН,
	|	ДокументОснование.Дата                                    КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен                             КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация                             КАК Поставщик,
	|	ДокументОснование.Ответственный                           КАК Ответственный,
	|	ДокументОснование.Контрагент                              КАК Грузополучатель,
	|	ДокументОснование.Организация                             КАК Грузоотправитель,
	|	ДокументОснование.Склад                                   КАК Склад,
	|	ДокументОснование.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		
		ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
		ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоКонтрагенту(РеквизитыДокумента.Грузополучатель);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	Товары.СерияНоменклатуры КАК Серия,
	|	СУММА(Товары.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ((Товары.Сумма + ВЫБОР
	|				КОГДА Товары.Ссылка.СуммаВключаетНДС
	|					ТОГДА 0
	|				ИНАЧЕ Товары.СуммаНДС
	|			КОНЕЦ) * ВЫБОР
	|				КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|					ТОГДА ВЫБОР
	|							КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|									И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|									И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|									И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|								ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				ИНАЧЕ 1
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО Товары.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры,
	|	Товары.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура КАК Номенклатура,
	|	ТоварыСерии.Характеристика КАК Характеристика,
	|	ТоварыСерии.Серия КАК Серия,
	|	ТоварыСерии.Количество КАК Количество,
	|	ТоварыСерии.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО (СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СУММА(ТоварыКОформлению.Количество) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0");
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина)
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                КАК ДокументОснование,
	|	ПеремещениеТоваров.Номер                 КАК НомерТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаОтгрузки,
	|	НЕ ПеремещениеТоваров.Проведен           КАК ЕстьОшибкиПроведен,
	|	
	|	ПеремещениеТоваров.Организация           КАК Организация,
	|	ПеремещениеТоваров.Организация           КАК ОрганизацияПолучатель,
	|	
	|	ПеремещениеТоваров.СкладОтправитель      КАК СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель       КАК СкладПолучатель,
	|	
	|	ПеремещениеТоваров.Ответственный         КАК Ответственный
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		
		Поставщик = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.СкладОтправитель);
		
			
		ДокументОбъект.Поставщик        = Поставщик;
		ДокументОбъект.Грузоотправитель = Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.СкладПолучатель);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК Серия,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ТабличнаяЧасть.Цена КАК Цена
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.Цена
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукцияДокумента.Номенклатура КАК Номенклатура,
	|	АлкогольнаяПродукцияДокумента.Характеристика КАК Характеристика,
	|	АлкогольнаяПродукцияДокумента.Серия КАК Серия,
	|	ЕСТЬNULL(АлкогольнаяПродукцияДокумента.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ТоварыКОформлениюЦены
	|ИЗ
	|	ТоварыКОформлению КАК АлкогольнаяПродукцияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукцияДокумента.Номенклатура,
	|	АлкогольнаяПродукцияДокумента.Характеристика,
	|	АлкогольнаяПродукцияДокумента.Серия,
	|	ЕСТЬNULL(АлкогольнаяПродукцияДокумента.Цена, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО (СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКОформлениюЦены КАК ТоварыКОформлениюЦеныФинСерии
	|		ПО (ТоварыКОформлениюЦеныФинСерии.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (ТоварыКОформлениюЦеныФинСерии.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (ТоварыКОформлениюЦеныФинСерии.Серия = ТоварыКОформлению.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКОформлениюЦены КАК ТоварыКОформлениюЦены
	|		ПО (ТоварыКОформлениюЦены.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (ТоварыКОформлениюЦены.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (ТоварыКОформлениюЦены.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина);
	
КонецПроцедуры
//#КонецОбласти

//#Область ВозвратИзРегистра2ЕГАИС

Процедура ОбработкаЗаполненияВозвратаИзРегистра2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка           КАК ДокументОснование,
	|	Ложь                     КАК ЕстьОшибкиПроведен,
	|	Таблица.Грузоотправитель КАК ОрганизацияЕГАИС,
	|	Таблица.Ответственный    КАК Ответственный
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                      КАК Характеристика,
	|	ТабличнаяЧасть.Серия                               КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	ТабличнаяЧасть.Количество                          КАК Количество,
	|	ТабличнаяЧасть.Количество                          КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.АлкогольнаяПродукция                КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2                            КАК Справка2
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	ОформленныеТовары.Упаковка              КАК Упаковка,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.КоличествоУпаковок   КАК КоличествоУпаковок,
	|	ОформленныеТовары.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2              КАК Справка2
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	ТоварыКОформлению.Упаковка                  КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция      КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2                  КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ВозвратИзРегистра2ЕГАИС.КонечныеСтатусы());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина);
	
КонецПроцедуры

//#КонецОбласти

//#Область ПередачаВРегистр2ЕГАИС

Процедура ОбработкаЗаполненияПередачиВРегистр2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииТТНВходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииТТНВходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Грузополучатель КАК ОрганизацияЕГАИС,
	|	Таблица.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 1) <> 0
	|						ТОГДА ВЫБОР
	|								КОГДА ТабличнаяЧасть.Ссылка.ЕстьРасхождения
	|									ТОГДА ТабличнаяЧасть.КоличествоФакт / ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 1)
	|								ИНАЧЕ ТабличнаяЧасть.Количество / ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 1)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТабличнаяЧасть.Ссылка.ЕстьРасхождения
	|					ТОГДА ТабличнаяЧасть.КоличествоФакт
	|				ИНАЧЕ ТабличнаяЧасть.Количество
	|			КОНЕЦ
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 1) <> 0
	|						ТОГДА ВЫБОР
	|								КОГДА ТабличнаяЧасть.Ссылка.ЕстьРасхождения
	|									ТОГДА ТабличнаяЧасть.КоличествоФакт / ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 1)
	|								ИНАЧЕ ТабличнаяЧасть.Количество / ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 1)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТабличнаяЧасть.Ссылка.ЕстьРасхождения
	|					ТОГДА ТабличнаяЧасть.КоличествоФакт
	|				ИНАЧЕ ТабличнаяЧасть.Количество
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	ОформленныеТовары.Упаковка,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок,
	|	ОформленныеТовары.АлкогольнаяПродукция,
	|	ОформленныеТовары.Справка2
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.Справка2 КАК Справка2,
	|	КОЛИЧЕСТВО(АкцизныеМарки.АкцизнаяМарка) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМарки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОстатки КАК втОстатки
	|		ПО (втОстатки.Справка2 = АкцизныеМарки.Справка2)
	|ГДЕ
	|	АкцизныеМарки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.ВНаличии), ЗНАЧЕНИЕ(Перечисление.СтатусыАкцизныхМарок.КПостановкеНаБаланс))
	|
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	ТоварыКОформлению.Упаковка КАК Упаковка,
	|	ТоварыКОформлению.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Справка2 КАК Справка2,
	|	ТоварыКОформлению.Количество - ЕСТЬNULL(АкцизныеМарки.Количество, 0) КАК Количество,
	|	ТоварыКОформлению.КоличествоУпаковок - ЕСТЬNULL(АкцизныеМарки.Количество, 0) КАК КоличествоУпаковок
	|ИЗ
	|	ВтОстатки КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМарки КАК АкцизныеМарки
	|		ПО ТоварыКОформлению.Справка2 = АкцизныеМарки.Справка2
	|ГДЕ
	|	ТоварыКОформлению.Количество - ЕСТЬNULL(АкцизныеМарки.Количество, 0) > 0");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ПередачаВРегистр2ЕГАИС.КонечныеСтатусы());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента, ,"Ответственный");
			
			Если ДокументОбъект.Ответственный.Пустая()
				И Не РеквизитыДокумента.Ответственный.Пустая() Тогда
				
				ДокументОбъект.Ответственный = РеквизитыДокумента.Ответственный;
			КонецЕсли;
		
	КонецЕсли;
	
	Если РезультатЗапроса[РезультатЗапроса.Количество() - 1].Пустой() Тогда
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует алкогольная продукция для передачи в регистр №2 ЕГАИС.'"),
			ДанныеЗаполнения);
	Иначе
		ДокументОбъект.Товары.Очистить();
		ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина);
	КонецЕсли;
	
КонецПроцедуры

//#КонецОбласти

//#Область ЧекЕГАИС

Процедура ОбработкаЗаполненияЧекаЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ЗаполнитьЧекЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		
		ЗаполнитьЧекЕГАИСНаОснованииТребованияНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		
		ЗаполнитьЧекЕГАИСНаОснованииКомплектацииНоменклатуры(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка        КАК ДокументОснование,
	|	НЕ Таблица.Проведен   КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация   КАК Организация,
	|	Таблица.Склад         КАК Склад,
	|	Таблица.Ответственный КАК Ответственный,
	|	Таблица.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта,
	|	Таблица.Дата          КАК Дата,             // Дата товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету.
	|	Таблица.Номер         КАК НомерСмены,       // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету.
	|	Таблица.Номер         КАК НомерЧекаККМ,     // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету.
	|	""""                  КАК СерийныйНомерККМ  // Номер счета на безналичную оплату алкогольной продукции.
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.РеализацияЮридическомуЛицуСБезналичнойОплатой;
			ДокументОбъект.НомерСмены   = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерСмены, РеквизитыДокумента.Организация);
			ДокументОбъект.НомерЧекаККМ = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерЧекаККМ, РеквизитыДокумента.Организация);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс      КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                           КАК Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры             КАК Характеристика,
	|	Товары.СерияНоменклатуры                      КАК Серия,
	|	СУММА(Товары.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент) КАК Количество,
	|	СУММА(ВЫРАЗИТЬ((Товары.Сумма + ВЫБОР
	|				КОГДА Товары.Ссылка.СуммаВключаетНДС
	|					ТОГДА 0
	|				ИНАЧЕ Товары.СуммаНДС
	|			КОНЕЦ)* ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|			КАК ЧИСЛО(15, 2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО Товары.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры,
	|	Товары.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-Сумма                                  КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Количество)       КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма)            КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА  СУММА(ТоварыКОформлению.Количество) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество) КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСНаОснованииТребованияНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка                                  КАК ДокументОснование,
	|	НЕ Таблица.Проведен                             КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация                             КАК Организация,
	|	Таблица.Склад                                   КАК Склад,
	|	Таблица.Ответственный                           КАК Ответственный,
	|	Таблица.Дата                                    КАК Дата,
	|	Таблица.Номер                                   КАК НомерСмены,
	|	Таблица.Номер                                   КАК НомерЧекаККМ,
	|	""""                                            КАК СерийныйНомерККМ,
	|	Константы.ВалютаРегламентированногоУчета.Ссылка КАК Валюта
	|ИЗ
	|	Документ.ТребованиеНакладная КАК Таблица,
	|	Константы КАК Константы
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары;
			ДокументОбъект.НомерСмены   = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерСмены, РеквизитыДокумента.Организация);
			ДокументОбъект.НомерЧекаККМ = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерЧекаККМ, РеквизитыДокумента.Организация);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс      КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                           КАК Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры             КАК Характеристика,
	|	Товары.СерияНоменклатуры                      КАК Серия,
	|	СУММА(Товары.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент) КАК Количество,
	|	0 КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ТребованиеНакладная.Материалы КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО Товары.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры,
	|	Товары.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-Сумма                                  КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Количество)       КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма)            КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА  СУММА(ТоварыКОформлению.Количество) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество) КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСНаОснованииКомплектацииНоменклатуры(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка                                  КАК ДокументОснование,
	|	НЕ Таблица.Проведен                             КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация                             КАК Организация,
	|	Таблица.Склад                                   КАК Склад,
	|	Таблица.Ответственный                           КАК Ответственный,
	|	Таблица.Дата                                    КАК Дата,
	|	Таблица.Номер                                   КАК НомерСмены,
	|	Таблица.Номер                                   КАК НомерЧекаККМ,
	|	""""                                            КАК СерийныйНомерККМ,
	|	Константы.ВалютаРегламентированногоУчета.Ссылка КАК Валюта
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК Таблица,
	|	Константы КАК Константы
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары;
			ДокументОбъект.НомерСмены   = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерСмены, РеквизитыДокумента.Организация);
			ДокументОбъект.НомерЧекаККМ = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерЧекаККМ, РеквизитыДокумента.Организация);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс      КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                           КАК Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры             КАК Характеристика,
	|	Товары.СерияНоменклатуры                      КАК Серия,
	|	СУММА(Товары.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент) КАК Количество,
	|	0 КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.КомплектацияНоменклатуры.Комплектующие КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО Товары.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры,
	|	Товары.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-Сумма                                  КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТабличнаяЧасть.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИС2.Характеристика = ТабличнаяЧасть.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура            КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика          КАК Характеристика,
	|	ТоварыКОформлению.Серия                   КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество)       КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Количество)       КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма)            КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА  СУММА(ТоварыКОформлению.Количество) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество) КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина);
	
КонецПроцедуры

//#КонецОбласти

//#Область ЧекЕГАИСВозврат

Процедура ОбработкаЗаполненияЧекаЕГАИСВозврат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		ЗаполнитьЧекЕГАИСВозвратНаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСВозвратНаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка                   КАК ДокументОснование,
	|	НЕ Таблица.Проведен              КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация              КАК Организация,
	|	Таблица.СкладОрдер               КАК Склад,
	|	Таблица.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта,
	|	Таблица.Ответственный            КАК Ответственный,
	|	Таблица.ДатаДокументаОтгрузки    КАК Дата,             // Дата товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	Таблица.НомерДокументаОтгрузки   КАК НомерСмены,       // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	Таблица.НомерЧекаККМ             КАК НомерЧекаККМ,
	|	""""                             КАК СерийныйНомерККМ  // Номер счета на безналичную оплату алкогольной продукции
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыДокумента = РезультатЗапроса.Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.НомерСмены = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерСмены, РеквизитыДокумента.Организация);
			ДокументОбъект.НомерЧекаККМ = ПолучитьНомерНаПечать(РеквизитыДокумента.НомерЧекаККМ, РеквизитыДокумента.Организация);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТаблицаТовары.СерияНоменклатуры КАК Серия,
	|	СУММА(ТаблицаТовары.Количество 
	|		* СправочникЕдиницыИзмерения.Коэффициент) КАК Количество,
	|	ВЫРАЗИТЬ(СУММА((ТаблицаТовары.Сумма + ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.СуммаВключаетНДС
	|					ТОГДА 0
	|				ИНАЧЕ ТаблицаТовары.СуммаНДС
	|			КОНЕЦ) * ВЫБОР
	|				КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|					ТОГДА 1
	|				ИНАЧЕ ЕСТЬNULL(КурсВалютыОснования.Курс, 1) * ЕСТЬNULL(КурсВалютыРегл.Кратность, 1) / (ЕСТЬNULL(КурсВалютыРегл.Курс, 1) * ЕСТЬNULL(КурсВалютыОснования.Кратность, 1))
	|			КОНЕЦ) КАК ЧИСЛО(15, 2)) КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТаблицаТовары.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.ХарактеристикаНоменклатуры,
	|	ТаблицаТовары.СерияНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-СУММА(ОформленныеТовары.Количество),
	|	-СУММА(ОформленныеТовары.Сумма)
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленыеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТаблицаТовары.Характеристика)
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТаблицаТовары.Серия)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС2
	|		ПО (СоответствиеНоменклатурыЕГАИС2.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС2.Характеристика = ТаблицаТовары.Характеристика)
	|			И (СоответствиеНоменклатурыЕГАИС2.Серия = &ПустаяСерия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция, СоответствиеНоменклатурыЕГАИС2.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество) КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА СУММА(ТоварыКОформлению.Количество) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество)
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленыеПозиции КАК СопоставленыеПозиции
	|		ПО (СопоставленыеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура)
	|			И (СопоставленыеПозиции.Характеристика = ТоварыКОформлению.Характеристика)
	|			И (СопоставленыеПозиции.Серия = ТоварыКОформлению.Серия)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленыеПозиции.АлкогольнаяПродукция
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0";
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ЧекЕГАИСВозврат.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, Истина);
	
КонецПроцедуры

//#КонецОбласти

Процедура ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, БезСопоставления = Ложь)
	
	ВыборкаТовары = РезультатЗапроса.Выбрать();
	
	Если ВыборкаТовары.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует алкогольная продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаТовары.АлкогольнаяПродукция) ИЛИ БезСопоставления Тогда
			
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			
			Если ИнтеграцияЕГАИСКлиентСервер.ЕстьРеквизитОбъекта(НоваяСтрока, "ИдентификаторСтроки")
				И НЕ ЗначениеЗаполнено(НоваяСтрока.ИдентификаторСтроки) Тогда
				НоваяСтрока.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			КонецЕсли;
			
		Иначе
			
			Если ИнтеграцияЕГАИСКлиентСервер.ЕстьРеквизитОбъекта(ВыборкаТовары, "Номенклатура") Тогда
				
				ДокументОбъект.Товары.Очистить();
				
				ТекстОшибки = НСтр("ru='Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ЕГАИС.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", ВыборкаТовары.Номенклатура);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//КонецОбласти

Функция ОрганизацияЕГАИСПоОрганизацииИСкладу(Организация, Склад)
	
	МассивОрганизацийЕГАИС = ОрганизацииЕГАИСПоОрганизацииИСкладу(Организация, Склад);
	
	Если МассивОрганизацийЕГАИС = Неопределено 
		Или МассивОрганизацийЕГАИС.Количество() <> 1 Тогда
		
		Возврат Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
		
	Иначе
		
		Возврат МассивОрганизацийЕГАИС[0];
		
	КонецЕсли;
	
КонецФункции

Функция ОрганизацияЕГАИСПоКонтрагенту(Контрагент)

	МассивОрганизацийЕГАИС = ОрганизацииЕГАИСПоКонтрагенту(Контрагент);
	
	Если МассивОрганизацийЕГАИС = Неопределено 
		Или МассивОрганизацийЕГАИС.Количество() <> 1 Тогда
		
		Возврат Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
		
	Иначе
		
		Возврат МассивОрганизацийЕГАИС[0];
		
	КонецЕсли;

КонецФункции

Функция ЕстьАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + ?(ВРег(ИмяТабличнойЧасти) = "ССЫЛКА", "", "." + ИмяТабличнойЧасти) + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И Не ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукцияВоВскрытойТаре
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура") Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И Не ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукцияВоВскрытойТаре
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ЕстьНеМаркируемаяАлкогольнаяПродукция(ДокументСсылка, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	" + ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти + " КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументСсылка
	|	И    ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукция
	|	И НЕ ТабличнаяЧасть." + ИмяКолонки + ".ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|	И НЕ ТабличнаяЧасть." + ИмяКолонки + ".АлкогольнаяПродукцияВоВскрытойТаре
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();
	
КонецФункции

Функция ОрганизацииЕГАИСПоОрганизацииИСкладу(Организация, Склад)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Организация
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Склад
	|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад",       Склад);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ОрганизацииЕГАИСПоКонтрагенту(Контрагент)
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Сопоставлено
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Контрагент
	|	И НЕ КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

/////////////////////////////////////////////////////////
//
//#Область Статусы
//

Функция ТребуетсяОформлениеДокументовЕГАИС(Основание, МетаданныеДокументаЕГАИС) Экспорт
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			ТребуетсяОформление = ЕстьНеМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			
			Если Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() >= ТекущаяДатаСеанса()
				И Не ТребуетсяОформление Тогда
				ТребуетсяОформление = ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары");
			КонецЕсли;
			
			Возврат ТребуетсяОформление;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС Тогда
			
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Материалы");
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктСписанияЕГАИС
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Основание,"ВидКомплектации") = Перечисления.ВидыКомплектации.Разборка
			
		Тогда
			
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Ссылка");
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
			
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
			
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
			
			Возврат Ложь;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИС Тогда
			
			ЗапросПоСкладу = Новый Запрос(
			"ВЫБРАТЬ
			|	Документ.Склад.ВидСклада КАК ВидСклада
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК Документ
			|ГДЕ
			|	Документ.Ссылка = &Основание");
			
			ЗапросПоСкладу.УстановитьПараметр("Основание", Основание);
			
			ВыборкаПоСкладу = ЗапросПоСкладу.Выполнить().Выбрать();
			ВыборкаПоСкладу.Следующий();
			
			Возврат ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары")
				И (ВыборкаПоСкладу.ВидСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ ВыборкаПоСкладу.ВидСклада = Перечисления.ВидыСкладов.НТТ);
				
		ИначеЕсли МетаданныеДокументаЕГАИС = Метаданные.Документы.ТТНИсходящаяЕГАИС Тогда
			
			ЗапросПоСкладу = Новый Запрос(
			"ВЫБРАТЬ
			|	Документ.Склад.ВидСклада КАК ВидСклада
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК Документ
			|ГДЕ
			|	Документ.Ссылка = &Основание");
			
			ЗапросПоСкладу.УстановитьПараметр("Основание", Основание);
			
			ВыборкаПоСкладу = ЗапросПоСкладу.Выполнить().Выбрать();
			ВыборкаПоСкладу.Следующий();
			
			Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары")
				И (ВыборкаПоСкладу.ВидСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ ВыборкаПоСкладу.ВидСклада = Перечисления.ВидыСкладов.НТТ);
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Если МетаданныеДокументаЕГАИС = Метаданные.Документы.ЧекЕГАИСВозврат Тогда
			
			ЗапросПоСкладу = Новый Запрос(
			"ВЫБРАТЬ
			|	Документ.СкладОрдер.ВидСклада КАК ВидСклада
			|ИЗ
			|	Документ.ВозвратТоваровОтПокупателя КАК Документ
			|ГДЕ
			|	Документ.Ссылка = &Основание");
			
			ЗапросПоСкладу.УстановитьПараметр("Основание", Основание);
			
			ВыборкаПоСкладу = ЗапросПоСкладу.Выполнить().Выбрать();
			ВыборкаПоСкладу.Следующий();
			
			Возврат ЕстьМаркируемаяАлкогольнаяПродукция(Основание, "Товары")
				И (ВыборкаПоСкладу.ВидСклада = Перечисления.ВидыСкладов.Розничный
				ИЛИ ВыборкаПоСкладу.ВидСклада = Перечисления.ВидыСкладов.НТТ);
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Возврат ЕстьАлкогольнаяПродукция(Основание, "Товары");
		
	КонецЕсли;
	
	ВызватьИсключение НСтр("ru = 'Не реализована процедура ""ИнтеграцияЕГАИСУТ.ТребуетсяОформлениеДокументовЕГАИС""'");
	
КонецФункции

Функция СтруктураРеквизитыРасчетаСтатусаОформления()
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Проведен");
	Реквизиты.Вставить("Дата");
	Реквизиты.Вставить("Номер");
	Реквизиты.Вставить("Ответственный");
	Реквизиты.Вставить("ТорговыйОбъект");
	Реквизиты.Вставить("Контрагент");
	
	Возврат Реквизиты;
	
КонецФункции

// Акт постановки на баланс

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс.
//
Процедура РассчитатьСтатусОформленияАктПостановкиНаБалансЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктПостановкиНаБалансЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен      КАК Проведен,
			|	Таблица.Дата          КАК Дата,
			|	Таблица.Номер         КАК Номер,
			|	Таблица.Ответственный КАК Ответственный,
			|	Таблица.Склад         КАК ТорговыйОбъект,
			|	Таблица.Организация   КАК Контрагент
			|ИЗ
			|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.Склад;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.АктПостановкиНаБалансЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.АктПостановкиНаБалансЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс.
//
Функция ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИСНаОснованииОприходованияТоваров(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктПостановкиНаБалансЕГАИСНаОснованииОприходованияТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#Область АктСписанияЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаСписания.
//
Процедура РассчитатьСтатусОформленияАктСписанияЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьДокументаОснования = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктСписанияЕГАИС")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.АктСписанияЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен      КАК Проведен,
			|	Таблица.Дата          КАК Дата,
			|	Таблица.Номер         КАК Номер,
			|	Таблица.Ответственный КАК Ответственный,
			|	Таблица.Склад         КАК ТорговыйОбъект,
			|	Таблица.Организация   КАК Контрагент
			|ИЗ
			|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ЗаписьДокументаОснования = Истина;
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.Склад;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.АктСписанияЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.АктСписанияЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
	Если Не ЗаписьДокументаОснования Тогда
		
		ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
			ИсточникСсылка,
			Метаданные.Документы.ЧекЕГАИС);
		
		ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
			Метаданные.Документы.ЧекЕГАИС,
			ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаСписания.
//
Функция ЗапросСтатусаОформленияАктСписанияЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСЧекЕГАИСНаОснованииТребованияНакладной(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииОтчетОРозничныхПродажах(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииКомплектацииНоменклатуры(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСЧекЕГАИСНаОснованииТребованияНакладной(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТребованиеНакладная.Материалы КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииСписанияТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииОтчетОРозничныхПродажах(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСНаОснованииКомплектацииНоменклатуры(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.ВидКомплектации = ЗНАЧЕНИЕ(Перечисление.ВидыКомплектации.Разборка)
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#КонецОбласти

//#Область ВозвратИзРегистра2ЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс.
//
Процедура РассчитатьСтатусОформленияВозвратИзРегистра2ЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьТребуется = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.ВозвратИзРегистра2ЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратИзРегистра2ЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка)
			И ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен                        КАК Проведен,
			|	Таблица.Дата                            КАК Дата,
			|	Таблица.Номер                           КАК Номер,
			|	Таблица.Ответственный                   КАК Ответственный,
			|	Таблица.Грузоотправитель                КАК Грузоотправитель,
			|	Таблица.Грузоотправитель.ТорговыйОбъект КАК ТорговыйОбъект,
			|	Таблица.Грузоотправитель.Контрагент     КАК Контрагент
			|ИЗ
			|	Документ.ТТНИсходящаяЕГАИС КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
			ИспользоватьРегистр2 = ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2(Выборка.Грузоотправитель);
			
			ЗаписьТребуется = ИспользоватьРегистр2;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		
		ИсточникСсылка = Источник.Ссылка;
		
		ИспользоватьРегистр2 = ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2(Источник.Грузоотправитель);
		
		ЗаписьТребуется = ИспользоватьРегистр2;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Грузоотправитель, "ТорговыйОбъект, Контрагент");
		
		ЗначенияРеквизитов.Контрагент     = РеквизитыОбъекта.Контрагент;
		ЗначенияРеквизитов.ТорговыйОбъект = РеквизитыОбъекта.ТорговыйОбъект;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ВозвратИзРегистра2ЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс.
//
Функция ЗапросСтатусаОформленияВозвратИзРегистра2ЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		Возврат ЗапросСтатусаОформленияВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящаяЕГАИС(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящаяЕГАИС(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Количество           КАК План,
	|	0                           КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	0                                      КАК План,
	|	ОформленныеТовары.Количество           КАК Факт
	|ИЗ
	|	Документ.ВозвратИзРегистра2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.АлкогольнаяПродукция = &ПустаяСсылка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#КонецОбласти

//#Область ПередачаВРегистр2ЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс.
//
Процедура РассчитатьСтатусОформленияПередачаВРегистр2ЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьТребуется    = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.ПередачаВРегистр2ЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаВРегистр2ЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка)
			И ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен                       КАК Проведен,
			|	Таблица.Дата                           КАК Дата,
			|	Таблица.Номер                          КАК Номер,
			|	Таблица.Ответственный                  КАК Ответственный,
			|	Таблица.Грузополучатель                КАК Грузополучатель,
			|	Таблица.Грузополучатель.ТорговыйОбъект КАК ТорговыйОбъект,
			|	Таблица.Грузополучатель.Контрагент     КАК Контрагент,
			|	СтатусыДокументовЕГАИС.Статус          КАК Статус
			|ИЗ
			|	Документ.ТТНВходящаяЕГАИС КАК Таблица
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
			|		ПО СтатусыДокументовЕГАИС.Документ = Таблица.Ссылка
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
			ЗаписьТребуется = ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2(Выборка.Грузополучатель)
			                И (    Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден
			                   Или Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
		
		ИсточникСсылка = Источник.Ссылка;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СтатусыДокументовЕГАИС.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|ГДЕ
		|	СтатусыДокументовЕГАИС.Документ = &Ссылка
		|");
		
		Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		
		ЗаписьТребуется = ИнтеграцияЕГАИСПереопределяемый.ИспользоватьРегистр2(Источник.Грузополучатель)
		                И (    Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден
		                   Или Выборка.Статус = Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.ТорговыйОбъект;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ПередачаВРегистр2ЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс.
//
Функция ЗапросСтатусаОформленияПередачаВРегистр2ЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		Возврат ЗапросСтатусаОформленияПередачаВРегистр2ЕГАИСНаОснованииТТНВходящаяЕГАИС(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияПередачаВРегистр2ЕГАИСНаОснованииТТНВходящаяЕГАИС(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.КоличествоФакт       КАК План,
	|	0                           КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	0                                      КАК План,
	|	ВЫБОР
	|		КОГДА ОформленныеТовары.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ОформленныеТовары.Номенклатура.ОбъемДАЛ, 1) <> 0
	|						ТОГДА ОформленныеТовары.Количество * ЕСТЬNULL(ОформленныеТовары.Номенклатура.ОбъемДАЛ, 1)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ОформленныеТовары.Количество
	|	КОНЕЦ           КАК Факт
	|ИЗ
	|	Документ.ПередачаВРегистр2ЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.АлкогольнаяПродукция = &ПустаяСсылка
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#КонецОбласти

//#Область ТТНИсходящаяЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусОформленияТТНИсходящаяЕГАИС.
//
Процедура РассчитатьСтатусОформленияТТНИсходящаяЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьДокументаОснования = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Если ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Склад         КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.ВозвратТоваровПоставщику КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.Склад         КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.РеализацияТоваровУслуг КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.СкладОтправитель         КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.ПеремещениеТоваров КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
			Иначе
				ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНИсходящаяЕГАИС'");
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ИсточникСсылка  = Источник.Ссылка;
		ЗаписьДокументаОснования = Истина;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
			
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.СкладОтправитель;
			
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровПоставщику")
			Или ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
			
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Склад;
			
		Иначе
			ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНИсходящаяЕГАИС'");
		КонецЕсли;
		
		ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ТТНИсходящаяЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ТТНИсходящаяЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	Если Не ЗаписьДокументаОснования Тогда
		
		ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
			ИсточникСсылка,
			Метаданные.Документы.ЧекЕГАИС);
		
		ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
			Метаданные.Документы.ЧекЕГАИС,
			ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияТТНИсходящаяЕГАИС.
//
Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииВозвратТоваровПоставщику(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииРеализацииТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииПеремещениеТоваров(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииВозвратТоваровПоставщику(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииРеализацииТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеЧеки
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус Не В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И Не СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеДокументы КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ОформленныеЧеки КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНИсходящаяЕГАИСНаОснованииПеремещениеТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество                 КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#КонецОбласти

//#Область ТТНВходящаяЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусОформленияТТНВходящаяЕГАИС.
//
Процедура РассчитатьСтатусОформленияТТНВходящаяЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТТНВходящаяЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Если ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
				
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен      КАК Проведен,
				|	Таблица.Дата          КАК Дата,
				|	Таблица.Номер         КАК Номер,
				|	Таблица.Ответственный КАК Ответственный,
				|	Таблица.СкладОрдер    КАК ТорговыйОбъект,
				|	Таблица.Организация   КАК Контрагент
				|ИЗ
				|	Документ.ПоступлениеТоваровУслуг КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
				
			ИначеЕсли ТипЗнч(ИсточникСсылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				
				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	Таблица.Проведен              КАК Проведен,
				|	Таблица.Дата                  КАК Дата,
				|	Таблица.Номер                 КАК Номер,
				|	Таблица.Ответственный         КАК Ответственный,
				|	Таблица.СкладПолучатель       КАК ТорговыйОбъект,
				|	Таблица.Организация			  КАК Контрагент
				|ИЗ
				|	Документ.ПеремещениеТоваров КАК Таблица
				|ГДЕ
				|	Таблица.Ссылка = &Ссылка");
				
			Иначе
				ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНВходящаяЕГАИС'");
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.СкладОрдер;
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
			ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.СкладПолучатель;
			ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		Иначе
			ВызватьИсключение НСтр("ru = 'Внутренняя ошибка: РассчитатьСтатусОформленияТТНВходящаяЕГАИС'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ТТНВходящаяЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ТТНВходящаяЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияТТНВходящаяЕГАИС.
//
Функция ЗапросСтатусаОформленияТТНВходящаяЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Возврат ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПоступленияТоваровУслуг(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияТТНВходящаяЕГАИСНаОснованииПоступленияТоваровУслуг(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#КонецОбласти

//#Область ЧекЕГАИС

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс.
//
Процедура РассчитатьСтатусОформленияЧекЕГАИС(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	ЗаписьДокументаОснования = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИС")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.ЧекЕГАИС") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИС") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен      КАК Проведен,
			|	Таблица.Дата          КАК Дата,
			|	Таблица.Номер         КАК Номер,
			|	Таблица.Ответственный КАК Ответственный,
			|	Таблица.Склад         КАК ТорговыйОбъект,
			|	Таблица.Организация   КАК Контрагент
			|ИЗ
			|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ЗаписьДокументаОснования = Истина;
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
		ЗначенияРеквизитов.ТорговыйОбъект = Источник.Склад;
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ЧекЕГАИС);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ЧекЕГАИС,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
	Если Не ЗаписьДокументаОснования Тогда
		
		ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
			ИсточникСсылка,
			Метаданные.Документы.АктСписанияЕГАИС);
		
		ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
			Метаданные.Документы.АктСписанияЕГАИС,
			ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
			
		ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
			ИсточникСсылка,
			Метаданные.Документы.ТТНИсходящаяЕГАИС);
		
		ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
			Метаданные.Документы.ТТНИсходящаяЕГАИС,
			ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
		
	КонецЕсли;
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс.
//
Функция ЗапросСтатусаОформленияЧекЕГАИС(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Возврат ЗапросСтатусаОформленияЧекЕГАИСНаОснованииРеализацияТоваровУслуг(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КомплектацияНоменклатуры") Тогда
		
		Возврат ЗапросСтатусаОформленияЧекЕГАИСНаОснованииКомплектацииТоваров(ДокументОснование);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		
		Возврат ЗапросСтатусаОформленияАктСписанияЕГАИСЧекЕГАИСНаОснованииТребованиеНакладная(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияЧекЕГАИСНаОснованииРеализацияТоваровУслуг(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеТТН
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыТТНЕГАИС)
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияЧекЕГАИСНаОснованииКомплектацииТоваров(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыАктСписанияЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.КомплектацияНоменклатуры КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И ТабличнаяЧасть.ВидКомплектации = ЗНАЧЕНИЕ(Перечисление.ВидыКомплектации.Разборка)
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияАктСписанияЕГАИСЧекЕГАИСНаОснованииТребованиеНакладная(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусыЧекЕГАИС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ТребованиеНакладная.Материалы КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИС КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#КонецОбласти

//#Область ЧекЕГАИСВозврат

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.РассчитатьСтатусАктаПостановкиНаБаланс.
//
Процедура РассчитатьСтатусОформленияЧекЕГАИСВозврат(Источник, Отказ) Экспорт
	
	ЗначенияРеквизитов = СтруктураРеквизитыРасчетаСтатусаОформления();
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИСВозврат")
		Или ТипЗнч(Источник) = Тип("ДокументСсылка.ЧекЕГАИСВозврат") Тогда
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЧекЕГАИСВозврат") Тогда
			ИсточникСсылка = Источник.ДокументОснование;
		Иначе
			ИсточникСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник, "ДокументОснование");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ИсточникСсылка) Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Таблица.Проведен      КАК Проведен,
			|	Таблица.Дата          КАК Дата,
			|	Таблица.Номер         КАК Номер,
			|	Таблица.Ответственный КАК Ответственный,
			|   Таблица.Склад" +
			?(ИсточникСсылка.Метаданные().Имя = "ВозвратТоваровОтПокупателя", "Ордер", "") +" КАК ТорговыйОбъект,
			|	Таблица.Организация   КАК Контрагент
			|ИЗ
			|	" + ИсточникСсылка.Метаданные().ПолноеИмя() + " КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка = &Ссылка");
			
			Запрос.УстановитьПараметр("Ссылка", ИсточникСсылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Выборка);
			
		КонецЕсли;
		
	Иначе
		
		ИсточникСсылка = Источник.Ссылка;
		
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов, Источник);
		
		ЗначенияРеквизитов.Ответственный  = Источник.Ответственный;
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.СкладОрдер;
		Иначе
			ЗначенияРеквизитов.ТорговыйОбъект = Источник.Склад;
		КонецЕсли;
		ЗначенияРеквизитов.Контрагент     = Источник.Организация;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИсточникСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьТребуется = ТребуетсяОформлениеДокументовЕГАИС(
		ИсточникСсылка,
		Метаданные.Документы.ЧекЕГАИСВозврат);
	
	ИнтеграцияЕГАИС.РассчитатьСтатусОформления(
		Метаданные.Документы.ЧекЕГАИСВозврат,
		ИсточникСсылка, ЗначенияРеквизитов, ЗаписьТребуется);
	
КонецПроцедуры

// См. процедуру ИнтеграцияЕГАИСПереопределяемый.ЗапросСтатусаОформленияАктаПостановкиНаБаланс.
//
Функция ЗапросСтатусаОформленияЧекЕГАИСВозврат(ДокументОснование) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		Возврат ЗапросСтатусаОформленияЧекЕГАИСВозвратНаОснованииВозвратТоваровОтПокупателя(ДокументОснование);
		
	КонецЕсли;
	
КонецФункции

Функция ЗапросСтатусаОформленияЧекЕГАИСВозвратНаОснованииВозвратТоваровОтПокупателя(ДокументОснование)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура               КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры          КАК Серия,
	|	ТабличнаяЧасть.Количество * СправочникЕдиницыИзмерения.Коэффициент КАК План,
	|	0                                         КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК СправочникЕдиницыИзмерения
	|		ПО ТабличнаяЧасть.ЕдиницаИзмерения = СправочникЕдиницыИзмерения.Ссылка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура   КАК Номенклатура,
	|	ОформленныеТовары.Характеристика КАК Характеристика,
	|	ОформленныеТовары.Серия          КАК Серия,
	|	0                                КАК План,
	|	ОформленныеТовары.Количество     КАК Факт
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт > 0 И Т.План > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.Факт >= 0 И Т.План > Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьНеОформленныеТовары,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План <= Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьПолностьюОформленныеТовары,
	|	ЛОЖЬ                             КАК ТребуетсяСопоставлениеНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.План < Т.Факт
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                           КАК ЕстьОшибкиОформления
	|ИЗ
	|	Результат КАК Т
	|");
	
	Возврат Запрос;
	
КонецФункции

//#КонецОбласти

//#КонецОбласти

//#Область СерииНоменклатуры
// Структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа (обработки).
// Содержит свойства:
//
// ОБЯЗАТЕЛЬНЫЕ:
//	ИспользоватьСерииНоменклатуры - признак, нужно ли в документе заполнять статусы указания серий 
//	ПоляСвязиСерий - массив с именами реквизитов ТЧ Товары и ТЧ Серии, по которым устанавливается
//					 связь между табличными частями (поля связи "Номенклатура" и "Характеристика" 
//					 присутсвуют всегда, их отдельно указывать не нужно)
//	ПолноеИмяОбъекта - Строка - полное имя объекта. Например, Документ.РеализацияТоваровУслуг.
//	
//
// НЕОБЯЗАТЕЛЬНЫЕ:
//	ТолькоПросмотр - признак того, что серии в документе можно только просматривать (значение по умолчанию ЛОЖЬ)
//	ТоварВШапке - признак, что параметры указания серий определены для товара в шапке (иначе - для товара в ТЧ) (значение по умолчанию ЛОЖЬ)
//	БлокироватьДанныеФормы - признак того, что перед открытием форму указания серий, нужно заблокировать форму документа (значение по умолчанию ИСТИНА)
//								если ТолькоПросмотр = Истина, то данные формы не блокируются.
//
//	ИмяТЧТовары - имя табличной части со списком товаров (значение по умолчанию - "Товары")
//	ИмяТЧСерии - имя табличной части со списком серий (значение по умолчанию - "Серии")
//	ИмяПоляКоличество - имя поля в ТЧ "Товары", в котором пользователь редактирует количество (значение по умолчанию - "КоличествоУпаковок")
//	ИмяПоляСклад     - имя реквизита склада (значение по умолчанию - "Склад")
//
//	ИменаПолейСтатусУказанияСерий - Массив - если в объекте несколько полей со статусом указания серий, то нужно добавить их имена в этот массив (значение по умолчанию пустой массив)
//	ИмяИсточникаЗначенийВФормеОбъекта - Строка - значение по умолчанию "Объект", если данные хранятся в реквизитах формы, то нужно указать "ЭтоФорма"
//	ОтборПроверяемыхСтрок
//	ТолькоСерииСУчетомОстатков - Булево - необходимо указывать серии только тогда, когда по ним ведется учет остатков. (значение по умолчанию - ЛОЖЬ)
//	ОсобеннаяПроверкаСтатусовУказанияСерий - Булево - признак, что в модуле менеджера объявлена процедура ТекстЗапросаПроверкиЗаполненияСерий(ПараметрыУказанияСерий)(значение по умолчанию - ЛОЖЬ)
//	ПараметрыЗапроса - Структура - содержит параметры запроса, используемые в функции ТекстЗапросаЗаполненияСтатусовУказанияСерий.
//
// Возвращаемое значение:
//	Структура.
//
Функция ПараметрыУказанияСерий() Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("ИспользоватьСерииНоменклатуры",Неопределено);
	СтруктураПараметров.Вставить("ПоляСвязи", Новый Массив);
	СтруктураПараметров.Вставить("ПолноеИмяОбъекта", "");
	
	СтруктураПараметров.Вставить("ТолькоПросмотр",Ложь);
	СтруктураПараметров.Вставить("ТоварВШапке",Ложь);
	СтруктураПараметров.Вставить("БлокироватьДанныеФормы",Истина);
	СтруктураПараметров.Вставить("ИмяТЧТовары","Товары");
	СтруктураПараметров.Вставить("ИмяТЧСерии","Серии");
	СтруктураПараметров.Вставить("ИмяПоляКоличество","Количество");
	СтруктураПараметров.Вставить("ИмяПоляСклад","Склад");
	СтруктураПараметров.Вставить("РегистрироватьСерии", Истина);
	СтруктураПараметров.Вставить("Дата",Дата(1,1,1));
	СтруктураПараметров.Вставить("ИменаПолейСтатусУказанияСерий",Новый Массив);
	СтруктураПараметров.Вставить("ИменаПолейДополнительные",Новый Массив);
	СтруктураПараметров.Вставить("ИмяИсточникаЗначенийВФормеОбъекта","Объект");
	СтруктураПараметров.Вставить("ОтборПроверяемыхСтрок", Неопределено);
	СтруктураПараметров.Вставить("ТолькоСерииСУчетомОстатков", Ложь);             
	СтруктураПараметров.Вставить("ОсобеннаяПроверкаСтатусовУказанияСерий", Ложь);
	СтруктураПараметров.Вставить("НужноОкруглятьКоличество", Истина);
	СтруктураПараметров.Вставить("ПараметрыЗапроса", Новый Структура);
	
	СтруктураПараметров.Вставить("ОперацияДокумента", Неопределено);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПараметрыУказанияСерийТТНИсходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНИсходящаяЕГАИС";
	ИспользованиеСерийНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользованиеСерийНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Определяет, используются ли на складе серии. Для группы складов определяет используются ли серии в подчиненных складах.
//
// Параметры:
//  Склад					 - СправочникСсылка.Склады	 - склад или группа складов, для которого нужно определить использование серий
//  СкладМожетБытьГруппой	 - Булево					 - признак, что в первом параметре может быть передана группа.
// 
// Возвращаемое значение:
//  Структура - структура со следующими ключами:
//  *ИспользоватьСерииНоменклатуры - Булево
//
Функция ИспользованиеСерийНаСкладе(Склад, СкладМожетБытьГруппой) Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИспользоватьСерииНоменклатуры", Ложь);
	
	Если Не ЗначениеЗаполнено(Склад) Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	СтруктураВозврата.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры"); 
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПараметрыУказанияСерийТТНВходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНВходящаяЕГАИС";
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ПараметрыУказанияСерий.ИмяПоляСклад = "ТорговыйОбъект";
		ПараметрыСерийСклада = ИспользованиеСерийНаСкладе(Объект.ТорговыйОбъект, Ложь);
	
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	
	Иначе
		
		ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = Ложь;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИСВозврат(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИСВозврат";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктПостановкиНаБалансЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктПостановкиНаБалансЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктСписанияЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктСписанияЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийПередачаВРегистр2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПередачаВРегистр2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийВозвратИзРегистра2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратИзРегистра2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСопоставлениеКлассификаторовЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Обработка.СопоставлениеКлассификаторовЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийШтрихкодыУпаковокТоваров(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Справочник.ШтрихкодыУпаковокТоваров";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСоответствиеНоменклатурыЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользованиеСерийНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ТОГДА 2
		|		ИНАЧЕ 21
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШтрихкодыУпаковокТоваров(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	13 КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСоответствиеНоменклатурыЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	13 КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТТНВходящаяЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары." + ПараметрыУказанияСерий.ИмяПоляКоличество + " КАК Количество,
	|	Товары.СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 3
	|		КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

//#КонецОбласти

// Область служебные
Функция ПолучитьНомерНаПечать(НомерДокумента, Организация) Экспорт
	
	Номер   = СокрЛП(НомерДокумента);
	Префикс = "";
	
	МассивПрефиксовДляОбхода = ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(Организация);
	
	Для Каждого ТекущийПрефикс ИЗ МассивПрефиксовДляОбхода Цикл
		
		// удаление префикса из номера документа
		Если Найти(Номер, ТекущийПрефикс)=1 Тогда 
			Номер = Сред(Номер, СтрДлина(ТекущийПрефикс)+1);
		КонецЕсли;
		
		// так же, может остаться "минус" впереди
		Если Лев(Номер, 1) = "-" Тогда
			Номер = Сред(Номер, 2);
		КонецЕсли;
		
		// удаление ведущих нулей
		Пока Лев(Номер, 1)="0" Цикл
			Номер = Сред(Номер, 2);
		КонецЦикла;
	КонецЦикла;

	Возврат Номер;

КонецФункции // ПолучитьНомерНаПечать()

Функция ЭтоРозничныйВозвратАлкоголя(ЭтотОбъект)
	
	// Для ВозвратаТоваровОтПокупателя должен возвращать "Истина"
	// для всех остальных должна возвращать "Ложь"
	Возврат  
		  ТипЗнч(ЭтотОбъект) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя");
		
КонецФункции

Функция ПереданВЕГАИС(Док) Экспорт
	
	ДокЕГАИС = Неопределено;
	
	Если Док.Метаданные().Реквизиты.Найти("АктПереданВЕГАИС") <> Неопределено Тогда
		Результат = Док.АктПереданВЕГАИС;
		Возврат Результат;
	КонецЕсли;
	
	Если Док.Метаданные().Реквизиты.Найти("СтатусОбработки") <> Неопределено Тогда
		ДокЕГАИС = Док;
	Иначе
		ИмяРеквизитаЕГАИС = ИмяРеквизитаЕГАИС(Док);
		Если Док.Метаданные().Реквизиты.Найти(ИмяРеквизитаЕГАИС) <> Неопределено Тогда
			ДокЕГАИС = Док[ИмяРеквизитаЕГАИС];
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокЕГАИС) Тогда
		СтатусОбработки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокЕГАИС, "СтатусОбработки");
		РедактируемыеСтатусы = РедактируемыеСтатусы(ДокЕГАИС);
		Результат = (РедактируемыеСтатусы.Найти(СтатусОбработки) = Неопределено);
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ИмяРеквизитаЕГАИС(ЭтотОбъект, Направление = Неопределено)
	
	МетаданныеОбъекта = ЭтотОбъект.Метаданные();
	Если МетаданныеОбъекта.Реквизиты.Найти("ДокЕГАИС") <> Неопределено Тогда
		Результат = "ДокЕГАИС";
	ИначеЕсли ЭтоРозничныйВозвратАлкоголя(ЭтотОбъект) Тогда
		Результат = "";
	ИначеЕсли МетаданныеОбъекта.Имя = "ПеремещениеТоваров" Тогда
		Если Направление = Неопределено Тогда
			Направление = ОпределитьСостояниеПеремещения(ЭтотОбъект);
		КонецЕсли;
		Если ВРег(Направление) = "ИСХОДЯЩИЙ" Тогда
			Результат = "ТТНИсходящая";
		Иначе
			Результат = "ТТНВходящая";
		КонецЕсли;
	Иначе
		Результат = "";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ЗавершающиеСтатусы(ДокументЕГАИС)
	
	ТипДокументаЕГАИС = ТипЗнч(ДокументЕГАИС);
	
	МассивСтатусов = Новый Массив;
	
	Если ТипДокументаЕГАИС = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПринятАктПодтверждения);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПринятАктОтказа);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПереданоПодтверждениеАктаРасхождений);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ПереданОтказОтАктаРасхождений);
	ИначеЕсли ТипДокументаЕГАИС = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктПодтверждения);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПереданАктОтказа);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятоПодтверждениеАктаРасхождений);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятОтказОтАктаРасхождений);
	ИначеЕсли ТипДокументаЕГАИС = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ПереданВЕГАИС);
	ИначеЕсли ТипДокументаЕГАИС = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.ПереданВЕГАИС);
	КонецЕсли;		

	Возврат МассивСтатусов;
	
КонецФункции

Функция ОпределитьСостояниеПеремещения(ЭтотОбъект, ДокЕГАИС = Неопределено) Экспорт
	// Если в ДокЕГАИС передано любое значение отличное от Неопределено,
	// то в него нужно вернуть ссылку на документ егаис из перемещения,
	// которая соответствует текущему состоянию
	Если ЗначениеЗаполнено(ЭтотОбъект.ТТНВходящая) Тогда
		Если Не ЗначениеЗаполнено(ЭтотОбъект.ТТНИсходящая) Тогда
			Результат = "Входящий";
			ИмяРеквизита = "ТТНВходящая";
		Иначе
			СтатусОбработки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.ТТНИсходящая, "СтатусОбработки");
			ЗавершающиеСтатусы = ЗавершающиеСтатусы(ЭтотОбъект.ТТНИсходящая);
			Если ЗавершающиеСтатусы.Найти(СтатусОбработки) <> Неопределено Тогда
				Результат = "Исходящий";
				ИмяРеквизита = "ТТНИсходящая";
			Иначе
				Результат = "Входящий";
				ИмяРеквизита = "ТТНВходящая";
			КонецЕсли;
		КонецЕсли;
	Иначе
		Результат = "Исходящий";
		ИмяРеквизита = "ТТНИсходящая";
	КонецЕсли;
	Если ДокЕГАИС <> Неопределено Тогда
		ДокЕГАИС = ЭтотОбъект[ИмяРеквизита];
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция РедактируемыеСтатусы(ДокументЕГАИС)
	
	ТипДокументаЕГАИС = ТипЗнч(ДокументЕГАИС);
	
	МассивСтатусов = Новый Массив;
	
	Если ТипДокументаЕГАИС = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.Новый);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНИсходящейЕГАИС.ОшибкаПередачиВЕГАИС);
	ИначеЕсли ТипДокументаЕГАИС = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаПодтверждения);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаОтказа);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ОшибкаПередачиАктаРасхождений);
	ИначеЕсли ТипДокументаЕГАИС = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.Новый);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС.ОшибкаПередачиВЕГАИС);
	ИначеЕсли ТипДокументаЕГАИС = Тип("ДокументСсылка.АктСписанияЕГАИС") Тогда
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.Новый);
		МассивСтатусов.Добавить(Перечисления.СтатусыОбработкиАктаСписанияЕГАИС.ОшибкаПередачиВЕГАИС);
	КонецЕсли;		

	Возврат МассивСтатусов;
	
КонецФункции
// КонецОбласти
/////////////////////////////////////////////////////////////////////
//
// Адаптационный модуль. Поддержка вызовов новой функциональности.
//
/////////////////////////////////////////////////////////////////////

// Область "Программный интерфейс"

// Проверить корректность заполнения алкогольной продукции
//
// Параметры:
//  ДанныеДляЕГАИС - Массив - Данные для ЕГАИС
//  Объект - ДокументОбъект - Проверяемый объект
//  Отказ - Булево - Признак отказа
//
Процедура ПроверитьЗаполнениеАкцизныхМарокЧека(Объект, Отказ) Экспорт
	
	РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС = ИнтеграцияЕГАИСВызовСервера.РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.КлючСтроки,
	|	Товары.Номенклатура,
	|	Товары.НоменклатураЕГАИС,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.КлючСтроки
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.КлючСтроки,
	|	Товары.Номенклатура,
	|	Товары.НоменклатураЕГАИС,
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ОбъемДАЛ * 10
	|	ИНАЧЕ
	|		Товары.НоменклатураЕГАИС.Объем
	|	КОНЕЦ КАК Объем,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ МаркируемаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ВидАлкогольнойПродукции.Маркируемый
	|	ИНАЧЕ
	|		Товары.НоменклатураЕГАИС.ВидПродукции.Маркируемый
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.КлючСтроки,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ АкцизныеМаркиКоличество
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|
	|СГРУППИРОВАТЬ ПО
	|	АкцизныеМарки.ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаркируемаяПродукция.НомерСтроки                КАК НомерСтроки,
	|	МаркируемаяПродукция.Номенклатура               КАК Номенклатура,
	|	МаркируемаяПродукция.НоменклатураЕГАИС          КАК НоменклатураЕГАИС,
	|	МаркируемаяПродукция.Объем                      КАК Объем,
	|	МаркируемаяПродукция.Количество                 КАК Количество,
	|	ЕСТЬNULL(АкцизныеМаркиКоличество.Количество, 0) КАК КоличествоАкцизныхМарок
	|ИЗ
	|	МаркируемаяПродукция КАК МаркируемаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ АкцизныеМаркиКоличество КАК АкцизныеМаркиКоличество
	|		ПО МаркируемаяПродукция.КлючСтроки = АкцизныеМаркиКоличество.КлючСтроки
	|ГДЕ
	|	Не МаркируемаяПродукция.Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|");
	
	Запрос.УстановитьПараметр("Товары",        Объект.Товары.Выгрузить(, "Номенклатура, НоменклатураЕГАИС, КлючСтроки, Количество, НомерСтроки"));
	Запрос.УстановитьПараметр("АкцизныеМарки", Объект.АкцизныеМарки.Выгрузить(, "КлючСтроки"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС
			И Не ЗначениеЗаполнено(Выборка.НоменклатураЕГАИС) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru='Позиция номенклатуры %1 не сопоставлена с элементом классификатора алкогольной продукции ЕГАИС в строке %2 списка ""Товары"".'"),
					Выборка.Номенклатура,
					Выборка.НомерСтроки),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Выборка.Объем) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru='Не заполнен объем для алкогольной продукции %1 в строке %2 списка ""Товары"".'"),
					Выборка.Номенклатура,
					Выборка.НомерСтроки),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Выборка.Количество <> Выборка.КоличествоАкцизныхМарок Тогда
			
			ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
			ТекстОшибки = СтрШаблон(ТекстОшибки,
			                        Выборка.НомерСтроки,
			                        Выборка.Номенклатура,
			                        Выборка.Количество,
			                        Выборка.КоличествоАкцизныхМарок);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					Объект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),,
					Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Получает организацию ЕГАИС по складу/организации.
//
// Параметры:
//  Склад		 - СправочникСсылка.Склады - склад документа.
//  Организация	 - СправочникСсылка.Организации - организация документа.
// 
// Возвращаемое значение:
//  СправочникСсылка.КлассификаторОрганизацийЕГАИС - организация ЕГАИС.
//
Функция ПолучитьОрганизациюЕГАИС(Склад, Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Склад
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Организация";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка
	КонецЕсли;
	
	Возврат Неопределено
	
КонецФункции

// Сопоставить алкогольную продукцию с номенклатурой.
//
// Параметры:
//  Объект - ДокументОбъект - Объект в котором сопоставляется номенклатура.
//  ИмяКолонки - Строка - Имя колонки с номенклатурой ЕГАИС.
//  ЗаписыватьСправку2 - Булево - признак сопоставления по справке 2.
//  СопоставлятьПоИдентификаторуУпаковки - Булево - признак сопоставления по идентификатору.
//
Процедура СопоставитьАлкогольнуюПродукциюСНоменклатурой(Объект, ИмяКолонки = "НоменклатураЕГАИС", ЗаписыватьСправку2 = Ложь, СопоставлятьПоИдентификаторуУпаковки = Ложь, СопоставлятьПоСерии = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкиДляВыгрузки = ИмяКолонки + ", " + "Номенклатура, Характеристика";
	Если СопоставлятьПоСерии Тогда
		КолонкиДляВыгрузки = КолонкиДляВыгрузки + ", Серия";
	КонецЕсли;
	Если СопоставлятьПоИдентификаторуУпаковки Тогда
		КолонкиДляВыгрузки = КолонкиДляВыгрузки + ", ИдентификаторУпаковки";
	КонецЕсли;
	Если ЗаписыватьСправку2 Тогда
		КолонкиДляВыгрузки = КолонкиДляВыгрузки + ", Справка2";
	КонецЕсли;
	Данные = Объект.Товары.Выгрузить(, КолонкиДляВыгрузки);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	&ИмяКолонкиАлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	&ИмяКолонкиСерия КАК Серия,
	|	&ИмяКолонкиИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	&ИмяКолонкиСправка2 КАК Справка2
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&Таблица КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	Таблица.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	Таблица.Справка2 КАК Справка2,
	|	Сопоставлено.АлкогольнаяПродукция КАК Сопоставлено,
	|	МАКСИМУМ(ЕСТЬNULL(Сопоставлено.Порядок,ЕСТЬNULL(СопоставленоБЕЗСерии.Порядок,0))) КАК Порядок
	|ИЗ
	|	Таблица КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК Сопоставлено
	|		ПО Сопоставлено.Номенклатура = Таблица.Номенклатура
	|		 И Сопоставлено.Характеристика = Таблица.Характеристика
	|		 И Сопоставлено.ИдентификаторУпаковки = Таблица.ИдентификаторУпаковки
	|		 И Сопоставлено.Справка2 = Таблица.Справка2
	|		 И Сопоставлено.Серия = Таблица.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СопоставленоБЕЗСерии
	|		ПО СопоставленоБЕЗСерии.Номенклатура = Таблица.Номенклатура
	|		 И СопоставленоБЕЗСерии.Характеристика = Таблица.Характеристика
	|		 И СопоставленоБЕЗСерии.ИдентификаторУпаковки = Таблица.ИдентификаторУпаковки
	|		 И СопоставленоБЕЗСерии.Справка2 = Таблица.Справка2
	|ГДЕ
	|	Таблица.АлкогольнаяПродукция <> ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|	И Таблица.Номенклатура <> &ПустаяСсылкаНоменклатура
	|	И (Сопоставлено.АлкогольнаяПродукция ЕСТЬ NULL
	|		ИЛИ Сопоставлено.АлкогольнаяПродукция <> Таблица.АлкогольнаяПродукция)
	|СГРУППИРОВАТЬ ПО
	|	Таблица.АлкогольнаяПродукция,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Таблица.ИдентификаторУпаковки,
	|	Таблица.Справка2,
	|	Сопоставлено.АлкогольнаяПродукция
	|");
	
	Запрос.УстановитьПараметр("Таблица", Данные);
	Запрос.УстановитьПараметр("ПустаяСсылкаНоменклатура", Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтрока", "");
	Запрос.УстановитьПараметр("ПустаяСправка2", Справочники.Справки2ЕГАИС.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяКолонкиАлкогольнаяПродукция", ИмяКолонки);
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ИмяКолонкиИдентификаторУпаковки",
		?(СопоставлятьПоИдентификаторуУпаковки, "Т.ИдентификаторУпаковки", "&ПустаяСтрока"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ИмяКолонкиСерия",
		?(СопоставлятьПоСерии, "Т.Серия", "&ПустаяСерия"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ИмяКолонкиСправка2",
		?(ЗаписыватьСправку2, "Т.Справка2", "&ПустаяСправка2"));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура, Истина);
		НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика, Истина);
		НаборЗаписей.Отбор.Серия.Установить(Выборка.Серия, Истина);
		НаборЗаписей.Отбор.АлкогольнаяПродукция.Установить(Выборка.АлкогольнаяПродукция, Истина);
		НаборЗаписей.Отбор.ИдентификаторУпаковки.Установить(Выборка.ИдентификаторУпаковки, Истина);
		НаборЗаписей.Отбор.Справка2.Установить(Выборка.Справка2, Истина);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.Номенклатура   = Выборка.Номенклатура;
		НоваяЗапись.Характеристика = Выборка.Характеристика;
		
		ПараметрыУказанияСерий = ГосударственныеИнформационныеСистемыПереопределяемый.ПараметрыУказанияСерийФормыОбъекта(НоваяЗапись, РегистрыСведений.СоответствиеНоменклатурыЕГАИС);
		ГосударственныеИнформационныеСистемыПереопределяемый.ЗаполнитьСтатусыУказанияСерий(НоваяЗапись, ПараметрыУказанияСерий);
		
		НоваяЗапись.Серия                 = Выборка.Серия;
		НоваяЗапись.АлкогольнаяПродукция  = Выборка.АлкогольнаяПродукция;
		НоваяЗапись.ИдентификаторУпаковки = Выборка.ИдентификаторУпаковки;
		НоваяЗапись.Справка2              = Выборка.Справка2;
		НоваяЗапись.Порядок               = Выборка.Порядок + 1;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			
			ТекстОшибки = НСтр("ru = 'При записи соответствия номенклатуры произошла ошибка:
			                         |%1'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ТекстОшибки, КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
			
			ИнтеграцияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
				СтрШаблон(ТекстОшибки, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
			
		КонецПопытки;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Область "Фискальные операции"

Функция СтруктураДанныеФискальнойОперации() Экспорт
	
	ДанныеФискальнойОперации = Новый Структура;
	ДанныеФискальнойОперации.Вставить("ОтправлятьEmailЧерезОФД",          Константы.ОтправлятьЭлектронныеЧекиПоEmailЧерезОФД.Получить());
	ДанныеФискальнойОперации.Вставить("ОтправлятьSMSЧерезОФД",            Ложь);
	ДанныеФискальнойОперации.Вставить("НеПечататьФискальныйЧек",          Константы.НеПечататьФискальныйЧекПриОтправкеЭлектронного.Получить());
	ДанныеФискальнойОперации.Вставить("ОтправительEmail");
	ДанныеФискальнойОперации.Вставить("ВариантОтправкиЭлектронногоЧека");
	ДанныеФискальнойОперации.Вставить("КонтактныеДанныеЭлектронногоЧека");
	
	ОчиститьДанныеФискальнойОперации(ДанныеФискальнойОперации);
	
	Возврат ДанныеФискальнойОперации;
	
КонецФункции

Процедура ОчиститьДанныеФискальнойОперации(ДанныеФискальнойОперации) Экспорт
	
	ДанныеФискальнойОперации.ВариантОтправкиЭлектронногоЧека = Перечисления.ВариантыОтправкиЭлектронногоЧекаПокупателю.ПустаяСсылка();
	ДанныеФискальнойОперации.КонтактныеДанныеЭлектронногоЧека = "";
	
КонецПроцедуры

Функция СистемаНалогообложенияФискальнойОперации(Организация, Дата = Неопределено) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	УчетнаяПолитика.СистемаНалогообложения КАК СистемаНалогообложения,
	|	УчетнаяПолитика.ОбъектНалогообложенияУСН КАК ОбъектНалогообложенияУСН
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&ТекущаяДата, Организация = &Организация) КАК УчетнаяПолитика");
	
	Если Дата = Неопределено Тогда
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Иначе
		Запрос.УстановитьПараметр("ТекущаяДата", Дата);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ДанныеСистемыНалогообложения = Запрос.Выполнить().Выбрать();
	ДанныеСистемыНалогообложения.Следующий();
	
	Если ДанныеСистемыНалогообложения.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
		
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН;
		
	ИначеЕсли ДанныеСистемыНалогообложения.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
		
		Если ДанныеСистемыНалогообложения.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы Тогда
			
			СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход;
			
		ИначеЕсли ДанныеСистемыНалогообложения.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы Тогда
			
			СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СистемаНалогообложения;
	
КонецФункции

// Конец области "Фискальные операции"

// Область "Служебные процедуры и функции"

// Область "Прочее"

// Заполнить реквизит формы "РеквизитыКассира".
//
// Параметры:
//  Кассир - Справочник.Пользователи - Кассир.
//
Функция РеквизитыКассира(Кассир) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(Пользователи.ФизЛицо.ИНН, """") КАК ИНН,
	|	ЕСТЬNULL(Пользователи.ФизЛицо.Наименование, """") КАК Наименование
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка = &Кассир");
	Запрос.УстановитьПараметр("Кассир", Кассир);
	
	РеквизитыКассира = Новый Структура;
	РеквизитыКассира.Вставить("ИНН", "");
	РеквизитыКассира.Вставить("Наименование", НСтр("ru = 'Администратор'"));
	
	ВыборкаРеквизитыКассира = Запрос.Выполнить().Выбрать();
	Если ВыборкаРеквизитыКассира.Следующий() Тогда
		
		Если ЗначениеЗаполнено(ВыборкаРеквизитыКассира.Наименование) Тогда
			РеквизитыКассира.Наименование = ВыборкаРеквизитыКассира.Наименование;
		КонецЕсли;
		
		РеквизитыКассира.ИНН = ВыборкаРеквизитыКассира.ИНН;
		
	КонецЕсли;
	
	Возврат РеквизитыКассира;
	
КонецФункции

// Конец области "Прочее"

// Конец области "Служебные процедуры и функции"

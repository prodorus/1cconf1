
//#Область ПрограммныйИнтерфейс

// Проверяет активна ли кассовая смена. Под активностью понимается соблюдение следующих уловий:
// - кассовая смена не закрыта
// - с момента открытия кассовой смены прошло не более 24 часов
//
// Параметры:
//  КассоваяСмена - ДокументСсылка.КассоваяСмена - Кассовая смена, актвность которой необходимо проверить
//
// Возвращаемое значение:
//  Булево - активность смены
Функция СменаАктивна(КассоваяСмена) Экспорт
	
	ОписаниеСмены = КассовыеСменыВызовСервера.ОписаниеКассовойСмены(КассоваяСмена);
	
	Если ОписаниеСмены = Неопределено Тогда
		
		Возврат Ложь;
		
	ИначеЕсли ОписаниеСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта
		и ОписаниеСмены.ДатаИстеченияСрокаДействия > ТекущаяДатаСеанса() Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Проверяет закрыта ли кассовая смена.
//
// Параметры:
//  КассоваяСмена - ДокументСсылка.КассоваяСмена - Кассовая смена, актвность которой необходимо проверить
//
// Возвращаемое значение:
//  Булево - Истина - смена закрыта, Ложь - смена не закрыта
Функция СменаЗакрыта(КассоваяСмена) Экспорт
	
	ОписаниеПоследнейСмены = КассовыеСменыВызовСервера.ОписаниеКассовойСмены(КассоваяСмена);
	
	Если ОписаниеПоследнейСмены = Неопределено Тогда
		
		Возврат Истина;
		
	ИначеЕсли не ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Получает реквизиты кассовой смены
//
// Параметры:
//  КассоваяСмена - ДокументСсылка.КассоваяСмена - Кассовая смена, актвность которой необходимо проверить
//
// Возвращаемое значение:
//  Структура - реквизиты кассовой смены. Содержит следующие резвизиты:
//    КассоваяСмена - ДокументСсылка.КассоваяСмена - ссылка на кассовую смену
//    ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - ссылка на устройство, на котором открыта смена
//    НачалоКассовойСмены - Дата - дата открытия смены
//    ОкончаниеКассовойСмены - Дата - дата закрытия смены (если смена закрывалась)
//    ДатаИстеченияСрокаДействия - дата, в которую истечет срок действия смены (дата открытия + 24 часа)
//    Организация - организация, указанная в документе КассоваяСмена
//    Статус - статус кассовой смены
Функция ОписаниеКассовойСмены(КассоваяСмена) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КассоваяСмена.Ссылка КАК КассоваяСмена,
	|	КассоваяСмена.ФискальноеУстройство,
	|	КассоваяСмена.НачалоКассовойСмены,
	|	КассоваяСмена.ОкончаниеКассовойСмены,
	|	ДОБАВИТЬКДАТЕ(КассоваяСмена.НачалоКассовойСмены, ДЕНЬ, 1) КАК ДатаИстеченияСрокаДействия,
	|	КассоваяСмена.Организация,
	|	КассоваяСмена.Статус,
	|	КассоваяСмена.КассаККМ
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСмена
	|ГДЕ
	|	КассоваяСмена.Ссылка = &КассоваяСмена";
	Запрос.УстановитьПараметр("КассоваяСмена", КассоваяСмена);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		СтруктураРезультат = Новый Структура();
		Для Каждого КолонкаРезультата Из Результат.Колонки Цикл
			СтруктураРезультат.Вставить(КолонкаРезультата.Имя, Результат[0][КолонкаРезультата.Имя]);
		КонецЦикла;
		Возврат СтруктураРезультат;
	КонецЕсли;
	
КонецФункции

// По фискальному устройству определяет последнюю смену и проверяет ее активность. Под активностью понимается соблюдение следующих уловий:
// - кассовая смена не закрыта
// - с момента открытия кассовой смены прошло не более 24 часов
//
// Параметры:
//  ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, для которого требуется определить активность смены
//
// Возвращаемое значение:
//  Булево - Истина - смена открыта, Ложь - смена закрыта, прошло более 24 часов с момента открытия или никогда не была открыта
Функция ПоследняяСменаАктивна(ФискальноеУстройство) Экспорт
	
	ОписаниеПоследнейСмены = ОписаниеПоследнейКассовойСмены(ФискальноеУстройство);
	
	Если ОписаниеПоследнейСмены = Неопределено Тогда
		
		Возврат Ложь;
		
	ИначеЕсли ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта
		и ОписаниеПоследнейСмены.ДатаИстеченияСрокаДействия > ТекущаяДатаСеанса() Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// По фискальному устройству определяет последнюю смену и проверяет закрыта ли она.
//
// Параметры:
//  ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, для которого требуется определить закрыта ли смена
//
// Возвращаемое значение:
//  Булево - Истина - смена закрыта или никогда не была открыта, Ложь - смена не закрыта
Функция ПоследняяСменаЗакрыта(ФискальноеУстройство) Экспорт
	
	ОписаниеПоследнейСмены = ОписаниеПоследнейКассовойСмены(ФискальноеУстройство);
	
	Если ОписаниеПоследнейСмены = Неопределено Тогда
		
		Возврат Истина;
		
	ИначеЕсли Не ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// По фискальному устройству определяет последнюю смену и получает ее реквизиты
//
// Параметры:
//  ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, для которого требуется определить активность смены
//
// Возвращаемое значение:
//  Структура - реквизиты кассовой смены, Неопределено - если ни одной смены небыло открыто. Содержит следующие резвизиты:
//    КассоваяСмена - ДокументСсылка.КассоваяСмена - ссылка на кассовую смену
//    ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - ссылка на устройство, на котором открыта смена
//    НачалоКассовойСмены - Дата - дата открытия смены
//    ОкончаниеКассовойСмены - Дата - дата закрытия смены (если смена закрывалась)
//    ДатаИстеченияСрокаДействия - дата, в которую истечет срок действия смены (дата открытия + 24 часа)
//    Организация - организация, указанная в документе КассоваяСмена
//    Статус - статус кассовой смены
Функция ОписаниеПоследнейКассовойСмены(ФискальноеУстройство) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КассоваяСмена.Ссылка КАК КассоваяСмена,
	|	КассоваяСмена.ФискальноеУстройство,
	|	КассоваяСмена.НачалоКассовойСмены,
	|	КассоваяСмена.ОкончаниеКассовойСмены,
	|	ДОБАВИТЬКДАТЕ(КассоваяСмена.НачалоКассовойСмены, ДЕНЬ, 1) КАК ДатаИстеченияСрокаДействия,
	|	КассоваяСмена.Организация,
	|	КассоваяСмена.Статус,
	|	КассоваяСмена.ДатаСменыККТ,
	|	КассоваяСмена.НомерСменыККТ,
	|	КассоваяСмена.КассаККМ
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСмена
	|ГДЕ
	|	КассоваяСмена.ФискальноеУстройство = &ФискальноеУстройство
	|	И КассоваяСмена.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассоваяСмена.НачалоКассовойСмены УБЫВ";
	Запрос.УстановитьПараметр("ФискальноеУстройство", ФискальноеУстройство);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		СтруктураРезультат = Новый Структура();
		Для Каждого КолонкаРезультата Из Результат.Колонки Цикл
			СтруктураРезультат.Вставить(КолонкаРезультата.Имя, Результат[0][КолонкаРезультата.Имя]);
		КонецЦикла;
		Возврат СтруктураРезультат;
	КонецЕсли;
	
КонецФункции

// По фискальному устройству определяет статус смены и проверяет ее активность. Под активностью понимается соблюдение следующих уловий:
// - кассовая смена не закрыта
// - с момента открытия кассовой смены прошло не более 24 часов
//
// Параметры:
//  ФискальноеУстройство - СправочникСсылка.ПодключаемоеОборудование - фискальное устройство, для которого требуется определить активность смены
//
// Возвращаемое значение:
//  Результат - Структура
//    Открыта - Булево - Истина - смена открыта, Ложь - смена закрыта.
//    Активна - Булево - Истина - смена открыта, Ложь - смена закрыта, прошло более 24 часов с момента открытия или никогда не была открыта.
// 
Функция СтатусПоследнейСмены(ФискальноеУстройство) Экспорт
	
	РезультатОперации = Новый Структура();
	РезультатОперации.Вставить("Активна", Ложь);
	РезультатОперации.Вставить("Открыта", Ложь);
	РезультатОперации.Вставить("НомерСмены");
	РезультатОперации.Вставить("КассоваяСмена");
	
	ОписаниеПоследнейСмены = ОписаниеПоследнейКассовойСмены(ФискальноеУстройство);
	
	Если Не (ОписаниеПоследнейСмены = Неопределено) Тогда
		РезультатОперации.Открыта = ОписаниеПоследнейСмены.Статус = Перечисления.СтатусыКассовойСмены.Открыта; 
		РезультатОперации.Активна = РезультатОперации.Открыта И ОписаниеПоследнейСмены.ДатаИстеченияСрокаДействия > ТекущаяДатаСеанса();
		РезультатОперации.КассоваяСмена    = ОписаниеПоследнейСмены.КассоваяСмена;
		РезультатОперации.НомерСмены       = ОписаниеПоследнейСмены.КассоваяСмена.Номер;
	КонецЕсли;
	
	Возврат РезультатОперации;
	
КонецФункции

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

Процедура ПослеВыполненияКомандыФискальнымУстройством(ПараметрыКоманды) Экспорт
	
	Если ПараметрыКоманды.ВыполняемаяКоманда = "OpenShift" ИЛИ ПараметрыКоманды.ВыполняемаяКоманда = "ОткрытьСмену" Тогда
		
		КассоваяСменаОбъект = Документы.КассоваяСмена.СоздатьДокумент();
		КассоваяСменаОбъект.Дата = ТекущаяДатаСеанса();
		
		КассоваяСменаОбъект.ФискальноеУстройство = ПараметрыКоманды.ФискальноеУстройство;
		КассоваяСменаОбъект.НачалоКассовойСмены = КассоваяСменаОбъект.Дата;
		КассоваяСменаОбъект.КассаККМ = ПараметрыКоманды.КассаККМ;
		КассоваяСменаОбъект.Организация = ПараметрыКоманды.КассаККМ.Владелец;
		КассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Открыта;
		Если ПараметрыКоманды.Свойство("ДополнительныеПараметры")
			И ПараметрыКоманды.ДополнительныеПараметры <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(КассоваяСменаОбъект, ПараметрыКоманды.ДополнительныеПараметры);
		КонецЕсли;
		
		Если ПараметрыКоманды.ТипОборудования = "ПринтерЧеков" Тогда
			КассоваяСменаОбъект.НомерСменыККТ = ТекущийНомерСмены(ОписаниеПоследнейКассовойСмены(ПараметрыКоманды.ФискальноеУстройство)) + 1;
		КонецЕсли;
		
	ИначеЕсли ПараметрыКоманды.ВыполняемаяКоманда = "CloseShift" ИЛИ ПараметрыКоманды.ВыполняемаяКоманда = "ЗакрытьСмену" Тогда
		
		КассоваяСменаОбъект = ПараметрыКоманды.КассоваяСмена.ПолучитьОбъект();
		
		КассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Закрыта;
		КассоваяСменаОбъект.ОкончаниеКассовойСмены = ТекущаяДатаСеанса();
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Если ПараметрыКоманды.Свойство("ФискальныеДанныеСтруктура") Тогда
		ЗаполнитьЗначенияСвойств(КассоваяСменаОбъект, ПараметрыКоманды.ФискальныеДанныеСтруктура);
	КонецЕсли;
	
	Если (ПараметрыКоманды.ВыполняемаяКоманда = "CloseShift" ИЛИ ПараметрыКоманды.ВыполняемаяКоманда = "ЗакрытьСмену") 
		И ПараметрыКоманды.Свойство("ФискальныеДанныеXMLСтрока") Тогда
		КассоваяСменаОбъект.ФДОЗакрытииСмены = Новый ХранилищеЗначения(ПараметрыКоманды.ФискальныеДанныеXMLСтрока, Новый СжатиеДанных(9));
	КонецЕсли;
	
	Если КассоваяСменаОбъект.Модифицированность() Тогда
		КассоваяСменаОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
	Если (ПараметрыКоманды.ВыполняемаяКоманда = "CloseShift" ИЛИ ПараметрыКоманды.ВыполняемаяКоманда = "ЗакрытьСмену") 
		И ПараметрыКоманды.ОбрабатыватьЧекиККМ = Истина Тогда
		
		СозданныеДокументы = Новый Массив();
		
		ЗакрытиеКС = Обработки.ЗакрытиеКассовойСмены.Создать();
		ЗакрытиеКС.Дата = КассоваяСменаОбъект.Дата;
		ЗакрытиеКС.КассаККМ = КассоваяСменаОбъект.КассаККМ;
		ЗакрытиеКС.ОбработкаЧековККМ(Справочники.Склады.ПустаяСсылка(), СозданныеДокументы);
		
		ПараметрыКоманды.Вставить("СозданныеДокументы", СозданныеДокументы)
		
	КонецЕсли;

КонецПроцедуры

Функция ТекущийНомерСмены(ОписаниеКассовойСмены) Экспорт
	Если ОписаниеКассовойСмены = Неопределено Тогда
		Результат = 0;
	Иначе
		Результат = ОписаниеКассовойСмены.НомерСменыККТ;
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ТекущийНомерЧека(ОписаниеКассовойСмены) Экспорт
	Если ОписаниеКассовойСмены = Неопределено Тогда
		Результат = 0;
	Иначе
		
		ПривилегированныйРежимДо = ПривилегированныйРежим();
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекККМ.Ссылка КАК Ссылка,
		|	ЧекККМ.НомерЧекаККМ КАК НомерЧекаККМ
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|ГДЕ
		|	ЧекККМ.ЧекПробитНаККМ
		|	И ЧекККМ.КассаККМ = &ККМ
		|	И ЧекККМ.Дата >= &ДатаСменыККМ
		|	И НЕ ЧекККМ.Архивный
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриходныйКассовыйОрдер.Ссылка,
		|	ПриходныйКассовыйОрдер.НомерЧекаККМ
		|ИЗ
		|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
		|ГДЕ
		|	ПриходныйКассовыйОрдер.ККМ = &ККМ
		|	И ПриходныйКассовыйОрдер.Дата >= &ДатаСменыККМ
		|	И ПриходныйКассовыйОрдер.НомерЧекаККМ <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасходныйКассовыйОрдер.Ссылка,
		|	РасходныйКассовыйОрдер.НомерЧекаККМ
		|ИЗ
		|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
		|ГДЕ
		|	РасходныйКассовыйОрдер.ККМ = &ККМ
		|	И РасходныйКассовыйОрдер.Дата >= &ДатаСменыККМ
		|	И РасходныйКассовыйОрдер.НомерЧекаККМ <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОплатаОтПокупателяПлатежнойКартой.Ссылка,
		|	ОплатаОтПокупателяПлатежнойКартой.НомерЧекаККМ
		|ИЗ
		|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
		|ГДЕ
		|	ОплатаОтПокупателяПлатежнойКартой.ККМ = &ККМ
		|	И ОплатаОтПокупателяПлатежнойКартой.Дата >= &ДатаСменыККМ
		|	И ОплатаОтПокупателяПлатежнойКартой.НомерЧекаККМ <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтПокупателя.Ссылка,
		|	ВозвратТоваровОтПокупателя.НомерЧекаККМ
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
		|ГДЕ
		|	ВозвратТоваровОтПокупателя.ККМ = &ККМ
		|	И ВозвратТоваровОтПокупателя.Дата >= &ДатаСменыККМ
		|	И ВозвратТоваровОтПокупателя.НомерЧекаККМ <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка,
		|	РеализацияТоваровУслуг.НомерЧекаККМ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.ККМ = &ККМ
		|	И РеализацияТоваровУслуг.Дата >= &ДатаСменыККМ
		|	И РеализацияТоваровУслуг.НомерЧекаККМ <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АктОбОказанииПроизводственныхУслуг.Ссылка,
		|	АктОбОказанииПроизводственныхУслуг.НомерЧекаККМ
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг КАК АктОбОказанииПроизводственныхУслуг
		|ГДЕ
		|	АктОбОказанииПроизводственныхУслуг.ККМ = &ККМ
		|	И АктОбОказанииПроизводственныхУслуг.Дата >= &ДатаСменыККМ
		|	И АктОбОказанииПроизводственныхУслуг.НомерЧекаККМ <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерЧекаККМ УБЫВ";
		Запрос.УстановитьПараметр("ККМ", ОписаниеКассовойСмены.КассаККМ);
		Запрос.УстановитьПараметр("ДатаСменыККМ", ОписаниеКассовойСмены.НачалоКассовойСмены);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Не Выборка.Следующий() Тогда
			Результат = 0;
		Иначе
			Результат = Выборка.НомерЧекаККМ;
		КонецЕсли;
		УстановитьПривилегированныйРежим(ПривилегированныйРежимДо);
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция ЕстьПравоНаЗакрытиеСмены() Экспорт
	Результат = ПравоДоступа("Использование", Метаданные.Обработки.ЗакрытиеКассовойСмены);
	Возврат Результат;
КонецФункции

//#КонецОбласти

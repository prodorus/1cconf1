Функция ОписаниеФорматированнойСтроки() Экспорт
	
	ОписаниеФорматированнойСтроки = Новый("Структура");
	ОписаниеФорматированнойСтроки.Вставить("Заголовок",  "");
	ОписаниеФорматированнойСтроки.Вставить("Шрифт",      Неопределено);
	ОписаниеФорматированнойСтроки.Вставить("ЦветТекста", Неопределено);
	ОписаниеФорматированнойСтроки.Вставить("ЦветФона",   Неопределено);
	ОписаниеФорматированнойСтроки.Вставить("Ссылка",     "");
	
	Возврат ОписаниеФорматированнойСтроки;
	
КонецФункции

Функция ИмяЭлементаФорматированнойСтроки(ИмяРодителя, НомерСтроки) Экспорт
	
	Возврат ИмяРодителя + "ДекорацияНадпись" + НомерСтроки;
	
КонецФункции

Функция НавигационнаяСсылкаСтроки(Элемент, ОписанияСтрок) Экспорт
	
	НавигационнаяСсылкаСтроки = "";
	
	Если Тип(Элемент.Родитель) = Тип("ГруппаФормы") Тогда
		ИмяЭлемента = Элемент.Имя;
		ИмяРодителя = Элемент.Родитель.Имя;
		
		ИндексСтроки = Число(СтрЗаменить(ИмяЭлемента, ИмяРодителя + "ДекорацияНадпись", "")) - 1;
		
		Если НЕ ИндексСтроки < 0 Тогда
			НавигационнаяСсылкаСтроки = ОписанияСтрок[ИндексСтроки].Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НавигационнаяСсылкаСтроки;
	
КонецФункции

Процедура НачатьЗагрузкуДанныеИзТСД(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		
		СерверТО = ДополнительныеПараметры.СерверТО;
		ОписаниеЧисла = Новый ОписаниеТипов("Число");
		Для каждого СтрокаТоваров Из РезультатВыполнения.ТаблицаТоваров Цикл
			Для СчетчикКоличества = 1 По ОписаниеЧисла.ПривестиЗначение(СтрокаТоваров.Количество) Цикл
				СерверТО.ОбработатьВведенныйШтрихкод(СтрокаТоваров.Штрихкод, ДополнительныеПараметры.Клиент);
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		ВызватьИсключение РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыЧекаДляПодписиВЕГАИС(ТаблицаТоваров, СуммаНал, СуммаБезНал, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЧекККМ.Организация.ИНН КАК ИНН,
	|	ЧекККМ.Организация.КПП КАК КПП,
	|	"""" КАК АдресМагазина,
	|	ЧекККМ.Склад.Наименование КАК НаименованиеМагазина,
	|	ЧекККМ.КассаККМ.СерийныйНомер КАК ЗаводскойНомерККМ,
	|	ВЫБОР
	|		КОГДА ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Возврат,
	|	ЧекККМ.Организация КАК Организация,
	|	ЧекККМ.Склад КАК Склад
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ПараметрыЧека = Новый Массив;
	ПараметрыЧека.Добавить(ТаблицаТоваров);
	ПараметрыЧека.Добавить(СуммаНал);
	ПараметрыЧека.Добавить(СуммаБезНал);
	ПараметрыЧека.Добавить(Выборка.Возврат);
	ПараметрыЧека.Добавить(Выборка.ИНН);
	ПараметрыЧека.Добавить(Выборка.КПП);
	ПараметрыЧека.Добавить(Выборка.АдресМагазина);
	ПараметрыЧека.Добавить(Выборка.НаименованиеМагазина);
	ПараметрыЧека.Добавить(Выборка.ЗаводскойНомерККМ);
	ПараметрыЧека.Добавить(0);
	ПараметрыЧека.Добавить(0);
	
	// Всегда должен быть последним
	ТранспортныйМодуль = ИспользуемыйТранспортныйМодуль(Выборка.Организация, Выборка.Склад);
	ПараметрыЧека.Добавить(ТранспортныйМодуль);
	
	Возврат ПараметрыЧека;
	
КонецФункции

Функция ИспользуемыйТранспортныйМодуль(Организация, Склад) Экспорт
	
	Результат = Неопределено;
	ТорговыйОбъект = НайтиОрганизациюЕГАИС(Организация, Склад);
	
	Если ЗначениеЗаполнено(ТорговыйОбъект) Тогда
		Отбор = Новый Массив;
		Отбор.Добавить(Новый Структура("Поле, Значение", "ИдентификаторФСРАР", ТорговыйОбъект.Код));
		ДоступныеМодули = ДоступныеТранспортныеМодули(Отбор);
		Если ДоступныеМодули.Количество() = 1 Тогда
			Результат = ДоступныеМодули[0];
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НайтиОрганизациюЕГАИС(СправочникИБ, Склад = Неопределено) Экспорт
	
	Если ТипЗнч(СправочникИБ) = Тип("СправочникСсылка.Контрагенты") И Склад = Неопределено Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС
		               |ИЗ
		               |	РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИС
		               |ГДЕ
		               |	СоответствиеОрганизацийЕГАИС.Контрагент = &СправочникИБ";
		ПараметрОтбора = СправочникИБ;
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	НастройкиОбменаЕГАИС.ИдентификаторФСРАР,
		               |	0 КАК Приоритет
		               |ПОМЕСТИТЬ втНастройки
		               |ИЗ
		               |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		               |ГДЕ
		               |	НастройкиОбменаЕГАИС.Организация = &СправочникИБ
		               |	И НастройкиОбменаЕГАИС.Склад = &Склад
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НастройкиОбменаЕГАИС.ИдентификаторФСРАР,
		               |	1
		               |ИЗ
		               |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		               |ГДЕ
		               |	НастройкиОбменаЕГАИС.Организация = &СправочникИБ
		               |	И НастройкиОбменаЕГАИС.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НастройкиОбменаЕГАИС.ИдентификаторФСРАР,
		               |	2
		               |ИЗ
		               |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		               |ГДЕ
		               |	НастройкиОбменаЕГАИС.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		               |	И НастройкиОбменаЕГАИС.Склад = &Склад
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НастройкиОбменаЕГАИС.ИдентификаторФСРАР,
		               |	3
		               |ИЗ
		               |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
		               |ГДЕ
		               |	НастройкиОбменаЕГАИС.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		               |	И НастройкиОбменаЕГАИС.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	КлассификаторОрганизацийЕГАИС.Ссылка КАК ОрганизацияЕГАИС,
		               |	втНастройки.ИдентификаторФСРАР,
		               |	втНастройки.Приоритет
		               |ИЗ
		               |	втНастройки КАК втНастройки
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		               |		ПО втНастройки.ИдентификаторФСРАР = КлассификаторОрганизацийЕГАИС.Код
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	втНастройки.Приоритет";
		Если ТипЗнч(СправочникИБ) = Тип("СправочникСсылка.Контрагенты") Тогда
			ПараметрОтбора = ЗаполнениеДокументов.ПолучитьОрганизациюПоКонтрагенту(СправочникИБ);
		Иначе
			ПараметрОтбора = СправочникИБ;
		КонецЕсли;
	КонецЕсли;
	
	ОрганизацияЕГАИС = Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("СправочникИБ", ПараметрОтбора);
		Запрос.УстановитьПараметр("Склад", ?(Склад = Неопределено, Справочники.Склады.ПустаяСсылка(), Склад));
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОрганизацияЕГАИС = Выборка.ОрганизацияЕГАИС;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОрганизацияЕГАИС;
	
КонецФункции

// Получает список доступных транспортных модулей ЕГАИС.
//
// Параметры:
//  Отбор - Структура, Массив - структура с ключами: Поле, Значение. Или массив таких структур.
//
// Возвращаемое значение:
//   Массив - список транспортных модулей ЕГАИС.
//
Функция ДоступныеТранспортныеМодули(Отбор = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос;                                                
	Запрос.УстановитьПараметр("ПустаяОрганизацияЕГАИС", Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.Ссылка, &ПустаяОрганизацияЕГАИС)   КАК ОрганизацияЕГАИС,
	|	
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ИНН, """")                         КАК ИНН,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.КПП, """")                         КАК КПП,
	|	
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.Представление, """")               КАК Представление,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ПредставлениеАдреса, """")         КАК Адрес,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ФорматОбмена, НЕОПРЕДЕЛЕНО)        КАК ФорматОбмена,
	|	
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.Контрагент, НЕОПРЕДЕЛЕНО)          КАК Контрагент,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ТорговыйОбъект, НЕОПРЕДЕЛЕНО)      КАК ТорговыйОбъект,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.НаходитсяВСельскойМестности, ЛОЖЬ) КАК НаходитсяВСельскойМестности,
	|	
	|	ЕСТЬNULL(НастройкиОбменаЕГАИС.ОбменНаСервере, ЛОЖЬ) 					  КАК ОбменНаСервере,
	|	ЕСТЬNULL(НастройкиОбменаЕГАИС.ИдентификаторФСРАР, ЛОЖЬ) 				  КАК ИдентификаторФСРАР,
	|	НастройкиОбменаЕГАИС.АдресУТМ											  КАК АдресУТМ,
	|	НастройкиОбменаЕГАИС.ПортУТМ											  КАК ПортУТМ
	|	
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ПО НастройкиОбменаЕГАИС.ИдентификаторФСРАР = КлассификаторОрганизацийЕГАИС.Код";
	
	Если ТипЗнч(Отбор) = Тип("Массив") Тогда
		МассивОтборов = Отбор;
	Иначе
		МассивОтборов = Новый Массив;
	КонецЕсли;
	
	Если ТипЗнч(Отбор) = Тип("Структура") Тогда
		МассивОтборов.Добавить(Отбор);
	КонецЕсли;
	
	Сч = 0;
	ТекстУсловий = "";
	Для Каждого СтруктураОтбора Из МассивОтборов Цикл
		
		Если НЕ ПустаяСтрока(ТекстУсловий) Тогда
			ТекстУсловий = ТекстУсловий + " И ";
		Иначе
			ТекстУсловий = " ГДЕ ";
		КонецЕсли;
		
		Если    ВРег(СтруктураОтбора.Поле) = ВРег("Контрагент")
			Или ВРег(СтруктураОтбора.Поле) = ВРег("ТорговыйОбъект") Тогда
			ТекстУсловий = ТекстУсловий + "КлассификаторОрганизацийЕГАИС."  + СтруктураОтбора.Поле + " = &Параметр_" + Сч;
		Иначе
			ТекстУсловий = ТекстУсловий + "НастройкиОбменаЕГАИС." + СтруктураОтбора.Поле + " = &Параметр_" + Сч;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Параметр_" + Сч, СтруктураОтбора.Значение);
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса + ТекстУсловий;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеМодуля = СтруктураНастроекОбмена();
		
		ЗаполнитьЗначенияСвойств(ДанныеМодуля, Выборка);
		
		Если ПустаяСтрока(ДанныеМодуля.Представление) Тогда
			ДанныеМодуля.Представление = Выборка.ИдентификаторФСРАР;
		КонецЕсли;
		
		ДанныеМодуля.ФорматОбмена = ИнтеграцияЕГАИСКлиентСервер.ФорматОбмена(Выборка.ФорматОбмена);
		ДанныеМодуля.Представление = СокрЛП(ДанныеМодуля.Представление) + ?(Выборка.ОбменНаСервере, " " + НСтр("ru = '(на сервере 1С:Предприятия)'"), "");
		
		ИнтеграцияЕГАИСПереопределяемый.ПриПолученииНастроекУТМ(ДанныеМодуля);
		
		Результат.Добавить(ДанныеМодуля);
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

// Возвращает пустую структуру данных настроек обмена.
//
Функция СтруктураНастроекОбмена()
	
	Результат = Новый Структура;
	
	Результат.Вставить("ОрганизацияЕГАИС");
	Результат.Вставить("ИНН");
	Результат.Вставить("КПП");
	Результат.Вставить("Представление");
	Результат.Вставить("Адрес");
	Результат.Вставить("ФорматОбмена");
	Результат.Вставить("Контрагент");
	Результат.Вставить("ТорговыйОбъект");
	Результат.Вставить("НаходитсяВСельскойМестности");
	Результат.Вставить("ИдентификаторФСРАР");
	Результат.Вставить("АдресУТМ");
	Результат.Вставить("ПортУТМ");
	Результат.Вставить("ОбменНаСервере");
	Результат.Вставить("ЗагружатьВходящиеДокументы");
	
	Возврат Результат;
	
КонецФункции

// Определяет, есть ли в базе контрагент с таким же набором ИНН/КПП.
//
// Параметры:
//  ИНН  - Строка - ИНН контрагента.
//  КПП  - Строка - КПП контрагента.
//  ИсключаяСсылку  - СправочникСсылка.Контрагенты - контрагент, который исключается при поиске.
//
// Возвращаемое значение:
//   Булево   - Истина, если упрощенный ввод доступен, и ложь в обратном случае.
//
Функция ИННКППУжеИспользуетсяВИнформационнойБазе(ИНН,КПП,ИсключаяСсылку = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|	И Контрагенты.КПП = &КПП
	|	И Контрагенты.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("ИНН",ИНН);
	Запрос.УстановитьПараметр("КПП",КПП);
	Запрос.УстановитьПараметр("Ссылка",ИсключаяСсылку);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

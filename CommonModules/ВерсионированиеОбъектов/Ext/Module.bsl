
Процедура МеханизмВерсионированияОбъектов_ПриЗаписиОбъекта(Источник, Отказ) Экспорт
	
	Перем ЧислоВерсийОбъекта;
	
	Если ОбъектВерсионируется(Источник, ЧислоВерсийОбъекта) Тогда
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ИмяВременногоФайла); 
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ЗаписатьXML(ЗаписьXML, Источник, НазначениеТипаXML.Явное);
		ЗаписьXML.Закрыть();
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
		ХранилищеДанных = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
		
		УдалитьФайлы(ИмяВременногоФайла);
		
		ВерсионированиеОбъектовПривилегированный.ЗаписатьВерсиюОбъекта(Источник.Ссылка, ЧислоВерсийОбъекта, ХранилищеДанных);
		
	КонецЕсли;
	
КонецПроцедуры

// Проверяет настройки версионирования по переданному объекту и
// и возвращает вариант версионирования. Если по объекту не настроено
// версионирование, то он версионируется в соответствии с правилами
// версионирования "по умолчанию".
//
Функция ОбъектВерсионируется(знач Источник, ЧислоВерсийОбъекта)
	
	// Проверяем, что подсистема версионирования включена
	Если глЗначениеПеременной("ИспользоватьВерсионированиеОбъектов") Тогда
		
		ВариантВерсионирования = ПолучитьВариантВерсионирования(Источник);
		
		ЧислоВерсийОбъекта = ВерсионированиеОбъектовПривилегированный.ПолучитьКоличествоВерсийОбъекта(Источник.Ссылка);
		
		ВерсионироватьОбъект = Истина;
		
		Если ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать Тогда
			ВерсионироватьОбъект = Ложь;
		ИначеЕсли ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении Тогда
			Если ЧислоВерсийОбъекта = 0 И НЕ Источник.Проведен Тогда
				ВерсионироватьОбъект = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		ВерсионироватьОбъект = Ложь;
	КонецЕсли;
	
	Возврат ВерсионироватьОбъект;
	
КонецФункции

Функция ПолучитьВариантВерсионирования(Источник)
	
	ИмяОбъекта = Источник.Метаданные().Имя;
	
	НастройкаВерсионирования = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьМенеджерЗаписи();
	НастройкаВерсионирования.ТипОбъекта = ИмяОбъекта;
	НастройкаВерсионирования.Прочитать();
	
	Если ЗначениеЗаполнено(НастройкаВерсионирования.Вариант) Тогда
		Возврат НастройкаВерсионирования.Вариант;
	Иначе
		Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Источник.Ссылка)) Тогда
			Возврат Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
		Иначе
			Возврат ?(ДокументПроводится(Источник.Метаданные().Имя),
			          Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении,
			          Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьВсегда);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Проверяет, что документу разрешено проведение
//
Функция ДокументПроводится(знач ИмяДокумента) Экспорт
	
	Возврат Метаданные.Документы[ИмяДокумента].Проведение = 
	            Метаданные.СвойстваОбъектов.Проведение.Разрешить;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Блок функций для работы с настройками значений

// Записывает настройку версионирования по объекту в регистр сведений
//
Процедура ЗаписатьНастройкуВерсионированияПоОбъекту(Объект, ВариантВерсионирования) Экспорт
	
	ВариантМВ = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьМенеджерЗаписи();
	ВариантМВ.ТипОбъекта = Объект;
	ВариантМВ.Вариант = ВариантВерсионирования;
	ВариантМВ.Записать();
	
КонецПроцедуры

// Получает настройку версионирования по объекту из регистра сведений
//
Функция ЗагрузитьНастройкуВерсионированияПоОбъекту(знач Объект) Экспорт
	
	ВариантМВ = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьМенеджерЗаписи();
	ВариантМВ.ТипОбъекта = Объект;
	ВариантМВ.Прочитать();
	
	Возврат ВариантМВ.Вариант;
	
КонецФункции


// Поддержка вызовов новой фуункциональности

Функция НайтиЗадания(Отбор) Экспорт
	
	Если Не РольДоступна("ПравоАдминистрирования")
		И Не РольДоступна("ПолныеПрава") Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа.'");
	КонецЕсли;
	
	КопияОтбора = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Отбор);
	СписокЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания(КопияОтбора);
	
	Возврат СписокЗаданий;
	
КонецФункции

// Изменяет задание с указанным идентификатором.
// В случае вызова в транзакции на задание устанавливается объектная блокировка.
// 
// Параметры: 
//  Идентификатор - СправочникСсылка.ОчередьЗаданий, СправочникСсылка.ОчередьЗаданийОбластейДанных - Идентификатор задания
//  Параметры     - Структура - Параметры, которые следует установить заданию, 
//   возможные ключи:
//   Использование
//   Параметры
//   Ключ
//   ИнтервалПовтораПриАварийномЗавершении.
//   Расписание
//   КоличествоПовторовПриАварийномЗавершении.
//   
//   В случае если задание создано на основе шаблона или предопределенное, могут быть указаны
//   только следующие ключи: Использование.
// 
Процедура ИзменитьЗадание(Знач Идентификатор, Знач Параметры) Экспорт
	
	Если Не РольДоступна("ПравоАдминистрирования")
		И Не РольДоступна("ПолныеПрава") Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа.'");
	КонецЕсли;
	
	ПараметрыЗадания = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Параметры);
	
	Если ТипЗнч(Идентификатор) = Тип("РегламентноеЗадание") Тогда
		Идентификатор = Идентификатор.УникальныйИдентификатор;
	КонецЕсли;
	
	Если ТипЗнч(Идентификатор) = Тип("Строка") Тогда
		Идентификатор = Новый УникальныйИдентификатор(Идентификатор);
	КонецЕсли;
	
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	Если Задание <> Неопределено Тогда
		
		Если ПараметрыЗадания.Свойство("Наименование") Тогда
			Задание.Наименование = ПараметрыЗадания.Наименование;
		КонецЕсли;
		
		Если ПараметрыЗадания.Свойство("Использование") Тогда
			Задание.Использование = ПараметрыЗадания.Использование;
		КонецЕсли;
		
		Если ПараметрыЗадания.Свойство("Ключ") Тогда
			Задание.Ключ = ПараметрыЗадания.Ключ;
		КонецЕсли;
		
		Если ПараметрыЗадания.Свойство("ИмяПользователя") Тогда
			Задание.ИмяПользователя = ПараметрыЗадания.ИмяПользователя;
		КонецЕсли;
		
		Если ПараметрыЗадания.Свойство("ИнтервалПовтораПриАварийномЗавершении") Тогда
			Задание.ИнтервалПовтораПриАварийномЗавершении = ПараметрыЗадания.ИнтервалПовтораПриАварийномЗавершении;
		КонецЕсли;
		
		Если ПараметрыЗадания.Свойство("КоличествоПовторовПриАварийномЗавершении") Тогда
			Задание.КоличествоПовторовПриАварийномЗавершении = ПараметрыЗадания.КоличествоПовторовПриАварийномЗавершении;
		КонецЕсли;
		
		Если ПараметрыЗадания.Свойство("Параметры") Тогда
			Задание.Параметры = ПараметрыЗадания.Параметры;
		КонецЕсли;
		
		Если ПараметрыЗадания.Свойство("Расписание") Тогда
			Задание.Расписание = ПараметрыЗадания.Расписание;
		КонецЕсли;
		
		Задание.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
//// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мВидOnline Экспорт;
Перем мВидOffline Экспорт;
Перем мВидФР Экспорт;
Перем мВидККТ Экспорт;
Перем мВидЭквайринговаяСистема Экспорт;
Перем мВалютаРеглУчета Экспорт;
Перем мСкладыВТабличнойЧасти Экспорт;

Перем мМассивЭС Экспорт;

// Функция осуществляет создание нового документа "Отчёт о розничных продажах".
//
// Возвращаемое значение:
//  <ДокументОбъект.ОтчетОРозничныхПродажах> - Созданный документ.
//
Функция СоздатьОтчетОРозничныхПродажах(Склад) Экспорт

	ДатаДокумента = КонецДня(Дата);
	ТекущаяДата   = ТекущаяДата();

	Если ДатаДокумента = КонецДня(ТекущаяДата) Тогда
		ДатаДокумента   = ТекущаяДата;
	КонецЕсли;

	Отчет             = Документы.ОтчетОРозничныхПродажах.СоздатьДокумент();
	Отчет.Дата        = ДатаДокумента;
	Отчет.Склад       = Склад;
	Отчет.КассаККМ    = КассаККМ;
	Отчет.Организация = КассаККМ.Владелец;

	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Отчет, "Продажа");
	Отчет.ПриИзмененииДоговораЭквайринга();

	Отчет.УчитыватьНДС     = Истина;
	Отчет.СуммаВключаетНДС = Истина;

	Возврат Отчет;

КонецФункции // СоздатьОтчетОРозничныхПродажах()

// Функция выполняет запись переданного документа. Возвращает флаг успешной записи.
//
// Параметры:
//  ОтчетОРозничныхПродажах - объект документа.
//
// Возвращаемое значение:
//  Булево. Истина, если запись выполнена успешно.
//
Функция ЗаписатьОтчетОРозничныхПродажах(ОтчетОРозничныхПродажах) Экспорт

	ОтчетОРозничныхПродажах.ДополнитьДокументЗначениямиПоУмолчанию();

	Попытка
		ОтчетОРозничныхПродажах.Записать(РежимЗаписиДокумента.Запись);
		Результат = Истина;
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не удалось записать документ """ + ОтчетОРозничныхПродажах + """."
		   + Символы.ПС + Символы.ПС + ОписаниеОшибки());
		Результат = Ложь;
	КонецПопытки;

	Возврат Результат;

КонецФункции // ЗаписатьОтчетОРозничныхПродажах()

// Функция осуществляет перенос информации из чеков ККМ в отчёт о розничных продажах.
//
Процедура ОбработкаЧековККМ(Склад, СозданныеДокументы = Неопределено) Экспорт

	Если КонецДня(Дата) = КонецДня(ТекущаяДата()) Тогда
		РежимПроведения = РежимПроведенияДокумента.Оперативный;
	Иначе
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;

	МассивДокументовКПроведению = Новый Массив;

	ОтчетОРозничныхПродажах = СоздатьОтчетОРозничныхПродажах(Склад);
	СоответствиеТарифов = УправлениеРозничнойТорговлей.СформироватьСоответствиеТарифовЭквайринг(ОтчетОРозничныхПродажах.ДоговорЭквайринга);

	ОтчетОРозничныхПродажах.Склад = Справочники.Склады.ПустаяСсылка();

	ЗапросПоЧекам = Новый Запрос;
	ЗапросПоЧекам.УстановитьПараметр("НачДата" , НачалоДня(Дата));
	ЗапросПоЧекам.УстановитьПараметр("КонДата" , КонецДня(Дата));
	ЗапросПоЧекам.УстановитьПараметр("КассаККМ", КассаККМ);

	ЗапросПоЧекам.Текст ="
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМ КАК Док
	|ГДЕ
	|	Док.Дата МЕЖДУ &НачДата И &КонДата
	|	И Док.КассаККМ = &КассаККМ
	|	И Док.Проведен
	|   И Не Док.Архивный
	|ДЛЯ ИЗМЕНЕНИЯ Документ.ЧекККМ
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМКоррекции КАК Док
	|ГДЕ
	|	Док.Дата МЕЖДУ &НачДата И &КонДата
	|	И Док.КассаККМ = &КассаККМ
	|	И Док.Проведен
	|   И Не Док.Архивный
	|ДЛЯ ИЗМЕНЕНИЯ Документ.ЧекККМКоррекции
	|";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачДата"           , НачалоДня(Дата));
	Запрос.УстановитьПараметр("КонДата"           , КонецДня(Дата));
	Запрос.УстановитьПараметр("КассаККМ"          , КассаККМ);
	Запрос.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВЫБОР
	|			КОГДА ДокументЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК КоличествоСерийныхНоменров,
	|	ДокументЧекККМ.Склад КАК Склад,
	|	ЧекККМТовары.Номенклатура КАК Номенклатура,
	|	ЧекККМСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ЧекККМТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЧекККМТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ЧекККМТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЧекККМТовары.Коэффициент КАК Коэффициент,
	|	ЧекККМТовары.Цена КАК Цена,
	|	ЧекККМТовары.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|	ЧекККМТовары.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	|	ЧекККМТовары.УсловиеАвтоматическойСкидки КАК УсловиеАвтоматическойСкидки,
	|	ЧекККМТовары.ЗначениеУсловияАвтоматическойСкидки КАК ЗначениеУсловияАвтоматическойСкидки
	|ИЗ
	|	Документ.ЧекККМ КАК ДокументЧекККМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ЧекККМТовары
	|		ПО (ЧекККМТовары.Ссылка = ДокументЧекККМ.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (СправочникНоменклатура.Ссылка = ЧекККМТовары.Номенклатура)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СерийныеНомера КАК ЧекККМСерийныеНомера
	|		ПО (ЧекККМСерийныеНомера.Ссылка = ДокументЧекККМ.Ссылка)
	|			И (ЧекККМСерийныеНомера.КлючСвязи = ЧекККМТовары.КлючСвязи)
	|ГДЕ
	|	ДокументЧекККМ.Дата МЕЖДУ &НачДата И &КонДата
	|	И ДокументЧекККМ.Проведен
	|	И НЕ ДокументЧекККМ.Архивный
	|	И ДокументЧекККМ.КассаККМ = &КассаККМ
	|	И НЕ СправочникНоменклатура.Комплект
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументЧекККМ.Склад,
	|	ЧекККМТовары.Номенклатура,
	|	ЧекККМСерийныеНомера.СерийныйНомер,
	|	ЧекККМТовары.ХарактеристикаНоменклатуры,
	|	ЧекККМТовары.СерияНоменклатуры,
	|	ЧекККМТовары.ЕдиницаИзмерения,
	|	ЧекККМТовары.Коэффициент,
	|	ЧекККМТовары.Цена,
	|	ЧекККМТовары.ПроцентСкидкиНаценки,
	|	ЧекККМТовары.ПроцентАвтоматическихСкидок,
	|	ЧекККМТовары.УсловиеАвтоматическойСкидки,
	|	ЧекККМТовары.ЗначениеУсловияАвтоматическойСкидки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ДокументЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ДокументЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ),
	|	ДокументЧекККМ.Склад,
	|	ЧекККМТовары.Номенклатура,
	|	ЧекККМСерийныеНомера.СерийныйНомер,
	|	ЧекККМТовары.ХарактеристикаНоменклатуры,
	|	ЧекККМТовары.СерияНоменклатуры,
	|	ЧекККМТовары.ЕдиницаИзмерения,
	|	ЧекККМТовары.Коэффициент,
	|	ЧекККМТовары.Цена,
	|	ЧекККМТовары.ПроцентСкидкиНаценки,
	|	ЧекККМТовары.ПроцентАвтоматическихСкидок,
	|	ЧекККМТовары.УсловиеАвтоматическойСкидки,
	|	ЧекККМТовары.ЗначениеУсловияАвтоматическойСкидки
	|ИЗ
	|	Документ.ЧекККМ КАК ДокументЧекККМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМКоррекции КАК ЧекККМКоррекции
	|		ПО (ЧекККМКоррекции.ЧекККМ = ДокументЧекККМ.Ссылка)
	|			И (ЧекККМКоррекции.КассаККМ = &КассаККМ)
	|			И (ЧекККМКоррекции.Проведен)
	|			И (НЕ ЧекККМКоррекции.Архивный)
	|			И (НЕ(ЧекККМКоррекции.Дата МЕЖДУ &НачДата И &КонДата))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ЧекККМТовары
	|		ПО (ЧекККМТовары.Ссылка = ДокументЧекККМ.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (СправочникНоменклатура.Ссылка = ЧекККМТовары.Номенклатура)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СерийныеНомера КАК ЧекККМСерийныеНомера
	|		ПО (ЧекККМСерийныеНомера.Ссылка = ДокументЧекККМ.Ссылка)
	|			И (ЧекККМСерийныеНомера.КлючСвязи = ЧекККМТовары.КлючСвязи)
	|ГДЕ
	|	(НЕ СправочникНоменклатура.Комплект)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументЧекККМ.Склад,
	|	ЧекККМТовары.Номенклатура,
	|	ЧекККМСерийныеНомера.СерийныйНомер,
	|	ЧекККМТовары.ХарактеристикаНоменклатуры,
	|	ЧекККМТовары.СерияНоменклатуры,
	|	ЧекККМТовары.ЕдиницаИзмерения,
	|	ЧекККМТовары.Коэффициент,
	|	ЧекККМТовары.Цена,
	|	ЧекККМТовары.ПроцентСкидкиНаценки,
	|	ЧекККМТовары.ПроцентАвтоматическихСкидок,
	|	ЧекККМТовары.УсловиеАвтоматическойСкидки,
	|	ЧекККМТовары.ЗначениеУсловияАвтоматическойСкидки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ДокументЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка) КАК Документ,
	|	ТоварыБезКомплектов.Комплект,
	|	ТоварыБезКомплектов.Склад,
	|	ТоварыБезКомплектов.Номенклатура,
	|	ТоварыБезКомплектов.Количество,
	|	ТоварыБезКомплектов.ХарактеристикаНоменклатуры,
	|	ТоварыБезКомплектов.СерияНоменклатуры,
	|	ТоварыБезКомплектов.ЕдиницаИзмерения,
	|	ТоварыБезКомплектов.Коэффициент,
	|	ТоварыБезКомплектов.Цена,
	|	ТоварыБезКомплектов.ПроцентСкидкиНаценки,
	|	ТоварыБезКомплектов.ПроцентАвтоматическихСкидок,
	|	ТоварыБезКомплектов.УсловиеАвтоматическойСкидки,
	|	ТоварыБезКомплектов.ЗначениеУсловияАвтоматическойСкидки,
	|	ТоварыБезКомплектов.Сумма,
	|	ПУСТАЯТАБЛИЦА.( КАК КлючСтроки,  КАК КлючСвязи,  КАК Номенклатура,  КАК ХарактеристикаНоменклатуры,  КАК СерияНоменклатуры,  КАК ЕдиницаИзмерения,  КАК Количество,  КАК Цена) КАК СоставНабора,
	|	ПУСТАЯТАБЛИЦА.( КАК КлючСвязи,  КАК СерийныйНомер) КАК СерийныеНомераСоставНабора,
	|	0 КАК КлючСтроки,
	|	0 КАК СуммаНДС,
	|	ТоварыБезКомплектов.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		Док.Номенклатура.Комплект КАК Комплект,
	|		Док.Ссылка.Склад КАК Склад,
	|		Док.Номенклатура КАК Номенклатура,
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.Количество
	|				ИНАЧЕ -Док.Количество
	|			КОНЕЦ) КАК Количество,
	|		Док.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры КАК СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Док.Коэффициент КАК Коэффициент,
	|		Док.Цена КАК Цена,
	|		Док.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		Док.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	|		Док.УсловиеАвтоматическойСкидки КАК УсловиеАвтоматическойСкидки,
	|		Док.ЗначениеУсловияАвтоматическойСкидки КАК ЗначениеУсловияАвтоматическойСкидки,
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.Сумма
	|				ИНАЧЕ -Док.Сумма
	|			КОНЕЦ) КАК Сумма
	|	ИЗ
	|		Документ.ЧекККМ.Товары КАК Док
	|	ГДЕ
	|		Док.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Док.Ссылка.КассаККМ = &КассаККМ
	|		И Док.Ссылка.Проведен
	|		И НЕ Док.Ссылка.Архивный
	|		И НЕ Док.Номенклатура.Комплект
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Док.Ссылка.Склад,
	|		Док.Номенклатура,
	|		Док.ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения,
	|		Док.Коэффициент,
	|		Док.Цена,
	|		Док.ПроцентСкидкиНаценки,
	|		Док.ПроцентАвтоматическихСкидок,
	|		Док.УсловиеАвтоматическойСкидки,
	|		Док.ЗначениеУсловияАвтоматическойСкидки,
	|		Док.Номенклатура.Комплект
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.Количество
	|				ИНАЧЕ -Док.Количество
	|			КОНЕЦ) <> 0) КАК ТоварыБезКомплектов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка,
	|	Док.Номенклатура.Комплект,
	|	Док.Ссылка.Склад,
	|	Док.Номенклатура,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА Док.Количество
	|		ИНАЧЕ -Док.Количество
	|	КОНЕЦ,
	|	Док.ХарактеристикаНоменклатуры,
	|	Док.СерияНоменклатуры,
	|	Док.ЕдиницаИзмерения,
	|	Док.Коэффициент,
	|	Док.Цена,
	|	Док.ПроцентСкидкиНаценки,
	|	Док.ПроцентАвтоматическихСкидок,
	|	Док.УсловиеАвтоматическойСкидки,
	|	Док.ЗначениеУсловияАвтоматическойСкидки,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ -Док.Сумма
	|	КОНЕЦ,
	|	Док.Ссылка.СоставНабора.(
	|		КлючСтроки,
	|		КлючСвязи,
	|		Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		СерияНоменклатуры,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Цена
	|	),
	|	Док.Ссылка.СерийныеНомераСоставНабора.(
	|		КлючСвязи,
	|		СерийныйНомер
	|	),
	|	Док.КлючСтроки,
	|	0 КАК СуммаНДС,
	|	Док.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И Док.Ссылка.КассаККМ = &КассаККМ
	|	И Док.Ссылка.Проведен
	|	И НЕ Док.Ссылка.Архивный
	|	И Док.Номенклатура.Комплект
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыБезКомплектов.Склад";

	ЗапросПоОплате = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Ссылка.Склад КАК Склад,
	|	Док.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	Док.ВидОплаты КАК ВидОплаты,
	|	СУММА(ВЫБОР КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа ТОГДА
	|		Док.Сумма
	|	ИНАЧЕ
	|		-Док.Сумма
	|	КОНЕЦ) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК Док
	|ГДЕ
	|	Док.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И Док.Ссылка.КассаККМ = &КассаККМ
	|	И Док.Ссылка.Проведен
	|	И НЕ Док.Ссылка.Архивный
	|	И Док.ВидОплаты.ТипОплаты <> &ТипОплатыНаличные
	|СГРУППИРОВАТЬ ПО
	|	Док.Ссылка.Склад,
	|	Док.Ссылка,
	|	Док.НомерСтроки,
	|	Док.ВидОплаты.ТипОплаты,
	|	Док.ВидОплаты
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ 
	|	Док.Ссылка.Склад КАК Склад,
	|	Док.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	Док.ВидОплаты КАК ВидОплаты,
	|	СУММА(ВЫБОР КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа ТОГДА
	|		-Док.Сумма
	|	ИНАЧЕ
	|		Док.Сумма
	|	КОНЕЦ) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ КАК ДокументЧекККМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМКоррекции КАК ЧекККМКоррекции
	|			ПО (ЧекККМКоррекции.ЧекККМ = ДокументЧекККМ.Ссылка)
	|			И (ЧекККМКоррекции.КассаККМ = &КассаККМ)
	|			И (ЧекККМКоррекции.Проведен)
	|			И (НЕ ЧекККМКоррекции.Архивный)
	|			И (ЧекККМКоррекции.Дата МЕЖДУ &НачДата И &КонДата)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Оплата КАК Док
	|			ПО (Док.Ссылка = ДокументЧекККМ.Ссылка)
	|ГДЕ
	|	Док.ВидОплаты.ТипОплаты <> &ТипОплатыНаличные
	|СГРУППИРОВАТЬ ПО
	|	Док.Ссылка.Склад,
	|	Док.Ссылка,
	|	Док.НомерСтроки,
	|	Док.ВидОплаты.ТипОплаты,
	|	Док.ВидОплаты
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ 
	|	Док.Ссылка.Склад КАК Склад,
	|	Док.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	Док.ВидОплаты КАК ВидОплаты,
	|	СУММА(ВЫБОР КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа ТОГДА
	|		Док.Сумма
	|	ИНАЧЕ
	|		-Док.Сумма
	|	КОНЕЦ) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМКоррекции.Оплата КАК Док
	|ГДЕ
	|	Док.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И Док.Ссылка.КассаККМ = &КассаККМ
	|	И Док.Ссылка.Проведен
	|	И НЕ Док.Ссылка.Архивный
	|	И Док.ВидОплаты.ТипОплаты <> &ТипОплатыНаличные
	|СГРУППИРОВАТЬ ПО
	|	Док.Ссылка.Склад,
	|	Док.Ссылка,
	|	Док.НомерСтроки,
	|	Док.ВидОплаты.ТипОплаты,
	|	Док.ВидОплаты
	|");

	ЗапросПоОплате.УстановитьПараметр("НачДата"           , НачалоДня(Дата));
	ЗапросПоОплате.УстановитьПараметр("КонДата"           , КонецДня(Дата));
	ЗапросПоОплате.УстановитьПараметр("КассаККМ"          , КассаККМ);
	ЗапросПоОплате.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	ЗапросПоОплате.УстановитьПараметр("ТипОплатыНаличные" , Перечисления.ТипыОплатЧекаККМ.Наличные);

	ЗапросПоДисконтнымКартам = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Склад КАК Склад,
	|	Док.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	Док.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	СУММА(ВЫБОР КОГДА Док.ВидОперации = &ВидОперацииПродажа ТОГДА
	|		Док.СуммаДокумента
	|	ИНАЧЕ
	|		-Док.СуммаДокумента
	|	КОНЕЦ) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ КАК Док
	|ГДЕ
	|	Док.Дата МЕЖДУ &НачДата И &КонДата
	|	И Док.КассаККМ = &КассаККМ
	|	И Док.ДисконтнаяКарта <> &ПустаяДисконтнаяКарта
	|	И Док.Проведен
	|	И НЕ Док.Архивный
	|СГРУППИРОВАТЬ ПО
	|	Док.Склад,
	|	Док.ДисконтнаяКарта,
	|	Док.ВладелецДисконтнойКарты
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР КОГДА Док.ВидОперации = &ВидОперацииПродажа ТОГДА
	|		Док.СуммаДокумента
	|	ИНАЧЕ
	|		-Док.СуммаДокумента
	|	КОНЕЦ) <> 0
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ 
	|	Док.Склад КАК Склад,
	|	Док.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	Док.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	СУММА(ВЫБОР КОГДА Док.ВидОперации = &ВидОперацииПродажа ТОГДА
	|		-Док.СуммаДокумента
	|	ИНАЧЕ
	|		Док.СуммаДокумента
	|	КОНЕЦ) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ КАК Док
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМКоррекции КАК ЧекККМКоррекции
	|			ПО (ЧекККМКоррекции.ЧекККМ = Док.Ссылка)
	|			И (ЧекККМКоррекции.КассаККМ = &КассаККМ)
	|			И (ЧекККМКоррекции.Проведен)
	|			И (НЕ ЧекККМКоррекции.Архивный)
	|			И (ЧекККМКоррекции.Дата МЕЖДУ &НачДата И &КонДата)
	|ГДЕ
	|	Док.ДисконтнаяКарта <> &ПустаяДисконтнаяКарта
	|СГРУППИРОВАТЬ ПО
	|	Док.Склад,
	|	Док.ДисконтнаяКарта,
	|	Док.ВладелецДисконтнойКарты
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР КОГДА Док.ВидОперации = &ВидОперацииПродажа ТОГДА
	|		-Док.СуммаДокумента
	|	ИНАЧЕ
	|		Док.СуммаДокумента
	|	КОНЕЦ) <> 0
	|");

	ЗапросПоДисконтнымКартам.УстановитьПараметр("НачДата"              , НачалоДня(Дата));
	ЗапросПоДисконтнымКартам.УстановитьПараметр("КонДата"              , КонецДня(Дата));
	ЗапросПоДисконтнымКартам.УстановитьПараметр("КассаККМ"             , КассаККМ);
	ЗапросПоДисконтнымКартам.УстановитьПараметр("ПустаяДисконтнаяКарта", Справочники.ИнформационныеКарты.ПустаяСсылка());
	ЗапросПоДисконтнымКартам.УстановитьПараметр("ВидОперацииПродажа"   , Перечисления.ВидыОперацийЧекККМ.Продажа);
	ЗапросПоДисконтнымКартам.УстановитьПараметр("ТипОплатыНаличные"    , Перечисления.ТипыОплатЧекаККМ.Наличные);

	ЗапросСторно = Новый Запрос;
	ЗапросСторно.УстановитьПараметр("НачДата"           , НачалоДня(Дата));
	ЗапросСторно.УстановитьПараметр("КонДата"           , КонецДня(Дата));
	ЗапросСторно.УстановитьПараметр("КассаККМ"          , КассаККМ);
	ЗапросСторно.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	ЗапросСторно.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка) КАК Документ,
	|	ТоварыБезКомплектов.Комплект,
	|	ТоварыБезКомплектов.Склад,
	|	ТоварыБезКомплектов.Номенклатура,
	|	ТоварыБезКомплектов.Количество,
	|	ТоварыБезКомплектов.ХарактеристикаНоменклатуры,
	|	ТоварыБезКомплектов.СерияНоменклатуры,
	|	ТоварыБезКомплектов.ЕдиницаИзмерения,
	|	ТоварыБезКомплектов.Коэффициент,
	|	ТоварыБезКомплектов.Цена,
	|	ТоварыБезКомплектов.ПроцентСкидкиНаценки,
	|	ТоварыБезКомплектов.ПроцентАвтоматическихСкидок,
	|	ТоварыБезКомплектов.УсловиеАвтоматическойСкидки,
	|	ТоварыБезКомплектов.ЗначениеУсловияАвтоматическойСкидки,
	|	ТоварыБезКомплектов.Сумма,
	|	ПУСТАЯТАБЛИЦА.( КАК КлючСтроки,  КАК КлючСвязи,  КАК Номенклатура,  КАК ХарактеристикаНоменклатуры,  КАК СерияНоменклатуры,  КАК ЕдиницаИзмерения,  КАК Количество,  КАК Цена) КАК СоставНабора,
	|	ПУСТАЯТАБЛИЦА.( КАК КлючСвязи,  КАК СерийныйНомер) КАК СерийныеНомераСоставНабора,
	|	0 КАК КлючСтроки,
	|	0 КАК СуммаНДС,
	|	ТоварыБезКомплектов.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		Док.Номенклатура.Комплект КАК Комплект,
	|		Док.Ссылка.Склад КАК Склад,
	|		Док.Номенклатура КАК Номенклатура,
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА -Док.Количество
	|				ИНАЧЕ Док.Количество
	|			КОНЕЦ) КАК Количество,
	|		Док.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры КАК СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Док.Коэффициент КАК Коэффициент,
	|		Док.Цена КАК Цена,
	|		Док.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		Док.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	|		Док.УсловиеАвтоматическойСкидки КАК УсловиеАвтоматическойСкидки,
	|		Док.ЗначениеУсловияАвтоматическойСкидки КАК ЗначениеУсловияАвтоматическойСкидки,
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА -Док.Сумма
	|				ИНАЧЕ Док.Сумма
	|			КОНЕЦ) КАК Сумма
	|	ИЗ
	|	    Документ.ЧекККМ КАК ДокументЧекККМ
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМКоррекции КАК ЧекККМКоррекции
	|				ПО (ЧекККМКоррекции.ЧекККМ = ДокументЧекККМ.Ссылка)
	|				И (ЧекККМКоррекции.КассаККМ = &КассаККМ)
	|				И (ЧекККМКоррекции.Проведен)
	|				И (НЕ ЧекККМКоррекции.Архивный)
	|				И (ЧекККМКоррекции.Дата МЕЖДУ &НачДата И &КонДата)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК Док
	|				ПО (Док.Ссылка = ДокументЧекККМ.Ссылка)
	|	ГДЕ
	|		НЕ Док.Номенклатура.Комплект
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Док.Ссылка.Склад,
	|		Док.Номенклатура,
	|		Док.ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения,
	|		Док.Коэффициент,
	|		Док.Цена,
	|		Док.ПроцентСкидкиНаценки,
	|		Док.ПроцентАвтоматическихСкидок,
	|		Док.УсловиеАвтоматическойСкидки,
	|		Док.ЗначениеУсловияАвтоматическойСкидки,
	|		Док.Номенклатура.Комплект
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.Количество
	|				ИНАЧЕ -Док.Количество
	|			КОНЕЦ) <> 0) КАК ТоварыБезКомплектов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка,
	|	Док.Номенклатура.Комплект,
	|	Док.Ссылка.Склад,
	|	Док.Номенклатура,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА -Док.Количество
	|		ИНАЧЕ Док.Количество
	|	КОНЕЦ,
	|	Док.ХарактеристикаНоменклатуры,
	|	Док.СерияНоменклатуры,
	|	Док.ЕдиницаИзмерения,
	|	Док.Коэффициент,
	|	Док.Цена,
	|	Док.ПроцентСкидкиНаценки,
	|	Док.ПроцентАвтоматическихСкидок,
	|	Док.УсловиеАвтоматическойСкидки,
	|	Док.ЗначениеУсловияАвтоматическойСкидки,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА -Док.Сумма
	|		ИНАЧЕ Док.Сумма
	|	КОНЕЦ,
	|	Док.Ссылка.СоставНабора.(
	|		КлючСтроки,
	|		КлючСвязи,
	|		Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		СерияНоменклатуры,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Цена
	|	),
	|	Док.Ссылка.СерийныеНомераСоставНабора.(
	|		КлючСвязи,
	|		СерийныйНомер
	|	),
	|	Док.КлючСтроки,
	|	0 КАК СуммаНДС,
	|	Док.Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	Документ.ЧекККМ КАК ДокументЧекККМ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМКоррекции КАК ЧекККМКоррекции
	|			ПО (ЧекККМКоррекции.ЧекККМ = ДокументЧекККМ.Ссылка)
	|			И (ЧекККМКоррекции.КассаККМ = &КассаККМ)
	|			И (ЧекККМКоррекции.Проведен)
	|			И (НЕ ЧекККМКоррекции.Архивный)
	|			И (ЧекККМКоррекции.Дата МЕЖДУ &НачДата И &КонДата)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК Док
	|			ПО (Док.Ссылка = ДокументЧекККМ.Ссылка)
	|ГДЕ
	|	Док.Номенклатура.Комплект
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыБезКомплектов.Склад";
	ЗапросКоррекции = Новый Запрос;
	ЗапросКоррекции.УстановитьПараметр("НачДата"           , НачалоДня(Дата));
	ЗапросКоррекции.УстановитьПараметр("КонДата"           , КонецДня(Дата));
	ЗапросКоррекции.УстановитьПараметр("КассаККМ"          , КассаККМ);
	ЗапросКоррекции.УстановитьПараметр("ВидОперацииПродажа", Перечисления.ВидыОперацийЧекККМ.Продажа);
	ЗапросКоррекции.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка) КАК Документ,
	|	ТоварыБезКомплектов.Комплект,
	|	ТоварыБезКомплектов.Склад,
	|	ТоварыБезКомплектов.Номенклатура,
	|	ТоварыБезКомплектов.Количество,
	|	ТоварыБезКомплектов.ХарактеристикаНоменклатуры,
	|	ТоварыБезКомплектов.СерияНоменклатуры,
	|	ТоварыБезКомплектов.ЕдиницаИзмерения,
	|	ТоварыБезКомплектов.Коэффициент,
	|	ТоварыБезКомплектов.Цена,
	|	ТоварыБезКомплектов.ПроцентСкидкиНаценки,
	|	ТоварыБезКомплектов.ПроцентАвтоматическихСкидок,
	|	ТоварыБезКомплектов.УсловиеАвтоматическойСкидки,
	|	ТоварыБезКомплектов.ЗначениеУсловияАвтоматическойСкидки,
	|	ТоварыБезКомплектов.Сумма,
	|	ПУСТАЯТАБЛИЦА.( КАК КлючСтроки,  КАК КлючСвязи,  КАК Номенклатура,  КАК ХарактеристикаНоменклатуры,  КАК СерияНоменклатуры,  КАК ЕдиницаИзмерения,  КАК Количество,  КАК Цена) КАК СоставНабора,
	|	ПУСТАЯТАБЛИЦА.( КАК КлючСвязи,  КАК СерийныйНомер) КАК СерийныеНомераСоставНабора,
	|	0 КАК КлючСтроки,
	|	ТоварыБезКомплектов.СуммаНДС КАК СуммаНДС,
	|	ТоварыБезКомплектов.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		Док.Номенклатура.Комплект КАК Комплект,
	|		Док.Ссылка.Склад КАК Склад,
	|		Док.Номенклатура КАК Номенклатура,
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.Количество
	|				ИНАЧЕ -Док.Количество
	|			КОНЕЦ) КАК Количество,
	|		Док.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры КАК СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Док.Коэффициент КАК Коэффициент,
	|		Док.Цена КАК Цена,
	|		Док.ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		Док.ПроцентАвтоматическихСкидок КАК ПроцентАвтоматическихСкидок,
	|		Док.УсловиеАвтоматическойСкидки КАК УсловиеАвтоматическойСкидки,
	|		Док.ЗначениеУсловияАвтоматическойСкидки КАК ЗначениеУсловияАвтоматическойСкидки,
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.Сумма
	|				ИНАЧЕ -Док.Сумма
	|			КОНЕЦ) КАК Сумма,
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.СуммаНДС
	|				ИНАЧЕ -Док.СуммаНДС
	|			КОНЕЦ) КАК СуммаНДС,
	|		Док.СтавкаНДС КАК СтавкаНДС
	|	ИЗ
	|		Документ.ЧекККМКоррекции.Товары КАК Док
	|	ГДЕ
	|		Док.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|		И Док.Ссылка.КассаККМ = &КассаККМ
	|		И Док.Ссылка.Проведен
	|		И НЕ Док.Ссылка.Архивный
	|		И НЕ Док.Номенклатура.Комплект
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Док.Ссылка.Склад,
	|		Док.Номенклатура,
	|		Док.ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения,
	|		Док.Коэффициент,
	|		Док.Цена,
	|		Док.ПроцентСкидкиНаценки,
	|		Док.ПроцентАвтоматическихСкидок,
	|		Док.УсловиеАвтоматическойСкидки,
	|		Док.ЗначениеУсловияАвтоматическойСкидки,
	|		Док.Номенклатура.Комплект,
	|	    Док.СтавкаНДС
	|	
	|	ИМЕЮЩИЕ
	|		СУММА(ВЫБОР
	|				КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|					ТОГДА Док.Количество
	|				ИНАЧЕ -Док.Количество
	|			КОНЕЦ) <> 0) КАК ТоварыБезКомплектов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Ссылка,
	|	Док.Номенклатура.Комплект,
	|	Док.Ссылка.Склад,
	|	Док.Номенклатура,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА Док.Количество
	|		ИНАЧЕ -Док.Количество
	|	КОНЕЦ,
	|	Док.ХарактеристикаНоменклатуры,
	|	Док.СерияНоменклатуры,
	|	Док.ЕдиницаИзмерения,
	|	Док.Коэффициент,
	|	Док.Цена,
	|	Док.ПроцентСкидкиНаценки,
	|	Док.ПроцентАвтоматическихСкидок,
	|	Док.УсловиеАвтоматическойСкидки,
	|	Док.ЗначениеУсловияАвтоматическойСкидки,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА Док.Сумма
	|		ИНАЧЕ -Док.Сумма
	|	КОНЕЦ,
	|	Док.Ссылка.СоставНабора.(
	|		КлючСтроки,
	|		КлючСвязи,
	|		Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		СерияНоменклатуры,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Цена
	|	),
	|	Док.Ссылка.ЧекККМ.СерийныеНомераСоставНабора.(
	|		КлючСвязи,
	|		СерийныйНомер
	|	),
	|	Док.КлючСтроки,
	|	ВЫБОР
	|		КОГДА Док.Ссылка.ЧекККМ.ВидОперации = &ВидОперацииПродажа
	|			ТОГДА Док.СуммаНДС
	|		ИНАЧЕ -Док.СуммаНДС
	|	КОНЕЦ,
	|	Док.СтавкаНДС
	|ИЗ
	|	Документ.ЧекККМКоррекции.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И Док.Ссылка.КассаККМ = &КассаККМ
	|	И Док.Ссылка.Проведен
	|	И НЕ Док.Ссылка.Архивный
	|	И Док.Номенклатура.Комплект
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыБезКомплектов.Склад";
	ОтменитьТранзакцию = Ложь;
	НачатьТранзакцию();

	РезультатЗапросаПоЧекам = ЗапросПоЧекам.Выполнить();
	РезультатЗапросаПоСторно= ЗапросСторно.Выполнить();
	РезультатЗапросаПоКорррекции = ЗапросКоррекции.Выполнить();
	РезультатыЗапросов = Запрос.ВыполнитьПакет();
	РезультатЗапроса = РезультатыЗапросов[1];
	//РезультатыЗапросов массив из двух элементов
	//РезультатЗапроса[0] - все серийные номера на номенклатуру
	//РезультатЗапроса[1] - Основной запрос
	РезультатЗапросаПоОплате = ЗапросПоОплате.Выполнить();
	ТаблицаПоДисконтнымКартам = ЗапросПоДисконтнымКартам.Выполнить().Выгрузить();
	ТаблицаПоДисконтнымКартам.Индексы.Добавить("Склад");
	ТаблицаСерийныеНомераНоменклатуры = РезультатыЗапросов[0].Выгрузить();
	
	ТаблицаОплатПлатежныеКарты = ОбщегоНазначения.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
	   Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта)).Выгрузить();
	ТаблицаОплатПлатежныеКарты.Индексы.Добавить("Склад");

	ТаблицаОплатБанковскиеКредиты = ОбщегоНазначения.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
	   Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.БанковскийКредит)).Выгрузить();
	ТаблицаОплатБанковскиеКредиты.Индексы.Добавить("Склад");

	ТаблицаСерийныеНомераКомплект              = Неопределено;     // Таблица в которую будут выгружены серийные номера на комплектующие набора-комплекта
	СтруктураПоискаСерийногоНомера             = Новый Структура();// Набор полей для поиска серийного номера на комплектующее набора-комплекта
	СтруктураПоискаСерийногоНомераНоменклатура = Новый Структура();// Набор полей для поиска серийного номера на номенклатуру
	СтруктураПоляЗаполнения                    = Новый Структура();// Содержит поля которые нужно обновить в документе "Отчет о розничных продажах"
	//СтруктураПоляЗаполнения содержит поля которые нужно обновить.
	//Ключ структуры содержит имя поля
	//Значение структуры = "Истина" поле участвует в отборе по таблице с серийными номерами
	//                   = "Ложь" поле не участвует в отборе по таблице с серийными номерами
	СтруктураПоляЗаполнения.Вставить("Склад"                              , Истина);
	СтруктураПоляЗаполнения.Вставить("Номенклатура"                       , Истина);
	СтруктураПоляЗаполнения.Вставить("ЕдиницаИзмерения"                   , Истина);
	СтруктураПоляЗаполнения.Вставить("Коэффициент"                        , Истина);
	СтруктураПоляЗаполнения.Вставить("ХарактеристикаНоменклатуры"         , Истина);
	СтруктураПоляЗаполнения.Вставить("СерияНоменклатуры"                  , Истина);
	СтруктураПоляЗаполнения.Вставить("Количество"                         , Ложь);
	СтруктураПоляЗаполнения.Вставить("Цена"                               , Истина);
	СтруктураПоляЗаполнения.Вставить("ПроцентСкидкиНаценки"               , Истина);
	СтруктураПоляЗаполнения.Вставить("ПроцентАвтоматическихСкидок"        , Истина);
	СтруктураПоляЗаполнения.Вставить("УсловиеАвтоматическойСкидки"        , Истина);
	СтруктураПоляЗаполнения.Вставить("ЗначениеУсловияАвтоматическойСкидки", Истина);
	СтруктураПоляЗаполнения.Вставить("Сумма"                              , Ложь);
	СтрокаПолейИндекса = "";
	Для Каждого ИмяПоля Из СтруктураПоляЗаполнения Цикл
		Если ИмяПоля.Значение Тогда
			СтрокаПолейИндекса = СтрокаПолейИндекса + ИмяПоля.Ключ + ",";
		КонецЕсли;
	КонецЦикла;
	ТаблицаСерийныеНомераНоменклатуры.Индексы.Добавить(Сред(СтрокаПолейИндекса, 0,СтрДлина(СтрокаПолейИндекса) - 1));

	ПараметрыСвязиСтрокТЧ = Новый Соответствие;
	ПараметрыСвязиСтрокТЧ.Вставить("Товары", Новый Структура("СвободныйКлюч, ФлагМодификации", Неопределено, Ложь));
	ПараметрыСвязиСтрокТЧ.Вставить("СоставНабора", Новый Структура("СвободныйКлюч, ФлагМодификации", Неопределено, Ложь));
	ДокументЧекККМ = Неопределено;

	Если РезультатЗапроса.Пустой() и РезультатЗапросаПоЧекам.Пустой() И РезультатЗапросаПоСторно.Пустой() И РезультатЗапросаПоКорррекции.Пустой() Тогда
		ТекстСообщения = "За кассовую смену не продано ни одного товара по выбранной кассе ККМ.";
		ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения);
		ОтменитьТранзакцию = Истина;
		ОтменитьТранзакцию();
	Иначе
		ТаблицаЧеков = РезультатЗапроса.Выгрузить();
		ТаблицаСторно = РезультатЗапросаПоСторно.Выгрузить();
		
		Для Каждого СтрокаСторно Из ТаблицаСторно Цикл
			НовСтрока = ТаблицаЧеков.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, СтрокаСторно);
		КонецЦикла;
		
		ТаблицаКоррекции = РезультатЗапросаПоКорррекции.Выгрузить();
		
		Для Каждого СтрокаКоррекции Из ТаблицаКоррекции Цикл
			НовСтрока = ТаблицаЧеков.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, СтрокаКоррекции);
		КонецЦикла;
		
		ТаблицаЧеков.Сортировать("Склад");
		
		Для Каждого Выборка Из ТаблицаЧеков Цикл
			Если Выборка.Комплект И НЕ Выборка.Документ = ДокументЧекККМ Тогда
				ДокументЧекККМ = Выборка.Документ;
				ТаблицаСерийныеНомераКомплект = Выборка.СерийныеНомераСоставНабора.Выгрузить();
				ТаблицаСерийныеНомераКомплект.Индексы.Добавить("КлючСвязи");
			КонецЕсли;
			Если Не мСкладыВТабличнойЧасти Тогда
				Если НЕ ЗначениеЗаполнено(ОтчетОРозничныхПродажах.Склад) Тогда
					ОтчетОРозничныхПродажах.Склад = Выборка.Склад;
				Иначе
					Если ОтчетОРозничныхПродажах.Склад <> Выборка.Склад Тогда // надо создавать новый документ
						Если Не ОтменитьТранзакцию Тогда
							СтруктураПоиска = Новый Структура;
							СтруктураПоиска.Вставить("Склад", ОтчетОРозничныхПродажах.Склад);

							МассивОплат = ТаблицаОплатПлатежныеКарты.НайтиСтроки(СтруктураПоиска);
							Для Каждого Оплата Из МассивОплат Цикл
								НоваяСтрока = ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами.Добавить();
								НоваяСтрока.ВидОплаты = Оплата.ВидОплаты;
								НоваяСтрока.Сумма = Оплата.Сумма;
								НоваяСтрока.ПроцентТорговойУступки = СоответствиеТарифов[НоваяСтрока.ВидОплаты];
								ОтчетОРозничныхПродажах.ПересчитатьТорговуюУступку(НоваяСтрока);

								ТаблицаОплатПлатежныеКарты.Удалить(Оплата);
							КонецЦикла;

							МассивОплат = ТаблицаОплатБанковскиеКредиты.НайтиСтроки(СтруктураПоиска);
							Для Каждого Оплата Из МассивОплат Цикл
								НоваяСтрока = ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами.Добавить();
								НоваяСтрока.ВидОплаты = Оплата.ВидОплаты;
								НоваяСтрока.Сумма = Оплата.Сумма;
								ОтчетОРозничныхПродажах.ПриИзмененииВидаОплатыБанковскимКредитом(НоваяСтрока);

								ТаблицаОплатБанковскиеКредиты.Удалить(Оплата);
							КонецЦикла;

							МассивДисконтныхКарт = ТаблицаПоДисконтнымКартам.НайтиСтроки(СтруктураПоиска);
							Для Каждого ПродажаПоДисконтнойКарте Из МассивДисконтныхКарт Цикл
								НоваяСтрока = ОтчетОРозничныхПродажах.ПродажиПоДисконтнымКартам.Добавить();
								НоваяСтрока.ДисконтнаяКарта = ПродажаПоДисконтнойКарте.ДисконтнаяКарта;
								НоваяСтрока.ВладелецДисконтнойКарты = ПродажаПоДисконтнойКарте.ВладелецДисконтнойКарты;
								НоваяСтрока.Сумма = ПродажаПоДисконтнойКарте.Сумма;

								ТаблицаПоДисконтнымКартам.Удалить(ПродажаПоДисконтнойКарте);
							КонецЦикла;

							Если ЗаписатьОтчетОРозничныхПродажах(ОтчетОРозничныхПродажах) Тогда
								МассивДокументовКПроведению.Добавить(ОтчетОРозничныхПродажах);
							Иначе
								ОтменитьТранзакцию = Истина;
								Прервать;
							КонецЕсли;
						КонецЕсли;

						ОтчетОРозничныхПродажах = СоздатьОтчетОРозничныхПродажах(Склад);
						СоответствиеТарифов = УправлениеРозничнойТорговлей.СформироватьСоответствиеТарифовЭквайринг(ОтчетОРозничныхПродажах.ДоговорЭквайринга);

						ОтчетОРозничныхПродажах.Склад = Выборка.Склад;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.Товары.Добавить();

			Если Выборка.Комплект Тогда
				СтрокаТабличнойЧасти.КлючСтроки = УправлениеЗапасами.ПолучитьНовыйКлючСтроки(ОтчетОРозничныхПродажах);
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка,
				"Номенклатура, ЕдиницаИзмерения, Коэффициент, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество, Цена, ПроцентСкидкиНаценки, ПроцентАвтоматическихСкидок, УсловиеАвтоматическойСкидки, ЗначениеУсловияАвтоматическойСкидки, Сумма");
				ВыборкаКомплектующих = Выборка.СоставНабора.Выбрать();
				Пока ВыборкаКомплектующих.Следующий() Цикл
					Если ВыборкаКомплектующих.КлючСтроки = Выборка.КлючСтроки Тогда
						СтрокаСоставаНабора = ОтчетОРозничныхПродажах.СоставНабора.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСоставаНабора, ВыборкаКомплектующих,
						   "Номенклатура, ЕдиницаИзмерения, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество, Цена");
						СтрокаСоставаНабора.КлючСтроки = СтрокаТабличнойЧасти.КлючСтроки;
						Если НЕ ВыборкаКомплектующих.КлючСвязи = 0 Тогда
							СтруктураПоискаСерийногоНомера.Вставить("КлючСвязи", ВыборкаКомплектующих.КлючСвязи);
							массивСтрок = ТаблицаСерийныеНомераКомплект.НайтиСтроки(СтруктураПоискаСерийногоНомера);
							КлючСвязи = УчетСерийныхНомеров.ПолучитьНовыйКлючСвязи(ПараметрыСвязиСтрокТЧ, ОтчетОРозничныхПродажах, "СоставНабора", Истина);
							СтрокаСоставаНабора.КлючСвязи      = КлючСвязи;
							Для Каждого СтрокаСерийногоНомераЧекККМ Из массивСтрок Цикл
								СтрокаСерийногоНомера               = ОтчетОРозничныхПродажах.СерийныеНомераСоставНабора.Добавить();
								СтрокаСерийногоНомера.СерийныйНомер = СтрокаСерийногоНомераЧекККМ.СерийныйНомер;
								СтрокаСерийногоНомера.КлючСвязи     = КлючСвязи;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			Иначе
				Для Каждого ПолеЗаполнения Из СтруктураПоляЗаполнения Цикл
					СтрокаТабличнойЧасти[ПолеЗаполнения.Ключ] = Выборка[ПолеЗаполнения.Ключ];
					Если ПолеЗаполнения.Значение Тогда
						СтруктураПоискаСерийногоНомераНоменклатура.Вставить(ПолеЗаполнения.Ключ, Выборка[ПолеЗаполнения.Ключ]);
					КонецЕсли;
				КонецЦикла;
				массивСтрок = ТаблицаСерийныеНомераНоменклатуры.НайтиСтроки(СтруктураПоискаСерийногоНомераНоменклатура);
				Если массивСтрок.Количество() > 0 Тогда
					КлючСвязи = УчетСерийныхНомеров.ПолучитьНовыйКлючСвязи(ПараметрыСвязиСтрокТЧ, ОтчетОРозничныхПродажах, "Товары", Истина);
					СтрокаТабличнойЧасти.КлючСвязи      = КлючСвязи;
					Для Каждого СтрокаСерийногоНомераЧекККМ Из массивСтрок Цикл
						Для х = 1 По СтрокаСерийногоНомераЧекККМ.КоличествоСерийныхНоменров Цикл
							СтрокаСерийногоНомера               = ОтчетОРозничныхПродажах.СерийныеНомера.Добавить();
							СтрокаСерийногоНомера.СерийныйНомер = СтрокаСерийногоНомераЧекККМ.СерийныйНомер;
							СтрокаСерийногоНомера.КлючСвязи     = КлючСвязи;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;

			Если Выборка.СуммаНДС <> 0 Тогда
				СтрокаТабличнойЧасти.СтавкаНДС = Выборка.СтавкаНДС;
				СтрокаТабличнойЧасти.СуммаНДС = Выборка.СуммаНДС;
			КонецЕсли;
			
			Если мСкладыВТабличнойЧасти Тогда
				СтрокаТабличнойЧасти.Склад = Выборка.Склад;
			КонецЕсли;
		КонецЦикла;

		// Удаляем или архивируем чеки.
		Если Не ОтменитьТранзакцию Тогда
			Попытка
				МассивЧековККМ = РезультатЗапросаПоЧекам.Выгрузить().ВыгрузитьКолонку("Ссылка");
				Если КассаККМ.АрхивироватьЧеки Тогда
					ВыполнитьПроверкуПравДоступа("Изменение", Метаданные.Документы.ЧекККМ);
					ПривилегированныйРежим = ПривилегированныйРежим();
					Если НЕ ПривилегированныйРежим Тогда
						УстановитьПривилегированныйРежим(Истина);
					КонецЕсли;
					Для Каждого ЧекККМ Из МассивЧековККМ Цикл
						ЧекККМОбъект = ЧекККМ.ПолучитьОбъект();
						ЧекККМОбъект.Архивный = Истина;
						ЧекККМОбъект.Записать(РежимЗаписиДокумента.Проведение);
					КонецЦикла;
					УстановитьПривилегированныйРежим(ПривилегированныйРежим);
				Иначе
					ОбщегоНазначенияСервер.ВыполнитьУдалениеОбъектов(МассивЧековККМ, Ложь);
				КонецЕсли;
			Исключение
				ОтменитьТранзакцию = Истина;
				ОбщегоНазначения.СообщитьОбОшибке("Не удалось обработать чеки ККМ!");
			КонецПопытки;
		КонецЕсли;

		// Записываем ОтчетОРозничныхПродажах.
		Если Не ОтменитьТранзакцию И ОтчетОРозничныхПродажах.Товары.Количество() > 0 Тогда
			Для Каждого Оплата Из ТаблицаОплатПлатежныеКарты Цикл
				НоваяСтрока = ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами.Добавить();
				НоваяСтрока.ВидОплаты = Оплата.ВидОплаты;
				НоваяСтрока.Сумма = Оплата.Сумма;
				НоваяСтрока.ПроцентТорговойУступки = СоответствиеТарифов[НоваяСтрока.ВидОплаты];
				ОтчетОРозничныхПродажах.ПересчитатьТорговуюУступку(НоваяСтрока);
			КонецЦикла;

			Для Каждого Оплата Из ТаблицаОплатБанковскиеКредиты Цикл
				НоваяСтрока = ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами.Добавить();
				НоваяСтрока.ВидОплаты = Оплата.ВидОплаты;
				НоваяСтрока.Сумма = Оплата.Сумма;
				ОтчетОРозничныхПродажах.ПриИзмененииВидаОплатыБанковскимКредитом(НоваяСтрока);
			КонецЦикла;

			Для Каждого ПродажаПоДисконтнойКарте Из ТаблицаПоДисконтнымКартам Цикл
				НоваяСтрока = ОтчетОРозничныхПродажах.ПродажиПоДисконтнымКартам.Добавить();
				НоваяСтрока.ДисконтнаяКарта = ПродажаПоДисконтнойКарте.ДисконтнаяКарта;
				НоваяСтрока.ВладелецДисконтнойКарты = ПродажаПоДисконтнойКарте.ВладелецДисконтнойКарты;
				НоваяСтрока.Сумма = ПродажаПоДисконтнойКарте.Сумма;
			КонецЦикла;

			Если ЗаписатьОтчетОРозничныхПродажах(ОтчетОРозничныхПродажах) Тогда
				МассивДокументовКПроведению.Добавить(ОтчетОРозничныхПродажах);
			Иначе
				ОтменитьТранзакцию = Истина;
			КонецЕсли;
		КонецЕсли;

		Если ОтменитьТранзакцию Тогда
			ОтменитьТранзакцию();
		Иначе
			ЗафиксироватьТранзакцию();
			Для Каждого ДокументКПроведению Из МассивДокументовКПроведению Цикл
				Попытка
					ДокументКПроведению.Записать(РежимЗаписиДокумента.Проведение, РежимПроведения);
				Исключение
					ОбщегоНазначения.СообщитьОбОшибке("Не удалось провести документ """ + ДокументКПроведению + """.");
				КонецПопытки;
				Если СозданныеДокументы = Неопределено Тогда
					ДокументКПроведению.ПолучитьФорму().Открыть();
				Иначе
					СозданныеДокументы.Добавить(ДокументКПроведению.Ссылка);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ОбработкаЧековККМ()

///////////////////////////////////////////////////////////////////////////////
//// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мВидOnline               = Перечисления.ВидыТорговогоОборудования.ККМOnLine;
мВидOffline              = Перечисления.ВидыТорговогоОборудования.ККМOffLine;
мВидФР                   = Перечисления.ВидыТорговогоОборудования.ФискальныйРегистратор;
мВидККТ                  = Перечисления.ВидыТорговогоОборудования.ККТ;
мВидЭквайринговаяСистема = Перечисления.ВидыТорговогоОборудования.ЭквайринговаяСистема;
мВалютаРеглУчета         = глЗначениеПеременной("ВалютаРегламентированногоУчета");
УказаниеСкладов          = Константы.УказаниеСкладовВТабличнойЧастиДокументов.Получить();
мСкладыВТабличнойЧасти   = (УказаниеСкладов = Перечисления.ВариантыУказанияСкладовВТабличнойЧастиДокументов.ДляДокументовПоступленияРеализации
                        Или УказаниеСкладов = Перечисления.ВариантыУказанияСкладовВТабличнойЧастиДокументов.ДляДокументовРеализации);

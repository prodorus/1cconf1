
Функция ОбработатьПланируемыеДоходы(ПланируемыеДоходы)
	
	Результат = ПланируемыеДоходы.СкопироватьКолонки("КонтрактСЗаказчиком, Дата, Комментарий, ДоходПлан");
	КонтрактыСЗаказчиками = ПланируемыеДоходы.Скопировать(, "КонтрактСЗаказчиком");
	КонтрактыСЗаказчиками.Свернуть("КонтрактСЗаказчиком");
	ПланируемыеДоходы.Индексы.Добавить("КонтрактСЗаказчиком");
	
	Для Каждого СтрокаКонтракта из КонтрактыСЗаказчиками Цикл
		НайденныеСтроки = ПланируемыеДоходы.НайтиСтроки(Новый Структура("КонтрактСЗаказчиком", СтрокаКонтракта.КонтрактСЗаказчиком));
		
		СтрокаДоходов = Неопределено;
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если ЗначениеЗаполнено(НайденнаяСтрока.ДоходФакт) Тогда
				СтрокаДоходов = НайденнаяСтрока;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		СуммаДоходов = НайденнаяСтрока.ДоходФакт;
		СуммаДоходов = ?(ЗначениеЗаполнено(СуммаДоходов), СуммаДоходов, 0);
		НайденныеСтроки.Удалить(НайденныеСтроки.Найти(НайденнаяСтрока));
		
		Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если Не ЗначениеЗаполнено(НайденнаяСтрока.ДоходПлан) Тогда
				НайденнаяСтрока.ДоходПлан = 0;
			КонецЕсли;
			Уменьшить = Мин(СуммаДоходов, НайденнаяСтрока.ДоходПлан);
			СуммаДоходов = СуммаДоходов - Уменьшить;
			НайденнаяСтрока.ДоходПлан = НайденнаяСтрока.ДоходПлан - Уменьшить;
			Если СуммаДоходов Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ПланируемыеДоходы;
	
КонецФункции

Функция ПланируемыеДоходы(ДатаНачала, ДатаОкончания, Организация = Неопределено, БанковскийСчет = Неопределено) Экспорт
	
	Запрос = Новый ПостроительЗапроса();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланДоходы.Ссылка КАК КонтрактСЗаказчиком,
	|	ПРЕДСТАВЛЕНИЕ(ПланДоходы.Ссылка) КАК КонтрактСЗаказчикомПредставление,
	|	ПланДоходы.Ссылка.БанковскийСчет КАК БанковскийСчет,
	|	ВЫБОР
	|		КОГДА ПланДоходы.Дата < &ДатаНачала
	|			ТОГДА &ДатаНачала
	|		ИНАЧЕ ПланДоходы.Дата
	|	КОНЕЦ КАК Дата,
	|	ПланДоходы.Комментарий,
	|	ПланДоходы.Сумма КАК ДоходПлан,
	|	NULL КАК ДоходФакт
	|ИЗ
	|	Справочник.КонтрактыСЗаказчиками.ПланДоходов КАК ПланДоходы
	|ГДЕ
	|	ПланДоходы.Дата < &ДатаОкончания
	|{ГДЕ
	|	ПланДоходы.Ссылка.Владелец.* КАК Организация,
	|	ПланДоходы.Ссылка.БанковскийСчет.* КАК БанковскийСчет}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияДенежныхСредствОбороты.КонтрактСЗаказчиком,
	|	NULL,
	|	ДвиженияДенежныхСредствОбороты.БанковскийСчетОрганизации,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ДвиженияДенежныхСредствОбороты.ДоходОборот
	|ИЗ
	|	РегистрНакопления.ДвиженияДСпоГосконтрактам.Обороты(, , , КонтрактСЗаказчиком <> ЗНАЧЕНИЕ(Справочник.КонтрактыСЗаказчиками.ПустаяСсылка) {(КонтрактСЗаказчиком.Владелец) КАК Организация, (БанковскийСчетОрганизации) КАК БанковскийСчет}) КАК ДвиженияДенежныхСредствОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	КонтрактСЗаказчиком,
	|	Дата";
	
	Запрос.Параметры.Вставить("ДатаНачала", ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания", ДатаОкончания);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Отбор = Запрос.Отбор.Добавить("Организация");
		Отбор.Использование = Истина;
		Отбор.ВидСравнения = ВидСравнения.Равно;
		Отбор.Значение = Организация;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(БанковскийСчет) Тогда
		Отбор = Запрос.Отбор.Добавить("БанковскийСчет");
		Отбор.Использование = Истина;
		Отбор.ВидСравнения = ВидСравнения.Равно;
		Отбор.Значение = БанковскийСчет;
	КонецЕсли;
	
	ПланируемыеДоходы = Запрос.Результат.Выгрузить();
	ПланируемыеДоходы = ОбработатьПланируемыеДоходы(ПланируемыеДоходы);
	
	ПланируемыеДоходы.Индексы.Добавить("БанковскийСчет");
	ПланируемыеДоходы.Индексы.Добавить("БанковскийСчет, Дата");
	
	Возврат ПланируемыеДоходы;
	
КонецФункции

&НаКлиенте
Перем КэшированныеЗначения;

//#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АлкогольнаяПродукция = Параметры.АлкогольнаяПродукция;
	
	Элементы.ФормаПерейтиКСопоставлению.Видимость = ПравоДоступа("Изменение",
		Метаданные.РегистрыСведений.СоответствиеНоменклатурыЕГАИС);
	ЗагрузитьТовары();
	
КонецПроцедуры

//#КонецОбласти

//#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ГосударственныеИнформационныеСистемыПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(
		ЭтаФорма,
		"ТоварыХарактеристика",
		"Объект.Товары.ХарактеристикиИспользуются");
	
КонецПроцедуры

//#Область Прочее

&НаСервере
Процедура ЗагрузитьТовары()
	
	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура КАК Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = &АлкогольнаяПродукция");
	Запрос.УстановитьПараметр("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ТоварыКеш.Загрузить(Объект.Товары.Выгрузить());
	
	ГосударственныеИнформационныеСистемыПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтаФорма, Объект.Товары);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьВозможностьСозданияНоменклатуры(МассивАлкогольнойПродукции, ТекстОшибки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивАлкогольнойПродукции", МассивАлкогольнойПродукции);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка В(&МассивАлкогольнойПродукции)
	|	И СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Выбранная алкогольная продукция уже имеет связку.'");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(АлкогольнаяПродукция);
	
	Если МассивЭлементов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ПроверитьВозможностьСозданияНоменклатуры(МассивЭлементов, ТекстОшибки) Тогда
		Предупреждение(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатВопроса = Вопрос(НСтр("ru = 'Создать номенклатуру по алкогольной продукции?'"), РежимДиалогаВопрос.ОКОтмена);
	СоздатьНоменклатуру_Подтверждение(РезультатВопроса, МассивЭлементов);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру_Подтверждение(РезультатВопроса, ВыделенныеСтроки) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	АдресСпискаАлкогольнойПродукции = ПоместитьВоВременноеХранилище(ВыделенныеСтроки);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресСпискаАлкогольнойПродукции", АдресСпискаАлкогольнойПродукции);
	
	ПараметрыСозданияНоменклатуры = ОткрытьФормуМодально("Обработка.СопоставлениеНоменклатурыЕГАИС.Форма.ФормаСозданияНоменклатуры", ПараметрыФормы, ЭтаФорма);
	
	СоздатьНоменклатуру_Завершение(ПараметрыСозданияНоменклатуры, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуру_Завершение(ПараметрыСозданияНоменклатуры, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПараметрыСозданияНоменклатуры) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	АдресПараметровСозданияНоменклатуры = ПоместитьВоВременноеХранилище(ПараметрыСозданияНоменклатуры);
	
	Подключаемый_СоздатьНоменклатуру();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СоздатьНоменклатуру()
	
	СозданнаяНоменклатура = СоздатьНоменклатуруНаСервере(АдресПараметровСозданияНоменклатуры);
	ЗагрузитьТовары();
	
	Если СозданнаяНоменклатура.Количество() = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Создан элемент номенклатуры %Наименование%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", СокрЛП(СозданнаяНоменклатура[0]));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СозданнаяНоменклатура[0]);
	Иначе
		ТекстСообщения = НСтр("ru = 'Создано %Количество% элементов номенклатуры.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СозданнаяНоменклатура.Количество());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьНоменклатуруНаСервере(АдресПараметровСозданияНоменклатуры)
	
	СозданнаяНоменклатура = Новый Массив;
	
	ПараметрыСозданияНоменклатуры = ПолучитьИзВременногоХранилища(АдресПараметровСозданияНоменклатуры);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого АлкогольнаяПродукция Из ПараметрыСозданияНоменклатуры.МассивЭлементов Цикл
		
		РеквизитыАлкогольнойПродукции = ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукция);
		
		НоменклатураОбъект  = Справочники.Номенклатура.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоменклатураОбъект, РеквизитыАлкогольнойПродукции);
		
		НоменклатураОбъект.Родитель                = ПараметрыСозданияНоменклатуры.Родитель;
		НоменклатураОбъект.АлкогольнаяПродукция    = Истина;
		НоменклатураОбъект.ВидНоменклатуры         = ПараметрыСозданияНоменклатуры.ВидНоменклатуры;
		НоменклатураОбъект.БазоваяЕдиницаИзмерения = ПараметрыСозданияНоменклатуры.ЕдиницаИзмерения;
		НоменклатураОбъект.СтавкаНДС               = ПараметрыСозданияНоменклатуры.СтавкаНДС;
		НоменклатураОбъект.НоменклатурнаяГруппа    = ПараметрыСозданияНоменклатуры.НоменклатурнаяГруппа;
		НоменклатураОбъект.СтранаПроисхождения     = ПараметрыСозданияНоменклатуры.СтранаПроисхождения;
		Если ЗначениеЗаполнено(НоменклатураОбъект.СтранаПроисхождения) Тогда
			НоменклатураОбъект.ИмпортнаяАлкогольнаяПродукция = 
				Не НоменклатураОбъект.СтранаПроисхождения = Справочники.КлассификаторСтранМира.Россия;
		КонецЕсли;
		
		ТекстОшибкиПроизводитель = "";
		ТекстОшибкиИмпортер = "";
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ПроизводительЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Производитель) Тогда
				Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
					НоменклатураОбъект.Производитель = РеквизитыАлкогольнойПродукции.Производитель;
				Иначе
					НоменклатураОбъект.Импортер = РеквизитыАлкогольнойПродукции.Производитель;
				КонецЕсли;
			Иначе
				ТекстОшибкиПроизводитель = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного производителя.'");
				ТекстОшибкиПроизводитель = СтрЗаменить(ТекстОшибкиПроизводитель, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.ИмпортерЕГАИС) Тогда
			Если ЗначениеЗаполнено(РеквизитыАлкогольнойПродукции.Импортер) Тогда
				НоменклатураОбъект.Импортер = РеквизитыАлкогольнойПродукции.Импортер;
				НоменклатураОбъект.ИмпортнаяАлкогольнаяПродукция = Истина;
			Иначе
				ТекстОшибкиИмпортер = НСтр("ru = 'При создании номенклатуры %Наименование% не удалось определить сопоставленного импортера.'");
				ТекстОшибкиИмпортер = СтрЗаменить(ТекстОшибкиИмпортер, "%Наименование%", СокрЛП(НоменклатураОбъект.Наименование));
			КонецЕсли;
		КонецЕсли;
		
		НоменклатураОбъект.Записать();
		
		Если НЕ ПустаяСтрока(ТекстОшибкиПроизводитель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиПроизводитель, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстОшибкиИмпортер) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибкиИмпортер, НоменклатураОбъект.Ссылка);
		КонецЕсли;
		
		НоменклатураСсылка = НоменклатураОбъект.Ссылка;
		
		ЕдиницаИзмеренияОбъект = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
		ЕдиницаИзмеренияОбъект.Владелец = НоменклатураСсылка;
		ЕдиницаИзмеренияОбъект.ЕдиницаПоКлассификатору = НоменклатураСсылка.БазоваяЕдиницаИзмерения;
		ЕдиницаИзмеренияОбъект.Наименование = ЕдиницаИзмеренияОбъект.ЕдиницаПоКлассификатору.Наименование;
		ЕдиницаИзмеренияОбъект.Коэффициент = 1;
		ЕдиницаИзмеренияОбъект.Записать();
		
		ЕдиницаИзмеренияСсылка = ЕдиницаИзмеренияОбъект.Ссылка;
		
		НоменклатураОбъект.ЕдиницаХраненияОстатков = ЕдиницаИзмеренияСсылка;
		НоменклатураОбъект.ЕдиницаДляОтчетов       = ЕдиницаИзмеренияСсылка;
		НоменклатураОбъект.Записать();
		
		Запись = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьМенеджерЗаписи();
		Запись.АлкогольнаяПродукция = АлкогольнаяПродукция;
		Запись.Номенклатура = НоменклатураСсылка;
		Запись.Записать();
		
		СозданнаяНоменклатура.Добавить(НоменклатураОбъект.Ссылка);
		
	КонецЦикла;
	
	Возврат СозданнаяНоменклатура;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыАлкогольнойПродукции(АлкогольнаяПродукция)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", АлкогольнаяПродукция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Наименование,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.НаименованиеПолное,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Объем / 10 КАК ОбъемДАЛ,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Крепость,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции КАК ВидАлкогольнойПродукцииЕГАИС,
	|	ЕСТЬNULL(СоответствиеПоПроизводителю.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Производитель,
	|	ЕСТЬNULL(СоответствиеПоИмпортеру.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Импортер,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК ПроизводительЕГАИС,
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Импортер КАК ИмпортерЕГАИС
	|ИЗ
	|	Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеПоПроизводителю
	|		ПО КлассификаторАлкогольнойПродукцииЕГАИС.Производитель = СоответствиеПоПроизводителю.ОрганизацияЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеПоИмпортеру
	|		ПО КлассификаторАлкогольнойПродукцииЕГАИС.Импортер = СоответствиеПоИмпортеру.ОрганизацияЕГАИС
	|ГДЕ
	|	КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
	
КонецФункции

&НаКлиенте
Процедура ПерейтиКСопоставлению(Команда)
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("АлкогольнаяПродукция", АлкогольнаяПродукция);
	
	ОткрытьФормуЕГАИС("РегистрСведений.СоответствиеНоменклатурыЕГАИС.ФормаСписка", 
		Новый Структура("Отбор", СтруктураОтбора));
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

//#КонецОбласти

//#КонецОбласти
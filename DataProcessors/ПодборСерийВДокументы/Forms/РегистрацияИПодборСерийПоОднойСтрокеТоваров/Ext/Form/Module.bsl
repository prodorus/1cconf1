&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

&НаКлиенте
Перем ТекущаяДатаПроизводства;

&НаКлиенте
Перем НужноЗадаватьВопросПередЗакрытием;

// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Если Не ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище) Тогда
		ТекстСообщения = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	ТолькоРедактированиеКоличества = Параметры.ТолькоРедактированиеКоличества;
	
	АвторизованВнешнийПользователь = Ложь;
	
	ИнтеграцияЕГАИСПереопределяемый.НастроитьПодключаемоеОборудование(ЭтаФорма, "Серии");
	
 	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	КоличествоВДокументе      = Параметры.Количество;
	НомераСтрокПредставление  = Параметры.НомераСтрокДокумента;
	Номенклатура 			  = Параметры.Номенклатура;
	Характеристика			  = Параметры.Характеристика;
	Склад					  = Параметры.Склад;
	Регистратор				  = Параметры.Регистратор;
	ЕстьУпаковки = Истина;
	
	РеквизитыНоменклатуры = Новый Структура;
	РеквизитыНоменклатуры.Вставить("ВидНоменклатуры", "ВидНоменклатуры");
	РеквизитыНоменклатуры.Вставить("ЕдиницаИзмеренияПредставление", "ЕдиницаИзмерения.Наименование");
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, РеквизитыНоменклатуры); 
	
	Упаковка                  = Параметры.Упаковка;
	
	ИсходнаяУпаковка = Упаковка;
	
	Заголовок = НСтр("ru = 'Регистрация серий товаров'");
	ТоварПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Номенклатура, Характеристика);
	
	Параметры.Свойство("ЗаголовокКолонкиКоличество", ПараметрЗаголовокКолонкиКоличество);
	
	Элементы.Упаковка.Доступность = Не ЕстьУпаковки;
	
	Элементы.Серии.ИзменятьСоставСтрок              = Не ТолькоПросмотр;
	Элементы.СерииКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ГруппаКоманднаяПанельТаблицы.Видимость = Не ТолькоПросмотр;
	
	Элементы.Количество.Видимость              = Не ТолькоПросмотр;
	
	Элементы.ОстаткиСерийКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	
	Элементы.СерииДобавить.Заголовок       = НСтр("ru = 'Ввести'");
		
	Элементы.ФормаНастроитьПорядокСканированияСерий.Видимость = Не АвторизованВнешнийПользователь;
	
	Элементы.СерииПроизводительЕГАИС.Видимость = Истина;
	Элементы.СерииСправка2ЕГАИС.Видимость      = Истина;
	
	РежимОтображенияСерий = "СерииВДокументе";
	
	ВариантПолучениеДанныхИзРегистров = Обработки.ПодборСерийВДокументы.ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(Параметры.Склад);
	Заголовки = Обработки.ПодборСерийВДокументы.ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолучениеДанныхИзРегистров);
	ЗаголовокСвободногоОстаткаПоУмолчанию = Заголовки.ЗаголовокСвободногоОстатка;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		Элементы.РежимОтображенияСерий.СписокВыбора[1].Представление = Заголовки.ЗаголовокКнопки;
	Иначе	
		Элементы.ОстаткиСерийСвободныйОстаток.Видимость = Ложь;
		Элементы.РежимОтображенияСерий.СписокВыбора.Удалить(Элементы.РежимОтображенияСерий.СписокВыбора[1]);
	КонецЕсли;
	
	Элементы.ОстаткиСерийПроизводительЕГАИС.Видимость = Истина;
	Элементы.ОстаткиСерийСправка2ЕГАИС.Видимость      = Истина;
	
	// Ввод серий
	ТаблицаСерий = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество,
	|	СУММА(ТаблицаСерий.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	&ТекстЗапросаРеквизитыСерий
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|	(&ИспользоватьКоличествоСерии
	|			ИЛИ ТаблицаСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("ТаблицаСерий"));
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаСерий", ТаблицаСерий);
	Запрос.УстановитьПараметр("ИспользоватьКоличествоСерии", Истина);
	
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоэффициентУпаковки = 1;
	ЭтоЕдиничнаяУпаковка = КоэффициентУпаковки = 1;
	
	Если ТолькоРедактированиеКоличества Тогда
		Элементы.СерииКоличествоУпаковок.Вид = ВидПоляФормы.ПолеФлажка;
	Иначе
		Элементы.СерииКоличествоУпаковок.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ОстаткиСерийКоличествоУпаковок.Вид = ВидПоляФормы.ПолеФлажка;
	Элементы.Упаковка.Видимость = Ложь;
		
	Если Не ЭтоЕдиничнаяУпаковка Тогда
		Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;
		
	Если Не Обработки.ПодборСерийВДокументы.ЕстьПраваНаЧтениеДанныхРегистров(ВариантПолучениеДанныхИзРегистров, Склад) Тогда
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	ПравоДобавленияСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
	Если Не ПравоДобавленияСерий Тогда
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий;
		Элементы.СтраницаВводСерии.Видимость = Ложь;
		Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Если Объект.Серии.Итог("КоличествоУпаковок") = 0 Тогда
			Если Элементы.РежимОтображенияСерий.СписокВыбора.НайтиПоЗначению("ТолькоОстатки") <> Неопределено Тогда
				РежимОтображенияСерий = "ТолькоОстатки";
			Иначе
				РежимОтображенияСерий = "ВсеСерии";
			КонецЕсли;
		КонецЕсли; 
		Заголовок = НСтр("ru = 'Подбор серий по остаткам на складе'");
	КонецЕсли;
	
	УпаковкаПриИзмененииСервер();
		
	Если ТолькоРедактированиеКоличества Тогда
		
		Элементы.СерииДобавить.Видимость = Ложь;
		Элементы.СерииСкопировать.Видимость = Ложь;
		Элементы.СерииИзменить.Видимость = Ложь;
		Элементы.СерииУдалить.Видимость = Ложь;
		
		Элементы.СерииКонтекстноеМенюДобавить.Видимость = Ложь;
		Элементы.СерииКонтекстноеМенюСкопировать.Видимость = Ложь;
		Элементы.СерииКонтекстноеМенюУдалить.Видимость = Ложь;
			
		Для Каждого Элемент Из Элементы.ОстаткиСерий.ПодчиненныеЭлементы Цикл
			Если Не Элемент = Элементы.ОстаткиСерийКоличествоУпаковок Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Элемент Из Элементы.Серии.ПодчиненныеЭлементы Цикл
			Если Не Элемент = Элементы.СерииКоличествоУпаковок Тогда
				Элемент.ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИдетЗаписьМетки = Ложь;
	
	ПоддерживаемыеТипыОборудования = "СканерШтрихкода";
	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтаФорма, ПоддерживаемыеТипыОборудования);
	
	НужноЗадаватьВопросПередЗакрытием = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность
		И НужноЗадаватьВопросПередЗакрытием Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОповещениеЗакрытия = ОписаниеОповещенияЕГАИС("ПередЗакрытиемЗавершение", ЭтаФорма);
		ТекстВопроса = НСтр("ru = 'Список серий был изменен.
			|Сохранить изменения?'");
		
		ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(ОповещениеЗакрытия, Отказ, ЗавершениеРаботы, ТекстВопроса,
			ТекстПредупреждения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	МенеджерОборудованияКлиентПереопределяемый.ОтключитьОборудование(Неопределено, Новый Структура("Форма",ЭтаФорма));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор(); 	
	Иначе
		ИдентификаторТекущейСтроки = Неопределено;
	КонецЕсли;
		
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен()
		И НЕ ТолькоПросмотр Тогда
		
		РезультатОбработки = Неопределено;
		
		Если РезультатОбработки <> Неопределено Тогда
			Если РезультатОбработки.ЗакрытьФорму Тогда
				ОчиститьСообщения(); 
				ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании",0.1, Истина);
			Иначе
				Если РезультатОбработки.ИдентификаторТекущейСтроки <> Неопределено Тогда
					Элементы.Серии.ТекущаяСтрока = РезультатОбработки.ИдентификаторТекущейСтроки;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаРеквизитыСерий(ИмяТаблицы)
	
	ТекстЗапросаРеквизитыСерий =
	"	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).ПроизводительЕГАИС КАК ПроизводительЕГАИС,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).Справка2ЕГАИС КАК Справка2ЕГАИС";
	
	ТекстЗапросаРеквизитыСерий = СтрЗаменить(ТекстЗапросаРеквизитыСерий, "ТаблицаСерий", ИмяТаблицы);
	
	Возврат ТекстЗапросаРеквизитыСерий;
	
КонецФункции

// Конец области обработчиков событий формы

// Обработчики событий

&НаКлиенте
Процедура СтраницыСерийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		ВыполнитьЗапросЗаполненияТаблицыОстатков();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОчистка(Элемент, СтандартнаяОбработка)
	
	УпаковкаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	УпаковкаПриИзмененииСервер();
		
КонецПроцедуры

// Конец области обработчиков событий

// Обработчики событий элементов таблицы формы серии

&НаКлиенте
Процедура СерииПриИзменении(Элемент)
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	
	ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
			
		Если ЗначениеЗаполнено(ТекущиеДанные.ПроизводительЕГАИС)
			Или ЗначениеЗаполнено(ТекущиеДанные.Справка2ЕГАИС) Тогда
			Если ТекущиеДанные.КоличествоУпаковок = 0
				И Не ТолькоРедактированиеКоличества Тогда
				ТекущиеДанные.КоличествоУпаковок = 1;
					
				ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
				СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
					
				ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
					
				ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
			КонецЕсли;
		Иначе
			ТекущиеДанные.КоличествоУпаковок = 0;
			ТекущиеДанные.Количество         = 0;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("ПроизводительЕГАИС",Элементы.Серии.ТекущиеДанные.ПроизводительЕГАИС);
		СтруктураПараметров.Вставить("Справка2ЕГАИС",Элементы.Серии.ТекущиеДанные.Справка2ЕГАИС);
		СтруктураПараметров.Вставить("КоличествоУпаковок",Элементы.Серии.ТекущиеДанные.КоличествоУпаковок);
		СтруктураПараметров.Вставить("Количество",Элементы.Серии.ТекущиеДанные.Количество);
		
		Если ОбъединитьСтроки(СтруктураПараметров,Элементы.Серии.ТекущиеДанные.ПолучитьИдентификатор()) Тогда
			Элементы.Серии.ТекущиеДанные.КоличествоУпаковок = 0;
			Элементы.Серии.ТекущиеДанные.Количество         = 0;
			Объект.Серии.Удалить(Элементы.Серии.ТекущиеДанные);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ВыделенныеСтроки = Новый Массив;
	
	Для Каждого ИДСтроки Из Элементы.Серии.ВыделенныеСтроки Цикл
		
		ВыделенныеСтроки.Добавить(Объект.Серии.НайтиПоИдентификатору(ИДСтроки));
		
	КонецЦикла;	
	
	Для Каждого ТекущиеДанные Из ВыделенныеСтроки Цикл 
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
		
		Если ТолькоРедактированиеКоличества Тогда
			Если ТекущиеДанные.КоличествоУпаковок > 0 Тогда
				ТекущиеДанные.КоличествоУпаковок = 0;
				ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
				СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
				ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
			КонецЕсли;
		Иначе
			 Объект.Серии.Удалить(ТекущиеДанные);	
		КонецЕсли;
		
	КонецЦикла;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если ТолькоРедактированиеКоличества Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПроизводительЕГАИСПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ПроизводительЕГАИС) Тогда
		ПодобратьСерию(Элемент,"ПроизводительЕГАИС","Справка2ЕГАИС");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииСправка2ЕГАИСПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Справка2ЕГАИС) Тогда
		ПодобратьСерию(Элемент,"Справка2ЕГАИС","ПроизводительЕГАИС");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;
КонецПроцедуры

// Конец области обработчиков событий элементов таблицы формы серии

// Обработчики событий элементов таблицы формы остатки серий

&НаКлиенте
Процедура ОстаткиСерийКоличествоУпаковокПриИзменении(Элемент)
	Модифицированность = Истина;
	
	ИдентификаторТекущейСтроки = Элементы.ОстаткиСерий.ТекущиеДанные.ПолучитьИдентификатор();
	
 	ОстаткиСерийКоличествоУпаковокПриИзмененииСервер(ИдентификаторТекущейСтроки, КэшированныеЗначения);	
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОтображенияСерийПриИзменении(Элемент)
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ТекущиеДанные.СвободныйОстаток = ТекущиеДанные.СвободныйОстаток + ТекущееКоличество;
	ТекущиеДанные.СвободныйОстаток = ТекущиеДанные.СвободныйОстаток - ТекущиеДанные.КоличествоУпаковок;
	
КонецПроцедуры

// Конец области обработчиков событий элементов таблицы формы остатки серий

// Обработчики команд формы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
	Если Не СохранитьВводСерийСервер() Тогда
		Возврат;
	КонецЕсли;
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСерию(Команда)
	ИзменитьСериюКлиент();
КонецПроцедуры

// Конец области обработчиков команд формы

// Служебные процедуры и функции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтличающейсяСтрокиДокумента);

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Seagreen);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииСерия.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Серия");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", WindowsШрифты.DefaultGUIFont);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Новая'"));

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииСерия.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.Серия");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Зарегистрированная'"));
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииКоличествоУпаковок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТолькоРедактированиеКоличества");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Серии.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.КоличествоУпаковок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТолькоРедактированиеКоличества");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	
КонецПроцедуры

// Генерация серий

&НаСервере
Функция ВычислитьМаксимальныйНомерИКоличество(Упаковка, Количество)
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("Номенклатура", Номенклатура);
	ТекущаяСтрока.Вставить("Упаковка", Упаковка);
	ТекущаяСтрока.Вставить("Количество", Количество);
	ТекущаяСтрока.Вставить("КоличествоУпаковок", Количество);
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	
	ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);

	Результат = Новый Структура("ТекущаяСтрока", ТекущаяСтрока);
	
	Возврат Результат;
	
КонецФункции

// Конец области генерации серий

// Прочее

&НаСервере
Процедура ВыполнитьЗапросЗаполненияТаблицыОстатков()
	
	Если Элементы.СтраницыСерий.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет
		И Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		Возврат;
	КонецЕсли;
	
	КоэффицентУпаковки = 1;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Номенклатура", Номенклатура);
	ПараметрыЗапроса.Вставить("Характеристика", Характеристика);
	ПараметрыЗапроса.Вставить("Склад", Склад);
	ПараметрыЗапроса.Вставить("Регистратор", Регистратор);
	ПараметрыЗапроса.Вставить("КоэффицентУпаковки", КоэффицентУпаковки);
	
	
	ТекстЗапроса = Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, Склад);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	СерииВДокументе.Серия,
	|	СерииВДокументе.Количество,
	|	СерииВДокументе.КоличествоУпаковок
	|ПОМЕСТИТЬ СерииВДокументе
	|ИЗ
	|	&СерииВДокументе КАК СерииВДокументе
	|ГДЕ
	|	СерииВДокументе.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если РежимОтображенияСерий = "СерииВДокументе" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	СерииВДокументе.Серия КАК Серия,
		|	ЕСТЬNULL(ДанныеРегистров.СвободныйОстаток, 0) / &КоэффицентУпаковки * &ЗнакОстатка - СерииВДокументе.КоличествоУпаковок КАК СвободныйОстаток,
		|	СерииВДокументе.Количество КАК Количество,
		|	СерииВДокументе.КоличествоУпаковок КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	СерииВДокументе КАК СерииВДокументе
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистров КАК ДанныеРегистров
		|		ПО (ДанныеРегистров.Серия = СерииВДокументе.Серия)";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("СерииВДокументе"));
	ИначеЕсли РежимОтображенияСерий = "ТолькоОстатки" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) КАК СвободныйОстаток,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеРегистров.Серия КАК Серия,
		|		ДанныеРегистров.СвободныйОстаток / &КоэффицентУпаковки * &ЗнакОстатка КАК СвободныйОстаток,
		|		0 КАК Количество,
		|		0 КАК КоличествоУпаковок
		|	ИЗ
		|		ДанныеРегистров КАК ДанныеРегистров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СерииВДокументе.Серия,
		|		-СерииВДокументе.КоличествоУпаковок,
		|		СерииВДокументе.Количество,
		|		СерииВДокументе.КоличествоУпаковок
		|	ИЗ
		|		СерииВДокументе КАК СерииВДокументе) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) > 0";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("ВложенныйЗапрос"));
	ИначеЕсли РежимОтображенияСерий = "ВсеСерии" Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.СвободныйОстаток) КАК СвободныйОстаток,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
		|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	&ТекстЗапросаРеквизитыСерий
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеРегистров.Серия КАК Серия,
		|		ДанныеРегистров.СвободныйОстаток / &КоэффицентУпаковки * &ЗнакОстатка КАК СвободныйОстаток,
		|		0 КАК Количество,
		|		0 КАК КоличествоУпаковок
		|	ИЗ
		|		ДанныеРегистров КАК ДанныеРегистров
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СерииВДокументе.Серия,
		|		-СерииВДокументе.КоличествоУпаковок,
		|		СерииВДокументе.Количество,
		|		СерииВДокументе.КоличествоУпаковок
		|	ИЗ
		|		СерииВДокументе КАК СерииВДокументе) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Серия";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаРеквизитыСерий", ТекстЗапросаРеквизитыСерий("ВложенныйЗапрос"));
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Для Каждого Параметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	Запрос.УстановитьПараметр("ВсеСерии", РежимОтображенияСерий = "ВсеСерии");
	Запрос.УстановитьПараметр("СерииВДокументе", Объект.Серии.Выгрузить());
	
	Если ВариантПолучениеДанныхИзРегистров = "ТоварыКОформлениюПоступления" Тогда
		Запрос.УстановитьПараметр("ЗнакОстатка", -1);
	Иначе
		Запрос.УстановитьПараметр("ЗнакОстатка", 1);
	КонецЕсли;	
	
	ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаСервере
Процедура ОстаткиСерийКоличествоУпаковокПриИзмененииСервер(ИдентификаторТекущейСтроки, КэшированныеЗначения)
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);

	ТекущиеДанные = ОстаткиСерий.НайтиПоИдентификатору(ИдентификаторТекущейСтроки);
	
	ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	НайденныеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Серия", ТекущиеДанные.Серия));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		НайденныеСтроки = Объект.Серии.НайтиСтроки(Новый Структура("Серия",Справочники.СерииНоменклатуры.ПустаяСсылка()));
	КонецЕсли;
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаСерий = НайденныеСтроки[0];
		Если ТекущиеДанные.КоличествоУпаковок = 0 Тогда
			Объект.Серии.Удалить(СтрокаСерий);
			Возврат;
		КонецЕсли;
	ИначеЕсли ТекущиеДанные.КоличествоУпаковок = 0 Тогда
		Возврат;
	Иначе
		СтрокаСерий = Объект.Серии.Добавить();
	КонецЕсли;
		
	ЗаполнитьЗначенияСвойств(СтрокаСерий, ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Функция СохранитьВводСерийСервер(СтрокаДляЗаписи = Неопределено)
	
	Если Объект.Серии.Количество() > 0 Тогда
		ПоследняяСтрока = Объект.Серии[Объект.Серии.Количество()-1];
		Если Не ЗначениеЗаполнено(ПоследняяСтрока.Серия)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.ПроизводительЕГАИС)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.Справка2ЕГАИС)
			И (ПоследняяСтрока.КоличествоУпаковок = 1
			Или ПоследняяСтрока.КоличествоУпаковок = 0) Тогда
			
			Объект.Серии.Удалить(ПоследняяСтрока);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыПроверки = Новый Структура("Номенклатура,Упаковка,
										|ТолькоРедактированиеКоличества");
	
	ЗаполнитьЗначенияСвойств(ПараметрыПроверки, ЭтаФорма);
	
	Объект.ПараметрыПроверки = Новый ФиксированнаяСтруктура(ПараметрыПроверки);
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;	
			
	НайтиЗарегистрированныеСерии();
	
	ТаблицаВозврата = Новый ТаблицаЗначений;
	ТаблицаВозврата.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаВозврата.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
	ТаблицаВозврата.Колонки.Добавить("КоличествоУпаковок",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));

	КоэффициентИсходнойУпаковки = 1;
	
	Для Каждого СтрТабл Из Объект.Серии Цикл
		
		Если СтрТабл.Количество > 0
			Или ТолькоРедактированиеКоличества Тогда // В режиме ТолькоРедактированиеКоличества нужно также вернуть строки с нулевым количеством
			
			СохранитьСериюПоСтроке(СтрТабл);
			
			НоваяСтрока = ТаблицаВозврата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
			НоваяСтрока.КоличествоУпаковок = НоваяСтрока.Количество / КоэффициентИсходнойУпаковки;
			
		КонецЕсли;
	КонецЦикла;
	
	Если ТаблицаВозврата.Количество() = 0 Тогда
		
		НоваяСтрока = ТаблицаВозврата.Добавить();
		НоваяСтрока.КоличествоУпаковок = Количество;
		
		СтруктураРеквизитов = Новый Структура("Упаковка,Номенклатура", Упаковка, Номенклатура);
		СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", СтруктураРеквизитов);
		
		ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, Неопределено);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ТаблицаВозврата,АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СохранитьСериюПоСтроке(СтрТаблИдентификатор)
	
	Если ТипЗнч(СтрТаблИдентификатор) <> Тип("ДанныеФормыЭлементКоллекции") Тогда
		СтрТабл = Объект.Серии.НайтиПоИдентификатору(СтрТаблИдентификатор);
	Иначе
		СтрТабл = СтрТаблИдентификатор; 
	КонецЕсли;
	
	Результат = Ложь;
	
	Если ПравоДобавленияСерий Тогда
		СправочникОбъект = Неопределено;
		Если Не ЗначениеЗаполнено(СтрТабл.Серия) Тогда
			
			СправочникОбъект                    = Справочники.СерииНоменклатуры.СоздатьЭлемент();
			СправочникОбъект.ПроизводительЕГАИС = СтрТабл.ПроизводительЕГАИС;
			СправочникОбъект.Справка2ЕГАИС      = СтрТабл.Справка2ЕГАИС;
			
		КонецЕсли;
		
		Если СправочникОбъект <> Неопределено Тогда
			
			СправочникОбъект.Записать();
			Результат = Истина;
			СтрТабл.Серия = СправочникОбъект.Ссылка;
			
		Иначе
			Результат = Истина;
		КонецЕсли;
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		Закрыть(Неопределено);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСерию(Элемент,ВводимыйРеквизит,ПроверяемыеРеквизиты)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить(ВводимыйРеквизит,ТекущиеДанные[ВводимыйРеквизит]);
	
	ПроверяемыеРеквизитыМассив = СтрРазделить(ПроверяемыеРеквизиты,",");
	
	Для каждого СтрМас Из ПроверяемыеРеквизитыМассив Цикл 
		ПараметрыПоиска.Вставить(СтрМас,Неопределено);
	КонецЦикла;
	
	ПараметрыПоиска.Вставить("ВидНоменклатуры",ВидНоменклатуры);
	ПараметрыПоиска.Вставить("Отбор", Новый Структура);
	ПараметрыПоиска.Вставить("СтрокаПоиска", Неопределено);
	
	СписокВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.СерииНоменклатуры"),ПараметрыПоиска);
	
	ВыбранныйЭлемент = Неопределено;
	
	Значение = Новый Структура;
	Значение.Вставить("Серия", Неопределено);
	Значение.Вставить("ПроизводительЕГАИС",ТекущиеДанные.ПроизводительЕГАИС);
	Значение.Вставить("Справка2ЕГАИС",ТекущиеДанные.Справка2ЕГАИС);
	
	Наименование = НоменклатураКлиентСервер.ПредставлениеСерии(ТекущиеДанные, Истина);
	
	СписокВыбора.Вставить(0, Значение,Наименование);
	
	Если СписокВыбора.Количество() = 1 Тогда
		ВыбранныйЭлемент = СписокВыбора[0];
	ИначеЕсли СписокВыбора.Количество() = 2 Тогда
		Если (СписокВыбора[0].Значение.ПроизводительЕГАИС <> СписокВыбора[1].Значение.ПроизводительЕГАИС
				И ЗначениеЗаполнено(СписокВыбора[0].Значение.ПроизводительЕГАИС))
			Или (СписокВыбора[0].Значение.Справка2ЕГАИС <> СписокВыбора[1].Значение.Справка2ЕГАИС
				И ЗначениеЗаполнено(СписокВыбора[0].Значение.Справка2ЕГАИС)) Тогда
				
				ДопПараметрыВыбора = Новый Структура("СписокВыбора, ТекущиеДанные, Элемент", СписокВыбора, ТекущиеДанные, Элемент);
				ОписаниеОповещения = ОписаниеОповещенияЕГАИС("ПодобратьСериюЗавершение", ЭтаФорма, ДопПараметрыВыбора);
				
				ПоказатьВыборИзСпискаЕГАИС(ОписаниеОповещения, СписокВыбора, Элемент);
		Иначе
			ВыбранныйЭлемент = СписокВыбора[1];
		КонецЕсли;
	ИначеЕсли СписокВыбора.Количество() > 0 Тогда
		ДопПараметрыВыбора = Новый Структура("СписокВыбора, ТекущиеДанные, Элемент", СписокВыбора, ТекущиеДанные, Элемент);
		ОписаниеОповещения = ОписаниеОповещенияЕГАИС("ПодобратьСериюЗавершение", ЭтаФорма, ДопПараметрыВыбора);
		
		ПоказатьВыборИзСпискаЕГАИС(ОписаниеОповещения, СписокВыбора, Элемент);
	КонецЕсли;
	
	ПодобратьСериюФрагмент(ВыбранныйЭлемент, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСериюЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	СписокВыбора = ДополнительныеПараметры.СписокВыбора;
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	Элемент = ДополнительныеПараметры.Элемент;
	
	ПодобратьСериюФрагмент(ВыбранныйЭлемент, ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСериюФрагмент(Знач ВыбранныйЭлемент, Знач ТекущиеДанные)
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранныйЭлемент.Значение); 
		
	Иначе 
		ТекущиеДанные.Серия   = Неопределено; 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ПроизводительЕГАИС", ТекущиеДанные.ПроизводительЕГАИС);
	ЗначенияЗаполненияСерии.Вставить("Справка2ЕГАИС", ТекущиеДанные.Справка2ЕГАИС);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуЕГАИС("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма, , , , Неопределено,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция ОбъединитьСтроки(СтруктураПараметров,Идентификатор)
	
	Для Каждого Строка Из Объект.Серии Цикл
		
		Если Строка.ПроизводительЕГАИС = СтруктураПараметров.ПроизводительЕГАИС
					И Строка.Справка2ЕГАИС = СтруктураПараметров.Справка2ЕГАИС
			И Строка.ПолучитьИдентификатор() <> Идентификатор Тогда
			
			Строка.Количество = Строка.Количество + СтруктураПараметров.Количество;
			Строка.КоличествоУпаковок = Строка.КоличествоУпаковок + СтруктураПараметров.КоличествоУпаковок;
			
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ДобавитьСтрокиНаСервере(ВидНоменклатуры, Результат, Упаковка)
	
    КолСерий = Результат.КоличествоСерий;
    ВКаждойСерии = Результат.ВКаждойСерии;
    ВКаждойСерииКоличество = Результат.ВКаждойСерииКоличество;
	
	АктивнаяСтрока = Неопределено;
	
	ПараметрыСтроки = Новый Структура;
	ПараметрыСтроки.Вставить("Номенклатура",       Номенклатура);
	ПараметрыСтроки.Вставить("Упаковка",           Упаковка);
	ПараметрыСтроки.Вставить("Количество",         ВКаждойСерииКоличество);
	ПараметрыСтроки.Вставить("КоличествоУпаковок", ВКаждойСерииКоличество);
	
	ПараметрыПересчетаКоличества = Новый Структура("Упаковка, Номенклатура", Упаковка, Номенклатура);
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц", ПараметрыПересчетаКоличества);
	ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(ПараметрыСтроки, СтруктураДействий, Неопределено);
	
    СтруктураВозврата = ВычислитьМаксимальныйНомерИКоличество(
			Упаковка,
			ВКаждойСерииКоличество);
		
	Пока КолСерий > 0 Цикл
			                             
		КолСерий = КолСерий-1;
		ТекущаяСтрока = Объект.Серии.Добавить();
			   
		Если АктивнаяСтрока = Неопределено Тогда
			АктивнаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ПараметрыСтроки); 

	КонецЦикла;	
		
	Возврат АктивнаяСтрока;
	
КонецФункции

&НаСервере
Процедура НайтиЗарегистрированныеСерии()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Серии.Серия КАК Серия,
	|	Серии.ПроизводительЕГАИС КАК ПроизводительЕГАИС,
	|	Серии.ПроизводительЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка) КАК ПроизводительЕГАИСНеУказан,
	|	Серии.Справка2ЕГАИС КАК Справка2ЕГАИС,
	|	Серии.Справка2ЕГАИС = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка) КАК Справка2ЕГАИСНеУказан,
	|	Серии.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|&Серии КАК Серии
	|ГДЕ
	|	Серии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	Серии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Серии КАК Серии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (ВЫБОР
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьПроизводителяЕГАИССерии
	|					ТОГДА Серии.ПроизводительЕГАИС = СерииНоменклатуры.ПроизводительЕГАИС
	|				ИНАЧЕ Серии.ПроизводительЕГАИСНеУказан
	|				КОНЕЦ
	|			И ВЫБОР
	|				КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьСправку2ЕГАИССерии
	|					ТОГДА Серии.ПроизводительВЕТИС = СерииНоменклатуры.ПроизводительВЕТИС
	|					ИНАЧЕ Серии.Справка2ЕГАИСНеУказан
	|				КОНЕЦ
	|			)
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры",ВидНоменклатуры);
	Запрос.УстановитьПараметр("Серии",Объект.Серии.Выгрузить());

	Результат = Запрос.ВыполнитьПакет();
	ВыборкаПоСсылкам = Результат[1].Выбрать();
	
	Отказ = Ложь;
	
	Пока ВыборкаПоСсылкам.Следующий() Цикл
		Объект.Серии[ВыборкаПоСсылкам.НомерСтроки-1].Серия = ВыборкаПоСсылкам.Серия;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьЗаголовкиПоУпаковке()
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо зарегистрировать, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Зарегистрировано серий, %ЕдиницаИзмерения%'");
	Если ЗначениеЗаполнено(ПараметрЗаголовокКолонкиКоличество) Тогда
		ЗаголовокКолонкиКоличество = ПараметрЗаголовокКолонкиКоличество; 
	Иначе
		ЗаголовокКолонкиКоличество = НСтр("ru = 'Количество'"); 
	КонецЕсли;
	ЗаголовокКолонкиКоличество    = ЗаголовокКолонкиКоличество + ", %ЕдиницаИзмерения%"; 
	
	Если ЗначениеЗаполнено(Упаковка) Тогда
		
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Упаковка);
		ЗаголовокСвободногоОстатка    = СтрЗаменить(ЗаголовокСвободногоОстаткаПоУмолчанию,"%ЕдиницаИзмерения%", Упаковка);
		ЕдиницаИзмеренияСтр           = Упаковка;
	    
	Иначе
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокСвободногоОстатка    = СтрЗаменить(ЗаголовокСвободногоОстаткаПоУмолчанию,"%ЕдиницаИзмерения%", РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЕдиницаИзмеренияСтр 		  = РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление;
		
	КонецЕсли;
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;

	Элементы.ОстаткиСерийСвободныйОстаток.Заголовок   = ЗаголовокСвободногоОстатка;
	Элементы.ОстаткиСерийКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	
КонецПроцедуры

&НаСервере
Процедура УпаковкаПриИзмененииСервер()
	
	КоэффициентУпаковки = 1;
	
	ЭтоЕдиничнаяУпаковка = КоэффициентУпаковки = 1;
	
	Для Каждого ТекСтр Из Объект.Серии Цикл
		ТекСтр.КоличествоУпаковок = ТекСтр.Количество / КоэффициентУпаковки;
	КонецЦикла;
	
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
	
	Количество = КоличествоВДокументе / КоэффициентУпаковки;
	
	УстановитьЗаголовкиПоУпаковке();
	
КонецПроцедуры

// Конец области прочего

// Конец области служебных процедур и функций

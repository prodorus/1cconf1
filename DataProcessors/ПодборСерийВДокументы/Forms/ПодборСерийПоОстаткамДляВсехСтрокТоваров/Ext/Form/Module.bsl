&НаКлиенте
Перем КэшированныеЗначения;  //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

&НаКлиенте
Перем НужноЗадаватьВопросПередЗакрытием;


// Обработчики событий формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();

	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	Если ТолькоПросмотр Тогда
		Элементы.ЗавершитьВводСерий.Видимость = Ложь;
	КонецЕсли; 
	
	Склад       = Параметры.Склад;
	Помещение   = Параметры.Помещение;
	Регистратор = Параметры.Регистратор;
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	ПараметрыУказанияСерий = Параметры.ПараметрыУказанияСерий;
	
	ПоляПоиска = "Номенклатура, Характеристика";
	Если ПараметрыУказанияСерий.ПоляСвязи.Количество() > 0 Тогда
		
		Для каждого ПолеСвязи Из ПараметрыУказанияСерий.ПоляСвязи Цикл
			
			ПоляПоиска = ПоляПоиска + ", " + ПолеСвязи;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьКоличествоУпаковокВКешТаблицах();
	
	СтруктураПоиска = Новый Структура(ПоляПоиска);

	ЗаполнитьЗначенияСвойств(СтруктураПоиска,Параметры);
	
	НомерТекущейСтрокиТоваров = Объект.ТоварыКешДокумента.НайтиСтроки(СтруктураПоиска)[0].НомерСтроки;
	
	Инициализировать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьКнопокВпередНазад();
	НужноЗадаватьВопросПередЗакрытием = Истина;
КонецПроцедуры

// Задает вопрос о продолжении действия, которое приведет к потере изменений:
// "Данные были изменены. Сохранить изменения?" 
// Для использования в обработчиках события ПередЗакрытием модулей форм объектов,
// которые возможно записать в информационную базу.
// Отображение вопроса зависит свойства модифицированности формы.
// Для отображения вопроса произвольной формы используйте: 
//  см. процедуру ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы().
//
// Параметры:
//  ОповещениеСохранитьИЗакрыть  - ОписаниеОповещения - содержит имя процедуры, вызываемой при нажатии на кнопку OK.
//  Отказ                        - Булево - возвращаемый параметр, признак отказа от выполняемого действия.
//  ЗавершениеРаботы             - Булево - признак того, что форма закрывается в процессе завершения работы приложения.
//  ТекстПредупреждения          - Строка - текст предупреждения, выводимый пользователю. По умолчанию, выводится текст
//                                          "Данные были изменены. Сохранить изменения?"
//  ТекстПредупрежденияПриЗавершении - Строка - возвращаемый параметр с текстом предупреждения, выводимым пользователю 
//                                          при завершении приложения. Если параметр указан, то возвращается текст
//                                          "Данные были изменены. Все изменения будут потеряны.".
//
// Пример:
//
//  &НаКлиенте
//  Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
//    Оповещение = Новый ОписаниеОповещения("ВыбратьИЗакрыть", ЭтотОбъект);
//    ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
//  КонецПроцедуры
//  
//  &НаКлиенте
//  Процедура ВыбратьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
//     // записываем данные формы.
//     // ...
//     Модифицированность = Ложь; // не выводить подтверждение о закрытии формы еще раз.
//     Закрыть(<РезультатВыбораВФорме>);
//  КонецПроцедуры
//
Процедура ПоказатьПодтверждениеЗакрытияФормы(Знач ОповещениеСохранитьИЗакрыть, Отказ, 
	Знач ЗавершениеРаботы, Знач ТекстПредупреждения = "", ТекстПредупрежденияПриЗавершении = Неопределено) Экспорт
	
	Форма = ОповещениеСохранитьИЗакрыть.Модуль;
	Если Не Форма.Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если ЗавершениеРаботы Тогда
		Если ТекстПредупрежденияПриЗавершении = "" Тогда // передан параметр из ПередЗакрытием
			ТекстПредупрежденияПриЗавершении = НСтр("ru = 'Данные были изменены. Все изменения будут потеряны.'");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Параметры = Новый Структура();
	Параметры.Вставить("ОповещениеСохранитьИЗакрыть", ОповещениеСохранитьИЗакрыть);
	Параметры.Вставить("ТекстПредупреждения", ТекстПредупреждения);
	
	ИмяПараметра = "СтандартныеПодсистемы.ПараметрыПодтвержденияЗакрытияФормы";
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПараметра, Неопределено);
	КонецЕсли;
	ПараметрыПриложения["СтандартныеПодсистемы.ПараметрыПодтвержденияЗакрытияФормы"] = Параметры;
	
	ПодключитьОбработчикОжидания("ПодтвердитьЗакрытиеФормыСейчас", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность
		И НужноЗадаватьВопросПередЗакрытием Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОписаниеОповещенияОЗавершении  = ОписаниеОповещенияЕГАИС("ПередЗакрытиемЗавершение", ЭтаФорма);
		ТекстВопроса = НСтр("ru = 'Список серий был изменен.
			|Сохранить изменения?'");
		ПоказатьВопросЕГАИС(ОписаниеОповещенияОЗавершении, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
КонецПроцедуры

// Конец области обработчиков событий формы

// Обработчики событий элементов формы

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	Если НомерТекущейСтрокиТоваров < 1 
	 Или НомерТекущейСтрокиТоваров > Объект.ТоварыКешДокумента.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	УпаковкаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаОчистка(Элемент, СтандартнаяОбработка)
	
	УпаковкаПриИзменении(Элемент);
	
КонецПроцедуры

// Конец области обработчиков событий элементов формы

// Обработчики событий элементов таблицы формы серии

&НаКлиенте
Процедура СерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.СерииСерия Тогда
		ИзменитьСериюКлиент();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)

	КоэффициентУпаковки = КоэффициентУпаковки(Упаковка, Номенклатура);
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	ТекущиеДанные.Количество = ТекущиеДанные.КоличествоУпаковок * КоэффициентУпаковки;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		Дельта = ТекущееКоличество - Элементы.Серии.ТекущиеДанные.КоличествоУпаковок;
		КоличествоСерий = КоличествоСерий - Дельта;
		Элементы.Серии.ТекущиеДанные.СвободныйОстаток = Элементы.Серии.ТекущиеДанные.СвободныйОстаток + Дельта;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура СерииПослеУдаления(Элемент)
	КоличествоСерий = КоличествоСерий - ТекущееКоличество;
КонецПроцедуры

// Конец области обработчиков событий элементов таблицы формы серии

// Обработчики команд формы

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
    СохранитьВводСерийСервер();
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		НужноЗадаватьВопросПередЗакрытием = Ложь;
		Закрыть(Неопределено);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СледующаяСтрока(Команда)
	ИзменитьТекущуюСтроку(1);
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяСтрока(Команда)
	ИзменитьТекущуюСтроку(-1);
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьДополнительныеРеквизиты(Команда)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Серия) Тогда
		ТекстСообщения = НСтр("ru = 'В выбранной строке не заполнена серия из-за ошибки в данных об остатках. Обратитесь к администратору.'");
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуЕГАИС("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",
		ПараметрыФормыСерии,
		ЭтаФорма, , , ,
		Неопределено,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоFEFO(Команда)
	Если Количество = 0 Тогда
		Предупреждение(НСтр("ru = 'В документе не указано количество товара. Заполнение по FEFO не возможно.'"));
		Возврат;
	КонецЕсли;	
	ЗаполнитьПоFEFOСервер();
КонецПроцедуры

// Конец области обработчиков команд формы

// Служебные процедуры и функции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтличающейсяСтрокиДокумента);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КоличествоСерий.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСерий");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Количество");

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Seagreen);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СерииСвободныйОстаток.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Серии.СвободныйОстаток");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ВыделятьОтрицательные", Истина);

КонецПроцедуры

// Прочее

&НаСервере
Процедура ЗаполнитьКоличествоУпаковокВКешТаблицах()
	
	СтруктураИзХранилища = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаСерий.НомерСтроки             КАК НомерСтроки,
		|	ТаблицаСерий.Номенклатура            КАК Номенклатура,
		|	ТаблицаСерий.Характеристика          КАК Характеристика,
		|	ТаблицаСерий.Серия                   КАК Серия,
		|	ТаблицаСерий.Количество              КАК Количество
		|ПОМЕСТИТЬ ТаблицаСерий
		|ИЗ
		|	&ТаблицаСерий КАК ТаблицаСерий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомераСтрокДокумента    КАК НомераСтрокДокумента,
		|	ТаблицаТоваров.Номенклатура            КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика          КАК Характеристика,
		|	ТаблицаТоваров.Упаковка                КАК Упаковка,
		|	ТаблицаТоваров.СтатусУказанияСерий     КАК СтатусУказанияСерий,
		|	ТаблицаТоваров.Количество              КАК Количество
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомерСтроки                                   КАК НомерСтроки,
		|	ТаблицаТоваров.Номенклатура                                  КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика                                КАК Характеристика,
		|	ТаблицаТоваров.Серия                                         КАК Серия,
		|	ТаблицаТоваров.Количество                                    КАК Количество,
		|	ТаблицаТоваров.Количество									 КАК КоличествоУпаковок
		|ИЗ
		|	ТаблицаСерий КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.НомераСтрокДокумента                          КАК НомераСтрокДокумента,
		|	ТаблицаТоваров.Номенклатура                                  КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика                                КАК Характеристика,
		|	ТаблицаТоваров.СтатусУказанияСерий                           КАК СтатусУказанияСерий,
		|	ТаблицаТоваров.Количество                                    КАК Количество,
		|	ТаблицаТоваров.Количество 									 КАК КоличествоУпаковок
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров";
		
	Запрос.УстановитьПараметр("ТаблицаСерий",   СтруктураИзХранилища.ТаблицаСерий);
	Запрос.УстановитьПараметр("ТаблицаТоваров", СтруктураИзХранилища.ТаблицаТоваров);
		
	РезультатЗапрос = Запрос.ВыполнитьПакет();
		
	Объект.СерииКешДокумента.Загрузить(РезультатЗапрос[2].Выгрузить());
	Объект.ТоварыКешДокумента.Загрузить(РезультатЗапрос[3].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоFEFOСервер()
	
	КоличествоКРаспределению = Количество;
	
	КоэффициентУпаковки = КоэффициентУпаковки(Упаковка, Номенклатура);
	
	Для Каждого СтрТабл Из Объект.Серии Цикл
		Если КоличествоКРаспределению <= 0 Тогда
			СтрТабл.СвободныйОстаток   = СтрТабл.СвободныйОстаток + СтрТабл.КоличествоУпаковок;
			СтрТабл.КоличествоУпаковок = 0;
			СтрТабл.Количество = 0;
			Продолжить;
		КонецЕсли;
		
		КоличествоПоСтроке =  Мин(СтрТабл.СвободныйОстаток + СтрТабл.КоличествоУпаковок, КоличествоКРаспределению);
		Если КоличествоПоСтроке < 0 Тогда
			СтрТабл.СвободныйОстаток   = СтрТабл.СвободныйОстаток + СтрТабл.КоличествоУпаковок;
			СтрТабл.КоличествоУпаковок = 0;
		Иначе
			СтрТабл.СвободныйОстаток   = СтрТабл.СвободныйОстаток + СтрТабл.КоличествоУпаковок - КоличествоПоСтроке;
			СтрТабл.КоличествоУпаковок = КоличествоПоСтроке;
			КоличествоКРаспределению = КоличествоКРаспределению - КоличествоПоСтроке; 
		КонецЕсли;
		
		СтрТабл.Количество = СтрТабл.КоличествоУпаковок * КоэффициентУпаковки;

	КонецЦикла;
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВводСерийВКеше()
	
	ЕстьПризнакУказанияСерий = Истина;
	
	ТаблицаСерий = Объект.Серии.Выгрузить();
	
	ТаблицаСерий.Свернуть("Серия", "Количество,КоличествоУпаковок");
	
	Индекс = ТаблицаСерий.Количество();
	
	Пока Индекс > 0 Цикл
		Индекс = Индекс - 1;
		СтрТабл = ТаблицаСерий[Индекс];
		Если СтрТабл.КоличествоУпаковок = 0 Тогда
			ТаблицаСерий.Удалить(СтрТабл);
		КонецЕсли;
	КонецЦикла;
	
	СтрокаТоваров = Объект.ТоварыКешДокумента[НомерТекущейСтрокиТоваров-1];
	
	ТекстПоляПоиска = "";
	
	СтруктураПоиска = Новый Структура("Номенклатура,Характеристика" + ТекстПоляПоиска);
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТоваров);
	
	СтрокаТоваров.Упаковка = Упаковка;
	
	НайденныеСтрокиСерий = Объект.СерииКешДокумента.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрТабл Из НайденныеСтрокиСерий Цикл
		Объект.СерииКешДокумента.Удалить(СтрТабл);
	КонецЦикла;
	
	Для Каждого СтрТабл Из ТаблицаСерий Цикл
		НоваяСтрока = Объект.СерииКешДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТоваров);
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		Если ЕстьПризнакУказанияСерий Тогда
			НоваяСтрока.УказыватьСерии = Истина;
		КонецЕсли;
		НоваяСтрока.Упаковка = Упаковка;
	КонецЦикла;
	
	Если ЕстьПризнакУказанияСерий Тогда
		Если ТаблицаСерий.Количество() > 0 Тогда
			СтрокаТоваров.УказыватьСерии = Истина;
		Иначе
			СтрокаТоваров.УказыватьСерии = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВводСерийСервер()
	
	СохранитьВводСерийВКеше();
	
	СтруктураВозврата = Новый Структура;
	ТаблицаСерий = Объект.СерииКешДокумента.Выгрузить();
	
	КолонкиГруппировок =
	"Номенклатура,
	|Характеристика,
	|Упаковка,
	|Коэффициент,
	|Склад,
	|Серия";
	
	КолонкиСуммирования =
	"Количество,
	|КоличествоУпаковок";
	
	ТаблицаСерий.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
	
	Для Каждого ТекСтр Из ТаблицаСерий Цикл
		Если ТекСтр.Коэффициент <> 0 И ТекСтр.Коэффициент <> 1 Тогда
			ТекСтр.Количество = ТекСтр.Количество * ТекСтр.Коэффициент;
			ТекСтр.КоличествоУпаковок = ТекСтр.КоличествоУпаковок * ТекСтр.Коэффициент;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураВозврата.Вставить("ТаблицаСерий", ТаблицаСерий);
	ПоместитьВоВременноеХранилище(СтруктураВозврата, АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопокВпередНазад()
	Если  НомерТекущейСтрокиТоваров > 1 Тогда
		Элементы.ГруппаКнопкаНазад.ТекущаяСтраница = Элементы.СтраницаКнопкаНазад;
	Иначе
		Элементы.ГруппаКнопкаНазад.ТекущаяСтраница = Элементы.СтраницаКнопкаНазадПустая;
	КонецЕсли;
	
	Если НомерТекущейСтрокиТоваров < Объект.ТоварыКешДокумента.Количество() Тогда
		Элементы.ГруппаКнопкаВперед.ТекущаяСтраница = Элементы.СтраницаКнопкаВперед;
	Иначе
		Элементы.ГруппаКнопкаВперед.ТекущаяСтраница = Элементы.СтраницаКнопкаВпередПустая;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура Инициализировать(ПересчитыватьУпаковки = Ложь)
	
	Если НомерТекущейСтрокиТоваров < 1 
	 Или НомерТекущейСтрокиТоваров > Объект.ТоварыКешДокумента.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТоваров = Объект.ТоварыКешДокумента[НомерТекущейСтрокиТоваров-1];
	Упаковка = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	
	СкладыВТЧ = Ложь;
	ЕстьУпаковки = Истина;
	ЕстьПризнакУказанияСерий = Истина;
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТоваров.Номенклатура, 
	                        											Новый Структура("ЕдиницаИзмеренияПредставление",
																		"ЕдиницаИзмерения.Наименование"));
	РеквизитыУпаковки = Новый Структура("Коэффициент, Наименование", 1, РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	
	Количество = СтрокаТоваров.Количество / РеквизитыУпаковки.Коэффициент;
	НомераСтрокПредставление = СтрокаТоваров.НомераСтрокДокумента;
	
	Если Не СкладыВТЧ Тогда
		ТекущийСклад = Склад;
	Иначе
		ТекущийСклад = СтрокаТоваров.Склад;
	КонецЕсли;
								
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо для отгрузки, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Подобрано из серий, %ЕдиницаИзмерения%'");
	ЗаголовокКолонкиКоличество = "";
	Если Не Параметры.Свойство("ЗаголовокКолонкиКоличество", ЗаголовокКолонкиКоличество) Тогда
		ЗаголовокКолонкиКоличество    = НСтр("ru = 'К отгрузке'"); 
	КонецЕсли;
	ЗаголовокКолонкиКоличество    = ЗаголовокКолонкиКоличество + ", " + РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление;
	
	ТоварПредставление = НСтр("ru = '%ПредставлениеТовара%'");
	
	ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	
	Заголовок = НСтр("ru = 'Подбор серий по остаткам на складе'");
	
	ЗаголовокСвободногоОстатка = СтрЗаменить(ЗаголовокСвободногоОстатка,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	
	Номенклатура = СтрокаТоваров.Номенклатура;
	ТоварПредставление = СтрЗаменить(ТоварПредставление,"%ПредставлениеТовара%",НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТоваров.Номенклатура, СтрокаТоваров.Характеристика));
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.СерииСвободныйОстаток.Заголовок   = ЗаголовокСвободногоОстатка;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	
	Элементы.СерииПроизводительЕГАИС.Видимость = Истина;
	Элементы.СерииСправка2ЕГАИС.Видимость      = Истина;
	Элементы.СерииКоличествоУпаковок.Видимость = Истина;
	
	// Формирование таблицы ТаблицаСерий	

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,";
	Если ЕстьПризнакУказанияСерий Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|  	ТаблицаСерий.УказыватьСерии, 
			|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
			|			ТОГДА ТаблицаСерий.Количество
			|			ИНАЧЕ 0
			|	КОНЕЦ КАК Количество, ";
		Если ЕстьУпаковки Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
			|			ТОГДА ТаблицаСерий.КоличествоУпаковок
			|			ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоУпаковок ";
		Иначе
		ТекстЗапроса = ТекстЗапроса + "
			|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
			|			ТОГДА ТаблицаСерий.Количество
			|			ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоУпаковок ";
		КонецЕсли;
	ИначеЕсли ЕстьУпаковки Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Количество,
		|	ТаблицаСерий.КоличествоУпаковок ";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Количество,
		|	ТаблицаСерий.Количество КАК КоличествоУпаковок ";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|  	ТаблицаСерий.Номенклатура = &Номенклатура
	|  	И ТаблицаСерий.Характеристика = &Характеристика";
	Если СкладыВТЧ Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	И ТаблицаСерий.Склад = &Склад";
	КонецЕсли;
	Если ЕстьУпаковки Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	И ТаблицаСерий.Упаковка = &Упаковка";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,";
	Если ЕстьПризнакУказанияСерий Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	ТаблицаСерий.УказыватьСерии, 
		|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
		|			ТОГДА ТаблицаСерий.Количество
		|			ИНАЧЕ 0
		|	КОНЕЦ КАК Количество, ";
		Если ЕстьУпаковки Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
			|			ТОГДА ТаблицаСерий.КоличествоУпаковок
			|			ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоУпаковок ";
		Иначе
		ТекстЗапроса = ТекстЗапроса + "
			|	ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
			|			ТОГДА ТаблицаСерий.Количество
			|			ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоУпаковок ";
		КонецЕсли;
	ИначеЕсли ЕстьУпаковки Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Количество,
		|	ТаблицаСерий.КоличествоУпаковок ";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Количество,
		|	ТаблицаСерий.Количество КАК КоличествоУпаковок ";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ТаблицаСерийПоляСвязи
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|  	ТаблицаСерий.Номенклатура = &Номенклатура
	|  	И ТаблицаСерий.Характеристика = &Характеристика";
	Если СкладыВТЧ Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	И ТаблицаСерий.Склад = &Склад";
	КонецЕсли;
	
	ДобавляемыеПараметры = Новый Массив;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";

	// Формирование таблицы ДанныеРегистров	
	
	ТекстЗапроса = ТекстЗапроса + Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров("ВсеСерииНоменклатуры", Склад);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	// Объединение таблиц ТаблицаСерий и ДанныеРегистров	
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ТаблицаСерийСОстатками.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).ПроизводительЕГАИС КАК ПроизводительЕГАИС,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).Справка2ЕГАИС КАК Справка2ЕГАИС,
	|	СУММА(ТаблицаСерийСОстатками.СвободныйОстаток/&КоэффициентУпаковки) КАК СвободныйОстаток,
	|	СУММА(ТаблицаСерийСОстатками.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА &ПересчитыватьУпаковки
	|				ТОГДА ТаблицаСерийСОстатками.Количество / &КоэффициентУпаковки
	|			ИНАЧЕ ТаблицаСерийСОстатками.КоличествоУпаковок
	|		КОНЕЦ) КАК КоличествоУпаковок
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеРегистров.Серия КАК Серия,
	|		ДанныеРегистров.СвободныйОстаток КАК СвободныйОстаток,
	|		0 КАК Количество,
	|		0 КАК КоличествоУпаковок
	|	ИЗ
	|		ДанныеРегистров КАК ДанныеРегистров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСерий.Серия,
	|		-ТаблицаСерий.Количество,
	|		0,
	|		0
	|	ИЗ
	|		ТаблицаСерий КАК ТаблицаСерий
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСерий.Серия,
	|		0,
	|		ТаблицаСерий.Количество,
	|		ТаблицаСерий.КоличествоУпаковок
	|	ИЗ
	|		ТаблицаСерийПоляСвязи КАК ТаблицаСерий) КАК ТаблицаСерийСОстатками
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерийСОстатками.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).ПроизводительЕГАИС,
	|	ВЫРАЗИТЬ(ТаблицаСерийСОстатками.Серия КАК Справочник.СерииНоменклатуры).Справка2ЕГАИС
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаСерийСОстатками.СвободныйОстаток) > 0
	|		ИЛИ СУММА(ТаблицаСерийСОстатками.Количество) > 0)";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("ТаблицаСерий",Объект.СерииКешДокумента.Выгрузить());
	Запрос.УстановитьПараметр("Номенклатура",СтрокаТоваров.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",СтрокаТоваров.Характеристика);
	
	Запрос.УстановитьПараметр("ВсеСерии",Ложь);
	Если Не СкладыВТЧ Тогда
		Запрос.УстановитьПараметр("Склад",Склад);
	Иначе
		Запрос.УстановитьПараметр("Склад",СтрокаТоваров.Склад);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Регистратор",Регистратор);
	
	Для каждого ДобавляемыйПараметр Из ДобавляемыеПараметры Цикл
		
		Запрос.УстановитьПараметр(ДобавляемыйПараметр, СтрокаТоваров[ДобавляемыйПараметр]);
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КоэффициентУпаковки", РеквизитыУпаковки.Коэффициент);
	Запрос.УстановитьПараметр("ПересчитыватьУпаковки", ПересчитыватьУпаковки);
	
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Если Объект.Серии.Количество() = 0 Тогда
		Элементы.ГруппаСтраницыСерии.ТекущаяСтраница = Элементы.СтраницаНетОстатков;
		Элементы.РаспределитьОстаток.Видимость = Ложь;
		Элементы.ЗаполнитьПоFEFO.Видимость = Ложь;
		Элементы.Упаковка.Видимость = Ложь;
	Иначе
		
		Элементы.Упаковка.Видимость = Истина;
		Элементы.ЗаполнитьПоFEFO.Видимость = Ложь;
		Элементы.РаспределитьОстаток.Видимость = Истина;
		
		Элементы.ГруппаСтраницыСерии.ТекущаяСтраница = Элементы.СтраницаСерии;
		
	КонецЕсли;
		
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	ПредставлениеОбъемаРаботы = НСтр("ru = 'Товар %НомерТекущейСтроки% из %ВсегоТоваров%:'");
	ПредставлениеОбъемаРаботы = СтрЗаменить(ПредставлениеОбъемаРаботы,"%НомерТекущейСтроки%",Строка(НомерТекущейСтрокиТоваров));
	ПредставлениеОбъемаРаботы = СтрЗаменить(ПредставлениеОбъемаРаботы,"%ВсегоТоваров%",Объект.ТоварыКешДокумента.Количество());
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекущуюСтроку(Направление)
	
	СохранитьВводСерийВКеше();
	НомерТекущейСтрокиТоваров = НомерТекущейСтрокиТоваров + Направление;
	
	Упаковка = Неопределено;
	Инициализировать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуЕГАИС("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтаФорма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьОстаток(Команда)
	КоличествоКРаспределению = Количество - КоличествоСерий;
	
	Если Количество = 0 Тогда
		Предупреждение(НСтр("ru = 'В документе не указано количество товара. Распределение по сериям невозможно.'"));
		Возврат;
	ИначеЕсли КоличествоКРаспределению <= 0 Тогда
		Предупреждение(НСтр("ru = 'Все количество товара, указанное в документе, распределено по сериям.'"));
		Возврат;
	КонецЕсли;	
	
	КоэффициентУпаковки = КоэффициентУпаковки(Упаковка, Номенклатура);
	
	Для Каждого ИдентификаторСтроки Из Элементы.Серии.ВыделенныеСтроки Цикл
		
		Если КоличествоКРаспределению <= 0 Тогда
			Прервать;
		КонецЕсли;
	
		СтрокаСерии = Объект.Серии.НайтиПоИдентификатору(ИдентификаторСтроки);
		
		КоличествоНаСтроку = Макс(Мин(КоличествоКРаспределению, СтрокаСерии.СвободныйОстаток), 0);
		КоличествоКРаспределению = КоличествоКРаспределению - КоличествоНаСтроку;
		КоличествоСерий = КоличествоСерий + КоличествоНаСтроку;
		
		СтрокаСерии.КоличествоУпаковок = СтрокаСерии.КоличествоУпаковок + КоличествоНаСтроку;
		СтрокаСерии.СвободныйОстаток = СтрокаСерии.СвободныйОстаток - КоличествоНаСтроку;
		СтрокаСерии.Количество = СтрокаСерии.КоличествоУпаковок * КоэффициентУпаковки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоэффициентУпаковки(Упаковка, Номенклатура)
	Возврат 1;
КонецФункции

&НаСервере
Процедура УпаковкаПриИзмененииСервер()
	
	СохранитьВводСерийВКеше();
	Инициализировать(Истина);
	
КонецПроцедуры

// Конец области прочего

// Конец области служебных процедур и функций
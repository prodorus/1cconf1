Перем СписокВидовДокументов Экспорт;
Перем ПрефиксыОрганизации Экспорт;
Перем ПредставленияТиповДокументов;
Перем ДокументыВыплаты;
Перем ИменаТиповДокументов;
Перем ХарактерВыплатыДокументов;
Перем ИменаПоляДатыВыплатыДокументов;
Перем ОписаниеТиповРегистраторов;
Перем ОписаниеНаборовЗаписейРегистраторов;
Перем ОбрабатыватьНДФЛпоИФ;
Перем ДоходыФиксированнойДатыПолучения;

////////////////////////////////////////////////////////////////////////////////

Процедура ВписатьВНаборЗаписейДатуДокумента(Регистратор, НаборЗаписей, СтараяДата, НоваяДата)  
	
	ПоляДат = ПоляЗависящиеОтДатыДокумента(Регистратор, НаборЗаписей);
	Если Не ЗначениеЗаполнено(ПоляДат) Тогда
		Возврат
	КонецЕсли;
	
	Если НаборЗаписей.Метаданные().Имя = "НДФЛРасчетыСБюджетом" Тогда
		ПропускатьСтрокиУдержанногоНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УпрощенныйУчетНДФЛ");
	Иначе
		ПропускатьСтрокиУдержанногоНДФЛ = Ложь
	КонецЕсли;
	
	НаборЗаписей.Прочитать();
	Для каждого СтрокаНабора Из НаборЗаписей Цикл
		Для каждого Поле Из ПоляДат Цикл
			Если ПропускатьСтрокиУдержанногоНДФЛ И Поле = "Период" Тогда
				Если СтрокаНабора.ВидСтроки = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			Если НачалоДня(СтрокаНабора[Поле]) = НачалоДня(СтараяДата) Тогда
				СтрокаНабора[Поле] = НоваяДата
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВписатьВНаборыЗаписейДатуВыплаты(Регистратор, Движения, СтараяДата, НоваяДата, РазрешеноЗаменятьКонецМесяца)  
	
	Для каждого НаборЗаписей Из Движения Цикл
		
		ПоляДат = ПоляЗависящиеОтДатыВыплаты(Регистратор, НаборЗаписей);
		Если Не ЗначениеЗаполнено(ПоляДат) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРегистра = НаборЗаписей.Метаданные().Имя;
		
		НаборЗаписей.Прочитать();
		Если ИмяРегистра = "НДФЛСведенияОДоходах" Тогда
			Для каждого СтрокаНабора Из НаборЗаписей Цикл
				Если ДоходыФиксированнойДатыПолучения[СтрокаНабора.КодДохода] = Истина Тогда
					Продолжить;
				КонецЕсли;	
				Если НачалоДня(СтрокаНабора.ДатаПолученияДохода) = НачалоДня(СтараяДата) Тогда
					СтрокаНабора.ДатаПолученияДохода = НоваяДата;
					СтрокаНабора.Период = КонецМесяца(НоваяДата);
				КонецЕсли;
			КонецЦикла;
		Иначе
			ДатыУдержанияНалога = Новый Массив;
			Для каждого СтрокаНабора Из НаборЗаписей Цикл
				Для каждого Поле Из ПоляДат Цикл
					Если ИмяРегистра = "НДФЛРасчетыСБюджетом" И Поле = "Период" Тогда
						Если СтрокаНабора.ВидСтроки <> Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					Если Поле <> "Период" И Не РазрешеноЗаменятьКонецМесяца И КонецДня(СтрокаНабора[Поле]) = КонецМесяца(СтрокаНабора[Поле]) Тогда
						Продолжить;
					КонецЕсли;
					Если НачалоДня(СтрокаНабора[Поле]) = НачалоДня(СтараяДата) Тогда
						СтрокаНабора[Поле] = НоваяДата;
						Если ИмяРегистра = "НДФЛРасчетыСБюджетом" И Поле = "Период" И СтрокаНабора.ВидСтроки = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание Тогда
							СрокУплаты = ?(СтрокаНабора.СрокПеречисления = Перечисления.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные, НачалоДня(КонецМесяца(СтрокаНабора.Период)), КонецДня(СтрокаНабора.Период) + 1);
							Если ДатыУдержанияНалога.Найти(СрокУплаты) = Неопределено Тогда
								ДатыУдержанияНалога.Добавить(СрокУплаты)
							КонецЕсли;
							СтрокаНабора.КрайнийСрокУплаты = СрокУплаты;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ИмяРегистра = "НДФЛРасчетыСБюджетом" Тогда
				НаборЗаписей.ЗаполнитьКрайнийСрокУплаты(ДатыУдержанияНалога)
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВписатьВНаборыЗаписейДатыВыплат(Регистратор, Движения, СтараяДата, НоваяДата, СтарыеДаты, НовыеДаты)  
	
	Для каждого НаборЗаписей Из Движения Цикл
		
		ПоляДат = ПоляЗависящиеОтДатыВыплаты(Регистратор, НаборЗаписей);
		Если Не ЗначениеЗаполнено(ПоляДат) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРегистра = НаборЗаписей.Метаданные().Имя;
		
		НаборЗаписей.Прочитать();
		Если ИмяРегистра = "НДФЛСведенияОДоходах" Тогда
			Для каждого СтрокаНабора Из НаборЗаписей Цикл
				
				Если ДоходыФиксированнойДатыПолучения[СтрокаНабора.КодДохода] = Истина Тогда
					Продолжить;
				КонецЕсли;
				
				СтараяДатаФизлица = СтараяДата;
				СтрокаИсключения = СтарыеДаты.Найти(СтрокаНабора.ФизЛицо,"ФизЛицо");
				Если СтрокаИсключения <> Неопределено Тогда
					СтараяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
				КонецЕсли;
				НоваяДатаФизлица = НоваяДата;
				СтрокаИсключения = НовыеДаты.Найти(СтрокаНабора.ФизЛицо,"ФизЛицо");
				Если СтрокаИсключения <> Неопределено Тогда
					НоваяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
				КонецЕсли;
				
				Если НачалоДня(СтрокаНабора.ДатаПолученияДохода) = НачалоДня(СтараяДатаФизлица) Тогда
					СтрокаНабора.ДатаПолученияДохода = НоваяДатаФизлица;
					СтрокаНабора.Период = КонецМесяца(НоваяДатаФизлица);
				КонецЕсли;
				
			КонецЦикла;
		Иначе
			ДатыУдержанияНалога = Новый Массив;
			Для каждого СтрокаНабора Из НаборЗаписей Цикл
				
				СтараяДатаФизлица = СтараяДата;
				СтрокаИсключения = СтарыеДаты.Найти(СтрокаНабора.ФизЛицо,"ФизЛицо");
				Если СтрокаИсключения <> Неопределено Тогда
					СтараяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
				КонецЕсли;
				НоваяДатаФизлица = НоваяДата;
				СтрокаИсключения = НовыеДаты.Найти(СтрокаНабора.ФизЛицо,"ФизЛицо");
				Если СтрокаИсключения <> Неопределено Тогда
					НоваяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
				КонецЕсли;
				
				Для каждого Поле Из ПоляДат Цикл
					Если ИмяРегистра = "НДФЛРасчетыСБюджетом" И Поле = "Период" Тогда
						Если СтрокаНабора.ВидСтроки <> Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					Если Поле <> "Период" И КонецДня(СтрокаНабора[Поле]) = КонецМесяца(СтрокаНабора[Поле]) Тогда
						Продолжить;
					КонецЕсли;
					Если НачалоДня(СтрокаНабора[Поле]) = НачалоДня(СтараяДатаФизлица) Тогда
						СтрокаНабора[Поле] = НоваяДатаФизлица;
						Если ИмяРегистра = "НДФЛРасчетыСБюджетом" И Поле = "Период" И СтрокаНабора.ВидСтроки = Перечисления.НДФЛРасчетыСБюджетомВидСтроки.Удержание Тогда
							СрокУплаты = ?(СтрокаНабора.СрокПеречисления = Перечисления.СрокиПеречисляемогоНалога.МежрасчетныеОтпускаИБольничные, НачалоДня(КонецМесяца(СтрокаНабора.Период)), КонецДня(СтрокаНабора.Период) + 1);
							Если ДатыУдержанияНалога.Найти(СрокУплаты) = Неопределено Тогда
								ДатыУдержанияНалога.Добавить(СрокУплаты)
							КонецЕсли;
							СтрокаНабора.КрайнийСрокУплаты = СрокУплаты;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ИмяРегистра = "НДФЛРасчетыСБюджетом" Тогда
				НаборЗаписей.ЗаполнитьКрайнийСрокУплаты(ДатыУдержанияНалога)
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВписатьДатуВыплатыВДанныеНДФЛ(ИмяДокумента, ДокОбъект, СтараяДата, НоваяДата, РазрешеноЗаменятьКонецМесяца)  
	
	Если ИмяДокумента = "НачислениеДивидендовОрганизаций" Тогда
		Возврат
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из ДокОбъект.НДФЛ Цикл
		
		Если Не РазрешеноЗаменятьКонецМесяца И КонецДня(СтрокаТЧ.МесяцНалоговогоПериода) = КонецМесяца(СтрокаТЧ.МесяцНалоговогоПериода) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НачалоДня(СтрокаТЧ.МесяцНалоговогоПериода) = НачалоДня(СтараяДата) Тогда
			СтрокаТЧ.МесяцНалоговогоПериода = НоваяДата;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ОбрабатыватьНДФЛпоИФ Тогда
		Для каждого СтрокаТЧ Из ДокОбъект.НДФЛПоИФ Цикл
			
			Если Не РазрешеноЗаменятьКонецМесяца И КонецДня(СтрокаТЧ.МесяцНалоговогоПериода) = КонецМесяца(СтрокаТЧ.МесяцНалоговогоПериода) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НачалоДня(СтрокаТЧ.МесяцНалоговогоПериода) = НачалоДня(СтараяДата) Тогда
				СтрокаТЧ.МесяцНалоговогоПериода = НоваяДата;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВписатьДатыВыплатВДанныеНДФЛ(ИмяДокумента, ДокОбъект, СтараяДата, НоваяДата, СтарыеДаты, НовыеДаты)  
	
	Если ИмяДокумента = "НачислениеДивидендовОрганизаций" Тогда
		Возврат
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из ДокОбъект.НДФЛ Цикл
		
		Если КонецДня(СтрокаТЧ.МесяцНалоговогоПериода) = КонецМесяца(СтрокаТЧ.МесяцНалоговогоПериода) Тогда
			Продолжить;
		КонецЕсли;
		
		СтараяДатаФизлица = СтараяДата;
		СтрокаИсключения = СтарыеДаты.Найти(СтрокаТЧ.ФизЛицо,"ФизЛицо");
		Если СтрокаИсключения <> Неопределено Тогда
			СтараяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
		КонецЕсли;
		НоваяДатаФизлица = НоваяДата;
		СтрокаИсключения = НовыеДаты.Найти(СтрокаТЧ.ФизЛицо,"ФизЛицо");
		Если СтрокаИсключения <> Неопределено Тогда
			НоваяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
		КонецЕсли;
		
		Если НачалоДня(СтрокаТЧ.МесяцНалоговогоПериода) = НачалоДня(СтараяДатаФизлица) Тогда
			СтрокаТЧ.МесяцНалоговогоПериода = НоваяДатаФизлица;
		КонецЕсли;
	
	КонецЦикла;	
	
	Если ОбрабатыватьНДФЛпоИФ Тогда
		Для каждого СтрокаТЧ Из ДокОбъект.НДФЛПоИФ Цикл
			
			Если КонецДня(СтрокаТЧ.МесяцНалоговогоПериода) = КонецМесяца(СтрокаТЧ.МесяцНалоговогоПериода) Тогда
				Продолжить;
			КонецЕсли;
			
			СтараяДатаФизлица = СтараяДата;
			СтрокаИсключения = СтарыеДаты.Найти(СтрокаТЧ.ФизЛицо,"ФизЛицо");
			Если СтрокаИсключения <> Неопределено Тогда
				СтараяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
			КонецЕсли;
			НоваяДатаФизлица = НоваяДата;
			СтрокаИсключения = НовыеДаты.Найти(СтрокаТЧ.ФизЛицо,"ФизЛицо");
			Если СтрокаИсключения <> Неопределено Тогда
				НоваяДатаФизлица = СтрокаИсключения.ДатаВыплатыДохода;
			КонецЕсли;
			
			Если НачалоДня(СтрокаТЧ.МесяцНалоговогоПериода) = НачалоДня(СтараяДатаФизлица) Тогда
				СтрокаТЧ.МесяцНалоговогоПериода = НоваяДатаФизлица;
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьОписаниеНабораЗаписей(Регистратор, ИмяРегистра)

	НоваяСтрока = ОписаниеНаборовЗаписейРегистраторов.Добавить();
	НоваяСтрока.ИмяРегистратора = Регистратор;
	НоваяСтрока.ИмяРегистра = ИмяРегистра;
	
	ПоляДат = Новый Массив();
	
	ИмяДокументаКорректировкиРегистров = СтрЗаменить(ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ИмяДокументаКорректировкиРегистров(),"Документ.","");
	Если Регистратор = ИмяДокументаКорректировкиРегистров Или Регистратор = "ПереносДанных" Или Регистратор = "НДФЛиЕСНДоходыИНалоги" Тогда
		
	ИначеЕсли ИмяРегистра = "ЗарплатаЗаМесяцОрганизаций" И Регистратор = "ЗарплатаКВыплатеОрганизаций" Тогда
		
	ИначеЕсли ИмяРегистра = "ДополнительныеНачисленияРаботниковОрганизаций" 
		Или ИмяРегистра = "БУДополнительныеНачисления" 
		Или ИмяРегистра = "НДФЛСведенияОДоходах" Тогда
		ПоляДат.Добавить("ПериодРегистрации")
	ИначеЕсли ИмяРегистра = "НДФЛРасчетыСБюджетом" Тогда
		ПоляДат.Добавить("Период")
	ИначеЕсли ИмяРегистра = "ВзаиморасчетыСДепонентамиОрганизаций" 
		Или ИмяРегистра = "АвансовыеПлатежиИностранцевПоНДФЛ" 
		Или ИмяРегистра = "РасчетыНалоговыхАгентовСБюджетомПоНДФЛ" Тогда
		ПоляДат.Добавить("Период")
	ИначеЕсли ИмяРегистра = "ВзаиморасчетыСРаботникамиОрганизаций" Или ИмяРегистра = "ЗарплатаЗаМесяцОрганизаций" Тогда
		Если Регистратор = "НачислениеДивидендовОрганизаций" 
			Или Регистратор = "НДФЛПерерасчет"
			Или Регистратор = "НДФЛВозвратНалога"
			Или Регистратор = "ДепонированиеОрганизаций"
			Или Регистратор = "ПлатежноеПоручениеИсходящее"
			Или Регистратор = "РасходныйКассовыйОрдер"
			Или Регистратор = "ЗарплатаКВыплатеОрганизаций" Тогда
			ПоляДат.Добавить("Период")
		КонецЕсли;
	ИначеЕсли ИмяРегистра = "НДФЛПредоставленныеСтандартныеВычетыФизЛиц" Или ИмяРегистра = "НДФЛИмущественныеВычетыФизлиц" Тогда
		Если Регистратор = "НДФЛПерерасчет" Тогда
			ПоляДат.Добавить("Период")
		КонецЕсли;
	ИначеЕсли ИмяРегистра = "НДФЛКЗачету" Тогда
		Если Регистратор = "НДФЛПерерасчет" 
			Или Регистратор = "НДФЛВозвратНалога" Тогда
			ПоляДат.Добавить("Период")
		КонецЕсли;
	КонецЕсли;
	НоваяСтрока.ПоляЗависящиеОтДатыДокумента = ПоляДат;
	ПоляДат = Новый Массив();
	Если Регистратор = "НДФЛВозвратНалога" Или Регистратор = "НДФЛПерерасчет" Или Регистратор = ИмяДокументаКорректировкиРегистров Или Регистратор = "ПереносДанных" Или Регистратор = "НДФЛиЕСНДоходыИНалоги" Тогда
		
	ИначеЕсли ИмяРегистра = "НДФЛСведенияОДоходах" Тогда
		ПоляДат.Добавить("ДатаПолученияДохода")
	ИначеЕсли ИмяРегистра = "НДФЛРасчетыСБюджетом" Тогда
		ПоляДат.Добавить("МесяцНалоговогоПериода");
		ПоляДат.Добавить("Период");
	ИначеЕсли ИмяРегистра = "РасчетыНалоговыхАгентовСБюджетомПоНДФЛ" Тогда
		УпрощенныйУчетНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УпрощенныйУчетНДФЛ");
		Если УпрощенныйУчетНДФЛ Тогда
			ПоляДат.Добавить("Период")
		КонецЕсли;
	ИначеЕсли ИмяРегистра = "НДФЛПредоставленныеСтандартныеВычетыФизЛиц" Тогда
		ПоляДат.Добавить("МесяцНалоговогоПериода")
	КонецЕсли;
	НоваяСтрока.ПоляЗависящиеОтДатыВыплаты = ПоляДат;
	
КонецПроцедуры

Процедура ОтложитьДвиженияВоВременноеХранилище(ТаблицаДокументов)  
	
	НачатьТранзакцию();
	Для каждого СтрокаТЗ Из ТаблицаДокументов Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЗ.ДатаВыплаты) Тогда
			Прервать;
		КонецЕсли;
		Если Не СтрокаТЗ.ЭтоВыплата Тогда
			Движения = СтрокаТЗ.Ссылка.ПолучитьОбъект().Движения;
			НаборЗаписей = Движения.НДФЛРасчетыСБюджетом;
			ВременноеХранилище = Движения.НДФЛВременныйУчет;
			ВременноеХранилище.Прочитать();
			Если ВременноеХранилище.Количество() > 0 Тогда
				Продолжить;
			КонецЕсли;
			НаборЗаписей.Прочитать();
			ВременноеХранилище.Загрузить(НаборЗаписей.Выгрузить());
			НаборЗаписей.Очистить();
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
			ВременноеХранилище.ОбменДанными.Загрузка = Истина;
			ВременноеХранилище.Записать();
		КонецЕсли;
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ПереписатьДатыВДокументах(ТаблицаДокументов, ДатыИсключения, ДатыИсключенияДокументов)  
	
	Если ДоходыФиксированнойДатыПолучения = Неопределено Тогда
		ДоходыФиксированнойДатыПолучения = ДоходыФиксированнойДатыПолученияДохода();
	КонецЕсли;
	
	НачатьТранзакцию();
	Для каждого СтрокаТЗ Из ТаблицаДокументов Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЗ.ИмяПоляДатыВыплаты) И Не ЗначениеЗаполнено(СтрокаТЗ.ДатаВыплаты) Тогда
			Прервать;
		КонецЕсли;
		
		НовыеДатыИсключения = ДатыИсключения[СтрокаТЗ.Ссылка];
		СтарыеДатыИсключения = ДатыИсключенияДокументов[СтрокаТЗ.Ссылка];
		Если СтрокаТЗ.ДатаДокумента = СтрокаТЗ.ПозицияДокумента И СтрокаТЗ.ДатаВыплатыВДокументе = СтрокаТЗ.ДатаВыплаты И (СтарыеДатыИсключения = Неопределено Или ОбщегоНазначенияЗК.ТаблицыИдентичны(СтарыеДатыИсключения, НовыеДатыИсключения)) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		Если СтрокаТЗ.ДатаДокумента <> СтрокаТЗ.ПозицияДокумента Тогда
			НоваяДата = СтрокаТЗ.ПозицияДокумента;
			ДокОбъект.Дата = НоваяДата;
			Если СтрокаТЗ.ИмяДокумента <> "НачислениеЗарплатыРаботникамОрганизаций" Тогда
				Для каждого НаборЗаписей Из ДокОбъект.Движения Цикл
					ВписатьВНаборЗаписейДатуДокумента(СтрокаТЗ.ИмяДокумента, НаборЗаписей, СтрокаТЗ.ДатаДокумента, НоваяДата)
				КонецЦикла;
			КонецЕсли;
			СтрокаТЗ.ДатаДокумента = СтрокаТЗ.ПозицияДокумента;
		КонецЕсли;
		Если СтрокаТЗ.ДатаВыплатыВДокументе <> СтрокаТЗ.ДатаВыплаты Или СтарыеДатыИсключения <> Неопределено И Не ОбщегоНазначенияЗК.ТаблицыИдентичны(СтарыеДатыИсключения, НовыеДатыИсключения) Тогда
			НоваяДата = СтрокаТЗ.ДатаВыплаты;
			Если СтрокаТЗ.ЭтоВыплата Тогда
				Если СтрокаТЗ.ИмяДокумента = "ПлатежныйОрдерСписаниеДенежныхСредств" 
					Или СтрокаТЗ.ИмяДокумента = "ВедомостьВБанк"
					Или СтрокаТЗ.ИмяДокумента = "ВедомостьВКассу" Тогда
					ДокОбъект[СтрокаТЗ.ИмяПоляДатыВыплаты] = НоваяДата;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(СтрокаТЗ.ИмяПоляДатыВыплаты) Тогда  // документы-начисления
				ДокОбъект[СтрокаТЗ.ИмяПоляДатыВыплаты] = НоваяДата;
				Если СтарыеДатыИсключения = Неопределено Тогда
					ВписатьДатуВыплатыВДанныеНДФЛ(СтрокаТЗ.ИмяДокумента, ДокОбъект, СтрокаТЗ.ДатаВыплатыВДокументе, НоваяДата, СтрокаТЗ.РазрешеноЗаменятьКонецМесяца);
					ВписатьВНаборыЗаписейДатуВыплаты(СтрокаТЗ.ИмяДокумента, ДокОбъект.Движения, СтрокаТЗ.ДатаВыплатыВДокументе, НоваяДата, СтрокаТЗ.РазрешеноЗаменятьКонецМесяца)
				Иначе
					ДокОбъект.ДатыВыплаты.Загрузить(НовыеДатыИсключения);
					ВписатьДатыВыплатВДанныеНДФЛ(СтрокаТЗ.ИмяДокумента, ДокОбъект, СтрокаТЗ.ДатаВыплатыВДокументе, НоваяДата, СтарыеДатыИсключения, НовыеДатыИсключения);
					ВписатьВНаборыЗаписейДатыВыплат(СтрокаТЗ.ИмяДокумента, ДокОбъект.Движения, СтрокаТЗ.ДатаВыплатыВДокументе, НоваяДата, СтарыеДатыИсключения, НовыеДатыИсключения)
				КонецЕсли;
			КонецЕсли;
			СтрокаТЗ.ДатаВыплатыВДокументе = СтрокаТЗ.ДатаВыплаты;
			ДатыИсключенияДокументов.Вставить(СтрокаТЗ.Ссылка, НовыеДатыИсключения);
		КонецЕсли;
		Для каждого НаборЗаписей Из ДокОбъект.Движения Цикл
			Если НаборЗаписей.Модифицированность() Тогда
				НаборЗаписей.ОбменДанными.Загрузка = Истина;
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЦикла;
		ДокОбъект.ОбменДанными.Загрузка = Истина;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Процедура ПровестиЦепочкуДокументов(ТаблицаДокументов, ТолькоВыплаты = Ложь)
	
	Если ТолькоВыплаты И ТаблицаДокументов.НайтиСтроки(Новый Структура("ЭтоВыплата", Истина)).Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Для каждого СтрокаТЗ Из ТаблицаДокументов Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЗ.ДатаВыплаты) Тогда
			Прервать;
		КонецЕсли;
		Если СтрокаТЗ.ЭтоВыплата Тогда
			НачатьТранзакцию();
			ДокОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
			Отказ = Ложь;
			Если СтрокаТЗ.ИмяДокумента = "ЗарплатаКВыплатеОрганизаций" Тогда
				ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиВзаиморасчеты(ДокОбъект, Отказ, "", Истина);
			ИначеЕсли СтрокаТЗ.ИмяДокумента = "ПлатежноеПоручениеИсходящее" Тогда
				ДокОбъект.ДвиженияПоРегистрамРегл(Неопределено, Отказ, "", Истина)
			ИначеЕсли СтрокаТЗ.ИмяДокумента = "ПлатежныйОрдерСписаниеДенежныхСредств" Тогда
				ДокОбъект.ДвиженияПоРегистрамЗарплРегл(Неопределено, Отказ, "", Истина)
			ИначеЕсли СтрокаТЗ.ИмяДокумента = "РасходныйКассовыйОрдер" Тогда
				ДокОбъект.ДвиженияПоЗарплатеРегл(Отказ, "", Истина)
			ИначеЕсли СтрокаТЗ.ИмяДокумента = "ДепонированиеОрганизаций" Тогда
				ДокОбъект.СформироватьРасчетыПоНДФЛ()
			ИначеЕсли СтрокаТЗ.ИмяДокумента = "ВедомостьВБанк" Или СтрокаТЗ.ИмяДокумента = "ВедомостьВКассу" Тогда
				МодульВедомостей = ОбщийМодуль("ВедомостиСервис");
				Если МодульВедомостей <> Неопределено Тогда
					МодульВедомостей.СоздатьДвижениеПоНДФЛРасчетыСБюджетом(ДокОбъект, ДокОбъект.ТекстТаблицыВыплаты());
				КонецЕсли;
			ИначеЕсли СтрокаТЗ.ИмяДокумента = "" Тогда
			Иначе
			КонецЕсли;
			ДокОбъект.Движения.НДФЛРасчетыСБюджетом.ЗаполнитьКрайнийСрокУплаты();
			ДокОбъект.Движения.НДФЛРасчетыСБюджетом.ОбменДанными.Загрузка = Истина;
			ДокОбъект.Движения.НДФЛРасчетыСБюджетом.Записать();
			НаборЗаписей = ДокОбъект.Движения.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ;
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			Для каждого СтрокаНабора Из НаборЗаписей Цикл
				СтрокаНабора.МесяцНалоговогоПериода = НачалоМесяца(СтрокаНабора.МесяцНалоговогоПериода)
			КонецЦикла;
			НаборЗаписей.Записать();
			ЗафиксироватьТранзакцию();
		ИначеЕсли Не ТолькоВыплаты Тогда
			НачатьТранзакцию();
			Движения = СтрокаТЗ.Ссылка.ПолучитьОбъект().Движения;
			НаборЗаписей = Движения.НДФЛРасчетыСБюджетом;
			ВременноеХранилище = Движения.НДФЛВременныйУчет;
			ВременноеХранилище.Прочитать();
			НаборЗаписей.Загрузить(ВременноеХранилище.Выгрузить());
			ВременноеХранилище.Очистить();
			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.Записать();
			ВременноеХранилище.ОбменДанными.Загрузка = Истина;
			ВременноеХранилище.Записать();
			ЗафиксироватьТранзакцию();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьОписаниеНаборовЗаписейРегистраторов()

	Если ОписаниеНаборовЗаписейРегистраторов = Неопределено Тогда
		ОписаниеНаборовЗаписейРегистраторов = Новый ТаблицаЗначений;
		ОписаниеНаборовЗаписейРегистраторов.Колонки.Добавить("ИмяРегистратора", Новый ОписаниеТипов("Строка"));
		ОписаниеНаборовЗаписейРегистраторов.Колонки.Добавить("ИмяРегистра", Новый ОписаниеТипов("Строка"));
		ОписаниеНаборовЗаписейРегистраторов.Колонки.Добавить("ПоляЗависящиеОтДатыДокумента");
		ОписаниеНаборовЗаписейРегистраторов.Колонки.Добавить("ПоляЗависящиеОтДатыВыплаты");
	КонецЕсли;

КонецПроцедуры

Процедура УлучшитьЦепочкуДокументов(ВременнаяТаблица)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗарплатаКВыплатеОрганизаций.Ссылка,
	|	ЗарплатаКВыплатеОрганизаций.ДокументОснование
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
	|ГДЕ
	|	ЗарплатаКВыплатеОрганизаций.Ссылка В(&ЗарплатыКВыплате)";
	Запрос.УстановитьПараметр("ЗарплатыКВыплате", ВременнаяТаблица.ВыгрузитьКолонку("ДокументОснование"));
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		ДокументыИОснования =Новый Соответствие;
		Пока Выборка.Следующий() Цикл
	    	ДокументыИОснования.Вставить(Выборка.Ссылка, Выборка.ДокументОснование)
		КонецЦикла;
		Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
			Если ЗначениеЗаполнено(СтрокаТЗ.ДокументОснование) Тогда
				СтрокаТЗ.ДокументНачисление = СтрокаТЗ.ДокументОснование;
				ОснованиеВыплаты = ДокументыИОснования[СтрокаТЗ.ДокументОснование];
				Если ЗначениеЗаполнено(ОснованиеВыплаты) Тогда
					СтрокаТЗ.ДокументНачисление = ОснованиеВыплаты;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Запрос.УстановитьПараметр("ТаблицаДокументов", ВременнаяТаблица);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДатаДокумента,
	|	ТаблицаДокументов.ПозицияДокумента,
	|	ТаблицаДокументов.ДатаВыплаты,
	|	ТаблицаДокументов.ДатаВыплатыВДокументе,
	|	ТаблицаДокументов.Номер,
	|	ТаблицаДокументов.ДопустимПереносДатыВДругойМесяц,
	|	ТаблицаДокументов.ДопустимПереносДаты,
	|	ТаблицаДокументов.РазрешеноЗаменятьКонецМесяца,
	|	ТаблицаДокументов.ЭтоВыплата,
	|	ТаблицаДокументов.ИмяДокумента,
	|	ТаблицаДокументов.ИмяПоляДатыВыплаты,
	|	ТаблицаДокументов.Сотрудники,
	|	ТаблицаДокументов.Документ,
	|	ТаблицаДокументов.ХарактерВыплаты,
	|	ТаблицаДокументов.ДокументНачисление,
	|	ТаблицаДокументов.РасшифровкаВыплаты,
	|	ТаблицаДокументов.ДокументОснование
	|ПОМЕСТИТЬ ВТТаблицаДокументов
	|ИЗ
	|	&ТаблицаДокументов КАК ТаблицаДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДатаДокумента,
	|	ТаблицаДокументов.ДатаВыплаты,
	|	ТаблицаДокументов.ДатаВыплатыВДокументе,
	|	ВЫБОР
	|		КОГДА ТаблицаВыплат.Ссылка ЕСТЬ NULL 
	|			ТОГДА ТаблицаДокументов.ПозицияДокумента
	|		КОГДА ТаблицаДокументов.ДатаДокумента <= ТаблицаВыплат.ДатаДокумента
	|			ТОГДА ТаблицаДокументов.ПозицияДокумента
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ТаблицаВыплат.ДатаДокумента, СЕКУНДА, -1)
	|	КОНЕЦ КАК ПозицияДокумента,
	|	ТаблицаДокументов.Номер,
	|	ТаблицаДокументов.ЭтоВыплата,
	|	ТаблицаДокументов.ДопустимПереносДатыВДругойМесяц,
	|	ТаблицаДокументов.ДопустимПереносДаты,
	|	ТаблицаДокументов.РазрешеноЗаменятьКонецМесяца,
	|	ТаблицаДокументов.ИмяДокумента,
	|	ТаблицаДокументов.ИмяПоляДатыВыплаты,
	|	ТаблицаДокументов.Сотрудники,
	|	ТаблицаДокументов.Документ,
	|	ТаблицаДокументов.ХарактерВыплаты,
	|	ТаблицаДокументов.РасшифровкаВыплаты,
	|	ТаблицаДокументов.ДокументНачисление,
	|	ТаблицаДокументов.ДокументОснование
	|ИЗ
	|	ВТТаблицаДокументов КАК ТаблицаДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаДокументов КАК ТаблицаВыплат
	|		ПО ТаблицаДокументов.Ссылка = ТаблицаВыплат.ДокументНачисление
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПозицияДокумента";
	ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Функция МассивПрефиксовДляРИБИОрганизации(Организация)
	
	МассивПрефиксов = Новый Массив();
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрефиксыИнформационныхБаз.Префикс КАК Префикс
	|ИЗ
	|	РегистрСведений.ПрефиксыИнформационныхБаз КАК ПрефиксыИнформационныхБаз";
	
	ВыборкаУзлов = Запрос.Выполнить().Выбрать();
	Пока ВыборкаУзлов.Следующий() Цикл
		Если Не ПустаяСтрока(ВыборкаУзлов.Префикс) Тогда
			МассивПрефиксов.Добавить(ВыборкаУзлов.Префикс);
		КонецЕсли;
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Префикс = СокрЛП(ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(Организация, "Префикс"));
		Если Префикс <> "" Тогда
			МассивПрефиксов.Добавить(Префикс);
		КонецЕсли;
	КонецЕсли;
	
	Если МассивПрефиксов.Количество() = 0 Тогда
		МассивПрефиксов.Добавить("");
	КонецЕсли;
	
	Возврат МассивПрефиксов;
	
КонецФункции

Функция ОбщийМодуль(Имя)
	
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		Если Метаданные.ОбщиеМодули.Найти(Имя) <> Неопределено Тогда
			Модуль = Вычислить(Имя);
		КонецЕсли;
	#Иначе
		Модуль = Вычислить(Имя);
	#КонецЕсли
	
	Если ТипЗнч(Модуль) <> Тип("ОбщийМодуль") Тогда
		Возврат Неопределено
	КонецЕсли;
	
	Возврат Модуль;
	
КонецФункции // ОбщийМодуль()

Функция ПоляЗависящиеОтДатыДокумента(Регистратор, НаборЗаписей)

	СоздатьОписаниеНаборовЗаписейРегистраторов();
	ИмяРегистра = НаборЗаписей.Метаданные().Имя;
	СтруктураПоиска = Новый Структура("ИмяРегистратора, ИмяРегистра", Регистратор, ИмяРегистра);
	СтрокиОписания = ОписаниеНаборовЗаписейРегистраторов.НайтиСтроки(СтруктураПоиска); 
	Если СтрокиОписания.Количество() = 0 Тогда
		ДополнитьОписаниеНабораЗаписей(Регистратор, ИмяРегистра);
		СтрокиОписания = ОписаниеНаборовЗаписейРегистраторов.НайтиСтроки(СтруктураПоиска); 
	КонецЕсли;
	
	Возврат СтрокиОписания[0].ПоляЗависящиеОтДатыДокумента
	
КонецФункции 

Функция ПоляЗависящиеОтДатыВыплаты(Регистратор, НаборЗаписей)
	
	СоздатьОписаниеНаборовЗаписейРегистраторов();
	ИмяРегистра = НаборЗаписей.Метаданные().Имя;
	СтруктураПоиска = Новый Структура("ИмяРегистратора, ИмяРегистра", Регистратор, ИмяРегистра);
	СтрокиОписания = ОписаниеНаборовЗаписейРегистраторов.НайтиСтроки(СтруктураПоиска); 
	Если СтрокиОписания.Количество() = 0 Тогда
		ДополнитьОписаниеНабораЗаписей(Регистратор, ИмяРегистра);
		СтрокиОписания = ОписаниеНаборовЗаписейРегистраторов.НайтиСтроки(СтруктураПоиска); 
	КонецЕсли;
	
	Возврат СтрокиОписания[0].ПоляЗависящиеОтДатыВыплаты
	
КонецФункции 

Функция ДоходыФиксированнойДатыПолученияДохода()
	
	Доходы = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоходыНДФЛ.Ссылка
	|ИЗ
	|	Справочник.ДоходыНДФЛ КАК ДоходыНДФЛ
	|ГДЕ
	|	ДоходыНДФЛ.СоответствуетОплатеТруда";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Доходы.Вставить(Выборка.Ссылка, Истина);
	КонецЦикла;
	Доходы.Вставить(Справочники.ДоходыНДФЛ.Код2610ПоСтавке35, Истина);
	
	Возврат Доходы
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Процедура ПерепровестиДокументы(ТаблицаДокументов, ДатыИсключения, ДатыИсключенияДокументов) Экспорт 

	ПереписатьДатыВДокументах(ТаблицаДокументов, ДатыИсключения, ДатыИсключенияДокументов);
	
	УпрощенныйУчетНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УпрощенныйУчетНДФЛ");
	Если Не УпрощенныйУчетНДФЛ Тогда
		ОтложитьДвиженияВоВременноеХранилище(ТаблицаДокументов);
	КонецЕсли;
	
	ПровестиЦепочкуДокументов(ТаблицаДокументов, УпрощенныйУчетНДФЛ);

КонецПроцедуры

Функция ТаблицаДокументовПоНДФЛ(Организация, ОтчетныйПериод, УчитыватьДокументыПрошлогоМесяца) Экспорт 
	
	Если ОписаниеТиповРегистраторов = Неопределено Тогда
		ИменаДокументовВыплаты = Новый Массив;
		ИменаДокументовВыплаты.Добавить("ЗарплатаКВыплатеОрганизаций");
		ИменаДокументовВыплаты.Добавить("ВедомостьВБанк");
		ИменаДокументовВыплаты.Добавить("ВедомостьВКассу");
		ИменаДокументовВыплаты.Добавить("ДепонированиеОрганизаций");
		ИменаДокументовВыплаты.Добавить("ПлатежноеПоручениеИсходящее");
		ИменаДокументовВыплаты.Добавить("ПлатежныйОрдерСписаниеДенежныхСредств");
		ИменаДокументовВыплаты.Добавить("РасходныйКассовыйОрдер");
		ВозможныеИменаПоляДатыВыплаты = Новый Массив;
		ВозможныеИменаПоляДатыВыплаты.Добавить("ДатаВыплатыДохода");
		ВозможныеИменаПоляДатыВыплаты.Добавить("ДатаВыплаты");
		ВозможныеИменаПоляДатыВыплаты.Добавить("ДатаВыписки");
		ВозможныеИменаПоляДатыВыплаты.Добавить("ДатаОплаты");
		ХарактерВыплатыДокументов = Новый Соответствие;
		ХарактерВыплатыДокументов.Вставить("НачислениеЗарплатыРаботникамОрганизаций", Перечисления.ХарактерВыплатыЗарплаты.Зарплата);
		ХарактерВыплатыДокументов.Вставить("НачислениеОтпускаРаботникамОрганизаций", Перечисления.ХарактерВыплатыЗарплаты.Отпускные);
		ХарактерВыплатыДокументов.Вставить("НачислениеПоБольничномуЛисту", Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам);
		ХарактерВыплатыДокументов.Вставить("РегистрацияРазовыхНачисленийРаботниковОрганизаций", Перечисления.ХарактерВыплатыЗарплаты.ПрочиеРазовыеНачисления);
		ХарактерВыплатыДокументов.Вставить("ПремииРаботниковОрганизаций", Перечисления.ХарактерВыплатыЗарплаты.Премии);
		СписокВидовДокументов = Новый СписокЗначений;
		СписокВидовДокументов.Добавить("НачислениеЗарплатыРаботникамОрганизаций", "Начисление зарплаты сотрудникам");
		СписокВидовДокументов.Добавить("НачислениеОтпускаРаботникамОрганизаций", "Начисление отпуска сотрудникам");
		СписокВидовДокументов.Добавить("НачислениеПоБольничномуЛисту", "Начисление по больничному листу");
		СписокВидовДокументов.Добавить("РегистрацияРазовыхНачисленийРаботниковОрганизаций", "Регистрация разовых начислений");
		Если Метаданные.Перечисления.ХарактерВыплатыЗарплаты.ЗначенияПеречисления.Найти("Дивиденды") <> Неопределено Тогда
			ХарактерВыплатыДокументов.Вставить("НачислениеДивидендовОрганизаций", Перечисления.ХарактерВыплатыЗарплаты.Дивиденды);
		КонецЕсли;
		СписокРегистраторов = глЗначениеПеременной("глСпискиРегистраторов").НДФЛРасчетыСБюджетом;
		ПредставленияТиповДокументов = Новый Соответствие;
		ИменаТиповДокументов = Новый Соответствие;
		ИменаПоляДатыВыплатыДокументов = Новый Соответствие;
		ДокументыВыплаты = Новый Соответствие;
        ТипыРегистраторов = Новый Массив;
		Для каждого Элемент Из СписокРегистраторов Цикл
			Ссылка = Элемент.Значение.ПустаяСсылка();
			Тип = ТипЗнч(Ссылка);
			ТипыРегистраторов.Добавить(Тип);
			ОписаниеДокумента = Элемент.Представление;
			ОписаниеДокумента = СтрЗаменить(ОписаниеДокумента," организаций","");
			ОписаниеДокумента = СтрЗаменить(ОписаниеДокумента," организации","");
			ПредставленияТиповДокументов.Вставить(Тип, ОписаниеДокумента);
			МетаданныеДокумента = Ссылка.Метаданные();
			ИмяДокумента = МетаданныеДокумента.Имя;
			Если СписокВидовДокументов.НайтиПоЗначению(ИмяДокумента) = Неопределено Тогда
				СписокВидовДокументов.Добавить(ИмяДокумента, ОписаниеДокумента);
			КонецЕсли;
			ИменаТиповДокументов.Вставить(Тип, ИмяДокумента);
			Для каждого ИмяПоляДатыВыплаты Из ВозможныеИменаПоляДатыВыплаты Цикл
				Если МетаданныеДокумента.Реквизиты.Найти(ИмяПоляДатыВыплаты) <> Неопределено Тогда
					ИменаПоляДатыВыплатыДокументов.Вставить(Тип, ИмяПоляДатыВыплаты);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ДокументыВыплаты.Вставить(Тип, ИменаДокументовВыплаты.Найти(ИмяДокумента) <> Неопределено);
			Если ЗначениеЗаполнено(ХарактерВыплатыДокументов[ИмяДокумента]) Тогда
				ХарактерВыплатыДокументов.Вставить(Тип, ХарактерВыплатыДокументов[ИмяДокумента]);
			Иначе
				ХарактерВыплатыДокументов.Вставить(Тип, Перечисления.ХарактерВыплатыЗарплаты.ПустаяСсылка());
			КонецЕсли;
			Если ИмяДокумента = "НачислениеЗарплатыРаботникамОрганизаций" Тогда
				ОбрабатыватьНДФЛпоИФ = МетаданныеДокумента.ТабличныеЧасти.Найти("НДФЛпоИФ") <> Неопределено
			КонецЕсли;
		КонецЦикла;
		ОписаниеТиповРегистраторов = Новый ОписаниеТипов(ТипыРегистраторов)
	КонецЕсли;
	Если ПрефиксыОрганизации = Неопределено Тогда
		ПрефиксыОрганизации = МассивПрефиксовДляРИБИОрганизации(Организация);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияЗК.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(ОтчетныйПериод));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецКвартала(ОтчетныйПериод));
	
	УпрощенныйУчетНДФЛ = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "УпрощенныйУчетНДФЛ");
	Если УпрощенныйУчетНДФЛ Тогда
		Если УчитыватьДокументыПрошлогоМесяца Тогда
			Запрос.УстановитьПараметр("НачалоПериода", ДобавитьМесяц(НачалоКвартала(ОтчетныйПериод), -1));
		КонецЕсли;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗарплатаКВыплатеОрганизаций.Ссылка,
		|	ЗарплатаКВыплатеОрганизаций.Дата,
		|	ЗарплатаКВыплатеОрганизаций.Номер,
		|	ЗарплатаКВыплатеОрганизаций.КраткийСоставДокумента,
		|	ЗарплатаКВыплатеОрганизаций.Дата КАК ДатаВыплаты,
		|	ЗарплатаКВыплатеОрганизаций.ДокументОснование,
		|	ЗарплатаКВыплатеОрганизаций.ХарактерВыплаты
		|ПОМЕСТИТЬ ВТДокументыВыплат
		|ИЗ
		|	Документ.ЗарплатаКВыплатеОрганизаций КАК ЗарплатаКВыплатеОрганизаций
		|ГДЕ
		|	ЗарплатаКВыплатеОрганизаций.Организация = &Организация";
		Запрос.Выполнить();
	Иначе
		Запрос.УстановитьПараметр("НачалоПрошлогоПериода", ДобавитьМесяц(НачалоКвартала(ОтчетныйПериод), -3));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(НДФЛРасчетыСБюджетом.Период) КАК ДатаПоследнейВыплаты
		|ИЗ
		|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
		|ГДЕ
		|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
		|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
		|	И НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоПрошлогоПериода И &НачалоПериода
		|	И НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Удержание)";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.ДатаПоследнейВыплаты) Тогда
			Запрос.УстановитьПараметр("НачалоПериода", Мин(Выборка.ДатаПоследнейВыплаты + 1, НачалоКвартала(ОтчетныйПериод)));
		КонецЕсли;
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВзаиморасчетыСРаботникамиОрганизаций.Регистратор КАК Ссылка,
		|	ВзаиморасчетыСРаботникамиОрганизаций.Регистратор.Дата КАК Дата,
		|	ВзаиморасчетыСРаботникамиОрганизаций.Регистратор.Номер КАК Номер,
		|	ЕСТЬNULL(ВзаиморасчетыСРаботникамиОрганизаций.Регистратор.КраткийСоставДокумента, """") + ЕСТЬNULL(ВзаиморасчетыСРаботникамиОрганизаций.Регистратор.Сотрудник.Наименование, """") КАК КраткийСоставДокумента,
		|	ВзаиморасчетыСРаботникамиОрганизаций.Период КАК ДатаВыплаты,
		|	ЕСТЬNULL(ВзаиморасчетыСРаботникамиОрганизаций.Регистратор.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументОснование,
		|	&ХарактерВыплаты КАК ХарактерВыплаты
		|ПОМЕСТИТЬ ВТДокументыВыплат
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
		|ГДЕ
		|	ВзаиморасчетыСРаботникамиОрганизаций.Организация = &Организация
		|	И ВзаиморасчетыСРаботникамиОрганизаций.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ВзаиморасчетыСРаботникамиОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ ВзаиморасчетыСРаботникамиОрганизаций.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистровНакопления
		|	И НЕ ВзаиморасчетыСРаботникамиОрганизаций.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|	И НЕ ВзаиморасчетыСРаботникамиОрганизаций.Регистратор ССЫЛКА Документ.Сторнирование
		|	И НЕ ВзаиморасчетыСРаботникамиОрганизаций.Регистратор ССЫЛКА Документ.ПереносДанных";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ХарактерВыплаты", НДФЛРасчетыСБюджетомПереопределяемый.ТекстПоляХарактерВыплаты());
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "Документ.КорректировкаЗаписейРегистровНакопления", ПроцедурыОбновленияИнформационнойБазыПереопределяемый.ИмяДокументаКорректировкиРегистров());
		Запрос.Выполнить();
	КонецЕсли;
	              
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	НДФЛРасчетыСБюджетом.Регистратор КАК Ссылка,
	|	НДФЛРасчетыСБюджетом.Регистратор.Дата КАК ДатаДокумента,
	|	НДФЛРасчетыСБюджетом.Регистратор.Дата КАК ПозицияДокумента,
	|	НДФЛРасчетыСБюджетом.Регистратор.Номер КАК Номер,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетом.Регистратор.КраткийСоставДокумента, """") + ЕСТЬNULL(НДФЛРасчетыСБюджетом.Регистратор.Сотрудник.Наименование, """") КАК Сотрудники,
	|	ТИПЗНАЧЕНИЯ(НДФЛРасчетыСБюджетом.Регистратор) КАК ТипДокумента,
	|	&ДатаВыплаты КАК ДатаВыплаты,
	|	&ДатаВыплаты КАК ДатаВыплатыВДокументе,
	|	ЕСТЬNULL(НДФЛРасчетыСБюджетом.Регистратор.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументОснование,
	|	&ХарактерВыплаты КАК ХарактерВыплаты
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение = &Организация
	|	И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
	|	И НДФЛРасчетыСБюджетом.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДФЛВременныйУчет.Регистратор,
	|	НДФЛВременныйУчет.Регистратор.Дата,
	|	НДФЛВременныйУчет.Регистратор.Дата,
	|	НДФЛВременныйУчет.Регистратор.Номер,
	|	ЕСТЬNULL(НДФЛВременныйУчет.Регистратор.КраткийСоставДокумента, """") + ЕСТЬNULL(НДФЛВременныйУчет.Регистратор.Сотрудник.Наименование, """"),
	|	ТИПЗНАЧЕНИЯ(НДФЛВременныйУчет.Регистратор),
	|	ЕСТЬNULL(НДФЛВременныйУчет.Регистратор.ДатаВыплатыДохода, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
	|	ЕСТЬNULL(НДФЛВременныйУчет.Регистратор.ДатаВыплатыДохода, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	РегистрНакопления.НДФЛВременныйУчет КАК НДФЛВременныйУчет
	|ГДЕ
	|	НДФЛВременныйУчет.ОбособленноеПодразделение = &Организация
	|	И НДФЛВременныйУчет.Организация = &ГоловнаяОрганизация
	|	И НДФЛВременныйУчет.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДокументыВыплат.Ссылка,
	|	ДокументыВыплат.Дата,
	|	ДокументыВыплат.Дата,
	|	ДокументыВыплат.Номер,
	|	ДокументыВыплат.КраткийСоставДокумента,
	|	ТИПЗНАЧЕНИЯ(ДокументыВыплат.Ссылка),
	|	ДокументыВыплат.ДатаВыплаты,
	|	ДокументыВыплат.ДатаВыплаты,
	|	ДокументыВыплат.ДокументОснование,
	|	ДокументыВыплат.ХарактерВыплаты
	|ИЗ
	|	ВТДокументыВыплат КАК ДокументыВыплат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СведенияОДоходах.Регистратор,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СведенияОДоходах.ЕстьОплатаТруда
	|					И СведенияОДоходах.ЕстьДругиеДоходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьРазныеДоходы,
	|	МАКСИМУМ(СведенияОДоходах.ЕстьОплатаТруда) КАК ЕстьОплатаТруда,
	|	МАКСИМУМ(СведенияОДоходах.ЕстьДругиеДоходы) КАК ЕстьДругиеДоходы,
	|	СведенияОДоходах.ДатаПолученияДохода
	|ПОМЕСТИТЬ ВТДоходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛСведенияОДоходах.Регистратор КАК Регистратор,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА НДФЛСведенияОДоходах.КодДохода.СоответствуетОплатеТруда
	|					ТОГДА ИСТИНА
	|				КОГДА НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2610ПоСтавке35)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ) КАК ЕстьОплатаТруда,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА НДФЛСведенияОДоходах.КодДохода.СоответствуетОплатеТруда
	|					ТОГДА ЛОЖЬ
	|				КОГДА НДФЛСведенияОДоходах.КодДохода = ЗНАЧЕНИЕ(Справочник.ДоходыНДФЛ.Код2610ПоСтавке35)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ЕстьДругиеДоходы,
	|		НДФЛСведенияОДоходах.ФизЛицо КАК ФизЛицо,
	|		НДФЛСведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода
	|	ИЗ
	|		РегистрНакопления.НДФЛСведенияОДоходах КАК НДФЛСведенияОДоходах
	|	ГДЕ
	|		НДФЛСведенияОДоходах.Регистратор В
	|				(ВЫБРАТЬ
	|					Регистраторы.Ссылка
	|				ИЗ
	|					ВТРегистраторы КАК Регистраторы)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛСведенияОДоходах.Регистратор,
	|		НДФЛСведенияОДоходах.ФизЛицо,
	|		НДФЛСведенияОДоходах.ДатаПолученияДохода) КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.Регистратор,
	|	СведенияОДоходах.ДатаПолученияДохода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Регистраторы.Ссылка
	|ПОМЕСТИТЬ ВТДокументыСФиксированнымиДатами
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходы КАК Доходы
	|		ПО Регистраторы.Ссылка = Доходы.Регистратор
	|			И Регистраторы.ДатаВыплаты = Доходы.ДатаПолученияДохода
	|ГДЕ
	|	КОНЕЦПЕРИОДА(Регистраторы.ДатаВыплаты, МЕСЯЦ) = КОНЕЦПЕРИОДА(Регистраторы.ДатаВыплаты, ДЕНЬ)
	|	И Доходы.ЕстьОплатаТруда
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачислениеЗарплатыРаботникамОрганизацийДатыВыплаты.Ссылка,
	|	НачислениеЗарплатыРаботникамОрганизацийДатыВыплаты.ФизЛицо,
	|	НачислениеЗарплатыРаботникамОрганизацийДатыВыплаты.ДатаВыплатыДохода
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникамОрганизаций.ДатыВыплаты КАК НачислениеЗарплатыРаботникамОрганизацийДатыВыплаты
	|ГДЕ
	|	НачислениеЗарплатыРаботникамОрганизацийДатыВыплаты.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Ссылка
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияРазовыхНачисленийРаботниковОрганизацийДатыВыплаты.Ссылка,
	|	РегистрацияРазовыхНачисленийРаботниковОрганизацийДатыВыплаты.ФизЛицо,
	|	РегистрацияРазовыхНачисленийРаботниковОрганизацийДатыВыплаты.ДатаВыплатыДохода
	|ИЗ
	|	Документ.РегистрацияРазовыхНачисленийРаботниковОрганизаций.ДатыВыплаты КАК РегистрацияРазовыхНачисленийРаботниковОрганизацийДатыВыплаты
	|ГДЕ
	|	РегистрацияРазовыхНачисленийРаботниковОрганизацийДатыВыплаты.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Ссылка
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПремииРаботниковОрганизацийДатыВыплаты.Ссылка,
	|	ПремииРаботниковОрганизацийДатыВыплаты.ФизЛицо,
	|	ПремииРаботниковОрганизацийДатыВыплаты.ДатаВыплатыДохода
	|ИЗ
	|	Документ.ПремииРаботниковОрганизаций.ДатыВыплаты КАК ПремииРаботниковОрганизацийДатыВыплаты
	|ГДЕ
	|	ПремииРаботниковОрганизацийДатыВыплаты.Ссылка В
	|			(ВЫБРАТЬ
	|				Регистраторы.Ссылка
	|			ИЗ
	|				ВТРегистраторы КАК Регистраторы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Регистраторы.Ссылка,
	|	Регистраторы.ДатаДокумента,
	|	Регистраторы.ПозицияДокумента КАК ПозицияДокумента,
	|	Регистраторы.Номер,
	|	Регистраторы.Сотрудники,
	|	Регистраторы.ТипДокумента,
	|	Регистраторы.ДатаВыплаты,
	|	Регистраторы.ДатаВыплатыВДокументе,
	|	Регистраторы.ДокументОснование,
	|	Регистраторы.ХарактерВыплаты,
	|	ВЫБОР
	|		КОГДА Доходы.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ НЕ Доходы.ЕстьДругиеДоходы
	|	КОНЕЦ КАК ДопустимПереносДатыВДругойМесяц,
	|	ВЫБОР
	|		КОГДА Доходы.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ НЕ Доходы.ЕстьРазныеДоходы
	|	КОНЕЦ КАК ДопустимПереносДаты,
	|	ВЫБОР
	|		КОГДА ДокументыСФиксированнымиДатами.Ссылка ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РазрешеноЗаменятьКонецМесяца
	|ИЗ
	|	ВТРегистраторы КАК Регистраторы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Доходы.Регистратор КАК Регистратор,
	|			МАКСИМУМ(Доходы.ЕстьРазныеДоходы) КАК ЕстьРазныеДоходы,
	|			МАКСИМУМ(Доходы.ЕстьДругиеДоходы) КАК ЕстьДругиеДоходы
	|		ИЗ
	|			ВТДоходы КАК Доходы
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Доходы.Регистратор) КАК Доходы
	|		ПО Регистраторы.Ссылка = Доходы.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыСФиксированнымиДатами КАК ДокументыСФиксированнымиДатами
	|		ПО Регистраторы.Ссылка = ДокументыСФиксированнымиДатами.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПозицияДокумента";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДатаВыплаты", НДФЛРасчетыСБюджетомПереопределяемый.ТекстПоляДатаВыплаты());
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ХарактерВыплаты", НДФЛРасчетыСБюджетомПереопределяемый.ТекстПоляХарактерВыплаты());

	Результаты = Запрос.ВыполнитьПакет();
	ВсегоРезультатов = Результаты.Количество();
	ДатыИсключения = Новый Соответствие;
	ДатыВыплатыДокументов = Результаты[ВсегоРезультатов - 2].Выгрузить();
	ДатыВыплатыДокументов.Индексы.Добавить("Ссылка");
	ВременнаяТаблица = Результаты[ВсегоРезультатов - 1].Выгрузить();
	ВременнаяТаблица.Колонки.Добавить("Документ", Новый ОписаниеТипов("Строка"));
	ВременнаяТаблица.Колонки.Добавить("ИмяДокумента", Новый ОписаниеТипов("Строка"));
	ВременнаяТаблица.Колонки.Добавить("РасшифровкаВыплаты", Новый ОписаниеТипов("Строка"));
	ВременнаяТаблица.Колонки.Добавить("ИмяПоляДатыВыплаты", Новый ОписаниеТипов("Строка"));
	ВременнаяТаблица.Колонки.Добавить("ЭтоВыплата", Новый ОписаниеТипов("Булево"));
	ВременнаяТаблица.Колонки.Добавить("ДокументНачисление", ОписаниеТиповРегистраторов);
	СтруктураПоиска = Новый Структура("Ссылка");
	Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
		СтрокаТЗ.Документ = ПредставленияТиповДокументов[СтрокаТЗ.ТипДокумента] + ?(ЗначениеЗаполнено(СтрокаТЗ.ХарактерВыплаты), " (" + СтрокаТЗ.ХарактерВыплаты + ")" ,"");
		СтрокаТЗ.Номер = СокрЛП(ОбщегоНазначенияЗК.ПолучитьНомерНаПечать(СтрокаТЗ, ПрефиксыОрганизации));
		СтрокаТЗ.ЭтоВыплата = ДокументыВыплаты[СтрокаТЗ.ТипДокумента]; 
		ИмяДокумента = ИменаТиповДокументов[СтрокаТЗ.ТипДокумента];
		СтрокаТЗ.ИмяДокумента = ИмяДокумента; 
		СтрокаТЗ.ИмяПоляДатыВыплаты = ИменаПоляДатыВыплатыДокументов[СтрокаТЗ.ТипДокумента];
		Если Не СтрокаТЗ.ЭтоВыплата Тогда
			СтрокаТЗ.ХарактерВыплаты = ХарактерВыплатыДокументов[СтрокаТЗ.ТипДокумента]
		КонецЕсли;
		Если ИмяДокумента = "НачислениеЗарплатыРаботникамОрганизаций" Или ИмяДокумента = "РегистрацияРазовыхНачисленийРаботниковОрганизаций" Или ИмяДокумента = "ПремииРаботниковОрганизаций" Тогда
			СтрокаТЗ.РасшифровкаВыплаты = "Подробнее"; 
			СтруктураПоиска.Ссылка = СтрокаТЗ.Ссылка;
			ДатыИсключения.Вставить(СтрокаТЗ.Ссылка, ДатыВыплатыДокументов.Скопировать(ДатыВыплатыДокументов.НайтиСтроки(СтруктураПоиска)));
		КонецЕсли;
	КонецЦикла;

	УлучшитьЦепочкуДокументов(ВременнаяТаблица);
	
	Возврат Новый Структура("ТаблицаДокументов, ДатыИсключения", ВременнаяТаблица, ДатыИсключения)
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////


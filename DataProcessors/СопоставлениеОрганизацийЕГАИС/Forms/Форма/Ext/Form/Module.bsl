
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.АдресВХранилище) Тогда
		
		СтруктураДанных = ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);
		
		Если СтруктураДанных.Свойство("ОрганизацииЕГАИС") Тогда
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СписокОрганизацийЕГАИС, "Ссылка", СтруктураДанных.ОрганизацииЕГАИС, Истина, ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИнтеграцияЕГАИСКлиентСерверПереопределяемый.ПроверитьИспользованиеПодсистемы(Отказ);
	
	Если ИспользоватьОтборПоСвойствам Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборКонтрагентов", 0.1, Истина);
	КонецЕсли;
	
	Если ПустаяСтрока(ВариантОтбораСоответствийОрганизацииЕГАИС) Тогда
		ВариантОтбораСоответствийОрганизацииЕГАИС = "Все";
	КонецЕсли;
	
	Если ПустаяСтрока(ВариантОтбораСоответствийКонтрагенты) Тогда
		ВариантОтбораСоответствийКонтрагенты = "Все";
	КонецЕсли;
	
	ПриИзмененииВидимостиОтбора("ОрганизацииЕГАИС", ВидимостьОтбораОрганизацииЕГАИС);
	ПриИзмененииВидимостиОтбора("Контрагенты", ВидимостьОтбораКонтрагенты);
	ВариантОтбораСоответствийОрганизацииЕГАИСПриИзменении(Неопределено);
	ВариантОтбораСоответствийКонтрагентыПриИзменении(Неопределено);
	ИспользоватьОтборПоСвойствамПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаКонтрагентыОчистка(Элемент, СтандартнаяОбработка)
	
	ПрименитьПоиск("Контрагенты", СписокКонтрагентов, СтрокаПоискаКонтрагенты);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаКонтрагентыПриИзменении(Элемент)
	
	ПрименитьПоиск("Контрагенты", СписокКонтрагентов, СтрокаПоискаКонтрагенты);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаКонтрагентыАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СпискиВыбораКлиент.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОрганизацииЕГАИСОчистка(Элемент, СтандартнаяОбработка)
	
	ПрименитьПоиск("ОрганизацииЕГАИС", СписокОрганизацийЕГАИС, СтрокаПоискаОрганизацииЕГАИС);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОрганизацииЕГАИСПриИзменении(Элемент)
	
	ПрименитьПоиск("ОрганизацииЕГАИС", СписокОрганизацийЕГАИС, СтрокаПоискаОрганизацииЕГАИС);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОрганизацииЕГАИСАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
		
	СпискиВыбораКлиент.АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоИННПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборКонтрагентов", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоКПППриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборКонтрагентов", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораСоответствийОрганизацииЕГАИСПриИзменении(Элемент)
	
	УстановитьОтборПоСоответствиюОрганизацииЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтбораСоответствийКонтрагентыПриИзменении(Элемент)
	
	УстановитьОтборПоСоответствиюКонтрагенты();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоСвойствамПриИзменении(Элемент)
	
	УстановитьВидимостьСвойствОтбора();
	
	УстановитьОтборКонтрагентовПоСвойствамОрганизацииЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийЕГАИСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные <> Неопределено И НЕ Элемент.ТекущиеДанные.Контрагент.Пустая() Тогда
		Элементы.СписокКонтрагентов.ТекущаяСтрока = Элемент.ТекущиеДанные.Контрагент;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКонтрагентовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЕстьСоответствие Тогда
		СвязанныеОрганизацииЕГАИС = ПолучитьСписокСвязанныхОрганизацийЕГАИС(Элемент.ТекущиеДанные.Ссылка);
		
		Если СвязанныеОрганизацииЕГАИС.Количество() > 0 Тогда
			Элементы.СписокОрганизацийЕГАИС.ВыделенныеСтроки.Очистить();
			Элементы.СписокОрганизацийЕГАИС.ТекущаяСтрока = СвязанныеОрганизацииЕГАИС[0];
			
			Для каждого ОрганизацияЕГАИС Из СвязанныеОрганизацииЕГАИС Цикл
				Элементы.СписокОрганизацийЕГАИС.ВыделенныеСтроки.Добавить(ОрганизацияЕГАИС);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОрганизацийЕГАИСПриАктивизацииСтроки(Элемент)
	
	Если ИспользоватьОтборПоСвойствам Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьОтборКонтрагентов", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоответствие(Команда)
	
	Если Элементы.СписокОрганизацийЕГАИС.ТекущиеДанные = Неопределено 
		ИЛИ Элементы.СписокКонтрагентов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ПроверитьВозможностьУстановкиСоответствия(Элементы.СписокОрганизацийЕГАИС.ТекущиеДанные.Ссылка, Элементы.СписокКонтрагентов.ТекущиеДанные.Ссылка, ТекстОшибки) Тогда
		Предупреждение(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОрганизацияЕГАИС", Элементы.СписокОрганизацийЕГАИС.ТекущиеДанные.Ссылка);
	ПараметрыФормы.Вставить("Контрагент", Элементы.СписокКонтрагентов.ТекущиеДанные.Ссылка);
	
	РезультатЗакрытия = ОткрытьФормуМодально("Обработка.СопоставлениеОрганизацийЕГАИС.Форма.ФормаСопоставленияКонтрагентов", ПараметрыФормы, ЭтаФорма);
	УстановитьСоответствие_Завершение(РезультатЗакрытия, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоответствие_Завершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = Истина Тогда
		Элементы.СписокОрганизацийЕГАИС.Обновить();
		Элементы.СписокКонтрагентов.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСоответствие(Команда)
	
	МассивЭлементов = Новый Массив;
	
	Для каждого ОрганизацияЕГАИС Из Элементы.СписокОрганизацийЕГАИС.ВыделенныеСтроки Цикл
	
		ДанныеСтроки = Элементы.СписокОрганизацийЕГАИС.ДанныеСтроки(ОрганизацияЕГАИС);
		Если НЕ ДанныеСтроки.Контрагент.Пустая() Тогда
			МассивЭлементов.Добавить(ОрганизацияЕГАИС);
		КонецЕсли;
	
	КонецЦикла;
	
	Если МассивЭлементов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	АдресМассиваОрганизацийЕГАИС = ПоместитьВоВременноеХранилище(МассивЭлементов);
	
	РезультатВопроса = Вопрос(НСтр("ru = 'Отменить связь выбранных организаций?'"), РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК);
	ОтменитьСоответствие_Завершение(РезультатВопроса, Неопределено)
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСоответствие_Завершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Подключаемый_ОтменитьСоответствие", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКонтрагентов(Команда)
	
	МассивЭлементов = Элементы.СписокОрганизацийЕГАИС.ВыделенныеСтроки;
	Если МассивЭлементов.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ТекстОшибки = "";
	Если НЕ ПроверитьВозможностьСозданияКонтрагентов(МассивЭлементов, ТекстОшибки) Тогда
		Предупреждение(ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	РезультатВопроса = Вопрос(НСтр("ru = 'Создать контрагентов по выделенным строкам организаций ЕГАИС?'"), РежимДиалогаВопрос.ОКОтмена);
	СоздатьКонтрагентов_Подтверждение(РезультатВопроса, МассивЭлементов);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКонтрагентов_Подтверждение(РезультатВопроса, ВыделенныеСтроки) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	АдресСпискаОрганизацийЕГАИС = ПоместитьВоВременноеХранилище(ВыделенныеСтроки);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресСпискаОрганизацийЕГАИС", АдресСпискаОрганизацийЕГАИС);
	
	ПараметрыСозданияКонтрагентов = ОткрытьФормуМодально("Обработка.СопоставлениеОрганизацийЕГАИС.Форма.ФормаСозданияКонтрагентов", ПараметрыФормы, ЭтаФорма);
	СоздатьКонтрагентов_Завершение(ПараметрыСозданияКонтрагентов, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКонтрагентов_Завершение(ПараметрыСозданияКонтрагентов, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПараметрыСозданияКонтрагентов) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	АдресПараметровСозданияКонтрагентов = ПоместитьВоВременноеХранилище(ПараметрыСозданияКонтрагентов);
	
	Подключаемый_СоздатьКонтрагентов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьОтборКонтрагенты(Команда)
	
	ВидимостьОтбораКонтрагенты = НЕ ВидимостьОтбораКонтрагенты;
	
	ПриИзмененииВидимостиОтбора("Контрагенты", ВидимостьОтбораКонтрагенты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьОтборОрганизацииЕГАИС(Команда)
	
	ВидимостьОтбораОрганизацииЕГАИС = НЕ ВидимостьОтбораОрганизацииЕГАИС;
	
	ПриИзмененииВидимостиОтбора("ОрганизацииЕГАИС", ВидимостьОтбораОрганизацииЕГАИС);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СоздатьКонтрагентов()
	
	СозданныеКонтрагенты = СоздатьКонтрагентовНаСервере(АдресПараметровСозданияКонтрагентов);
	
	Элементы.СписокОрганизацийЕГАИС.Обновить();
	Элементы.СписокКонтрагентов.Обновить();
	
	Элементы.СписокКонтрагентов.ВыделенныеСтроки.Очистить();
	
	Для каждого Контрагент Из СозданныеКонтрагенты Цикл
		Элементы.СписокКонтрагентов.ВыделенныеСтроки.Добавить(Контрагент);
	КонецЦикла;
	
	Если СозданныеКонтрагенты.Количество() = 1 Тогда
		ТекстСообщения = НСтр("ru = 'Создан контрагент %Наименование%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Наименование%", СокрЛП(СозданныеКонтрагенты[0]));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СозданныеКонтрагенты[0]);
	Иначе
		ТекстСообщения = НСтр("ru = 'Создано %Количество% контрагентов.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СозданныеКонтрагенты.Количество());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтменитьСоответствие()
	
	ОтменитьСоответствиеНаСервере(ПолучитьИзВременногоХранилища(АдресМассиваОрганизацийЕГАИС));
	
	Элементы.СписокОрганизацийЕГАИС.Обновить();
	Элементы.СписокКонтрагентов.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьКонтрагентовНаСервере(АдресПараметровСозданияКонтрагентов)
	
	СозданныеКонтрагенты = Новый Массив;
	
	ПараметрыСозданияКонтрагентов = ПолучитьИзВременногоХранилища(АдресПараметровСозданияКонтрагентов);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого ОрганизацияЕГАИС Из ПараметрыСозданияКонтрагентов.МассивЭлементов Цикл
		
		РеквизитыОрганизацииЕГАИС = ПолучитьРеквизитыОрганизацииЕГАИС(ОрганизацияЕГАИС);
		
		КонтрагентОбъект  = Справочники.Контрагенты.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(КонтрагентОбъект, РеквизитыОрганизацииЕГАИС);
		
		КонтрагентОбъект.Родитель = ПараметрыСозданияКонтрагентов.Родитель;
		КонтрагентОбъект.ЮрФизЛицо = ПараметрыСозданияКонтрагентов.ЮрФизЛицо;
		КонтрагентОбъект.Поставщик = Истина;
		
		КонтрагентОбъект.Записать();
		
		Если НЕ ПустаяСтрока(РеквизитыОрганизацииЕГАИС.ПредставлениеАдреса) Тогда
			ЗаписьРегистра = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
			ЗаписьРегистра.Объект = КонтрагентОбъект.Ссылка;
			ЗаписьРегистра.Тип    = Перечисления.ТипыКонтактнойИнформации.Адрес;
			ЗаписьРегистра.Вид    = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
			ЗаписьРегистра.Представление = СокрЛП(РеквизитыОрганизацииЕГАИС.ПредставлениеАдреса);
			ЗаписьРегистра.ТипДома       = Перечисления.ТипыДомов.Дом;
			ЗаписьРегистра.ТипКорпуса    = Перечисления.ТипыКорпусов.Корпус;
			ЗаписьРегистра.ТипКвартиры   = Перечисления.ТипыКвартир.Квартира;
			
			ЗаписьРегистра.Записать();
		КонецЕсли;
		
		Запись = РегистрыСведений.СоответствиеОрганизацийЕГАИС.СоздатьМенеджерЗаписи();
		Запись.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
		Запись.Контрагент = КонтрагентОбъект.Ссылка;
		Запись.Записать();
		
		СозданныеКонтрагенты.Добавить(КонтрагентОбъект.Ссылка);
		
	КонецЦикла;
	
	Возврат СозданныеКонтрагенты;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыОрганизацииЕГАИС(ОрганизацияЕГАИС)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ОрганизацияЕГАИС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Наименование,
	|	КлассификаторОрганизацийЕГАИС.НаименованиеПолное,
	|	КлассификаторОрганизацийЕГАИС.ИНН,
	|	КлассификаторОрганизацийЕГАИС.КПП,
	|	КлассификаторОрганизацийЕГАИС.ПредставлениеАдреса
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Ссылка = &Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить()[0];
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьСоответствиеНаСервере(МассивОрганизацийЕГАИС)
	
	Для каждого ОрганизацияЕГАИС Из МассивОрганизацийЕГАИС Цикл
	
		Запись = РегистрыСведений.СоответствиеОрганизацийЕГАИС.СоздатьМенеджерЗаписи();
		Запись.ОрганизацияЕГАИС = ОрганизацияЕГАИС;
		Запись.Прочитать();
		
		Если Запись.Выбран() Тогда
			Запись.Удалить();
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьВозможностьУстановкиСоответствия(ОрганизацияЕГАИС, Контрагент, ТекстОшибки)
	
	Если Контрагент.ЭтоГруппа Тогда
		ТекстОшибки = НСтр("ru = 'Связка организации ЕГАИС с группой контрагентов невозможна.'");
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС
	|ИЗ
	|	РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИС
	|ГДЕ
	|	СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС = &ОрганизацияЕГАИС
	|	И СоответствиеОрганизацийЕГАИС.Контрагент <> &Контрагент";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТекстОшибки = НСтр("ru = 'Выбранная организация уже имеет связку.'");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьВозможностьСозданияКонтрагентов(МассивОрганизацийЕГАИС, ТекстОшибки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрганизацийЕГАИС", МассивОрганизацийЕГАИС);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИС
	|		ПО КлассификаторОрганизацийЕГАИС.Ссылка = СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.Ссылка В(&МассивОрганизацийЕГАИС)
	|	И СоответствиеОрганизацийЕГАИС.Контрагент ЕСТЬ NULL ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Если МассивОрганизацийЕГАИС.Количество() > 1 Тогда
			ТекстОшибки = НСтр("ru = 'Все выбранные организации уже имеют связку.'");
		Иначе
			ТекстОшибки = НСтр("ru = 'Выбранная организация уже имеет связку.'");
		КонецЕсли;
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокСвязанныхОрганизацийЕГАИС(Контрагент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС
	|ИЗ
	|	РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИС
	|ГДЕ
	|	СоответствиеОрганизацийЕГАИС.Контрагент = &Контрагент";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОрганизацияЕГАИС");
	
КонецФункции

&НаКлиенте
Процедура ПоискПоПодстрокеНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска)
	
	Использование = ЗначениеЗаполнено(СтрокаПоиска);
	
	ГруппаОтбора = ОтборыСписковКлиентСервер.СоздатьГруппуЭлементовОтбора(
		Список.Отбор.Элементы,
		"ПоискПоПодстроке",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Наименование",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"Код",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"НаименованиеПолное",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ИНН",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"КПП",
		СтрокаПоиска,
		Использование, ВидСравненияКомпоновкиДанных.Содержит);
		
	Если ОбластьПоиска = "ОрганизацииЕГАИС" Тогда
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
			ГруппаОтбора,
			"ПредставлениеАдреса",
			СтрокаПоиска,
			Использование, ВидСравненияКомпоновкиДанных.Содержит);
	КонецЕсли;
			
	СпискиВыбораКлиент.ОбновитьСписокВыбора(Элементы["СтрокаПоиска" + ОбластьПоиска].СписокВыбора, СтрокаПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьПоиск(ОбластьПоиска, Список, СтрокаПоиска)
	
	ПоискПоПодстрокеНаКлиенте(ОбластьПоиска, Список, СтрокаПоиска);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьОтборКонтрагентов()
	
	УстановитьОтборКонтрагентовПоСвойствамОрганизацииЕГАИС();
	
	ЭтаФорма.ТекущийЭлемент = Элементы.СписокОрганизацийЕГАИС;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборКонтрагентовПоСвойствамОрганизацииЕГАИС()
	
	ТекущиеДанные = Элементы.СписокОрганизацийЕГАИС.ТекущиеДанные;
	
	ИспользованиеОтборов = ИспользоватьОтборПоСвойствам И ТекущиеДанные <> Неопределено;
	
	ГруппаОтбора = ОтборыСписковКлиентСервер.СоздатьГруппуЭлементовОтбора(
		СписокКонтрагентов.Отбор.Элементы,
		"ОтборПоСвойствамОрганизацииЕГАИС",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"ИНН",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.ИНН),
		ИспользованиеОтборов И ОтборПоИНН И НЕ ПустаяСтрока(ТекущиеДанные.ИНН), ВидСравненияКомпоновкиДанных.Равно);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораГруппыСписка(
		ГруппаОтбора,
		"КПП",
		?(ТекущиеДанные = Неопределено, Неопределено, ТекущиеДанные.КПП),
		ИспользованиеОтборов И ОтборПоКПП И НЕ ПустаяСтрока(ТекущиеДанные.КПП), ВидСравненияКомпоновкиДанных.Равно);
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСвойствОтбора()
	
	Элементы.ГруппаВидыОтборовПоСвойтвамЕГАИС.Видимость = ИспользоватьОтборПоСвойствам;
	Элементы.ДекорацияОтборПоСвойствам.Видимость = ИспользоватьОтборПоСвойствам;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоСоответствиюОрганизацииЕГАИС()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			СписокОрганизацийЕГАИС,
			"Контрагент",
			ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"),
			НЕ ВариантОтбораСоответствийОрганизацииЕГАИС = "Все", 
			?(ВариантОтбораСоответствийОрганизацииЕГАИС = "Связанные", ВидСравненияКомпоновкиДанных.НеРавно, ВидСравненияКомпоновкиДанных.Равно));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоСоответствиюКонтрагенты()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			СписокКонтрагентов,
			"ЕстьСоответствие",
			Истина,
			НЕ ВариантОтбораСоответствийКонтрагенты = "Все", 
			?(ВариантОтбораСоответствийКонтрагенты = "Связанные", ВидСравненияКомпоновкиДанных.Равно, ВидСравненияКомпоновкиДанных.НеРавно));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВидимостиОтбора(ВидОтбора, ВидимостьОтбора)
	
	Элементы["ГруппаОтбор" + ВидОтбора].Видимость = ВидимостьОтбора;
	Элементы["ПоказатьСкрытьОтбор" + ВидОтбора].Пометка = ВидимостьОтбора;
	
КонецПроцедуры

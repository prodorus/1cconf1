Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Формирует сведения необходимые для сохранения и передачи файла (файлов) электронного
// представления документа.
//
// Возвращаемое значение:
//  ТаблицаЗначений - сведения электронного представления документа, включающие в себя
//                    имя файла(файлов), текст(тексты) и кодировку представления.
//
Функция ЭлектронноеПредставление(УникальныйИдентификатор) Экспорт
	
	Если НалоговыйПериод >= '2017-10-01' Тогда
		Возврат УчетНДСФормированиеОтчетности.ЭлектронноеПредставлениеЖурналаСчетовФактур_503(ЭтотОбъект, УникальныйИдентификатор);
	ИначеЕсли НалоговыйПериод >= '2014-10-01' Тогда
		Возврат УчетНДСФормированиеОтчетности.ЭлектронноеПредставлениеЖурналаСчетовФактур_502(ЭтотОбъект, УникальныйИдентификатор);
	Иначе
		Возврат УчетНДСФормированиеОтчетности.ЭлектронноеПредставлениеЖурналаСчетовФактур_501(ЭтотОбъект, УникальныйИдентификатор);
	КонецЕсли;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ПометкаУдаления ИЛИ ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода",НачалоКвартала(НалоговыйПериод));
	Запрос.УстановитьПараметр("КонецНалоговогоПериода",КонецКвартала(НалоговыйПериод));
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.Ссылка
	|ИЗ
	|	Документ.ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка <> &Ссылка
	|	И Таблица.Организация = &Организация
	|	И Таблица.НалоговыйПериод >= &НачалоНалоговогоПериода
	|	И Таблица.НалоговыйПериод <= &КонецНалоговогоПериода
	|	И НЕ Таблица.ПометкаУдаления";

	Если НЕ Запрос.Выполнить().Пустой() Тогда
		НалоговыйПериодПредставление = ПредставлениеПериода(НачалоКвартала(НалоговыйПериод), КонецКвартала(НалоговыйПериод), "ФП = Истина" );
		Сообщение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Уже имеется оформленный журнал учета счетов фактур за %1",НалоговыйПериодПредставление);
		ОбщегоНазначения.СообщитьОбОшибке(Сообщение);
		Отказ = Истина;		
	КонецЕсли;	
	
	ПериодСоставления = НалоговыйПериод;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

Процедура ЗаполнитьДокумент() Экспорт
	
	Если УчетНДС.ВерсияПостановленияНДС1137(НалоговыйПериод) < 3 Тогда 
		
		Если ВыставленныеСчетаФактуры.Количество() > 0 Тогда
			ВыставленныеСчетаФактуры.Очистить();
		КонецЕсли;
		
		Если ПолученныеСчетаФактуры.Количество() > 0 Тогда
			ПолученныеСчетаФактуры.Очистить();
		КонецЕсли;
		
		СведенияОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецКвартала(Дата));
		НаименованиеОрганизацииДляПечатныхФорм = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОрганизации, "ПолноеНаименование,");
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", Организация);
		СтруктураПараметров.Вставить("НалоговыйПериод", НалоговыйПериод);
		СтруктураПараметров.Вставить("НаименованиеОрганизацииДляПечатныхФорм", НаименованиеОрганизацииДляПечатныхФорм);
		СтруктураПараметров.Вставить("ФормироватьТабличныйДокумент", Истина);
		СтруктураПараметров.Вставить("ЗаполнениеДокумента", Истина);
		СтруктураПараметров.Вставить("ФорматПоПостановлению735", Ложь);
		
		СтруктураЗаписейЖурнала = Отчеты.ЖурналУчетаСчетовФактур1137.ПолучитьЗаписиЖурналаСчетовФактур(СтруктураПараметров);
		
		НомерПП = 1;
		
		ВыборкаГруппировка = СтруктураЗаписейЖурнала.ВыставленныеСчетаФактуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаГруппировка.Следующий() Цикл
			
			ВыборкаЗаписи = ВыборкаГруппировка.Выбрать();
			Пока ВыборкаЗаписи.Следующий() Цикл
				НоваяСтрока = ВыставленныеСчетаФактуры.Добавить();
				Отчеты.ЖурналУчетаСчетовФактур1137.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(НоваяСтрока, ВыборкаЗаписи, СтруктураПараметров);
				
				НоваяСтрока.Ном = НомерПП;
				
				НомерПП = НомерПП + 1;
			КонецЦикла;
			
		КонецЦикла;
		
		НомерПП = 1;
		
		Выборка = СтруктураЗаписейЖурнала.ПолученныеСчетаФактуры.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ПолученныеСчетаФактуры.Добавить();
			Отчеты.ЖурналУчетаСчетовФактур1137.ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(НоваяСтрока, Выборка, СтруктураПараметров);
			
			НоваяСтрока.Ном = НомерПП;
			
			НомерПП = НомерПП + 1;
			
		КонецЦикла;
	Иначе
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор());
		
		ПараметрыРаздела = Новый Структура;
		ПараметрыРаздела.Вставить("Организация",                         Организация);
		ПараметрыРаздела.Вставить("НалоговыйПериод",                     НалоговыйПериод);
		ПараметрыРаздела.Вставить("ГруппироватьПоКонтрагентам",          Ложь);
		ПараметрыРаздела.Вставить("СформироватьОтчетПоСтандартнойФорме", Истина);
		ПараметрыРаздела.Вставить("КонтрагентДляОтбора",                 Справочники.Контрагенты.ПустаяСсылка());
		ПараметрыРаздела.Вставить("ОтбиратьПоКонтрагенту",               Ложь);
		ПараметрыРаздела.Вставить("ВключатьОбособленныеПодразделения",   Истина);
		ПараметрыРаздела.Вставить("ЗаполнениеДекларации",                Ложь);
		ПараметрыРаздела.Вставить("ЗаполнениеДокумента",                 Истина);
		ПараметрыРаздела.Вставить("ФорматПоПостановлению735",            Истина);
		
		ДанныеДляПроверкиКонтрагентов = Новый Структура;
		ДанныеДляПроверкиКонтрагентов.Вставить("ИспользованиеПроверкиВозможно", Ложь);
		ПараметрыРаздела.Вставить("ДанныеДляПроверкиКонтрагентов", ДанныеДляПроверкиКонтрагентов);
		
		Отчеты.ЖурналУчетаСчетовФактур1137.СформироватьОтчет(ПараметрыРаздела, АдресХранилища);
		
		ДанныеДляПередачи = ПолучитьИзВременногоХранилища(АдресХранилища);
		ПредставлениеОтчета = Новый ХранилищеЗначения(ДанныеДляПередачи.СформированныйЖурнал);
		
		СтруктураДанныхОтчета = Новый Структура("ЗаписиВыставленных, ЗаписиПолученных");
		ЗаполнитьЗначенияСвойств(СтруктураДанныхОтчета, ДанныеДляПередачи);
		ДанныеОтчета = Новый ХранилищеЗначения(СтруктураДанныхОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;
	
	Если НЕ РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ЖурналУчетаСчетовФактур" Тогда
		
		ТабДокумент = ПечатьЖурналаУчетаСчетовФактур();
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), НепосредственнаяПечать);
	
КонецПроцедуры

Функция ПечатьЖурналаУчетаСчетовФактур()
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(НалоговыйПериод);
	Если ВерсияПостановленияНДС1137 >= 3 Тогда
		ТабличныйДокументПредставление = ПредставлениеОтчета.Получить();
		Если ТабличныйДокументПредставление <> Неопределено Тогда
			 ТабличныйДокумент = ТабличныйДокументПредставление;
		КонецЕсли;
		Возврат ТабличныйДокумент;
	Иначе
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур1137");
	КонецЕсли; 
		
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";
	
	СведенияОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	НаименованиеОрганизацииДляПечатныхФорм = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОрганизации, "НаименованиеДляПечатныхФорм,");
	
	Отступ = Макет.ПолучитьОбласть("Отступ");
	
	// ШАПКА
	
	Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
	ТабличныйДокумент.Вывести(Секция);
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	СведенияОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация);
	Шапка.Параметры.Организация = НаименованиеОрганизацииДляПечатныхФорм;
	Шапка.Параметры.ИННКПП = "" + Организация.ИНН + ?(НЕ ЗначениеЗаполнено(Организация.КПП), "", ("/" + Организация.КПП));
	Шапка.Параметры.Квартал = Формат(НалоговыйПериод, "ДФ = к");
	Шапка.Параметры.Год = Формат(НалоговыйПериод, "ДФ = гггг");
	
	ТабличныйДокумент.Вывести(Шапка);
	
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 1
	
	Часть1Заголовок = Макет.ПолучитьОбласть("Часть1Заголовок");
	ТабличныйДокумент.Вывести(Часть1Заголовок);
	
	Часть1Строка = Макет.ПолучитьОбласть("Часть1Строка");
	Для каждого СтрокаЖурнала Из ВыставленныеСчетаФактуры Цикл
		ЗаполнитьЗначенияСвойств(Часть1Строка.Параметры, СтрокаЖурнала);
		ТабличныйДокумент.Вывести(Часть1Строка);
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(Отступ);
	
	// ЧАСТЬ 2
	
	Часть2Заголовок = Макет.ПолучитьОбласть("Часть2Заголовок");
	ТабличныйДокумент.Вывести(Часть2Заголовок);
	
	Часть2Строка = Макет.ПолучитьОбласть("Часть2Строка");
	Для каждого СтрокаЖурнала Из ПолученныеСчетаФактуры Цикл
		ЗаполнитьЗначенияСвойств(Часть2Строка.Параметры, СтрокаЖурнала);
		ТабличныйДокумент.Вывести(Часть2Строка);
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(Отступ);
	
	// ПОДВАЛ
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СписокПоказателей.Добавить("ФИО");
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, ТекущаяДата(), СписокПоказателей);
	СведенияОЮрФизЛице    = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ТекущаяДата());
	СведенияОбОрганизации.Вставить("Свидетельство", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,"));
	
	Подвал.Параметры.ИмяРук = СведенияОбОрганизации.ФИОРук;
	Подвал.Параметры.ИмяОрг = ?(РегламентированнаяОтчетность.ЭтоПБОЮЛ(Организация), СведенияОбОрганизации.ФИО, "");
	Подвал.Параметры.Свидетельство = СведенияОбОрганизации.Свидетельство;

	ТабличныйДокумент.Вывести(Подвал);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт

	Возврат Новый Структура("ЖурналУчетаСчетовФактур", "Журнал учета счетов-фактур");

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.КодСтороныСделки.Доступность = Форма.Объект.КодНаименованияСделки <> "";
	
	Форма.Элементы.СуммаДоходов.ТолькоПросмотр  = НЕ Форма.Объект.РедактироватьСуммыСделок;
	Форма.Элементы.СуммаРасходов.ТолькоПросмотр = НЕ Форма.Объект.РедактироватьСуммыСделок;
	
	Версия2018 = Форма.ВерсияУведомления >= КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2018();
	
	Форма.Элементы.Комиссионер.Видимость = Версия2018;
	Форма.Элементы.СделкаСовершенаЧерезКомиссионера.Видимость = Версия2018;
	Форма.Элементы.Комиссионер.Доступность = Форма.Объект.СделкаСовершенаЧерезКомиссионера И Версия2018;
	Форма.Элементы.Комиссионер.АвтоОтметкаНезаполненного = Форма.Объект.СделкаСовершенаЧерезКомиссионера И Версия2018;
	
	Форма.Элементы.Валюта.Видимость = Версия2018;
	
	Форма.Элементы.Строка136СделкаМорскогоМесторождения.Видимость = Версия2018;
	Форма.Элементы.Строка137СделкаИнвестиционныйПроект.Видимость = Версия2018;
	Форма.Элементы.Строка138СделкаОсвобождениеОтНДС.Видимость = Версия2018;
	Форма.Элементы.Строка139СделкаНалоговыйВычетПоНалогуНаПрибыль.Видимость = Версия2018;
	Форма.Элементы.Строка140СделкаНалогНаДополнительныйДоходУглеводородов.Видимость = Версия2018;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыПредметаСделки(ПредметСделки, ВерсияУведомления)
	Если НЕ ЗначениеЗаполнено(ПредметСделки) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыПредмета = Новый Структура("НаименованиеПредметаСделки, СтранаПроисхожденияПредметаСделки, ТипПредметаСделки,
											|КодТНВЭД, КодОКП, КодОКВЭД, КодОКВЭД2, КодОКПД2");
	Услуга = Истина;
	Если ТипЗнч(ПредметСделки)=Тип("СправочникСсылка.Номенклатура") Тогда
		Предмет = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ПредметСделки, "НаименованиеПолное, СтранаПроисхождения, Услуга");
		ПараметрыПредмета.НаименованиеПредметаСделки = Предмет.НаименованиеПолное;
		ПараметрыПредмета.СтранаПроисхожденияПредметаСделки = Предмет.СтранаПроисхождения;
		Услуга = Предмет.Услуга;
		ПараметрыПредмета.ТипПредметаСделки = ?(Предмет.Услуга, 
			Перечисления.ТипыПредметовКонтролируемыхСделок.РаботаУслуга,Перечисления.ТипыПредметовКонтролируемыхСделок.Товар);
	Иначе
		ПараметрыПредмета.НаименованиеПредметаСделки = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПредметСделки, "Наименование");
		ПараметрыПредмета.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.ИнойОбъектГражданскихПрав;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ПредметСделки", ПредметСделки);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПредметыКонтролируемыхСделок.КодПоТНВЭД КАК КодТНВЭД,
	|	ПредметыКонтролируемыхСделок.КодПоОКП КАК КодОКП,
	|	ПредметыКонтролируемыхСделок.КодПоОКВЭД КАК КодОКВЭД,
	|	ПредметыКонтролируемыхСделок.КодПоОКВЭД2 КАК КодОКВЭД2,
	|	ПредметыКонтролируемыхСделок.КодПоОКПД2 КАК КодОКПД2
	|ИЗ
	|	РегистрСведений.ПредметыКонтролируемыхСделок КАК ПредметыКонтролируемыхСделок
	|ГДЕ
	|	ПредметыКонтролируемыхСделок.ПредметСделки = &ПредметСделки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполняемыеКодыПредметовСделок = ЗаполняемыеКодыПредметовСделок(Не Услуга, ВерсияУведомления);
		ЗаполнитьЗначенияСвойств(ПараметрыПредмета, Выборка, ЗаполняемыеКодыПредметовСделок);
	КонецЕсли;
	
	Возврат(ПараметрыПредмета);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыОткрытияФормыПредмета(ПредметСделки)
	
	Возврат(РегистрыСведений.ПредметыКонтролируемыхСделок.ПолучитьПараметрыОткрытияФормыЗаписиПредметаСделки(ПредметСделки));
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруТабличнойЧастиСделки()

	СтрокаТаблицы	= Элементы.Сделки.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат Новый Структура;
	КонецЕсли;

	СтруктураТабличнойЧастиСделки = Новый Структура(
		"СтранаОтправкиТовара,
		|КодРегионаОтправкиТовара,
		|ГородОтправкиТовара,
		|НаселенныйПунктОтправкиТовара,
		|СтранаСовершенияСделки,
		|КодРегионаСовершенияСделки,
		|ГородСовершенияСделки,
		|НаселенныйПунктСовершенияСделки,
		|КодУсловийПоставки,
		|ЕдиницаИзмерения,
		|Количество,
		|ПроцентнаяСтавка,
		|Цена,
		|Стоимость,
		|ДатаСовершенияСделки");

	ЗаполнитьЗначенияСвойств(СтруктураТабличнойЧастиСделки, СтрокаТаблицы);
		
	Возврат СтруктураТабличнойЧастиСделки;

КонецФункции

&НаКлиенте
Процедура ПересчитатьСуммыДокумента()
	
	Если Объект.РедактироватьСуммыСделок Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДоход = 0;
	СуммаРасход = 0;
	Если Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ОсуществленРасход") Тогда 
		СуммаРасход = Объект.Сделки.Итог("Стоимость");
	ИначеЕсли Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход") Тогда 
		СуммаДоход = Объект.Сделки.Итог("Стоимость");
	КонецЕсли;
	
	Если Объект.СуммаДоходов <> СуммаДоход Тогда 
		Объект.СуммаДоходов = СуммаДоход;
	КонецЕсли;
	
	Если Объект.СуммаРасходов <> СуммаРасход Тогда 
		Объект.СуммаРасходов = СуммаРасход;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораДляКодаСтороныСделки()
	
	СоответствиеКодов = КонтролируемыеСделкиПовтИсп.ПолучитьСоответствиеКодовСтороныСделки();
	Элементы.КодСтороныСделки.СписокВыбора.Очистить();
	
	СписокКодов = СоответствиеКодов.Получить(Объект.КодНаименованияСделки);
	Если СписокКодов<>Неопределено Тогда
		Для Каждого Код Из СписокКодов Цикл
			НовыйКод = Элементы.КодСтороныСделки.СписокВыбора.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйКод, Код);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКодСтороныСделки(Форма)
	
	СписокКодовСтороныСделки = Форма.Элементы.КодСтороныСделки.СписокВыбора;
	Если СписокКодовСтороныСделки.Количество()>1 Тогда
		Форма.Объект.КодСтороныСделки = ?(Форма.Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход"),
			СписокКодовСтороныСделки[0].Значение, СписокКодовСтороныСделки[1].Значение);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИзменениеКодаНаименованияСделкиНаСервере()
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	Если Объект.КодНаименованияСделки = "" Тогда
		Объект.КодСтороныСделки = "";
	ИначеЕсли Объект.КодСтороныСделки <> "" Тогда
		Если Элементы.КодСтороныСделки.СписокВыбора.НайтиПоЗначению(Объект.КодСтороныСделки) = Неопределено Тогда
			Объект.КодСтороныСделки = "";
		КонецЕсли;
	КонецЕсли;
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокОбособленныхПодразделений()
	
	ОбособленныеПодразделенияОрганизации.Очистить();
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбособленныеПодразделенияОрганизации = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(Объект.Организация);
		ОбособленныеПодразделенияОрганизации.Добавить(Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполняемыеКодыПредметовСделок(Товар, ВерсияУведомления)
	
	ЗаполняемыеКоды = Новый Массив;
	
	Если НЕ Товар И ВерсияУведомления = КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКВЭД");
	КонецЕсли;
	
	Если НЕ Товар И ВерсияУведомления > КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКВЭД2");
	КонецЕсли;
	
	Если Товар Тогда
		ЗаполняемыеКоды.Добавить("КодТНВЭД");
	КонецЕсли;
	
	Если Товар И ВерсияУведомления = КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКП");
	КонецЕсли;
	
	Если Товар И ВерсияУведомления > КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012() Тогда
		ЗаполняемыеКоды.Добавить("КодОКПД2");
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ЗаполняемыеКоды, ",");
	
КонецФункции

&НаСервереБезКонтекста
Функция СтрСоединить82(Строки, Разделитель) Экспорт
	РезСтрока = "";
	Для каждого ЭлМассива Из Строки Цикл
		РезСтрока = РезСтрока + ЭлМассива + Разделитель;
	КонецЦикла;
	Возврат РезСтрока;
КонецФункции

&НаСервере
Процедура ПредметСделкиПриИзмененииНаСервере()
	
	ПараметрыПредметаСделки = ПолучитьПараметрыПредметаСделки(Объект.ПредметСделки, ВерсияУведомления);
	
	Если ПараметрыПредметаСделки = Неопределено Тогда
		возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыПредметаСделки.ТипПредметаСделки) Тогда
		Объект.ТипПредметаСделки = ПараметрыПредметаСделки.ТипПредметаСделки;
		НастроитьКолонкиТабличнойЧасти();
	КонецЕсли;
	Объект.НаименованиеПредметаСделки = ПараметрыПредметаСделки.НаименованиеПредметаСделки;
	Если ЗначениеЗаполнено(ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки) Тогда
		Объект.СтранаПроисхожденияПредметаСделки = ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки;
	КонецЕсли;
	Объект.КодТНВЭД = ПараметрыПредметаСделки.КодТНВЭД;
	Объект.КодОКП   = ПараметрыПредметаСделки.КодОКП;
	Объект.КодОКВЭД = ПараметрыПредметаСделки.КодОКВЭД;
	Объект.КодОКПД2  = ПараметрыПредметаСделки.КодОКПД2;
	Объект.КодОКВЭД2 = ПараметрыПредметаСделки.КодОКВЭД2;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииУведмомленияОКонтролируемойСделкеНаСервере()

	ПараметрыУведомления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.УведомлениеОКонтролируемойСделке, 
		"Организация, Дата, ВерсияУведомления");
	
	Объект.Организация = ПараметрыУведомления.Организация;
	Объект.Дата = ПараметрыУведомления.Дата;
	Если ВерсияУведомления <> ПараметрыУведомления.ВерсияУведомления Тогда
		ВерсияУведомления = ПараметрыУведомления.ВерсияУведомления;
		// Так как коды предмета сделки зависят от версии уведомления,
		// то после возможного изменения версии нужно обновить и коды.
		ПредметСделкиПриИзмененииНаСервере();
	КонецЕсли;
	
	УстановитьВидимостьКлассификаторовПредметаСделки();
	
	НастроитьКолонкиТабличнойЧасти();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииДоговораНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов,РасчетыВУсловныхЕдиницах");
		Если РеквизитыДоговора.РасчетыВУсловныхЕдиницах Тогда
			Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
		Иначе
			Объект.Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКлассификаторовПредметаСделки()
	
	ВерсияУведомления_2012 = КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2012();
	
	Элементы.КодОКВЭД.Видимость  = ВерсияУведомления <= ВерсияУведомления_2012;
	Элементы.КодОКВЭД2.Видимость = ВерсияУведомления > ВерсияУведомления_2012;
	Элементы.КодОКП.Видимость    = ВерсияУведомления <= ВерсияУведомления_2012;
	Элементы.КодОКПД2.Видимость  = ВерсияУведомления > ВерсияУведомления_2012;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьКолонкиТабличнойЧасти()
	
	ВерсияУведомления2018ИСтарше = ВерсияУведомления >= КонтролируемыеСделкиКлиентСервер.ВерсияУведомления_2018();
	
	Элементы.СделкиПроцентнаяСтавка.Видимость = 
		ВерсияУведомления2018ИСтарше
		И Объект.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.ДолговоеОбязательство;
	
	Элементы.СделкиЦена.Видимость = Не ВерсияУведомления2018ИСтарше
		ИЛИ Объект.ТипПредметаСделки <> Перечисления.ТипыПредметовКонтролируемыхСделок.ДолговоеОбязательство;
	
	Если ВерсияУведомления2018ИСтарше Тогда
		Элементы.СделкиКоличество.Формат = "ЧЦ=14; ЧДЦ=5";
	Иначе
		Элементы.СделкиКоличество.Формат = "ЧЦ=15; ЧДЦ=";
	КонецЕсли;
	
	Если Элементы.СделкиЦена.Видимость Тогда
		Если ВерсияУведомления2018ИСтарше Тогда
			Элементы.СделкиЦена.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Цена, %1'"), Объект.Валюта);
			Элементы.СделкиЦена.Формат = "ЧЦ=18; ЧДЦ=4";
		Иначе
			Элементы.СделкиЦена.Заголовок = НСтр("ru = 'Цена, руб.'");
			Элементы.СделкиЦена.Формат = "ЧЦ=15; ЧДЦ=";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

&НаКлиенте
Процедура УведомлениеОКонтролируемойСделкеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.УведомлениеОКонтролируемойСделке) Тогда 
		ПриИзмененииУведмомленияОКонтролируемойСделкеНаСервере();
	Иначе
		Объект.Организация = Неопределено;
	КонецЕсли;
	
	ЗаполнитьСписокОбособленныхПодразделений();
	
КонецПроцедуры

&НаКлиенте
Процедура КодНаименованияСделкиПриИзменении(Элемент)
	
	ИзменениеКодаНаименованияСделкиНаСервере();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметСделкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ПредметСделки) Тогда
		
		ПредметСделкиПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПредметаСделкиНажатие(Элемент)
	
	ПараметрыОткрытияФормы = ПолучитьПараметрыОткрытияФормыПредмета(Объект.ПредметСделки);
	Если ПараметрыОткрытияФормы<>Неопределено Тогда
		ОткрытьФорму("РегистрСведений.ПредметыКонтролируемыхСделок.ФормаЗаписи", ПараметрыОткрытияФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСделкиПриИзменении(Элемент)
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	ПересчитатьСуммыДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.КонтролируемаяСделка", "КонтролируемаяСделка", 
		Объект.Ссылка, ЭтаФорма, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСуммыСделокПриИзменении(Элемент)
	
	ПересчитатьСуммыДокумента();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура();
	Отбор = Новый Структура("Владелец, Организация", Объект.Контрагент, ОбособленныеПодразделенияОрганизации);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаВыбораУправляемая", ПараметрыФормы, Элементы.ДоговорКонтрагента);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ <СДЕЛКИ>
//

&НаКлиенте
Процедура СделкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИзменениеСтрокиСделки();

КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ИзменениеСтрокиСделки(Истина, Копирование);
КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ИзменениеСтрокиСделки();
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтрокиСделки(ЭтоНовый = Ложь, Копирование = Ложь)
	
	ДанныеЗаполнения	= ?(Не ЭтоНовый ИЛИ Копирование, ПолучитьСтруктуруТабличнойЧастиСделки(), Новый Структура);
	СтруктураПараметров	= Новый Структура;
	СтруктураПараметров.Вставить("ЭтоНовый",          ЭтоНовый);
	СтруктураПараметров.Вставить("Копирование",       Копирование);
	СтруктураПараметров.Вставить("ДанныеЗаполнения",  ДанныеЗаполнения);
	СтруктураПараметров.Вставить("ВерсияУведомления", ВерсияУведомления);
	СтруктураПараметров.Вставить("ТипПредметаСделки", Объект.ТипПредметаСделки);
	СтруктураПараметров.Вставить("Валюта",            Объект.Валюта);
	
	Если Не ЭтоНовый Тогда 
		СтрокаТаблицы = Объект.Сделки.НайтиПоИдентификатору(Элементы.Сделки.ТекущаяСтрока);
	КонецЕсли;

	ФормаРедактированияСтроки = ОткрытьФормуМодально("Документ.КонтролируемаяСделка.Форма.Лист1Б",
		СтруктураПараметров, ЭтаФорма);

	Если ФормаРедактированияСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		СтрокаТаблицы = Объект.Сделки.Добавить();
	Иначе
		СтрокаТаблицы = Объект.Сделки.НайтиПоИдентификатору(Элементы.Сделки.ТекущаяСтрока);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ФормаРедактированияСтроки);
	ПересчитатьСуммыДокумента();
	
	Модифицированность	= Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокКодов = КонтролируемыеСделкиПовтИсп.ПолучитьСписокКодовНаименованийСделки();
	Элементы.КодНаименованияСделки.СписокВыбора.Очистить();
	Для Каждого Код Из СписокКодов Цикл
		НовыйКод = Элементы.КодНаименованияСделки.СписокВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКод, Код);
	КонецЦикла;
	
	ВерсияУведомления = Документы.УведомлениеОКонтролируемыхСделках.ВерсияУведомления(Объект.УведомлениеОКонтролируемойСделке);
	
	УстановитьВидимостьКлассификаторовПредметаСделки();
	
	НастроитьКолонкиТабличнойЧасти();
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	
	ЗаполнитьСписокОбособленныхПодразделений();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("КонтролируемаяСделкаИзменена", Объект.УведомлениеОКонтролируемойСделке);
	Если ПараметрыЗаписи.Свойство("НомерКонтролируемойСделкиИзменился") Тогда
		Оповестить("НомерКонтролируемойСделкиИзменился", Объект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Номер) И НЕ ТекущийОбъект.ПометкаУдаления Тогда
		ТекущийОбъект.Номер = КонтролируемыеСделки.ПолучитьСледующийНомерКонтролируемойСделкиУведомления(ТекущийОбъект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
	Если ТекущийОбъект.Номер <> ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекущийОбъект.Ссылка, "Номер") Тогда
		ПараметрыЗаписи.Вставить("НомерКонтролируемойСделкиИзменился", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	
	ПриИзмененииДоговораНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПредметаСделкиПриИзменении(Элемент)
	
	НастроитьКолонкиТабличнойЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура СделкаСовершенаЧерезКомиссионераПриИзменении(Элемент)
	
	Если Не Объект.СделкаСовершенаЧерезКомиссионера Тогда
		Объект.Комиссионер = Неопределено;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры


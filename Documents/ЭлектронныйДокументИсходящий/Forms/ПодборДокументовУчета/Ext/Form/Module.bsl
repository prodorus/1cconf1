
// ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаЭД = "";
	Если Параметры.Свойство("ЭлектронныйДокумент", СсылкаНаЭД) Тогда
		
		ЗначениеВРеквизитФормы(СсылкаНаЭД.ПолучитьОбъект(), "ЭлектронныйДокумент");
		
		СписокТиповДокументов = ЭлектронныеДокументыСлужебный.СписокОперацийВидаЭД(ЭлектронныйДокумент.ВидЭД);
		
		Если СписокТиповДокументов.Количество() = 0 Тогда
			Элементы.ГруппаПодобрать.Видимость = Ложь;
			Элементы.ГруппаСоздать.Видимость = Ложь;
			Элементы.ФормаПодобратьДокумент.Видимость = Ложь;
			
		ИначеЕсли СписокТиповДокументов.Количество() = 1 Тогда
			
			Элементы.ГруппаПодобрать.Видимость = Ложь;
			Элементы.ГруппаСоздать.Видимость = Ложь;
			
			НоваяКоманда = ЭтаФорма.Команды.Добавить("Создать_" + СписокТиповДокументов[0].Значение);
			НоваяКоманда.Действие = "СоздатьДокументУчета";
			Элементы.ФормаСоздатьДокумент.ИмяКоманды = "Создать_" + СписокТиповДокументов[0].Значение;

			НоваяКоманда = ЭтаФорма.Команды.Добавить("Прикрепить_" + СписокТиповДокументов[0].Значение);
			НоваяКоманда.Действие = "ПодобратьДокумент";
			Элементы.ФормаПодобратьДокумент.ИмяКоманды = "Прикрепить_" + СписокТиповДокументов[0].Значение;
			
		Иначе
			
			Элементы.ФормаПодобратьДокумент.Видимость = Ложь;
			Элементы.ФормаСоздатьДокумент.Видимость = Ложь;
			
			Для Каждого ЭлементСписка Из СписокТиповДокументов Цикл
				
				НоваяКоманда = ЭтаФорма.Команды.Добавить("Прикрепить_" + ЭлементСписка.Значение);
				НоваяКоманда.Действие = "ПодобратьДокумент";
				
				НоваяКнопка = Элементы.Добавить("Прикрепить_" + ЭлементСписка.Значение,Тип("КнопкаФормы"),Элементы.ГруппаПодобрать);
				НоваяКнопка.Заголовок = ЭлементСписка.Представление;  
				НоваяКнопка.ИмяКоманды = "Прикрепить_" + ЭлементСписка.Значение;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЭлектронныйДокумент.ВидЭД = Перечисления.ВидыЭД.КаталогТоваров Тогда
			Элементы.ФормаПерезаполнитьТекущий.Заголовок = НСтр("ru = 'Сопоставить номенклатуру'");
		КонецЕсли;

	Иначе
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ТекСтрока <> Неопределено Тогда
		ОткрытьЗначение(ТекСтрока.ДокументОснование);	
	КонецЕсли;
	
КонецПроцедуры

// ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьДокумент(Команда)
	
	Модифицированность = Ложь;
	СпособОбработки = СтрЗаменить(Команда.Имя,"Прикрепить_","");
	Тип = ПолучитьИмяДокументаНаСервере(СпособОбработки); 
	
	Если ЗначениеЗаполнено(Тип) Тогда
		
		Подсказка = НСтр("ru = 'Укажите документ отражения в учете'");
		Результат = Неопределено;
		ВвестиЗначение(Результат, Подсказка, Новый ОписаниеТипов(Тип));  
		Если ЗначениеЗаполнено(Результат) Тогда
			ПерепривязатьЭлектронныйДокумент(Результат,СпособОбработки);
			ОповеститьВладельца();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязьСДокументом(Команда)
		
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ТекСтрока <> Неопределено Тогда
		
		ТекстВопроса = НСтр("ru = 'Связь между документами разорвется. Повторно связать документы возможно только в ручном режиме. Продолжить?'");
		Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Результат = КодВозвратаДиалога.Да Тогда
			УдалитьСвязьСДокументомНаСервере(ТекСтрока.ДокументОснование);
			ОповеститьВладельца();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьТекущий(Команда)
	
	Модифицированность = Ложь;
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ТекСтрока <> Неопределено Тогда
		ТекстВопроса = НСтр("ru = 'Документ учета будет заполнены данными электронного документа. Продолжить?'");
		//СтруктураПараметров = Новый Структура("ДокументОснование,СпособОбработки",ТекСтрока.ДокументОснование,ТекСтрока.СпособОбработки);
		//ОписаниеОповещения = Новый ОписаниеОповещения("ПерезаполнитьТекущийПродолжить", ЭтаФорма, СтруктураПараметров);
		//ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		
		Результат = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Результат = КодВозвратаДиалога.Да Тогда
			ЭлектронныеДокументыКлиент.ПерезаполнитьДокумент(ТекСтрока.ДокументОснование, , , ЭлектронныйДокумент.Ссылка, ТекСтрока.СпособОбработки);
			ОповеститьВладельца();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодобратьДокументЗавершить(Знач Результат, Знач СпособОбработки) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		ПерепривязатьЭлектронныйДокумент(Результат,СпособОбработки);
		ОповеститьВладельца();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьВладельца()
	
	Оповестить("ЭлектронныйДокументИсходящий_ПодборДокументаУчета", ЭлектронныйДокумент, ЭтаФорма.ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументУчета(Команда)
	
	СсылкаНаНовыйДокумент = СоздатьДокументУчетаНаСервере(СтрЗаменить(Команда.Имя,"Создать_",""));
	ОповеститьВладельца();
	ОткрытьЗначение(СсылкаНаНовыйДокумент);
	
КонецПроцедуры

&НаСервере
Функция СоздатьДокументУчетаНаСервере(СпособОбработки)
	
	СсылкаНаНовыйДокумент = Неопределено;
	ЭлектронныеДокументыСлужебныйВызовСервера.ПерезаполнитьДокументыИБПоЭД(СсылкаНаНовыйДокумент,ЭлектронныйДокумент.Ссылка,,Ложь,СпособОбработки);
	
	ОбработатьДокументыОснования(СсылкаНаНовыйДокумент,СпособОбработки);
	
	Возврат СсылкаНаНовыйДокумент;
	
КонецФункции

&НаСервере
Процедура УдалитьСвязьСДокументомНаСервере(СсылкаНаОбъект)
	
	ОбработатьДокументыОснования(СсылкаНаОбъект,,Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяДокументаНаСервере(СпособОбработки)
	
	ИмяТипа = ЭлектронныеДокументыСлужебный.ИмяДокументаПоСпособуОбработки(СпособОбработки);
	
	Тип = Неопределено;
	Если Метаданные.Справочники.Найти(ИмяТипа) <> Неопределено Тогда
	
		Тип = "СправочникСсылка." + ИмяТипа;
	ИначеЕсли Метаданные.Документы.Найти(ИмяТипа) <> Неопределено Тогда
	
		Тип = "ДокументСсылка." + ИмяТипа;
	КонецЕсли;
	
	Возврат Тип;
		
КонецФункции

&НаСервере
Процедура ПерепривязатьЭлектронныйДокумент(ВыбранноеЗначение,СпособОбработки)
	
	ОбработатьДокументыОснования(ВыбранноеЗначение,СпособОбработки);
		
КонецПроцедуры

&НаСервере
Процедура ОбработатьДокументыОснования(СсылкаНаДокумент,СпособОбработки = "",Удаление = Ложь)
	
	ДокументОбъект = РеквизитФормыВЗначение("ЭлектронныйДокумент", Тип("ДокументОбъект.ЭлектронныйДокументИсходящий"));
	
	СтрокаОснования = ДокументОбъект.ДокументыОснования.Найти(СсылкаНаДокумент, "ДокументОснование");
	
	Если Удаление И ЗначениеЗаполнено(СтрокаОснования) Тогда
		ДокументОбъект.ДокументыОснования.Удалить(СтрокаОснования);
	КонецЕсли;
	
	Если НЕ Удаление И Не ЗначениеЗаполнено(СтрокаОснования) Тогда
		НоваяСтрока = ДокументОбъект.ДокументыОснования.Добавить();
		НоваяСтрока.ДокументОснование = СсылкаНаДокумент;
	КонецЕсли;
	
	ДокументОбъект.Записать();
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "ЭлектронныйДокумент");
	
КонецПроцедуры

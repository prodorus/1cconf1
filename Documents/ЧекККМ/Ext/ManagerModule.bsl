// Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаДокумента";
			
		Иначе
			
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаДокументаРМК";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Область ПрограммныйИнтерфейс

// Возвращает статус документа.
//
// Параметры:
//  Ссылка - ДокументСсылка.ЧекККМ - Ссылка на чек ККМ.
//
// Возвращаемое значение:
//  ПеречислениеСсылка.СтатусыЧековККМ - Статус чека ККМ.
//
Функция СтатусДокумента(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЧекККМ.Статус
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Статус;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Получить данные для передачи в ЕГАИС сведений о розничной продаже
//
// Параметры:
//  Объект - ДокументОбъект.ЧекККМ - Документ.
// 
// Возвращаемое значение:
//  Массив - Данные о продажах (см. ИнтеграцияЕГАИСКлиентСервер.СтруктураСтрокиЧекаЕГАИС()).
//
Функция ДанныеДляЕГАИС(Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.ИдентификаторСтроки,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.ПроцентАвтоматическойСкидки,
	|	Товары.СуммаАвтоматическойСкидки,
	|	Товары.ПроцентРучнойСкидки,
	|	Товары.СуммаРучнойСкидки,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.Штрихкод,
	|	Товары.НоменклатураЕГАИС
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ИдентификаторСтроки,
	|	Товары.НомерСтроки,
	|	Товары.НоменклатураЕГАИС,
	|	Товары.Номенклатура,
	|	Товары.Номенклатура.ТипНоменклатуры                    КАК ТипНоменклатуры,
	|	Товары.Номенклатура.ПодакцизныйТовар                   КАК ПодакцизныйТовар,
	|	Товары.Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре КАК АлкогольнаяПродукцияВоВскрытойТаре,
	|	
	|	Товары.Номенклатура.НаименованиеПолное   КАК НоменклатураНаименование,
	|	Товары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	Товары.Упаковка.Наименование             КАК УпаковкаНаименование,
	|	
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.ПроцентАвтоматическойСкидки,
	|	Товары.СуммаАвтоматическойСкидки,
	|	Товары.ПроцентРучнойСкидки,
	|	Товары.СуммаРучнойСкидки,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.Штрихкод,
	|	
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.АлкогольнаяПродукция
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК АлкогольнаяПродукция,
	|	
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ВидАлкогольнойПродукции.Маркируемый
	|	ИНАЧЕ
	|		Товары.НоменклатураЕГАИС.ВидПродукции.Маркируемый
	|	КОНЕЦ КАК МаркируемаяАлкогольнаяПродукция,
	|	
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ОбъемДАЛ * 10
	|	ИНАЧЕ
	|		Товары.НоменклатураЕГАИС.Объем
	|	КОНЕЦ КАК Объем,
	|	
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.Крепость
	|	ИНАЧЕ
	|		Товары.НоменклатураЕГАИС.Крепость
	|	КОНЕЦ КАК Крепость,
	|	
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ВидАлкогольнойПродукции
	|	ИНАЧЕ
	|		Товары.НоменклатураЕГАИС.ВидПродукции
	|	КОНЕЦ КАК ВидПродукции,
	|	
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		Товары.Номенклатура.ПроизводительИмпортерДляДекларацийАлко
	|	ИНАЧЕ
	|		ВЫБОР КОГДА Товары.НоменклатураЕГАИС.Импортер <> ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка) ТОГДА
	|			Товары.НоменклатураЕГАИС.Импортер
	|		ИНАЧЕ
	|			Товары.НоменклатураЕГАИС.Производитель
	|		КОНЕЦ
	|	КОНЕЦ КАК ПроизводительИмпортер,
	|	
	|	ВЫБОР КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка) ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК Сопоставлено
	|	
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = Штрихкоды.Упаковка
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПриоритетШтрихКода
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО ТаблицаТовары.Номенклатура = Штрихкоды.Номенклатура
	|			И ТаблицаТовары.Характеристика = Штрихкоды.Характеристика
	|			И (ТаблицаТовары.Упаковка = Штрихкоды.Упаковка
	|				ИЛИ &ТекстЗапросаКоэффициентУпаковки1 = 1
	|					И ТаблицаТовары.Номенклатура.ЕдиницаИзмерения = ТаблицаТовары.Упаковка.ЕдиницаИзмерения
	|					И Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Упаковка,
	|	МАКСИМУМ(Штрихкоды.ПриоритетШтрихКода) КАК ПриоритетШтрихКода
	|ПОМЕСТИТЬ ПриотритетШтрихКода
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|
	|СГРУППИРОВАТЬ ПО
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка,
	|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ ШтрихкодыНоменклатуры
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриотритетШтрихКода КАК ПриотритетШтрихКода
	|		ПО Штрихкоды.Номенклатура = ПриотритетШтрихКода.Номенклатура
	|			И Штрихкоды.Характеристика = ПриотритетШтрихКода.Характеристика
	|			И Штрихкоды.Упаковка = ПриотритетШтрихКода.Упаковка
	|			И Штрихкоды.ПриоритетШтрихКода = ПриотритетШтрихКода.ПриоритетШтрихКода
	|
	|СГРУППИРОВАТЬ ПО
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ИдентификаторСтроки,
	|	Товары.НомерСтроки,
	|	Товары.НоменклатураЕГАИС,
	|	Товары.Номенклатура,
	|	Товары.ТипНоменклатуры,
	
	|	Товары.ПодакцизныйТовар,
	|	Товары.АлкогольнаяПродукцияВоВскрытойТаре,
	
	|	Товары.НоменклатураНаименование,
	|	Товары.ХарактеристикаНаименование,
	|	Товары.УпаковкаНаименование,
	
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.ПроцентАвтоматическойСкидки,
	|	Товары.СуммаАвтоматическойСкидки,
	|	Товары.ПроцентРучнойСкидки,
	|	Товары.СуммаРучнойСкидки,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	ВЫБОР КОГДА Товары.Штрихкод <> """" ТОГДА
	|		Товары.Штрихкод
	|	ИНАЧЕ
	|		ШтрихкодыНоменклатуры.Штрихкод
	|	КОНЕЦ КАК Штрихкод,
	|	Товары.АлкогольнаяПродукция,
	|	Товары.Сопоставлено,
	|	Товары.МаркируемаяАлкогольнаяПродукция,
	|	Товары.Объем,
	|	Товары.Крепость,
	|	Товары.ВидПродукции,
	|	Товары.ВидПродукции.Код КАК КодВидаАлкогольнойПродукции,
	|	Товары.ПроизводительИмпортер.ИНН КАК ИНН,
	|	Товары.ПроизводительИмпортер.КПП КАК КПП,
	|	Товары.ПроизводительИмпортер     КАК ПроизводительИмпортерАлкогольнойПродукции
	|ИЗ
	|	Товары КАК Товары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО    ШтрихкодыНоменклатуры.Номенклатура   = Товары.Номенклатура
	|			И ШтрихкодыНоменклатуры.Характеристика = Товары.Характеристика
	|			И ШтрихкодыНоменклатуры.Упаковка       = Товары.Упаковка
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТаблицаТовары.Упаковка",
		"ТаблицаТовары.Номенклатура"));
	
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	
	МассивСтрок = Новый Массив;
	
	ТЧ = Объект.АкцизныеМарки.Выгрузить();
	ТЧ.Индексы.Добавить("ИдентификаторСтроки");
	
	ТаблицаТоваровЧека = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТЧ Из ТаблицаТоваровЧека Цикл
		
		НоваяСтрока = РозничныеПродажиКлиентСервер.СтруктураСтрокиЧекаЕГАИС();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		
		НоваяСтрока.Наименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			СтрокаТЧ.НоменклатураНаименование,
			СтрокаТЧ.ХарактеристикаНаименование,
			СтрокаТЧ.УпаковкаНаименование);
		
		МассивСтрок.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	Возврат МассивСтрок;
	
КонецФункции

// Область ДействияПриОбменеЕГАИС

// Статус после подготовки к передаче данных
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Ссылка на документ
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция ЕГАИС.
// 
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * НовыйСтатус - ПеречисленияСсылка.СтатусыИнформированияЕГАИС - Новый статус.
//   * ДальнейшееДействие1 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 1.
//   * ДальнейшееДействие2 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 2.
//   * ДальнейшееДействие3 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 3.
//
Функция СтатусПослеПодготовкиКПередачеДанных(ДокументСсылка, Операция) Экспорт
	
	Возврат ЧекиЕГАИС.СтатусПослеПодготовкиКПередачеДанных(ДокументСсылка, Операция);
	
КонецФункции

// Статус после передачи данных
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Ссылка на документ
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция ЕГАИС
//  СтатусОбработки - ПеречислениеСсылка.СтатусыОбработкиСообщенийЕГАИС - Статус обработки сообщения.
// 
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * НовыйСтатус - ПеречисленияСсылка.СтатусыИнформированияЕГАИС - Новый статус.
//   * ДальнейшееДействие1 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 1.
//   * ДальнейшееДействие2 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 2.
//   * ДальнейшееДействие3 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 3.
//
Функция СтатусПослеПередачиДанных(ДокументСсылка, Операция, СтатусОбработки) Экспорт
	
	Возврат ЧекиЕГАИС.СтатусПослеПередачиДанных(ДокументСсылка, Операция, СтатусОбработки);
	
КонецФункции

// Статус после получения данных из ЕГАИС.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Документ, для которого требуется обновить статус.
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция обмена с ЕГАИС.
//  ДополнительныеПараметры - Неопределено, Структура со свойствами:
//   * СтатусОбработки - Перечисление.СтатусыОбработкиСообщенийЕГАИС - Статус обработки сообщения.
//   * ОперацияКвитанции - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция, на которую получена квитанция.
// 
// Возвращаемое значение:
//  Структура - Структура со свойствами:
//   * НовыйСтатус - ПеречисленияСсылка.СтатусыИнформированияЕГАИС - Новый статус.
//   * ДальнейшееДействие1 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 1.
//   * ДальнейшееДействие2 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 2.
//   * ДальнейшееДействие3 - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие 3.
//
Функция СтатусПослеПолученияДанных(ДокументСсылка, Операция, ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ЧекиЕГАИС.СтатусПослеПолученияДанных(ДокументСсылка, Операция, ДополнительныеПараметры);
	
КонецФункции


// Обновить статус после подготовки к передаче данных
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Ссылка на документ
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция ЕГАИС.
// 
// Возвращаемое значение:
//  Перечисления.СтатусыИнформированияЕГАИС - Новый статус.
//
Функция ОбновитьСтатусПослеПодготовкиКПередачеДанных(ДокументСсылка, Операция, ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ЧекиЕГАИС.ОбновитьСтатусПослеПодготовкиКПередачеДанных(ДокументСсылка, Операция, ДополнительныеПараметры);
	
КонецФункции

// Обновить статус после передачи данных
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Ссылка на документ
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция ЕГАИС
//  СтатусОбработки - ПеречислениеСсылка.СтатусыОбработкиСообщенийЕГАИС - Статус обработки сообщения.
// 
// Возвращаемое значение:
//  Перечисления.СтатусыИнформированияЕГАИС - Новый статус.
//
Функция ОбновитьСтатусПослеПередачиДанных(ДокументСсылка, Операция, СтатусОбработки, ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ЧекиЕГАИС.ОбновитьСтатусПослеПередачиДанных(ДокументСсылка, Операция, СтатусОбработки, ДополнительныеПараметры);
	
КонецФункции

// Обновить статус после получения данных из ЕГАИС.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Документ, для которого требуется обновить статус.
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция обмена с ЕГАИС.
//  ДополнительныеПараметры - Неопределено, Структура со свойствами:
//   * СтатусОбработки - Перечисление.СтатусыОбработкиСообщенийЕГАИС - Статус обработки сообщения.
//   * ОперацияКвитанции - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция, на которую получена квитанция.
// 
// Возвращаемое значение:
//  Перечисления.СтатусыИнформированияЕГАИС - Новый статус.
//
Функция ОбновитьСтатусПослеПолученияДанных(ДокументСсылка, Операция, ДополнительныеПараметры = Неопределено) Экспорт
	
	Возврат ЧекиЕГАИС.ОбновитьСтатусПослеПолученияДанных(ДокументСсылка, Операция, ДополнительныеПараметры);
	
КонецФункции


// Получить последовательность операций в течении жизненного цикла документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Документ, для которого требуется обновить статус.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - см. функцию ИнтеграцияЕГАИС.ПустаяТаблицаПоследовательностьОпераций().
//
Функция ПоследовательностьОпераций(ДокументСсылка) Экспорт
	
	Возврат ЧекиЕГАИС.ПоследовательностьОпераций(ДокументСсылка);
	
КонецФункции

// Обработчик изменения статуса документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.АктПостановкиНаБалансЕГАИС - Документ.
//  ПредыдущийСтатус - ПеречислениеСсылка.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС - Предыдущий статус.
//  НовыйСтатус - ПеречислениеСсылка.СтатусыОбработкиАктаПостановкиНаБалансЕГАИС - Предыдущий статус.
//  ПараметрыОбновленияСтатуса - Структура - см. функцию ИнтеграцияЕГАИС.ПараметрыОбновленияСтатуса().
//
Процедура ПриИзмененииСтатусаДокумента(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус, ПараметрыОбновленияСтатуса) Экспорт
	
	ЧекиЕГАИС.ПриИзмененииСтатусаЧека(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус, ПараметрыОбновленияСтатуса);
	
	РассчитатьСтатусОформления(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус);
	
КонецПроцедуры

// Опеределить необходимость перерасчета статуса оформления документов.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ЧекЕГАИС - Документ, по которому требуется рассчитать статус оформления.
//  ПредыдущийСтатус - ПеречислениеСсылка.СтатусыИнформированияЕГАИС - Предыдущий статус.
//  НовыйСтатус - ПеречислениеСсылка.СтатусыИнформированияЕГАИС - Предыдущий статус.
// 
// Возвращаемое значение:
//  Булево - Необходимость перерасчета статуса оформления.
//
Функция РассчитатьСтатусОформления(ДокументСсылка, ПредыдущийСтатус, НовыйСтатус) Экспорт
	Возврат Неопределено;
КонецФункции

// КонецОбласти

// Область Статусы

// Возвращает статус по умолчанию.
// 
// Возвращаемое значение:
//  Перечисления.СтатусыИнформированияЕГАИС - Статус по-умолчанию.
//
Функция СтатусПоУмолчанию() Экспорт
	
	Возврат ЧекиЕГАИС.СтатусПоУмолчанию();
	
КонецФункции

// Возвращает статусы движений.
//
// Возвращаемое значение:
//  Массив - Статусы.
//
Функция СтатусыДвиженийАкцизныхМарокСвободныйОстаток() Экспорт
	
	Возврат ЧекиЕГАИС.СтатусыДвиженийАкцизныхМарокСвободныйОстаток();
	
КонецФункции

// Возвращает статусы движений.
//
// Возвращаемое значение:
//  Массив - Статусы.
//
Функция СтатусыДвиженийАкцизныхМарокКоличество() Экспорт
	
	Возврат ЧекиЕГАИС.СтатусыДвиженийАкцизныхМарокКоличество();
	
КонецФункции

// Возвращает дальнейшее действие по умолчанию.
// 
// Возвращаемое значение:
//  Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС - Дальнейшее действие по-умолчанию.
//
Функция ДальнейшееДействиеПоУмолчанию() Экспорт
	
	Возврат ЧекиЕГАИС.ДальнейшееДействиеПоУмолчанию();
	
КонецФункции

// КонецОбласти

// Область СообщенияЕГАИС

// Сообщение к передаче XML
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - Ссылка на документ
//  Операция - ПеречислениеСсылка.ВидыДокументовЕГАИС - Операция ЕГАИС.
// 
// Возвращаемое значение:
//  Строка - Текст сообщения XML
//
Функция СообщениеКПередачеXML(ДокументСсылка, ДальнейшееДействие, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ПередайтеДанные Тогда
		
		Возврат ЧекЕГАИСXML(ДокументСсылка, ДополнительныеПараметры);
		
	ИначеЕсли ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ОтменитеОперацию Тогда
		
		Возврат ЧекЕГАИСОтменаXML(ДокументСсылка, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецФункции

// КонецОбласти

// Область СканированиеАлкогольнойПродукции

Функция ТаблицаАлкогольнойПродукцииКОпределениюСправок2(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабличнаяЧасть.НоменклатураЕГАИС КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТабличнаяЧасть.СерияНоменклатуры КАК Серия,
	|	ТабличнаяЧасть.Количество КАК Количество
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	&Товары КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка) КАК Справка2,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ЛОЖЬ) КАК Маркируемая
	|ИЗ
	|	ВТТовары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО (КлассификаторАлкогольнойПродукцииЕГАИС.ВидПродукции = ВидыАлкогольнойПродукции.Ссылка)
	|ГДЕ
	|	НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Характеристика,
	|	ЕСТЬNULL(ВидыАлкогольнойПродукции.Маркируемый, ЛОЖЬ),
	|	ТабличнаяЧасть.Серия";
	
	Запрос.УстановитьПараметр("Товары", ДокументОбъект.Товары.Выгрузить());
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ШтрихкодыУпаковок(ДокументСсылка, ЗаполнитьСправки2ИзРегистра = Ложь) Экспорт
	
	ПараметрыФормированияТекстаЗапроса = Справочники.ШтрихкодыУпаковокТоваров.ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
	ПараметрыФормированияТекстаЗапроса.ДокументСсылка                  = ДокументСсылка;
	ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Истина;
	ПараметрыФормированияТекстаЗапроса.ИмяПоляАлкогольнаяПродукция     = "НоменклатураЕГАИС";
	ПараметрыФормированияТекстаЗапроса.ЗаполнитьСправки2ИзРегистра     = ЗаполнитьСправки2ИзРегистра;
	
	Возврат Справочники.ШтрихкодыУпаковокТоваров.ШтрихкодыУпаковокПоДокументу(ПараметрыФормированияТекстаЗапроса);
	
КонецФункции

Функция ОбработатьШтрихкодАкцизнойМарки(Форма, ДанныеШтрихкода, ПараметрыСканированияАкцизныхМарок) Экспорт
	
	Результат = АкцизныеМаркиЕГАИС.РезультатОбработкиШтрихкода(ДанныеШтрихкода);
	
	ПараметрыЗаполнения = АкцизныеМаркиЕГАИС.ПараметрыЗаполненияТоваровИАкцизныхМарок(Форма, Истина, ПараметрыСканированияАкцизныхМарок);
	ПараметрыЗаполнения.ЕстьСправка2                   = Ложь;
	ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция = "НоменклатураЕГАИС";
	ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок    = Ложь;
	
	ПараметрыПоискаСтатусаУказанияСерии = Новый Структура;
	ПараметрыПоискаСтатусаУказанияСерии.Вставить("Номенклатура",               ДанныеШтрихкода.Номенклатура);
	ПараметрыПоискаСтатусаУказанияСерии.Вставить("ХарактеристикаНоменклатуры", ДанныеШтрихкода.Характеристика);
	
	НайденныеСтроки = Форма.ЭтотОбъект.Товары.НайтиСтроки(ПараметрыПоискаСтатусаУказанияСерии);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		Если Истина Тогда
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура",               ДанныеШтрихкода.Номенклатура);
			ПараметрыОтбора.Вставить("ХарактеристикаНоменклатуры", ДанныеШтрихкода.Характеристика);
			ПараметрыОтбора.Вставить("СерияНоменклатуры",          ДанныеШтрихкода.Серия);
			
		Иначе
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура",               ДанныеШтрихкода.Номенклатура);
			ПараметрыОтбора.Вставить("ХарактеристикаНоменклатуры", ДанныеШтрихкода.Характеристика);
			ПараметрыОтбора.Вставить("СерияНоменклатуры",          Справочники.СерииНоменклатуры.ПустаяСсылка());
			
		КонецЕсли;
		
		РезультатПоиска = АкцизныеМаркиЕГАИС.НайтиСтрокиТоваров(
			Форма.ЭтотОбъект.Товары, ПараметрыОтбора,
			Неопределено, ДанныеШтрихкода.АлкогольнаяПродукция, ПараметрыЗаполнения);
		
		СтрокаТЧ                        = РезультатПоиска.ПолноеСоответствие;
		СтрокиТЧДляУменьшенияКоличества = РезультатПоиска.КЗаполнению;
		
	Иначе
		
		СтрокаТЧ                        = Неопределено;
		СтрокиТЧДляУменьшенияКоличества = Неопределено;
		
	КонецЕсли;
	
	Если СтрокиТЧДляУменьшенияКоличества = Неопределено
		И СтрокаТЧ = Неопределено Тогда
		
		СтрокаТЧ = Форма.ЭтотОбъект.Товары.Добавить();
		СтрокаТЧ[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = ДанныеШтрихкода.АлкогольнаяПродукция;
		СтрокаТЧ.Номенклатура                     = ДанныеШтрихкода.Номенклатура;
		СтрокаТЧ.ХарактеристикаНоменклатуры       = ДанныеШтрихкода.Характеристика;
		СтрокаТЧ.СерияНоменклатуры                = ДанныеШтрихкода.Серия;
		
		АкцизныеМаркиЕГАИС.ОбработатьДобавленнуюСтроку(СтрокаТЧ, ПараметрыЗаполнения, 1);
		
	ИначеЕсли СтрокиТЧДляУменьшенияКоличества = Неопределено
		И СтрокаТЧ <> Неопределено Тогда
		
		АкцизныеМаркиЕГАИС.ОбработатьИзмененнуюСтроку(СтрокаТЧ, ПараметрыЗаполнения, 1);
		
	Иначе
		
		Для Каждого СтрокаТЧДляУменьшенияКоличества Из СтрокиТЧДляУменьшенияКоличества Цикл
			
			Если СтрокаТЧДляУменьшенияКоличества.Количество <= 1 Тогда
				
				Если СтрокаТЧ = Неопределено Тогда
					
					СтрокаТЧ = СтрокаТЧДляУменьшенияКоличества;
					
					СтрокаТЧ[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = ДанныеШтрихкода.АлкогольнаяПродукция;
					
				Иначе
					
					Форма.ЭтотОбъект.Товары.Удалить(СтрокаТЧДляУменьшенияКоличества);
					
					Индекс = ПараметрыЗаполнения.ИзмененныеСтроки.Найти(СтрокаТЧДляУменьшенияКоличества);
					Если Индекс <> Неопределено Тогда
						ПараметрыЗаполнения.ИзмененныеСтроки.Удалить(Индекс);
					КонецЕсли;
					
				КонецЕсли;
				
				АкцизныеМаркиЕГАИС.ОбработатьИзмененнуюСтроку(СтрокаТЧ, ПараметрыЗаполнения, 1);
				
			Иначе
				
				СтрокаТЧДляУменьшенияКоличества.Количество = СтрокаТЧДляУменьшенияКоличества.Количество - 1;
				ПараметрыЗаполнения.ИзмененныеСтроки.Добавить(СтрокаТЧДляУменьшенияКоличества);
				
				Если СтрокаТЧ = Неопределено Тогда
					
					СтрокаТЧ = Форма.ЭтотОбъект.Товары.Вставить(Форма.ЭтотОбъект.Товары.Индекс(СтрокаТЧДляУменьшенияКоличества) + 1);
					ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаТЧДляУменьшенияКоличества,,"Количество, КоличествоУпаковок, ИдентификаторСтроки");
					
					СтрокаТЧ[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = ДанныеШтрихкода.АлкогольнаяПродукция;
					
					АкцизныеМаркиЕГАИС.ОбработатьДобавленнуюСтроку(СтрокаТЧ, ПараметрыЗаполнения, 1);
					
				Иначе
					
					АкцизныеМаркиЕГАИС.ОбработатьИзмененнуюСтроку(СтрокаТЧ, ПараметрыЗаполнения, 1);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Прервать;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаТЧ.КлючСтроки) Тогда
		СтрокаТЧ.КлючСтроки = СтрокаТЧ.НомерСтроки;
	КонецЕсли;
	
	АкцизныеМаркиСтрокаТЧ = Форма.ЭтотОбъект.АкцизныеМарки.Добавить();
	АкцизныеМаркиСтрокаТЧ.КлючСтроки          = СтрокаТЧ.КлючСтроки;
	АкцизныеМаркиСтрокаТЧ.АкцизнаяМарка       = ДанныеШтрихкода.ШтрихкодУпаковки;
	АкцизныеМаркиСтрокаТЧ.Справка2            = ДанныеШтрихкода.Справка2;
	
	Если Ложь Тогда
		
		СтруктураПоискаСерий = Новый Структура;
		СтруктураПоискаСерий.Вставить("Номенклатура",               ДанныеШтрихкода.Номенклатура);
		СтруктураПоискаСерий.Вставить("ХарактеристикаНоменклатуры", ДанныеШтрихкода.Характеристика);
		СтруктураПоискаСерий.Вставить("СерияНоменклатуры",          ДанныеШтрихкода.Серия);
		
		СтрокиСерии = Форма.ЭтотОбъект.Серии.НайтиСтроки(СтруктураПоискаСерий);
		Если СтрокиСерии.Количество() = 0 Тогда
			
			СтрокаТЧСерии = Форма.ЭтотОбъект.Серии.Добавить();
			СтрокаТЧСерии.Номенклатура   = ДанныеШтрихкода.Номенклатура;
			СтрокаТЧСерии.Характеристика = ДанныеШтрихкода.Характеристика;
			СтрокаТЧСерии.Серия          = ДанныеШтрихкода.Серия;
			СтрокаТЧСерии.Количество     = СтрокаТЧ.Количество;
			
		Иначе
			
			СтрокаТЧСерии = СтрокиСерии[0];
			Если СтрокаТЧСерии.Количество < СтрокаТЧ.Количество Тогда
				СтрокаТЧСерии.Количество = СтрокаТЧ.Количество;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Результат.ИзмененныеСтроки  = ПараметрыЗаполнения.ИзмененныеСтроки;
	Результат.ДобавленныеСтроки = ПараметрыЗаполнения.ДобавленныеСтроки;
	
	Возврат Результат;
	
КонецФункции

Функция ОбработатьШтрихкодУпаковки(Форма, ДанныеШтрихкода, ВложенныеШтрихкоды, ПараметрыСканированияАкцизныхМарок) Экспорт
	
	Результат = АкцизныеМаркиЕГАИС.РезультатОбработкиШтрихкода(ДанныеШтрихкода);
	
	ПараметрыЗаполнения = АкцизныеМаркиЕГАИС.ПараметрыЗаполненияТоваровИАкцизныхМарок(Форма, Истина, ПараметрыСканированияАкцизныхМарок);
	ПараметрыЗаполнения.ЕстьСправка2                   = Ложь;
	ПараметрыЗаполнения.ПараметрыУказанияСерий         = Форма.ПараметрыУказанияСерий;
	ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция = "НоменклатураЕГАИС";
	
	ЗаполнитьТоварыИАкцизныеМарки(Форма.ЭтотОбъект, ВложенныеШтрихкоды.ДеревоУпаковок, ПараметрыЗаполнения);
	
	Результат.ИзмененныеСтроки  = ПараметрыЗаполнения.ИзмененныеСтроки;
	Результат.ДобавленныеСтроки = ПараметрыЗаполнения.ДобавленныеСтроки;
	
	Возврат Результат;
	
КонецФункции

Функция ОбработатьШтрихкодDataMatrix(Форма, ДанныеШтрихкода, ПараметрыСканированияАкцизныхМарок) Экспорт
	
	Результат = АкцизныеМаркиЕГАИС.РезультатОбработкиШтрихкода(ДанныеШтрихкода);
	Результат.ТекстОшибки = НСтр("ru = 'Обработка кодов DataMatrix в документе Чек ККМ не поддерживается. Считайте код акцизной марки.'");
	
	Возврат Результат;
	
КонецФункции

Функция СерииУказываютсяВТабличнойЧастиТовары(ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Номенклатура",               СтрокаДерева.Номенклатура);
	ПараметрыОтбора.Вставить("ХарактеристикаНоменклатуры", СтрокаДерева.Характеристика);
	
	НайденныеСтроки = ДокументОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		СерииУказываютсяВТабличнойЧастиТовары = НайденныеСтроки[0].Номенклатура.ВестиУчетПоСериям;
	Иначе
		СерииУказываютсяВТабличнойЧастиТовары = Неопределено;
	КонецЕсли;
	
	Возврат СерииУказываютсяВТабличнойЧастиТовары;
	
КонецФункции

// Заполняет табличные части Акцизные марки и Товары по данным дерева упаковок.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект.ТТНИсходящаяЕГАИС - ТТН ЕГАИС (исходящая).
//  ДеревоУпаковок - ДеревоЗначений - дерево упаковок.
//  ШтрихкодыУпаковок - ТаблицаЗначений - таблица штрихкодов упаковок и их хеш-сумм.
//  УпаковкаВерхнегоУровня - СправочникСсылка.ШтрихкодыУпаковокТоваров - Упаковка верхнего уровня.
//
Процедура ЗаполнитьТоварыИАкцизныеМарки(ДокументОбъект, ДеревоУпаковок, ПараметрыЗаполнения, УпаковкаВерхнегоУровня = Неопределено) Экспорт
	
	ПараметрыЗаполнения.ЕстьКоличествоАкцизныхМарок = Ложь;
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок.Строки Цикл
		
		Если УпаковкаВерхнегоУровня = Неопределено
			И СтрокаДерева.ТипУпаковки <> Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			УпаковкаВерхнегоУровняСтрокиДерева = СтрокаДерева.ШтрихкодУпаковки;
		Иначе
			УпаковкаВерхнегоУровняСтрокиДерева = УпаковкаВерхнегоУровня;
		КонецЕсли;
		
		ЗаполнитьТоварыИАкцизныеМарки(
			ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения,
			УпаковкаВерхнегоУровняСтрокиДерева);
		
		Если СтрокаДерева.ТипУпаковки = Перечисления.ТипыУпаковок.МаркированныйТовар Тогда
			
			СерииУказываютсяВТабличнойЧастиТовары = СерииУказываютсяВТабличнойЧастиТовары(ДокументОбъект, СтрокаДерева, ПараметрыЗаполнения);
			
			ВыполнитьПоискПоНоменклатуре = Истина;
			Если ЗначениеЗаполнено(СтрокаДерева.ИдентификаторСтроки) Тогда
				
				ПараметрыОтбора = Новый Структура("КлючСтроки", СтрокаДерева.ИдентификаторСтроки);
				СтрокиТовары = ДокументОбъект.Товары.НайтиСтроки(ПараметрыОтбора);
				
				Если СтрокиТовары.Количество() > 0 Тогда
					ВыполнитьПоискПоНоменклатуре = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ВыполнитьПоискПоНоменклатуре Тогда
				
				Если СерииУказываютсяВТабличнойЧастиТовары <> Неопределено
					И СерииУказываютсяВТабличнойЧастиТовары Тогда
					
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Номенклатура",               СтрокаДерева.Номенклатура);
					ПараметрыОтбора.Вставить("ХарактеристикаНоменклатуры", СтрокаДерева.Характеристика);
					ПараметрыОтбора.Вставить("СерияНоменклатуры",          СтрокаДерева.Серия);
					
				Иначе
					
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Номенклатура",               СтрокаДерева.Номенклатура);
					ПараметрыОтбора.Вставить("ХарактеристикаНоменклатуры", СтрокаДерева.Характеристика);
					
				КонецЕсли;
				
				РезультатПоиска = АкцизныеМаркиЕГАИС.НайтиСтрокиТоваров(
					ДокументОбъект.Товары, ПараметрыОтбора,
					Неопределено, СтрокаДерева.АлкогольнаяПродукция, ПараметрыЗаполнения);
				
				СтрокаТЧТовары                  = РезультатПоиска.ПолноеСоответствие;
				СтрокиТЧДляУменьшенияКоличества = РезультатПоиска.КЗаполнению;
				
			Иначе
				
				СтрокаТЧТовары                  = СтрокиТовары[0];
				СтрокиТЧДляУменьшенияКоличества = Неопределено;
				
			КонецЕсли;
			
			Если СтрокиТЧДляУменьшенияКоличества = Неопределено
				И СтрокаТЧТовары = Неопределено Тогда
				
				СтрокаТЧТовары = ДокументОбъект.Товары.Добавить();
				
				СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = СтрокаДерева.АлкогольнаяПродукция;
				СтрокаТЧТовары.Номенклатура               = СтрокаДерева.Номенклатура;
				СтрокаТЧТовары.ХарактеристикаНоменклатуры = СтрокаДерева.Характеристика;
				СтрокаТЧТовары.СерияНоменклатуры          = СтрокаДерева.Серия;
				
				Если Не ЗначениеЗаполнено(СтрокаДерева.ИдентификаторСтроки) Тогда
					СтрокаТЧТовары.КлючСтроки = Новый УникальныйИдентификатор;
				Иначе
					СтрокаТЧТовары.КлючСтроки = СтрокаДерева.ИдентификаторСтроки;
				КонецЕсли;
				
				АкцизныеМаркиЕГАИС.ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, 1);
				
				ПроверитьСериюРассчитатьСтатус = Новый Структура;
				ПроверитьСериюРассчитатьСтатус.Вставить("Склад",                  ДокументОбъект.Склад);
				ПроверитьСериюРассчитатьСтатус.Вставить("ПараметрыУказанияСерий", ПараметрыЗаполнения.ПараметрыУказанияСерий);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПроверитьСериюРассчитатьСтатус);
				
				ОбработкаТабличнойЧастиСерверЕГАИСУТ.ОбработатьСтрокуТЧ(СтрокаТЧТовары, СтруктураДействий, Неопределено);
				
				Если НЕ НоменклатураКлиентСервер.ВЭтомСтатусеСерииУказываютсяВТЧТовары(
					СтрокаТЧТовары.СтатусУказанияСерий, ПараметрыЗаполнения.ПараметрыУказанияСерий) Тогда
					СтрокаТЧТовары.Серия = Неопределено;
				КонецЕсли;
				
			ИначеЕсли СтрокиТЧДляУменьшенияКоличества = Неопределено
				И СтрокаТЧТовары <> Неопределено Тогда
				
				АкцизныеМаркиЕГАИС.ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, 1);
				
			Иначе
				
				Для Каждого СтрокаТЧДляУменьшенияКоличества Из СтрокиТЧДляУменьшенияКоличества Цикл
					
					Если СтрокаТЧДляУменьшенияКоличества.Количество <= 1 Тогда
						
						Если СтрокаТЧТовары = Неопределено Тогда
							
							СтрокаТЧТовары = СтрокаТЧДляУменьшенияКоличества;
							
							СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = СтрокаДерева.АлкогольнаяПродукция;
							
						Иначе
							
							ДокументОбъект.Товары.Удалить(СтрокаТЧДляУменьшенияКоличества);
							
							Индекс = ПараметрыЗаполнения.ИзмененныеСтроки.Найти(СтрокаТЧДляУменьшенияКоличества);
							Если Индекс <> Неопределено Тогда
								ПараметрыЗаполнения.ИзмененныеСтроки.Удалить(Индекс);
							КонецЕсли;
							
						КонецЕсли;
						
						АкцизныеМаркиЕГАИС.ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, 1);
						
					Иначе
						
						СтрокаТЧДляУменьшенияКоличества.Количество = СтрокаТЧДляУменьшенияКоличества.Количество - 1;
						ПараметрыЗаполнения.ИзмененныеСтроки.Добавить(СтрокаТЧДляУменьшенияКоличества);
						
						Если СтрокаТЧТовары = Неопределено Тогда
							
							СтрокаТЧТовары = ДокументОбъект.Товары.Вставить(ДокументОбъект.Товары.Индекс(СтрокаТЧДляУменьшенияКоличества) + 1);
							ЗаполнитьЗначенияСвойств(СтрокаТЧТовары, СтрокаТЧДляУменьшенияКоличества,,"Количество, КоличествоУпаковок, ИдентификаторСтроки");
							
							СтрокаТЧТовары[ПараметрыЗаполнения.ИмяКолонкиАлкогольнаяПродукция] = СтрокаДерева.АлкогольнаяПродукция;
							
							АкцизныеМаркиЕГАИС.ОбработатьДобавленнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, 1);
							
						Иначе
							
							АкцизныеМаркиЕГАИС.ОбработатьИзмененнуюСтроку(СтрокаТЧТовары, ПараметрыЗаполнения, 1);
							
						КонецЕсли;
						
					КонецЕсли;
					
					Прервать;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаТЧТовары.КлючСтроки) Тогда
				СтрокаТЧТовары.КлючСтроки = СтрокаТЧТовары.НомерСтроки;
			КонецЕсли;
			
			СтрокаТЧАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
			СтрокаТЧАкцизныеМарки.КлючСтроки          = СтрокаТЧТовары.КлючСтроки;
			СтрокаТЧАкцизныеМарки.АкцизнаяМарка       = СтрокаДерева.ШтрихкодУпаковки;
			СтрокаТЧАкцизныеМарки.Справка2            = СтрокаДерева.Справка2;
			СтрокаТЧАкцизныеМарки.ШтрихкодУпаковки    = УпаковкаВерхнегоУровня;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// КонецОбласти

// Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(КассаККМ)
	|	И ЗначениеРазрешено(Склад)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// КонецОбласти

// КонецОбласти

// Область СообщенияЕГАИС

Функция ЧекЕГАИСXML(ДокументСсылка, ДополнительныеПараметры)
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ЕГАИСПрисоединенныеФайлы.Документ      КАК Ссылка,
		|	КОЛИЧЕСТВО(ЕГАИСПрисоединенныеФайлы.Ссылка) КАК ПоследнийНомер
		|ПОМЕСТИТЬ Версии
		|ИЗ
		|	Справочник.ЕГАИСПрисоединенныеФайлы КАК ЕГАИСПрисоединенныеФайлы
		|ГДЕ
		|	ЕГАИСПрисоединенныеФайлы.Документ = &Ссылка
		|	И ЕГАИСПрисоединенныеФайлы.Операция = &Операция
		|	И ЕГАИСПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовЕГАИС.Исходящий)
		|СГРУППИРОВАТЬ ПО
		|	ЕГАИСПрисоединенныеФайлы.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Шапка.Номер                                  КАК Номер,
		|	Шапка.Дата                                   КАК Дата,
		|	ЕСТЬNULL(Версии.ПоследнийНомер, 0)           КАК ПоследнийНомерВерсии,
		|	Шапка.Ссылка                                 КАК ДокументОснование,
		|	КлассификаторОрганизацийЕГАИС.Ссылка         КАК ОрганизацияЕГАИС,
		|	КлассификаторОрганизацийЕГАИС.Код            КАК ИдентификаторФСРАР,
		|	КлассификаторОрганизацийЕГАИС.ФорматОбмена   КАК ФорматОбмена,
		|	КлассификаторОрганизацийЕГАИС.ИНН            КАК ИНН,
		|	КлассификаторОрганизацийЕГАИС.КПП            КАК КПП,
		|	КлассификаторОрганизацийЕГАИС.ТорговыйОбъект КАК ТорговыйОбъект,
		|	Шапка.Ответственный                          КАК Ответственный,
		|	&НомерСмены                                  КАК НомерСмены,
		|	&НомерЧека                                   КАК НомерЧекаККМ,
		|	&СерийныйНомер                               КАК СерийныйНомерККМ
		|ПОМЕСТИТЬ Шапка
		|ИЗ
		|	Документ.ЧекККМ КАК Шапка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Версии КАК Версии
		|		ПО Шапка.Ссылка = Версии.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|		ПО Шапка.ОрганизацияЕГАИС = КлассификаторОрганизацийЕГАИС.Ссылка
		|ГДЕ
		|	Шапка.Ссылка = &Ссылка
		|;
		|
		|//#РезультатЗапроса#////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	*
		|ИЗ
		|	Шапка
		|",
		"Шапка");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	Товары.КлючСтроки              КАК ИдентификаторСтроки,
		|	Товары.НомерСтроки             КАК НомерСтроки,
		|	Товары.Количество              КАК Количество,
		|	Товары.Цена                    КАК Цена,
		|	Товары.Штрихкод                КАК Штрихкод,
		|	Товары.НоменклатураЕГАИС       КАК АлкогольнаяПродукция,
		|	Товары.НоменклатураЕГАИС.Объем КАК Объем
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|	И Товары.Номенклатура.АлкогольнаяПродукция
		|	И Товары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
		|	И НЕ Товары.Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|",
		"Товары");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	Шапка.ОрганизацияЕГАИС             КАК ОрганизацияЕГАИС,
		|	ТабличнаяЧасть.КлючСтроки          КАК ИдентификаторСтроки,
		|	ЕСТЬNULL(ТабличнаяЧастьТовары.НоменклатураЕГАИС, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2            КАК Справка2,
		|	ТабличнаяЧасть.АкцизнаяМарка       КАК ШтрихкодУпаковки,
		|	ТабличнаяЧасть.ШтрихкодУпаковки    КАК ШтрихкодРодительскойУпаковки
		|ПОМЕСТИТЬ ВТВложенныеШтрихкодыИсходныеДанные
		|ИЗ
		|	Документ.ЧекККМ.АкцизныеМарки КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТабличнаяЧастьТовары
		|		ПО ТабличнаяЧастьТовары.КлючСтроки = ТабличнаяЧасть.КлючСтроки
		|		И ТабличнаяЧастьТовары.КлючСтроки <> """"
		|		ЛЕВОЕ СОЕДИНЕНИЕ Шапка КАК Шапка
		|		ПО ИСТИНА
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	ШтрихкодУпаковки,
		|	ШтрихкодРодительскойУпаковки
		|");
	
	ПараметрыФормированияТекстаЗапроса = Справочники.ШтрихкодыУпаковокТоваров.ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
	ПараметрыФормированияТекстаЗапроса.ДокументСсылка                  = Неопределено;
	ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Истина;
	ПараметрыФормированияТекстаЗапроса.ИмяПоляАлкогольнаяПродукция     = "НоменклатураЕГАИС";
	ТекстыЗапроса.Добавить(
		Справочники.ШтрихкодыУпаковокТоваров.ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса),
		"ВложенныеШтрихкоды");
	
	МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка",   ДокументСсылка);
	Запрос.УстановитьПараметр("Операция", Перечисления.ВидыДокументовЕГАИС.ЧекККМ);
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ПараметрыЧека = ИнтеграцияЕГАИСУТ.ПараметрыЧека(ДокументСсылка);
		НомерЧека     = ПараметрыЧека.НомерЧека;
		НомерСмены    = ПараметрыЧека.НомерСмены;
		СерийныйНомер = ПараметрыЧека.СерийныйНомер;
	Иначе
		НомерЧека     = ДополнительныеПараметры.НомерЧека;
		НомерСмены    = ДополнительныеПараметры.НомерСмены;
		СерийныйНомер = ДополнительныеПараметры.СерийныйНомер;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НомерЧека",     НомерЧека);
	Запрос.УстановитьПараметр("НомерСмены",    НомерСмены);
	Запрос.УстановитьПараметр("СерийныйНомер", СерийныйНомер);
	
	РезультатыЗапроса = ИнтеграцияГосИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	Возврат ЧекиЕГАИС.ЧекЕГАИСXML(ДокументСсылка, РезультатыЗапроса, МенеджерВременныхТаблиц);
	
КонецФункции

Функция ЧекЕГАИСОтменаXML(ДокументСсылка, ДополнительныеПараметры)
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ЕГАИСПрисоединенныеФайлы.Документ      КАК Ссылка,
		|	КОЛИЧЕСТВО(ЕГАИСПрисоединенныеФайлы.Ссылка) КАК ПоследнийНомер
		|ПОМЕСТИТЬ Версии
		|ИЗ
		|	Справочник.ЕГАИСПрисоединенныеФайлы КАК ЕГАИСПрисоединенныеФайлы
		|ГДЕ
		|	ЕГАИСПрисоединенныеФайлы.Документ = &Ссылка
		|	И ЕГАИСПрисоединенныеФайлы.Операция = &Операция
		|	И ЕГАИСПрисоединенныеФайлы.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыЗапросовЕГАИС.Исходящий)
		|СГРУППИРОВАТЬ ПО
		|	ЕГАИСПрисоединенныеФайлы.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Шапка.Номер                                  КАК Номер,
		|	Шапка.Дата                                   КАК Дата,
		|	ЕСТЬNULL(Версии.ПоследнийНомер, 0)           КАК ПоследнийНомерВерсии,
		|	Шапка.Ссылка                                 КАК ДокументОснование,
		|	КлассификаторОрганизацийЕГАИС.Ссылка         КАК ОрганизацияЕГАИС,
		|	КлассификаторОрганизацийЕГАИС.Код            КАК ИдентификаторФСРАР,
		|	КлассификаторОрганизацийЕГАИС.ФорматОбмена   КАК ФорматОбмена,
		|	КлассификаторОрганизацийЕГАИС.ИНН            КАК ИНН,
		|	КлассификаторОрганизацийЕГАИС.КПП            КАК КПП,
		|	КлассификаторОрганизацийЕГАИС.ТорговыйОбъект КАК ТорговыйОбъект,
		|	Шапка.Ответственный                          КАК Ответственный,
		|	&НомерСмены                                  КАК НомерСмены,
		|	&НомерЧека                                   КАК НомерЧекаККМ,
		|	&СерийныйНомер                               КАК СерийныйНомерККМ
		|ПОМЕСТИТЬ Шапка
		|ИЗ
		|	Документ.ЧекККМ КАК Шапка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Версии КАК Версии
		|		ПО Шапка.Ссылка = Версии.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
		|		ПО Шапка.Склад = КлассификаторОрганизацийЕГАИС.ТорговыйОбъект
		|		 И Шапка.Организация = КлассификаторОрганизацийЕГАИС.Контрагент
		|ГДЕ
		|	Шапка.Ссылка = &Ссылка
		|;
		|
		|//#РезультатЗапроса#////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	*
		|ИЗ
		|	Шапка
		|",
		"Шапка");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	Товары.КлючСтроки              КАК ИдентификаторСтроки,
		|	Товары.НомерСтроки             КАК НомерСтроки,
		|	Товары.Количество              КАК Количество,
		|	-Товары.Цена                   КАК Цена,
		|	Товары.Штрихкод                КАК Штрихкод,
		|	Товары.НоменклатураЕГАИС       КАК АлкогольнаяПродукция,
		|	Товары.НоменклатураЕГАИС.Объем КАК Объем
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|	И Товары.Номенклатура.АлкогольнаяПродукция
		|	И Товары.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый
		|	И НЕ Товары.Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|",
		"Товары");
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	Шапка.ОрганизацияЕГАИС                    КАК ОрганизацияЕГАИС,
		|	ТабличнаяЧасть.КлючСтроки        КАК ИдентификаторСтроки,
		|	ЕСТЬNULL(ТабличнаяЧастьТовары.НоменклатураЕГАИС, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
		|	ТабличнаяЧасть.Справка2                   КАК Справка2,
		|	ТабличнаяЧасть.АкцизнаяМарка              КАК ШтрихкодУпаковки,
		|	ТабличнаяЧасть.ШтрихкодУпаковки           КАК ШтрихкодРодительскойУпаковки
		|ПОМЕСТИТЬ ВТВложенныеШтрихкодыИсходныеДанные
		|ИЗ
		|	Документ.ЧекККМ.АкцизныеМарки КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТабличнаяЧастьТовары
		|		ПО ТабличнаяЧастьТовары.КлючСтроки = ТабличнаяЧасть.КлючСтроки
		|		И ТабличнаяЧастьТовары.КлючСтроки <> """"
		|		ЛЕВОЕ СОЕДИНЕНИЕ Шапка КАК Шапка
		|		ПО ИСТИНА
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	ШтрихкодУпаковки,
		|	ШтрихкодРодительскойУпаковки
		|");
	
	ПараметрыФормированияТекстаЗапроса = Справочники.ШтрихкодыУпаковокТоваров.ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
	ПараметрыФормированияТекстаЗапроса.ДокументСсылка                  = Неопределено;
	ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Истина;
	ПараметрыФормированияТекстаЗапроса.ИмяПоляАлкогольнаяПродукция     = "НоменклатураЕГАИС";
	ТекстыЗапроса.Добавить(
		Справочники.ШтрихкодыУпаковокТоваров.ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса),
		"ВложенныеШтрихкоды");
	
	МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка",   ДокументСсылка);
	Запрос.УстановитьПараметр("Операция", Перечисления.ВидыДокументовЕГАИС.ЧекККМ);
	
	Если ДополнительныеПараметры = Неопределено Тогда
		ПараметрыЧека = ИнтеграцияЕГАИСУТ.ПараметрыЧека(ДокументСсылка);
		НомерЧека     = ПараметрыЧека.НомерЧека;
		НомерСмены    = ПараметрыЧека.НомерСмены;
		СерийныйНомер = ПараметрыЧека.СерийныйНомер;
	Иначе
		НомерЧека     = ДополнительныеПараметры.НомерЧека;
		НомерСмены    = ДополнительныеПараметры.НомерСмены;
		СерийныйНомер = ДополнительныеПараметры.СерийныйНомер;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НомерЧека",     НомерЧека);
	Запрос.УстановитьПараметр("НомерСмены",    НомерСмены);
	Запрос.УстановитьПараметр("СерийныйНомер", СерийныйНомер);
	
	РезультатыЗапроса = ИнтеграцияГосИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	Возврат ЧекиЕГАИС.ЧекЕГАИСXML(ДокументСсылка, РезультатыЗапроса, МенеджерВременныхТаблиц);
	
КонецФункции

// КонецОбласти

// Возвращает текст запроса для расчета статусов указания серий (С помещениями)
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСПомещениями()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Помещение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Помещение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Помещение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Помещение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Помещение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Помещение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА &ТолькоСерииДляСебестоимости
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеВРозницу
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Помещение = СерииДляЗапроса.Помещение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Помещение = ТоварыДляЗапроса.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий (Без помещений)
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийБезПомещений()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА &ТолькоСерииДляСебестоимости
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеВРозницу
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// КонецОбласти

#КонецЕсли


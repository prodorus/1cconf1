////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьДанныеБольничного(ДокументОбъект, ТекущаяСтрока = Неопределено)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ТекущаяСтрока = Неопределено Тогда
		
		// Выбираем больничные листы для Реестра ЭЛН.
		// В выборку попадают документы:
		// 1. Если НомерВходящегоДокумента ЭЛН еще ни разу не отправлялся
		// 2. Если это последнее исправление больничного листа
		//  Если это исправление то Хеш ЭЛН берется из последнее отправленого реестра,
		// если ЭЛН не отравлялся - то из документа.
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.ЛистокНетрудоспособности,
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.НомерВходящегоДокумента,
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Хеш,
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Ссылка КАК Реестр
		|ПОМЕСТИТЬ ВТРанееОтправленныеЭЛН
		|ИЗ
		|	Документ.РеестрДанныхЭЛНЗаполняемыхРаботодателем.ДанныеЭЛН КАК РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН
		|ГДЕ
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Ссылка <> &ТекущийРеестр
		|	И РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Ссылка.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачислениеПоБольничномуЛисту.Ссылка,
		|	НачислениеПоБольничномуЛисту.НомерВходящегоДокумента,
		|	ВЫБОР
		|		КОГДА ОбработанныеЭЛН.НомерВходящегоДокумента ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Перерасчет
		|ПОМЕСТИТЬ ВТПредварительно
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРанееОтправленныеЭЛН КАК ОбработанныеЭЛН
		|		ПО НачислениеПоБольничномуЛисту.НомерВходящегоДокумента = ОбработанныеЭЛН.НомерВходящегоДокумента
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.Проведен
		|	И НачислениеПоБольничномуЛисту.Хеш <> """"
		|	И НачислениеПоБольничномуЛисту.Организация = &Организация
		|	И НЕ НачислениеПоБольничномуЛисту.Ссылка В
		|				(ВЫБРАТЬ
		|					ОбработанныеЭЛН.ЛистокНетрудоспособности
		|				ИЗ
		|					ВТРанееОтправленныеЭЛН КАК ОбработанныеЭЛН)
		|	И ВЫБОР
		|			КОГДА ОбработанныеЭЛН.ЛистокНетрудоспособности ЕСТЬ НЕ NULL 
		|					И НачислениеПоБольничномуЛисту.Ссылка.МоментВремени < ОбработанныеЭЛН.ЛистокНетрудоспособности.МоментВремени
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПредварительно.Ссылка,
		|	ВТПредварительно.НомерВходящегоДокумента,
		|	ВТПредварительно.Перерасчет
		|ПОМЕСТИТЬ ВТПослендиеДокументы
		|ИЗ
		|	ВТПредварительно КАК ВТПредварительно
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредварительно КАК ВТПредварительно1
		|		ПО ВТПредварительно.НомерВходящегоДокумента = ВТПредварительно1.НомерВходящегоДокумента
		|			И ВТПредварительно.Ссылка.МоментВремени < ВТПредварительно1.Ссылка.МоментВремени
		|ГДЕ
		|	ВТПредварительно1.Ссылка ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРанееОтправленныеЭЛН.ЛистокНетрудоспособности,
		|	ВТРанееОтправленныеЭЛН.НомерВходящегоДокумента,
		|	ВТРанееОтправленныеЭЛН.Хеш,
		|	ВТРанееОтправленныеЭЛН.Реестр
		|ПОМЕСТИТЬ ВТХешиВРеестрах
		|ИЗ
		|	ВТРанееОтправленныеЭЛН КАК ВТРанееОтправленныеЭЛН
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПослендиеДокументы КАК ВТПослендиеДокументы
		|		ПО ВТРанееОтправленныеЭЛН.НомерВходящегоДокумента = ВТПослендиеДокументы.НомерВходящегоДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТХешиВРеестрах.НомерВходящегоДокумента,
		|	ВТХешиВРеестрах.Хеш
		|ПОМЕСТИТЬ ВТХеш
		|ИЗ
		|	ВТХешиВРеестрах КАК ВТХешиВРеестрах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХешиВРеестрах КАК ВТХешиВРеестрах1
		|		ПО ВТХешиВРеестрах.ЛистокНетрудоспособности = ВТХешиВРеестрах1.ЛистокНетрудоспособности
		|			И ВТХешиВРеестрах.Реестр.МоментВремени < ВТХешиВРеестрах1.Реестр.МоментВремени
		|ГДЕ
		|	ВТХешиВРеестрах1.Реестр ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеПоБольничномуЛисту.Ссылка,
		|	НачислениеПоБольничномуЛисту.Сотрудник,
		|	НачислениеПоБольничномуЛисту.ВидРасчета,
		|	НачислениеПоБольничномуЛисту.ВидРасчетаЗаСчетРаботодателя,
		|	НачислениеПоБольничномуЛисту.ДатаНачалаСобытия,
		|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности,
		|	ЕСТЬNULL(ВТХеш.Хеш, НачислениеПоБольничномуЛисту.Хеш) КАК Хеш,
		|	ВТПослендиеДокументы.Перерасчет
		|ПОМЕСТИТЬ ВТДокументыЗаполнения
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПослендиеДокументы КАК ВТПослендиеДокументы
		|		ПО НачислениеПоБольничномуЛисту.Ссылка = ВТПослендиеДокументы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХеш КАК ВТХеш
		|		ПО НачислениеПоБольничномуЛисту.НомерВходящегоДокумента = ВТХеш.НомерВходящегоДокумента";		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ТекущийРеестр", Ссылка);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Хеш
		|ПОМЕСТИТЬ ВТХешБольничного
		|ИЗ
		|	Документ.РеестрДанныхЭЛНЗаполняемыхРаботодателем.ДанныеЭЛН КАК РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН
		|ГДЕ
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.НомерВходящегоДокумента = &НомерВходящегоДокумента
		|	И РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Ссылка.МоментВремени УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачислениеПоБольничномуЛисту.Ссылка,
		|	НачислениеПоБольничномуЛисту.Сотрудник,
		|	НачислениеПоБольничномуЛисту.ВидРасчета,
		|	НачислениеПоБольничномуЛисту.ВидРасчетаЗаСчетРаботодателя,
		|	НачислениеПоБольничномуЛисту.ДатаНачалаСобытия,
		|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности,
		|	ЕСТЬNULL(ВТХешБольничного.Хеш, НачислениеПоБольничномуЛисту.Хеш) КАК Хеш,
		|	ВЫБОР
		|		КОГДА ВТХешБольничного.Хеш ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Перерасчет
		|ПОМЕСТИТЬ ВТДокументыЗаполнения
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту КАК НачислениеПоБольничномуЛисту
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХешБольничного КАК ВТХешБольничного
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ТекущаяСтрока.ЛистокНетрудоспособности);
		Запрос.УстановитьПараметр("НомерВходящегоДокумента", ОбщегоНазначенияЗК.ПолучитьЗначениеРеквизита(ТекущаяСтрока.ЛистокНетрудоспособности, "НомерВходящегоДокумента"));
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДатыАктуальностиМРОТ.ДатаНачалаСобытия,
	|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
	|ПОМЕСТИТЬ ВТРазмерМРОТНаДатуДатаНачалаСобытия
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТДокументыЗаполнения.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
	|	ИЗ
	|		ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|			ПО ВТДокументыЗаполнения.Ссылка.ДатаНачалаСобытия >= МинимальнаяОплатаТрудаРФ.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТДокументыЗаполнения.ДатаНачалаСобытия) КАК ДатыАктуальностиМРОТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиМРОТ.ДатаАктуальности)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(НачислениеПоБольничномуЛистуНачисления.ДатаНачала) КАК ДатаНачалаЗаСчетФСС,
	|	МАКСИМУМ(НачислениеПоБольничномуЛистуНачисления.ДатаОкончания) КАК ДатаОкончанияЗаСчетФСС,
	|	СУММА(НачислениеПоБольничномуЛистуНачисления.Результат) КАК РезультатЗаСчетФСС,
	|	ВТДокументыЗаполнения.Ссылка
	|ПОМЕСТИТЬ ВТОплатаЗаСчетФСС
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛистуНачисления
	|		ПО ВТДокументыЗаполнения.Ссылка = НачислениеПоБольничномуЛистуНачисления.Ссылка
	|			И ВТДокументыЗаполнения.ВидРасчета = НачислениеПоБольничномуЛистуНачисления.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументыЗаполнения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(НачислениеПоБольничномуЛистуНачисления.ДатаНачала) КАК ДатаНачалаЗаСчетРаботодателя,
	|	МАКСИМУМ(НачислениеПоБольничномуЛистуНачисления.ДатаОкончания) КАК ДатаОкончанияЗаСчетРаботодателя,
	|	СУММА(НачислениеПоБольничномуЛистуНачисления.Результат) КАК РезультатЗаСчетРаботодателя,
	|	ВТДокументыЗаполнения.Ссылка
	|ПОМЕСТИТЬ ВТОплатаЗаСчетРаботодателя
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛистуНачисления
	|		ПО ВТДокументыЗаполнения.Ссылка = НачислениеПоБольничномуЛистуНачисления.Ссылка
	|			И ВТДокументыЗаполнения.ВидРасчетаЗаСчетРаботодателя = НачислениеПоБольничномуЛистуНачисления.ВидРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументыЗаполнения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыЗаполнения.Ссылка,
	|	СУММА(НачислениеПоБольничномуЛистуРасчетСреднего2011.Заработок) КАК БазаДляРасчетаСреднего
	|ПОМЕСТИТЬ ВТБазаДляРасчетаСреднего
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.РасчетСреднего2011 КАК НачислениеПоБольничномуЛистуРасчетСреднего2011
	|		ПО ВТДокументыЗаполнения.Ссылка = НачислениеПоБольничномуЛистуРасчетСреднего2011.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументыЗаполнения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыЗаполнения.Ссылка,
	|	СУММА(НачислениеПоБольничномуЛистуНачисления.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТСреднийЗаработок
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛистуНачисления
	|		ПО ВТДокументыЗаполнения.Ссылка = НачислениеПоБольничномуЛистуНачисления.Ссылка
	|ГДЕ
	|	НачислениеПоБольничномуЛистуНачисления.Результат > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументыЗаполнения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыЗаполнения.Ссылка,
	|	ГОД(РасчетСреднегоЗаработка.БазовыйПериодНачало) КАК РасчетныйГод,
	|	РасчетСреднегоЗаработка.ДнейБолезниУходаЗаДетьми КАК ОтработаноДней,
	|	ДЕНЬГОДА(КОНЕЦПЕРИОДА(РасчетСреднегоЗаработка.БазовыйПериодНачало, ГОД)) КАК ДнейВГоду
	|ПОМЕСТИТЬ ВТРасчетСреднегоЗаработкаДляПособийПоМатеринству
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.РасчетСреднего2011 КАК РасчетСреднегоЗаработка
	|		ПО ВТДокументыЗаполнения.Ссылка = РасчетСреднегоЗаработка.Ссылка
	|ГДЕ
	|	ВТДокументыЗаполнения.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|	И НЕ ВТДокументыЗаполнения.Ссылка.РасчетПоПравилам2010Года
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТДокументыЗаполнения.Ссылка,
	|	ГодыРасчетаСреднего.Год,
	|	0,
	|	ДЕНЬГОДА(ДОБАВИТЬКДАТЕ(ДАТАВРЕМЯ(1, 12, 31), ГОД, ГодыРасчетаСреднего.Год - 1))
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НачислениеПоБольничномуЛисту.ГодыРасчетаСреднего2011 КАК ГодыРасчетаСреднего
	|		ПО ВТДокументыЗаполнения.Ссылка = ГодыРасчетаСреднего.Ссылка
	|ГДЕ
	|	ВТДокументыЗаполнения.ПричинаНетрудоспособности = ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|	И НЕ ВТДокументыЗаполнения.Ссылка.РасчетПоПравилам2010Года
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтработанныеДни.Ссылка,
	|	СУММА(ОтработанныеДни.ДнейВГоду - ОтработанныеДни.ОтработаноДней) КАК ОтработаноДней
	|ПОМЕСТИТЬ ВТОтработаноДнейДляПособийПоМатеринству
	|ИЗ
	|	(ВЫБРАТЬ
	|		РасчетСреднегоЗаработка.Ссылка КАК Ссылка,
	|		РасчетСреднегоЗаработка.РасчетныйГод КАК РасчетныйГод,
	|		СУММА(РасчетСреднегоЗаработка.ОтработаноДней) КАК ОтработаноДней,
	|		МАКСИМУМ(РасчетСреднегоЗаработка.ДнейВГоду) КАК ДнейВГоду
	|	ИЗ
	|		ВТРасчетСреднегоЗаработкаДляПособийПоМатеринству КАК РасчетСреднегоЗаработка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РасчетСреднегоЗаработка.Ссылка,
	|		РасчетСреднегоЗаработка.РасчетныйГод) КАК ОтработанныеДни
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтработанныеДни.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиОрганизаций.ВидЗанятости,
	|	СотрудникиОрганизаций.Физлицо.ИНН КАК ИНН,
	|	СотрудникиОрганизаций.Физлицо.СтраховойНомерПФР КАК СНИЛС,
	|	ВТДокументыЗаполнения.Ссылка,
	|	СотрудникиОрганизаций.Физлицо,
	|	СотрудникиОрганизаций.ЗанимаемыхСтавок
	|ПОМЕСТИТЬ ВТДанныеСотрудника
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ВТДокументыЗаполнения.Сотрудник = СотрудникиОрганизаций.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыЗаполнения.Ссылка КАК ЛистокНетрудоспособности,
	|	ВТДокументыЗаполнения.Сотрудник,
	|	ВТДокументыЗаполнения.Ссылка.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ВТДокументыЗаполнения.Ссылка.ДатаВыходаНаРаботу КАК ДатаВыходаНаРаботу,
	|	ВТДокументыЗаполнения.Ссылка.УсловияИсчисленияКод1 КАК УсловияИсчисленияКод1,
	|	ВТДокументыЗаполнения.Ссылка.УсловияИсчисленияКод2 КАК УсловияИсчисленияКод2,
	|	ВТДокументыЗаполнения.Ссылка.УсловияИсчисленияКод3 КАК УсловияИсчисленияКод3,
	|	ВТДокументыЗаполнения.Ссылка.ДатаАктаН1 КАК ДатаАктаН1,
	|	ВТДокументыЗаполнения.Ссылка.ДатаНачалаРаботы КАК ДатаНачалаРаботы,
	|	ВТДокументыЗаполнения.Ссылка.СтажЛет КАК СтажЛет,
	|	ВТДокументыЗаполнения.Ссылка.СтажМесяцев КАК СтажМесяцев,
	|	ВЫБОР
	|		КОГДА ВТДокументыЗаполнения.Ссылка.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|			ТОГДА ВТДокументыЗаполнения.Ссылка.СтажБезНестраховыхПериодовЛет
	|		ИНАЧЕ ВТДокументыЗаполнения.Ссылка.СтажЛет
	|	КОНЕЦ КАК СтажБезНестраховыхПериодовЛет,
	|	ВЫБОР
	|		КОГДА ВТДокументыЗаполнения.Ссылка.ВыплатаЗаСчетФедеральногоБюджета = ЗНАЧЕНИЕ(Перечисление.ВыплатыПособийЗаСчетФедеральногоБюджета.ЗачетНестраховыхПериодов)
	|			ТОГДА ВТДокументыЗаполнения.Ссылка.СтажБезНестраховыхПериодовСтажМесяцев
	|		ИНАЧЕ ВТДокументыЗаполнения.Ссылка.СтажМесяцев
	|	КОНЕЦ КАК СтажБезНестраховыхПериодовСтажМесяцев,
	|	ВТДокументыЗаполнения.Ссылка.ДатаНачалаОплаты КАК ДатаНачалаОплаты,
	|	ДОБАВИТЬКДАТЕ(ВТДокументыЗаполнения.Ссылка.ДатаНачалаОплаты, ДЕНЬ, ВТДокументыЗаполнения.Ссылка.ДнейОплаты - 1) КАК ДатаОкончанияОплаты,
	|	ВТДокументыЗаполнения.Ссылка.ВыплатаЗаСчетФедеральногоБюджета КАК ВыплатаЗаСчетФедеральногоБюджета,
	|	ВЫБОР
	|		КОГДА ВТДокументыЗаполнения.ПричинаНетрудоспособности <> ЗНАЧЕНИЕ(Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам)
	|				ИЛИ НЕ ВТДокументыЗаполнения.Ссылка.РасчетПоПравилам2010Года
	|			ТОГДА ВЫБОР
	|					КОГДА ВТБазаДляРасчетаСреднего.БазаДляРасчетаСреднего > ЕСТЬNULL(ВТРазмерМРОТНаДатуДатаНачалаСобытия.Размер, 0)
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(ВТДанныеСотрудника.ЗанимаемыхСтавок, 0) <= 0
	|									ТОГДА 1
	|								КОГДА ЕСТЬNULL(ВТДанныеСотрудника.ЗанимаемыхСтавок, 0) > 1
	|									ТОГДА 1
	|								ИНАЧЕ ЕСТЬNULL(ВТДанныеСотрудника.ЗанимаемыхСтавок, 0)
	|							КОНЕЦ / ЕСТЬNULL(ВТОтработаноДнейДляПособийПоМатеринству.ОтработаноДней, 730) * ВТБазаДляРасчетаСреднего.БазаДляРасчетаСреднего
	|					ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ВТРазмерМРОТНаДатуДатаНачалаСобытия.Размер, 0) * ВЫБОР
	|								КОГДА ЕСТЬNULL(ВТДанныеСотрудника.ЗанимаемыхСтавок, 0) = 0
	|									ТОГДА 1
	|								ИНАЧЕ ЕСТЬNULL(ВТДанныеСотрудника.ЗанимаемыхСтавок, 0)
	|							КОНЕЦ * 24 / ЕСТЬNULL(ВТОтработаноДнейДляПособийПоМатеринству.ОтработаноДней, 730) КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		КОГДА НЕ ВТДокументыЗаполнения.Ссылка.РасчетПособияИзТарифнойСтавки
	|			ТОГДА 0
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СреднийДневнойЗаработок,
	|	ВТБазаДляРасчетаСреднего.БазаДляРасчетаСреднего КАК БазаДляРасчетаСреднегоЗаработка,
	|	ВТОплатаЗаСчетФСС.ДатаНачалаЗаСчетФСС КАК ДатаНачалаОплатыФСС,
	|	ВТОплатаЗаСчетФСС.ДатаОкончанияЗаСчетФСС КАК ДатаОкончанияОплатыФСС,
	|	ВТОплатаЗаСчетФСС.РезультатЗаСчетФСС КАК СуммаОплатыЗаСчетФСС,
	|	ВТОплатаЗаСчетРаботодателя.РезультатЗаСчетРаботодателя КАК СуммаОплатыЗаСчетРаботодателя,
	|	ВТДанныеСотрудника.ИНН,
	|	ВТДанныеСотрудника.СНИЛС,
	|	ВТДанныеСотрудника.ВидЗанятости,
	|	ВТДокументыЗаполнения.Хеш КАК Хеш,
	|	ВТДокументыЗаполнения.Перерасчет КАК Перерасчет,
	|	ВТДанныеСотрудника.Физлицо,
	|	ВТДокументыЗаполнения.Ссылка.ДнейОплаты КАК ДнейОплаты
	|ИЗ
	|	ВТДокументыЗаполнения КАК ВТДокументыЗаполнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОплатаЗаСчетФСС КАК ВТОплатаЗаСчетФСС
	|		ПО ВТДокументыЗаполнения.Ссылка = ВТОплатаЗаСчетФСС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОплатаЗаСчетРаботодателя КАК ВТОплатаЗаСчетРаботодателя
	|		ПО ВТДокументыЗаполнения.Ссылка = ВТОплатаЗаСчетРаботодателя.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаДляРасчетаСреднего КАК ВТБазаДляРасчетаСреднего
	|		ПО ВТДокументыЗаполнения.Ссылка = ВТБазаДляРасчетаСреднего.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСреднийЗаработок КАК ВТСреднийЗаработок
	|		ПО ВТДокументыЗаполнения.Ссылка = ВТСреднийЗаработок.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудника КАК ВТДанныеСотрудника
	|		ПО ВТДокументыЗаполнения.Ссылка = ВТДанныеСотрудника.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерМРОТНаДатуДатаНачалаСобытия КАК ВТРазмерМРОТНаДатуДатаНачалаСобытия
	|		ПО ВТДокументыЗаполнения.ДатаНачалаСобытия = ВТРазмерМРОТНаДатуДатаНачалаСобытия.ДатаНачалаСобытия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтработаноДнейДляПособийПоМатеринству КАК ВТОтработаноДнейДляПособийПоМатеринству
	|		ПО ВТДокументыЗаполнения.Ссылка = ВТОтработаноДнейДляПособийПоМатеринству.Ссылка";
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
		КонецЕсли;
	Иначе
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			ДокументОбъект.ДанныеЭЛН.Очистить();
			Возврат;
		КонецЕсли;
		
		ДокументОбъект.ДанныеЭЛН.Загрузить(Результат.Выгрузить());
		
	КонецЕсли;

КонецПроцедуры

#Если ТолстыйКлиентОбычноеПриложение Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
			
КонецФункции // Печать() 

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

Процедура Автозаполнение(ДокументОбъект, ТекущаяСтрока = Неопределено) Экспорт
	
	ЗаполнитьДанныеБольничного(ДокументОбъект, ТекущаяСтрока);
	
КонецПроцедуры

Функция СформироватьЗапросПоШапкеДокументаДляПроверки()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателем.РеестрСоставил,
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателем.ТелефонСоставителя,
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателем.АдресЭлектроннойПочтыСоставителя,
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателем.РегистрационныйНомерФСС
	|ИЗ
	|	Документ.РеестрДанныхЭЛНЗаполняемыхРаботодателем КАК РеестрДанныхЭЛНЗаполняемыхРаботодателем
	|ГДЕ
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателем.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Возврат Запрос.Выполнить();
КонецФункции

Функция СформироватьЗапросПоТЧДанныеЭЛНДляПроверки() 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Перерасчет,
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.КодПричиныПерерасчета,
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.ТекстПричиныПерерасчета,
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.НомерСтроки
	|ИЗ
	|	Документ.РеестрДанныхЭЛНЗаполняемыхРаботодателем.ДанныеЭЛН КАК РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН
	|ГДЕ
	|	РеестрДанныхЭЛНЗаполняемыхРаботодателемДанныеЭЛН.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Возврат Запрос.Выполнить();
КонецФункции
 
Процедура ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоСтрокамДокумента = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = "Проверка документа: " + Строка(Ссылка);
	
	Обработка = глЗначениеПеременной("глОбработкаСообщений");
	СообщенияРазделПроверки = Обработка.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Информация);
	БылоСтрок = Обработка.Сообщения.Строки.Количество();
	
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокументаДляПроверки().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	Если ВыборкаПоСтрокамДокумента = Неопределено Тогда
		ВыборкаПоСтрокамДокумента = СформироватьЗапросПоТЧДанныеЭЛНДляПроверки().Выбрать();
	КонецЕсли;
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РеестрСоставил) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан составитель реестра!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ТелефонСоставителя) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан телефон составителя реестра!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.АдресЭлектроннойПочтыСоставителя) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("Не указан адрес электронной почты составителя реестра!", Отказ, Заголовок);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РегистрационныйНомерФСС) Тогда
		ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке("У организации не заполнен регистрационный номер ФСС!", Отказ, Заголовок);
	КонецЕсли;
	
	Пока ВыборкаПоСтрокамДокумента.Следующий() Цикл
		ТекстОшибкиСНомеромСтроки = НСтр("ru='В строке номер %НомерСтроки%: '");
		ТекстОшибкиСНомеромСтроки = СтрЗаменить(ТекстОшибкиСНомеромСтроки, "%НомерСтроки%", ВыборкаПоСтрокамДокумента.НомерСтроки);
		
		Если ВыборкаПоСтрокамДокумента.Перерасчет Тогда 
			Если ПустаяСтрока(ВыборкаПоСтрокамДокумента.ТекстПричиныПерерасчета) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Необходимо заполнить текст причины перерасчета", Отказ, Заголовок);
			КонецЕсли;
			Если (ПустаяСтрока(ВыборкаПоСтрокамДокумента.ТекстПричиныПерерасчета) Или ПустаяСтрока(ВыборкаПоСтрокамДокумента.КодПричиныПерерасчета)) Тогда
				ОбщегоНазначенияЗК.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Необходимо заполнить код причины перерасчета", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	ИначеЕсли Не СообщатьОбУспехе Тогда
		Обработка.Сообщения.Строки.Удалить(СообщенияРазделПроверки);
	КонецЕсли;
	
	Если СообщатьОбУспехе И БылоСтрок = Обработка.Сообщения.Строки.Количество() Тогда
		Обработка.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , СообщенияРазделПроверки);		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь);
	
	Если Отказ тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;

КонецПроцедуры


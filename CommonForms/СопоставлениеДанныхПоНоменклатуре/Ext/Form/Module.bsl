////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("СпособОбработки") Тогда
		СпособОбработки = Параметры.СпособОбработки;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭлектронныйДокумент") Тогда
		ЭлектронныйДокумент = Параметры.ЭлектронныйДокумент;
		Если ОбщегоНазначения.ЭтоСсылка(ТипЗнч(ЭлектронныйДокумент)) Тогда
			ЭлектронныйДокументСсылка = ЭлектронныйДокумент;
		КонецЕсли;
		Если ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументВходящий")
			ИЛИ ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументИсходящий") Тогда
			Элементы.ПредставлениеЭД.Заголовок = ЭлектронныеДокументыСлужебный.ПолучитьПредставлениеЭД(ЭлектронныйДокумент);
		Иначе
			Элементы.ГруппаЭД.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("НеОткрыватьФормуПриОтсутствииНесопоставленнойНоменклатуры") Тогда
		НеОткрыватьФормуПриОтсутствииНесопоставленнойНоменклатуры = Параметры.НеОткрыватьФормуПриОтсутствииНесопоставленнойНоменклатуры;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭлектронныйДокумент) Тогда
		ТекстСообщения = НСтр("ru = 'Не выбран электронный документ'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ЭлектронныйДокумент", , Отказ);
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ЭлектронныйДокумент) = Тип("Структура") Тогда
		// ЭлектронныйДокумент в случае сопоставления в однократной сделке - структура.
		ВладелецЭД   = ЭлектронныйДокумент.ВладелецФайла;
		ВидЭД        = ЭлектронныйДокумент.ВидЭД;
		СпособОбмена = ЭлектронныйДокумент.СпособОбменаЭД;
		Контрагент   = ЭлектронныйДокумент.Контрагент;
	Иначе
		РеквизитыЭД = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйДокумент, "ВидЭД, Контрагент, ТипЭлементаВерсииЭД");
		ВидЭД               = РеквизитыЭД.ВидЭД;
		Контрагент          = РеквизитыЭД.Контрагент;
		ТипЭлементаВерсииЭД = РеквизитыЭД.ТипЭлементаВерсииЭД;
	КонецЕсли;
	
	Если Параметры.Свойство("ВладелецЭД") Тогда
		ВладелецЭД = Параметры.ВладелецЭД;
	КонецЕсли;
	
	Если (ВидЭД = Перечисления.ВидыЭД.СчетФактура
		ИЛИ ВидЭД = Перечисления.ВидыЭД.КорректировочныйСчетФактура)
		И ТипЭлементаВерсииЭД <> Перечисления.ТипыЭлементовВерсииЭД.СЧФДОПУПД
		И ТипЭлементаВерсииЭД <> Перечисления.ТипыЭлементовВерсииЭД.КСЧФДИСУКД Тогда
		
		ЗакрытьНаКлиенте = Истина;
		Возврат;
	КонецЕсли;
	
	ПрочитатьНоменклатуруКонтрагентаСервер();
	
	Если НеОткрыватьФормуПриОтсутствииНесопоставленнойНоменклатуры
		И НесопоставленнаяНоменклатураКонтрагента.Количество() = 0 Тогда
		
		Если ВидЭД = Перечисления.ВидыЭД.КаталогТоваров
			И (ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументВходящий")
				ИЛИ ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументИсходящий")) Тогда
			СохранитьДанныеКаталога(ЭлектронныйДокумент);
		КонецЕсли;
		
		// Форму открывать не требуется
		Если ЗначениеЗаполнено(ЭлектронныйДокументСсылка) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Номенклатура уже сопоставлена.'"), ЭлектронныйДокументСсылка);
		КонецЕсли;
		
		ЗакрытьНаКлиенте = Истина;
	КонецЕсли;
	
	// Обработка колонки Номенклатуры.
	ИмяСправочникаНоменклатура = ЭлектронныеДокументыПовтИсп.ПолучитьИмяПрикладногоСправочника("Номенклатура");
	ТипНоменклатуры = Новый ОписаниеТипов("СправочникСсылка." + ИмяСправочникаНоменклатура);
	Элементы.НоваяНоменклатураКонтрагентаНоменклатура.ОграничениеТипа = ТипНоменклатуры;
	
	// Обработка колонки Характеристика номенклатуры.
	ИспользуютсяХарактеристикиНаменклатуры = ЭлектронныеДокументыПовтИсп.ДополнительнаяАналитикаСправочникХарактеристикиНоменклатуры();
	Элементы.НоваяНоменклатураКонтрагентаХарактеристикаНоменклатуры.Видимость = ИспользуютсяХарактеристикиНаменклатуры;
	Если ИспользуютсяХарактеристикиНаменклатуры Тогда
		ИмяСправочникаХарактеристикиНоменклатуры = ЭлектронныеДокументыПовтИсп.ПолучитьИмяПрикладногоСправочника(
			"ХарактеристикиНоменклатуры");
		ТипХарактеристикаНоменклатуры = Новый ОписаниеТипов("СправочникСсылка." + ИмяСправочникаХарактеристикиНоменклатуры);
		Элементы.НоваяНоменклатураКонтрагентаХарактеристикаНоменклатуры.ОграничениеТипа = ТипХарактеристикаНоменклатуры;
	КонецЕсли;
	
	// Обработка колонки "Упаковка номенклатуры".
	ИспользуютсяУпаковкиНоменклатуры = ЭлектронныеДокументыПовтИсп.ДополнительнаяАналитикаСправочникУпаковкиНоменклатуры();
	Элементы.НоваяНоменклатураКонтрагентаУпаковка.Видимость = ИспользуютсяУпаковкиНоменклатуры;
	Если ИспользуютсяУпаковкиНоменклатуры Тогда
		ИмяСправочникаУпаковкиНоменклатуры = ЭлектронныеДокументыПовтИсп.ПолучитьИмяПрикладногоСправочника(
			"УпаковкиНоменклатуры");
		ТипУпаковкаНоменклатуры = Новый ОписаниеТипов("СправочникСсылка." + ИмяСправочникаУпаковкиНоменклатуры);
		Элементы.НоваяНоменклатураКонтрагентаУпаковка.ОграничениеТипа = ТипУпаковкаНоменклатуры;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПерезаполнитьПриЗакрытии Тогда
		ВыполнитьДействияПриЗакрытииФормы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗакрытьНаКлиенте Тогда
		ПерезаполнитьЭД();
		Отказ = Истина
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПрочитатьНоменклатуруКонтрагента(Команда)
	
	Если Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru = 'Несохраненные изменения будут утеряны.
			|Продолжить?'");
		
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,, "Заполнение списка номенклатуры") <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
	ПрочитатьНоменклатуруКонтрагентаСервер();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНоменклатуруКонтрагента(Команда)
	
	Отказ = Ложь;
	ЗаписатьНоменклатуруКонтрагентаСервер(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПерезаполнитьПриЗакрытии = Истина;
	Закрыть(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ТАБЛИЦЫ НЕСОПОСТАВЛЕННАЯ НОМЕНКЛАТУРА КОНТРАГЕНТА

&НаКлиенте
Процедура НесопоставленнаяНоменклатураКонтрагентаПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НесопоставленнаяНоменклатураКонтрагентаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Элемент.ТекущийЭлемент.Имя = "НоваяНоменклатураКонтрагентаНаименованиеНоменклатурыКонтрагента" Тогда
		ЭлектронныеДокументыКлиентПереопределяемый.ОткрытьЭлементНоменклатурыПоставщика(Элемент.ТекущиеДанные.Идентификатор);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ВыполнитьДействияПриЗакрытииФормы()
	
	Если СпособОбмена = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.БыстрыйОбмен") Тогда
		Возврат;
	КонецЕсли;
	
	ПерезаполнитьЭД();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеЭДНажатие(Элемент)
	
	ЭлектронныеДокументыСлужебныйКлиент.ОткрытьЭДДляПросмотра(ЭлектронныйДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура НоваяНоменклатураКонтрагентаНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтруктураПараметров = Новый Структура("Контрагент", Контрагент);
	СтруктураПараметров.Вставить("Номенклатура",
		Элементы.НесопоставленнаяНоменклатураКонтрагента.ТекущиеДанные.Номенклатура);
		
	ЭлектронныеДокументыКлиентПереопределяемый.ОткрытьФормуСопоставленияНоменклатуры(Элемент, СтруктураПараметров,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьДанныеКаталога(СсылкаНаЭД)
	
	ЭтоОднократнаяСделка = Ложь;
	
	Если ТипЗнч(СсылкаНаЭД) = Тип("ДокументСсылка.ЭлектронныйДокументВходящий") Тогда
		СсылкаНаЭД = ЭлектронныеДокументыСлужебный.ПрисоединенныйФайл(СсылкаНаЭД);
	КонецЕсли;
	
	Если ТипЗнч(СсылкаНаЭД) = Тип("СправочникСсылка.ЭДПрисоединенныеФайлы") Тогда
		ДопИнформацияПоЭД = ПрисоединенныеФайлы.ПолучитьДанныеФайла(СсылкаНаЭД,
		                                                            СсылкаНаЭД.УникальныйИдентификатор(),
		                                                            Истина);
	ИначеЕсли ТипЗнч(СсылкаНаЭД) = Тип("Структура") Тогда // однократная сделка
		ДопИнформацияПоЭД = Новый Структура;
		ДопИнформацияПоЭД.Вставить("СсылкаНаДвоичныеДанныеФайла", СсылкаНаЭД.ДанныеФайлаРазбора);
		ДопИнформацияПоЭД.Вставить("Расширение", "xml");
		ЭтоОднократнаяСделка = Истина;
	КонецЕсли;
	
	Если ДопИнформацияПоЭД.Свойство("СсылкаНаДвоичныеДанныеФайла")
		И ЗначениеЗаполнено(ДопИнформацияПоЭД.СсылкаНаДвоичныеДанныеФайла) Тогда
		
		ДанныеЭД = ПолучитьИзВременногоХранилища(ДопИнформацияПоЭД.СсылкаНаДвоичныеДанныеФайла);
		
		Если ЗначениеЗаполнено(ДопИнформацияПоЭД.Расширение) Тогда
			ИмяФайла = ЭлектронныеДокументыСлужебный.ТекущееИмяВременногоФайла(ДопИнформацияПоЭД.Расширение);
		Иначе
			ИмяФайла = ЭлектронныеДокументыСлужебный.ТекущееИмяВременногоФайла("xml");
		КонецЕсли;
		
		Если ИмяФайла = Неопределено Тогда
			ТекстОшибки = НСтр("ru = 'Не удалось просмотреть электронный документ. Проверьте настройку рабочего каталога'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			Возврат;
		КонецЕсли;
		
		Если Не ЭтоОднократнаяСделка Тогда
			ВыборкаЭДДопДанных = ЭлектронныеДокументыСлужебный.ВыборкаДопДанныеЭД(СсылкаНаЭД);
			Если ВыборкаЭДДопДанных.Следующий() Тогда
				ДопДанныеЭД = ПрисоединенныеФайлы.ПолучитьДанныеФайла(
																ВыборкаЭДДопДанных.Ссылка,
																ВыборкаЭДДопДанных.Ссылка.УникальныйИдентификатор(),
																Истина);
				СсылкаНаДДДопДанныхЭД = "";
				Если ДопДанныеЭД.Свойство("СсылкаНаДвоичныеДанныеФайла", СсылкаНаДДДопДанныхЭД)
						И ЗначениеЗаполнено(СсылкаНаДДДопДанныхЭД) Тогда
					ДанныеДопФайла = ПолучитьИзВременногоХранилища(СсылкаНаДДДопДанныхЭД);
			
					Если ЗначениеЗаполнено(ДопДанныеЭД.Расширение) Тогда
						ИмяФайлаДопДанных = ЭлектронныеДокументыСлужебный.ТекущееИмяВременногоФайла(ДопДанныеЭД.Расширение);
					Иначе
						ИмяФайлаДопДанных = ЭлектронныеДокументыСлужебный.ТекущееИмяВременногоФайла("xml");
					КонецЕсли;
			
					Если ИмяФайлаДопДанных = Неопределено Тогда
						ТекстОшибки = НСтр("ru = 'Не удалось получить доп. данные электронного документа.
												| Проверьте настройку рабочего каталога'");
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
						Возврат;
					КонецЕсли;
					ДанныеДопФайла.Записать(ИмяФайлаДопДанных);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ДанныеЭД.Записать(ИмяФайла);
		
		Если Найти(ДопИнформацияПоЭД.Расширение, "zip") > 0 Тогда
			
			ПапкаДляРаспаковки = ЭлектронныеДокументыСлужебный.РабочийКаталог(, СсылкаНаЭД.УникальныйИдентификатор());
			
			Если ПапкаДляРаспаковки = Неопределено Тогда
				ТекстОшибки = НСтр("ru = 'Не удалось просмотреть электронный документ. Проверьте настройку рабочего каталога'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				УдалитьФайлы(ИмяФайла);
				УдалитьФайлы(ПапкаДляРаспаковки);
				Возврат;
			КонецЕсли;
			
			Попытка
				ЗИПЧтение = Новый ЧтениеZipФайла(ИмяФайла);
				ЗипЧтение.ИзвлечьВсе(ПапкаДляРаспаковки);
			Исключение
				ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
				Если ЗИПЧтение = Неопределено Тогда
					ТекстСообщения = НСтр("ru = 'Невозможно прочитать транспортный архив'");
				Иначе
					Если НЕ ЭлектронныеДокументыСлужебный.ВозможноИзвлечьФайлы(ЗипЧтение, ПапкаДляРаспаковки) Тогда
						ТекстСообщения = ЭлектронныеДокументыПовтИсп.ПолучитьСообщениеОбОшибке("006");
					КонецЕсли;
					ЗИПЧтение.Закрыть();
				КонецЕсли;
				Операция = НСтр("ru = 'Распаковка ЭД'");
				ЭлектронныеДокументыСлужебныйВызовСервера.ОбработатьИсключениеПоЭДНаСервере(Операция, ТекстОшибки, ТекстСообщения);
				УдалитьФайлы(ИмяФайла);
				Возврат;
			КонецПопытки;
			
			ФайлыАрхиваXML = НайтиФайлы(ПапкаДляРаспаковки, "*.xml");
			Для Каждого РаспакованныйФайл Из ФайлыАрхиваXML Цикл
				ИмяФайлаДанных = РаспакованныйФайл.ПолноеИмя;
			КонецЦикла;
			
			МассивФайловКартинок = НайтиФайлы(ПапкаДляРаспаковки, "*.zip", Истина);
			Если МассивФайловКартинок.Количество() > 0 Тогда
				ФайлКартинок = МассивФайловКартинок[0];
				ИмяФайлаКартинок = ФайлКартинок.ПолноеИмя;
			КонецЕсли;
			
		ИначеЕсли Найти(ДопИнформацияПоЭД.Расширение, "xml") > 0 Тогда
			
			ИмяФайлаДанных = ИмяФайла;
			
		КонецЕсли;
		
		СтруктураРазбора = ЭлектронныеДокументыВнутренний.СформироватьДеревоРазбора(
			ИмяФайлаДанных, Перечисления.НаправленияЭД.Входящий, ИмяФайлаДопДанных, ИмяФайлаКартинок);
			
		УдалитьФайлы(ИмяФайла);
		
		Если НЕ ИмяФайлаДопДанных = Неопределено Тогда
			УдалитьФайлы(ИмяФайлаДопДанных);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПапкаДляРаспаковки) Тогда
			УдалитьФайлы(ПапкаДляРаспаковки);
		КонецЕсли;
																			
		Если СтруктураРазбора <> Неопределено И СтруктураРазбора.Свойство("ДеревоРазбора") Тогда
			ЭлектронныеДокументыПереопределяемый.СохранитьДанныеОбъектаВБД(
											СтруктураРазбора.СтрокаОбъекта,
											СтруктураРазбора.ДеревоРазбора);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьЭД()
	
	Если ЗначениеЗаполнено(ВладелецЭД) Тогда
		ЭД = ?(ТипЗнч(ЭлектронныйДокумент) = Тип("Структура"), Неопределено, ЭлектронныйДокумент);
		ЭлектронныеДокументыКлиент.ПерезаполнитьДокумент(ВладелецЭД, ,Истина, ЭД, СпособОбработки);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция БыстрыйОбменТаблицаИнформацияОТоваре(ЭД)
	
	Перем ТаблицаВозврата;
	ВремФайл = ПолучитьИмяВременногоФайла("xml");
	ДвоичныеДанныеФайлаРазбора = ПолучитьИзВременногоХранилища(ЭД.ДанныеФайлаРазбора);
	ДвоичныеДанныеФайлаРазбора.Записать(ВремФайл);
	ЭлектронныеДокументыВнутренний.ИнформацияОТовареИзФайлаXML(ВремФайл, ТаблицаВозврата, ЭД);
	УдалитьФайлы(ВремФайл);
	
	Возврат ТаблицаВозврата;
	
КонецФункции

&НаСервере
Процедура ПрочитатьНоменклатуруКонтрагентаСервер()
	
	Запрос = Новый Запрос;
	ЭлектронныеДокументыПереопределяемый.ТекстЗапросаСопоставленияНоменклатуры(Запрос.Текст);
	
	Если НЕ ЗначениеЗаполнено(Запрос.Текст) Тогда
		ТекстСообщения = НСтр("ru = 'Не определено сопоставление номенклатуры и номенклатуры поставщиков.
		|Необходимо заполнить процедуру ЭлектронныеДокументыПереопределяемый.ТекстЗапросаСопоставленияНоменклатуры.'");
		ВызватьИсключение(ТекстСообщения);
	КонецЕсли;
	
	Если ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументВходящий")
		ИЛИ ТипЗнч(ЭлектронныйДокумент) = Тип("ДокументСсылка.ЭлектронныйДокументИсходящий") Тогда
		МассивЭД = Новый Массив;
		МассивЭД.Добавить(ЭлектронныеДокументыСлужебный.ПрисоединенныйФайл(ЭлектронныйДокумент));
		ТаблицаИнформацияОТоваре = ЭлектронныеДокументыВнутренний.ПолучитьИнформациюОТоваре(МассивЭД);
	Иначе
		ТаблицаИнформацияОТоваре = БыстрыйОбменТаблицаИнформацияОТоваре(ЭлектронныйДокумент);
	КонецЕсли;
	
	Если ТаблицаИнформацияОТоваре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаИнформацияОТоваре", ТаблицаИнформацияОТоваре);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	
	ТЗСопоставления = Запрос.Выполнить().Выгрузить();
	ТЗСопоставления.Свернуть("АртикулНоменклатурыКонтрагента, НаименованиеНоменклатурыКонтрагента, ЕдиницаНоменклатурыКонтрагента, Описание, Идентификатор");
	
	НесопоставленнаяНоменклатураКонтрагента.Загрузить(ТЗСопоставления);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНоменклатуруКонтрагентаСервер(Отказ = Ложь)
	
	ЭлектронныеДокументыПереопределяемый.ЗаписатьСопоставлениеНоменклатуры(
																		НесопоставленнаяНоменклатураКонтрагента,
																		Контрагент,
																		Отказ);
	Если ВидЭД = Перечисления.ВидыЭД.КаталогТоваров Тогда
		СохранитьДанныеКаталога(ЭлектронныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

